{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15202", "model_patch": "diff --git a/django/core/validators.py b/django/core/validators.py\nindex bd1f78e..3ecc62a 100644\n--- a/django/core/validators.py\n+++ b/django/core/validators.py\n@@ -116,7 +116,7 @@ class URLValidator(RegexValidator):\n                 try:\n                     scheme, netloc, path, query, fragment = urlsplit(value)\n                 except ValueError:  # for example, \"Invalid IPv6 URL\"\n-                    raise ValidationError(self.message, code=self.code, params={'value': value})\n+                    raise ValidationError(self.message, code=self.code, params={'value': value}) from None\n                 try:\n                     netloc = punycode(netloc)  # IDN -> ACE\n                 except UnicodeError:  # invalid domain part\n", "occurrence": 2, "normalized_patch": "diff --git a/django/core/validators.py b/django/core/validators.py\nindex debbb3b..608041e 100644\n--- a/django/core/validators.py\n+++ b/django/core/validators.py\n@@ -69,7 +69,7 @@ class URLValidator(RegexValidator):\n                 try:\n                     scheme, netloc, path, query, fragment = urlsplit(value)\n                 except ValueError:\n-                    raise ValidationError(self.message, code=self.code, params={'value': value})\n+                    raise ValidationError(self.message, code=self.code, params={'value': value}) from None\n                 try:\n                     netloc = punycode(netloc)\n                 except UnicodeError:\n", "normalized_occurrence": 4}
