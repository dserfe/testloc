{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-24661", "model_patch": "diff --git a/sympy/parsing/sympy_parser.py b/sympy/parsing/sympy_parser.py\nindex 2ec3cf6..b1a5267 100644\n--- a/sympy/parsing/sympy_parser.py\n+++ b/sympy/parsing/sympy_parser.py\n@@ -1072,7 +1072,11 @@ def parse_expr(s: str, local_dict: Optional[DICT] = None,\n     code = stringify_expr(s, local_dict, global_dict, _transformations)\n \n     if not evaluate:\n-        code = compile(evaluateFalse(code), '<string>', 'eval')\n+        if any(op in code for op in ('<', '>', '==', '<=', '>=')):\n+            code = code.replace('<', ',lt,').replace('>', ',gt,').replace('==', ',eq,').replace('<=', ',le,').replace('>=', ',ge,')\n+            code = f\"Rel({code}, evaluate=False)\"\n+        else:\n+            code = compile(evaluateFalse(code), '<string>', 'eval')\n \n     try:\n         rv = eval_expr(code, local_dict, global_dict)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/parsing/sympy_parser.py b/sympy/parsing/sympy_parser.py\nindex 0c06cf1..74d96db 100644\n--- a/sympy/parsing/sympy_parser.py\n+++ b/sympy/parsing/sympy_parser.py\n@@ -511,7 +511,11 @@ def parse_expr(s: str, local_dict: Optional[DICT]=None, transformations: tUnion[\n         _transformations = transformations\n     code = stringify_expr(s, local_dict, global_dict, _transformations)\n     if not evaluate:\n-        code = compile(evaluateFalse(code), '<string>', 'eval')\n+        if any((op in code for op in ('<', '>', '==', '<=', '>='))):\n+            code = code.replace('<', ',lt,').replace('>', ',gt,').replace('==', ',eq,').replace('<=', ',le,').replace('>=', ',ge,')\n+            code = f'Rel({code}, evaluate=False)'\n+        else:\n+            code = compile(evaluateFalse(code), '<string>', 'eval')\n     try:\n         rv = eval_expr(code, local_dict, global_dict)\n         for i in local_dict.pop(null, ()):\n", "normalized_occurrence": 1}
