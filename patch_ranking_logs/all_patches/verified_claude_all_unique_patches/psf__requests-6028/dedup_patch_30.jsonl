{"model_name_or_path": "agentless_claude", "instance_id": "psf__requests-6028", "model_patch": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex d47134b..efbcba6 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -191,6 +191,8 @@ class HTTPAdapter(BaseAdapter):\n             )\n         else:\n             proxy_headers = self.proxy_headers(proxy)\n+            if username and password:\n+                proxy_headers['Proxy-Authorization'] = _basic_auth_str(username, password)\n             manager = self.proxy_manager[proxy] = proxy_from_url(\n                 proxy,\n                 proxy_headers=proxy_headers,\n", "occurrence": 3, "normalized_patch": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex 8bf110e..825d1e4 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -75,6 +75,8 @@ class HTTPAdapter(BaseAdapter):\n             manager = self.proxy_manager[proxy] = SOCKSProxyManager(proxy, username=username, password=password, num_pools=self._pool_connections, maxsize=self._pool_maxsize, block=self._pool_block, **proxy_kwargs)\n         else:\n             proxy_headers = self.proxy_headers(proxy)\n+            if username and password:\n+                proxy_headers['Proxy-Authorization'] = _basic_auth_str(username, password)\n             manager = self.proxy_manager[proxy] = proxy_from_url(proxy, proxy_headers=proxy_headers, num_pools=self._pool_connections, maxsize=self._pool_maxsize, block=self._pool_block, **proxy_kwargs)\n         return manager\n     def cert_verify(self, conn, url, verify, cert):\n", "normalized_occurrence": 3}
