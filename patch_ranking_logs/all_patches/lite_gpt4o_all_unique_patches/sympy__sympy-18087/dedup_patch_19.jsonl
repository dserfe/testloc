{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-18087", "model_patch": "diff --git a/sympy/functions/elementary/trigonometric.py b/sympy/functions/elementary/trigonometric.py\nindex 5205b6e..6ecce4b 100644\n--- a/sympy/functions/elementary/trigonometric.py\n+++ b/sympy/functions/elementary/trigonometric.py\n@@ -341,6 +341,9 @@ class sin(TrigonometricFunction):\n             if m:\n                 return sin(m)*cos(x) + cos(m)*sin(x)\n \n+        if arg.func == sqrt and len(arg.args) == 1 and arg.args[0].func == Pow and arg.args[0].args[0].func == sin and arg.args[0].args[1] == 2:\n+            return abs(sin(arg.args[0].args[0]))\n+\n         if arg.is_zero:\n             return S.Zero\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/trigonometric.py b/sympy/functions/elementary/trigonometric.py\nindex bfdabb3..1b5501c 100644\n--- a/sympy/functions/elementary/trigonometric.py\n+++ b/sympy/functions/elementary/trigonometric.py\n@@ -191,6 +191,8 @@ class sin(TrigonometricFunction):\n             x, m = _peeloff_pi(arg)\n             if m:\n                 return sin(m) * cos(x) + cos(m) * sin(x)\n+        if arg.func == sqrt and len(arg.args) == 1 and (arg.args[0].func == Pow) and (arg.args[0].args[0].func == sin) and (arg.args[0].args[1] == 2):\n+            return abs(sin(arg.args[0].args[0]))\n         if arg.is_zero:\n             return S.Zero\n         if isinstance(arg, asin):\n", "normalized_occurrence": 1}
