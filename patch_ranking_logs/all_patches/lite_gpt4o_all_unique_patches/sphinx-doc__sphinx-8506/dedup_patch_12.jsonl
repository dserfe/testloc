{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8506", "model_patch": "diff --git a/sphinx/parsers.py b/sphinx/parsers.py\nindex 4f93923..6fb3085 100644\n--- a/sphinx/parsers.py\n+++ b/sphinx/parsers.py\n@@ -98,7 +98,11 @@ class RSTParser(docutils.parsers.rst.Parser, Parser):\n \n             inputlines = StringList(lines, document.current_source)\n         else:\n-            inputlines = inputstring\n+            # Relax the option description format to accept custom patterns like [enable=]PATTERN\n+            inputlines = StringList(\n+                [re.sub(r'^\\.\\. option:: (\\[.*?\\])', r'.. option:: \\1', line) for line in inputstring],\n+                document.current_source\n+            )\n \n         self.decorate(inputlines)\n         self.statemachine.run(inputlines, document, inliner=self.inliner)\n@@ -117,4 +121,4 @@ def setup(app: \"Sphinx\") -> Dict[str, Any]:\n         'version': 'builtin',\n         'parallel_read_safe': True,\n         'parallel_write_safe': True,\n-    }\n+    }\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/parsers.py b/sphinx/parsers.py\nindex 101a425..95674a5 100644\n--- a/sphinx/parsers.py\n+++ b/sphinx/parsers.py\n@@ -33,7 +33,7 @@ class RSTParser(docutils.parsers.rst.Parser, Parser):\n             lines = docutils.statemachine.string2lines(inputstring, tab_width=document.settings.tab_width, convert_whitespace=True)\n             inputlines = StringList(lines, document.current_source)\n         else:\n-            inputlines = inputstring\n+            inputlines = StringList([re.sub('^\\\\.\\\\. option:: (\\\\[.*?\\\\])', '.. option:: \\\\1', line) for line in inputstring], document.current_source)\n         self.decorate(inputlines)\n         self.statemachine.run(inputlines, document, inliner=self.inliner)\n         self.finish_parse()\n", "normalized_occurrence": 1}
