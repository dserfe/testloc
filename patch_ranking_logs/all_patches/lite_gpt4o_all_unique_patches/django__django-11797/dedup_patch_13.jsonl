{"model_name_or_path": "agentless", "instance_id": "django__django-11797", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 946e695..80a474f 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -49,8 +49,13 @@ class SQLCompiler:\n         order_by = self.get_order_by()\n         self.where, self.having = self.query.where.split_having()\n         extra_select = self.get_extra_select(order_by, self.select)\n+\n+        # Ensure the original group_by clauses are taken into consideration\n+        original_group_by = self.query.group_by\n         self.has_extra_select = bool(extra_select)\n         group_by = self.get_group_by(self.select + extra_select, order_by)\n+        if original_group_by:\n+            group_by.extend(original_group_by)\n         return extra_select, order_by, group_by\n \n     def get_group_by(self, select, order_by):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex a6b66a9..cc9f158 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -32,8 +32,11 @@ class SQLCompiler:\n         order_by = self.get_order_by()\n         self.where, self.having = self.query.where.split_having()\n         extra_select = self.get_extra_select(order_by, self.select)\n+        original_group_by = self.query.group_by\n         self.has_extra_select = bool(extra_select)\n         group_by = self.get_group_by(self.select + extra_select, order_by)\n+        if original_group_by:\n+            group_by.extend(original_group_by)\n         return (extra_select, order_by, group_by)\n     def get_group_by(self, select, order_by):\n         if self.query.group_by is None:\n", "normalized_occurrence": 1}
