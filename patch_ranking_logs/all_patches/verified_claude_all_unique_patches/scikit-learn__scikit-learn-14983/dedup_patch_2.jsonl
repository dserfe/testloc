{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-14983", "model_patch": "diff --git a/sklearn/model_selection/_split.py b/sklearn/model_selection/_split.py\nindex 8743303..19b288f 100644\n--- a/sklearn/model_selection/_split.py\n+++ b/sklearn/model_selection/_split.py\n@@ -1169,6 +1169,11 @@ class RepeatedKFold(_RepeatedSplits):\n \n     Repeats K-Fold n times with different randomization in each repetition.\n \n+    def __repr__(self):\n+        return ('RepeatedKFold(n_splits=%d, n_repeats=%d, random_state=%s)'\n+                % (self.cvargs['n_splits'], self.n_repeats,\n+                   self.random_state))\n+\n     Read more in the :ref:`User Guide <cross_validation>`.\n \n     Parameters\n@@ -1221,6 +1226,11 @@ class RepeatedStratifiedKFold(_RepeatedSplits):\n     \"\"\"Repeated Stratified K-Fold cross validator.\n \n     Repeats Stratified K-Fold n times with different randomization in each\n+\n+    def __repr__(self):\n+        return ('RepeatedStratifiedKFold(n_splits=%d, n_repeats=%d, random_state=%s)'\n+                % (self.cvargs['n_splits'], self.n_repeats,\n+                   self.random_state))\n     repetition.\n \n     Read more in the :ref:`User Guide <cross_validation>`.\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/model_selection/_split.py b/sklearn/model_selection/_split.py\nindex 7f10fe3..e87564c 100644\n--- a/sklearn/model_selection/_split.py\n+++ b/sklearn/model_selection/_split.py\n@@ -1051,6 +1051,11 @@ class RepeatedKFold(_RepeatedSplits):\n \n     Repeats K-Fold n times with different randomization in each repetition.\n \n+    def __repr__(self):\n+        return ('RepeatedKFold(n_splits=%d, n_repeats=%d, random_state=%s)'\n+                % (self.cvargs['n_splits'], self.n_repeats,\n+                   self.random_state))\n+\n     Read more in the :ref:`User Guide <cross_validation>`.\n \n     Parameters\n@@ -1102,6 +1107,11 @@ class RepeatedStratifiedKFold(_RepeatedSplits):\n     \"\"\"Repeated Stratified K-Fold cross validator.\n \n     Repeats Stratified K-Fold n times with different randomization in each\n+\n+    def __repr__(self):\n+        return ('RepeatedStratifiedKFold(n_splits=%d, n_repeats=%d, random_state=%s)'\n+                % (self.cvargs['n_splits'], self.n_repeats,\n+                   self.random_state))\n     repetition.\n \n     Read more in the :ref:`User Guide <cross_validation>`.\n", "normalized_occurrence": 1}
