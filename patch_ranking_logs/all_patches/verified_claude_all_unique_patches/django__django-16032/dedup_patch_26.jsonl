{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16032", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 250c6ee..efb4615 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1158,6 +1158,8 @@ class Query(BaseExpression):\n     def get_group_by_cols(self, alias=None):\n         if alias:\n             return [Ref(alias, self)]\n+        if self.subquery and not self.group_by and not self.having:\n+            return []\n         external_cols = self.get_external_cols()\n         if any(col.possibly_multivalued for col in external_cols):\n             return [self]\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 4a84de0..1a77054 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -600,6 +600,8 @@ class Query(BaseExpression):\n     def get_group_by_cols(self, alias=None):\n         if alias:\n             return [Ref(alias, self)]\n+        if self.subquery and (not self.group_by) and (not self.having):\n+            return []\n         external_cols = self.get_external_cols()\n         if any((col.possibly_multivalued for col in external_cols)):\n             return [self]\n", "normalized_occurrence": 1}
