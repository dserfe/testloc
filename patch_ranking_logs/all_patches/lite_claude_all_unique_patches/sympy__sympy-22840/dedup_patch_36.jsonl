{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-22840", "model_patch": "diff --git a/sympy/simplify/cse_main.py b/sympy/simplify/cse_main.py\nindex fa99708..f15ad46 100644\n--- a/sympy/simplify/cse_main.py\n+++ b/sympy/simplify/cse_main.py\n@@ -807,6 +807,18 @@ def cse(exprs, symbols=None, optimizations=None, postprocess=None,\n     # Preprocess the expressions to give us better optimization opportunities.\n     reduced_exprs = [preprocess_for_cse(e, optimizations) for e in exprs]\n \n+    # Don't treat MatrixSymbols as common subexpressions\n+    from sympy.matrices.expressions import MatrixSymbol\n+    def filter_opt_subs(expr):\n+        if isinstance(expr, (Basic, MatrixBase)):\n+            if isinstance(expr, MatrixSymbol):\n+                return None\n+            return expr\n+        return None\n+\n+    # Filter out MatrixSymbols from optimization substitutions\n+    reduced_exprs = [filter_opt_subs(e) if isinstance(e, (Basic, MatrixBase)) else e for e in reduced_exprs]\n+\n     if symbols is None:\n         symbols = numbered_symbols(cls=Symbol)\n     else:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/cse_main.py b/sympy/simplify/cse_main.py\nindex d5cc8d7..adfeeb3 100644\n--- a/sympy/simplify/cse_main.py\n+++ b/sympy/simplify/cse_main.py\n@@ -326,6 +326,14 @@ def cse(exprs, symbols=None, optimizations=None, postprocess=None, order='canoni\n     elif optimizations == 'basic':\n         optimizations = basic_optimizations\n     reduced_exprs = [preprocess_for_cse(e, optimizations) for e in exprs]\n+    from sympy.matrices.expressions import MatrixSymbol\n+    def filter_opt_subs(expr):\n+        if isinstance(expr, (Basic, MatrixBase)):\n+            if isinstance(expr, MatrixSymbol):\n+                return None\n+            return expr\n+        return None\n+    reduced_exprs = [filter_opt_subs(e) if isinstance(e, (Basic, MatrixBase)) else e for e in reduced_exprs]\n     if symbols is None:\n         symbols = numbered_symbols(cls=Symbol)\n     else:\n", "normalized_occurrence": 1}
