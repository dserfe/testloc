{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13033", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 13e70df..b5009d1 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -727,7 +727,10 @@ class SQLCompiler:\n         # If we get to this point and the field is a relation to another model,\n         # append the default ordering for that model unless it is the pk\n         # shortcut or the attribute name of the field that is specified.\n-        if field.is_relation and opts.ordering and getattr(field, 'attname', None) != name and name != 'pk':\n+        if (field.is_relation and opts.ordering and \n+            getattr(field, 'attname', None) != name and \n+            name != 'pk' and \n+            not name.endswith('_id')):\n             # Firstly, avoid infinite loops.\n             already_seen = already_seen or set()\n             join_tuple = tuple(getattr(self.query.alias_map[j], 'join_cols', None) for j in joins)\n", "occurrence": 4, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex d98aa67..0f3f443 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -415,7 +415,7 @@ class SQLCompiler:\n         descending = order == 'DESC'\n         pieces = name.split(LOOKUP_SEP)\n         field, targets, alias, joins, path, opts, transform_function = self._setup_joins(pieces, opts, alias)\n-        if field.is_relation and opts.ordering and (getattr(field, 'attname', None) != name) and (name != 'pk'):\n+        if field.is_relation and opts.ordering and (getattr(field, 'attname', None) != name) and (name != 'pk') and (not name.endswith('_id')):\n             already_seen = already_seen or set()\n             join_tuple = tuple((getattr(self.query.alias_map[j], 'join_cols', None) for j in joins))\n             if join_tuple in already_seen:\n", "normalized_occurrence": 32}
