{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-25570", "model_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex 36a655a..94be897 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -733,9 +733,9 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n         self._validate_column_callables(X)\n         self._validate_remainder(X)\n \n-        result = self._fit_transform(X, y, _fit_transform_one)\n+        result = [res for res in self._fit_transform(X, y, _fit_transform_one) if res[1] is not None]\n \n-        if not result:\n+        if not result or all(len(X) == 0 for X, _ in result):\n             self._update_fitted_transformers([])\n             # All transformers are None\n             return np.zeros((X.shape[0], 0))\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex 03f51bb..7bc1919 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -207,8 +207,8 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n         self._validate_transformers()\n         self._validate_column_callables(X)\n         self._validate_remainder(X)\n-        result = self._fit_transform(X, y, _fit_transform_one)\n-        if not result:\n+        result = [res for res in self._fit_transform(X, y, _fit_transform_one) if res[1] is not None]\n+        if not result or all((len(X) == 0 for X, _ in result)):\n             self._update_fitted_transformers([])\n             return np.zeros((X.shape[0], 0))\n         Xs, transformers = zip(*result)\n", "normalized_occurrence": 1}
