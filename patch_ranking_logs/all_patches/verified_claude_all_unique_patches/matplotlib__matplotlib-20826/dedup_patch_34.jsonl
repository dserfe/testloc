{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-20826", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 07605b5..efed5f5 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1303,11 +1303,27 @@ class _AxesBase(martist.Artist):\n         self._shared_axes[\"x\"].clean()\n         self._shared_axes[\"y\"].clean()\n         if self._sharex is not None:\n+            # Restore x-axis visibility and hide labels if not bottom axes\n             self.xaxis.set_visible(xaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            # Only show labels and ticks on bottom-most axes\n+            sharex_axes = [ax for ax in self._shared_axes[\"x\"].get_siblings(self)]\n+            bottom_axes = min(sharex_axes, key=lambda ax: ax.get_position().y0)\n+            for ax in sharex_axes:\n+                ax.xaxis.set_tick_params(labelbottom=ax is bottom_axes)\n+                ax.xaxis.set_tick_params(labeltop=False)\n+                ax.xaxis.set_tick_params(top=False)\n         if self._sharey is not None:\n+            # Restore y-axis visibility and hide labels if not leftmost axes\n             self.yaxis.set_visible(yaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            # Only show labels and ticks on leftmost axes  \n+            sharey_axes = [ax for ax in self._shared_axes[\"y\"].get_siblings(self)]\n+            left_axes = min(sharey_axes, key=lambda ax: ax.get_position().x0)\n+            for ax in sharey_axes:\n+                ax.yaxis.set_tick_params(labelleft=ax is left_axes)\n+                ax.yaxis.set_tick_params(labelright=False)\n+                ax.yaxis.set_tick_params(right=False)\n \n         self.stale = True\n \n@@ -4717,4 +4733,4 @@ class _AxesBase(martist.Artist):\n \n     def get_shared_y_axes(self):\n         \"\"\"Return a reference to the shared axes Grouper object for y axes.\"\"\"\n-        return self._shared_axes[\"y\"]\n+        return self._shared_axes[\"y\"]\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 33a6de3..d1466bb 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -578,9 +578,21 @@ class _AxesBase(martist.Artist):\n         if self._sharex is not None:\n             self.xaxis.set_visible(xaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            sharex_axes = [ax for ax in self._shared_axes['x'].get_siblings(self)]\n+            bottom_axes = min(sharex_axes, key=lambda ax: ax.get_position().y0)\n+            for ax in sharex_axes:\n+                ax.xaxis.set_tick_params(labelbottom=ax is bottom_axes)\n+                ax.xaxis.set_tick_params(labeltop=False)\n+                ax.xaxis.set_tick_params(top=False)\n         if self._sharey is not None:\n             self.yaxis.set_visible(yaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            sharey_axes = [ax for ax in self._shared_axes['y'].get_siblings(self)]\n+            left_axes = min(sharey_axes, key=lambda ax: ax.get_position().x0)\n+            for ax in sharey_axes:\n+                ax.yaxis.set_tick_params(labelleft=ax is left_axes)\n+                ax.yaxis.set_tick_params(labelright=False)\n+                ax.yaxis.set_tick_params(right=False)\n         self.stale = True\n     class ArtistList(MutableSequence):\n         def __init__(self, axes, prop_name, add_name, valid_types=None, invalid_types=None):\n", "normalized_occurrence": 1}
