{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11477", "model_patch": "diff --git a/django/urls/base.py b/django/urls/base.py\nindex e420dc6..77bce7d 100644\n--- a/django/urls/base.py\n+++ b/django/urls/base.py\n@@ -172,9 +172,11 @@ def translate_url(url, lang_code):\n         to_be_reversed = \"%s:%s\" % (match.namespace, match.url_name) if match.namespace else match.url_name\n         with override(lang_code):\n             try:\n-                url = reverse(to_be_reversed, args=match.args, kwargs=match.kwargs)\n+                # Filter out optional kwargs that weren't provided in the original URL\n+                kwargs = {k: v for k, v in match.kwargs.items() if v is not None}\n+                url = reverse(to_be_reversed, args=match.args, kwargs=kwargs)\n             except NoReverseMatch:\n                 pass\n             else:\n                 url = urlunsplit((parsed.scheme, parsed.netloc, url, parsed.query, parsed.fragment))\n-    return url\n+    return url\n", "occurrence": 1, "normalized_patch": "diff --git a/django/urls/base.py b/django/urls/base.py\nindex 4be4b1d..d71699f 100644\n--- a/django/urls/base.py\n+++ b/django/urls/base.py\n@@ -95,7 +95,8 @@ def translate_url(url, lang_code):\n         to_be_reversed = '%s:%s' % (match.namespace, match.url_name) if match.namespace else match.url_name\n         with override(lang_code):\n             try:\n-                url = reverse(to_be_reversed, args=match.args, kwargs=match.kwargs)\n+                kwargs = {k: v for k, v in match.kwargs.items() if v is not None}\n+                url = reverse(to_be_reversed, args=match.args, kwargs=kwargs)\n             except NoReverseMatch:\n                 pass\n             else:\n", "normalized_occurrence": 25}
