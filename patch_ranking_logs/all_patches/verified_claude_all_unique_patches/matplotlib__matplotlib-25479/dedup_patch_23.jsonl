{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-25479", "model_patch": "diff --git a/lib/matplotlib/image.py b/lib/matplotlib/image.py\nindex e8cc2cd..bc9c80f 100644\n--- a/lib/matplotlib/image.py\n+++ b/lib/matplotlib/image.py\n@@ -257,6 +257,13 @@ class _ImageBase(martist.Artist, cm.ScalarMappable):\n                  **kwargs\n                  ):\n         martist.Artist.__init__(self)\n+        # If cmap is a Colormap instance and it's registered under a different name,\n+        # use the registered name to ensure proper lookup\n+        if isinstance(cmap, colors.Colormap):\n+            for name, registered_cmap in cm._colormaps.items():\n+                if registered_cmap is cmap:\n+                    cmap = name\n+                    break\n         cm.ScalarMappable.__init__(self, norm, cmap)\n         if origin is None:\n             origin = mpl.rcParams['image.origin']\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/image.py b/lib/matplotlib/image.py\nindex cfb0226..3de9a21 100644\n--- a/lib/matplotlib/image.py\n+++ b/lib/matplotlib/image.py\n@@ -103,6 +103,11 @@ class _ImageBase(martist.Artist, cm.ScalarMappable):\n     zorder = 0\n     def __init__(self, ax, cmap=None, norm=None, interpolation=None, origin=None, filternorm=True, filterrad=4.0, resample=False, *, interpolation_stage=None, **kwargs):\n         martist.Artist.__init__(self)\n+        if isinstance(cmap, colors.Colormap):\n+            for name, registered_cmap in cm._colormaps.items():\n+                if registered_cmap is cmap:\n+                    cmap = name\n+                    break\n         cm.ScalarMappable.__init__(self, norm, cmap)\n         if origin is None:\n             origin = mpl.rcParams['image.origin']\n", "normalized_occurrence": 1}
