{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-23964", "model_patch": "diff --git a/lib/matplotlib/backends/backend_ps.py b/lib/matplotlib/backends/backend_ps.py\nindex 733d89b..a7c38f0 100644\n--- a/lib/matplotlib/backends/backend_ps.py\n+++ b/lib/matplotlib/backends/backend_ps.py\n@@ -670,7 +670,9 @@ grestore\n \n         self.set_color(*gc.get_rgb())\n \n-        for ps_name, xs_names in stream:\n+        for curr_stream in stream:\n+            if curr_stream:  # Skip empty lines\n+                ps_name, xs_names = curr_stream\n             self.set_font(ps_name, prop.get_size_in_points(), False)\n             thetext = \"\\n\".join(f\"{x:g} 0 m /{name:s} glyphshow\"\n                                 for x, name in xs_names)\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/backends/backend_ps.py b/lib/matplotlib/backends/backend_ps.py\nindex 9b5006f..85a6847 100644\n--- a/lib/matplotlib/backends/backend_ps.py\n+++ b/lib/matplotlib/backends/backend_ps.py\n@@ -331,7 +331,9 @@ class RendererPS(_backend_pdf_ps.RendererPDFPSBase):\n                 curr_stream[1].append((item.x, item.ft_object.get_glyph_name(item.glyph_idx)))\n             stream.append(curr_stream)\n         self.set_color(*gc.get_rgb())\n-        for ps_name, xs_names in stream:\n+        for curr_stream in stream:\n+            if curr_stream:\n+                ps_name, xs_names = curr_stream\n             self.set_font(ps_name, prop.get_size_in_points(), False)\n             thetext = '\\n'.join((f'{x:g} 0 m /{name:s} glyphshow' for x, name in xs_names))\n             self._pswriter.write(f'gsave\\n{self._get_clip_cmd(gc)}\\n{x:g} {y:g} translate\\n{angle:g} rotate\\n{thetext}\\ngrestore\\n')\n", "normalized_occurrence": 1}
