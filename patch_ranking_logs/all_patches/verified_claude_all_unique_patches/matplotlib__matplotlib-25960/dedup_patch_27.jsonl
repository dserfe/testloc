{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-25960", "model_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex eeb18de..817a349 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -1585,11 +1585,21 @@ default: %(va)s\n                       wspace=wspace, hspace=hspace,\n                       width_ratios=width_ratios,\n                       height_ratios=height_ratios)\n+        \n+        # Ensure layout parameters are properly set\n+        gs._wspace = wspace\n+        gs._hspace = hspace\n \n         sfarr = np.empty((nrows, ncols), dtype=object)\n         for i in range(ncols):\n             for j in range(nrows):\n-                sfarr[j, i] = self.add_subfigure(gs[j, i], **kwargs)\n+                subfig = self.add_subfigure(gs[j, i], **kwargs)\n+                # Ensure spacing is applied to subfigures\n+                if i > 0 and wspace is not None:\n+                    subfig._gridspec.set_width_spacing(wspace)\n+                if j > 0 and hspace is not None:\n+                    subfig._gridspec.set_height_spacing(hspace)\n+                sfarr[j, i] = subfig\n \n         if squeeze:\n             # Discarding unneeded dimensions that equal 1.  If we only have one\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 19ec421..cbb0ec5 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -411,10 +411,17 @@ class FigureBase(Artist):\n         return gs\n     def subfigures(self, nrows=1, ncols=1, squeeze=True, wspace=None, hspace=None, width_ratios=None, height_ratios=None, **kwargs):\n         gs = GridSpec(nrows=nrows, ncols=ncols, figure=self, wspace=wspace, hspace=hspace, width_ratios=width_ratios, height_ratios=height_ratios)\n+        gs._wspace = wspace\n+        gs._hspace = hspace\n         sfarr = np.empty((nrows, ncols), dtype=object)\n         for i in range(ncols):\n             for j in range(nrows):\n-                sfarr[j, i] = self.add_subfigure(gs[j, i], **kwargs)\n+                subfig = self.add_subfigure(gs[j, i], **kwargs)\n+                if i > 0 and wspace is not None:\n+                    subfig._gridspec.set_width_spacing(wspace)\n+                if j > 0 and hspace is not None:\n+                    subfig._gridspec.set_height_spacing(hspace)\n+                sfarr[j, i] = subfig\n         if squeeze:\n             return sfarr.item() if sfarr.size == 1 else sfarr.squeeze()\n         else:\n", "normalized_occurrence": 1}
