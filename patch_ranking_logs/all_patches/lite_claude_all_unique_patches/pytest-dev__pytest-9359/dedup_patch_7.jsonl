{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-9359", "model_patch": "diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py\nindex 9657da0..3d67e52 100644\n--- a/src/_pytest/assertion/rewrite.py\n+++ b/src/_pytest/assertion/rewrite.py\n@@ -939,7 +939,7 @@ class AssertionRewriter(ast.NodeVisitor):\n                 explanation = \"\\n>assert \" + explanation\n             else:\n                 assertmsg = ast.Str(\"\")\n-                explanation = \"assert \" + explanation\n+                explanation = \"assert \" + explanation.split('\\n')[0]  # Only take the first line\n             template = ast.BinOp(assertmsg, ast.Add(), ast.Str(explanation))\n             msg = self.pop_format_context(template)\n             fmt = self.helper(\"_format_explanation\", msg)\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py\nindex 9f4da3b..4ec8e1a 100644\n--- a/src/_pytest/assertion/rewrite.py\n+++ b/src/_pytest/assertion/rewrite.py\n@@ -500,7 +500,7 @@ class AssertionRewriter(ast.NodeVisitor):\n                 explanation = '\\n>assert ' + explanation\n             else:\n                 assertmsg = ast.Str('')\n-                explanation = 'assert ' + explanation\n+                explanation = 'assert ' + explanation.split('\\n')[0]\n             template = ast.BinOp(assertmsg, ast.Add(), ast.Str(explanation))\n             msg = self.pop_format_context(template)\n             fmt = self.helper('_format_explanation', msg)\n", "normalized_occurrence": 2}
