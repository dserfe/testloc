{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-20438", "model_patch": "diff --git a/sympy/sets/sets.py b/sympy/sets/sets.py\nindex d2cbd5e..d8a658b 100644\n--- a/sympy/sets/sets.py\n+++ b/sympy/sets/sets.py\n@@ -366,6 +366,9 @@ class Set(Basic):\n         # Handle the trivial cases\n         if self == other:\n             return True\n+        # Check if sets are equal through mutual containment\n+        if self.intersect(other) == self and other.intersect(self) == other:\n+            return True\n         is_empty = self.is_empty\n         if is_empty is True:\n             return True\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/sets/sets.py b/sympy/sets/sets.py\nindex 48590ad..61d9e7b 100644\n--- a/sympy/sets/sets.py\n+++ b/sympy/sets/sets.py\n@@ -120,6 +120,8 @@ class Set(Basic):\n             raise ValueError(\"Unknown argument '%s'\" % other)\n         if self == other:\n             return True\n+        if self.intersect(other) == self and other.intersect(self) == other:\n+            return True\n         is_empty = self.is_empty\n         if is_empty is True:\n             return True\n", "normalized_occurrence": 1}
