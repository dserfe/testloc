{"model_name_or_path": "agentless", "instance_id": "django__django-14771", "model_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex b817434..ec2108c 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -220,6 +220,7 @@ def get_child_arguments():\n     py_script = Path(sys.argv[0])\n \n     args = [sys.executable] + ['-W%s' % o for o in sys.warnoptions]\n+    args += ['-X{}={}'.format(k, v) if v is not True else '-X{}'.format(k) for k, v in sys._xoptions.items()]\n     # __spec__ is set when the server was started with the `-m` option,\n     # see https://docs.python.org/3/reference/import.html#main-spec\n     # __spec__ may not exist, e.g. when running in a Conda env.\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex 1e324f3..7df63bc 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -134,6 +134,7 @@ def get_child_arguments():\n     import __main__\n     py_script = Path(sys.argv[0])\n     args = [sys.executable] + ['-W%s' % o for o in sys.warnoptions]\n+    args += ['-X{}={}'.format(k, v) if v is not True else '-X{}'.format(k) for k, v in sys._xoptions.items()]\n     if getattr(__main__, '__spec__', None) is not None:\n         spec = __main__.__spec__\n         if (spec.name == '__main__' or spec.name.endswith('.__main__')) and spec.parent:\n", "normalized_occurrence": 1}
