{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13033", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex f5fd96c..7a099f4 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1909,6 +1909,7 @@ class Query(BaseExpression):\n                     continue\n                 if item == '?':\n                     continue\n+                orig_item = item\n                 if item.startswith('-'):\n                     item = item[1:]\n                 if item in self.annotations:\n@@ -1917,7 +1918,12 @@ class Query(BaseExpression):\n                     continue\n                 # names_to_path() validates the lookup. A descriptive\n                 # FieldError will be raise if it's not.\n-                self.names_to_path(item.split(LOOKUP_SEP), self.model._meta)\n+                parts = item.split(LOOKUP_SEP)\n+                self.names_to_path(parts, self.model._meta)\n+                # Ensure we preserve the original ordering direction\n+                if orig_item.startswith('-'):\n+                    self.order_by += ('-' + item,)\n+                    continue\n             elif not hasattr(item, 'resolve_expression'):\n                 errors.append(item)\n             if getattr(item, 'contains_aggregate', False):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 5d74201..2b90196 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1015,13 +1015,18 @@ class Query(BaseExpression):\n                     continue\n                 if item == '?':\n                     continue\n+                orig_item = item\n                 if item.startswith('-'):\n                     item = item[1:]\n                 if item in self.annotations:\n                     continue\n                 if self.extra and item in self.extra:\n                     continue\n-                self.names_to_path(item.split(LOOKUP_SEP), self.model._meta)\n+                parts = item.split(LOOKUP_SEP)\n+                self.names_to_path(parts, self.model._meta)\n+                if orig_item.startswith('-'):\n+                    self.order_by += ('-' + item,)\n+                    continue\n             elif not hasattr(item, 'resolve_expression'):\n                 errors.append(item)\n             if getattr(item, 'contains_aggregate', False):\n", "normalized_occurrence": 1}
