{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-21379", "model_patch": "diff --git a/sympy/functions/elementary/piecewise.py b/sympy/functions/elementary/piecewise.py\nindex 218f537..308b91d 100644\n--- a/sympy/functions/elementary/piecewise.py\n+++ b/sympy/functions/elementary/piecewise.py\n@@ -813,7 +813,10 @@ class Piecewise(Function):\n         args = list(self.args)\n         args_exist = False\n         for i, (e, c) in enumerate(args):\n-            c = c._subs(old, new)\n+            try:\n+                c = c.subs(old, new)  # Use subs instead of _subs to handle assumptions\n+            except:\n+                c = c._subs(old, new)  # Fallback to _subs if subs fails\n             if c != False:\n                 args_exist = True\n                 e = e._subs(old, new)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/piecewise.py b/sympy/functions/elementary/piecewise.py\nindex e1c61a2..7faaef8 100644\n--- a/sympy/functions/elementary/piecewise.py\n+++ b/sympy/functions/elementary/piecewise.py\n@@ -444,7 +444,10 @@ class Piecewise(Function):\n         args = list(self.args)\n         args_exist = False\n         for i, (e, c) in enumerate(args):\n-            c = c._subs(old, new)\n+            try:\n+                c = c.subs(old, new)\n+            except:\n+                c = c._subs(old, new)\n             if c != False:\n                 args_exist = True\n                 e = e._subs(old, new)\n", "normalized_occurrence": 1}
