diff --git a/sympy/physics/quantum/tensorproduct.py b/sympy/physics/quantum/tensorproduct.py
index 153c783..473dd4a 100644
--- a/sympy/physics/quantum/tensorproduct.py
+++ b/sympy/physics/quantum/tensorproduct.py
@@ -129,6 +129,10 @@ class TensorProduct(Expr):
             tp = Expr.__new__(cls, *new_args)
             return c_part * tp
 
+    def _eval_power(self, exp):
+        new_args = [arg**exp for arg in self.args]
+        return TensorProduct(*new_args)
+
     @classmethod
     def flatten(cls, args):
         # TODO: disallow nested TensorProducts.
@@ -382,7 +386,11 @@ def tensor_product_simp(e, **hints):
     if isinstance(e, Add):
         return Add(*[tensor_product_simp(arg) for arg in e.args])
     elif isinstance(e, Pow):
-        return tensor_product_simp(e.base) ** e.exp
+        base_simp = tensor_product_simp(e.base)
+        if isinstance(base_simp, TensorProduct):
+            return TensorProduct(*[arg**e.exp for arg in base_simp.args])
+        else:
+            return base_simp ** e.exp
     elif isinstance(e, Mul):
         return tensor_product_simp_Mul(e)
     elif isinstance(e, Commutator):
