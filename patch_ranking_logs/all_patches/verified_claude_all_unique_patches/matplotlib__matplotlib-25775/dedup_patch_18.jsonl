{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-25775", "model_patch": "diff --git a/lib/matplotlib/text.py b/lib/matplotlib/text.py\nindex c2b18d4..99ee538 100644\n--- a/lib/matplotlib/text.py\n+++ b/lib/matplotlib/text.py\n@@ -737,6 +737,7 @@ class Text(Artist):\n             gc.set_foreground(self.get_color())\n             gc.set_alpha(self.get_alpha())\n             gc.set_url(self._url)\n+            gc.set_antialiased(self.get_antialiased())\n             self._set_gc_clip(gc)\n \n             angle = self.get_rotation()\n@@ -1335,6 +1336,29 @@ class Text(Artist):\n         \"\"\"\n         return self.set_family(fontname)\n \n+    def get_antialiased(self):\n+        \"\"\"\n+        Return whether the text should be drawn with antialiasing.\n+\n+        Returns\n+        -------\n+        bool\n+            The antialiasing state\n+        \"\"\"\n+        return self._antialiased\n+\n+    def set_antialiased(self, b):\n+        \"\"\"\n+        Set whether to use antialiased rendering.\n+\n+        Parameters\n+        ----------\n+        b : bool\n+            If True, text will be antialiased.\n+        \"\"\"\n+        self._antialiased = bool(b)\n+        self.stale = True\n+\n \n class OffsetFrom:\n     \"\"\"Callable helper class for working with `Annotation`.\"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/text.py b/lib/matplotlib/text.py\nindex 5c973cb..ecebd7b 100644\n--- a/lib/matplotlib/text.py\n+++ b/lib/matplotlib/text.py\n@@ -370,6 +370,7 @@ class Text(Artist):\n             gc.set_foreground(self.get_color())\n             gc.set_alpha(self.get_alpha())\n             gc.set_url(self._url)\n+            gc.set_antialiased(self.get_antialiased())\n             self._set_gc_clip(gc)\n             angle = self.get_rotation()\n             for line, wh, x, y in info:\n@@ -548,6 +549,11 @@ class Text(Artist):\n         return self._parse_math\n     def set_fontname(self, fontname):\n         return self.set_family(fontname)\n+    def get_antialiased(self):\n+        return self._antialiased\n+    def set_antialiased(self, b):\n+        self._antialiased = bool(b)\n+        self.stale = True\n class OffsetFrom:\n     def __init__(self, artist, ref_coord, unit='points'):\n         self._artist = artist\n", "normalized_occurrence": 1}
