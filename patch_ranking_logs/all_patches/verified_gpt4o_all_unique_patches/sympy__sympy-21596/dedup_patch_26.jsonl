{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-21596", "model_patch": "diff --git a/sympy/sets/sets.py b/sympy/sets/sets.py\nindex 78d756e..b56c6a7 100644\n--- a/sympy/sets/sets.py\n+++ b/sympy/sets/sets.py\n@@ -132,6 +132,10 @@ class Set(Basic, EvalfMixin):\n         EmptySet\n \n         \"\"\"\n+        from sympy.sets.fancysets import ImageSet\n+        if isinstance(self, ImageSet) and isinstance(other, Interval) and other == S.Reals:\n+            real_parts = [x for x in self.base_set if im(self.lamda(x)) == 0]\n+            return FiniteSet(*real_parts)\n         return Intersection(self, other)\n \n     def intersection(self, other):\n@@ -325,6 +329,10 @@ class Set(Basic, EvalfMixin):\n         >>> _ is S.true\n         False\n         \"\"\"\n+        from sympy.sets.fancysets import ImageSet\n+        if isinstance(self, ImageSet) and isinstance(other, Interval) and other == S.Reals:\n+            real_parts = [x for x in self.base_set if im(self.lamda(x)) == 0]\n+            return S.true if other in real_parts else S.false\n         other = sympify(other, strict=True)\n \n         c = self._contains(other)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/sets/sets.py b/sympy/sets/sets.py\nindex 09f6d6f..625c9aa 100644\n--- a/sympy/sets/sets.py\n+++ b/sympy/sets/sets.py\n@@ -54,6 +54,10 @@ class Set(Basic, EvalfMixin):\n     def union(self, other):\n         return Union(self, other)\n     def intersect(self, other):\n+        from sympy.sets.fancysets import ImageSet\n+        if isinstance(self, ImageSet) and isinstance(other, Interval) and (other == S.Reals):\n+            real_parts = [x for x in self.base_set if im(self.lamda(x)) == 0]\n+            return FiniteSet(*real_parts)\n         return Intersection(self, other)\n     def intersection(self, other):\n         return self.intersect(other)\n@@ -103,6 +107,10 @@ class Set(Basic, EvalfMixin):\n     def _sup(self):\n         raise NotImplementedError('(%s)._sup' % self)\n     def contains(self, other):\n+        from sympy.sets.fancysets import ImageSet\n+        if isinstance(self, ImageSet) and isinstance(other, Interval) and (other == S.Reals):\n+            real_parts = [x for x in self.base_set if im(self.lamda(x)) == 0]\n+            return S.true if other in real_parts else S.false\n         other = sympify(other, strict=True)\n         c = self._contains(other)\n         if isinstance(c, Contains):\n", "normalized_occurrence": 1}
