{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-9288", "model_patch": "diff --git a/sklearn/cluster/k_means_.py b/sklearn/cluster/k_means_.py\nindex 915d041..7648205 100644\n--- a/sklearn/cluster/k_means_.py\n+++ b/sklearn/cluster/k_means_.py\n@@ -343,6 +343,9 @@ def k_means(X, n_clusters, sample_weight=None, init='k-means++',\n         if hasattr(init, '__array__'):\n             init -= X_mean\n \n+    # normalize sample weights once here before any parallelization\n+    sample_weight = _check_normalize_sample_weight(sample_weight, X)\n+\n     # precompute squared norms of data points\n     x_squared_norms = row_norms(X, squared=True)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/cluster/k_means_.py b/sklearn/cluster/k_means_.py\nindex abcc315..94093e4 100644\n--- a/sklearn/cluster/k_means_.py\n+++ b/sklearn/cluster/k_means_.py\n@@ -94,6 +94,7 @@ def k_means(X, n_clusters, sample_weight=None, init='k-means++', precompute_dist\n         X -= X_mean\n         if hasattr(init, '__array__'):\n             init -= X_mean\n+    sample_weight = _check_normalize_sample_weight(sample_weight, X)\n     x_squared_norms = row_norms(X, squared=True)\n     best_labels, best_inertia, best_centers = (None, None, None)\n     if n_clusters == 1:\n", "normalized_occurrence": 1}
