{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-6386", "model_patch": "diff --git a/pylint/config/option_manager_mixin.py b/pylint/config/option_manager_mixin.py\nindex d22ea01..bf3b9ea 100644\n--- a/pylint/config/option_manager_mixin.py\n+++ b/pylint/config/option_manager_mixin.py\n@@ -152,7 +152,10 @@ class OptionsManagerMixIn:\n         if \"action\" in optdict:\n             self._nocallback_options[provider] = opt\n         else:\n-            optdict[\"action\"] = \"callback\"\n+            if opt == \"verbose\":\n+                optdict[\"action\"] = \"store_true\"\n+            else:\n+                optdict[\"action\"] = \"callback\"\n             optdict[\"callback\"] = self.cb_set_provider_option\n         # default is handled here and *must not* be given to optik if you\n         # want the whole machinery to work\n@@ -343,4 +346,4 @@ class OptionsManagerMixIn:\n         \"\"\"Return the usage string for available options.\"\"\"\n         self.cmdline_parser.formatter.output_level = level\n         with _patch_optparse():\n-            return self.cmdline_parser.format_help()\n+            return self.cmdline_parser.format_help()\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/config/option_manager_mixin.py b/pylint/config/option_manager_mixin.py\nindex 073d6af..c5841d0 100644\n--- a/pylint/config/option_manager_mixin.py\n+++ b/pylint/config/option_manager_mixin.py\n@@ -92,7 +92,10 @@ class OptionsManagerMixIn:\n         if 'action' in optdict:\n             self._nocallback_options[provider] = opt\n         else:\n-            optdict['action'] = 'callback'\n+            if opt == 'verbose':\n+                optdict['action'] = 'store_true'\n+            else:\n+                optdict['action'] = 'callback'\n             optdict['callback'] = self.cb_set_provider_option\n         if 'default' in optdict:\n             if 'help' in optdict and optdict.get('default') is not None and (optdict['action'] not in ('store_true', 'store_false')):\n", "normalized_occurrence": 1}
