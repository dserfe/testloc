{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-9359", "model_patch": "diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py\nindex 9657da0..a1c3000 100644\n--- a/src/_pytest/assertion/rewrite.py\n+++ b/src/_pytest/assertion/rewrite.py\n@@ -954,7 +954,8 @@ class AssertionRewriter(ast.NodeVisitor):\n             variables = [ast.Name(name, ast.Store()) for name in self.variables]\n             clear = ast.Assign(variables, ast.NameConstant(None))\n             self.statements.append(clear)\n-        # Fix locations (line numbers/column offsets).\n+        # Fix locations (line numbers/column offsets) and end location.\n+        ast.fix_missing_locations(self.statements)\n         for stmt in self.statements:\n             for node in traverse_node(stmt):\n                 ast.copy_location(node, assert_)\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py\nindex 9f4da3b..a8af38f 100644\n--- a/src/_pytest/assertion/rewrite.py\n+++ b/src/_pytest/assertion/rewrite.py\n@@ -512,6 +512,7 @@ class AssertionRewriter(ast.NodeVisitor):\n             variables = [ast.Name(name, ast.Store()) for name in self.variables]\n             clear = ast.Assign(variables, ast.NameConstant(None))\n             self.statements.append(clear)\n+        ast.fix_missing_locations(self.statements)\n         for stmt in self.statements:\n             for node in traverse_node(stmt):\n                 ast.copy_location(node, assert_)\n", "normalized_occurrence": 1}
