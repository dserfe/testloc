{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-10673", "model_patch": "diff --git a/sphinx/environment/adapters/toctree.py b/sphinx/environment/adapters/toctree.py\nindex 52ac0d3..ded1b0d 100644\n--- a/sphinx/environment/adapters/toctree.py\n+++ b/sphinx/environment/adapters/toctree.py\n@@ -172,7 +172,16 @@ class TocTree:\n                     else:\n                         message = __('toctree contains reference to nonexisting document %r')\n \n-                    logger.warning(message, ref, location=toctreenode)\n+                    # Ensure references to 'genindex', 'modindex', and 'search' are handled properly\n+                    if ref in ('genindex', 'modindex', 'search'):\n+                        if ref == 'genindex' and not hasattr(self.env, 'genindexentries'):\n+                            logger.warning(__('toctree contains reference to nonexisting document %r'), ref, location=toctreenode)\n+                        elif ref == 'modindex' and not hasattr(self.env, 'modindexentries'):\n+                            logger.warning(__('toctree contains reference to nonexisting document %r'), ref, location=toctreenode)\n+                        elif ref == 'search' and not hasattr(self.env, 'searchindex'):\n+                            logger.warning(__('toctree contains reference to nonexisting document %r'), ref, location=toctreenode)\n+                    else:\n+                        logger.warning(message, ref, location=toctreenode)\n                 else:\n                     # if titles_only is given, only keep the main title and\n                     # sub-toctrees\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/environment/adapters/toctree.py b/sphinx/environment/adapters/toctree.py\nindex 07fcee3..79f4e42 100644\n--- a/sphinx/environment/adapters/toctree.py\n+++ b/sphinx/environment/adapters/toctree.py\n@@ -92,7 +92,15 @@ class TocTree:\n                         message = __('toctree contains reference to non-included document %r')\n                     else:\n                         message = __('toctree contains reference to nonexisting document %r')\n-                    logger.warning(message, ref, location=toctreenode)\n+                    if ref in ('genindex', 'modindex', 'search'):\n+                        if ref == 'genindex' and (not hasattr(self.env, 'genindexentries')):\n+                            logger.warning(__('toctree contains reference to nonexisting document %r'), ref, location=toctreenode)\n+                        elif ref == 'modindex' and (not hasattr(self.env, 'modindexentries')):\n+                            logger.warning(__('toctree contains reference to nonexisting document %r'), ref, location=toctreenode)\n+                        elif ref == 'search' and (not hasattr(self.env, 'searchindex')):\n+                            logger.warning(__('toctree contains reference to nonexisting document %r'), ref, location=toctreenode)\n+                    else:\n+                        logger.warning(message, ref, location=toctreenode)\n                 else:\n                     if titles_only:\n                         children = cast(Iterable[nodes.Element], toc)\n", "normalized_occurrence": 1}
