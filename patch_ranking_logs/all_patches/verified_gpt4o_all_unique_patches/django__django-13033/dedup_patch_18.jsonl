{"model_name_or_path": "agentless", "instance_id": "django__django-13033", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 13e70df..9a23b64 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -729,10 +729,12 @@ class SQLCompiler:\n         # shortcut or the attribute name of the field that is specified.\n         if field.is_relation and opts.ordering and getattr(field, 'attname', None) != name and name != 'pk':\n             # Firstly, avoid infinite loops.\n-            already_seen = already_seen or set()\n+            if already_seen is None:\n+                already_seen = set()\n             join_tuple = tuple(getattr(self.query.alias_map[j], 'join_cols', None) for j in joins)\n             if join_tuple in already_seen:\n-                raise FieldError('Infinite loop caused by ordering.')\n+                # Prevent infinite loop in self-referencing foreign key scenarios\n+                return [(OrderBy(F('pk')), False)]\n             already_seen.add(join_tuple)\n \n             results = []\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex d98aa67..71a9ba5 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -416,10 +416,11 @@ class SQLCompiler:\n         pieces = name.split(LOOKUP_SEP)\n         field, targets, alias, joins, path, opts, transform_function = self._setup_joins(pieces, opts, alias)\n         if field.is_relation and opts.ordering and (getattr(field, 'attname', None) != name) and (name != 'pk'):\n-            already_seen = already_seen or set()\n+            if already_seen is None:\n+                already_seen = set()\n             join_tuple = tuple((getattr(self.query.alias_map[j], 'join_cols', None) for j in joins))\n             if join_tuple in already_seen:\n-                raise FieldError('Infinite loop caused by ordering.')\n+                return [(OrderBy(F('pk')), False)]\n             already_seen.add(join_tuple)\n             results = []\n             for item in opts.ordering:\n", "normalized_occurrence": 1}
