{"model_name_or_path": "agentless", "instance_id": "django__django-14351", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 9591387..1852202 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -484,7 +484,12 @@ class Query(BaseExpression):\n                 # In case of Model.objects[0:3].count(), there would be no\n                 # field selected in the inner query, yet we must use a subquery.\n                 # So, make sure at least one field is selected.\n-                inner_query.select = (self.model._meta.pk.get_col(inner_query.get_initial_alias()),)\n+                # Ensure that only necessary columns are selected in the subquery.\n+                if inner_query.select or not inner_query.default_cols:\n+                    inner_query.select = (self.model._meta.pk.get_col(inner_query.get_initial_alias()),)\n+                else:\n+                    inner_query.select = (self.model._meta.pk.get_col(inner_query.get_initial_alias()),)\n+                    inner_query.default_cols = False\n         else:\n             outer_query = self\n             self.select = ()\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex ec726d6..3877760 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -271,7 +271,11 @@ class Query(BaseExpression):\n                     annotation_select_mask.remove(alias)\n                 inner_query.set_annotation_mask(inner_query.annotation_select_mask)\n             if inner_query.select == () and (not inner_query.default_cols) and (not inner_query.annotation_select_mask):\n-                inner_query.select = (self.model._meta.pk.get_col(inner_query.get_initial_alias()),)\n+                if inner_query.select or not inner_query.default_cols:\n+                    inner_query.select = (self.model._meta.pk.get_col(inner_query.get_initial_alias()),)\n+                else:\n+                    inner_query.select = (self.model._meta.pk.get_col(inner_query.get_initial_alias()),)\n+                    inner_query.default_cols = False\n         else:\n             outer_query = self\n             self.select = ()\n", "normalized_occurrence": 1}
