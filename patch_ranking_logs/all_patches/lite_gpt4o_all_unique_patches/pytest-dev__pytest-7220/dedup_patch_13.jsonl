{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7220", "model_patch": "diff --git a/src/_pytest/nodes.py b/src/_pytest/nodes.py\nindex 585fb01..3f129e0 100644\n--- a/src/_pytest/nodes.py\n+++ b/src/_pytest/nodes.py\n@@ -384,7 +384,14 @@ class Node(metaclass=NodeMeta):\n \n         :param excinfo: Exception information for the failure.\n         \"\"\"\n-        return self._repr_failure_py(excinfo, style)\n+        cwd = os.getcwd()\n+        try:\n+            if self.config.invocation_dir:\n+                os.chdir(self.config.invocation_dir)\n+            result = self._repr_failure_py(excinfo, style)\n+        finally:\n+            os.chdir(cwd)\n+        return result\n \n \n def get_fslocation_from_item(\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/nodes.py b/src/_pytest/nodes.py\nindex e228031..6f7b5aa 100644\n--- a/src/_pytest/nodes.py\n+++ b/src/_pytest/nodes.py\n@@ -302,7 +302,14 @@ class Node(metaclass=NodeMeta):\n \n         :param excinfo: Exception information for the failure.\n         \"\"\"\n-        return self._repr_failure_py(excinfo, style)\n+        cwd = os.getcwd()\n+        try:\n+            if self.config.invocation_dir:\n+                os.chdir(self.config.invocation_dir)\n+            result = self._repr_failure_py(excinfo, style)\n+        finally:\n+            os.chdir(cwd)\n+        return result\n \n def get_fslocation_from_item(item: 'Item') -> Tuple[Union[str, py.path.local], Optional[int]]:\n     \"\"\"Tries to extract the actual location from an item, depending on available attributes:\n", "normalized_occurrence": 1}
