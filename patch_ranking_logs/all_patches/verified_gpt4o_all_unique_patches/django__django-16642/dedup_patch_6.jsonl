{"model_name_or_path": "agentless", "instance_id": "django__django-16642", "model_patch": "diff --git a/django/http/response.py b/django/http/response.py\nindex b918697..4d0c308 100644\n--- a/django/http/response.py\n+++ b/django/http/response.py\n@@ -613,6 +613,10 @@ class FileResponse(StreamingHttpResponse):\n                     \"gzip\": \"application/gzip\",\n                     \"xz\": \"application/x-xz\",\n                 }.get(encoding, content_type)\n+                if filename.endswith('.Z'):\n+                    content_type = 'application/x-compress'\n+                elif filename.endswith('.br'):\n+                    content_type = 'application/x-brotli'\n                 self.headers[\"Content-Type\"] = (\n                     content_type or \"application/octet-stream\"\n                 )\n", "occurrence": 1, "normalized_patch": "diff --git a/django/http/response.py b/django/http/response.py\nindex 508a8a7..ed1bf32 100644\n--- a/django/http/response.py\n+++ b/django/http/response.py\n@@ -330,6 +330,10 @@ class FileResponse(StreamingHttpResponse):\n             if filename:\n                 content_type, encoding = mimetypes.guess_type(filename)\n                 content_type = {'bzip2': 'application/x-bzip', 'gzip': 'application/gzip', 'xz': 'application/x-xz'}.get(encoding, content_type)\n+                if filename.endswith('.Z'):\n+                    content_type = 'application/x-compress'\n+                elif filename.endswith('.br'):\n+                    content_type = 'application/x-brotli'\n                 self.headers['Content-Type'] = content_type or 'application/octet-stream'\n             else:\n                 self.headers['Content-Type'] = 'application/octet-stream'\n", "normalized_occurrence": 2}
