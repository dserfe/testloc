{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-12419", "model_patch": "diff --git a/sympy/matrices/expressions/matexpr.py b/sympy/matrices/expressions/matexpr.py\nindex 8f30d0d..270f4d9 100644\n--- a/sympy/matrices/expressions/matexpr.py\n+++ b/sympy/matrices/expressions/matexpr.py\n@@ -238,6 +238,10 @@ class MatrixExpr(Basic):\n                 return MatrixSlice(self, i, j)\n             i, j = sympify(i), sympify(j)\n             if self.valid_index(i, j) != False:\n+                # Special handling for identity matrices\n+                if getattr(self, 'is_Identity', False):\n+                    from sympy import KroneckerDelta\n+                    return KroneckerDelta(i, j)\n                 return self._entry(i, j)\n             else:\n                 raise IndexError(\"Invalid indices (%s, %s)\" % (i, j))\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/expressions/matexpr.py b/sympy/matrices/expressions/matexpr.py\nindex 9ec3ea5..9b010b8 100644\n--- a/sympy/matrices/expressions/matexpr.py\n+++ b/sympy/matrices/expressions/matexpr.py\n@@ -160,6 +160,9 @@ class MatrixExpr(Basic):\n                 return MatrixSlice(self, i, j)\n             i, j = (sympify(i), sympify(j))\n             if self.valid_index(i, j) != False:\n+                if getattr(self, 'is_Identity', False):\n+                    from sympy import KroneckerDelta\n+                    return KroneckerDelta(i, j)\n                 return self._entry(i, j)\n             else:\n                 raise IndexError('Invalid indices (%s, %s)' % (i, j))\n", "normalized_occurrence": 1}
