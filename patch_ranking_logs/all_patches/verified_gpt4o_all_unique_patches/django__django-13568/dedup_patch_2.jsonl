{"model_name_or_path": "agentless", "instance_id": "django__django-13568", "model_patch": "diff --git a/django/contrib/auth/checks.py b/django/contrib/auth/checks.py\nindex 2983afb..0b012ff 100644\n--- a/django/contrib/auth/checks.py\n+++ b/django/contrib/auth/checks.py\n@@ -1,3 +1,4 @@\n+\n from itertools import chain\n from types import MethodType\n \n@@ -51,8 +52,17 @@ def check_user_model(app_configs=None, **kwargs):\n             )\n         )\n \n-    # Check that the username field is unique\n-    if not cls._meta.get_field(cls.USERNAME_FIELD).unique:\n+    # Check that the username field is unique or part of a unique constraint\n+    username_field = cls._meta.get_field(cls.USERNAME_FIELD)\n+    is_unique = username_field.unique\n+\n+    if not is_unique:\n+        for constraint in cls._meta.constraints:\n+            if isinstance(constraint, models.UniqueConstraint) and cls.USERNAME_FIELD in constraint.fields:\n+                is_unique = True\n+                break\n+\n+    if not is_unique:\n         if (settings.AUTHENTICATION_BACKENDS ==\n                 ['django.contrib.auth.backends.ModelBackend']):\n             errors.append(\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/auth/checks.py b/django/contrib/auth/checks.py\nindex 0dc9c25..ac37fb8 100644\n--- a/django/contrib/auth/checks.py\n+++ b/django/contrib/auth/checks.py\n@@ -20,7 +20,14 @@ def check_user_model(app_configs=None, **kwargs):\n         errors.append(checks.Error(\"'REQUIRED_FIELDS' must be a list or tuple.\", obj=cls, id='auth.E001'))\n     if cls.USERNAME_FIELD in cls.REQUIRED_FIELDS:\n         errors.append(checks.Error(\"The field named as the 'USERNAME_FIELD' for a custom user model must not be included in 'REQUIRED_FIELDS'.\", hint=\"The 'USERNAME_FIELD' is currently set to '%s', you should remove '%s' from the 'REQUIRED_FIELDS'.\" % (cls.USERNAME_FIELD, cls.USERNAME_FIELD), obj=cls, id='auth.E002'))\n-    if not cls._meta.get_field(cls.USERNAME_FIELD).unique:\n+    username_field = cls._meta.get_field(cls.USERNAME_FIELD)\n+    is_unique = username_field.unique\n+    if not is_unique:\n+        for constraint in cls._meta.constraints:\n+            if isinstance(constraint, models.UniqueConstraint) and cls.USERNAME_FIELD in constraint.fields:\n+                is_unique = True\n+                break\n+    if not is_unique:\n         if settings.AUTHENTICATION_BACKENDS == ['django.contrib.auth.backends.ModelBackend']:\n             errors.append(checks.Error(\"'%s.%s' must be unique because it is named as the 'USERNAME_FIELD'.\" % (cls._meta.object_name, cls.USERNAME_FIELD), obj=cls, id='auth.E003'))\n         else:\n", "normalized_occurrence": 1}
