{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-20826", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 07605b5..75b1600 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1191,13 +1191,17 @@ class _AxesBase(martist.Artist):\n \n         xaxis_visible = self.xaxis.get_visible()\n         yaxis_visible = self.yaxis.get_visible()\n+        \n+        # Store spine visibility states\n+        spine_visibilities = {name: spine.get_visible() \n+                            for name, spine in self.spines.items()}\n \n         self.xaxis.clear()\n         self.yaxis.clear()\n \n         for name, spine in self.spines.items():\n             spine.clear()\n-\n+            \n         self.ignore_existing_data_limits = True\n         self.callbacks = cbook.CallbackRegistry()\n \n@@ -1304,10 +1308,24 @@ class _AxesBase(martist.Artist):\n         self._shared_axes[\"y\"].clean()\n         if self._sharex is not None:\n             self.xaxis.set_visible(xaxis_visible)\n+            # Restore spine visibility for shared x-axis\n+            for spine_name in ['top', 'bottom']:\n+                if spine_name in self.spines:\n+                    self.spines[spine_name].set_visible(spine_visibilities[spine_name])\n             self.patch.set_visible(patch_visible)\n         if self._sharey is not None:\n             self.yaxis.set_visible(yaxis_visible)\n+            # Restore spine visibility for shared y-axis\n+            for spine_name in ['left', 'right']:\n+                if spine_name in self.spines:\n+                    self.spines[spine_name].set_visible(spine_visibilities[spine_name])\n             self.patch.set_visible(patch_visible)\n+            \n+        # Hide the right and top spines if not already set\n+        if self._sharex is not None or self._sharey is not None:\n+            for spine_name in ['top', 'right']:\n+                if spine_name in self.spines and not spine_visibilities[spine_name]:\n+                    self.spines[spine_name].set_visible(False)\n \n         self.stale = True\n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 33a6de3..1541f12 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -503,6 +503,7 @@ class _AxesBase(martist.Artist):\n             patch_visible = True\n         xaxis_visible = self.xaxis.get_visible()\n         yaxis_visible = self.yaxis.get_visible()\n+        spine_visibilities = {name: spine.get_visible() for name, spine in self.spines.items()}\n         self.xaxis.clear()\n         self.yaxis.clear()\n         for name, spine in self.spines.items():\n@@ -577,10 +578,20 @@ class _AxesBase(martist.Artist):\n         self._shared_axes['y'].clean()\n         if self._sharex is not None:\n             self.xaxis.set_visible(xaxis_visible)\n+            for spine_name in ['top', 'bottom']:\n+                if spine_name in self.spines:\n+                    self.spines[spine_name].set_visible(spine_visibilities[spine_name])\n             self.patch.set_visible(patch_visible)\n         if self._sharey is not None:\n             self.yaxis.set_visible(yaxis_visible)\n+            for spine_name in ['left', 'right']:\n+                if spine_name in self.spines:\n+                    self.spines[spine_name].set_visible(spine_visibilities[spine_name])\n             self.patch.set_visible(patch_visible)\n+        if self._sharex is not None or self._sharey is not None:\n+            for spine_name in ['top', 'right']:\n+                if spine_name in self.spines and (not spine_visibilities[spine_name]):\n+                    self.spines[spine_name].set_visible(False)\n         self.stale = True\n     class ArtistList(MutableSequence):\n         def __init__(self, axes, prop_name, add_name, valid_types=None, invalid_types=None):\n", "normalized_occurrence": 1}
