{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13925", "model_patch": "diff --git a/django/db/models/options.py b/django/db/models/options.py\nindex c6d9d53..0e34995 100644\n--- a/django/db/models/options.py\n+++ b/django/db/models/options.py\n@@ -273,14 +273,20 @@ class Options:\n                 # Promote the first parent link in lieu of adding yet another\n                 # field.\n                 field = next(iter(self.parents.values()))\n-                # Look for a local field with the same name as the\n-                # first parent link. If a local field has already been\n-                # created, use it instead of promoting the parent\n-                already_created = [fld for fld in self.local_fields if fld.name == field.name]\n-                if already_created:\n-                    field = already_created[0]\n-                field.primary_key = True\n-                self.setup_pk(field)\n+                parent_meta = field.remote_field.model._meta\n+                if parent_meta.pk:\n+                    # If parent has PK, inherit it\n+                    field.primary_key = True\n+                    self.setup_pk(field)\n+                else:\n+                    # Look for a local field with the same name as the\n+                    # first parent link. If a local field has already been\n+                    # created, use it instead of promoting the parent\n+                    already_created = [fld for fld in self.local_fields if fld.name == field.name]\n+                    if already_created:\n+                        field = already_created[0]\n+                    field.primary_key = True\n+                    self.setup_pk(field)\n             else:\n                 pk_class = self._get_default_pk_class()\n                 auto = pk_class(verbose_name='ID', primary_key=True, auto_created=True)\n@@ -892,4 +898,4 @@ class Options:\n         return [\n             field for field in self._get_fields(forward=True, reverse=False, include_parents=PROXY_PARENTS)\n             if getattr(field, 'db_returning', False)\n-        ]\n+        ]\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/options.py b/django/db/models/options.py\nindex dbf0b41..f533a45 100644\n--- a/django/db/models/options.py\n+++ b/django/db/models/options.py\n@@ -166,11 +166,16 @@ class Options:\n         if self.pk is None:\n             if self.parents:\n                 field = next(iter(self.parents.values()))\n-                already_created = [fld for fld in self.local_fields if fld.name == field.name]\n-                if already_created:\n-                    field = already_created[0]\n-                field.primary_key = True\n-                self.setup_pk(field)\n+                parent_meta = field.remote_field.model._meta\n+                if parent_meta.pk:\n+                    field.primary_key = True\n+                    self.setup_pk(field)\n+                else:\n+                    already_created = [fld for fld in self.local_fields if fld.name == field.name]\n+                    if already_created:\n+                        field = already_created[0]\n+                    field.primary_key = True\n+                    self.setup_pk(field)\n             else:\n                 pk_class = self._get_default_pk_class()\n                 auto = pk_class(verbose_name='ID', primary_key=True, auto_created=True)\n", "normalized_occurrence": 1}
