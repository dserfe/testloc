{"model_name_or_path": "agentless", "instance_id": "django__django-15902", "model_patch": "diff --git a/django/forms/renderers.py b/django/forms/renderers.py\nindex f215e38..5e52f65 100644\n--- a/django/forms/renderers.py\n+++ b/django/forms/renderers.py\n@@ -25,6 +25,9 @@ class BaseRenderer:\n         raise NotImplementedError(\"subclasses must implement get_template()\")\n \n     def render(self, template_name, context, request=None):\n+        # Special case: Avoid using the default template for management forms\n+        if template_name == \"django/forms/default.html\" and context.get('form').__class__.__name__ == \"ManagementForm\":\n+            return ''.join([field.as_hidden() for field in context['form']])\n         template = self.get_template(template_name)\n         return template.render(context, request=request).strip()\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/renderers.py b/django/forms/renderers.py\nindex 6842533..43197c1 100644\n--- a/django/forms/renderers.py\n+++ b/django/forms/renderers.py\n@@ -15,6 +15,8 @@ class BaseRenderer:\n     def get_template(self, template_name):\n         raise NotImplementedError('subclasses must implement get_template()')\n     def render(self, template_name, context, request=None):\n+        if template_name == 'django/forms/default.html' and context.get('form').__class__.__name__ == 'ManagementForm':\n+            return ''.join([field.as_hidden() for field in context['form']])\n         template = self.get_template(template_name)\n         return template.render(context, request=request).strip()\n class EngineMixin:\n", "normalized_occurrence": 1}
