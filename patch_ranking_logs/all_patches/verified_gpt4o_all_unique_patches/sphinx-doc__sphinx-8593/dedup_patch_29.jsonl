{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8593", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex c412096..c6c6b74 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -722,19 +722,22 @@ class Documenter:\n                 if cls_doc == doc:\n                     doc = None\n \n-            if isinstance(obj, ObjectMember) and obj.docstring:\n-                # hack for ClassDocumenter to inject docstring via ObjectMember\n-                doc = obj.docstring\n+            if isinstance(obj, ObjectMember):\n+                if obj.docstring:\n+                    # hack for ClassDocumenter to inject docstring via ObjectMember\n+                    doc = obj.docstring\n+                else:\n+                    doc = safe_getattr(obj, '__doc__', '')\n \n-            has_doc = bool(doc)\n+                has_doc = bool(doc)\n \n-            metadata = extract_metadata(doc)\n-            if 'private' in metadata:\n-                # consider a member private if docstring has \"private\" metadata\n-                isprivate = True\n-            elif 'public' in metadata:\n+                metadata = extract_metadata(doc)\n+            if 'public' in metadata:\n                 # consider a member public if docstring has \"public\" metadata\n                 isprivate = False\n+            elif 'private' in metadata:\n+                # consider a member private if docstring has \"private\" metadata\n+                isprivate = True\n             else:\n                 isprivate = membername.startswith('_')\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex f71844a..7efd385 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -375,14 +375,17 @@ class Documenter:\n                 cls_doc = self.get_attr(cls, '__doc__', None)\n                 if cls_doc == doc:\n                     doc = None\n-            if isinstance(obj, ObjectMember) and obj.docstring:\n-                doc = obj.docstring\n-            has_doc = bool(doc)\n-            metadata = extract_metadata(doc)\n-            if 'private' in metadata:\n-                isprivate = True\n-            elif 'public' in metadata:\n+            if isinstance(obj, ObjectMember):\n+                if obj.docstring:\n+                    doc = obj.docstring\n+                else:\n+                    doc = safe_getattr(obj, '__doc__', '')\n+                has_doc = bool(doc)\n+                metadata = extract_metadata(doc)\n+            if 'public' in metadata:\n                 isprivate = False\n+            elif 'private' in metadata:\n+                isprivate = True\n             else:\n                 isprivate = membername.startswith('_')\n             keep = False\n", "normalized_occurrence": 1}
