{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-22080", "model_patch": "diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py\nindex ae1df59..d4b5d16 100644\n--- a/sympy/utilities/lambdify.py\n+++ b/sympy/utilities/lambdify.py\n@@ -797,22 +797,7 @@ def lambdify(args: Iterable, expr, modules=None, printer=None, use_imps=True,\n             namespace.update({str(term): term})\n \n     if printer is None:\n-        if _module_present('mpmath', namespaces):\n-            from sympy.printing.pycode import MpmathPrinter as Printer # type: ignore\n-        elif _module_present('scipy', namespaces):\n-            from sympy.printing.numpy import SciPyPrinter as Printer # type: ignore\n-        elif _module_present('numpy', namespaces):\n-            from sympy.printing.numpy import NumPyPrinter as Printer # type: ignore\n-        elif _module_present('cupy', namespaces):\n-            from sympy.printing.numpy import CuPyPrinter as Printer # type: ignore\n-        elif _module_present('numexpr', namespaces):\n-            from sympy.printing.lambdarepr import NumExprPrinter as Printer # type: ignore\n-        elif _module_present('tensorflow', namespaces):\n-            from sympy.printing.tensorflow import TensorflowPrinter as Printer # type: ignore\n-        elif _module_present('sympy', namespaces):\n-            from sympy.printing.pycode import SymPyPrinter as Printer # type: ignore\n-        else:\n-            from sympy.printing.pycode import PythonCodePrinter as Printer # type: ignore\n+\n         user_functions = {}\n         for m in namespaces[::-1]:\n             if isinstance(m, dict):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py\nindex c5ff69c..45b5f47 100644\n--- a/sympy/utilities/lambdify.py\n+++ b/sympy/utilities/lambdify.py\n@@ -96,22 +96,6 @@ def lambdify(args: Iterable, expr, modules=None, printer=None, use_imps=True, du\n         for term in syms:\n             namespace.update({str(term): term})\n     if printer is None:\n-        if _module_present('mpmath', namespaces):\n-            from sympy.printing.pycode import MpmathPrinter as Printer\n-        elif _module_present('scipy', namespaces):\n-            from sympy.printing.numpy import SciPyPrinter as Printer\n-        elif _module_present('numpy', namespaces):\n-            from sympy.printing.numpy import NumPyPrinter as Printer\n-        elif _module_present('cupy', namespaces):\n-            from sympy.printing.numpy import CuPyPrinter as Printer\n-        elif _module_present('numexpr', namespaces):\n-            from sympy.printing.lambdarepr import NumExprPrinter as Printer\n-        elif _module_present('tensorflow', namespaces):\n-            from sympy.printing.tensorflow import TensorflowPrinter as Printer\n-        elif _module_present('sympy', namespaces):\n-            from sympy.printing.pycode import SymPyPrinter as Printer\n-        else:\n-            from sympy.printing.pycode import PythonCodePrinter as Printer\n         user_functions = {}\n         for m in namespaces[::-1]:\n             if isinstance(m, dict):\n", "normalized_occurrence": 1}
