{"model_name_or_path": "agentless", "instance_id": "django__django-9296", "model_patch": "diff --git a/django/core/paginator.py b/django/core/paginator.py\nindex 30a29ab..bc917fe 100644\n--- a/django/core/paginator.py\n+++ b/django/core/paginator.py\n@@ -81,7 +81,10 @@ class Paginator:\n         standard :cls:`Page` object.\n         \"\"\"\n         return Page(*args, **kwargs)\n-\n+    def __iter__(self):\n+        for page_num in self.page_range:\n+            yield self.page(page_num)\n+            \n     @cached_property\n     def count(self):\n         \"\"\"Return the total number of objects, across all pages.\"\"\"\n@@ -89,7 +92,10 @@ class Paginator:\n         if callable(c) and not inspect.isbuiltin(c) and method_has_no_args(c):\n             return c()\n         return len(self.object_list)\n-\n+    def __iter__(self):\n+        for page_num in self.page_range:\n+            yield self.page(page_num)\n+            \n     @cached_property\n     def num_pages(self):\n         \"\"\"Return the total number of pages.\"\"\"\n", "occurrence": 1, "normalized_patch": "--- a/django/core/paginator.py\n+++ b/django/core/paginator.py\n+    def __iter__(self):\n+        for page_num in self.page_range:\n+            yield self.page(page_num)\n+    def __iter__(self):\n+        for page_num in self.page_range:\n+            yield self.page(page_num)", "normalized_occurrence": 2}
