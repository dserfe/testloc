{"model_name_or_path": "agentless", "instance_id": "django__django-14034", "model_patch": "diff --git a/django/forms/fields.py b/django/forms/fields.py\nindex b31d0ed..8d5973c 100644\n--- a/django/forms/fields.py\n+++ b/django/forms/fields.py\n@@ -1038,7 +1038,7 @@ class MultiValueField(Field):\n                 if self.require_all_fields:\n                     # Raise a 'required' error if the MultiValueField is\n                     # required and any field is empty.\n-                    if self.required:\n+                    if self.required or field.required:\n                         raise ValidationError(self.error_messages['required'], code='required')\n                 elif field.required:\n                     # Otherwise, add an 'incomplete' error to the list of\n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/fields.py b/django/forms/fields.py\nindex 8548471..b9403fc 100644\n--- a/django/forms/fields.py\n+++ b/django/forms/fields.py\n@@ -603,7 +603,7 @@ class MultiValueField(Field):\n                 field_value = None\n             if field_value in self.empty_values:\n                 if self.require_all_fields:\n-                    if self.required:\n+                    if self.required or field.required:\n                         raise ValidationError(self.error_messages['required'], code='required')\n                 elif field.required:\n                     if field.error_messages['incomplete'] not in errors:\n", "normalized_occurrence": 1}
