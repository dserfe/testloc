{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15503", "model_patch": "diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py\nindex 0a76a39..593f2a4 100644\n--- a/django/db/models/fields/json.py\n+++ b/django/db/models/fields/json.py\n@@ -197,7 +197,11 @@ class HasKeyLookup(PostgresOperatorLookup):\n                 \"%s%s\"\n                 % (\n                     lhs_json_path,\n-                    compile_json_path(rhs_key_transforms, include_root=False),\n+                    compile_json_path(\n+                        [str(key) if isinstance(key, (int, float)) else key\n+                         for key in rhs_key_transforms],\n+                        include_root=False\n+                    ),\n                 )\n             )\n         # Add condition for each key.\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py\nindex 272d7b8..c5a055e 100644\n--- a/django/db/models/fields/json.py\n+++ b/django/db/models/fields/json.py\n@@ -124,7 +124,7 @@ class HasKeyLookup(PostgresOperatorLookup):\n                 *_, rhs_key_transforms = key.preprocess_lhs(compiler, connection)\n             else:\n                 rhs_key_transforms = [key]\n-            rhs_params.append('%s%s' % (lhs_json_path, compile_json_path(rhs_key_transforms, include_root=False)))\n+            rhs_params.append('%s%s' % (lhs_json_path, compile_json_path([str(key) if isinstance(key, (int, float)) else key for key in rhs_key_transforms], include_root=False)))\n         if self.logical_operator:\n             sql = '(%s)' % self.logical_operator.join([sql] * len(rhs_params))\n         return (sql, tuple(lhs_params) + tuple(rhs_params))\n", "normalized_occurrence": 1}
