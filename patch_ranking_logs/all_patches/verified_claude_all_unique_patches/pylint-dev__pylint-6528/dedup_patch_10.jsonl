{"model_name_or_path": "agentless_claude", "instance_id": "pylint-dev__pylint-6528", "model_patch": "diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py\nindex 6763a6f..52b2183 100644\n--- a/pylint/lint/pylinter.py\n+++ b/pylint/lint/pylinter.py\n@@ -606,6 +606,8 @@ class PyLinter(\n             files_or_modules = (files_or_modules,)  # type: ignore[assignment]\n         if self.config.recursive:\n             files_or_modules = tuple(self._discover_files(files_or_modules))\n+            # Apply ignore patterns to discovered files\n+            files_or_modules = self._filter_files(files_or_modules)\n         if self.config.from_stdin:\n             if len(files_or_modules) != 1:\n                 raise exceptions.InvalidArgsError(\n", "normalized_patch": "diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py\nindex 16c7088..0f59fd4 100644\n--- a/pylint/lint/pylinter.py\n+++ b/pylint/lint/pylinter.py\n@@ -242,6 +242,7 @@ class PyLinter(_ArgumentsManager, _MessageStateHandler, reporters.ReportsHandler\n             files_or_modules = (files_or_modules,)\n         if self.config.recursive:\n             files_or_modules = tuple(self._discover_files(files_or_modules))\n+            files_or_modules = self._filter_files(files_or_modules)\n         if self.config.from_stdin:\n             if len(files_or_modules) != 1:\n                 raise exceptions.InvalidArgsError('Missing filename required for --from-stdin')\n", "normalized_occurrence": 1}
