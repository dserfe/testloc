{"model_name_or_path": "agentless", "instance_id": "django__django-13033", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 13e70df..0ef2675 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -277,12 +277,12 @@ class SQLCompiler:\n         can add aliases to clauses that do not yet have one, or it can\n         add totally new select clauses).\n         \"\"\"\n-        if self.query.extra_order_by:\n+        if self.query.order_by:\n+            ordering = self.query.order_by\n+        elif self.query.extra_order_by:\n             ordering = self.query.extra_order_by\n         elif not self.query.default_ordering:\n             ordering = self.query.order_by\n-        elif self.query.order_by:\n-            ordering = self.query.order_by\n         elif self.query.get_meta().ordering:\n             ordering = self.query.get_meta().ordering\n             self._meta_ordering = ordering\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex d98aa67..4c1e0cd 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -132,12 +132,12 @@ class SQLCompiler:\n             ret.append((col, (sql, params), alias))\n         return (ret, klass_info, annotations)\n     def get_order_by(self):\n-        if self.query.extra_order_by:\n+        if self.query.order_by:\n+            ordering = self.query.order_by\n+        elif self.query.extra_order_by:\n             ordering = self.query.extra_order_by\n         elif not self.query.default_ordering:\n             ordering = self.query.order_by\n-        elif self.query.order_by:\n-            ordering = self.query.order_by\n         elif self.query.get_meta().ordering:\n             ordering = self.query.get_meta().ordering\n             self._meta_ordering = ordering\n", "normalized_occurrence": 1}
