{"model_name_or_path": "agentless", "instance_id": "django__django-15902", "model_patch": "diff --git a/django/forms/formsets.py b/django/forms/formsets.py\nindex de2af81..9c6b375 100644\n--- a/django/forms/formsets.py\n+++ b/django/forms/formsets.py\n@@ -144,12 +144,14 @@ class BaseFormSet(RenderableFormMixin):\n     @cached_property\n     def management_form(self):\n         \"\"\"Return the ManagementForm instance for this FormSet.\"\"\"\n+        management_form_template = \"django/forms/formsets/management_form.html\"\n         if self.is_bound:\n             form = ManagementForm(\n                 self.data,\n                 auto_id=self.auto_id,\n                 prefix=self.prefix,\n                 renderer=self.renderer,\n+                template_name=management_form_template,\n             )\n             form.full_clean()\n         else:\n@@ -163,6 +165,7 @@ class BaseFormSet(RenderableFormMixin):\n                     MAX_NUM_FORM_COUNT: self.max_num,\n                 },\n                 renderer=self.renderer,\n+                template_name=management_form_template,\n             )\n         return form\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/formsets.py b/django/forms/formsets.py\nindex 93e6290..ac23b39 100644\n--- a/django/forms/formsets.py\n+++ b/django/forms/formsets.py\n@@ -67,11 +67,12 @@ class BaseFormSet(RenderableFormMixin):\n         return '<%s: bound=%s valid=%s total_forms=%s>' % (self.__class__.__qualname__, self.is_bound, is_valid, self.total_form_count())\n     @cached_property\n     def management_form(self):\n+        management_form_template = 'django/forms/formsets/management_form.html'\n         if self.is_bound:\n-            form = ManagementForm(self.data, auto_id=self.auto_id, prefix=self.prefix, renderer=self.renderer)\n+            form = ManagementForm(self.data, auto_id=self.auto_id, prefix=self.prefix, renderer=self.renderer, template_name=management_form_template)\n             form.full_clean()\n         else:\n-            form = ManagementForm(auto_id=self.auto_id, prefix=self.prefix, initial={TOTAL_FORM_COUNT: self.total_form_count(), INITIAL_FORM_COUNT: self.initial_form_count(), MIN_NUM_FORM_COUNT: self.min_num, MAX_NUM_FORM_COUNT: self.max_num}, renderer=self.renderer)\n+            form = ManagementForm(auto_id=self.auto_id, prefix=self.prefix, initial={TOTAL_FORM_COUNT: self.total_form_count(), INITIAL_FORM_COUNT: self.initial_form_count(), MIN_NUM_FORM_COUNT: self.min_num, MAX_NUM_FORM_COUNT: self.max_num}, renderer=self.renderer, template_name=management_form_template)\n         return form\n     def total_form_count(self):\n         if self.is_bound:\n", "normalized_occurrence": 1}
