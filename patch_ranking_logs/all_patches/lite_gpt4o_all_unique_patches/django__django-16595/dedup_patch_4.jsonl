{"model_name_or_path": "agentless", "instance_id": "django__django-16595", "model_patch": "diff --git a/django/db/migrations/operations/fields.py b/django/db/migrations/operations/fields.py\nindex d35a2ee..44daf76 100644\n--- a/django/db/migrations/operations/fields.py\n+++ b/django/db/migrations/operations/fields.py\n@@ -247,23 +247,15 @@ class AlterField(FieldOperation):\n         return \"alter_%s_%s\" % (self.model_name_lower, self.name_lower)\n \n     def reduce(self, operation, app_label):\n-        if isinstance(operation, RemoveField) and self.is_same_field_operation(\n-            operation\n-        ):\n+        if isinstance(operation, RemoveField) and self.is_same_field_operation(operation):\n             return [operation]\n-        elif (\n-            isinstance(operation, RenameField)\n-            and self.is_same_field_operation(operation)\n-            and self.field.db_column is None\n-        ):\n+        elif isinstance(operation, RenameField) and self.is_same_field_operation(operation) and self.field.db_column is None:\n             return [\n                 operation,\n-                AlterField(\n-                    model_name=self.model_name,\n-                    name=operation.new_name,\n-                    field=self.field,\n-                ),\n+                AlterField(model_name=self.model_name, name=operation.new_name, field=self.field),\n             ]\n+        elif isinstance(operation, AlterField) and self.is_same_field_operation(operation):\n+            return [operation]\n         return super().reduce(operation, app_label)\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/operations/fields.py b/django/db/migrations/operations/fields.py\nindex 816ee85..4dd88ba 100644\n--- a/django/db/migrations/operations/fields.py\n+++ b/django/db/migrations/operations/fields.py\n@@ -134,6 +134,8 @@ class AlterField(FieldOperation):\n             return [operation]\n         elif isinstance(operation, RenameField) and self.is_same_field_operation(operation) and (self.field.db_column is None):\n             return [operation, AlterField(model_name=self.model_name, name=operation.new_name, field=self.field)]\n+        elif isinstance(operation, AlterField) and self.is_same_field_operation(operation):\n+            return [operation]\n         return super().reduce(operation, app_label)\n class RenameField(FieldOperation):\n     def __init__(self, model_name, old_name, new_name):\n", "normalized_occurrence": 33}
