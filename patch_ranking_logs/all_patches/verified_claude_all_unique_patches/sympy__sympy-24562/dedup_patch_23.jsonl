{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-24562", "model_patch": "diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\nindex 1c28b44..b9adfae 100644\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -1613,6 +1613,11 @@ class Rational(Number):\n                         fq = fractions.Fraction(q)\n                         p = fp/fq\n                     try:\n+                        if q is not None and isinstance(q, str):\n+                            # Handle case where both p and q are strings representing decimals\n+                            p = float(p)\n+                            q = float(q)\n+                            return Rational(p, q)\n                         p = fractions.Fraction(p)\n                     except ValueError:\n                         pass  # error will raise below\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\nindex c0e7188..acde055 100644\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -1399,6 +1399,10 @@ class Rational(Number):\n                         fq = fractions.Fraction(q)\n                         p = fp / fq\n                     try:\n+                        if q is not None and isinstance(q, str):\n+                            p = float(p)\n+                            q = float(q)\n+                            return Rational(p, q)\n                         p = fractions.Fraction(p)\n                     except ValueError:\n                         pass\n", "normalized_occurrence": 1}
