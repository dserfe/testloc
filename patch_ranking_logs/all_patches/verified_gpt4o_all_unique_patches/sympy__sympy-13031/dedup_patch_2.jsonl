{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13031", "model_patch": "diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py\nindex a79ab56..19a8850 100644\n--- a/sympy/matrices/expressions/blockmatrix.py\n+++ b/sympy/matrices/expressions/blockmatrix.py\n@@ -57,10 +57,12 @@ class BlockMatrix(MatrixExpr):\n         numrows = numcols = 0\n         M = self.blocks\n         for i in range(M.shape[0]):\n-            numrows += M[i, 0].shape[0]\n+            if M[i, 0].shape[0] > 0:\n+                numrows += M[i, 0].shape[0]\n         for i in range(M.shape[1]):\n-            numcols += M[0, i].shape[1]\n-        return (numrows, numcols)\n+            if M[0, i].shape[1] > 0:\n+                numcols += M[0, i].shape[1]\n+        return (numrows, numcols) if numrows > 0 else (0, sum(block.cols for block in self.args))\n \n     @property\n     def blockshape(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py\nindex e9f8bf4..f84820d 100644\n--- a/sympy/matrices/expressions/blockmatrix.py\n+++ b/sympy/matrices/expressions/blockmatrix.py\n@@ -27,10 +27,12 @@ class BlockMatrix(MatrixExpr):\n         numrows = numcols = 0\n         M = self.blocks\n         for i in range(M.shape[0]):\n-            numrows += M[i, 0].shape[0]\n+            if M[i, 0].shape[0] > 0:\n+                numrows += M[i, 0].shape[0]\n         for i in range(M.shape[1]):\n-            numcols += M[0, i].shape[1]\n-        return (numrows, numcols)\n+            if M[0, i].shape[1] > 0:\n+                numcols += M[0, i].shape[1]\n+        return (numrows, numcols) if numrows > 0 else (0, sum((block.cols for block in self.args)))\n     @property\n     def blockshape(self):\n         return self.blocks.shape\n", "normalized_occurrence": 1}
