{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13757", "model_patch": "diff --git a/sympy/polys/polytools.py b/sympy/polys/polytools.py\nindex c4501f6..ed60ef1 100644\n--- a/sympy/polys/polytools.py\n+++ b/sympy/polys/polytools.py\n@@ -4049,11 +4049,10 @@ class Poly(Expr):\n \n     @_sympifyit('g', NotImplemented)\n     def __rmul__(f, g):\n-        if not g.is_Poly:\n-            try:\n-                g = f.__class__(g, *f.gens)\n-            except PolynomialError:\n-                return g*f.as_expr()\n+        try:\n+            g = f.__class__(g, *f.gens)\n+        except PolynomialError:\n+            return g*f.as_expr()\n \n         return g.mul(f)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/polytools.py b/sympy/polys/polytools.py\nindex 69acdb8..7c2b218 100644\n--- a/sympy/polys/polytools.py\n+++ b/sympy/polys/polytools.py\n@@ -1261,11 +1261,10 @@ class Poly(Expr):\n         return f.mul(g)\n     @_sympifyit('g', NotImplemented)\n     def __rmul__(f, g):\n-        if not g.is_Poly:\n-            try:\n-                g = f.__class__(g, *f.gens)\n-            except PolynomialError:\n-                return g * f.as_expr()\n+        try:\n+            g = f.__class__(g, *f.gens)\n+        except PolynomialError:\n+            return g * f.as_expr()\n         return g.mul(f)\n     @_sympifyit('n', NotImplemented)\n     def __pow__(f, n):\n", "normalized_occurrence": 1}
