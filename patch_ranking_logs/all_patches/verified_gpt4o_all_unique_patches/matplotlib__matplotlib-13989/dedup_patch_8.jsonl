{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-13989", "model_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 6b68737..5d6bb0c 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -6681,12 +6681,14 @@ optional.\n \n             bins = histogram_bin_edges(np.concatenate(x),\n                                        bins, bin_range, _w)\n-        else:\n+        if bin_range is not None:\n             hist_kwargs['range'] = bin_range\n \n         density = bool(density) or bool(normed)\n         if density and not stacked:\n-            hist_kwargs = dict(density=density)\n+            hist_kwargs['density'] = density\n+        if bin_range is not None:\n+            hist_kwargs['range'] = bin_range\n \n         # List to store all the top coordinates of the histograms\n         tops = []\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 6343f7e..f6678e6 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -2028,11 +2028,13 @@ class Axes(_AxesBase):\n             else:\n                 _w = None\n             bins = histogram_bin_edges(np.concatenate(x), bins, bin_range, _w)\n-        else:\n+        if bin_range is not None:\n             hist_kwargs['range'] = bin_range\n         density = bool(density) or bool(normed)\n         if density and (not stacked):\n-            hist_kwargs = dict(density=density)\n+            hist_kwargs['density'] = density\n+        if bin_range is not None:\n+            hist_kwargs['range'] = bin_range\n         tops = []\n         mlast = None\n         for i in range(nx):\n", "normalized_occurrence": 1}
