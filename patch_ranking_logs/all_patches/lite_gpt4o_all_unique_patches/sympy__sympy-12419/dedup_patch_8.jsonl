{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-12419", "model_patch": "diff --git a/sympy/matrices/expressions/matexpr.py b/sympy/matrices/expressions/matexpr.py\nindex 8f30d0d..69471dc 100644\n--- a/sympy/matrices/expressions/matexpr.py\n+++ b/sympy/matrices/expressions/matexpr.py\n@@ -427,11 +427,7 @@ class MatrixSymbol(MatrixExpr):\n         return set((self,))\n \n     def doit(self, **hints):\n-        if hints.get('deep', True):\n-            return type(self)(self.name, self.args[1].doit(**hints),\n-                    self.args[2].doit(**hints))\n-        else:\n-            return self\n+        return self\n \n     def _eval_simplify(self, **kwargs):\n         return self\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/expressions/matexpr.py b/sympy/matrices/expressions/matexpr.py\nindex 9ec3ea5..b51790b 100644\n--- a/sympy/matrices/expressions/matexpr.py\n+++ b/sympy/matrices/expressions/matexpr.py\n@@ -253,10 +253,7 @@ class MatrixSymbol(MatrixExpr):\n     def free_symbols(self):\n         return set((self,))\n     def doit(self, **hints):\n-        if hints.get('deep', True):\n-            return type(self)(self.name, self.args[1].doit(**hints), self.args[2].doit(**hints))\n-        else:\n-            return self\n+        return self\n     def _eval_simplify(self, **kwargs):\n         return self\n class Identity(MatrixExpr):\n", "normalized_occurrence": 1}
