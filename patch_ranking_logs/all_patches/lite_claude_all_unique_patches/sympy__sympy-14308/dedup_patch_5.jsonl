{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-14308", "model_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 81d644a..2aaab0e 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -917,10 +917,14 @@ class PrettyPrinter(Printer):\n                 else:\n                     #We always wrap the measure numbers in\n                     #parentheses\n-                    arg_str = self._print(\n-                        v).parens()[0]\n-\n-                    o1.append(arg_str + ' ' + k._pretty_form)\n+                    arg_pform = self._print(v).parens()\n+                    # Center the baseline of the coefficient with the basis vector\n+                    if '\\n' in arg_pform.s:\n+                        arg_height = len(arg_pform.s.splitlines())\n+                        arg_pform.baseline = arg_height // 2\n+                    # Combine with basis vector, maintaining alignment\n+                    pform = prettyForm(*arg_pform.right(' ' + k._pretty_form))\n+                    o1.append(pform)\n                 vectstrs.append(k._pretty_form)\n \n         #outstr = u(\"\").join(o1)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 35c3eb3..ffa70e5 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -660,8 +660,12 @@ class PrettyPrinter(Printer):\n                 elif v == -1:\n                     o1.append(u'(-1) ' + k._pretty_form)\n                 else:\n-                    arg_str = self._print(v).parens()[0]\n-                    o1.append(arg_str + ' ' + k._pretty_form)\n+                    arg_pform = self._print(v).parens()\n+                    if '\\n' in arg_pform.s:\n+                        arg_height = len(arg_pform.s.splitlines())\n+                        arg_pform.baseline = arg_height // 2\n+                    pform = prettyForm(*arg_pform.right(' ' + k._pretty_form))\n+                    o1.append(pform)\n                 vectstrs.append(k._pretty_form)\n         if o1[0].startswith(u' + '):\n             o1[0] = o1[0][3:]\n", "normalized_occurrence": 1}
