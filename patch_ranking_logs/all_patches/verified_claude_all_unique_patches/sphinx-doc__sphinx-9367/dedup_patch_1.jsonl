{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-9367", "model_patch": "diff --git a/sphinx/pycode/ast.py b/sphinx/pycode/ast.py\nindex 5db5a4a..0ec08c2 100644\n--- a/sphinx/pycode/ast.py\n+++ b/sphinx/pycode/ast.py\n@@ -213,10 +213,12 @@ class _UnparseVisitor(ast.NodeVisitor):\n         return \"%s %s\" % (self.visit(node.op), self.visit(node.operand))\n \n     def visit_Tuple(self, node: ast.Tuple) -> str:\n-        if node.elts:\n-            return \"(\" + \", \".join(self.visit(e) for e in node.elts) + \")\"\n-        else:\n+        if not node.elts:\n             return \"()\"\n+        elements = \", \".join(self.visit(e) for e in node.elts)\n+        if len(node.elts) == 1:\n+            return \"(\" + elements + \",)\"\n+        return \"(\" + elements + \")\"\n \n     if sys.version_info < (3, 8):\n         # these ast nodes were deprecated in python 3.8\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/pycode/ast.py b/sphinx/pycode/ast.py\nindex 3caea72..374772f 100644\n--- a/sphinx/pycode/ast.py\n+++ b/sphinx/pycode/ast.py\n@@ -125,10 +125,12 @@ class _UnparseVisitor(ast.NodeVisitor):\n     def visit_UnaryOp(self, node: ast.UnaryOp) -> str:\n         return '%s %s' % (self.visit(node.op), self.visit(node.operand))\n     def visit_Tuple(self, node: ast.Tuple) -> str:\n-        if node.elts:\n-            return '(' + ', '.join((self.visit(e) for e in node.elts)) + ')'\n-        else:\n+        if not node.elts:\n             return '()'\n+        elements = ', '.join((self.visit(e) for e in node.elts))\n+        if len(node.elts) == 1:\n+            return '(' + elements + ',)'\n+        return '(' + elements + ')'\n     if sys.version_info < (3, 8):\n         def visit_Bytes(self, node: ast.Bytes) -> str:\n             return repr(node.s)\n", "normalized_occurrence": 1}
