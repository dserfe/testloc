{"model_name_or_path": "agentless", "instance_id": "django__django-15695", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex b086232..34b4202 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -968,7 +968,16 @@ class RenameIndex(IndexOperation):\n     def database_backwards(self, app_label, schema_editor, from_state, to_state):\n         if self.old_fields:\n             # Backward operation with unnamed index is a no-op.\n-            return\n+            # Restore the old auto-generated name for unnamed index.\n+            model = from_state.models[app_label, self.model_name_lower].model_class()\n+            index_names = schema_editor._constraint_names(model, fields=self.old_fields, index=True)\n+            if len(index_names) == 1:\n+                self.old_name = index_names[0]\n+            else:\n+                raise ValueError(\n+                    f\"Cannot resolve the old index name for {self.model_name} on {self.old_fields}. \"\n+                    f\"Found: {index_names}\"\n+                )\n \n         self.new_name_lower, self.old_name_lower = (\n             self.old_name_lower,\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 87ad28e..91453b7 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -436,7 +436,12 @@ class RenameIndex(IndexOperation):\n         schema_editor.rename_index(model, old_index, new_index)\n     def database_backwards(self, app_label, schema_editor, from_state, to_state):\n         if self.old_fields:\n-            return\n+            model = from_state.models[app_label, self.model_name_lower].model_class()\n+            index_names = schema_editor._constraint_names(model, fields=self.old_fields, index=True)\n+            if len(index_names) == 1:\n+                self.old_name = index_names[0]\n+            else:\n+                raise ValueError(f'Cannot resolve the old index name for {self.model_name} on {self.old_fields}. Found: {index_names}')\n         self.new_name_lower, self.old_name_lower = (self.old_name_lower, self.new_name_lower)\n         self.new_name, self.old_name = (self.old_name, self.new_name)\n         self.database_forwards(app_label, schema_editor, from_state, to_state)\n", "normalized_occurrence": 1}
