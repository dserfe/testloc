{"model_name_or_path": "agentless", "instance_id": "django__django-13794", "model_patch": "diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py\nindex 9115325..7783566 100644\n--- a/django/template/defaultfilters.py\n+++ b/django/template/defaultfilters.py\n@@ -675,12 +675,11 @@ def unordered_list(value, autoescape=True):\n def add(value, arg):\n     \"\"\"Add the arg to the value.\"\"\"\n     try:\n-        return int(value) + int(arg)\n+        return value + arg\n     except (ValueError, TypeError):\n-        try:\n+        if isinstance(value, str) and isinstance(arg, str):\n             return value + arg\n-        except Exception:\n-            return ''\n+        return ''\n \n \n @register.filter(is_safe=False)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py\nindex 3e399af..070a45d 100644\n--- a/django/template/defaultfilters.py\n+++ b/django/template/defaultfilters.py\n@@ -342,12 +342,11 @@ def unordered_list(value, autoescape=True):\n @register.filter(is_safe=False)\n def add(value, arg):\n     try:\n-        return int(value) + int(arg)\n+        return value + arg\n     except (ValueError, TypeError):\n-        try:\n+        if isinstance(value, str) and isinstance(arg, str):\n             return value + arg\n-        except Exception:\n-            return ''\n+        return ''\n @register.filter(is_safe=False)\n def get_digit(value, arg):\n     try:\n", "normalized_occurrence": 1}
