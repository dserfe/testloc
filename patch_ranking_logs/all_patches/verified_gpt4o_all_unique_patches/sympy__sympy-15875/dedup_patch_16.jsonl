{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-15875", "model_patch": "diff --git a/sympy/core/add.py b/sympy/core/add.py\nindex 1046af8..7ab6d72 100644\n--- a/sympy/core/add.py\n+++ b/sympy/core/add.py\n@@ -555,15 +555,19 @@ class Add(Expr, AssocOp):\n         if z == len(self.args):\n             return True\n         if len(nz) == len(self.args):\n-            return None\n-        b = self.func(*nz)\n-        if b.is_zero:\n-            if not im_or_z and not im:\n+            if im_or_z or im:\n+                return None\n+            return False\n+        elif not nz:\n+            return True if im_or_z or im else None\n+        else:\n+            b = self.func(*nz)\n+            if b.is_zero:\n+                if im_or_z or im:\n+                    return None\n                 return True\n-            if im and not im_or_z:\n+            elif b.is_zero is False:\n                 return False\n-        if b.is_zero is False:\n-            return False\n \n     def _eval_is_odd(self):\n         l = [f for f in self.args if not (f.is_even is True)]\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/add.py b/sympy/core/add.py\nindex 63cb816..63a6f61 100644\n--- a/sympy/core/add.py\n+++ b/sympy/core/add.py\n@@ -309,15 +309,19 @@ class Add(Expr, AssocOp):\n         if z == len(self.args):\n             return True\n         if len(nz) == len(self.args):\n-            return None\n-        b = self.func(*nz)\n-        if b.is_zero:\n-            if not im_or_z and (not im):\n+            if im_or_z or im:\n+                return None\n+            return False\n+        elif not nz:\n+            return True if im_or_z or im else None\n+        else:\n+            b = self.func(*nz)\n+            if b.is_zero:\n+                if im_or_z or im:\n+                    return None\n                 return True\n-            if im and (not im_or_z):\n+            elif b.is_zero is False:\n                 return False\n-        if b.is_zero is False:\n-            return False\n     def _eval_is_odd(self):\n         l = [f for f in self.args if not f.is_even is True]\n         if not l:\n", "normalized_occurrence": 1}
