{"model_name_or_path": "agentless", "instance_id": "django__django-16408", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 83f3a12..a02342d 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -2246,8 +2246,10 @@ class Query(BaseExpression):\n             field_dict = self.select_related\n         for field in fields:\n             d = field_dict\n-            for part in field.split(LOOKUP_SEP):\n+            parts = field.split(LOOKUP_SEP)\n+            for part in parts[:-1]:\n                 d = d.setdefault(part, {})\n+            d[parts[-1]] = {}\n         self.select_related = field_dict\n \n     def add_extra(self, select, select_params, where, params, tables, order_by):\n", "occurrence": 3, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 0b42199..1118051 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1125,8 +1125,10 @@ class Query(BaseExpression):\n             field_dict = self.select_related\n         for field in fields:\n             d = field_dict\n-            for part in field.split(LOOKUP_SEP):\n+            parts = field.split(LOOKUP_SEP)\n+            for part in parts[:-1]:\n                 d = d.setdefault(part, {})\n+            d[parts[-1]] = {}\n         self.select_related = field_dict\n     def add_extra(self, select, select_params, where, params, tables, order_by):\n         if select:\n", "normalized_occurrence": 3}
