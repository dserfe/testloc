{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-9673", "model_patch": "diff --git a/sphinx/ext/napoleon/docstring.py b/sphinx/ext/napoleon/docstring.py\nindex ea465e6..eb49ce0 100644\n--- a/sphinx/ext/napoleon/docstring.py\n+++ b/sphinx/ext/napoleon/docstring.py\n@@ -776,10 +776,20 @@ class GoogleDocstring:\n \n         lines: List[str] = []\n         for _name, _type, _desc in fields:\n-            if use_rtype:\n-                field = self._format_field(_name, '', _desc)\n+            # Handle typehints in description mode\n+            if hasattr(self._config, 'autodoc_typehints') and self._config.autodoc_typehints == 'description':\n+                if _type:\n+                    if _desc:\n+                        field = self._format_field(_name, '', f'{_desc} ({_type})')\n+                    else:\n+                        field = self._format_field(_name, '', f'{_type}')\n+                else:\n+                    field = self._format_field(_name, '', _desc)\n             else:\n-                field = self._format_field(_name, _type, _desc)\n+                if use_rtype:\n+                    field = self._format_field(_name, '', _desc)\n+                else:\n+                    field = self._format_field(_name, _type, _desc)\n \n             if multi:\n                 if lines:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/napoleon/docstring.py b/sphinx/ext/napoleon/docstring.py\nindex bc7a995..0175ab7 100644\n--- a/sphinx/ext/napoleon/docstring.py\n+++ b/sphinx/ext/napoleon/docstring.py\n@@ -513,7 +513,15 @@ class GoogleDocstring:\n             use_rtype = self._config.napoleon_use_rtype\n         lines: List[str] = []\n         for _name, _type, _desc in fields:\n-            if use_rtype:\n+            if hasattr(self._config, 'autodoc_typehints') and self._config.autodoc_typehints == 'description':\n+                if _type:\n+                    if _desc:\n+                        field = self._format_field(_name, '', f'{_desc} ({_type})')\n+                    else:\n+                        field = self._format_field(_name, '', f'{_type}')\n+                else:\n+                    field = self._format_field(_name, '', _desc)\n+            elif use_rtype:\n                 field = self._format_field(_name, '', _desc)\n             else:\n                 field = self._format_field(_name, _type, _desc)\n", "normalized_occurrence": 1}
