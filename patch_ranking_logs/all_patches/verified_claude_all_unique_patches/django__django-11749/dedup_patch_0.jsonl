{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11749", "model_patch": "diff --git a/django/core/management/__init__.py b/django/core/management/__init__.py\nindex b670a73..0ac9a5c 100644\n--- a/django/core/management/__init__.py\n+++ b/django/core/management/__init__.py\n@@ -132,10 +132,14 @@ def call_command(command_name, *args, **options):\n     parser_actions = list(get_actions(parser))\n     # Any required arguments which are passed in via **options must be passed\n     # to parse_args().\n-    parse_args += [\n-        '{}={}'.format(min(opt.option_strings), arg_options[opt.dest])\n-        for opt in parser_actions if opt.required and opt.dest in options\n-    ]\n+    for opt in parser_actions:\n+        if opt.dest in options:\n+            # Handle individually required arguments\n+            if opt.required:\n+                parse_args.append('{}={}'.format(min(opt.option_strings), arg_options[opt.dest]))\n+            # Handle arguments that are part of a required group\n+            elif hasattr(opt, 'container') and getattr(opt.container, 'required', False):\n+                parse_args.append('{}={}'.format(min(opt.option_strings), arg_options[opt.dest]))\n     defaults = parser.parse_args(args=parse_args)\n     defaults = dict(defaults._get_kwargs(), **arg_options)\n     # Raise an error if any unknown options were passed.\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/management/__init__.py b/django/core/management/__init__.py\nindex f9cfb8d..a85d835 100644\n--- a/django/core/management/__init__.py\n+++ b/django/core/management/__init__.py\n@@ -53,7 +53,12 @@ def call_command(command_name, *args, **options):\n             else:\n                 yield opt\n     parser_actions = list(get_actions(parser))\n-    parse_args += ['{}={}'.format(min(opt.option_strings), arg_options[opt.dest]) for opt in parser_actions if opt.required and opt.dest in options]\n+    for opt in parser_actions:\n+        if opt.dest in options:\n+            if opt.required:\n+                parse_args.append('{}={}'.format(min(opt.option_strings), arg_options[opt.dest]))\n+            elif hasattr(opt, 'container') and getattr(opt.container, 'required', False):\n+                parse_args.append('{}={}'.format(min(opt.option_strings), arg_options[opt.dest]))\n     defaults = parser.parse_args(args=parse_args)\n     defaults = dict(defaults._get_kwargs(), **arg_options)\n     stealth_options = set(command.base_stealth_options + command.stealth_options)\n", "normalized_occurrence": 1}
