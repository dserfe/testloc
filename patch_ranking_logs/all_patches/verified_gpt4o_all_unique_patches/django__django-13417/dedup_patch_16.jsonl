{"model_name_or_path": "agentless", "instance_id": "django__django-13417", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex b8a8c1e..07b8771 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -288,10 +288,13 @@ class SQLCompiler:\n             self._meta_ordering = ordering\n         else:\n             ordering = []\n-        if self.query.standard_ordering:\n-            asc, desc = ORDER_DIR['ASC']\n+        if not ordering:\n+            self.query.default_ordering = False\n         else:\n-            asc, desc = ORDER_DIR['DESC']\n+            if self.query.standard_ordering:\n+                asc, desc = ORDER_DIR['ASC']\n+            else:\n+                asc, desc = ORDER_DIR['DESC']\n \n         order_by = []\n         for field in ordering:\n@@ -393,6 +396,8 @@ class SQLCompiler:\n                 continue\n             seen.add((without_ordering, params_hash))\n             result.append((resolved, (sql, params, is_ref)))\n+        if not result:\n+            self.query.default_ordering = False\n         return result\n \n     def get_extra_select(self, order_by, select):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 89a1b28..ca91df7 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -143,7 +143,9 @@ class SQLCompiler:\n             self._meta_ordering = ordering\n         else:\n             ordering = []\n-        if self.query.standard_ordering:\n+        if not ordering:\n+            self.query.default_ordering = False\n+        elif self.query.standard_ordering:\n             asc, desc = ORDER_DIR['ASC']\n         else:\n             asc, desc = ORDER_DIR['DESC']\n@@ -210,6 +212,8 @@ class SQLCompiler:\n                 continue\n             seen.add((without_ordering, params_hash))\n             result.append((resolved, (sql, params, is_ref)))\n+        if not result:\n+            self.query.default_ordering = False\n         return result\n     def get_extra_select(self, order_by, select):\n         extra_select = []\n", "normalized_occurrence": 1}
