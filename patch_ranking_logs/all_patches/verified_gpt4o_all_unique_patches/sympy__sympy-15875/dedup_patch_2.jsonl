{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-15875", "model_patch": "diff --git a/sympy/core/add.py b/sympy/core/add.py\nindex 1046af8..03a8f4d 100644\n--- a/sympy/core/add.py\n+++ b/sympy/core/add.py\n@@ -525,7 +525,10 @@ class Add(Expr, AssocOp):\n                 return\n         b = self.func(*nz)\n         if b.is_zero:\n-            return fuzzy_not(self.func(*im_I).is_zero)\n+            im_zero_check = self.func(*im_I).is_zero\n+            if im_zero_check is None:\n+                return None\n+            return fuzzy_not(im_zero_check)\n         elif b.is_zero is False:\n             return False\n \n@@ -536,8 +539,7 @@ class Add(Expr, AssocOp):\n             return\n         nz = []\n         z = 0\n-        im_or_z = False\n-        im = False\n+        im_or_z = im = False\n         for a in self.args:\n             if a.is_real:\n                 if a.is_zero:\n@@ -560,8 +562,11 @@ class Add(Expr, AssocOp):\n         if b.is_zero:\n             if not im_or_z and not im:\n                 return True\n-            if im and not im_or_z:\n-                return False\n+            if im:\n+                im_zero_check = self.func(*[a*S.ImaginaryUnit for a in self.args]).is_zero\n+                if im_zero_check is None:\n+                    return None\n+                return fuzzy_not(im_zero_check)\n         if b.is_zero is False:\n             return False\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/add.py b/sympy/core/add.py\nindex 63cb816..db11c07 100644\n--- a/sympy/core/add.py\n+++ b/sympy/core/add.py\n@@ -282,7 +282,10 @@ class Add(Expr, AssocOp):\n                 return\n         b = self.func(*nz)\n         if b.is_zero:\n-            return fuzzy_not(self.func(*im_I).is_zero)\n+            im_zero_check = self.func(*im_I).is_zero\n+            if im_zero_check is None:\n+                return None\n+            return fuzzy_not(im_zero_check)\n         elif b.is_zero is False:\n             return False\n     def _eval_is_zero(self):\n@@ -290,8 +293,7 @@ class Add(Expr, AssocOp):\n             return\n         nz = []\n         z = 0\n-        im_or_z = False\n-        im = False\n+        im_or_z = im = False\n         for a in self.args:\n             if a.is_real:\n                 if a.is_zero:\n@@ -314,8 +316,11 @@ class Add(Expr, AssocOp):\n         if b.is_zero:\n             if not im_or_z and (not im):\n                 return True\n-            if im and (not im_or_z):\n-                return False\n+            if im:\n+                im_zero_check = self.func(*[a * S.ImaginaryUnit for a in self.args]).is_zero\n+                if im_zero_check is None:\n+                    return None\n+                return fuzzy_not(im_zero_check)\n         if b.is_zero is False:\n             return False\n     def _eval_is_odd(self):\n", "normalized_occurrence": 1}
