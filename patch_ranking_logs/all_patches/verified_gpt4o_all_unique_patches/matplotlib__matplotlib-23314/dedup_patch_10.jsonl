{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-23314", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex f43c36a..88680b4 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -3015,6 +3015,19 @@ class _AxesBase(martist.Artist):\n \n     # Drawing\n     @martist.allow_rasterization\n+    def set_visible(self, b):\n+        \"\"\"\n+        Set the artist's visibility.\n+\n+        Parameters\n+        ----------\n+        b : bool\n+            Artist's visibility.\n+        \"\"\"\n+        super().set_visible(b)\n+        for child in self.get_children():\n+            child.set_visible(b)\n+\n     def draw(self, renderer):\n         # docstring inherited\n         if renderer is None:\n@@ -4608,4 +4621,4 @@ class _AxesBase(martist.Artist):\n \n     def get_shared_y_axes(self):\n         \"\"\"Return an immutable view on the shared y-axes Grouper.\"\"\"\n-        return cbook.GrouperView(self._shared_axes[\"y\"])\n+        return cbook.GrouperView(self._shared_axes[\"y\"])\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex d0b0d73..bd70c8e 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1265,6 +1265,10 @@ class _AxesBase(martist.Artist):\n             x, _ = title.get_position()\n             title.set_position((x, ymax))\n     @martist.allow_rasterization\n+    def set_visible(self, b):\n+        super().set_visible(b)\n+        for child in self.get_children():\n+            child.set_visible(b)\n     def draw(self, renderer):\n         if renderer is None:\n             raise RuntimeError('No renderer defined')\n", "normalized_occurrence": 1}
