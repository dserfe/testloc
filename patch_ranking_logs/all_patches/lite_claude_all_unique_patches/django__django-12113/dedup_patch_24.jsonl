{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12113", "model_patch": "diff --git a/django/db/backends/sqlite3/base.py b/django/db/backends/sqlite3/base.py\nindex 730e4b7..abb02fd 100644\n--- a/django/db/backends/sqlite3/base.py\n+++ b/django/db/backends/sqlite3/base.py\n@@ -196,7 +196,11 @@ class DatabaseWrapper(BaseDatabaseWrapper):\n                 'for controlling thread shareability.',\n                 RuntimeWarning\n             )\n-        kwargs.update({'check_same_thread': False, 'uri': True})\n+        kwargs.update({\n+            'check_same_thread': False,\n+            'uri': True,\n+            'timeout': 30,  # Add timeout for busy handling\n+        })\n         return kwargs\n \n     @async_unsafe\n@@ -252,7 +256,11 @@ class DatabaseWrapper(BaseDatabaseWrapper):\n         return conn\n \n     def init_connection_state(self):\n-        pass\n+        with self.cursor() as cursor:\n+            # Enable WAL mode to allow multiple connections\n+            cursor.execute('PRAGMA journal_mode=WAL')\n+            # Set busy timeout to handle concurrent access\n+            cursor.execute('PRAGMA busy_timeout=30000')\n \n     def create_cursor(self, name=None):\n         return self.connection.cursor(factory=SQLiteCursorWrapper)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/sqlite3/base.py b/django/db/backends/sqlite3/base.py\nindex f4e71e4..14adb51 100644\n--- a/django/db/backends/sqlite3/base.py\n+++ b/django/db/backends/sqlite3/base.py\n@@ -67,7 +67,7 @@ class DatabaseWrapper(BaseDatabaseWrapper):\n         kwargs = {'database': str(settings_dict['NAME']), 'detect_types': Database.PARSE_DECLTYPES | Database.PARSE_COLNAMES, **settings_dict['OPTIONS']}\n         if 'check_same_thread' in kwargs and kwargs['check_same_thread']:\n             warnings.warn('The `check_same_thread` option was provided and set to True. It will be overridden with False. Use the `DatabaseWrapper.allow_thread_sharing` property instead for controlling thread shareability.', RuntimeWarning)\n-        kwargs.update({'check_same_thread': False, 'uri': True})\n+        kwargs.update({'check_same_thread': False, 'uri': True, 'timeout': 30})\n         return kwargs\n     @async_unsafe\n     def get_new_connection(self, conn_params):\n@@ -121,7 +121,9 @@ class DatabaseWrapper(BaseDatabaseWrapper):\n         conn.execute('PRAGMA foreign_keys = ON')\n         return conn\n     def init_connection_state(self):\n-        pass\n+        with self.cursor() as cursor:\n+            cursor.execute('PRAGMA journal_mode=WAL')\n+            cursor.execute('PRAGMA busy_timeout=30000')\n     def create_cursor(self, name=None):\n         return self.connection.cursor(factory=SQLiteCursorWrapper)\n     @async_unsafe\n", "normalized_occurrence": 1}
