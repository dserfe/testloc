{"model_name_or_path": "agentless", "instance_id": "django__django-13028", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex a6a3e97..5e64d2b 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1255,7 +1255,7 @@ class Query(BaseExpression):\n             raise FieldError(\"Cannot parse keyword query %r\" % arg)\n         lookups, parts, reffed_expression = self.solve_lookup_type(arg)\n \n-        if check_filterable:\n+        if check_filterable and not getattr(filter_expr.lhs.output_field, 'filterable', True):\n             self.check_filterable(reffed_expression)\n \n         if not allow_joins and len(parts) > 1:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 5b98027..eab0054 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -665,7 +665,7 @@ class Query(BaseExpression):\n         if not arg:\n             raise FieldError('Cannot parse keyword query %r' % arg)\n         lookups, parts, reffed_expression = self.solve_lookup_type(arg)\n-        if check_filterable:\n+        if check_filterable and (not getattr(filter_expr.lhs.output_field, 'filterable', True)):\n             self.check_filterable(reffed_expression)\n         if not allow_joins and len(parts) > 1:\n             raise FieldError('Joined field references are not permitted in this query')\n", "normalized_occurrence": 1}
