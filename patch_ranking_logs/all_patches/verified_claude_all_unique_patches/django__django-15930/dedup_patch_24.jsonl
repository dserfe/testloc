{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15930", "model_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 47df1a9..d853fef 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -1258,8 +1258,12 @@ class When(Expression):\n                 \"When() supports a Q object, a boolean expression, or lookups \"\n                 \"as a condition.\"\n             )\n-        if isinstance(condition, Q) and not condition:\n-            raise ValueError(\"An empty Q() can't be used as a When() condition.\")\n+        if isinstance(condition, Q):\n+            if condition.negated and not condition.children:\n+                # A negated empty Q (~Q()) is equivalent to a True condition\n+                condition = Q()\n+            elif not condition.negated and not condition.children:\n+                raise ValueError(\"An empty Q() can't be used as a When() condition.\")\n         super().__init__(output_field=None)\n         self.condition = condition\n         self.result = self._parse_expressions(then)[0]\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 1b947ba..d1a82d2 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -633,8 +633,11 @@ class When(Expression):\n                 condition, lookups = (Q(condition, **lookups), None)\n         if condition is None or not getattr(condition, 'conditional', False) or lookups:\n             raise TypeError('When() supports a Q object, a boolean expression, or lookups as a condition.')\n-        if isinstance(condition, Q) and (not condition):\n-            raise ValueError(\"An empty Q() can't be used as a When() condition.\")\n+        if isinstance(condition, Q):\n+            if condition.negated and (not condition.children):\n+                condition = Q()\n+            elif not condition.negated and (not condition.children):\n+                raise ValueError(\"An empty Q() can't be used as a When() condition.\")\n         super().__init__(output_field=None)\n         self.condition = condition\n         self.result = self._parse_expressions(then)[0]\n", "normalized_occurrence": 1}
