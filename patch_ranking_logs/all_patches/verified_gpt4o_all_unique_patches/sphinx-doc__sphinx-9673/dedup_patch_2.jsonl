{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9673", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 51811ca..1f1f0b2 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -43,6 +43,25 @@ def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element\n     if app.config.autodoc_typehints not in ('both', 'description'):\n         return\n \n+    annotations = app.env.temp_data.get('annotations', {})\n+    if annotations.get(fullname, {}):\n+        if app.config.autodoc_typehints_description_target in ('all', 'documented'):\n+            field_lists = [n for n in contentnode if isinstance(n, nodes.field_list)]\n+            if not field_lists:\n+                field_list = insert_field_list(contentnode)\n+                field_lists.append(field_list)\n+            \n+            for field_list in field_lists:\n+                augment_descriptions_with_types(field_list, annotations[fullname])\n+        else:\n+            field_lists = [n for n in contentnode if isinstance(n, nodes.field_list)]\n+            if not field_lists:\n+                field_list = insert_field_list(contentnode)\n+                field_lists.append(field_list)\n+            \n+            for field_list in field_lists:\n+                modify_field_list(field_list, annotations[fullname])\n+\n     try:\n         signature = cast(addnodes.desc_signature, contentnode.parent[0])\n         if signature['module']:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 03a755b..abc9d35 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -24,6 +24,22 @@ def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element\n         return\n     if app.config.autodoc_typehints not in ('both', 'description'):\n         return\n+    annotations = app.env.temp_data.get('annotations', {})\n+    if annotations.get(fullname, {}):\n+        if app.config.autodoc_typehints_description_target in ('all', 'documented'):\n+            field_lists = [n for n in contentnode if isinstance(n, nodes.field_list)]\n+            if not field_lists:\n+                field_list = insert_field_list(contentnode)\n+                field_lists.append(field_list)\n+            for field_list in field_lists:\n+                augment_descriptions_with_types(field_list, annotations[fullname])\n+        else:\n+            field_lists = [n for n in contentnode if isinstance(n, nodes.field_list)]\n+            if not field_lists:\n+                field_list = insert_field_list(contentnode)\n+                field_lists.append(field_list)\n+            for field_list in field_lists:\n+                modify_field_list(field_list, annotations[fullname])\n     try:\n         signature = cast(addnodes.desc_signature, contentnode.parent[0])\n         if signature['module']:\n", "normalized_occurrence": 1}
