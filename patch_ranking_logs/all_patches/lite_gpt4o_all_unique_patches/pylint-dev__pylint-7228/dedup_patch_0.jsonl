{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-7228", "model_patch": "diff --git a/pylint/lint/run.py b/pylint/lint/run.py\nindex 4c2e1aa..4f172ec 100644\n--- a/pylint/lint/run.py\n+++ b/pylint/lint/run.py\n@@ -158,9 +158,13 @@ group are mutually exclusive.\",\n         if self._is_pylint_config:\n             _register_generate_config_options(linter._arg_parser)\n \n-        args = _config_initialization(\n-            linter, args, reporter, config_file=self._rcfile, verbose_mode=self.verbose\n-        )\n+        try:\n+            args = _config_initialization(\n+                linter, args, reporter, config_file=self._rcfile, verbose_mode=self.verbose\n+            )\n+        except re.error as e:\n+            print(f\"Regex error in configuration: {e}\")\n+            sys.exit(1)\n \n         # Handle the 'pylint-config' command\n         if self._is_pylint_config:\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/lint/run.py b/pylint/lint/run.py\nindex 0a9e679..0e724ae 100644\n--- a/pylint/lint/run.py\n+++ b/pylint/lint/run.py\n@@ -79,7 +79,11 @@ class Run:\n         linter.enable('c-extension-no-member')\n         if self._is_pylint_config:\n             _register_generate_config_options(linter._arg_parser)\n-        args = _config_initialization(linter, args, reporter, config_file=self._rcfile, verbose_mode=self.verbose)\n+        try:\n+            args = _config_initialization(linter, args, reporter, config_file=self._rcfile, verbose_mode=self.verbose)\n+        except re.error as e:\n+            print(f'Regex error in configuration: {e}')\n+            sys.exit(1)\n         if self._is_pylint_config:\n             warnings.warn(\"NOTE: The 'pylint-config' command is experimental and usage can change\", UserWarning)\n             code = _handle_pylint_config_commands(linter)\n", "normalized_occurrence": 1}
