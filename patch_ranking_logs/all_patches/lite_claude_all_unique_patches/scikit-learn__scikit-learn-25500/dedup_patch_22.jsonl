{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-25500", "model_patch": "diff --git a/sklearn/isotonic.py b/sklearn/isotonic.py\nindex 6365edf..1e8680b 100644\n--- a/sklearn/isotonic.py\n+++ b/sklearn/isotonic.py\n@@ -410,7 +410,9 @@ class IsotonicRegression(RegressorMixin, TransformerMixin, BaseEstimator):\n         y_pred : ndarray of shape (n_samples,)\n             Transformed data.\n         \"\"\"\n-        return self.transform(T)\n+        # For internal use in CalibratedClassifierCV, we need to ensure\n+        # we return a numpy array regardless of config settings\n+        return np.asarray(self.transform(T))\n \n     # We implement get_feature_names_out here instead of using\n     # `ClassNamePrefixFeaturesOutMixin`` because `input_features` are ignored.\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/isotonic.py b/sklearn/isotonic.py\nindex 156dcaa..b0c061b 100644\n--- a/sklearn/isotonic.py\n+++ b/sklearn/isotonic.py\n@@ -98,7 +98,7 @@ class IsotonicRegression(RegressorMixin, TransformerMixin, BaseEstimator):\n         res = res.astype(T.dtype)\n         return res\n     def predict(self, T):\n-        return self.transform(T)\n+        return np.asarray(self.transform(T))\n     def get_feature_names_out(self, input_features=None):\n         check_is_fitted(self, 'f_')\n         class_name = self.__class__.__name__.lower()\n", "normalized_occurrence": 1}
