{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25311", "model_patch": "diff --git a/lib/matplotlib/legend.py b/lib/matplotlib/legend.py\nindex a038473..fb4992e 100644\n--- a/lib/matplotlib/legend.py\n+++ b/lib/matplotlib/legend.py\n@@ -51,6 +51,15 @@ from . import legend_handler\n \n \n class DraggableLegend(DraggableOffsetBox):\n+    def __getstate__(self):\n+        state = self.__dict__.copy()\n+        # Remove the unpicklable objects\n+        state['legend'] = None\n+        return state\n+\n+    def __setstate__(self, state):\n+        self.__dict__.update(state)\n+        self.legend = None\n     def __init__(self, legend, use_blit=False, update=\"loc\"):\n         \"\"\"\n         Wrapper around a `.Legend` to support mouse dragging.\n@@ -1199,6 +1208,8 @@ class Legend(Artist):\n                                                   use_blit,\n                                                   update=update)\n         else:\n+            if self._draggable is not None:\n+                self._draggable.legend = self\n             if self._draggable is not None:\n                 self._draggable.disconnect()\n             self._draggable = None\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/legend.py b/lib/matplotlib/legend.py\nindex 8070532..26f708c 100644\n--- a/lib/matplotlib/legend.py\n+++ b/lib/matplotlib/legend.py\n@@ -17,6 +17,13 @@ from matplotlib.offsetbox import AnchoredOffsetbox, DraggableOffsetBox, HPacker,\n from matplotlib.container import ErrorbarContainer, BarContainer, StemContainer\n from . import legend_handler\n class DraggableLegend(DraggableOffsetBox):\n+    def __getstate__(self):\n+        state = self.__dict__.copy()\n+        state['legend'] = None\n+        return state\n+    def __setstate__(self, state):\n+        self.__dict__.update(state)\n+        self.legend = None\n     def __init__(self, legend, use_blit=False, update='loc'):\n         self.legend = legend\n         _api.check_in_list(['loc', 'bbox'], update=update)\n@@ -425,6 +432,8 @@ class Legend(Artist):\n             if self._draggable is None:\n                 self._draggable = DraggableLegend(self, use_blit, update=update)\n         else:\n+            if self._draggable is not None:\n+                self._draggable.legend = self\n             if self._draggable is not None:\n                 self._draggable.disconnect()\n             self._draggable = None\n", "normalized_occurrence": 1}
