{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-7114", "model_patch": "diff --git a/pylint/lint/expand_modules.py b/pylint/lint/expand_modules.py\nindex a7d6e52..36278be 100644\n--- a/pylint/lint/expand_modules.py\n+++ b/pylint/lint/expand_modules.py\n@@ -132,8 +132,8 @@ def expand_modules(\n                 }\n             )\n         has_init = (\n-            not (modname.endswith(\".__init__\") or modname == \"__init__\")\n-            and os.path.basename(filepath) == \"__init__.py\"\n+            not (modname.endswith(\".__init__\") or modname == \"__init__\") \n+            and (os.path.basename(filepath) == \"__init__.py\" or modname == os.path.basename(filepath).replace('.py', ''))\n         )\n         if has_init or is_namespace or is_directory:\n             for subfilepath in modutils.get_module_files(\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/lint/expand_modules.py b/pylint/lint/expand_modules.py\nindex a1d3fbd..dbd4e2c 100644\n--- a/pylint/lint/expand_modules.py\n+++ b/pylint/lint/expand_modules.py\n@@ -66,7 +66,7 @@ def expand_modules(files_or_modules: Sequence[str], ignore_list: list[str], igno\n             is_directory = modutils.is_directory(spec)\n         if not is_namespace:\n             result.append({'path': filepath, 'name': modname, 'isarg': True, 'basepath': filepath, 'basename': modname})\n-        has_init = not (modname.endswith('.__init__') or modname == '__init__') and os.path.basename(filepath) == '__init__.py'\n+        has_init = not (modname.endswith('.__init__') or modname == '__init__') and (os.path.basename(filepath) == '__init__.py' or modname == os.path.basename(filepath).replace('.py', ''))\n         if has_init or is_namespace or is_directory:\n             for subfilepath in modutils.get_module_files(os.path.dirname(filepath), ignore_list, list_all=is_namespace):\n                 if filepath == subfilepath:\n", "normalized_occurrence": 1}
