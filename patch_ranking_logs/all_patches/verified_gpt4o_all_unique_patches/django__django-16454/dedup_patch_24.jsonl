{"model_name_or_path": "agentless", "instance_id": "django__django-16454", "model_patch": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex f221176..ce35097 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -57,7 +57,20 @@ class CommandParser(ArgumentParser):\n         self.called_from_command_line = called_from_command_line\n         super().__init__(**kwargs)\n \n-    def parse_args(self, args=None, namespace=None):\n+    def add_subparsers(self, **kwargs):\n+        subparsers = super().add_subparsers(**kwargs)\n+\n+        # Wrap add_parser to pass additional arguments from CommandParser\n+        original_add_parser = subparsers.add_parser\n+\n+        def add_parser(name, **kwargs):\n+            parser = original_add_parser(name, **kwargs)\n+            parser.missing_args_message = self.missing_args_message\n+            parser.called_from_command_line = self.called_from_command_line\n+            return parser\n+\n+        subparsers.add_parser = add_parser\n+        return subparsers\n         # Catch missing argument for a better error message\n         if self.missing_args_message and not (\n             args or any(not arg.startswith(\"-\") for arg in args)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex 14f4b26..ca3f5b3 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -20,7 +20,16 @@ class CommandParser(ArgumentParser):\n         self.missing_args_message = missing_args_message\n         self.called_from_command_line = called_from_command_line\n         super().__init__(**kwargs)\n-    def parse_args(self, args=None, namespace=None):\n+    def add_subparsers(self, **kwargs):\n+        subparsers = super().add_subparsers(**kwargs)\n+        original_add_parser = subparsers.add_parser\n+        def add_parser(name, **kwargs):\n+            parser = original_add_parser(name, **kwargs)\n+            parser.missing_args_message = self.missing_args_message\n+            parser.called_from_command_line = self.called_from_command_line\n+            return parser\n+        subparsers.add_parser = add_parser\n+        return subparsers\n         if self.missing_args_message and (not (args or any((not arg.startswith('-') for arg in args)))):\n             self.error(self.missing_args_message)\n         return super().parse_args(args, namespace)\n", "normalized_occurrence": 1}
