{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-6116", "model_patch": "diff --git a/src/_pytest/main.py b/src/_pytest/main.py\nindex 4808225..ee200ad 100644\n--- a/src/_pytest/main.py\n+++ b/src/_pytest/main.py\n@@ -107,7 +107,7 @@ def pytest_addoption(parser):\n \n     group = parser.getgroup(\"collect\", \"collection\")\n     group.addoption(\n-        \"--collectonly\",\n+        \"-co\", \"--collectonly\",\n         \"--collect-only\",\n         action=\"store_true\",\n         help=\"only collect tests, don't execute them.\",\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/main.py b/src/_pytest/main.py\nindex a004a7a..0609cd1 100644\n--- a/src/_pytest/main.py\n+++ b/src/_pytest/main.py\n@@ -43,7 +43,7 @@ def pytest_addoption(parser):\n     group._addoption('--continue-on-collection-errors', action='store_true', default=False, dest='continue_on_collection_errors', help='Force test execution even if collection errors occur.')\n     group._addoption('--rootdir', action='store', dest='rootdir', help=\"Define root directory for tests. Can be relative path: 'root_dir', './root_dir', 'root_dir/another_dir/'; absolute path: '/home/user/root_dir'; path with variables: '$HOME/root_dir'.\")\n     group = parser.getgroup('collect', 'collection')\n-    (group.addoption('--collectonly', '--collect-only', action='store_true', help=\"only collect tests, don't execute them.\"),)\n+    (group.addoption('-co', '--collectonly', '--collect-only', action='store_true', help=\"only collect tests, don't execute them.\"),)\n     group.addoption('--pyargs', action='store_true', help='try to interpret all arguments as python packages.')\n     group.addoption('--ignore', action='append', metavar='path', help='ignore path during collection (multi-allowed).')\n     group.addoption('--ignore-glob', action='append', metavar='path', help='ignore path pattern during collection (multi-allowed).')\n", "normalized_occurrence": 1}
