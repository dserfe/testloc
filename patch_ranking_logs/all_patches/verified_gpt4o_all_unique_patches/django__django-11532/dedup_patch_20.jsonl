{"model_name_or_path": "agentless", "instance_id": "django__django-11532", "model_patch": "diff --git a/django/core/mail/utils.py b/django/core/mail/utils.py\nindex af5ac38..04ffe93 100644\n--- a/django/core/mail/utils.py\n+++ b/django/core/mail/utils.py\n@@ -3,6 +3,7 @@ Email message and email sending related helper functions.\n \"\"\"\n \n import socket\n+import idna\n \n \n # Cache the hostname, but do it lazily: socket.getfqdn() can take a couple of\n@@ -14,7 +15,7 @@ class CachedDnsName:\n     def get_fqdn(self):\n         if not hasattr(self, '_fqdn'):\n             self._fqdn = socket.getfqdn()\n-        return self._fqdn\n+        return idna.encode(self._fqdn).decode('ascii')\n \n \n-DNS_NAME = CachedDnsName()\n+DNS_NAME = CachedDnsName()\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/mail/utils.py b/django/core/mail/utils.py\nindex f3d6156..aa3be18 100644\n--- a/django/core/mail/utils.py\n+++ b/django/core/mail/utils.py\n@@ -1,9 +1,10 @@\n import socket\n+import idna\n class CachedDnsName:\n     def __str__(self):\n         return self.get_fqdn()\n     def get_fqdn(self):\n         if not hasattr(self, '_fqdn'):\n             self._fqdn = socket.getfqdn()\n-        return self._fqdn\n+        return idna.encode(self._fqdn).decode('ascii')\n DNS_NAME = CachedDnsName()\n\\ No newline at end of file\n", "normalized_occurrence": 1}
