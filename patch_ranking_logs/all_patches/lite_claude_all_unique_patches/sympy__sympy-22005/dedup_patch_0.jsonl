{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-22005", "model_patch": "diff --git a/sympy/solvers/polysys.py b/sympy/solvers/polysys.py\nindex 66efb1a..750dc57 100644\n--- a/sympy/solvers/polysys.py\n+++ b/sympy/solvers/polysys.py\n@@ -241,7 +241,14 @@ def solve_generic(polys, opt):\n         univariate = list(filter(_is_univariate, basis))\n \n         if len(univariate) == 1:\n-            f = univariate.pop()\n+            f = univariate[0]\n+            if f.has(gens[-1]):\n+                f = univariate.pop()\n+            else:\n+                raise NotImplementedError(filldedent('''\n+                    only zero-dimensional systems supported\n+                    (finite number of solutions)\n+                    '''))\n         else:\n             raise NotImplementedError(filldedent('''\n                 only zero-dimensional systems supported\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/solvers/polysys.py b/sympy/solvers/polysys.py\nindex d62db4a..4107e72 100644\n--- a/sympy/solvers/polysys.py\n+++ b/sympy/solvers/polysys.py\n@@ -216,7 +216,11 @@ def solve_generic(polys, opt):\n                 return None\n         univariate = list(filter(_is_univariate, basis))\n         if len(univariate) == 1:\n-            f = univariate.pop()\n+            f = univariate[0]\n+            if f.has(gens[-1]):\n+                f = univariate.pop()\n+            else:\n+                raise NotImplementedError(filldedent('\\n                    only zero-dimensional systems supported\\n                    (finite number of solutions)\\n                    '))\n         else:\n             raise NotImplementedError(filldedent('\\n                only zero-dimensional systems supported\\n                (finite number of solutions)\\n                '))\n         gens = f.gens\n", "normalized_occurrence": 1}
