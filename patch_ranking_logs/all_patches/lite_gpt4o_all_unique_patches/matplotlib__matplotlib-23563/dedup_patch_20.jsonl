{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-23563", "model_patch": "diff --git a/lib/mpl_toolkits/mplot3d/art3d.py b/lib/mpl_toolkits/mplot3d/art3d.py\nindex fa869c7..a42f524 100644\n--- a/lib/mpl_toolkits/mplot3d/art3d.py\n+++ b/lib/mpl_toolkits/mplot3d/art3d.py\n@@ -207,6 +207,9 @@ class Line3D(lines.Line2D):\n         verts3d : length-3 tuple or array-like\n             The current data as a tuple or array-like.\n         \"\"\"\n+        # Ensure _verts3d is properly initialized\n+        if not hasattr(self, '_verts3d'):\n+            self._verts3d = ([], [], [])\n         return self._verts3d\n \n     @artist.allow_rasterization\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/mpl_toolkits/mplot3d/art3d.py b/lib/mpl_toolkits/mplot3d/art3d.py\nindex e39ff0d..bee9a2c 100644\n--- a/lib/mpl_toolkits/mplot3d/art3d.py\n+++ b/lib/mpl_toolkits/mplot3d/art3d.py\n@@ -78,6 +78,8 @@ class Line3D(lines.Line2D):\n             self._verts3d = args\n         self.stale = True\n     def get_data_3d(self):\n+        if not hasattr(self, '_verts3d'):\n+            self._verts3d = ([], [], [])\n         return self._verts3d\n     @artist.allow_rasterization\n     def draw(self, renderer):\n", "normalized_occurrence": 1}
