{"model_name_or_path": "agentless_claude", "instance_id": "pydata__xarray-4695", "model_patch": "diff --git a/xarray/core/indexing.py b/xarray/core/indexing.py\nindex 4b06bfd..a799ef3 100644\n--- a/xarray/core/indexing.py\n+++ b/xarray/core/indexing.py\n@@ -112,6 +112,11 @@ def convert_label_indexer(index, label, index_name=\"\", method=None, tolerance=No\n     return a new pandas.Index or pandas.MultiIndex (otherwise return None).\n     \"\"\"\n     new_index = None\n+    \n+    # Handle case where label is a dict with a key that matches method parameter name\n+    if is_dict_like(label) and not isinstance(index, pd.MultiIndex):\n+        if len(label) == 1 and \"method\" in label:\n+            label = label[\"method\"]\n \n     if isinstance(label, slice):\n         if method is not None or tolerance is not None:\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/indexing.py b/xarray/core/indexing.py\nindex 27ac399..1e95505 100644\n--- a/xarray/core/indexing.py\n+++ b/xarray/core/indexing.py\n@@ -59,6 +59,9 @@ def get_indexer_nd(index, labels, method=None, tolerance=None):\n     return indexer\n def convert_label_indexer(index, label, index_name='', method=None, tolerance=None):\n     new_index = None\n+    if is_dict_like(label) and (not isinstance(index, pd.MultiIndex)):\n+        if len(label) == 1 and 'method' in label:\n+            label = label['method']\n     if isinstance(label, slice):\n         if method is not None or tolerance is not None:\n             raise NotImplementedError('cannot use ``method`` argument if any indexers are slice objects')\n", "normalized_occurrence": 1}
