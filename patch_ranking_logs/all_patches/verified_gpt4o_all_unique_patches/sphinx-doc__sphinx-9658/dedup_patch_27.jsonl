{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9658", "model_patch": "diff --git a/sphinx/ext/autodoc/mock.py b/sphinx/ext/autodoc/mock.py\nindex 281da6f..9a7df01 100644\n--- a/sphinx/ext/autodoc/mock.py\n+++ b/sphinx/ext/autodoc/mock.py\n@@ -66,13 +66,13 @@ class _MockObject:\n         return call\n \n     def __repr__(self) -> str:\n-        return self.__display_name__\n+        return self.__module__ + '.' + self.__class__.__name__\n \n \n def _make_subclass(name: str, module: str, superclass: Any = _MockObject,\n                    attributes: Any = None, decorator_args: Tuple = ()) -> Any:\n     attrs = {'__module__': module,\n-             '__display_name__': module + '.' + name,\n+             '__display_name__': module + '.' + superclass.__name__,\n              '__sphinx_decorator_args__': decorator_args}\n     attrs.update(attributes or {})\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/mock.py b/sphinx/ext/autodoc/mock.py\nindex 8db72bb..89910d1 100644\n--- a/sphinx/ext/autodoc/mock.py\n+++ b/sphinx/ext/autodoc/mock.py\n@@ -37,9 +37,9 @@ class _MockObject:\n         call.__sphinx_decorator_args__ = args\n         return call\n     def __repr__(self) -> str:\n-        return self.__display_name__\n+        return self.__module__ + '.' + self.__class__.__name__\n def _make_subclass(name: str, module: str, superclass: Any=_MockObject, attributes: Any=None, decorator_args: Tuple=()) -> Any:\n-    attrs = {'__module__': module, '__display_name__': module + '.' + name, '__sphinx_decorator_args__': decorator_args}\n+    attrs = {'__module__': module, '__display_name__': module + '.' + superclass.__name__, '__sphinx_decorator_args__': decorator_args}\n     attrs.update(attributes or {})\n     return type(name, (superclass,), attrs)\n class _MockModule(ModuleType):\n", "normalized_occurrence": 1}
