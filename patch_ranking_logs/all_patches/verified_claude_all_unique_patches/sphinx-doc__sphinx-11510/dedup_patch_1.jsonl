{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-11510", "model_patch": "diff --git a/sphinx/environment/__init__.py b/sphinx/environment/__init__.py\nindex 96f4a03..b28bc58 100644\n--- a/sphinx/environment/__init__.py\n+++ b/sphinx/environment/__init__.py\n@@ -606,6 +606,17 @@ class BuildEnvironment:\n         doctree = pickle.loads(serialised)\n         doctree.settings.env = self\n         doctree.reporter = LoggingReporter(self.doc2path(docname))\n+        \n+        # If this document was previously processed (e.g. as an include),\n+        # update its content from the cache\n+        if hasattr(self, '_processed_includes') and docname in self._processed_includes:\n+            for node in doctree.traverse():\n+                if isinstance(node, nodes.Text):\n+                    text = node.astext()\n+                    if text in self._processed_includes[docname]:\n+                        node.parent.replace(node, \n+                            nodes.Text(self._processed_includes[docname]))\n+                        \n         return doctree\n \n     @functools.cached_property\ndiff --git a/sphinx/io.py b/sphinx/io.py\nindex 2cbe59f..f26785b 100644\n--- a/sphinx/io.py\n+++ b/sphinx/io.py\n@@ -112,6 +112,13 @@ class SphinxStandaloneReader(SphinxBaseReader):\n         # emit \"source-read\" event\n         arg = [content]\n         env.events.emit('source-read', env.docname, arg)\n+        \n+        # Store processed content in environment to preserve changes for includes\n+        if hasattr(env, '_processed_includes'):\n+            env._processed_includes[env.docname] = arg[0]\n+        else:\n+            env._processed_includes = {env.docname: arg[0]}\n+            \n         return arg[0]\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/io.py b/sphinx/io.py\nindex 93c5794..8b26994 100644\n--- a/sphinx/io.py\n+++ b/sphinx/io.py\n@@ -64,6 +64,10 @@ class SphinxStandaloneReader(SphinxBaseReader):\n         content = self.source.read()\n         arg = [content]\n         env.events.emit('source-read', env.docname, arg)\n+        if hasattr(env, '_processed_includes'):\n+            env._processed_includes[env.docname] = arg[0]\n+        else:\n+            env._processed_includes = {env.docname: arg[0]}\n         return arg[0]\n class SphinxI18nReader(SphinxBaseReader):\n     def setup(self, app: Sphinx) -> None:\ndiff --git a/sphinx/environment/__init__.py b/sphinx/environment/__init__.py\nindex 3c422c4..a3e1e14 100644\n--- a/sphinx/environment/__init__.py\n+++ b/sphinx/environment/__init__.py\n@@ -348,6 +348,12 @@ class BuildEnvironment:\n         doctree = pickle.loads(serialised)\n         doctree.settings.env = self\n         doctree.reporter = LoggingReporter(self.doc2path(docname))\n+        if hasattr(self, '_processed_includes') and docname in self._processed_includes:\n+            for node in doctree.traverse():\n+                if isinstance(node, nodes.Text):\n+                    text = node.astext()\n+                    if text in self._processed_includes[docname]:\n+                        node.parent.replace(node, nodes.Text(self._processed_includes[docname]))\n         return doctree\n     @functools.cached_property\n     def master_doctree(self) -> nodes.document:\n", "normalized_occurrence": 1}
