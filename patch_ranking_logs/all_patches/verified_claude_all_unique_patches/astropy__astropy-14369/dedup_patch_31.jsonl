{"model_name_or_path": "agentless_claude", "instance_id": "astropy__astropy-14369", "model_patch": "diff --git a/astropy/units/format/cds.py b/astropy/units/format/cds.py\nindex 761c4b8..dbebab6 100644\n--- a/astropy/units/format/cds.py\n+++ b/astropy/units/format/cds.py\n@@ -185,9 +185,17 @@ class CDS(Base):\n                               | unit_expression DIVISION combined_units\n             \"\"\"\n             if len(p) == 3:\n+                # Case: /unit_expression\n                 p[0] = p[2] ** -1\n             else:\n-                p[0] = p[1] / p[3]\n+                # Case: unit_expression/combined_units\n+                # For consecutive divisions like J/m/s, we need to ensure\n+                # all denominators stay in denominator\n+                if hasattr(p[3], '_recursive_division'):\n+                    p[0] = p[1] * p[3]\n+                else:\n+                    p[0] = p[1] / p[3]\n+                p[0]._recursive_division = True\n \n         def p_unit_expression(p):\n             \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/units/format/cds.py b/astropy/units/format/cds.py\nindex 829c8ad..a9350e7 100644\n--- a/astropy/units/format/cds.py\n+++ b/astropy/units/format/cds.py\n@@ -82,7 +82,11 @@ class CDS(Base):\n             if len(p) == 3:\n                 p[0] = p[2] ** (-1)\n             else:\n-                p[0] = p[1] / p[3]\n+                if hasattr(p[3], '_recursive_division'):\n+                    p[0] = p[1] * p[3]\n+                else:\n+                    p[0] = p[1] / p[3]\n+                p[0]._recursive_division = True\n         def p_unit_expression(p):\n             if len(p) == 2:\n                 p[0] = p[1]\n", "normalized_occurrence": 1}
