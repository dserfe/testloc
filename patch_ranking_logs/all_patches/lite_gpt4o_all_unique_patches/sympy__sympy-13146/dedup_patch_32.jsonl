{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13146", "model_patch": "diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py\nindex 1ed5a09..ccf08cb 100644\n--- a/sympy/simplify/simplify.py\n+++ b/sympy/simplify/simplify.py\n@@ -505,7 +505,18 @@ def simplify(expr, ratio=1.7, measure=count_ops, fu=False):\n     function, we get a completely different result that is still different\n     from the input expression by doing this.\n     \"\"\"\n+    from sympy.core import Add, Mul\n     expr = sympify(expr)\n+    if expr.is_Add:\n+        terms = Add.make_args(expr)\n+        simplified_terms = {}\n+        for term in terms:\n+            base, exp = term.as_base_exp()\n+            if exp not in simplified_terms:\n+                simplified_terms[exp] = base\n+            else:\n+                simplified_terms[exp] += base\n+        expr = Add(*[base**exp for exp, base in simplified_terms.items() if base != 0])\n \n     try:\n         return expr._eval_simplify(ratio=ratio, measure=measure)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py\nindex 6ee9e94..e3107a5 100644\n--- a/sympy/simplify/simplify.py\n+++ b/sympy/simplify/simplify.py\n@@ -145,7 +145,18 @@ def signsimp(expr, evaluate=None):\n         e = e.xreplace({m: --m for m in e.atoms(Mul) if --m != m})\n     return e\n def simplify(expr, ratio=1.7, measure=count_ops, fu=False):\n+    from sympy.core import Add, Mul\n     expr = sympify(expr)\n+    if expr.is_Add:\n+        terms = Add.make_args(expr)\n+        simplified_terms = {}\n+        for term in terms:\n+            base, exp = term.as_base_exp()\n+            if exp not in simplified_terms:\n+                simplified_terms[exp] = base\n+            else:\n+                simplified_terms[exp] += base\n+        expr = Add(*[base ** exp for exp, base in simplified_terms.items() if base != 0])\n     try:\n         return expr._eval_simplify(ratio=ratio, measure=measure)\n     except AttributeError:\n", "normalized_occurrence": 1}
