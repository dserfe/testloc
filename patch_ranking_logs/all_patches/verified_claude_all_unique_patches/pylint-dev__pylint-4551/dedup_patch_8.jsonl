{"model_name_or_path": "agentless_claude", "instance_id": "pylint-dev__pylint-4551", "model_patch": "diff --git a/pylint/pyreverse/diagrams.py b/pylint/pyreverse/diagrams.py\nindex 0111bb1..553c52b 100644\n--- a/pylint/pyreverse/diagrams.py\n+++ b/pylint/pyreverse/diagrams.py\n@@ -84,6 +84,8 @@ class ClassDiagram(Figure, FilterMixIn):\n             for n, m in node.items()\n             if isinstance(m, astroid.FunctionDef) and decorated_with_property(m)\n         ]\n+        \n+        # Get attributes from instance_attrs_type, locals_type and properties\n         for node_name, associated_nodes in (\n             list(node.instance_attrs_type.items())\n             + list(node.locals_type.items())\n@@ -95,6 +97,25 @@ class ClassDiagram(Figure, FilterMixIn):\n             if names:\n                 node_name = \"{} : {}\".format(node_name, \", \".join(names))\n             attrs.append(node_name)\n+            \n+        # Check for type annotations in __init__ method\n+        if '__init__' in node:\n+            init_method = node['__init__']\n+            if hasattr(init_method.args, 'annotations'):\n+                for arg_name, annotation in init_method.args.annotations.items():\n+                    if arg_name != 'self' and arg_name != 'return':\n+                        if not self.show_attr(arg_name):\n+                            continue\n+                        try:\n+                            type_name = annotation.name\n+                            if type_name.lower() == 'str':\n+                                type_name = 'String'\n+                            attr_name = \"{} : {}\".format(arg_name, type_name)\n+                            if attr_name not in attrs:\n+                                attrs.append(attr_name)\n+                        except AttributeError:\n+                            continue\n+                            \n         return sorted(attrs)\n \n     def get_methods(self, node):\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/pyreverse/diagrams.py b/pylint/pyreverse/diagrams.py\nindex d9b60dc..25a626e 100644\n--- a/pylint/pyreverse/diagrams.py\n+++ b/pylint/pyreverse/diagrams.py\n@@ -64,6 +64,22 @@ class ClassDiagram(Figure, FilterMixIn):\n             if names:\n                 node_name = '{} : {}'.format(node_name, ', '.join(names))\n             attrs.append(node_name)\n+        if '__init__' in node:\n+            init_method = node['__init__']\n+            if hasattr(init_method.args, 'annotations'):\n+                for arg_name, annotation in init_method.args.annotations.items():\n+                    if arg_name != 'self' and arg_name != 'return':\n+                        if not self.show_attr(arg_name):\n+                            continue\n+                        try:\n+                            type_name = annotation.name\n+                            if type_name.lower() == 'str':\n+                                type_name = 'String'\n+                            attr_name = '{} : {}'.format(arg_name, type_name)\n+                            if attr_name not in attrs:\n+                                attrs.append(attr_name)\n+                        except AttributeError:\n+                            continue\n         return sorted(attrs)\n \n     def get_methods(self, node):\n", "normalized_occurrence": 1}
