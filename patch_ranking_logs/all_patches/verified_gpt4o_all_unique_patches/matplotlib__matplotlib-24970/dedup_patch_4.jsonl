{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-24970", "model_patch": "diff --git a/lib/matplotlib/colors.py b/lib/matplotlib/colors.py\nindex bd73e56..38d4f9d 100644\n--- a/lib/matplotlib/colors.py\n+++ b/lib/matplotlib/colors.py\n@@ -727,9 +727,9 @@ class Colormap:\n                 xa = xa.astype(int)\n         # Set the over-range indices before the under-range;\n         # otherwise the under-range values get converted to over-range.\n-        xa[xa > self.N - 1] = self._i_over\n-        xa[xa < 0] = self._i_under\n-        xa[mask_bad] = self._i_bad\n+        xa[xa > self.N - 1] = np.uint8(self._i_over % 256)\n+        xa[xa < 0] = np.uint8(self._i_under % 256)\n+        xa[mask_bad] = np.uint8(self._i_bad % 256)\n \n         lut = self._lut\n         if bytes:\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/colors.py b/lib/matplotlib/colors.py\nindex fe9796e..f6d51d4 100644\n--- a/lib/matplotlib/colors.py\n+++ b/lib/matplotlib/colors.py\n@@ -600,9 +600,9 @@ class Colormap:\n                 xa[xa == self.N] = self.N - 1\n                 np.clip(xa, -1, self.N, out=xa)\n                 xa = xa.astype(int)\n-        xa[xa > self.N - 1] = self._i_over\n-        xa[xa < 0] = self._i_under\n-        xa[mask_bad] = self._i_bad\n+        xa[xa > self.N - 1] = np.uint8(self._i_over % 256)\n+        xa[xa < 0] = np.uint8(self._i_under % 256)\n+        xa[mask_bad] = np.uint8(self._i_bad % 256)\n         lut = self._lut\n         if bytes:\n             lut = (lut * 255).astype(np.uint8)\n", "normalized_occurrence": 1}
