{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-14096", "model_patch": "diff --git a/astropy/coordinates/sky_coordinate.py b/astropy/coordinates/sky_coordinate.py\nindex f158027..34974d3 100644\n--- a/astropy/coordinates/sky_coordinate.py\n+++ b/astropy/coordinates/sky_coordinate.py\n@@ -894,9 +894,11 @@ class SkyCoord(ShapedLikeNDArray):\n             if frame_cls is not None and self.frame.is_transformable_to(frame_cls):\n                 return self.transform_to(attr)\n \n-        # Fail\n+        # Fail with the correct attribute name\n         raise AttributeError(\n-            f\"'{self.__class__.__name__}' object has no attribute '{attr}'\"\n+            f\"'{self.__class__.__name__}' object has no attribute '{attr}'. \"\n+            \"If 'attr' is a property, it is likely that an attribute accessed \"\n+            \"within the property does not exist.\"\n         )\n \n     def __setattr__(self, attr, val):\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/coordinates/sky_coordinate.py b/astropy/coordinates/sky_coordinate.py\nindex 7fb9e10..f450f57 100644\n--- a/astropy/coordinates/sky_coordinate.py\n+++ b/astropy/coordinates/sky_coordinate.py\n@@ -275,7 +275,7 @@ class SkyCoord(ShapedLikeNDArray):\n             frame_cls = frame_transform_graph.lookup_name(attr)\n             if frame_cls is not None and self.frame.is_transformable_to(frame_cls):\n                 return self.transform_to(attr)\n-        raise AttributeError(f\"'{self.__class__.__name__}' object has no attribute '{attr}'\")\n+        raise AttributeError(f\"'{self.__class__.__name__}' object has no attribute '{attr}'. If 'attr' is a property, it is likely that an attribute accessed within the property does not exist.\")\n     def __setattr__(self, attr, val):\n         if '_sky_coord_frame' in self.__dict__:\n             if self._is_name(attr):\n", "normalized_occurrence": 1}
