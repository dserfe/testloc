{"model_name_or_path": "agentless", "instance_id": "django__django-13012", "model_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 48095d5..52c5a67 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -848,6 +848,10 @@ class ExpressionList(Func):\n \n \n class ExpressionWrapper(Expression):\n+    def get_group_by_cols(self, alias=None):\n+        if isinstance(self.expression, Value):\n+            return []\n+        return super().get_group_by_cols(alias)\n     \"\"\"\n     An expression that can wrap another expression so that it can provide\n     extra context to the inner expression, such as the output_field.\n", "occurrence": 1, "normalized_patch": "--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n+    def get_group_by_cols(self, alias=None):\n+        if isinstance(self.expression, Value):\n+            return []\n+        return super().get_group_by_cols(alias)\n+    '\\n    An expression that can wrap another expression so that it can provide\\n    extra context to the inner expression, such as the output_field.\\n    '", "normalized_occurrence": 1}
