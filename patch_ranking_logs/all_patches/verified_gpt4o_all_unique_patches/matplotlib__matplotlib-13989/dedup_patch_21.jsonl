{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-13989", "model_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 6b68737..e5b4a11 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -6673,6 +6673,8 @@ optional.\n         # If bins are not specified either explicitly or via range,\n         # we need to figure out the range required for all datasets,\n         # and supply that to np.histogram.\n+        hist_kwargs['range'] = bin_range  # Ensure range is always included in hist_kwargs\n+\n         if not input_empty and len(x) > 1:\n             if weights is not None:\n                 _w = np.concatenate(w)\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 6343f7e..706bb93 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -2022,6 +2022,7 @@ class Axes(_AxesBase):\n                     xmax = max(xmax, np.nanmax(xi))\n             if not np.isnan([xmin, xmax]).any() and (not xmin > xmax):\n                 bin_range = (xmin, xmax)\n+        hist_kwargs['range'] = bin_range\n         if not input_empty and len(x) > 1:\n             if weights is not None:\n                 _w = np.concatenate(w)\n", "normalized_occurrence": 1}
