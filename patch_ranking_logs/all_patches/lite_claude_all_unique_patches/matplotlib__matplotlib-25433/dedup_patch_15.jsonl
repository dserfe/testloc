{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-25433", "model_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex f12a9a3..7f9daef 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -883,6 +883,11 @@ class RangeSlider(SliderBase):\n             event.canvas.release_mouse(self.ax)\n             self._active_handle = None\n             return\n+            \n+        # Release mouse grab before potential figure clear in callbacks\n+        if event.name == \"motion_notify_event\":\n+            event.canvas.release_mouse(self.ax)\n+            self.drag_active = False\n \n         # determine which handle was grabbed\n         if self.orientation == \"vertical\":\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex 2882ff9..0dad766 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -712,6 +712,9 @@ class RangeSlider(SliderBase):\n             event.canvas.release_mouse(self.ax)\n             self._active_handle = None\n             return\n+        if event.name == 'motion_notify_event':\n+            event.canvas.release_mouse(self.ax)\n+            self.drag_active = False\n         if self.orientation == 'vertical':\n             handle_index = np.argmin(np.abs([h.get_ydata()[0] - event.ydata for h in self._handles]))\n         else:\n", "normalized_occurrence": 1}
