{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-9359", "model_patch": "diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py\nindex 9657da0..305290c 100644\n--- a/src/_pytest/assertion/rewrite.py\n+++ b/src/_pytest/assertion/rewrite.py\n@@ -936,7 +936,7 @@ class AssertionRewriter(ast.NodeVisitor):\n             self.statements.append(ast.If(negation, body, []))\n             if assert_.msg:\n                 assertmsg = self.helper(\"_format_assertmsg\", assert_.msg)\n-                explanation = \"\\n>assert \" + explanation\n+                explanation = \"assert \" + explanation\n             else:\n                 assertmsg = ast.Str(\"\")\n                 explanation = \"assert \" + explanation\n", "occurrence": 3, "normalized_patch": "diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py\nindex 9f4da3b..d031a76 100644\n--- a/src/_pytest/assertion/rewrite.py\n+++ b/src/_pytest/assertion/rewrite.py\n@@ -497,7 +497,7 @@ class AssertionRewriter(ast.NodeVisitor):\n             self.statements.append(ast.If(negation, body, []))\n             if assert_.msg:\n                 assertmsg = self.helper('_format_assertmsg', assert_.msg)\n-                explanation = '\\n>assert ' + explanation\n+                explanation = 'assert ' + explanation\n             else:\n                 assertmsg = ast.Str('')\n                 explanation = 'assert ' + explanation\n", "normalized_occurrence": 3}
