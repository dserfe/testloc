{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-12236", "model_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 03af2f5..078ea1c 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -14,7 +14,7 @@ from sympy.core.compatibility import range\n \n @xthreaded\n @public\n-def apart(f, x=None, full=False, **options):\n+def apart(f, x, full=False, **options):\n     \"\"\"\n     Compute partial fraction decomposition of a rational function.\n \n@@ -72,7 +72,9 @@ def apart(f, x=None, full=False, **options):\n \n     f = sympify(f)\n \n-    if f.is_Atom:\n+    if x is None:\n+        raise ValueError(\"The variable for apart function must be specified\")\n+    elif f.is_Atom:\n         return f\n     else:\n         P, Q = f.as_numer_denom()\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 21c4bd7..e46aa67 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -9,10 +9,12 @@ from sympy.utilities import numbered_symbols, take, xthreaded, public\n from sympy.core.compatibility import range\n @xthreaded\n @public\n-def apart(f, x=None, full=False, **options):\n+def apart(f, x, full=False, **options):\n     allowed_flags(options, [])\n     f = sympify(f)\n-    if f.is_Atom:\n+    if x is None:\n+        raise ValueError('The variable for apart function must be specified')\n+    elif f.is_Atom:\n         return f\n     else:\n         P, Q = f.as_numer_denom()\n", "normalized_occurrence": 1}
