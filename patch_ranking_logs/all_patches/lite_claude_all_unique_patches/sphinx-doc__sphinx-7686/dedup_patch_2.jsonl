{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-7686", "model_patch": "diff --git a/sphinx/ext/autosummary/generate.py b/sphinx/ext/autosummary/generate.py\nindex 9925546..067b8f9 100644\n--- a/sphinx/ext/autosummary/generate.py\n+++ b/sphinx/ext/autosummary/generate.py\n@@ -246,7 +246,16 @@ def generate_autosummary_content(name: str, obj: Any, parent: Any,\n     ns.update(context)\n \n     if doc.objtype == 'module':\n-        ns['members'] = dir(obj)\n+        all_members = dir(obj)\n+        filtered_members = []\n+        for name in all_members:\n+            try:\n+                value = safe_getattr(obj, name)\n+                if imported_members or getattr(value, '__module__', None) == obj.__name__:\n+                    filtered_members.append(name)\n+            except AttributeError:\n+                continue\n+        ns['members'] = filtered_members\n         ns['functions'], ns['all_functions'] = \\\n             get_members(obj, {'function'}, imported=imported_members)\n         ns['classes'], ns['all_classes'] = \\\n@@ -254,7 +263,7 @@ def generate_autosummary_content(name: str, obj: Any, parent: Any,\n         ns['exceptions'], ns['all_exceptions'] = \\\n             get_members(obj, {'exception'}, imported=imported_members)\n         ns['attributes'], ns['all_attributes'] = \\\n-            get_module_attrs(ns['members'])\n+            get_module_attrs(filtered_members)\n         ispackage = hasattr(obj, '__path__')\n         if ispackage and recursive:\n             ns['modules'], ns['all_modules'] = get_modules(obj)\n", "occurrence": 4, "normalized_patch": "diff --git a/sphinx/ext/autosummary/generate.py b/sphinx/ext/autosummary/generate.py\nindex 03652ed..ec6c5d8 100644\n--- a/sphinx/ext/autosummary/generate.py\n+++ b/sphinx/ext/autosummary/generate.py\n@@ -149,11 +149,20 @@ def generate_autosummary_content(name: str, obj: Any, parent: Any, template: Aut\n     ns = {}\n     ns.update(context)\n     if doc.objtype == 'module':\n-        ns['members'] = dir(obj)\n+        all_members = dir(obj)\n+        filtered_members = []\n+        for name in all_members:\n+            try:\n+                value = safe_getattr(obj, name)\n+                if imported_members or getattr(value, '__module__', None) == obj.__name__:\n+                    filtered_members.append(name)\n+            except AttributeError:\n+                continue\n+        ns['members'] = filtered_members\n         ns['functions'], ns['all_functions'] = get_members(obj, {'function'}, imported=imported_members)\n         ns['classes'], ns['all_classes'] = get_members(obj, {'class'}, imported=imported_members)\n         ns['exceptions'], ns['all_exceptions'] = get_members(obj, {'exception'}, imported=imported_members)\n-        ns['attributes'], ns['all_attributes'] = get_module_attrs(ns['members'])\n+        ns['attributes'], ns['all_attributes'] = get_module_attrs(filtered_members)\n         ispackage = hasattr(obj, '__path__')\n         if ispackage and recursive:\n             ns['modules'], ns['all_modules'] = get_modules(obj)\n", "normalized_occurrence": 4}
