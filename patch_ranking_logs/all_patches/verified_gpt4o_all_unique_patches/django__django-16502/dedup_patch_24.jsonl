{"model_name_or_path": "agentless", "instance_id": "django__django-16502", "model_patch": "diff --git a/django/http/response.py b/django/http/response.py\nindex b918697..dd4002a 100644\n--- a/django/http/response.py\n+++ b/django/http/response.py\n@@ -383,7 +383,7 @@ class HttpResponse(HttpResponseBase):\n     def __init__(self, content=b\"\", *args, **kwargs):\n         super().__init__(*args, **kwargs)\n         # Content is a bytestring. See the `content` property methods.\n-        self.content = content\n+        self.content = b\"\" if kwargs.get('request_method', '') == 'HEAD' else content\n \n     def __getstate__(self):\n         obj_dict = self.__dict__.copy()\n", "occurrence": 1, "normalized_patch": "diff --git a/django/http/response.py b/django/http/response.py\nindex 508a8a7..2387309 100644\n--- a/django/http/response.py\n+++ b/django/http/response.py\n@@ -198,7 +198,7 @@ class HttpResponse(HttpResponseBase):\n     non_picklable_attrs = frozenset(['resolver_match', 'client', 'context', 'json', 'templates'])\n     def __init__(self, content=b'', *args, **kwargs):\n         super().__init__(*args, **kwargs)\n-        self.content = content\n+        self.content = b'' if kwargs.get('request_method', '') == 'HEAD' else content\n     def __getstate__(self):\n         obj_dict = self.__dict__.copy()\n         for attr in self.non_picklable_attrs:\n", "normalized_occurrence": 1}
