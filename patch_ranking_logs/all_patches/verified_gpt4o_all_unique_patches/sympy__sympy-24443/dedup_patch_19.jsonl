{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-24443", "model_patch": "diff --git a/sympy/combinatorics/homomorphisms.py b/sympy/combinatorics/homomorphisms.py\nindex 0a601d4..da98293 100644\n--- a/sympy/combinatorics/homomorphisms.py\n+++ b/sympy/combinatorics/homomorphisms.py\n@@ -339,8 +339,10 @@ def _check_homomorphism(domain, codomain, images):\n                     s = r[i]\n                 if s in images:\n                     w = w*images[s]**power\n-                elif s**-1 in images:\n-                    w = w*images[s**-1]**power\n+                elif isinstance(domain, PermutationGroup) and s**-1 in gens:\n+                    s_inv = domain.generators[gens.index(s**-1)]\n+                    if s_inv in images:\n+                        w = w*images[s_inv]**power\n                 i += abs(power)\n                 j += 1\n             return w\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/combinatorics/homomorphisms.py b/sympy/combinatorics/homomorphisms.py\nindex c2fbe44..b06ad7d 100644\n--- a/sympy/combinatorics/homomorphisms.py\n+++ b/sympy/combinatorics/homomorphisms.py\n@@ -208,8 +208,10 @@ def _check_homomorphism(domain, codomain, images):\n                     s = r[i]\n                 if s in images:\n                     w = w * images[s] ** power\n-                elif s ** (-1) in images:\n-                    w = w * images[s ** (-1)] ** power\n+                elif isinstance(domain, PermutationGroup) and s ** (-1) in gens:\n+                    s_inv = domain.generators[gens.index(s ** (-1))]\n+                    if s_inv in images:\n+                        w = w * images[s_inv] ** power\n                 i += abs(power)\n                 j += 1\n             return w\n", "normalized_occurrence": 1}
