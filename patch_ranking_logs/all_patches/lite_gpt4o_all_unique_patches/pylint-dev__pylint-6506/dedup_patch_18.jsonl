{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-6506", "model_patch": "diff --git a/pylint/config/config_initialization.py b/pylint/config/config_initialization.py\nindex a3fdb0c..ad0f0f7 100644\n--- a/pylint/config/config_initialization.py\n+++ b/pylint/config/config_initialization.py\n@@ -57,6 +57,8 @@ def _config_initialization(\n     except _UnrecognizedOptionError as exc:\n         msg = \", \".join(exc.options)\n         linter.add_message(\"unrecognized-option\", line=0, args=msg)\n+        print(f\"Unrecognized option(s) found: {msg}\", file=sys.stderr)\n+        sys.exit(32)\n \n     # Then, if a custom reporter is provided as argument, it may be overridden\n     # by file parameters, so we re-set it here. We do this before command line\n@@ -103,4 +105,4 @@ def _config_initialization(\n \n     linter._parse_error_mode()\n \n-    return parsed_args_list\n+    return parsed_args_list\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/config/config_initialization.py b/pylint/config/config_initialization.py\nindex e5a3333..77f10bc 100644\n--- a/pylint/config/config_initialization.py\n+++ b/pylint/config/config_initialization.py\n@@ -26,6 +26,8 @@ def _config_initialization(linter: PyLinter, args_list: list[str], reporter: rep\n     except _UnrecognizedOptionError as exc:\n         msg = ', '.join(exc.options)\n         linter.add_message('unrecognized-option', line=0, args=msg)\n+        print(f'Unrecognized option(s) found: {msg}', file=sys.stderr)\n+        sys.exit(32)\n     if reporter:\n         linter.set_reporter(reporter)\n     linter.set_current_module('Command line')\n", "normalized_occurrence": 1}
