{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-8638", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex f4e1e57..4f25676 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -2428,6 +2428,11 @@ class AttributeDocumenter(GenericAliasMixin, NewTypeMixin, SlotsMixin,  # type:\n     def add_directive_header(self, sig: str) -> None:\n         super().add_directive_header(sig)\n         sourcename = self.get_sourcename()\n+        \n+        # Add no-link option for instance attributes to prevent unwanted cross-linking\n+        if not isinstance(self.parent, ModuleDocumenter):\n+            self.add_line('   :no-link:', sourcename)\n+            \n         if self.options.annotation is SUPPRESS or self.should_suppress_directive_header():\n             pass\n         elif self.options.annotation:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 320f592..5d812f7 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1426,6 +1426,8 @@ class AttributeDocumenter(GenericAliasMixin, NewTypeMixin, SlotsMixin, TypeVarMi\n     def add_directive_header(self, sig: str) -> None:\n         super().add_directive_header(sig)\n         sourcename = self.get_sourcename()\n+        if not isinstance(self.parent, ModuleDocumenter):\n+            self.add_line('   :no-link:', sourcename)\n         if self.options.annotation is SUPPRESS or self.should_suppress_directive_header():\n             pass\n         elif self.options.annotation:\n", "normalized_occurrence": 1}
