{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8801", "model_patch": "diff --git a/sphinx/ext/autodoc/importer.py b/sphinx/ext/autodoc/importer.py\nindex 16f59c0..abc323b 100644\n--- a/sphinx/ext/autodoc/importer.py\n+++ b/sphinx/ext/autodoc/importer.py\n@@ -293,7 +293,7 @@ def get_class_members(subject: Any, objpath: List[str], attrgetter: Callable\n             continue\n \n     try:\n-        for cls in getmro(subject):\n+        for cls in reversed(getmro(subject)):\n             # annotation only member (ex. attr: int)\n             for name in getannotations(cls):\n                 name = unmangle(cls, name)\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/importer.py b/sphinx/ext/autodoc/importer.py\nindex 7792b8a..15454bc 100644\n--- a/sphinx/ext/autodoc/importer.py\n+++ b/sphinx/ext/autodoc/importer.py\n@@ -188,7 +188,7 @@ def get_class_members(subject: Any, objpath: List[str], attrgetter: Callable) ->\n         except AttributeError:\n             continue\n     try:\n-        for cls in getmro(subject):\n+        for cls in reversed(getmro(subject)):\n             for name in getannotations(cls):\n                 name = unmangle(cls, name)\n                 if name and name not in members:\n", "normalized_occurrence": 1}
