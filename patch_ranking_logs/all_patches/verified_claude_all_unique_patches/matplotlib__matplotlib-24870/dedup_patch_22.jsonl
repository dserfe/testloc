{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-24870", "model_patch": "diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py\nindex 908a24f..a64dc3c 100644\n--- a/lib/matplotlib/contour.py\n+++ b/lib/matplotlib/contour.py\n@@ -1462,6 +1462,9 @@ class QuadContourSet(ContourSet):\n             z = ma.masked_where(z <= 0, z)\n             _api.warn_external('Log scale: values of z <= 0 have been masked')\n             self.zmin = float(z.min())\n+        # Auto-detect boolean arrays and set default level to [0.5]\n+        if z.dtype == np.bool_ and self.levels is None and not args:\n+            self.levels = [0.5]\n         self._process_contour_level_args(args)\n         return (x, y, z)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py\nindex 04dc867..f525402 100644\n--- a/lib/matplotlib/contour.py\n+++ b/lib/matplotlib/contour.py\n@@ -678,6 +678,8 @@ class QuadContourSet(ContourSet):\n             z = ma.masked_where(z <= 0, z)\n             _api.warn_external('Log scale: values of z <= 0 have been masked')\n             self.zmin = float(z.min())\n+        if z.dtype == np.bool_ and self.levels is None and (not args):\n+            self.levels = [0.5]\n         self._process_contour_level_args(args)\n         return (x, y, z)\n     def _check_xyz(self, args, kwargs):\n", "normalized_occurrence": 2}
