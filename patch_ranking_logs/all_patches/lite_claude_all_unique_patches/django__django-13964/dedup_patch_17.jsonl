{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13964", "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex dfd3a82..7f872e4 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -933,7 +933,11 @@ class Model(metaclass=ModelBase):\n                         \"%s() prohibited to prevent data loss due to unsaved \"\n                         \"related object '%s'.\" % (operation_name, field.name)\n                     )\n-                elif getattr(self, field.attname) is None:\n+                elif getattr(self, field.attname) is None or (\n+                    isinstance(field, ForeignKey) and\n+                    not field.empty_strings_allowed and\n+                    getattr(self, field.attname) == ''\n+                ):\n                     # Use pk from related object if it has been saved after\n                     # an assignment.\n                     setattr(self, field.attname, obj.pk)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex e6ddd1a..b473299 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -493,7 +493,7 @@ class Model(metaclass=ModelBase):\n                     if not field.remote_field.multiple:\n                         field.remote_field.delete_cached_value(obj)\n                     raise ValueError(\"%s() prohibited to prevent data loss due to unsaved related object '%s'.\" % (operation_name, field.name))\n-                elif getattr(self, field.attname) is None:\n+                elif getattr(self, field.attname) is None or (isinstance(field, ForeignKey) and (not field.empty_strings_allowed) and (getattr(self, field.attname) == '')):\n                     setattr(self, field.attname, obj.pk)\n                 if getattr(obj, field.target_field.attname) != getattr(self, field.attname):\n                     field.delete_cached_value(self)\n", "normalized_occurrence": 1}
