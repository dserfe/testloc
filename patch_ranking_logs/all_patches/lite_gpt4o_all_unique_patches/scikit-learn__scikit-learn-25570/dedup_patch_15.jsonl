{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-25570", "model_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex 36a655a..8012ecd 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -865,7 +865,7 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n                 transformer_names = [\n                     t[0] for t in self._iter(fitted=True, replace_strings=True)\n                 ]\n-                feature_names_outs = [X.columns for X in Xs]\n+                feature_names_outs = [X.columns for X in Xs if not X.empty]\n                 names_out = self._add_prefix_for_feature_names_out(\n                     list(zip(transformer_names, feature_names_outs))\n                 )\n", "occurrence": 4, "normalized_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex 03f51bb..e228bf2 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -258,7 +258,7 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n                 if not self.verbose_feature_names_out:\n                     return output\n                 transformer_names = [t[0] for t in self._iter(fitted=True, replace_strings=True)]\n-                feature_names_outs = [X.columns for X in Xs]\n+                feature_names_outs = [X.columns for X in Xs if not X.empty]\n                 names_out = self._add_prefix_for_feature_names_out(list(zip(transformer_names, feature_names_outs)))\n                 output.columns = names_out\n                 return output\n", "normalized_occurrence": 4}
