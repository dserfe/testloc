{"model_name_or_path": "agentless", "instance_id": "django__django-16400", "model_patch": "diff --git a/django/core/management/commands/migrate.py b/django/core/management/commands/migrate.py\nindex 485b8be..45c4720 100644\n--- a/django/core/management/commands/migrate.py\n+++ b/django/core/management/commands/migrate.py\n@@ -116,6 +116,14 @@ class Command(BaseCommand):\n         # Work out which apps have migrations and which do not\n         executor = MigrationExecutor(connection, self.migration_progress_callback)\n \n+        # Ensure the correct database is used for Permission creation\n+        for app_config in apps.get_app_configs():\n+            app_config.models_module = None\n+        apps.all_models = defaultdict(dict)\n+        apps.clear_cache()\n+        for app_config in apps.get_app_configs():\n+            app_config.import_models()\n+\n         # Raise an error if any migrations are applied before their dependencies.\n         executor.loader.check_consistent_history(connection)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/management/commands/migrate.py b/django/core/management/commands/migrate.py\nindex 44b7858..bf39dca 100644\n--- a/django/core/management/commands/migrate.py\n+++ b/django/core/management/commands/migrate.py\n@@ -39,6 +39,12 @@ class Command(BaseCommand):\n         connection = connections[database]\n         connection.prepare_database()\n         executor = MigrationExecutor(connection, self.migration_progress_callback)\n+        for app_config in apps.get_app_configs():\n+            app_config.models_module = None\n+        apps.all_models = defaultdict(dict)\n+        apps.clear_cache()\n+        for app_config in apps.get_app_configs():\n+            app_config.import_models()\n         executor.loader.check_consistent_history(connection)\n         conflicts = executor.loader.detect_conflicts()\n         if conflicts:\n", "normalized_occurrence": 1}
