{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11734", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex dbcceb5..d149852 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1702,7 +1702,7 @@ class Query(BaseExpression):\n         handle.\n         \"\"\"\n         filter_lhs, filter_rhs = filter_expr\n-        if isinstance(filter_rhs, F):\n+        if isinstance(filter_rhs, F) and not isinstance(filter_rhs, OuterRef):\n             filter_expr = (filter_lhs, OuterRef(filter_rhs.name))\n         # Generate the inner query.\n         query = Query(self.model)\n", "occurrence": 13, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 4ed627a..a208e4c 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -915,7 +915,7 @@ class Query(BaseExpression):\n             return col\n     def split_exclude(self, filter_expr, can_reuse, names_with_path):\n         filter_lhs, filter_rhs = filter_expr\n-        if isinstance(filter_rhs, F):\n+        if isinstance(filter_rhs, F) and (not isinstance(filter_rhs, OuterRef)):\n             filter_expr = (filter_lhs, OuterRef(filter_rhs.name))\n         query = Query(self.model)\n         query._filtered_relations = self._filtered_relations\n", "normalized_occurrence": 13}
