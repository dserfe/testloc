{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-23476", "model_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex cd28277..f64565e 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -3041,8 +3041,16 @@ class Figure(FigureBase):\n                 f\"This figure was saved with matplotlib version {version} and \"\n                 f\"is unlikely to function correctly.\")\n \n+        # Store the original dpi before restoring state\n+        original_dpi = state.get('_original_dpi', state.get('dpi', None))\n+        \n         self.__dict__ = state\n \n+        # Ensure original dpi is preserved\n+        if original_dpi is not None:\n+            self._original_dpi = original_dpi\n+            self.dpi = original_dpi\n+\n         # re-initialise some of the unstored state information\n         FigureCanvasBase(self)  # Set self.canvas.\n \n", "normalized_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex f6d35a3..dabbab2 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -960,7 +960,11 @@ class Figure(FigureBase):\n         restore_to_pylab = state.pop('_restore_to_pylab', False)\n         if version != mpl.__version__:\n             _api.warn_external(f'This figure was saved with matplotlib version {version} and is unlikely to function correctly.')\n+        original_dpi = state.get('_original_dpi', state.get('dpi', None))\n         self.__dict__ = state\n+        if original_dpi is not None:\n+            self._original_dpi = original_dpi\n+            self.dpi = original_dpi\n         FigureCanvasBase(self)\n         if restore_to_pylab:\n             import matplotlib.pyplot as plt\n", "normalized_occurrence": 1}
