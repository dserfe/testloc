{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-12236", "model_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 03af2f5..1ee91f6 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -118,6 +118,11 @@ def apart(f, x=None, full=False, **options):\n             return f.xreplace(dict(reps))\n \n     if P.is_multivariate:\n+        # Handle symbolic coefficients by treating them as constants\n+        # with respect to the decomposition variable\n+        if x is not None and all(not p.has(x) for p in P.gens[1:]):\n+            return apart(P.as_expr(), x=x, full=full, **_options)\n+        \n         fc = f.cancel()\n         if fc != f:\n             return apart(fc, x=x, full=full, **_options)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 21c4bd7..0b61007 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -55,6 +55,8 @@ def apart(f, x=None, full=False, **options):\n                     pass\n             return f.xreplace(dict(reps))\n     if P.is_multivariate:\n+        if x is not None and all((not p.has(x) for p in P.gens[1:])):\n+            return apart(P.as_expr(), x=x, full=full, **_options)\n         fc = f.cancel()\n         if fc != f:\n             return apart(fc, x=x, full=full, **_options)\n", "normalized_occurrence": 1}
