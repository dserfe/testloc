{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-24661", "model_patch": "diff --git a/sympy/parsing/sympy_parser.py b/sympy/parsing/sympy_parser.py\nindex 2ec3cf6..532baf3 100644\n--- a/sympy/parsing/sympy_parser.py\n+++ b/sympy/parsing/sympy_parser.py\n@@ -1072,7 +1072,10 @@ def parse_expr(s: str, local_dict: Optional[DICT] = None,\n     code = stringify_expr(s, local_dict, global_dict, _transformations)\n \n     if not evaluate:\n+        # Ensure evaluate=False is propagated for all operations including relationals\n         code = compile(evaluateFalse(code), '<string>', 'eval')\n+        local_dict['evaluate'] = False\n+        global_dict['evaluate'] = False\n \n     try:\n         rv = eval_expr(code, local_dict, global_dict)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/parsing/sympy_parser.py b/sympy/parsing/sympy_parser.py\nindex 0c06cf1..41372dd 100644\n--- a/sympy/parsing/sympy_parser.py\n+++ b/sympy/parsing/sympy_parser.py\n@@ -512,6 +512,8 @@ def parse_expr(s: str, local_dict: Optional[DICT]=None, transformations: tUnion[\n     code = stringify_expr(s, local_dict, global_dict, _transformations)\n     if not evaluate:\n         code = compile(evaluateFalse(code), '<string>', 'eval')\n+        local_dict['evaluate'] = False\n+        global_dict['evaluate'] = False\n     try:\n         rv = eval_expr(code, local_dict, global_dict)\n         for i in local_dict.pop(null, ()):\n", "normalized_occurrence": 1}
