{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25079", "model_patch": "diff --git a/lib/matplotlib/cm.py b/lib/matplotlib/cm.py\nindex 06f543d..0026ab9 100644\n--- a/lib/matplotlib/cm.py\n+++ b/lib/matplotlib/cm.py\n@@ -593,8 +593,16 @@ class ScalarMappable:\n     @norm.setter\n     def norm(self, norm):\n         _api.check_isinstance((colors.Normalize, str, None), norm=norm)\n+        old_norm = self._norm\n         if norm is None:\n             norm = colors.Normalize()\n+        elif isinstance(norm, str):\n+            try:\n+                scale_cls = scale._scale_mapping[norm]\n+                norm = scale_cls()\n+            except KeyError:\n+                raise ValueError(f\"Unknown norm string {norm!r}\")\n+            norm = colors.Normalize()\n         elif isinstance(norm, str):\n             try:\n                 scale_cls = scale._scale_mapping[norm]\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/cm.py b/lib/matplotlib/cm.py\nindex f5a7578..2a43805 100644\n--- a/lib/matplotlib/cm.py\n+++ b/lib/matplotlib/cm.py\n@@ -177,8 +177,16 @@ class ScalarMappable:\n     @norm.setter\n     def norm(self, norm):\n         _api.check_isinstance((colors.Normalize, str, None), norm=norm)\n+        old_norm = self._norm\n         if norm is None:\n             norm = colors.Normalize()\n+        elif isinstance(norm, str):\n+            try:\n+                scale_cls = scale._scale_mapping[norm]\n+                norm = scale_cls()\n+            except KeyError:\n+                raise ValueError(f'Unknown norm string {norm!r}')\n+            norm = colors.Normalize()\n         elif isinstance(norm, str):\n             try:\n                 scale_cls = scale._scale_mapping[norm]\n", "normalized_occurrence": 1}
