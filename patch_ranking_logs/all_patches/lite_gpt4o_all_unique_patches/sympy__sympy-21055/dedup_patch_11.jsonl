{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-21055", "model_patch": "diff --git a/sympy/assumptions/refine.py b/sympy/assumptions/refine.py\nindex a2076bf..6ce28dd 100644\n--- a/sympy/assumptions/refine.py\n+++ b/sympy/assumptions/refine.py\n@@ -1,3 +1,4 @@\n+\n from typing import Dict, Callable\n \n from sympy.core import S, Add, Expr, Basic, Mul\n@@ -252,7 +253,29 @@ def refine_atan2(expr, assumptions):\n         return expr\n \n \n-def refine_re(expr, assumptions):\n+def refine_arg(expr, assumptions):\n+    \"\"\"\n+    Handler for the argument (angle) function.\n+\n+    Examples\n+    ========\n+\n+    >>> from sympy import Q, arg, refine\n+    >>> from sympy.abc import x\n+    >>> refine(arg(x), Q.positive(x))\n+    0\n+    >>> refine(arg(x), Q.negative(x))\n+    pi\n+    >>> refine(arg(-x), Q.positive(x))\n+    pi\n+    \"\"\"\n+    from sympy.functions.elementary.complexes import arg\n+    arg_expr = expr.args[0]\n+    if ask(Q.positive(arg_expr), assumptions):\n+        return S.Zero\n+    if ask(Q.negative(arg_expr), assumptions):\n+        return S.Pi\n+    return expr\n     \"\"\"\n     Handler for real part.\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/assumptions/refine.py b/sympy/assumptions/refine.py\nindex 6dc9fb1..3b4adf0 100644\n--- a/sympy/assumptions/refine.py\n+++ b/sympy/assumptions/refine.py\n@@ -116,7 +116,14 @@ def refine_atan2(expr, assumptions):\n         return S.NaN\n     else:\n         return expr\n-def refine_re(expr, assumptions):\n+def refine_arg(expr, assumptions):\n+    from sympy.functions.elementary.complexes import arg\n+    arg_expr = expr.args[0]\n+    if ask(Q.positive(arg_expr), assumptions):\n+        return S.Zero\n+    if ask(Q.negative(arg_expr), assumptions):\n+        return S.Pi\n+    return expr\n     arg = expr.args[0]\n     if ask(Q.real(arg), assumptions):\n         return arg\n", "normalized_occurrence": 1}
