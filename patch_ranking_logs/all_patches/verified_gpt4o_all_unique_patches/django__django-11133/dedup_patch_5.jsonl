{"model_name_or_path": "agentless", "instance_id": "django__django-11133", "model_patch": "diff --git a/django/http/response.py b/django/http/response.py\nindex 5126111..4a095b2 100644\n--- a/django/http/response.py\n+++ b/django/http/response.py\n@@ -229,6 +229,8 @@ class HttpResponseBase:\n         # Handle string types -- we can't rely on force_bytes here because:\n         # - Python attempts str conversion first\n         # - when self._charset != 'utf-8' it re-encodes the content\n+        if isinstance(value, memoryview):\n+            return value.tobytes()\n         if isinstance(value, bytes):\n             return bytes(value)\n         if isinstance(value, str):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/http/response.py b/django/http/response.py\nindex 1fade57..d69afcc 100644\n--- a/django/http/response.py\n+++ b/django/http/response.py\n@@ -140,6 +140,8 @@ class HttpResponseBase:\n         secure = key.startswith(('__Secure-', '__Host-'))\n         self.set_cookie(key, max_age=0, path=path, domain=domain, secure=secure, expires='Thu, 01 Jan 1970 00:00:00 GMT')\n     def make_bytes(self, value):\n+        if isinstance(value, memoryview):\n+            return value.tobytes()\n         if isinstance(value, bytes):\n             return bytes(value)\n         if isinstance(value, str):\n", "normalized_occurrence": 1}
