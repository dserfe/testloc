{"model_name_or_path": "agentless", "instance_id": "psf__requests-2931", "model_patch": "diff --git a/requests/models.py b/requests/models.py\nindex 85fd980..0c9dff8 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -399,7 +399,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         \"\"\"Prepares the given HTTP headers.\"\"\"\n \n         if headers:\n-            self.headers = CaseInsensitiveDict((to_native_string(name), value) for name, value in headers.items())\n+            self.headers = CaseInsensitiveDict((to_native_string(name), to_native_string(value) if isinstance(value, str) else value) for name, value in headers.items())\n         else:\n             self.headers = CaseInsensitiveDict()\n \n@@ -445,7 +445,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n             else:\n                 if data:\n                     body = self._encode_params(data)\n-                    if isinstance(data, basestring) or hasattr(data, 'read'):\n+                    if isinstance(data, (basestring, bytes)) or hasattr(data, 'read'):\n                         content_type = None\n                     else:\n                         content_type = 'application/x-www-form-urlencoded'\n", "occurrence": 1, "normalized_patch": "diff --git a/requests/models.py b/requests/models.py\nindex 1874285..c82a5b6 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -209,7 +209,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         self.url = url\n     def prepare_headers(self, headers):\n         if headers:\n-            self.headers = CaseInsensitiveDict(((to_native_string(name), value) for name, value in headers.items()))\n+            self.headers = CaseInsensitiveDict(((to_native_string(name), to_native_string(value) if isinstance(value, str) else value) for name, value in headers.items()))\n         else:\n             self.headers = CaseInsensitiveDict()\n     def prepare_body(self, data, files, json=None):\n@@ -237,7 +237,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n                 body, content_type = self._encode_files(files, data)\n             elif data:\n                 body = self._encode_params(data)\n-                if isinstance(data, basestring) or hasattr(data, 'read'):\n+                if isinstance(data, (basestring, bytes)) or hasattr(data, 'read'):\n                     content_type = None\n                 else:\n                     content_type = 'application/x-www-form-urlencoded'\n", "normalized_occurrence": 1}
