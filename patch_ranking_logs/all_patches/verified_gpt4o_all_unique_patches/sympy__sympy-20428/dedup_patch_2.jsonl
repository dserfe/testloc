{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-20428", "model_patch": "diff --git a/sympy/polys/densebasic.py b/sympy/polys/densebasic.py\nindex 8e87846..61d7f21 100644\n--- a/sympy/polys/densebasic.py\n+++ b/sympy/polys/densebasic.py\n@@ -1688,7 +1688,10 @@ def dmp_terms_gcd(f, u, K):\n     for monom, coeff in F.items():\n         f[monomial_div(monom, G)] = coeff\n \n-    return G, dmp_from_dict(f, u, K)\n+    result = dmp_from_dict(f, u, K)\n+    while result and result[0] == K.zero:\n+        result = result[1:]\n+    return G, result\n \n \n def _rec_list_terms(g, v, monom):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/densebasic.py b/sympy/polys/densebasic.py\nindex 1d266f3..c65ace7 100644\n--- a/sympy/polys/densebasic.py\n+++ b/sympy/polys/densebasic.py\n@@ -515,7 +515,10 @@ def dmp_terms_gcd(f, u, K):\n     f = {}\n     for monom, coeff in F.items():\n         f[monomial_div(monom, G)] = coeff\n-    return (G, dmp_from_dict(f, u, K))\n+    result = dmp_from_dict(f, u, K)\n+    while result and result[0] == K.zero:\n+        result = result[1:]\n+    return (G, result)\n def _rec_list_terms(g, v, monom):\n     d, terms = (dmp_degree(g, v), [])\n     if not v:\n", "normalized_occurrence": 1}
