{"model_name_or_path": "agentless", "instance_id": "django__django-10973", "model_patch": "diff --git a/django/db/backends/postgresql/client.py b/django/db/backends/postgresql/client.py\nindex f49b2f8..5e11345 100644\n--- a/django/db/backends/postgresql/client.py\n+++ b/django/db/backends/postgresql/client.py\n@@ -58,7 +58,10 @@ class DatabaseClient(BaseDatabaseClient):\n                     pass\n             # Allow SIGINT to pass to psql to abort queries.\n             signal.signal(signal.SIGINT, signal.SIG_IGN)\n-            subprocess.check_call(args)\n+            env = os.environ.copy()\n+            if passwd:\n+                env['PGPASSWORD'] = passwd\n+            subprocess.run(args, env=env)\n         finally:\n             # Restore the original SIGINT handler.\n             signal.signal(signal.SIGINT, sigint_handler)\n@@ -68,4 +71,4 @@ class DatabaseClient(BaseDatabaseClient):\n                     del os.environ['PGPASSFILE']\n \n     def runshell(self):\n-        DatabaseClient.runshell_db(self.connection.get_connection_params())\n+        DatabaseClient.runshell_db(self.connection.get_connection_params())\n", "occurrence": 3, "normalized_patch": "diff --git a/django/db/backends/postgresql/client.py b/django/db/backends/postgresql/client.py\nindex 78fa5c8..d2d8593 100644\n--- a/django/db/backends/postgresql/client.py\n+++ b/django/db/backends/postgresql/client.py\n@@ -33,7 +33,10 @@ class DatabaseClient(BaseDatabaseClient):\n                 except UnicodeEncodeError:\n                     pass\n             signal.signal(signal.SIGINT, signal.SIG_IGN)\n-            subprocess.check_call(args)\n+            env = os.environ.copy()\n+            if passwd:\n+                env['PGPASSWORD'] = passwd\n+            subprocess.run(args, env=env)\n         finally:\n             signal.signal(signal.SIGINT, sigint_handler)\n             if temp_pgpass:\n", "normalized_occurrence": 3}
