{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-5787", "model_patch": "diff --git a/src/_pytest/reports.py b/src/_pytest/reports.py\nindex ba95b0e..3923255 100644\n--- a/src/_pytest/reports.py\n+++ b/src/_pytest/reports.py\n@@ -360,6 +360,14 @@ class TestReport(BaseReport):\n                 outcome = \"failed\"\n                 if call.when == \"call\":\n                     longrepr = item.repr_failure(excinfo)\n+                    # Ensure chained exceptions are serialized\n+                    if excinfo.value.__cause__ is not None or excinfo.value.__context__ is not None:\n+                        chain = []\n+                        cause = excinfo.value.__cause__ if excinfo.value.__cause__ is not None else excinfo.value.__context__\n+                        while cause:\n+                            chain.append((type(cause), str(cause)))\n+                            cause = cause.__cause__ if cause.__cause__ is not None else cause.__context__\n+                        longrepr.chain = chain\n                 else:  # exception in setup or teardown\n                     longrepr = item._repr_failure_py(\n                         excinfo, style=item.config.getoption(\"tbstyle\", \"auto\")\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/reports.py b/src/_pytest/reports.py\nindex 3292df7..57e5f89 100644\n--- a/src/_pytest/reports.py\n+++ b/src/_pytest/reports.py\n@@ -181,6 +181,13 @@ class TestReport(BaseReport):\n             outcome = 'failed'\n             if call.when == 'call':\n                 longrepr = item.repr_failure(excinfo)\n+                if excinfo.value.__cause__ is not None or excinfo.value.__context__ is not None:\n+                    chain = []\n+                    cause = excinfo.value.__cause__ if excinfo.value.__cause__ is not None else excinfo.value.__context__\n+                    while cause:\n+                        chain.append((type(cause), str(cause)))\n+                        cause = cause.__cause__ if cause.__cause__ is not None else cause.__context__\n+                    longrepr.chain = chain\n             else:\n                 longrepr = item._repr_failure_py(excinfo, style=item.config.getoption('tbstyle', 'auto'))\n         for rwhen, key, content in item._report_sections:\n", "normalized_occurrence": 1}
