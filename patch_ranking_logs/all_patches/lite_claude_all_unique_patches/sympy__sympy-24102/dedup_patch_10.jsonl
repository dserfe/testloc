{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-24102", "model_patch": "diff --git a/sympy/parsing/mathematica.py b/sympy/parsing/mathematica.py\nindex 3e3bc62..616713d 100644\n--- a/sympy/parsing/mathematica.py\n+++ b/sympy/parsing/mathematica.py\n@@ -615,6 +615,9 @@ class MathematicaParser:\n         tokens.extend(map(re.escape, tokens_escape))\n         tokens.append(\",\")\n         tokens.append(\"\\n\")\n+        # Add support for Unicode characters including Greek letters\n+        tokens.append(r\"\\w+\")  # Basic word characters\n+        tokens.append(r\"[^\\W\\d_]+\")  # Unicode letters\n         tokenizer = re.compile(\"(\" + \"|\".join(tokens) + \")\")\n         self._regex_tokenizer = tokenizer\n         return self._regex_tokenizer\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/parsing/mathematica.py b/sympy/parsing/mathematica.py\nindex 957d6fe..70d1c7b 100644\n--- a/sympy/parsing/mathematica.py\n+++ b/sympy/parsing/mathematica.py\n@@ -241,6 +241,8 @@ class MathematicaParser:\n         tokens.extend(map(re.escape, tokens_escape))\n         tokens.append(',')\n         tokens.append('\\n')\n+        tokens.append('\\\\w+')\n+        tokens.append('[^\\\\W\\\\d_]+')\n         tokenizer = re.compile('(' + '|'.join(tokens) + ')')\n         self._regex_tokenizer = tokenizer\n         return self._regex_tokenizer\n", "normalized_occurrence": 1}
