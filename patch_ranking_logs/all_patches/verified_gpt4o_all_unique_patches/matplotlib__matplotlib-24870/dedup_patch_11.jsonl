{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-24870", "model_patch": "diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py\nindex 908a24f..611889b 100644\n--- a/lib/matplotlib/contour.py\n+++ b/lib/matplotlib/contour.py\n@@ -1130,6 +1130,8 @@ class ContourSet(cm.ScalarMappable, ContourLabeler):\n             levels_arg = self.levels\n         if isinstance(levels_arg, Integral):\n             self.levels = self._autolev(levels_arg)\n+        elif isinstance(args[0], np.ndarray) and args[0].dtype == bool:\n+            self.levels = np.array([0.5], np.float64)\n         else:\n             self.levels = np.asarray(levels_arg, np.float64)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py\nindex 04dc867..f453325 100644\n--- a/lib/matplotlib/contour.py\n+++ b/lib/matplotlib/contour.py\n@@ -490,6 +490,8 @@ class ContourSet(cm.ScalarMappable, ContourLabeler):\n             levels_arg = self.levels\n         if isinstance(levels_arg, Integral):\n             self.levels = self._autolev(levels_arg)\n+        elif isinstance(args[0], np.ndarray) and args[0].dtype == bool:\n+            self.levels = np.array([0.5], np.float64)\n         else:\n             self.levels = np.asarray(levels_arg, np.float64)\n         if not self.filled:\n", "normalized_occurrence": 1}
