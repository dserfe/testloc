{"model_name_or_path": "agentless_claude", "instance_id": "django__django-17087", "model_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex 941a5ed..b84816c 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -105,8 +105,13 @@ class DeconstructableSerializer(BaseSerializer):\n             imports = {\"from django.db import models\"}\n             name = \"models.%s\" % name\n         else:\n-            imports = {\"import %s\" % module}\n-            name = path\n+            # Check if this is a nested class by looking for multiple components after the module\n+            if \".\" in module and not module.startswith(\"django.\"):\n+                imports = {\"import %s\" % module.split(\".\")[0]}\n+                name = path  # Keep the full path for nested classes\n+            else:\n+                imports = {\"import %s\" % module}\n+                name = path\n         return name, imports\n \n     def serialize(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex bd46ec1..318d9f3 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -74,6 +74,9 @@ class DeconstructableSerializer(BaseSerializer):\n         if module == 'django.db.models':\n             imports = {'from django.db import models'}\n             name = 'models.%s' % name\n+        elif '.' in module and (not module.startswith('django.')):\n+            imports = {'import %s' % module.split('.')[0]}\n+            name = path\n         else:\n             imports = {'import %s' % module}\n             name = path\n", "normalized_occurrence": 1}
