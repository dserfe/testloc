{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-25973", "model_patch": "diff --git a/sklearn/model_selection/_validation.py b/sklearn/model_selection/_validation.py\nindex 295d6b7..1febc41 100644\n--- a/sklearn/model_selection/_validation.py\n+++ b/sklearn/model_selection/_validation.py\n@@ -1943,9 +1943,12 @@ def _aggregate_score_dicts(scores):\n     {'a': array([1, 2, 3, 10]),\n      'b': array([10, 2, 3, 10])}\n     \"\"\"\n-    return {\n-        key: np.asarray([score[key] for score in scores])\n-        if isinstance(scores[0][key], numbers.Number)\n-        else [score[key] for score in scores]\n-        for key in scores[0]\n-    }\n+    if scores:\n+        return {\n+            key: np.asarray([score[key] for score in scores])\n+            if isinstance(scores[0][key], numbers.Number)\n+            else [score[key] for score in scores]\n+            for key in scores[0]\n+        }\n+    else:\n+        return {}\n", "occurrence": 10, "normalized_patch": "diff --git a/sklearn/model_selection/_validation.py b/sklearn/model_selection/_validation.py\nindex c8c3425..40e72d3 100644\n--- a/sklearn/model_selection/_validation.py\n+++ b/sklearn/model_selection/_validation.py\n@@ -422,4 +422,7 @@ def validation_curve(estimator, X, y, *, param_name, param_range, groups=None, c\n     test_scores = results['test_scores'].reshape(-1, n_params).T\n     return (train_scores, test_scores)\n def _aggregate_score_dicts(scores):\n-    return {key: np.asarray([score[key] for score in scores]) if isinstance(scores[0][key], numbers.Number) else [score[key] for score in scores] for key in scores[0]}\n\\ No newline at end of file\n+    if scores:\n+        return {key: np.asarray([score[key] for score in scores]) if isinstance(scores[0][key], numbers.Number) else [score[key] for score in scores] for key in scores[0]}\n+    else:\n+        return {}\n\\ No newline at end of file\n", "normalized_occurrence": 11}
