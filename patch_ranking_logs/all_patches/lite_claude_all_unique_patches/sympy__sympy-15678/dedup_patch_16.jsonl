{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-15678", "model_patch": "diff --git a/sympy/geometry/util.py b/sympy/geometry/util.py\nindex 52a1560..637bfc1 100644\n--- a/sympy/geometry/util.py\n+++ b/sympy/geometry/util.py\n@@ -565,10 +565,16 @@ def idiff(eq, y, x, n=1):\n     sympy.core.function.diff: explicitly differentiates wrt symbols\n \n     \"\"\"\n+    from sympy import Eq, Symbol, Function\n+    \n+    # Convert equation to standard form if it's an Eq object\n+    if isinstance(eq, Eq):\n+        eq = eq.lhs - eq.rhs\n+\n     if is_sequence(y):\n         dep = set(y)\n         y = y[0]\n-    elif isinstance(y, Symbol):\n+    elif isinstance(y, (Symbol, Function)):\n         dep = {y}\n     else:\n         raise ValueError(\"expecting x-dependent symbol(s) but got: %s\" % y)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/geometry/util.py b/sympy/geometry/util.py\nindex 8c03173..fa0cb13 100644\n--- a/sympy/geometry/util.py\n+++ b/sympy/geometry/util.py\n@@ -222,10 +222,13 @@ def farthest_points(*args):\n         diam = d\n     return set(rv)\n def idiff(eq, y, x, n=1):\n+    from sympy import Eq, Symbol, Function\n+    if isinstance(eq, Eq):\n+        eq = eq.lhs - eq.rhs\n     if is_sequence(y):\n         dep = set(y)\n         y = y[0]\n-    elif isinstance(y, Symbol):\n+    elif isinstance(y, (Symbol, Function)):\n         dep = {y}\n     else:\n         raise ValueError('expecting x-dependent symbol(s) but got: %s' % y)\n", "normalized_occurrence": 1}
