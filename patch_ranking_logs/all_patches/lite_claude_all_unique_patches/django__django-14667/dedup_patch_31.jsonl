{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14667", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 8635bf4..b6c6747 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -2086,7 +2086,13 @@ class Query(BaseExpression):\n             self.deferred_loading = existing.union(field_names), True\n         else:\n             # Remove names from the set of any existing \"immediate load\" names.\n+            # When we're in immediate load mode (defer=False), we need to remove\n+            # the deferred fields from the existing set.\n             self.deferred_loading = existing.difference(field_names), False\n+            if not existing:\n+                # If there were no existing immediate load fields,\n+                # we need to defer just the specified fields\n+                self.deferred_loading = frozenset(field_names), True\n \n     def add_immediate_loading(self, field_names):\n         \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex a07bc15..f2a673d 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1141,6 +1141,8 @@ class Query(BaseExpression):\n             self.deferred_loading = (existing.union(field_names), True)\n         else:\n             self.deferred_loading = (existing.difference(field_names), False)\n+            if not existing:\n+                self.deferred_loading = (frozenset(field_names), True)\n     def add_immediate_loading(self, field_names):\n         existing, defer = self.deferred_loading\n         field_names = set(field_names)\n", "normalized_occurrence": 2}
