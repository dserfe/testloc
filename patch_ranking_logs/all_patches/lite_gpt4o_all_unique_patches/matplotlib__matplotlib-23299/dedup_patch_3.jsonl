{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-23299", "model_patch": "diff --git a/lib/matplotlib/_pylab_helpers.py b/lib/matplotlib/_pylab_helpers.py\nindex 3123d3a..4e5a8ef 100644\n--- a/lib/matplotlib/_pylab_helpers.py\n+++ b/lib/matplotlib/_pylab_helpers.py\n@@ -1,3 +1,4 @@\n+\n \"\"\"\n Manage figures for the pyplot interface.\n \"\"\"\n@@ -7,7 +8,19 @@ from collections import OrderedDict\n import gc\n \n \n+import contextlib\n+\n class Gcf:\n+    _rc_context_active = False\n+\n+    @classmethod\n+    @contextlib.contextmanager\n+    def rc_context_active(cls):\n+        cls._rc_context_active = True\n+        try:\n+            yield\n+        finally:\n+            cls._rc_context_active = False\n     \"\"\"\n     Singleton to maintain the relation between figures and their managers, and\n     keep track of and \"active\" figure and manager.\n@@ -141,4 +154,4 @@ class Gcf:\n                 manager.canvas.draw_idle()\n \n \n-atexit.register(Gcf.destroy_all)\n+atexit.register(Gcf.destroy_all)\n", "occurrence": 1, "normalized_patch": "--- a/lib/matplotlib/_pylab_helpers.py\n+++ b/lib/matplotlib/_pylab_helpers.py\n+import contextlib\n+    _rc_context_active = False\n+    @classmethod\n+    @contextlib.contextmanager\n+    def rc_context_active(cls):\n+        cls._rc_context_active = True\n+        try:\n+            yield\n+        finally:\n+            cls._rc_context_active = False\n+    '\\n    Singleton to maintain the relation between figures and their managers, and\\n    keep track of and \"active\" figure and manager.\\n\\n    The canvas of a figure created through pyplot is associated with a figure\\n    manager, which handles the interaction between the figure and the backend.\\n    pyplot keeps track of figure managers using an identifier, the \"figure\\n    number\" or \"manager number\" (which can actually be any hashable value);\\n    this number is available as the :attr:`number` attribute of the manager.\\n\\n    This class is never instantiated; it consists of an `OrderedDict` mapping\\n    figure/manager numbers to managers, and a set of class methods that\\n    manipulate this `OrderedDict`.\\n\\n    Attributes\\n    ----------\\n    figs : OrderedDict\\n        `OrderedDict` mapping numbers to managers; the active manager is at the\\n        end.\\n    '", "normalized_occurrence": 1}
