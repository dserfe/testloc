{"model_name_or_path": "agentless", "instance_id": "psf__requests-863", "model_patch": "diff --git a/requests/models.py b/requests/models.py\nindex bc1c443..13e5800 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -149,7 +149,10 @@ class Request(object):\n         hooks = hooks or {}\n \n         for (k, v) in list(hooks.items()):\n-            self.register_hook(event=k, hook=v)\n+            if not isinstance(v, list):\n+                v = [v]\n+            for hook in v:\n+                self.register_hook(event=k, hook=hook)\n \n         #: Session.\n         self.session = session\n@@ -463,7 +466,10 @@ class Request(object):\n     def register_hook(self, event, hook):\n         \"\"\"Properly register a hook.\"\"\"\n \n-        self.hooks[event].append(hook)\n+        if isinstance(hook, list):\n+            self.hooks[event].extend(hook)\n+        else:\n+            self.hooks[event].append(hook)\n \n     def deregister_hook(self, event, hook):\n         \"\"\"Deregister a previously registered hook.\n", "occurrence": 1, "normalized_patch": "diff --git a/requests/models.py b/requests/models.py\nindex ec9ed1c..596e4cc 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -57,7 +57,10 @@ class Request(object):\n             self.hooks[event] = []\n         hooks = hooks or {}\n         for k, v in list(hooks.items()):\n-            self.register_hook(event=k, hook=v)\n+            if not isinstance(v, list):\n+                v = [v]\n+            for hook in v:\n+                self.register_hook(event=k, hook=hook)\n         self.session = session\n         self.verify = verify\n         self.cert = cert\n@@ -231,7 +234,10 @@ class Request(object):\n             url.append(query)\n         return ''.join(url)\n     def register_hook(self, event, hook):\n-        self.hooks[event].append(hook)\n+        if isinstance(hook, list):\n+            self.hooks[event].extend(hook)\n+        else:\n+            self.hooks[event].append(hook)\n     def deregister_hook(self, event, hook):\n         try:\n             self.hooks[event].remove(hook)\n", "normalized_occurrence": 1}
