{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-20322", "model_patch": "diff --git a/sympy/functions/elementary/integers.py b/sympy/functions/elementary/integers.py\nindex fbc5a14..664802f 100644\n--- a/sympy/functions/elementary/integers.py\n+++ b/sympy/functions/elementary/integers.py\n@@ -271,6 +271,9 @@ class ceiling(RoundFunction):\n             return arg.approximation_interval(Integer)[1]\n \n     def _eval_nseries(self, x, n, logx, cdir=0):\n+        if not isinstance(self, type(self._eval_nseries)):\n+            # Don't evaluate/simplify if called with evaluate=False\n+            return self\n         r = self.subs(x, 0)\n         args = self.args[0]\n         args0 = args.subs(x, 0)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/integers.py b/sympy/functions/elementary/integers.py\nindex b8324b0..10dd504 100644\n--- a/sympy/functions/elementary/integers.py\n+++ b/sympy/functions/elementary/integers.py\n@@ -148,6 +148,8 @@ class ceiling(RoundFunction):\n         if arg.is_NumberSymbol:\n             return arg.approximation_interval(Integer)[1]\n     def _eval_nseries(self, x, n, logx, cdir=0):\n+        if not isinstance(self, type(self._eval_nseries)):\n+            return self\n         r = self.subs(x, 0)\n         args = self.args[0]\n         args0 = args.subs(x, 0)\n", "normalized_occurrence": 1}
