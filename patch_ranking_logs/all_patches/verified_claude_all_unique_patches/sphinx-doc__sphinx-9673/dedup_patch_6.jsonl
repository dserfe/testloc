{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-9673", "model_patch": "diff --git a/sphinx/ext/napoleon/docstring.py b/sphinx/ext/napoleon/docstring.py\nindex ea465e6..0e1ad30 100644\n--- a/sphinx/ext/napoleon/docstring.py\n+++ b/sphinx/ext/napoleon/docstring.py\n@@ -776,6 +776,7 @@ class GoogleDocstring:\n \n         lines: List[str] = []\n         for _name, _type, _desc in fields:\n+            # Always include type information either inline or as rtype\n             if use_rtype:\n                 field = self._format_field(_name, '', _desc)\n             else:\n@@ -787,9 +788,14 @@ class GoogleDocstring:\n                 else:\n                     lines.extend(self._format_block(':returns: * ', field))\n             else:\n-                lines.extend(self._format_block(':returns: ', field))\n-                if _type and use_rtype:\n-                    lines.extend([':rtype: %s' % _type, ''])\n+                if _type and not use_rtype:\n+                    # Include type in the returns block when not using rtype\n+                    lines.extend(self._format_block(':returns: ', field))\n+                else:\n+                    # Otherwise just include the description\n+                    lines.extend(self._format_block(':returns: ', field))\n+                    if _type:\n+                        lines.extend([':rtype: %s' % _type, ''])\n         if lines and lines[-1]:\n             lines.append('')\n         return lines\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/napoleon/docstring.py b/sphinx/ext/napoleon/docstring.py\nindex bc7a995..29ba302 100644\n--- a/sphinx/ext/napoleon/docstring.py\n+++ b/sphinx/ext/napoleon/docstring.py\n@@ -522,9 +522,11 @@ class GoogleDocstring:\n                     lines.extend(self._format_block('          * ', field))\n                 else:\n                     lines.extend(self._format_block(':returns: * ', field))\n+            elif _type and (not use_rtype):\n+                lines.extend(self._format_block(':returns: ', field))\n             else:\n                 lines.extend(self._format_block(':returns: ', field))\n-                if _type and use_rtype:\n+                if _type:\n                     lines.extend([':rtype: %s' % _type, ''])\n         if lines and lines[-1]:\n             lines.append('')\n", "normalized_occurrence": 1}
