{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-21055", "model_patch": "diff --git a/sympy/functions/elementary/complexes.py b/sympy/functions/elementary/complexes.py\nindex fc56494..37168ea 100644\n--- a/sympy/functions/elementary/complexes.py\n+++ b/sympy/functions/elementary/complexes.py\n@@ -769,6 +769,18 @@ class arg(Function):\n         x, y = self.args[0].as_real_imag()\n         return atan2(y, x)\n \n+    def _eval_refine(self, assumptions):\n+        arg = self.args[0]\n+        if arg.is_positive:\n+            return S.Zero\n+        if arg.is_negative:\n+            return S.Pi\n+        if arg.is_imaginary and arg.is_positive*I:\n+            return S.Pi/2\n+        if arg.is_imaginary and arg.is_negative*I:\n+            return -S.Pi/2\n+        return None\n+\n \n class conjugate(Function):\n     \"\"\"\n", "occurrence": 1, "normalized_patch": "--- a/sympy/functions/elementary/complexes.py\n+++ b/sympy/functions/elementary/complexes.py\n+    def _eval_refine(self, assumptions):\n+        arg = self.args[0]\n+        if arg.is_positive:\n+            return S.Zero\n+        if arg.is_negative:\n+            return S.Pi\n+        if arg.is_imaginary and arg.is_positive * I:\n+            return S.Pi / 2\n+        if arg.is_imaginary and arg.is_negative * I:\n+            return -S.Pi / 2\n+        return None", "normalized_occurrence": 1}
