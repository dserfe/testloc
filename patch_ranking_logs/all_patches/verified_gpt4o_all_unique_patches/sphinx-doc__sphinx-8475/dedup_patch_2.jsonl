{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8475", "model_patch": "diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py\nindex 49ae1f0..0db5073 100644\n--- a/sphinx/builders/linkcheck.py\n+++ b/sphinx/builders/linkcheck.py\n@@ -172,7 +172,7 @@ class CheckExternalLinksBuilder(Builder):\n                                                  config=self.app.config, auth=auth_info,\n                                                  **kwargs)\n                         response.raise_for_status()\n-                    except HTTPError:\n+                    except (HTTPError, requests.exceptions.TooManyRedirects):\n                         # retry with GET request if that fails, some servers\n                         # don't like HEAD requests.\n                         response = requests.get(req_url, stream=True, config=self.app.config,\n@@ -187,7 +187,7 @@ class CheckExternalLinksBuilder(Builder):\n                     return 'ignored', str(err), 0\n                 else:\n                     return 'broken', str(err), 0\n-            except Exception as err:\n+            except (Exception, requests.exceptions.TooManyRedirects) as err:\n                 return 'broken', str(err), 0\n             if response.url.rstrip('/') == req_url.rstrip('/'):\n                 return 'working', '', 0\n", "occurrence": 2, "normalized_patch": "diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py\nindex cf62af4..1f25219 100644\n--- a/sphinx/builders/linkcheck.py\n+++ b/sphinx/builders/linkcheck.py\n@@ -103,7 +103,7 @@ class CheckExternalLinksBuilder(Builder):\n                     try:\n                         response = requests.head(req_url, allow_redirects=True, config=self.app.config, auth=auth_info, **kwargs)\n                         response.raise_for_status()\n-                    except HTTPError:\n+                    except (HTTPError, requests.exceptions.TooManyRedirects):\n                         response = requests.get(req_url, stream=True, config=self.app.config, auth=auth_info, **kwargs)\n                         response.raise_for_status()\n             except HTTPError as err:\n@@ -113,7 +113,7 @@ class CheckExternalLinksBuilder(Builder):\n                     return ('ignored', str(err), 0)\n                 else:\n                     return ('broken', str(err), 0)\n-            except Exception as err:\n+            except (Exception, requests.exceptions.TooManyRedirects) as err:\n                 return ('broken', str(err), 0)\n             if response.url.rstrip('/') == req_url.rstrip('/'):\n                 return ('working', '', 0)\n", "normalized_occurrence": 2}
