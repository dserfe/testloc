{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7571", "model_patch": "diff --git a/src/_pytest/logging.py b/src/_pytest/logging.py\nindex 16efd55..11c97e3 100644\n--- a/src/_pytest/logging.py\n+++ b/src/_pytest/logging.py\n@@ -471,7 +471,10 @@ def caplog(request: FixtureRequest) -> Generator[LogCaptureFixture, None, None]:\n     * caplog.clear()         -> clear captured records and formatted log output string\n     \"\"\"\n     result = LogCaptureFixture(request.node)\n-    yield result\n+    try:\n+        yield result\n+    finally:\n+        result._finalize()\n     result._finalize()\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/logging.py b/src/_pytest/logging.py\nindex 862b163..68c06a2 100644\n--- a/src/_pytest/logging.py\n+++ b/src/_pytest/logging.py\n@@ -207,7 +207,10 @@ class LogCaptureFixture:\n @pytest.fixture\n def caplog(request: FixtureRequest) -> Generator[LogCaptureFixture, None, None]:\n     result = LogCaptureFixture(request.node)\n-    yield result\n+    try:\n+        yield result\n+    finally:\n+        result._finalize()\n     result._finalize()\n def get_log_level_for_setting(config: Config, *setting_names: str) -> Optional[int]:\n     for setting_name in setting_names:\n", "normalized_occurrence": 1}
