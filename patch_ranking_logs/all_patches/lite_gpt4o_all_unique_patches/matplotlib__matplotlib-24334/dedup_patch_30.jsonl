{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-24334", "model_patch": "diff --git a/lib/matplotlib/axis.py b/lib/matplotlib/axis.py\nindex d63d9ca..b8bb7d2 100644\n--- a/lib/matplotlib/axis.py\n+++ b/lib/matplotlib/axis.py\n@@ -2024,6 +2024,14 @@ class Axis(martist.Artist):\n         result = self._set_tick_locations(ticks, minor=minor)\n         if labels is not None:\n             self.set_ticklabels(labels, minor=minor, **kwargs)\n+        else:\n+            # Validate kwargs to ensure they are valid Text properties.\n+            valid_text_kwargs = Text(0, 0, \"\").properties()\n+            for kwarg in kwargs:\n+                if kwarg not in valid_text_kwargs:\n+                    raise TypeError(f\"'{kwarg}' is not a valid Text property. \"\n+                                    \"These take effect only if you pass labels. \"\n+                                    \"In other cases, please use `~.Axes.tick_params`.\")\n         return result\n \n     def _get_tick_boxes_siblings(self, renderer):\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axis.py b/lib/matplotlib/axis.py\nindex 95f7f71..d48773a 100644\n--- a/lib/matplotlib/axis.py\n+++ b/lib/matplotlib/axis.py\n@@ -1653,6 +1653,11 @@ class Axis(martist.Artist):\n         result = self._set_tick_locations(ticks, minor=minor)\n         if labels is not None:\n             self.set_ticklabels(labels, minor=minor, **kwargs)\n+        else:\n+            valid_text_kwargs = Text(0, 0, '').properties()\n+            for kwarg in kwargs:\n+                if kwarg not in valid_text_kwargs:\n+                    raise TypeError(f\"'{kwarg}' is not a valid Text property. These take effect only if you pass labels. In other cases, please use `~.Axes.tick_params`.\")\n         return result\n \n     def _get_tick_boxes_siblings(self, renderer):\n", "normalized_occurrence": 1}
