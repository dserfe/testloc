{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-12419", "model_patch": "diff --git a/sympy/matrices/expressions/matmul.py b/sympy/matrices/expressions/matmul.py\nindex 639ff43..691d0a1 100644\n--- a/sympy/matrices/expressions/matmul.py\n+++ b/sympy/matrices/expressions/matmul.py\n@@ -61,9 +61,9 @@ class MatMul(MatrixExpr):\n         from sympy.concrete.summations import Sum\n         from sympy.matrices import ImmutableMatrix\n         k = Dummy('k', integer=True)\n-        if X.has(ImmutableMatrix) or Y.has(ImmutableMatrix):\n+        if X.has(ImmutableMatrix) or Y.has(ImmutableMatrix) or X.is_Identity or Y.is_Identity:\n             return coeff*Add(*[X[i, k]*Y[k, j] for k in range(X.cols)])\n-        result = Sum(coeff*X[i, k]*Y[k, j], (k, 0, X.cols - 1))\n+        result = Sum(coeff*X[i, k]*Y[k, j], (k, 0, X.cols - 1)).doit()\n         if not X.cols.is_number:\n             # Don't waste time in result.doit() if the sum bounds are symbolic\n             expand = False\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/expressions/matmul.py b/sympy/matrices/expressions/matmul.py\nindex 5b270b9..16cd8a6 100644\n--- a/sympy/matrices/expressions/matmul.py\n+++ b/sympy/matrices/expressions/matmul.py\n@@ -36,9 +36,9 @@ class MatMul(MatrixExpr):\n         from sympy.concrete.summations import Sum\n         from sympy.matrices import ImmutableMatrix\n         k = Dummy('k', integer=True)\n-        if X.has(ImmutableMatrix) or Y.has(ImmutableMatrix):\n+        if X.has(ImmutableMatrix) or Y.has(ImmutableMatrix) or X.is_Identity or Y.is_Identity:\n             return coeff * Add(*[X[i, k] * Y[k, j] for k in range(X.cols)])\n-        result = Sum(coeff * X[i, k] * Y[k, j], (k, 0, X.cols - 1))\n+        result = Sum(coeff * X[i, k] * Y[k, j], (k, 0, X.cols - 1)).doit()\n         if not X.cols.is_number:\n             expand = False\n         return result.doit() if expand else result\n", "normalized_occurrence": 1}
