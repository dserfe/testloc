{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-18087", "model_patch": "diff --git a/sympy/functions/elementary/trigonometric.py b/sympy/functions/elementary/trigonometric.py\nindex 5205b6e..8bfdaaf 100644\n--- a/sympy/functions/elementary/trigonometric.py\n+++ b/sympy/functions/elementary/trigonometric.py\n@@ -14,7 +14,7 @@ from sympy.functions.elementary.exponential import log, exp\n from sympy.functions.elementary.integers import floor\n from sympy.functions.elementary.hyperbolic import (acoth, asinh, atanh, cosh,\n     coth, HyperbolicFunction, sinh, tanh)\n-from sympy.functions.elementary.miscellaneous import sqrt, Min, Max\n+from sympy.functions.elementary.miscellaneous import sqrt, Min, Max, Abs\n from sympy.functions.elementary.piecewise import Piecewise\n from sympy.sets.sets import FiniteSet\n from sympy.utilities.iterables import numbered_symbols\n@@ -371,6 +371,13 @@ class sin(TrigonometricFunction):\n             x = arg.args[0]\n             return sqrt(1 - 1 / x**2)\n \n+        if isinstance(arg, sqrt):\n+            base = arg.args[0]\n+            if base.is_Pow and base.exp == 2:\n+                inner = base.base\n+                if isinstance(inner, sin) or isinstance(inner, cos):\n+                    return Abs(inner)\n+\n     @staticmethod\n     @cacheit\n     def taylor_term(n, x, *previous_terms):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/trigonometric.py b/sympy/functions/elementary/trigonometric.py\nindex bfdabb3..3254728 100644\n--- a/sympy/functions/elementary/trigonometric.py\n+++ b/sympy/functions/elementary/trigonometric.py\n@@ -12,7 +12,7 @@ from sympy.functions.combinatorial.factorials import factorial, RisingFactorial\n from sympy.functions.elementary.exponential import log, exp\n from sympy.functions.elementary.integers import floor\n from sympy.functions.elementary.hyperbolic import acoth, asinh, atanh, cosh, coth, HyperbolicFunction, sinh, tanh\n-from sympy.functions.elementary.miscellaneous import sqrt, Min, Max\n+from sympy.functions.elementary.miscellaneous import sqrt, Min, Max, Abs\n from sympy.functions.elementary.piecewise import Piecewise\n from sympy.sets.sets import FiniteSet\n from sympy.utilities.iterables import numbered_symbols\n@@ -213,6 +213,12 @@ class sin(TrigonometricFunction):\n         if isinstance(arg, asec):\n             x = arg.args[0]\n             return sqrt(1 - 1 / x ** 2)\n+        if isinstance(arg, sqrt):\n+            base = arg.args[0]\n+            if base.is_Pow and base.exp == 2:\n+                inner = base.base\n+                if isinstance(inner, sin) or isinstance(inner, cos):\n+                    return Abs(inner)\n     @staticmethod\n     @cacheit\n     def taylor_term(n, x, *previous_terms):\n", "normalized_occurrence": 1}
