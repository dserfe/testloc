{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13773", "model_patch": "diff --git a/sympy/matrices/expressions/matmul.py b/sympy/matrices/expressions/matmul.py\nindex 13b44f5..1fd1dc7 100644\n--- a/sympy/matrices/expressions/matmul.py\n+++ b/sympy/matrices/expressions/matmul.py\n@@ -146,6 +146,10 @@ def validate(*matrices):\n def newmul(*args):\n     if args[0] == 1:\n         args = args[1:]\n+    # Ensure all arguments are matrices\n+    for arg in args:\n+        if not isinstance(arg, MatrixBase):\n+            raise ValueError(\"Operands must be matrices for matrix multiplication\")\n     return new(MatMul, *args)\n \n def any_zeros(mul):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/expressions/matmul.py b/sympy/matrices/expressions/matmul.py\nindex c9124f3..7f8b15e 100644\n--- a/sympy/matrices/expressions/matmul.py\n+++ b/sympy/matrices/expressions/matmul.py\n@@ -93,6 +93,9 @@ def validate(*matrices):\n def newmul(*args):\n     if args[0] == 1:\n         args = args[1:]\n+    for arg in args:\n+        if not isinstance(arg, MatrixBase):\n+            raise ValueError('Operands must be matrices for matrix multiplication')\n     return new(MatMul, *args)\n def any_zeros(mul):\n     if any([arg.is_zero or (arg.is_Matrix and arg.is_ZeroMatrix) for arg in mul.args]):\n", "normalized_occurrence": 1}
