{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-7220", "model_patch": "diff --git a/src/_pytest/terminal.py b/src/_pytest/terminal.py\nindex ebc163c..027f485 100644\n--- a/src/_pytest/terminal.py\n+++ b/src/_pytest/terminal.py\n@@ -776,7 +776,8 @@ class TerminalReporter:\n \n     def _locationline(self, nodeid, fspath, lineno, domain):\n         def mkrel(nodeid):\n-            line = self.config.cwd_relative_nodeid(nodeid)\n+            # Use invocation_dir instead of cwd for relative paths\n+            line = self._makepath(nodeid).relto(self.config.invocation_dir)\n             if domain and line.endswith(domain):\n                 line = line[: -len(domain)]\n                 values = domain.split(\"[\")\n@@ -791,7 +792,7 @@ class TerminalReporter:\n             if self.verbosity >= 2 and nodeid.split(\"::\")[0] != fspath.replace(\n                 \"\\\\\", nodes.SEP\n             ):\n-                res += \" <- \" + self.startdir.bestrelpath(fspath)\n+                res += \" <- \" + py.path.local(fspath).relto(self.config.invocation_dir)\n         else:\n             res = \"[location]\"\n         return res + \" \"\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/terminal.py b/src/_pytest/terminal.py\nindex 554ecf8..af86e50 100644\n--- a/src/_pytest/terminal.py\n+++ b/src/_pytest/terminal.py\n@@ -510,7 +510,7 @@ class TerminalReporter:\n                 self._tw.line('(to show a full traceback on KeyboardInterrupt use --full-trace)', yellow=True)\n     def _locationline(self, nodeid, fspath, lineno, domain):\n         def mkrel(nodeid):\n-            line = self.config.cwd_relative_nodeid(nodeid)\n+            line = self._makepath(nodeid).relto(self.config.invocation_dir)\n             if domain and line.endswith(domain):\n                 line = line[:-len(domain)]\n                 values = domain.split('[')\n@@ -520,7 +520,7 @@ class TerminalReporter:\n         if fspath:\n             res = mkrel(nodeid)\n             if self.verbosity >= 2 and nodeid.split('::')[0] != fspath.replace('\\\\', nodes.SEP):\n-                res += ' <- ' + self.startdir.bestrelpath(fspath)\n+                res += ' <- ' + py.path.local(fspath).relto(self.config.invocation_dir)\n         else:\n             res = '[location]'\n         return res + ' '\n", "normalized_occurrence": 1}
