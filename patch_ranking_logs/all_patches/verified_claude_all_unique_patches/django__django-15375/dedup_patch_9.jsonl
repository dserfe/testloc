{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15375", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 3a34bd9..4de0908 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -1677,7 +1677,11 @@ class SQLAggregateCompiler(SQLCompiler):\n             sql.append(ann_sql)\n             params.extend(ann_params)\n         self.col_count = len(self.query.annotation_select)\n-        sql = ', '.join(sql)\n+        if not sql:\n+            # If no annotations exist, use * to select all columns from the subquery\n+            sql = '*'\n+        else:\n+            sql = ', '.join(sql)\n         params = tuple(params)\n \n         inner_query_sql, inner_query_params = self.query.inner_query.get_compiler(\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 79108fc..02a125c 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -944,7 +944,10 @@ class SQLAggregateCompiler(SQLCompiler):\n             sql.append(ann_sql)\n             params.extend(ann_params)\n         self.col_count = len(self.query.annotation_select)\n-        sql = ', '.join(sql)\n+        if not sql:\n+            sql = '*'\n+        else:\n+            sql = ', '.join(sql)\n         params = tuple(params)\n         inner_query_sql, inner_query_params = self.query.inner_query.get_compiler(self.using, elide_empty=self.elide_empty).as_sql(with_col_aliases=True)\n         sql = 'SELECT %s FROM (%s) subquery' % (sql, inner_query_sql)\n", "normalized_occurrence": 3}
