{"model_name_or_path": "agentless", "instance_id": "django__django-15037", "model_patch": "diff --git a/django/db/backends/postgresql/introspection.py b/django/db/backends/postgresql/introspection.py\nindex bdb6b4c..f23418d 100644\n--- a/django/db/backends/postgresql/introspection.py\n+++ b/django/db/backends/postgresql/introspection.py\n@@ -125,8 +125,28 @@ class DatabaseIntrospection(BaseDatabaseIntrospection):\n \n     def get_key_columns(self, cursor, table_name):\n         cursor.execute(\"\"\"\n-            SELECT a1.attname, c2.relname, a2.attname\n-            FROM pg_constraint con\n+            SELECT\n+                att2.attname AS column_name,\n+                cl.relname AS referenced_table_name,\n+                att.attname AS referenced_column_name\n+            FROM\n+                (SELECT\n+                    unnest(con1.conkey) AS parent,\n+                    unnest(con1.confkey) AS child,\n+                    con1.confrelid,\n+                    con1.conrelid\n+                FROM\n+                    pg_class cl\n+                    JOIN pg_namespace ns ON cl.relnamespace = ns.oid\n+                    JOIN pg_constraint con1 ON con1.conrelid = cl.oid\n+                WHERE\n+                    cl.relname = %s AND con1.contype = 'f'\n+                ) con\n+                JOIN pg_attribute att ON\n+                    att.attrelid = con.confrelid AND att.attnum = con.child\n+                JOIN pg_class cl ON cl.oid = con.confrelid\n+                JOIN pg_attribute att2 ON\n+                    att2.attrelid = con.conrelid AND att2.attnum = con.parent\n             LEFT JOIN pg_class c1 ON con.conrelid = c1.oid\n             LEFT JOIN pg_class c2 ON con.confrelid = c2.oid\n             LEFT JOIN pg_attribute a1 ON c1.oid = a1.attrelid AND a1.attnum = con.conkey[1]\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/postgresql/introspection.py b/django/db/backends/postgresql/introspection.py\nindex c5c043d..99e1733 100644\n--- a/django/db/backends/postgresql/introspection.py\n+++ b/django/db/backends/postgresql/introspection.py\n@@ -28,7 +28,7 @@ class DatabaseIntrospection(BaseDatabaseIntrospection):\n     def get_relations(self, cursor, table_name):\n         return {row[0]: (row[2], row[1]) for row in self.get_key_columns(cursor, table_name)}\n     def get_key_columns(self, cursor, table_name):\n-        cursor.execute(\"\\n            SELECT a1.attname, c2.relname, a2.attname\\n            FROM pg_constraint con\\n            LEFT JOIN pg_class c1 ON con.conrelid = c1.oid\\n            LEFT JOIN pg_class c2 ON con.confrelid = c2.oid\\n            LEFT JOIN pg_attribute a1 ON c1.oid = a1.attrelid AND a1.attnum = con.conkey[1]\\n            LEFT JOIN pg_attribute a2 ON c2.oid = a2.attrelid AND a2.attnum = con.confkey[1]\\n            WHERE\\n                c1.relname = %s AND\\n                con.contype = 'f' AND\\n                c1.relnamespace = c2.relnamespace AND\\n                pg_catalog.pg_table_is_visible(c1.oid)\\n        \", [table_name])\n+        cursor.execute(\"\\n            SELECT\\n                att2.attname AS column_name,\\n                cl.relname AS referenced_table_name,\\n                att.attname AS referenced_column_name\\n            FROM\\n                (SELECT\\n                    unnest(con1.conkey) AS parent,\\n                    unnest(con1.confkey) AS child,\\n                    con1.confrelid,\\n                    con1.conrelid\\n                FROM\\n                    pg_class cl\\n                    JOIN pg_namespace ns ON cl.relnamespace = ns.oid\\n                    JOIN pg_constraint con1 ON con1.conrelid = cl.oid\\n                WHERE\\n                    cl.relname = %s AND con1.contype = 'f'\\n                ) con\\n                JOIN pg_attribute att ON\\n                    att.attrelid = con.confrelid AND att.attnum = con.child\\n                JOIN pg_class cl ON cl.oid = con.confrelid\\n                JOIN pg_attribute att2 ON\\n                    att2.attrelid = con.conrelid AND att2.attnum = con.parent\\n            LEFT JOIN pg_class c1 ON con.conrelid = c1.oid\\n            LEFT JOIN pg_class c2 ON con.confrelid = c2.oid\\n            LEFT JOIN pg_attribute a1 ON c1.oid = a1.attrelid AND a1.attnum = con.conkey[1]\\n            LEFT JOIN pg_attribute a2 ON c2.oid = a2.attrelid AND a2.attnum = con.confkey[1]\\n            WHERE\\n                c1.relname = %s AND\\n                con.contype = 'f' AND\\n                c1.relnamespace = c2.relnamespace AND\\n                pg_catalog.pg_table_is_visible(c1.oid)\\n        \", [table_name])\n         return cursor.fetchall()\n     def get_constraints(self, cursor, table_name):\n         constraints = {}\n", "normalized_occurrence": 1}
