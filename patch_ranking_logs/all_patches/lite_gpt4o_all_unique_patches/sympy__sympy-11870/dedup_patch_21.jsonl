{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-11870", "model_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex bd243c1..8937fa8 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -510,7 +510,12 @@ def trigsimp(expr, **opts):\n         'old': lambda x: trigsimp_old(x, **opts),\n                    }[method]\n \n-    return trigsimpfunc(expr)\n+    result = trigsimpfunc(expr)\n+    if isinstance(result, Mul):\n+        coeff, expr = result.as_coeff_Mul()\n+        if expr.has(exp) and coeff.has(I):\n+            result = exptrigsimp(result)\n+    return result\n \n \n def exptrigsimp(expr):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex 8c4936d..d691043 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -171,7 +171,12 @@ def trigsimp(expr, **opts):\n             return new\n         return trigsimp_groebner(new, **opts)\n     trigsimpfunc = {'fu': lambda x: fu(x, **opts), 'matching': lambda x: futrig(x), 'groebner': lambda x: groebnersimp(x, **opts), 'combined': lambda x: futrig(groebnersimp(x, polynomial=True, hints=[2, tan])), 'old': lambda x: trigsimp_old(x, **opts)}[method]\n-    return trigsimpfunc(expr)\n+    result = trigsimpfunc(expr)\n+    if isinstance(result, Mul):\n+        coeff, expr = result.as_coeff_Mul()\n+        if expr.has(exp) and coeff.has(I):\n+            result = exptrigsimp(result)\n+    return result\n def exptrigsimp(expr):\n     from sympy.simplify.fu import hyper_as_trig, TR2i\n     from sympy.simplify.simplify import bottom_up\n", "normalized_occurrence": 1}
