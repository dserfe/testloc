{"model_name_or_path": "agentless", "instance_id": "django__django-14315", "model_patch": "diff --git a/django/db/backends/postgresql/client.py b/django/db/backends/postgresql/client.py\nindex 8b69ea1..9a81281 100644\n--- a/django/db/backends/postgresql/client.py\n+++ b/django/db/backends/postgresql/client.py\n@@ -1,3 +1,4 @@\n+\n import signal\n \n from django.db.backends.base.client import BaseDatabaseClient\n@@ -36,7 +37,7 @@ class DatabaseClient(BaseDatabaseClient):\n             args += [dbname]\n         args.extend(parameters)\n \n-        env = {}\n+        env = os.environ.copy()\n         if passwd:\n             env['PGPASSWORD'] = str(passwd)\n         if service:\n@@ -51,6 +52,15 @@ class DatabaseClient(BaseDatabaseClient):\n             env['PGSSLKEY'] = str(sslkey)\n         if passfile:\n             env['PGPASSFILE'] = str(passfile)\n+        env.update((k, str(v)) for k, v in {\n+            'PGPASSWORD': passwd,\n+            'PGSERVICE': service,\n+            'PGSSLMODE': sslmode,\n+            'PGSSLROOTCERT': sslrootcert,\n+            'PGSSLCERT': sslcert,\n+            'PGSSLKEY': sslkey,\n+            'PGPASSFILE': passfile,\n+        }.items() if v)\n         return args, env\n \n     def runshell(self, parameters):\n@@ -61,4 +71,4 @@ class DatabaseClient(BaseDatabaseClient):\n             super().runshell(parameters)\n         finally:\n             # Restore the original SIGINT handler.\n-            signal.signal(signal.SIGINT, sigint_handler)\n+            signal.signal(signal.SIGINT, sigint_handler)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/postgresql/client.py b/django/db/backends/postgresql/client.py\nindex 21cffbe..492eacb 100644\n--- a/django/db/backends/postgresql/client.py\n+++ b/django/db/backends/postgresql/client.py\n@@ -28,7 +28,7 @@ class DatabaseClient(BaseDatabaseClient):\n         if dbname:\n             args += [dbname]\n         args.extend(parameters)\n-        env = {}\n+        env = os.environ.copy()\n         if passwd:\n             env['PGPASSWORD'] = str(passwd)\n         if service:\n@@ -43,6 +43,7 @@ class DatabaseClient(BaseDatabaseClient):\n             env['PGSSLKEY'] = str(sslkey)\n         if passfile:\n             env['PGPASSFILE'] = str(passfile)\n+        env.update(((k, str(v)) for k, v in {'PGPASSWORD': passwd, 'PGSERVICE': service, 'PGSSLMODE': sslmode, 'PGSSLROOTCERT': sslrootcert, 'PGSSLCERT': sslcert, 'PGSSLKEY': sslkey, 'PGPASSFILE': passfile}.items() if v))\n         return (args, env)\n     def runshell(self, parameters):\n         sigint_handler = signal.getsignal(signal.SIGINT)\n", "normalized_occurrence": 1}
