{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-24562", "model_patch": "diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\nindex 1c28b44..f717a7e 100644\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -1612,11 +1612,11 @@ class Rational(Number):\n                         fp = fractions.Fraction(p)\n                         fq = fractions.Fraction(q)\n                         p = fp/fq\n-                    try:\n-                        p = fractions.Fraction(p)\n-                    except ValueError:\n-                        pass  # error will raise below\n                     else:\n+                        p = fractions.Fraction(p)\n+                        if isinstance(q, str):\n+                            q = fractions.Fraction(q)\n+                            return Rational(p.numerator * q.denominator, p.denominator * q.numerator, 1)\n                         return Rational(p.numerator, p.denominator, 1)\n \n                 if not isinstance(p, Rational):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\nindex c0e7188..185c34e 100644\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -1398,11 +1398,11 @@ class Rational(Number):\n                         fp = fractions.Fraction(p)\n                         fq = fractions.Fraction(q)\n                         p = fp / fq\n-                    try:\n-                        p = fractions.Fraction(p)\n-                    except ValueError:\n-                        pass\n                     else:\n+                        p = fractions.Fraction(p)\n+                        if isinstance(q, str):\n+                            q = fractions.Fraction(q)\n+                            return Rational(p.numerator * q.denominator, p.denominator * q.numerator, 1)\n                         return Rational(p.numerator, p.denominator, 1)\n                 if not isinstance(p, Rational):\n                     raise TypeError('invalid input: %s' % p)\n", "normalized_occurrence": 1}
