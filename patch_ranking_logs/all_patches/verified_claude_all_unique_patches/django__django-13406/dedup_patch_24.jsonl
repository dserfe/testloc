{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13406", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 3533127..f16b5e6 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -238,7 +238,11 @@ class QuerySet:\n     def __getstate__(self):\n         # Force the cache to be fully populated.\n         self._fetch_all()\n-        return {**self.__dict__, DJANGO_VERSION_PICKLE_KEY: django.__version__}\n+        state = {**self.__dict__, DJANGO_VERSION_PICKLE_KEY: django.__version__}\n+        # Preserve _iterable_class for values()/values_list() querysets\n+        if hasattr(self, '_iterable_class'):\n+            state['_iterable_class'] = self._iterable_class\n+        return state\n \n     def __setstate__(self, state):\n         pickled_version = state.get(DJANGO_VERSION_PICKLE_KEY)\n", "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex fdf020d..1f217c4 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -143,7 +143,10 @@ class QuerySet:\n         return obj\n     def __getstate__(self):\n         self._fetch_all()\n-        return {**self.__dict__, DJANGO_VERSION_PICKLE_KEY: django.__version__}\n+        state = {**self.__dict__, DJANGO_VERSION_PICKLE_KEY: django.__version__}\n+        if hasattr(self, '_iterable_class'):\n+            state['_iterable_class'] = self._iterable_class\n+        return state\n     def __setstate__(self, state):\n         pickled_version = state.get(DJANGO_VERSION_PICKLE_KEY)\n         if pickled_version:\n", "normalized_occurrence": 1}
