{"model_name_or_path": "agentless", "instance_id": "django__django-16631", "model_patch": "diff --git a/django/contrib/sessions/backends/base.py b/django/contrib/sessions/backends/base.py\nindex 662c574..88982fb 100644\n--- a/django/contrib/sessions/backends/base.py\n+++ b/django/contrib/sessions/backends/base.py\n@@ -91,7 +91,8 @@ class SessionBase:\n \n     def encode(self, session_dict):\n         \"Return the given session dictionary serialized and encoded as a string.\"\n-        return signing.dumps(\n+        signer = signing.Signer(salt=self.key_salt, serializer=self.serializer)\n+        return signer.dumps(\n             session_dict,\n             salt=self.key_salt,\n             serializer=self.serializer,\n@@ -100,7 +101,8 @@ class SessionBase:\n \n     def decode(self, session_data):\n         try:\n-            return signing.loads(\n+            signer = signing.Signer(salt=self.key_salt, serializer=self.serializer)\n+            return signer.loads(\n                 session_data, salt=self.key_salt, serializer=self.serializer\n             )\n         except signing.BadSignature:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/sessions/backends/base.py b/django/contrib/sessions/backends/base.py\nindex a2da098..b249e58 100644\n--- a/django/contrib/sessions/backends/base.py\n+++ b/django/contrib/sessions/backends/base.py\n@@ -53,10 +53,12 @@ class SessionBase:\n     def delete_test_cookie(self):\n         del self[self.TEST_COOKIE_NAME]\n     def encode(self, session_dict):\n-        return signing.dumps(session_dict, salt=self.key_salt, serializer=self.serializer, compress=True)\n+        signer = signing.Signer(salt=self.key_salt, serializer=self.serializer)\n+        return signer.dumps(session_dict, salt=self.key_salt, serializer=self.serializer, compress=True)\n     def decode(self, session_data):\n         try:\n-            return signing.loads(session_data, salt=self.key_salt, serializer=self.serializer)\n+            signer = signing.Signer(salt=self.key_salt, serializer=self.serializer)\n+            return signer.loads(session_data, salt=self.key_salt, serializer=self.serializer)\n         except signing.BadSignature:\n             logger = logging.getLogger('django.security.SuspiciousSession')\n             logger.warning('Session data corrupted')\n", "normalized_occurrence": 1}
