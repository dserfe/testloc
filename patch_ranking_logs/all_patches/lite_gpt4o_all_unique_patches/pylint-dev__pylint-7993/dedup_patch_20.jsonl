{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-7993", "model_patch": "diff --git a/pylint/reporters/text.py b/pylint/reporters/text.py\nindex 6c414e0..d5ec28d 100644\n--- a/pylint/reporters/text.py\n+++ b/pylint/reporters/text.py\n@@ -175,6 +175,10 @@ class TextReporter(BaseReporter):\n         self._template = template\n \n         # Check to see if all parameters in the template are attributes of the Message\n+        # Handle double curly braces by replacing them with a placeholder\n+        placeholder = \"__DOUBLE_CURLY_PLACEHOLDER__\"\n+        template = template.replace(\"{{\", placeholder).replace(\"}}\", placeholder[::-1])\n+\n         arguments = re.findall(r\"\\{(.+?)(:.*)?\\}\", template)\n         for argument in arguments:\n             if argument[0] not in MESSAGE_FIELDS:\n@@ -183,6 +187,9 @@ class TextReporter(BaseReporter):\n                     \"Are you sure it is supported on the current version of pylint?\"\n                 )\n                 template = re.sub(r\"\\{\" + argument[0] + r\"(:.*?)?\\}\", \"\", template)\n+        \n+        # Replace placeholders back to double curly braces\n+        template = template.replace(placeholder, \"{{\").replace(placeholder[::-1], \"}}\")\n         self._fixed_template = template\n \n     def write_message(self, msg: Message) -> None:\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/reporters/text.py b/pylint/reporters/text.py\nindex 3d6bc44..0dda82a 100644\n--- a/pylint/reporters/text.py\n+++ b/pylint/reporters/text.py\n@@ -66,11 +66,14 @@ class TextReporter(BaseReporter):\n         if template == self._template:\n             return\n         self._template = template\n+        placeholder = '__DOUBLE_CURLY_PLACEHOLDER__'\n+        template = template.replace('{{', placeholder).replace('}}', placeholder[::-1])\n         arguments = re.findall('\\\\{(.+?)(:.*)?\\\\}', template)\n         for argument in arguments:\n             if argument[0] not in MESSAGE_FIELDS:\n                 warnings.warn(f\"Don't recognize the argument '{argument[0]}' in the --msg-template. Are you sure it is supported on the current version of pylint?\")\n                 template = re.sub('\\\\{' + argument[0] + '(:.*?)?\\\\}', '', template)\n+        template = template.replace(placeholder, '{{').replace(placeholder[::-1], '}}')\n         self._fixed_template = template\n     def write_message(self, msg: Message) -> None:\n         self_dict = asdict(msg)\n", "normalized_occurrence": 1}
