{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-24334", "model_patch": "diff --git a/lib/matplotlib/axis.py b/lib/matplotlib/axis.py\nindex d63d9ca..e2ac4ee 100644\n--- a/lib/matplotlib/axis.py\n+++ b/lib/matplotlib/axis.py\n@@ -2011,8 +2011,9 @@ class Axis(martist.Artist):\n         minor : bool, default: False\n             If ``False``, set the major ticks; if ``True``, the minor ticks.\n         **kwargs\n-            `.Text` properties for the labels. These take effect only if you\n-            pass *labels*. In other cases, please use `~.Axes.tick_params`.\n+            `.Text` properties for the labels. These properties are validated\n+            even if *labels* is not passed, but only take effect when *labels*\n+            is provided. In other cases, please use `~.Axes.tick_params`.\n \n         Notes\n         -----\n@@ -2021,9 +2022,20 @@ class Axis(martist.Artist):\n         other limits, you should set the limits explicitly after setting the\n         ticks.\n         \"\"\"\n+        # Validate Text properties even if labels is None\n+        if kwargs:\n+            dummy_text = mtext.Text(0, 0, \"\")\n+            dummy_text.update(kwargs)\n         result = self._set_tick_locations(ticks, minor=minor)\n         if labels is not None:\n             self.set_ticklabels(labels, minor=minor, **kwargs)\n+        elif kwargs:\n+            # If no labels but kwargs provided, warn that they have no effect\n+            _api.warn_external(\n+                \"Text properties were provided to set_ticks() but have no \"\n+                \"effect because no labels were provided. Use tick_params() \"\n+                \"instead to modify tick properties.\"\n+            )\n         return result\n \n     def _get_tick_boxes_siblings(self, renderer):\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axis.py b/lib/matplotlib/axis.py\nindex 95f7f71..688cbd1 100644\n--- a/lib/matplotlib/axis.py\n+++ b/lib/matplotlib/axis.py\n@@ -1640,8 +1640,9 @@ class Axis(martist.Artist):\n         minor : bool, default: False\n             If ``False``, set the major ticks; if ``True``, the minor ticks.\n         **kwargs\n-            `.Text` properties for the labels. These take effect only if you\n-            pass *labels*. In other cases, please use `~.Axes.tick_params`.\n+            `.Text` properties for the labels. These properties are validated\n+            even if *labels* is not passed, but only take effect when *labels*\n+            is provided. In other cases, please use `~.Axes.tick_params`.\n \n         Notes\n         -----\n@@ -1650,9 +1651,14 @@ class Axis(martist.Artist):\n         other limits, you should set the limits explicitly after setting the\n         ticks.\n         \"\"\"\n+        if kwargs:\n+            dummy_text = mtext.Text(0, 0, '')\n+            dummy_text.update(kwargs)\n         result = self._set_tick_locations(ticks, minor=minor)\n         if labels is not None:\n             self.set_ticklabels(labels, minor=minor, **kwargs)\n+        elif kwargs:\n+            _api.warn_external('Text properties were provided to set_ticks() but have no effect because no labels were provided. Use tick_params() instead to modify tick properties.')\n         return result\n \n     def _get_tick_boxes_siblings(self, renderer):\n", "normalized_occurrence": 1}
