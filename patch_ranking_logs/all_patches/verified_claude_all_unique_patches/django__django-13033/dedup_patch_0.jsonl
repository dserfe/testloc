{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13033", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex f5fd96c..0c10248 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1898,15 +1898,6 @@ class Query(BaseExpression):\n         errors = []\n         for item in ordering:\n             if isinstance(item, str):\n-                if '.' in item:\n-                    warnings.warn(\n-                        'Passing column raw column aliases to order_by() is '\n-                        'deprecated. Wrap %r in a RawSQL expression before '\n-                        'passing it to order_by().' % item,\n-                        category=RemovedInDjango40Warning,\n-                        stacklevel=3,\n-                    )\n-                    continue\n                 if item == '?':\n                     continue\n                 if item.startswith('-'):\n@@ -1915,6 +1906,17 @@ class Query(BaseExpression):\n                     continue\n                 if self.extra and item in self.extra:\n                     continue\n+                if '.' in item:\n+                    # Handle raw column aliases\n+                    if not LOOKUP_SEP in item:\n+                        warnings.warn(\n+                            'Passing column raw column aliases to order_by() is '\n+                            'deprecated. Wrap %r in a RawSQL expression before '\n+                            'passing it to order_by().' % item,\n+                            category=RemovedInDjango40Warning,\n+                            stacklevel=3,\n+                        )\n+                        continue\n                 # names_to_path() validates the lookup. A descriptive\n                 # FieldError will be raise if it's not.\n                 self.names_to_path(item.split(LOOKUP_SEP), self.model._meta)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 5d74201..2f860d7 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1010,9 +1010,6 @@ class Query(BaseExpression):\n         errors = []\n         for item in ordering:\n             if isinstance(item, str):\n-                if '.' in item:\n-                    warnings.warn('Passing column raw column aliases to order_by() is deprecated. Wrap %r in a RawSQL expression before passing it to order_by().' % item, category=RemovedInDjango40Warning, stacklevel=3)\n-                    continue\n                 if item == '?':\n                     continue\n                 if item.startswith('-'):\n@@ -1021,6 +1018,10 @@ class Query(BaseExpression):\n                     continue\n                 if self.extra and item in self.extra:\n                     continue\n+                if '.' in item:\n+                    if not LOOKUP_SEP in item:\n+                        warnings.warn('Passing column raw column aliases to order_by() is deprecated. Wrap %r in a RawSQL expression before passing it to order_by().' % item, category=RemovedInDjango40Warning, stacklevel=3)\n+                        continue\n                 self.names_to_path(item.split(LOOKUP_SEP), self.model._meta)\n             elif not hasattr(item, 'resolve_expression'):\n                 errors.append(item)\n", "normalized_occurrence": 1}
