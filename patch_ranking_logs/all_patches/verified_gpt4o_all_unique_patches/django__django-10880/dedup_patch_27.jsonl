{"model_name_or_path": "agentless", "instance_id": "django__django-10880", "model_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex bbc34e8..bc5ab39 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -981,7 +981,10 @@ class Case(Expression):\n         template_params['cases'] = case_joiner.join(case_parts)\n         template_params['default'] = default_sql\n         sql_params.extend(default_params)\n-        template = template or template_params.get('template', self.template)\n+        if self.template.startswith('DISTINCT'):\n+            template = 'DISTINCT ' + (template or template_params.get('template', self.template))\n+        else:\n+            template = template or template_params.get('template', self.template)\n         sql = template % template_params\n         if self._output_field_or_none is not None:\n             sql = connection.ops.unification_cast_sql(self.output_field) % sql\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 5106e76..7e0783e 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -595,7 +595,10 @@ class Case(Expression):\n         template_params['cases'] = case_joiner.join(case_parts)\n         template_params['default'] = default_sql\n         sql_params.extend(default_params)\n-        template = template or template_params.get('template', self.template)\n+        if self.template.startswith('DISTINCT'):\n+            template = 'DISTINCT ' + (template or template_params.get('template', self.template))\n+        else:\n+            template = template or template_params.get('template', self.template)\n         sql = template % template_params\n         if self._output_field_or_none is not None:\n             sql = connection.ops.unification_cast_sql(self.output_field) % sql\n", "normalized_occurrence": 1}
