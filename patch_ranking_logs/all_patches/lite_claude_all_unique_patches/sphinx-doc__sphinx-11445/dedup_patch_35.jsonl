{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-11445", "model_patch": "diff --git a/sphinx/environment/collectors/title.py b/sphinx/environment/collectors/title.py\nindex ec97f42..f03f9f8 100644\n--- a/sphinx/environment/collectors/title.py\n+++ b/sphinx/environment/collectors/title.py\n@@ -39,8 +39,16 @@ class TitleCollector(EnvironmentCollector):\n         # look for first section title and use that as the title\n         for node in doctree.findall(nodes.section):\n             visitor = SphinxContentsFilter(doctree)\n-            node[0].walkabout(visitor)\n-            titlenode += visitor.get_entry_text()\n+            # Handle both plain text and domain directives in titles\n+            title = node[0]\n+            if isinstance(title, nodes.title):\n+                title.walkabout(visitor)\n+                titletext = visitor.get_entry_text()\n+                if titletext:\n+                    titlenode += nodes.Text(titletext)\n+                else:\n+                    # Fallback to raw astext() if visitor didn't capture anything\n+                    titlenode += nodes.Text(title.astext())\n             break\n         else:\n             # document has no title\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/environment/collectors/title.py b/sphinx/environment/collectors/title.py\nindex 90c3ce6..c2c56f9 100644\n--- a/sphinx/environment/collectors/title.py\n+++ b/sphinx/environment/collectors/title.py\n@@ -21,8 +21,14 @@ class TitleCollector(EnvironmentCollector):\n             longtitlenode += nodes.Text(doctree['title'])\n         for node in doctree.findall(nodes.section):\n             visitor = SphinxContentsFilter(doctree)\n-            node[0].walkabout(visitor)\n-            titlenode += visitor.get_entry_text()\n+            title = node[0]\n+            if isinstance(title, nodes.title):\n+                title.walkabout(visitor)\n+                titletext = visitor.get_entry_text()\n+                if titletext:\n+                    titlenode += nodes.Text(titletext)\n+                else:\n+                    titlenode += nodes.Text(title.astext())\n             break\n         else:\n             titlenode += nodes.Text(doctree.get('title', '<no title>'))\n", "normalized_occurrence": 1}
