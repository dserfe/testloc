{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-16792", "model_patch": "diff --git a/sympy/utilities/autowrap.py b/sympy/utilities/autowrap.py\nindex 6b78c94..574dc25 100644\n--- a/sympy/utilities/autowrap.py\n+++ b/sympy/utilities/autowrap.py\n@@ -381,6 +381,8 @@ setup(ext_modules=cythonize(ext_mods, **cy_opts))\n                 mat, ind = [self._string_var(v) for v in val]\n                 local_decs.append(\"    cdef {0} = {1}.shape[{2}]\".format(proto, mat, ind))\n             local_decs.extend([\"    cdef {0}\".format(self._declare_arg(a)) for a in py_loc])\n+            for arg in py_args:\n+                local_decs.append(\"    cdef {0}\".format(self._declare_arg(arg)))\n             declarations = \"\\n\".join(local_decs)\n             if declarations:\n                 declarations = declarations + \"\\n\"\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/utilities/autowrap.py b/sympy/utilities/autowrap.py\nindex da40c47..323a853 100644\n--- a/sympy/utilities/autowrap.py\n+++ b/sympy/utilities/autowrap.py\n@@ -149,6 +149,8 @@ class CythonCodeWrapper(CodeWrapper):\n                 mat, ind = [self._string_var(v) for v in val]\n                 local_decs.append('    cdef {0} = {1}.shape[{2}]'.format(proto, mat, ind))\n             local_decs.extend(['    cdef {0}'.format(self._declare_arg(a)) for a in py_loc])\n+            for arg in py_args:\n+                local_decs.append('    cdef {0}'.format(self._declare_arg(arg)))\n             declarations = '\\n'.join(local_decs)\n             if declarations:\n                 declarations = declarations + '\\n'\n", "normalized_occurrence": 1}
