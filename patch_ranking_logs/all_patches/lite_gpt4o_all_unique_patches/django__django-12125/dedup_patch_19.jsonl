{"model_name_or_path": "agentless", "instance_id": "django__django-12125", "model_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex 824ab10..a68f0e8 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -90,7 +90,11 @@ class DeconstructableSerializer(BaseSerializer):\n \n     @staticmethod\n     def _serialize_path(path):\n-        module, name = path.rsplit(\".\", 1)\n+        parts = path.split(\".\")\n+        module, name = \".\".join(parts[:-1]), parts[-1]\n+        if len(parts) > 2:  # Handling inner classes\n+            module, inner_class = \".\".join(parts[:-2]), parts[-2]\n+            name = \"%s.%s\" % (inner_class, name)\n         if module == \"django.db.models\":\n             imports = {\"from django.db import models\"}\n             name = \"models.%s\" % name\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex d663baf..7bd614f 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -68,7 +68,11 @@ class DeconstructableSerializer(BaseSerializer):\n         return ('%s(%s)' % (name, ', '.join(strings)), imports)\n     @staticmethod\n     def _serialize_path(path):\n-        module, name = path.rsplit('.', 1)\n+        parts = path.split('.')\n+        module, name = ('.'.join(parts[:-1]), parts[-1])\n+        if len(parts) > 2:\n+            module, inner_class = ('.'.join(parts[:-2]), parts[-2])\n+            name = '%s.%s' % (inner_class, name)\n         if module == 'django.db.models':\n             imports = {'from django.db import models'}\n             name = 'models.%s' % name\n", "normalized_occurrence": 1}
