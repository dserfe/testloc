{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-8265", "model_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex 71b6f3a..6b8c112 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -202,8 +202,14 @@ def _parse_arglist(arglist: str, env: BuildEnvironment = None) -> addnodes.desc_\n                 node += nodes.Text(' ')\n             else:\n                 node += addnodes.desc_sig_operator('', '=')\n-            node += nodes.inline('', param.default, classes=['default_value'],\n-                                 support_smartquotes=False)\n+            default_value = param.default\n+            if default_value.startswith('(') and default_value.endswith(')'):\n+                # Preserve tuple literals in default values\n+                node += nodes.inline('', default_value, classes=['default_value'],\n+                                   support_smartquotes=False)\n+            else:\n+                node += nodes.inline('', default_value, classes=['default_value'],\n+                                   support_smartquotes=False)\n \n         params += node\n         last_kind = param.kind\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex e975c71..b4f34e8 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -134,7 +134,11 @@ def _parse_arglist(arglist: str, env: BuildEnvironment=None) -> addnodes.desc_pa\n                 node += nodes.Text(' ')\n             else:\n                 node += addnodes.desc_sig_operator('', '=')\n-            node += nodes.inline('', param.default, classes=['default_value'], support_smartquotes=False)\n+            default_value = param.default\n+            if default_value.startswith('(') and default_value.endswith(')'):\n+                node += nodes.inline('', default_value, classes=['default_value'], support_smartquotes=False)\n+            else:\n+                node += nodes.inline('', default_value, classes=['default_value'], support_smartquotes=False)\n         params += node\n         last_kind = param.kind\n     if last_kind == Parameter.POSITIONAL_ONLY:\n", "normalized_occurrence": 2}
