{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25311", "model_patch": "diff --git a/lib/matplotlib/legend.py b/lib/matplotlib/legend.py\nindex a038473..fd52373 100644\n--- a/lib/matplotlib/legend.py\n+++ b/lib/matplotlib/legend.py\n@@ -1204,6 +1204,17 @@ class Legend(Artist):\n             self._draggable = None\n         return self._draggable\n \n+    def __getstate__(self):\n+        state = self.__dict__.copy()\n+        # Remove the unpicklable entries.\n+        state['_draggable'] = None\n+        return state\n+\n+    def __setstate__(self, state):\n+        self.__dict__.update(state)\n+        if self._draggable:\n+            self._draggable = DraggableLegend(self, use_blit=True)\n+\n     def get_draggable(self):\n         \"\"\"Return ``True`` if the legend is draggable, ``False`` otherwise.\"\"\"\n         return self._draggable is not None\n", "occurrence": 1, "normalized_patch": "--- a/lib/matplotlib/legend.py\n+++ b/lib/matplotlib/legend.py\n+    def __getstate__(self):\n+        state = self.__dict__.copy()\n+        state['_draggable'] = None\n+        return state\n+    def __setstate__(self, state):\n+        self.__dict__.update(state)\n+        if self._draggable:\n+            self._draggable = DraggableLegend(self, use_blit=True)", "normalized_occurrence": 1}
