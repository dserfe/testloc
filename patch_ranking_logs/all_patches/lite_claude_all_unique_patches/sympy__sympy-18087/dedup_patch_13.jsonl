{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-18087", "model_patch": "diff --git a/sympy/functions/elementary/trigonometric.py b/sympy/functions/elementary/trigonometric.py\nindex 5205b6e..ef2d43c 100644\n--- a/sympy/functions/elementary/trigonometric.py\n+++ b/sympy/functions/elementary/trigonometric.py\n@@ -487,8 +487,10 @@ class sin(TrigonometricFunction):\n             return True\n \n     def _eval_is_complex(self):\n-        if self.args[0].is_extended_real \\\n-                or self.args[0].is_complex:\n+        arg = self.args[0]\n+        if arg.is_extended_real:\n+            return True\n+        if arg.is_complex and arg.is_algebraic:\n             return True\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/trigonometric.py b/sympy/functions/elementary/trigonometric.py\nindex bfdabb3..40e0f22 100644\n--- a/sympy/functions/elementary/trigonometric.py\n+++ b/sympy/functions/elementary/trigonometric.py\n@@ -303,7 +303,10 @@ class sin(TrigonometricFunction):\n         if arg.is_zero:\n             return True\n     def _eval_is_complex(self):\n-        if self.args[0].is_extended_real or self.args[0].is_complex:\n+        arg = self.args[0]\n+        if arg.is_extended_real:\n+            return True\n+        if arg.is_complex and arg.is_algebraic:\n             return True\n class cos(TrigonometricFunction):\n     def period(self, symbol=None):\n", "normalized_occurrence": 1}
