{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7236", "model_patch": "diff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py\nindex 28ce115..e36329c 100644\n--- a/src/_pytest/unittest.py\n+++ b/src/_pytest/unittest.py\n@@ -228,7 +228,8 @@ class TestCaseFunction(Function):\n             # wrap_pytest_function_for_tracing replaces self.obj by a wrapper\n             setattr(self._testcase, self.name, self.obj)\n             try:\n-                self._testcase(result=self)\n+                if self._testcase._outcome.result.wasSuccessful():\n+                    self._testcase(result=self)\n             finally:\n                 delattr(self._testcase, self.name)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py\nindex 4eb682f..2bc0e79 100644\n--- a/src/_pytest/unittest.py\n+++ b/src/_pytest/unittest.py\n@@ -157,7 +157,8 @@ class TestCaseFunction(Function):\n                 setattr(self._testcase, 'tearDown', lambda *args: None)\n             setattr(self._testcase, self.name, self.obj)\n             try:\n-                self._testcase(result=self)\n+                if self._testcase._outcome.result.wasSuccessful():\n+                    self._testcase(result=self)\n             finally:\n                 delattr(self._testcase, self.name)\n     def _prunetraceback(self, excinfo):\n", "normalized_occurrence": 1}
