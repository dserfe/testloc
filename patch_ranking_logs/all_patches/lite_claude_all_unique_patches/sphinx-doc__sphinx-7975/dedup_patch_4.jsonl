{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-7975", "model_patch": "diff --git a/sphinx/builders/html/__init__.py b/sphinx/builders/html/__init__.py\nindex c052c27..af3a086 100644\n--- a/sphinx/builders/html/__init__.py\n+++ b/sphinx/builders/html/__init__.py\n@@ -659,6 +659,24 @@ class StandaloneHTMLBuilder(Builder):\n         # the total count of lines for each index letter, used to distribute\n         # the entries into two columns\n         genindex = IndexEntries(self.env).create_index(self)\n+        \n+        # Merge any separate symbol sections\n+        merged_genindex = []\n+        symbol_entries = []\n+        \n+        # First pass: collect all symbol entries and regular entries\n+        for key, entries in genindex:\n+            if key == 'Symbols':\n+                symbol_entries.extend(entries)\n+            else:\n+                merged_genindex.append((key, entries))\n+                \n+        # Add all symbol entries at the beginning if there are any\n+        if symbol_entries:\n+            merged_genindex.insert(0, ('Symbols', symbol_entries))\n+            \n+        genindex = merged_genindex\n+        \n         indexcounts = []\n         for _k, entries in genindex:\n             indexcounts.append(sum(1 + len(subitems)\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/builders/html/__init__.py b/sphinx/builders/html/__init__.py\nindex e212f45..a4e450f 100644\n--- a/sphinx/builders/html/__init__.py\n+++ b/sphinx/builders/html/__init__.py\n@@ -405,6 +405,16 @@ class StandaloneHTMLBuilder(Builder):\n             self.handle_page('opensearch', {}, 'opensearch.xml', outfilename=fn)\n     def write_genindex(self) -> None:\n         genindex = IndexEntries(self.env).create_index(self)\n+        merged_genindex = []\n+        symbol_entries = []\n+        for key, entries in genindex:\n+            if key == 'Symbols':\n+                symbol_entries.extend(entries)\n+            else:\n+                merged_genindex.append((key, entries))\n+        if symbol_entries:\n+            merged_genindex.insert(0, ('Symbols', symbol_entries))\n+        genindex = merged_genindex\n         indexcounts = []\n         for _k, entries in genindex:\n             indexcounts.append(sum((1 + len(subitems) for _, (_, subitems, _) in entries)))\n", "normalized_occurrence": 1}
