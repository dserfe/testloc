{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15280", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 1013471..5e28773 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -1943,6 +1943,9 @@ def prefetch_one_level(instances, prefetcher, lookup, level):\n             elif is_descriptor:\n                 # cache_name points to a field name in obj.\n                 # This field is a descriptor for a related object.\n+                if val is not None:\n+                    # Ensure we preserve the deferred state of the related object\n+                    val._deferred = getattr(val, '_deferred', False)\n                 setattr(obj, cache_name, val)\n             else:\n                 # No to_attr has been given for this prefetch operation and the\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex b23a375..8fc1140 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -1131,6 +1131,8 @@ def prefetch_one_level(instances, prefetcher, lookup, level):\n             if as_attr:\n                 setattr(obj, to_attr, val)\n             elif is_descriptor:\n+                if val is not None:\n+                    val._deferred = getattr(val, '_deferred', False)\n                 setattr(obj, cache_name, val)\n             else:\n                 obj._state.fields_cache[cache_name] = val\n", "normalized_occurrence": 1}
