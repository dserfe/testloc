{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-14983", "model_patch": "diff --git a/sklearn/model_selection/_split.py b/sklearn/model_selection/_split.py\nindex 8743303..2e1fb03 100644\n--- a/sklearn/model_selection/_split.py\n+++ b/sklearn/model_selection/_split.py\n@@ -1215,6 +1215,14 @@ class RepeatedKFold(_RepeatedSplits):\n     def __init__(self, n_splits=5, n_repeats=10, random_state=None):\n         super().__init__(\n             KFold, n_repeats, random_state, n_splits=n_splits)\n+        self.n_splits = n_splits\n+        self.n_repeats = n_repeats\n+        self.random_state = random_state\n+\n+    def __repr__(self):\n+        return (f\"{self.__class__.__name__}(n_splits={self.n_splits}, \"\n+                f\"n_repeats={self.n_repeats}, \"\n+                f\"random_state={self.random_state})\")\n \n \n class RepeatedStratifiedKFold(_RepeatedSplits):\n@@ -1268,6 +1276,14 @@ class RepeatedStratifiedKFold(_RepeatedSplits):\n     def __init__(self, n_splits=5, n_repeats=10, random_state=None):\n         super().__init__(\n             StratifiedKFold, n_repeats, random_state, n_splits=n_splits)\n+        self.n_splits = n_splits\n+        self.n_repeats = n_repeats\n+        self.random_state = random_state\n+\n+    def __repr__(self):\n+        return (f\"{self.__class__.__name__}(n_splits={self.n_splits}, \"\n+                f\"n_repeats={self.n_repeats}, \"\n+                f\"random_state={self.random_state})\")\n \n \n class BaseShuffleSplit(metaclass=ABCMeta):\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/model_selection/_split.py b/sklearn/model_selection/_split.py\nindex 7f10fe3..5e1d75d 100644\n--- a/sklearn/model_selection/_split.py\n+++ b/sklearn/model_selection/_split.py\n@@ -1097,6 +1097,12 @@ class RepeatedKFold(_RepeatedSplits):\n \n     def __init__(self, n_splits=5, n_repeats=10, random_state=None):\n         super().__init__(KFold, n_repeats, random_state, n_splits=n_splits)\n+        self.n_splits = n_splits\n+        self.n_repeats = n_repeats\n+        self.random_state = random_state\n+\n+    def __repr__(self):\n+        return f'{self.__class__.__name__}(n_splits={self.n_splits}, n_repeats={self.n_repeats}, random_state={self.random_state})'\n \n class RepeatedStratifiedKFold(_RepeatedSplits):\n     \"\"\"Repeated Stratified K-Fold cross validator.\n@@ -1149,6 +1155,12 @@ class RepeatedStratifiedKFold(_RepeatedSplits):\n \n     def __init__(self, n_splits=5, n_repeats=10, random_state=None):\n         super().__init__(StratifiedKFold, n_repeats, random_state, n_splits=n_splits)\n+        self.n_splits = n_splits\n+        self.n_repeats = n_repeats\n+        self.random_state = random_state\n+\n+    def __repr__(self):\n+        return f'{self.__class__.__name__}(n_splits={self.n_splits}, n_repeats={self.n_repeats}, random_state={self.random_state})'\n \n class BaseShuffleSplit(metaclass=ABCMeta):\n     \"\"\"Base class for ShuffleSplit and StratifiedShuffleSplit\"\"\"\n", "normalized_occurrence": 1}
