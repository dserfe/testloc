{"model_name_or_path": "agentless", "instance_id": "psf__requests-6028", "model_patch": "diff --git a/requests/sessions.py b/requests/sessions.py\nindex 594e72b..6c2004a 100644\n--- a/requests/sessions.py\n+++ b/requests/sessions.py\n@@ -456,7 +456,7 @@ class Session(SessionRedirectMixin):\n \n     def request(self, method, url,\n             params=None, data=None, headers=None, cookies=None, files=None,\n-            auth=None, timeout=None, allow_redirects=True, proxies=None,\n+            auth=None, timeout=None, allow_redirects=True, proxies=None, headers=None,\n             hooks=None, stream=None, verify=None, cert=None, json=None):\n         \"\"\"Constructs a :class:`Request <Request>`, prepares it and sends it.\n         Returns :class:`Response <Response>` object.\n", "occurrence": 1, "normalized_patch": "diff --git a/requests/sessions.py b/requests/sessions.py\nindex 65aa332..797fdc3 100644\n--- a/requests/sessions.py\n+++ b/requests/sessions.py\n@@ -178,7 +178,7 @@ class Session(SessionRedirectMixin):\n         p = PreparedRequest()\n         p.prepare(method=request.method.upper(), url=request.url, files=request.files, data=request.data, json=request.json, headers=merge_setting(request.headers, self.headers, dict_class=CaseInsensitiveDict), params=merge_setting(request.params, self.params), auth=merge_setting(auth, self.auth), cookies=merged_cookies, hooks=merge_hooks(request.hooks, self.hooks))\n         return p\n-    def request(self, method, url, params=None, data=None, headers=None, cookies=None, files=None, auth=None, timeout=None, allow_redirects=True, proxies=None, hooks=None, stream=None, verify=None, cert=None, json=None):\n+    def request(self, method, url, params=None, data=None, headers=None, cookies=None, files=None, auth=None, timeout=None, allow_redirects=True, proxies=None, headers=None, hooks=None, stream=None, verify=None, cert=None, json=None):\n         req = Request(method=method.upper(), url=url, headers=headers, files=files, data=data or {}, json=json, params=params or {}, auth=auth, cookies=cookies, hooks=hooks)\n         prep = self.prepare_request(req)\n         proxies = proxies or {}\n", "normalized_occurrence": 1}
