{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9591", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 51811ca..08aaaf3 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -49,19 +49,19 @@ def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element\n             fullname = '.'.join([signature['module'], signature['fullname']])\n         else:\n             fullname = signature['fullname']\n-    except KeyError:\n+    except (KeyError, AttributeError):\n         # signature node does not have valid context info for the target object\n         return\n \n     annotations = app.env.temp_data.get('annotations', {})\n     if annotations.get(fullname, {}):\n         field_lists = [n for n in contentnode if isinstance(n, nodes.field_list)]\n-        if field_lists == []:\n+        if not field_lists:\n             field_list = insert_field_list(contentnode)\n             field_lists.append(field_list)\n \n         for field_list in field_lists:\n-            if app.config.autodoc_typehints_description_target == \"all\":\n+            if app.config.autodoc_typehints_description_target == \"all\" or objtype == 'property':\n                 modify_field_list(field_list, annotations[fullname])\n             else:\n                 augment_descriptions_with_types(field_list, annotations[fullname])\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 03a755b..cdca077 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -30,16 +30,16 @@ def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element\n             fullname = '.'.join([signature['module'], signature['fullname']])\n         else:\n             fullname = signature['fullname']\n-    except KeyError:\n+    except (KeyError, AttributeError):\n         return\n     annotations = app.env.temp_data.get('annotations', {})\n     if annotations.get(fullname, {}):\n         field_lists = [n for n in contentnode if isinstance(n, nodes.field_list)]\n-        if field_lists == []:\n+        if not field_lists:\n             field_list = insert_field_list(contentnode)\n             field_lists.append(field_list)\n         for field_list in field_lists:\n-            if app.config.autodoc_typehints_description_target == 'all':\n+            if app.config.autodoc_typehints_description_target == 'all' or objtype == 'property':\n                 modify_field_list(field_list, annotations[fullname])\n             else:\n                 augment_descriptions_with_types(field_list, annotations[fullname])\n", "normalized_occurrence": 1}
