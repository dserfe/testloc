{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-8801", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 9e67bb6..724e0a8 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -2398,6 +2398,11 @@ class AttributeDocumenter(GenericAliasMixin, NewTypeMixin, SlotsMixin,  # type:\n               not inspect.isroutine(member) and\n               not isinstance(member, type)):\n             return True\n+        # Handle annotation-only attributes\n+        elif (not isinstance(parent, ModuleDocumenter) and\n+              isinstance(getattr(parent, \"__annotations__\", None), dict) and\n+              membername in parent.__annotations__):\n+            return True\n         else:\n             return False\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex e1d3d5c..3654668 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1397,6 +1397,8 @@ class AttributeDocumenter(GenericAliasMixin, NewTypeMixin, SlotsMixin, TypeVarMi\n             return True\n         elif not isinstance(parent, ModuleDocumenter) and (not inspect.isroutine(member)) and (not isinstance(member, type)):\n             return True\n+        elif not isinstance(parent, ModuleDocumenter) and isinstance(getattr(parent, '__annotations__', None), dict) and (membername in parent.__annotations__):\n+            return True\n         else:\n             return False\n     def document_members(self, all_members: bool=False) -> None:\n", "normalized_occurrence": 1}
