{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-23299", "model_patch": "diff --git a/lib/matplotlib/pyplot.py b/lib/matplotlib/pyplot.py\nindex 9ba243c..3099c30 100644\n--- a/lib/matplotlib/pyplot.py\n+++ b/lib/matplotlib/pyplot.py\n@@ -588,7 +588,19 @@ def rc(group, **kwargs):\n \n @_copy_docstring_and_deprecators(matplotlib.rc_context)\n def rc_context(rc=None, fname=None):\n-    return matplotlib.rc_context(rc, fname)\n+    context = matplotlib.rc_context(rc, fname)\n+    class RcContextWrapper(context.__class__):\n+        def __enter__(self):\n+            self._figs_before = plt._pylab_helpers.Gcf.figs.copy()\n+            return super().__enter__()\n+        \n+        def __exit__(self, exc_type, exc_value, traceback):\n+            super().__exit__(exc_type, exc_value, traceback)\n+            current_figs = plt._pylab_helpers.Gcf.figs\n+            for key, fig in self._figs_before.items():\n+                if key not in current_figs:\n+                    plt._pylab_helpers.Gcf.figs[key] = fig\n+    return RcContextWrapper(rc, fname)\n \n \n @_copy_docstring_and_deprecators(matplotlib.rcdefaults)\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/pyplot.py b/lib/matplotlib/pyplot.py\nindex a3f363f..de3a5bb 100644\n--- a/lib/matplotlib/pyplot.py\n+++ b/lib/matplotlib/pyplot.py\n@@ -209,7 +209,18 @@ def rc(group, **kwargs):\n     matplotlib.rc(group, **kwargs)\n @_copy_docstring_and_deprecators(matplotlib.rc_context)\n def rc_context(rc=None, fname=None):\n-    return matplotlib.rc_context(rc, fname)\n+    context = matplotlib.rc_context(rc, fname)\n+    class RcContextWrapper(context.__class__):\n+        def __enter__(self):\n+            self._figs_before = plt._pylab_helpers.Gcf.figs.copy()\n+            return super().__enter__()\n+        def __exit__(self, exc_type, exc_value, traceback):\n+            super().__exit__(exc_type, exc_value, traceback)\n+            current_figs = plt._pylab_helpers.Gcf.figs\n+            for key, fig in self._figs_before.items():\n+                if key not in current_figs:\n+                    plt._pylab_helpers.Gcf.figs[key] = fig\n+    return RcContextWrapper(rc, fname)\n @_copy_docstring_and_deprecators(matplotlib.rcdefaults)\n def rcdefaults():\n     matplotlib.rcdefaults()\n", "normalized_occurrence": 1}
