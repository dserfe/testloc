{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-4248", "model_patch": "diff --git a/xarray/core/formatting.py b/xarray/core/formatting.py\nindex 91a7f67..cc19ec3 100644\n--- a/xarray/core/formatting.py\n+++ b/xarray/core/formatting.py\n@@ -272,6 +272,7 @@ def summarize_variable(\n     name: Hashable, var, col_width: int, marker: str = \" \", max_width: int = None\n ):\n     \"\"\"Summarize a variable in one line, e.g., for the Dataset.__repr__.\"\"\"\n+    unit_str = f\", in {var.attrs['units']}\" if 'units' in var.attrs else \"\"\n     if max_width is None:\n         max_width_options = OPTIONS[\"display_width\"]\n         if not isinstance(max_width_options, int):\n@@ -283,7 +284,7 @@ def summarize_variable(\n         dims_str = \"({}) \".format(\", \".join(map(str, var.dims)))\n     else:\n         dims_str = \"\"\n-    front_str = f\"{first_col}{dims_str}{var.dtype} \"\n+    front_str = f\"{first_col}{unit_str}{dims_str}{var.dtype} \"\n \n     values_width = max_width - len(front_str)\n     values_str = inline_variable_array_repr(var, values_width)\n@@ -312,6 +313,7 @@ def summarize_datavar(name, var, col_width):\n def summarize_coord(name: Hashable, var, col_width: int):\n     is_index = name in var.dims\n     marker = \"*\" if is_index else \" \"\n+    unit_str = f\", in {var.attrs['units']}\" if 'units' in var.attrs else \"\"\n     if is_index:\n         coord = var.variable.to_index_variable()\n         if coord.level_names is not None:\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/formatting.py b/xarray/core/formatting.py\nindex 6d31a74..c2fbb50 100644\n--- a/xarray/core/formatting.py\n+++ b/xarray/core/formatting.py\n@@ -152,6 +152,7 @@ def inline_variable_array_repr(var, max_width):\n     else:\n         return '...'\n def summarize_variable(name: Hashable, var, col_width: int, marker: str=' ', max_width: int=None):\n+    unit_str = f\", in {var.attrs['units']}\" if 'units' in var.attrs else ''\n     if max_width is None:\n         max_width_options = OPTIONS['display_width']\n         if not isinstance(max_width_options, int):\n@@ -163,7 +164,7 @@ def summarize_variable(name: Hashable, var, col_width: int, marker: str=' ', max\n         dims_str = '({}) '.format(', '.join(map(str, var.dims)))\n     else:\n         dims_str = ''\n-    front_str = f'{first_col}{dims_str}{var.dtype} '\n+    front_str = f'{first_col}{unit_str}{dims_str}{var.dtype} '\n     values_width = max_width - len(front_str)\n     values_str = inline_variable_array_repr(var, values_width)\n     return front_str + values_str\n@@ -177,6 +178,7 @@ def summarize_datavar(name, var, col_width):\n def summarize_coord(name: Hashable, var, col_width: int):\n     is_index = name in var.dims\n     marker = '*' if is_index else ' '\n+    unit_str = f\", in {var.attrs['units']}\" if 'units' in var.attrs else ''\n     if is_index:\n         coord = var.variable.to_index_variable()\n         if coord.level_names is not None:\n", "normalized_occurrence": 1}
