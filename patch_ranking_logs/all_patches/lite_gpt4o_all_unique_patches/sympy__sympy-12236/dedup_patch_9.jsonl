{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-12236", "model_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 03af2f5..3be5fa1 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -131,7 +131,10 @@ def apart(f, x=None, full=False, **options):\n     P, Q = P.rat_clear_denoms(Q)\n \n     if Q.degree() <= 1:\n-        partial = P/Q\n+        if Q.degree() == 1:\n+            partial = apart_undetermined_coeffs(P, Q)\n+        else:\n+            partial = P/Q\n     else:\n         if not full:\n             partial = apart_undetermined_coeffs(P, Q)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 21c4bd7..7307941 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -63,7 +63,10 @@ def apart(f, x=None, full=False, **options):\n     poly, P = P.div(Q, auto=True)\n     P, Q = P.rat_clear_denoms(Q)\n     if Q.degree() <= 1:\n-        partial = P / Q\n+        if Q.degree() == 1:\n+            partial = apart_undetermined_coeffs(P, Q)\n+        else:\n+            partial = P / Q\n     elif not full:\n         partial = apart_undetermined_coeffs(P, Q)\n     else:\n", "normalized_occurrence": 1}
