{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11149", "model_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex acc7653..70eb982 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -2111,32 +2111,7 @@ class InlineModelAdmin(BaseModelAdmin):\n             queryset = queryset.none()\n         return queryset\n \n-    def has_add_permission(self, request, obj):\n-        if self.opts.auto_created:\n-            # We're checking the rights to an auto-created intermediate model,\n-            # which doesn't have its own individual permissions. The user needs\n-            # to have the view permission for the related model in order to\n-            # be able to do anything with the intermediate model.\n-            return self.has_view_permission(request, obj)\n-        return super().has_add_permission(request)\n-\n-    def has_change_permission(self, request, obj=None):\n-        if self.opts.auto_created:\n-            # We're checking the rights to an auto-created intermediate model,\n-            # which doesn't have its own individual permissions. The user needs\n-            # to have the view permission for the related model in order to\n-            # be able to do anything with the intermediate model.\n-            return self.has_view_permission(request, obj)\n-        return super().has_change_permission(request)\n \n-    def has_delete_permission(self, request, obj=None):\n-        if self.opts.auto_created:\n-            # We're checking the rights to an auto-created intermediate model,\n-            # which doesn't have its own individual permissions. The user needs\n-            # to have the view permission for the related model in order to\n-            # be able to do anything with the intermediate model.\n-            return self.has_view_permission(request, obj)\n-        return super().has_delete_permission(request, obj)\n \n     def has_view_permission(self, request, obj=None):\n         if self.opts.auto_created:\n@@ -2159,4 +2134,4 @@ class StackedInline(InlineModelAdmin):\n \n \n class TabularInline(InlineModelAdmin):\n-    template = 'admin/edit_inline/tabular.html'\n+    template = 'admin/edit_inline/tabular.html'\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex b043b1a..1e2f82d 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -1040,18 +1040,6 @@ class InlineModelAdmin(BaseModelAdmin):\n         if not self.has_view_or_change_permission(request):\n             queryset = queryset.none()\n         return queryset\n-    def has_add_permission(self, request, obj):\n-        if self.opts.auto_created:\n-            return self.has_view_permission(request, obj)\n-        return super().has_add_permission(request)\n-    def has_change_permission(self, request, obj=None):\n-        if self.opts.auto_created:\n-            return self.has_view_permission(request, obj)\n-        return super().has_change_permission(request)\n-    def has_delete_permission(self, request, obj=None):\n-        if self.opts.auto_created:\n-            return self.has_view_permission(request, obj)\n-        return super().has_delete_permission(request, obj)\n     def has_view_permission(self, request, obj=None):\n         if self.opts.auto_created:\n             opts = self.opts\n", "normalized_occurrence": 1}
