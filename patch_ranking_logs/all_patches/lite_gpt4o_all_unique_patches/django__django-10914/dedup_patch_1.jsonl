{"model_name_or_path": "agentless", "instance_id": "django__django-10914", "model_patch": "diff --git a/django/core/files/storage.py b/django/core/files/storage.py\nindex 39f68c7..1fea2c9 100644\n--- a/django/core/files/storage.py\n+++ b/django/core/files/storage.py\n@@ -280,8 +280,10 @@ class FileSystemStorage(Storage):\n                 # OK, the file save worked. Break out of the loop.\n                 break\n \n-        if self.file_permissions_mode is not None:\n-            os.chmod(full_path, self.file_permissions_mode)\n+        file_permissions = self.file_permissions_mode\n+        if file_permissions is None:\n+            file_permissions = 0o644\n+        os.chmod(full_path, file_permissions)\n \n         # Store filenames with forward slashes, even on Windows.\n         return name.replace('\\\\', '/')\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/files/storage.py b/django/core/files/storage.py\nindex 7bef6a9..9b7f970 100644\n--- a/django/core/files/storage.py\n+++ b/django/core/files/storage.py\n@@ -141,8 +141,10 @@ class FileSystemStorage(Storage):\n                 full_path = self.path(name)\n             else:\n                 break\n-        if self.file_permissions_mode is not None:\n-            os.chmod(full_path, self.file_permissions_mode)\n+        file_permissions = self.file_permissions_mode\n+        if file_permissions is None:\n+            file_permissions = 420\n+        os.chmod(full_path, file_permissions)\n         return name.replace('\\\\', '/')\n     def delete(self, name):\n         assert name, 'The name argument is not allowed to be empty.'\n", "normalized_occurrence": 1}
