{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-14317", "model_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 408ff45..34b3ce1 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1854,11 +1854,25 @@ class LatexPrinter(Printer):\n \n     def _print_Poly(self, poly):\n         cls = poly.__class__.__name__\n-        expr = self._print(poly.as_expr())\n-        gens = list(map(self._print, poly.gens))\n-        domain = \"domain=%s\" % self._print(poly.get_domain())\n+        terms, gens = [], [self._print(s) for s in poly.gens]\n+        for monom, coeff in poly.terms():\n+            s_monom = []\n+            for i, exp in enumerate(monom):\n+                if exp > 0:\n+                    if exp == 1:\n+                        s_monom.append(gens[i])\n+                    else:\n+                        s_monom.append(\"%s^{%d}\" % (gens[i], exp))\n+            s_monom = \" \".join(s_monom)\n+            s_coeff = self._print(coeff)\n+            if s_monom:\n+                terms.append(s_coeff + \" \" + s_monom)\n+            else:\n+                terms.append(s_coeff)\n \n-        args = \", \".join([expr] + gens + [domain])\n+        expr = \" + \".join(terms)\n+        domain = r\"\\mathbb{%s}\\left[%s\\right]\" % (poly.get_domain().__class__.__name__, \", \".join(gens))\n+        args = \"%s, %s\" % (expr, domain)\n         if cls in accepted_latex_functions:\n             tex = r\"\\%s {\\left (%s \\right )}\" % (cls, args)\n         else:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 5a18831..b46b8a8 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1241,10 +1241,24 @@ class LatexPrinter(Printer):\n         return '%s%s\\\\left[%s\\\\right]' % (inv, domain, symbols)\n     def _print_Poly(self, poly):\n         cls = poly.__class__.__name__\n-        expr = self._print(poly.as_expr())\n-        gens = list(map(self._print, poly.gens))\n-        domain = 'domain=%s' % self._print(poly.get_domain())\n-        args = ', '.join([expr] + gens + [domain])\n+        terms, gens = ([], [self._print(s) for s in poly.gens])\n+        for monom, coeff in poly.terms():\n+            s_monom = []\n+            for i, exp in enumerate(monom):\n+                if exp > 0:\n+                    if exp == 1:\n+                        s_monom.append(gens[i])\n+                    else:\n+                        s_monom.append('%s^{%d}' % (gens[i], exp))\n+            s_monom = ' '.join(s_monom)\n+            s_coeff = self._print(coeff)\n+            if s_monom:\n+                terms.append(s_coeff + ' ' + s_monom)\n+            else:\n+                terms.append(s_coeff)\n+        expr = ' + '.join(terms)\n+        domain = '\\\\mathbb{%s}\\\\left[%s\\\\right]' % (poly.get_domain().__class__.__name__, ', '.join(gens))\n+        args = '%s, %s' % (expr, domain)\n         if cls in accepted_latex_functions:\n             tex = '\\\\%s {\\\\left (%s \\\\right )}' % (cls, args)\n         else:\n", "normalized_occurrence": 1}
