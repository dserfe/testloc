{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12908", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex a26bee7..af1cc74 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -475,7 +475,11 @@ class SQLCompiler:\n             combinator_sql += ' ALL'\n         braces = '({})' if features.supports_slicing_ordering_in_compound else '{}'\n         sql_parts, args_parts = zip(*((braces.format(sql), args) for sql, args in parts))\n-        result = [' {} '.format(combinator_sql).join(sql_parts)]\n+        combined_sql = ' {} '.format(combinator_sql).join(sql_parts)\n+        # Wrap the entire combined query if using DISTINCT ON\n+        if getattr(self.query, 'distinct_fields', None):\n+            combined_sql = '({})'.format(combined_sql)\n+        result = [combined_sql]\n         params = []\n         for part in args_parts:\n             params.extend(part)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex e6a07a3..4dd1cb0 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -267,7 +267,10 @@ class SQLCompiler:\n             combinator_sql += ' ALL'\n         braces = '({})' if features.supports_slicing_ordering_in_compound else '{}'\n         sql_parts, args_parts = zip(*((braces.format(sql), args) for sql, args in parts))\n-        result = [' {} '.format(combinator_sql).join(sql_parts)]\n+        combined_sql = ' {} '.format(combinator_sql).join(sql_parts)\n+        if getattr(self.query, 'distinct_fields', None):\n+            combined_sql = '({})'.format(combined_sql)\n+        result = [combined_sql]\n         params = []\n         for part in args_parts:\n             params.extend(part)\n", "normalized_occurrence": 1}
