{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-19346", "model_patch": "diff --git a/sympy/printing/repr.py b/sympy/printing/repr.py\nindex b3c364b..35d4ef5 100644\n--- a/sympy/printing/repr.py\n+++ b/sympy/printing/repr.py\n@@ -340,6 +340,17 @@ class ReprPrinter(Printer):\n         idx = self._print(bsf._index)\n         return \"%s(%s, %s)\" % (class_name, coords, idx)\n \n+class ReprPrinter():\n+    ...\n+    \n+    def _print_Dict(self, expr):\n+        items = ', '.join(f'{self._print(k)}: {self._print(v)}' for k, v in expr.items())\n+        return f'Dict({{{items}}})'\n+\n+    def _print_Set(self, expr):\n+        items = ', '.join(self._print(item) for item in expr)\n+        return f'Set({{{items}}})'\n+\n def srepr(expr, **settings):\n     \"\"\"return expr in repr form\"\"\"\n-    return ReprPrinter(settings).doprint(expr)\n+    return ReprPrinter(settings).doprint(expr)\n", "occurrence": 1, "normalized_patch": "--- a/sympy/printing/repr.py\n+++ b/sympy/printing/repr.py\n+class ReprPrinter:\n+    ...\n+    def _print_Dict(self, expr):\n+        items = ', '.join((f'{self._print(k)}: {self._print(v)}' for k, v in expr.items()))\n+        return f'Dict({{{items}}})'\n+    def _print_Set(self, expr):\n+        items = ', '.join((self._print(item) for item in expr))\n+        return f'Set({{{items}}})'", "normalized_occurrence": 1}
