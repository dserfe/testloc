{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-14317", "model_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 408ff45..0f9fabf 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1854,7 +1854,31 @@ class LatexPrinter(Printer):\n \n     def _print_Poly(self, poly):\n         cls = poly.__class__.__name__\n-        expr = self._print(poly.as_expr())\n+        ATOM_PREC = PRECEDENCE[\"Atom\"] - 1\n+        terms = []\n+        for monom, coeff in poly.terms():\n+            s_monom = []\n+\n+            for i, exp in enumerate(monom):\n+                if exp > 0:\n+                    if exp == 1:\n+                        s_monom.append(poly.gens[i])\n+                    else:\n+                        s_monom.append(poly.gens[i] + \"**%d\" % exp)\n+\n+            s_monom = \"*\".join(s_monom)\n+            if s_monom:\n+                if coeff.is_Add:\n+                    s_coeff = self._print(coeff)\n+                    s_term = f\"({s_coeff})*{s_monom}\"\n+                else:\n+                    s_coeff = self._print(coeff)\n+                    s_term = f\"{s_coeff}*{s_monom}\"\n+            else:\n+                s_term = self._print(coeff)\n+            terms.append(s_term)\n+\n+        expr = \" + \".join(terms)\n         gens = list(map(self._print, poly.gens))\n         domain = \"domain=%s\" % self._print(poly.get_domain())\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 5a18831..1bf4f80 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1241,7 +1241,28 @@ class LatexPrinter(Printer):\n         return '%s%s\\\\left[%s\\\\right]' % (inv, domain, symbols)\n     def _print_Poly(self, poly):\n         cls = poly.__class__.__name__\n-        expr = self._print(poly.as_expr())\n+        ATOM_PREC = PRECEDENCE['Atom'] - 1\n+        terms = []\n+        for monom, coeff in poly.terms():\n+            s_monom = []\n+            for i, exp in enumerate(monom):\n+                if exp > 0:\n+                    if exp == 1:\n+                        s_monom.append(poly.gens[i])\n+                    else:\n+                        s_monom.append(poly.gens[i] + '**%d' % exp)\n+            s_monom = '*'.join(s_monom)\n+            if s_monom:\n+                if coeff.is_Add:\n+                    s_coeff = self._print(coeff)\n+                    s_term = f'({s_coeff})*{s_monom}'\n+                else:\n+                    s_coeff = self._print(coeff)\n+                    s_term = f'{s_coeff}*{s_monom}'\n+            else:\n+                s_term = self._print(coeff)\n+            terms.append(s_term)\n+        expr = ' + '.join(terms)\n         gens = list(map(self._print, poly.gens))\n         domain = 'domain=%s' % self._print(poly.get_domain())\n         args = ', '.join([expr] + gens + [domain])\n", "normalized_occurrence": 1}
