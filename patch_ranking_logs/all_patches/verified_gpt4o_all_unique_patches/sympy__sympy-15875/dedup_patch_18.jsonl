{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-15875", "model_patch": "diff --git a/sympy/core/add.py b/sympy/core/add.py\nindex 1046af8..7bad562 100644\n--- a/sympy/core/add.py\n+++ b/sympy/core/add.py\n@@ -557,12 +557,9 @@ class Add(Expr, AssocOp):\n         if len(nz) == len(self.args):\n             return None\n         b = self.func(*nz)\n-        if b.is_zero:\n-            if not im_or_z and not im:\n-                return True\n-            if im and not im_or_z:\n-                return False\n-        if b.is_zero is False:\n+        if b.is_zero and not im_or_z:\n+            return True\n+        if b.is_zero is False or (b.is_zero and im and not im_or_z):\n             return False\n \n     def _eval_is_odd(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/add.py b/sympy/core/add.py\nindex 63cb816..9b17bee 100644\n--- a/sympy/core/add.py\n+++ b/sympy/core/add.py\n@@ -311,12 +311,9 @@ class Add(Expr, AssocOp):\n         if len(nz) == len(self.args):\n             return None\n         b = self.func(*nz)\n-        if b.is_zero:\n-            if not im_or_z and (not im):\n-                return True\n-            if im and (not im_or_z):\n-                return False\n-        if b.is_zero is False:\n+        if b.is_zero and (not im_or_z):\n+            return True\n+        if b.is_zero is False or (b.is_zero and im and (not im_or_z)):\n             return False\n     def _eval_is_odd(self):\n         l = [f for f in self.args if not f.is_even is True]\n", "normalized_occurrence": 1}
