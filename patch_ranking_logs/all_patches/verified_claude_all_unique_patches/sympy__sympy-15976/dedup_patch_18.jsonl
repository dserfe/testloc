{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-15976", "model_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 85af872..95a9ef8 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -772,7 +772,13 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n             else:\n                 return s\n \n-        name, supers, subs = split_super_sub(sym.name)\n+        # Don't split symbol names that end with numbers\n+        if sym.name[-1].isdigit():\n+            name = sym.name\n+            supers = []\n+            subs = []\n+        else:\n+            name, supers, subs = split_super_sub(sym.name)\n         name = translate(name)\n         supers = [translate(sup) for sup in supers]\n         subs = [translate(sub) for sub in subs]\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 28d3e1a..1c3d275 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -540,7 +540,12 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n                 return greek_unicode.get(s)\n             else:\n                 return s\n-        name, supers, subs = split_super_sub(sym.name)\n+        if sym.name[-1].isdigit():\n+            name = sym.name\n+            supers = []\n+            subs = []\n+        else:\n+            name, supers, subs = split_super_sub(sym.name)\n         name = translate(name)\n         supers = [translate(sup) for sup in supers]\n         subs = [translate(sub) for sub in subs]\n", "normalized_occurrence": 1}
