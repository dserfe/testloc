{"model_name_or_path": "agentless_claude", "instance_id": "pydata__xarray-4493", "model_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex 8003c0d..1dd2b52 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -1046,7 +1046,11 @@ class Dataset(Mapping, ImplementsDatasetReduce, DataWithCoords):\n         \"\"\"\n         if inplace:\n             if variables is not None:\n-                self._variables = variables\n+                # Ensure we don't trigger computation of dask arrays\n+                self._variables = {\n+                    k: v.copy(deep=False) if hasattr(v, 'copy') else v\n+                    for k, v in variables.items()\n+                }\n             if coord_names is not None:\n                 self._coord_names = coord_names\n             if dims is not None:\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex 5bd37a8..61bc75a 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -435,7 +435,7 @@ class Dataset(Mapping, ImplementsDatasetReduce, DataWithCoords):\n     def _replace(self, variables: Dict[Hashable, Variable]=None, coord_names: Set[Hashable]=None, dims: Dict[Any, int]=None, attrs: Union[Dict[Hashable, Any], None, Default]=_default, indexes: Union[Dict[Any, pd.Index], None, Default]=_default, encoding: Union[dict, None, Default]=_default, inplace: bool=False) -> 'Dataset':\n         if inplace:\n             if variables is not None:\n-                self._variables = variables\n+                self._variables = {k: v.copy(deep=False) if hasattr(v, 'copy') else v for k, v in variables.items()}\n             if coord_names is not None:\n                 self._coord_names = coord_names\n             if dims is not None:\n", "normalized_occurrence": 1}
