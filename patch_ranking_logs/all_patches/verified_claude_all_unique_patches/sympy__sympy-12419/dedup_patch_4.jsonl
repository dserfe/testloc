{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-12419", "model_patch": "diff --git a/sympy/matrices/expressions/matexpr.py b/sympy/matrices/expressions/matexpr.py\nindex 8f30d0d..20da813 100644\n--- a/sympy/matrices/expressions/matexpr.py\n+++ b/sympy/matrices/expressions/matexpr.py\n@@ -484,6 +484,17 @@ class Identity(MatrixExpr):\n     def _eval_determinant(self):\n         return S.One\n \n+    def _eval_sum(self):\n+        from sympy import Sum\n+        i, j = self.free_symbols\n+        if len(self.free_symbols) == 2:  # summing over both i and j\n+            return self.rows  # total sum is n (number of 1s on diagonal)\n+        elif len(self.free_symbols) == 1:  # summing over one index\n+            if i in self.free_symbols:  # sum over rows\n+                return 1\n+            else:  # sum over columns\n+                return 1\n+\n \n class ZeroMatrix(MatrixExpr):\n     \"\"\"The Matrix Zero 0 - additive identity\n", "occurrence": 1, "normalized_patch": "--- a/sympy/matrices/expressions/matexpr.py\n+++ b/sympy/matrices/expressions/matexpr.py\n+    def _eval_sum(self):\n+        from sympy import Sum\n+        i, j = self.free_symbols\n+        if len(self.free_symbols) == 2:\n+            return self.rows\n+        elif len(self.free_symbols) == 1:\n+            if i in self.free_symbols:\n+                return 1\n+            else:\n+                return 1", "normalized_occurrence": 1}
