{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-25775", "model_patch": "diff --git a/lib/matplotlib/text.py b/lib/matplotlib/text.py\nindex c2b18d4..10c3e15 100644\n--- a/lib/matplotlib/text.py\n+++ b/lib/matplotlib/text.py\n@@ -567,6 +567,27 @@ class Text(Artist):\n         super().set_clip_on(b)\n         self._update_clip_properties()\n \n+    def get_antialiased(self):\n+        \"\"\"\n+        Return whether the text should be drawn with antialiased rendering.\n+\n+        Returns None if the default rcParams['text.antialiased'] should be used.\n+        \"\"\"\n+        return self._antialiased\n+\n+    def set_antialiased(self, b):\n+        \"\"\"\n+        Set whether to use antialiased rendering.\n+\n+        Parameters\n+        ----------\n+        b : bool or None\n+            If None, use rcParams['text.antialiased'].\n+            If bool, override the rcParams setting for this Text instance.\n+        \"\"\"\n+        self._antialiased = b if b is None else bool(b)\n+        self.stale = True\n+\n     def get_wrap(self):\n         \"\"\"Return whether the text can be wrapped.\"\"\"\n         return self._wrap\n@@ -737,6 +758,10 @@ class Text(Artist):\n             gc.set_foreground(self.get_color())\n             gc.set_alpha(self.get_alpha())\n             gc.set_url(self._url)\n+            if self._antialiased is not None:\n+                gc.set_antialiased(self._antialiased)\n+            else:\n+                gc.set_antialiased(mpl.rcParams['text.antialiased'])\n             self._set_gc_clip(gc)\n \n             angle = self.get_rotation()\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/text.py b/lib/matplotlib/text.py\nindex 5c973cb..d9008ef 100644\n--- a/lib/matplotlib/text.py\n+++ b/lib/matplotlib/text.py\n@@ -279,6 +279,11 @@ class Text(Artist):\n     def set_clip_on(self, b):\n         super().set_clip_on(b)\n         self._update_clip_properties()\n+    def get_antialiased(self):\n+        return self._antialiased\n+    def set_antialiased(self, b):\n+        self._antialiased = b if b is None else bool(b)\n+        self.stale = True\n     def get_wrap(self):\n         return self._wrap\n     def set_wrap(self, wrap):\n@@ -370,6 +375,10 @@ class Text(Artist):\n             gc.set_foreground(self.get_color())\n             gc.set_alpha(self.get_alpha())\n             gc.set_url(self._url)\n+            if self._antialiased is not None:\n+                gc.set_antialiased(self._antialiased)\n+            else:\n+                gc.set_antialiased(mpl.rcParams['text.antialiased'])\n             self._set_gc_clip(gc)\n             angle = self.get_rotation()\n             for line, wh, x, y in info:\n", "normalized_occurrence": 1}
