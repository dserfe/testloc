{"model_name_or_path": "agentless", "instance_id": "django__django-12325", "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 77c04dd..a025c9b 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -206,6 +206,18 @@ class ModelBase(type):\n                     related = resolve_relation(new_class, field.remote_field.model)\n                     parent_links[make_model_tuple(related)] = field\n \n+        # Collect fields to handle parent links first.\n+        parent_links_first = []\n+        other_fields = []\n+\n+        for field in new_class._meta.local_fields:\n+            if isinstance(field, OneToOneField) and field.remote_field.parent_link:\n+                parent_links_first.append(field)\n+            else:\n+                other_fields.append(field)\n+\n+        new_class._meta.local_fields = parent_links_first + other_fields\n+\n         # Track fields inherited from base models.\n         inherited_attributes = set()\n         # Do the appropriate setup for any model parents.\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 0ae5317..f1eb2a4 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -108,6 +108,14 @@ class ModelBase(type):\n                 if isinstance(field, OneToOneField):\n                     related = resolve_relation(new_class, field.remote_field.model)\n                     parent_links[make_model_tuple(related)] = field\n+        parent_links_first = []\n+        other_fields = []\n+        for field in new_class._meta.local_fields:\n+            if isinstance(field, OneToOneField) and field.remote_field.parent_link:\n+                parent_links_first.append(field)\n+            else:\n+                other_fields.append(field)\n+        new_class._meta.local_fields = parent_links_first + other_fields\n         inherited_attributes = set()\n         for base in new_class.mro():\n             if base not in parents or not hasattr(base, '_meta'):\n", "normalized_occurrence": 1}
