{"model_name_or_path": "agentless", "instance_id": "django__django-11179", "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 92b9b8f..6994997 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -916,7 +916,9 @@ class Model(metaclass=ModelBase):\n \n         collector = Collector(using=using)\n         collector.collect([self], keep_parents=keep_parents)\n-        return collector.delete()\n+        deleted_count = collector.delete()\n+        self.pk = None\n+        return deleted_count\n \n     delete.alters_data = True\n \n", "occurrence": 5, "normalized_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 05233d1..a9e4cfb 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -490,7 +490,9 @@ class Model(metaclass=ModelBase):\n         assert self.pk is not None, \"%s object can't be deleted because its %s attribute is set to None.\" % (self._meta.object_name, self._meta.pk.attname)\n         collector = Collector(using=using)\n         collector.collect([self], keep_parents=keep_parents)\n-        return collector.delete()\n+        deleted_count = collector.delete()\n+        self.pk = None\n+        return deleted_count\n     delete.alters_data = True\n     def _get_FIELD_display(self, field):\n         value = getattr(self, field.attname)\n", "normalized_occurrence": 6}
