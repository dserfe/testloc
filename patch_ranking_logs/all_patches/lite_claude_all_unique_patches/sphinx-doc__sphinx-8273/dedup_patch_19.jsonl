{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-8273", "model_patch": "diff --git a/sphinx/builders/manpage.py b/sphinx/builders/manpage.py\nindex cf59c0a..b2a27b7 100644\n--- a/sphinx/builders/manpage.py\n+++ b/sphinx/builders/manpage.py\n@@ -21,6 +21,7 @@ from sphinx.config import Config\n from sphinx.errors import NoUri\n from sphinx.locale import __\n from sphinx.util import logging\n+import os\n from sphinx.util import progress_message\n from sphinx.util.console import darkgreen  # type: ignore\n from sphinx.util.nodes import inline_all_toctrees\n@@ -80,10 +81,15 @@ class ManualPageBuilder(Builder):\n             docsettings.authors = authors\n             docsettings.section = section\n \n+            # Create section directory if it doesn't exist\n+            section_dir = path.join(self.outdir, 'man%d' % section)\n+            if not path.exists(section_dir):\n+                os.makedirs(section_dir)\n+\n             targetname = '%s.%s' % (name, section)\n             logger.info(darkgreen(targetname) + ' { ', nonl=True)\n             destination = FileOutput(\n-                destination_path=path.join(self.outdir, targetname),\n+                destination_path=path.join(section_dir, targetname),\n                 encoding='utf-8')\n \n             tree = self.env.get_doctree(docname)\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/builders/manpage.py b/sphinx/builders/manpage.py\nindex c2eb81a..b11816f 100644\n--- a/sphinx/builders/manpage.py\n+++ b/sphinx/builders/manpage.py\n@@ -9,6 +9,7 @@ from sphinx.config import Config\n from sphinx.errors import NoUri\n from sphinx.locale import __\n from sphinx.util import logging\n+import os\n from sphinx.util import progress_message\n from sphinx.util.console import darkgreen\n from sphinx.util.nodes import inline_all_toctrees\n@@ -48,9 +49,12 @@ class ManualPageBuilder(Builder):\n             docsettings.subtitle = description\n             docsettings.authors = authors\n             docsettings.section = section\n+            section_dir = path.join(self.outdir, 'man%d' % section)\n+            if not path.exists(section_dir):\n+                os.makedirs(section_dir)\n             targetname = '%s.%s' % (name, section)\n             logger.info(darkgreen(targetname) + ' { ', nonl=True)\n-            destination = FileOutput(destination_path=path.join(self.outdir, targetname), encoding='utf-8')\n+            destination = FileOutput(destination_path=path.join(section_dir, targetname), encoding='utf-8')\n             tree = self.env.get_doctree(docname)\n             docnames = set()\n             largetree = inline_all_toctrees(self, docnames, docname, tree, darkgreen, [docname])\n", "normalized_occurrence": 1}
