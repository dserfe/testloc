{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16408", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 83f3a12..f0327e3 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1815,6 +1815,8 @@ class Query(BaseExpression):\n             if join.filtered_relation:\n                 filtered_relation = join.filtered_relation.clone()\n                 table_alias = filtered_relation.alias\n+                # Store the original alias before creating the join\n+                original_alias = alias\n             else:\n                 filtered_relation = None\n                 table_alias = None\n@@ -1840,7 +1842,8 @@ class Query(BaseExpression):\n             )\n             joins.append(alias)\n             if filtered_relation:\n-                filtered_relation.path = joins[:]\n+                # Use the original path up to this point plus the new alias\n+                filtered_relation.path = joins[:joins.index(original_alias)] + [alias]\n         return JoinInfo(final_field, targets, opts, joins, path, final_transformer)\n \n     def trim_joins(self, targets, joins, path):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 0b42199..528b515 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -896,6 +896,7 @@ class Query(BaseExpression):\n             if join.filtered_relation:\n                 filtered_relation = join.filtered_relation.clone()\n                 table_alias = filtered_relation.alias\n+                original_alias = alias\n             else:\n                 filtered_relation = None\n                 table_alias = None\n@@ -909,7 +910,7 @@ class Query(BaseExpression):\n             alias = self.join(connection, reuse=reuse, reuse_with_filtered_relation=reuse_with_filtered_relation)\n             joins.append(alias)\n             if filtered_relation:\n-                filtered_relation.path = joins[:]\n+                filtered_relation.path = joins[:joins.index(original_alias)] + [alias]\n         return JoinInfo(final_field, targets, opts, joins, path, final_transformer)\n     def trim_joins(self, targets, joins, path):\n         joins = joins[:]\n", "normalized_occurrence": 1}
