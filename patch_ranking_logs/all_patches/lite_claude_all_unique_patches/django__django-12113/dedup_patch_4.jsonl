{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12113", "model_patch": "diff --git a/django/db/backends/sqlite3/base.py b/django/db/backends/sqlite3/base.py\nindex 730e4b7..133cece 100644\n--- a/django/db/backends/sqlite3/base.py\n+++ b/django/db/backends/sqlite3/base.py\n@@ -252,7 +252,10 @@ class DatabaseWrapper(BaseDatabaseWrapper):\n         return conn\n \n     def init_connection_state(self):\n-        pass\n+        with self.wrap_database_errors:\n+            self.connection.execute('PRAGMA busy_timeout = 30000')  # 30 seconds\n+            # Enable WAL mode to allow concurrent access\n+            self.connection.execute('PRAGMA journal_mode=WAL')\n \n     def create_cursor(self, name=None):\n         return self.connection.cursor(factory=SQLiteCursorWrapper)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/sqlite3/base.py b/django/db/backends/sqlite3/base.py\nindex f4e71e4..f8f2d5f 100644\n--- a/django/db/backends/sqlite3/base.py\n+++ b/django/db/backends/sqlite3/base.py\n@@ -121,7 +121,9 @@ class DatabaseWrapper(BaseDatabaseWrapper):\n         conn.execute('PRAGMA foreign_keys = ON')\n         return conn\n     def init_connection_state(self):\n-        pass\n+        with self.wrap_database_errors:\n+            self.connection.execute('PRAGMA busy_timeout = 30000')\n+            self.connection.execute('PRAGMA journal_mode=WAL')\n     def create_cursor(self, name=None):\n         return self.connection.cursor(factory=SQLiteCursorWrapper)\n     @async_unsafe\n", "normalized_occurrence": 1}
