{"model_name_or_path": "agentless", "instance_id": "django__django-11149", "model_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex acc7653..c972d1b 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -2095,7 +2095,12 @@ class InlineModelAdmin(BaseModelAdmin):\n                     return False\n                 return super().has_changed()\n \n-        defaults['form'] = DeleteProtectedModelForm\n+        if not can_change or not can_add:\n+            for form in inlineformset_factory(self.parent_model, self.model, **defaults).forms:\n+                for field in form.fields.values():\n+                    field.disabled = True\n+        else:\n+            defaults['form'] = DeleteProtectedModelForm\n \n         if defaults['fields'] is None and not modelform_defines_fields(defaults['form']):\n             defaults['fields'] = forms.ALL_FIELDS\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex b043b1a..354cb15 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -1029,7 +1029,12 @@ class InlineModelAdmin(BaseModelAdmin):\n                 if not can_add and self.instance._state.adding:\n                     return False\n                 return super().has_changed()\n-        defaults['form'] = DeleteProtectedModelForm\n+        if not can_change or not can_add:\n+            for form in inlineformset_factory(self.parent_model, self.model, **defaults).forms:\n+                for field in form.fields.values():\n+                    field.disabled = True\n+        else:\n+            defaults['form'] = DeleteProtectedModelForm\n         if defaults['fields'] is None and (not modelform_defines_fields(defaults['form'])):\n             defaults['fields'] = forms.ALL_FIELDS\n         return inlineformset_factory(self.parent_model, self.model, **defaults)\n", "normalized_occurrence": 1}
