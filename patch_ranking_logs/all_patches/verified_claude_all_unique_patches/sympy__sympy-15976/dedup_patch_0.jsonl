{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-15976", "model_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 85af872..048af44 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -757,12 +757,12 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n                         mo.appendChild(self.dom.createTextNode(\" \"))\n                         mrow.appendChild(mo)\n                     mi = self.dom.createElement('mi')\n-                    mi.appendChild(self.dom.createTextNode(item))\n+                    mi.appendChild(self.dom.createTextNode(str(item)))\n                     mrow.appendChild(mi)\n                 return mrow\n             else:\n                 mi = self.dom.createElement('mi')\n-                mi.appendChild(self.dom.createTextNode(items[0]))\n+                mi.appendChild(self.dom.createTextNode(str(items[0])))\n                 return mi\n \n         # translate name, supers and subs to unicode characters\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 28d3e1a..d08a54d 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -528,12 +528,12 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n                         mo.appendChild(self.dom.createTextNode(' '))\n                         mrow.appendChild(mo)\n                     mi = self.dom.createElement('mi')\n-                    mi.appendChild(self.dom.createTextNode(item))\n+                    mi.appendChild(self.dom.createTextNode(str(item)))\n                     mrow.appendChild(mi)\n                 return mrow\n             else:\n                 mi = self.dom.createElement('mi')\n-                mi.appendChild(self.dom.createTextNode(items[0]))\n+                mi.appendChild(self.dom.createTextNode(str(items[0])))\n                 return mi\n         def translate(s):\n             if s in greek_unicode:\n", "normalized_occurrence": 1}
