{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11292", "model_patch": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex c0cee4d..69f1d69 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -95,7 +95,7 @@ class DjangoHelpFormatter(HelpFormatter):\n     \"\"\"\n     show_last = {\n         '--version', '--verbosity', '--traceback', '--settings', '--pythonpath',\n-        '--no-color', '--force-color',\n+        '--no-color', '--force-color', '--skip-checks',\n     }\n \n     def _reordered_actions(self, actions):\n@@ -286,6 +286,10 @@ class BaseCommand:\n             '--force-color', action='store_true',\n             help='Force colorization of the command output.',\n         )\n+        parser.add_argument(\n+            '--skip-checks', action='store_true',\n+            help='Skip system checks.',\n+        )\n         self.add_arguments(parser)\n         return parser\n \n", "occurrence": 3, "normalized_patch": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex 29eeeba..951afd7 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -43,7 +43,7 @@ def no_translations(handle_func):\n         return res\n     return wrapped\n class DjangoHelpFormatter(HelpFormatter):\n-    show_last = {'--version', '--verbosity', '--traceback', '--settings', '--pythonpath', '--no-color', '--force-color'}\n+    show_last = {'--version', '--verbosity', '--traceback', '--settings', '--pythonpath', '--no-color', '--force-color', '--skip-checks'}\n     def _reordered_actions(self, actions):\n         return sorted(actions, key=lambda a: set(a.option_strings) & self.show_last != set())\n     def add_usage(self, usage, actions, *args, **kwargs):\n@@ -103,6 +103,7 @@ class BaseCommand:\n         parser.add_argument('--traceback', action='store_true', help='Raise on CommandError exceptions')\n         parser.add_argument('--no-color', action='store_true', help=\"Don't colorize the command output.\")\n         parser.add_argument('--force-color', action='store_true', help='Force colorization of the command output.')\n+        parser.add_argument('--skip-checks', action='store_true', help='Skip system checks.')\n         self.add_arguments(parser)\n         return parser\n     def add_arguments(self, parser):\n", "normalized_occurrence": 3}
