{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15738", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 42e02c2..d42f6e4 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -578,10 +578,15 @@ class AlterTogetherOptionOperation(ModelOptionOperation):\n         )\n \n     def describe(self):\n+        if self.option_value is None:\n+            return \"Remove all %s constraints from %s\" % (\n+                self.option_name,\n+                self.name,\n+            )\n         return \"Alter %s for %s (%s constraint(s))\" % (\n             self.option_name,\n             self.name,\n-            len(self.option_value or \"\"),\n+            len(self.option_value),\n         )\n \n     @property\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex b786bec..0eeb838 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -250,7 +250,9 @@ class AlterTogetherOptionOperation(ModelOptionOperation):\n     def references_field(self, model_name, name, app_label):\n         return self.references_model(model_name, app_label) and (not self.option_value or any((name in fields for fields in self.option_value)))\n     def describe(self):\n-        return 'Alter %s for %s (%s constraint(s))' % (self.option_name, self.name, len(self.option_value or ''))\n+        if self.option_value is None:\n+            return 'Remove all %s constraints from %s' % (self.option_name, self.name)\n+        return 'Alter %s for %s (%s constraint(s))' % (self.option_name, self.name, len(self.option_value))\n     @property\n     def migration_name_fragment(self):\n         return 'alter_%s_%s' % (self.name_lower, self.option_name)\n", "normalized_occurrence": 1}
