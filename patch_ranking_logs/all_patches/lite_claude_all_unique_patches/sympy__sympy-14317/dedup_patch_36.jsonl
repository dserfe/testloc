{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-14317", "model_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 408ff45..f535f30 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1854,7 +1854,18 @@ class LatexPrinter(Printer):\n \n     def _print_Poly(self, poly):\n         cls = poly.__class__.__name__\n-        expr = self._print(poly.as_expr())\n+        terms = []\n+        \n+        # Process terms in order from highest to lowest degree\n+        for monom, coeff in sorted(poly.terms(), reverse=True):\n+            if coeff == 0:\n+                continue\n+            \n+            # Convert the term to expression and print it\n+            term = self._print(poly._from_dict({monom: coeff}).as_expr())\n+            terms.append(term)\n+            \n+        expr = \" + \".join(terms) if terms else \"0\"\n         gens = list(map(self._print, poly.gens))\n         domain = \"domain=%s\" % self._print(poly.get_domain())\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 5a18831..3920142 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1241,7 +1241,13 @@ class LatexPrinter(Printer):\n         return '%s%s\\\\left[%s\\\\right]' % (inv, domain, symbols)\n     def _print_Poly(self, poly):\n         cls = poly.__class__.__name__\n-        expr = self._print(poly.as_expr())\n+        terms = []\n+        for monom, coeff in sorted(poly.terms(), reverse=True):\n+            if coeff == 0:\n+                continue\n+            term = self._print(poly._from_dict({monom: coeff}).as_expr())\n+            terms.append(term)\n+        expr = ' + '.join(terms) if terms else '0'\n         gens = list(map(self._print, poly.gens))\n         domain = 'domain=%s' % self._print(poly.get_domain())\n         args = ', '.join([expr] + gens + [domain])\n", "normalized_occurrence": 1}
