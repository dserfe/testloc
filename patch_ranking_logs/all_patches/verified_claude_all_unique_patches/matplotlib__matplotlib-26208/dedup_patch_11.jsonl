{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-26208", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex f9613d3..811efdb 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -2994,7 +2994,19 @@ class _AxesBase(martist.Artist):\n             raise RuntimeError('No renderer defined')\n         if not self.get_visible():\n             return\n+        \n+        # Store original dataLim for twinned axes before unstaling viewLim\n+        twinned_lims = {}\n+        if self in self._twinned_axes:\n+            for ax in self._twinned_axes.get_siblings(self):\n+                twinned_lims[ax] = ax.dataLim.frozen()\n+        \n         self._unstale_viewLim()\n+        \n+        # Restore original dataLim for twinned axes\n+        if twinned_lims:\n+            for ax, lim in twinned_lims.items():\n+                ax.dataLim.set(lim)\n \n         renderer.open_group('axes', gid=self.get_gid())\n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex eb9da84..77c1368 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1240,7 +1240,14 @@ class _AxesBase(martist.Artist):\n             raise RuntimeError('No renderer defined')\n         if not self.get_visible():\n             return\n+        twinned_lims = {}\n+        if self in self._twinned_axes:\n+            for ax in self._twinned_axes.get_siblings(self):\n+                twinned_lims[ax] = ax.dataLim.frozen()\n         self._unstale_viewLim()\n+        if twinned_lims:\n+            for ax, lim in twinned_lims.items():\n+                ax.dataLim.set(lim)\n         renderer.open_group('axes', gid=self.get_gid())\n         self._stale = True\n         locator = self.get_axes_locator()\n", "normalized_occurrence": 1}
