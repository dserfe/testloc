{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-14024", "model_patch": "diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py\nindex a6ca9db..8d7600a 100644\n--- a/sympy/simplify/simplify.py\n+++ b/sympy/simplify/simplify.py\n@@ -553,7 +553,18 @@ def simplify(expr, ratio=1.7, measure=count_ops, rational=False):\n         floats = True\n         expr = nsimplify(expr, rational=True)\n \n+    def _simplify_power_base(expr):\n+        \"\"\"Helper function to simplify expressions of the form (-a)**x * a**(-x)\"\"\"\n+        if expr.is_Mul:\n+            base_powers = [arg.as_base_exp() for arg in expr.args if arg.is_Pow]\n+            if len(base_powers) == 2:\n+                (base1, exp1), (base2, exp2) = base_powers\n+                if base1 == -base2 and exp1 == -exp2:\n+                    return (-1)**exp1\n+        return expr\n+\n     expr = bottom_up(expr, lambda w: w.normal())\n+    expr = bottom_up(expr, _simplify_power_base)\n     expr = Mul(*powsimp(expr).as_content_primitive())\n     _e = cancel(expr)\n     expr1 = shorter(_e, _mexpand(_e).cancel())  # issue 6829\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py\nindex 52e38cb..aad37ea 100644\n--- a/sympy/simplify/simplify.py\n+++ b/sympy/simplify/simplify.py\n@@ -169,7 +169,16 @@ def simplify(expr, ratio=1.7, measure=count_ops, rational=False):\n     if rational is not False and expr.has(Float):\n         floats = True\n         expr = nsimplify(expr, rational=True)\n+    def _simplify_power_base(expr):\n+        if expr.is_Mul:\n+            base_powers = [arg.as_base_exp() for arg in expr.args if arg.is_Pow]\n+            if len(base_powers) == 2:\n+                (base1, exp1), (base2, exp2) = base_powers\n+                if base1 == -base2 and exp1 == -exp2:\n+                    return (-1) ** exp1\n+        return expr\n     expr = bottom_up(expr, lambda w: w.normal())\n+    expr = bottom_up(expr, _simplify_power_base)\n     expr = Mul(*powsimp(expr).as_content_primitive())\n     _e = cancel(expr)\n     expr1 = shorter(_e, _mexpand(_e).cancel())\n", "normalized_occurrence": 1}
