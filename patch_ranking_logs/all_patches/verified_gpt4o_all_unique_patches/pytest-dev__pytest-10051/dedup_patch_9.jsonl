{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-10051", "model_patch": "diff --git a/src/_pytest/logging.py b/src/_pytest/logging.py\nindex 9234395..c441dcc 100644\n--- a/src/_pytest/logging.py\n+++ b/src/_pytest/logging.py\n@@ -440,6 +440,7 @@ class LogCaptureFixture:\n \n     def clear(self) -> None:\n         \"\"\"Reset the list of log records and the captured log text.\"\"\"\n+        self._item.stash[caplog_records_key].clear()\n         self.handler.reset()\n \n     def set_level(self, level: Union[int, str], logger: Optional[str] = None) -> None:\n", "occurrence": 2, "normalized_patch": "diff --git a/src/_pytest/logging.py b/src/_pytest/logging.py\nindex d320659..26e393d 100644\n--- a/src/_pytest/logging.py\n+++ b/src/_pytest/logging.py\n@@ -197,6 +197,7 @@ class LogCaptureFixture:\n     def messages(self) -> List[str]:\n         return [r.getMessage() for r in self.records]\n     def clear(self) -> None:\n+        self._item.stash[caplog_records_key].clear()\n         self.handler.reset()\n     def set_level(self, level: Union[int, str], logger: Optional[str]=None) -> None:\n         logger_obj = logging.getLogger(logger)\n", "normalized_occurrence": 2}
