{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-7454", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex cf5467b..323f05c 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -27,7 +27,7 @@ def record_typehints(app: Sphinx, objtype: str, name: str, obj: Any,\n     try:\n         if callable(obj):\n             annotations = app.env.temp_data.setdefault('annotations', {})\n-            annotation = annotations.setdefault(name, OrderedDict())\n+            annotation = annotations.setdefault(name, {})\n             sig = inspect.signature(obj)\n             for param in sig.parameters.values():\n                 if param.annotation is not param.empty:\n@@ -52,14 +52,14 @@ def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element\n     else:\n         fullname = signature['fullname']\n     annotations = app.env.temp_data.get('annotations', {})\n-    if annotations.get(fullname, {}):\n+    if fullname in annotations:\n         field_lists = [n for n in contentnode if isinstance(n, nodes.field_list)]\n         if field_lists == []:\n             field_list = insert_field_list(contentnode)\n             field_lists.append(field_list)\n \n         for field_list in field_lists:\n-            modify_field_list(field_list, annotations[fullname])\n+            modify_field_list(field_list, annotations.get(fullname, {}))\n \n \n def insert_field_list(node: Element) -> nodes.field_list:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex f356328..ee70c53 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -11,7 +11,7 @@ def record_typehints(app: Sphinx, objtype: str, name: str, obj: Any, options: Di\n     try:\n         if callable(obj):\n             annotations = app.env.temp_data.setdefault('annotations', {})\n-            annotation = annotations.setdefault(name, OrderedDict())\n+            annotation = annotations.setdefault(name, {})\n             sig = inspect.signature(obj)\n             for param in sig.parameters.values():\n                 if param.annotation is not param.empty:\n@@ -33,13 +33,13 @@ def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element\n     else:\n         fullname = signature['fullname']\n     annotations = app.env.temp_data.get('annotations', {})\n-    if annotations.get(fullname, {}):\n+    if fullname in annotations:\n         field_lists = [n for n in contentnode if isinstance(n, nodes.field_list)]\n         if field_lists == []:\n             field_list = insert_field_list(contentnode)\n             field_lists.append(field_list)\n         for field_list in field_lists:\n-            modify_field_list(field_list, annotations[fullname])\n+            modify_field_list(field_list, annotations.get(fullname, {}))\n def insert_field_list(node: Element) -> nodes.field_list:\n     field_list = nodes.field_list()\n     desc = [n for n in node if isinstance(n, addnodes.desc)]\n", "normalized_occurrence": 1}
