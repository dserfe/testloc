{"model_name_or_path": "agentless", "instance_id": "django__django-12113", "model_patch": "diff --git a/django/db/backends/sqlite3/base.py b/django/db/backends/sqlite3/base.py\nindex 730e4b7..92db09c 100644\n--- a/django/db/backends/sqlite3/base.py\n+++ b/django/db/backends/sqlite3/base.py\n@@ -255,11 +255,16 @@ class DatabaseWrapper(BaseDatabaseWrapper):\n         pass\n \n     def create_cursor(self, name=None):\n-        return self.connection.cursor(factory=SQLiteCursorWrapper)\n+        cursor = self.connection.cursor(factory=SQLiteCursorWrapper)\n+        self.connection.commit()  # Commit any pending transactions to avoid locks\n+        return cursor\n \n     @async_unsafe\n     def close(self):\n         self.validate_thread_sharing()\n+        if self.connection is not None:\n+            self.connection.close()  # Close the connection to avoid locks\n+            self.connection = None\n         # If database is in memory, closing the connection destroys the\n         # database. To prevent accidental data loss, ignore close requests on\n         # an in-memory db.\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/sqlite3/base.py b/django/db/backends/sqlite3/base.py\nindex f4e71e4..b964c7e 100644\n--- a/django/db/backends/sqlite3/base.py\n+++ b/django/db/backends/sqlite3/base.py\n@@ -123,10 +123,15 @@ class DatabaseWrapper(BaseDatabaseWrapper):\n     def init_connection_state(self):\n         pass\n     def create_cursor(self, name=None):\n-        return self.connection.cursor(factory=SQLiteCursorWrapper)\n+        cursor = self.connection.cursor(factory=SQLiteCursorWrapper)\n+        self.connection.commit()\n+        return cursor\n     @async_unsafe\n     def close(self):\n         self.validate_thread_sharing()\n+        if self.connection is not None:\n+            self.connection.close()\n+            self.connection = None\n         if not self.is_in_memory_db():\n             BaseDatabaseWrapper.close(self)\n     def _savepoint_allowed(self):\n", "normalized_occurrence": 1}
