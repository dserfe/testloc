{"model_name_or_path": "agentless", "instance_id": "django__django-11149", "model_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex acc7653..230dc9d 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -2117,7 +2117,8 @@ class InlineModelAdmin(BaseModelAdmin):\n             # which doesn't have its own individual permissions. The user needs\n             # to have the view permission for the related model in order to\n             # be able to do anything with the intermediate model.\n-            return self.has_view_permission(request, obj)\n+            # Users need the appropriate delete permission for the related model to delete an intermediate model.\n+            return self.has_delete_permission(request, obj)\n         return super().has_add_permission(request)\n \n     def has_change_permission(self, request, obj=None):\n@@ -2126,7 +2127,8 @@ class InlineModelAdmin(BaseModelAdmin):\n             # which doesn't have its own individual permissions. The user needs\n             # to have the view permission for the related model in order to\n             # be able to do anything with the intermediate model.\n-            return self.has_view_permission(request, obj)\n+            # Users need the appropriate delete permission for the related model to delete an intermediate model.\n+            return self.has_delete_permission(request, obj)\n         return super().has_change_permission(request)\n \n     def has_delete_permission(self, request, obj=None):\n@@ -2135,7 +2137,8 @@ class InlineModelAdmin(BaseModelAdmin):\n             # which doesn't have its own individual permissions. The user needs\n             # to have the view permission for the related model in order to\n             # be able to do anything with the intermediate model.\n-            return self.has_view_permission(request, obj)\n+            # Users need the appropriate delete permission for the related model to delete an intermediate model.\n+            return self.has_delete_permission(request, obj)\n         return super().has_delete_permission(request, obj)\n \n     def has_view_permission(self, request, obj=None):\n@@ -2159,4 +2162,4 @@ class StackedInline(InlineModelAdmin):\n \n \n class TabularInline(InlineModelAdmin):\n-    template = 'admin/edit_inline/tabular.html'\n+    template = 'admin/edit_inline/tabular.html'\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex b043b1a..89053b6 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -1042,15 +1042,15 @@ class InlineModelAdmin(BaseModelAdmin):\n         return queryset\n     def has_add_permission(self, request, obj):\n         if self.opts.auto_created:\n-            return self.has_view_permission(request, obj)\n+            return self.has_delete_permission(request, obj)\n         return super().has_add_permission(request)\n     def has_change_permission(self, request, obj=None):\n         if self.opts.auto_created:\n-            return self.has_view_permission(request, obj)\n+            return self.has_delete_permission(request, obj)\n         return super().has_change_permission(request)\n     def has_delete_permission(self, request, obj=None):\n         if self.opts.auto_created:\n-            return self.has_view_permission(request, obj)\n+            return self.has_delete_permission(request, obj)\n         return super().has_delete_permission(request, obj)\n     def has_view_permission(self, request, obj=None):\n         if self.opts.auto_created:\n", "normalized_occurrence": 2}
