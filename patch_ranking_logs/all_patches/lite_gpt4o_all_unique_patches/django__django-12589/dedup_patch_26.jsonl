{"model_name_or_path": "agentless", "instance_id": "django__django-12589", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 56581f2..9f997e8 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -127,7 +127,11 @@ class SQLCompiler:\n                 expressions.extend(expr.get_group_by_cols())\n         having_group_by = self.having.get_group_by_cols() if self.having else ()\n         for expr in having_group_by:\n-            expressions.append(expr)\n+            # Avoid adding ambiguous columns to GROUP BY\n+            if hasattr(expr, \"alias\"):\n+                expressions.append(expr.alias)\n+            else:\n+                expressions.append(expr)\n         result = []\n         seen = set()\n         expressions = self.collapse_group_by(expressions, having_group_by)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex aa7c887..b74e91a 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -59,7 +59,10 @@ class SQLCompiler:\n                 expressions.extend(expr.get_group_by_cols())\n         having_group_by = self.having.get_group_by_cols() if self.having else ()\n         for expr in having_group_by:\n-            expressions.append(expr)\n+            if hasattr(expr, 'alias'):\n+                expressions.append(expr.alias)\n+            else:\n+                expressions.append(expr)\n         result = []\n         seen = set()\n         expressions = self.collapse_group_by(expressions, having_group_by)\n", "normalized_occurrence": 1}
