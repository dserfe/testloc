{"model_name_or_path": "agentless", "instance_id": "django__django-12193", "model_patch": "diff --git a/django/forms/widgets.py b/django/forms/widgets.py\nindex dc396a1..4281e93 100644\n--- a/django/forms/widgets.py\n+++ b/django/forms/widgets.py\n@@ -521,9 +521,8 @@ class CheckboxInput(Input):\n         return str(value)\n \n     def get_context(self, name, value, attrs):\n+        attrs = attrs.copy() if attrs else {}\n         if self.check_test(value):\n-            if attrs is None:\n-                attrs = {}\n             attrs['checked'] = True\n         return super().get_context(name, value, attrs)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/widgets.py b/django/forms/widgets.py\nindex 1278f40..285bed3 100644\n--- a/django/forms/widgets.py\n+++ b/django/forms/widgets.py\n@@ -296,9 +296,8 @@ class CheckboxInput(Input):\n             return\n         return str(value)\n     def get_context(self, name, value, attrs):\n+        attrs = attrs.copy() if attrs else {}\n         if self.check_test(value):\n-            if attrs is None:\n-                attrs = {}\n             attrs['checked'] = True\n         return super().get_context(name, value, attrs)\n     def value_from_datadict(self, data, files, name):\n", "normalized_occurrence": 1}
