{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-19487", "model_patch": "diff --git a/sympy/core/function.py b/sympy/core/function.py\nindex 8682270..ee64b22 100644\n--- a/sympy/core/function.py\n+++ b/sympy/core/function.py\n@@ -463,6 +463,8 @@ class Function(Application, Expr):\n         evaluate = options.get('evaluate', global_parameters.evaluate)\n         result = super().__new__(cls, *args, **options)\n         if evaluate and isinstance(result, cls) and result.args:\n+            if isinstance(result, sign):\n+                return result.rewrite(Abs)\n             pr2 = min(cls._should_evalf(a) for a in result.args)\n             if pr2 > 0:\n                 pr = max(cls._should_evalf(a) for a in result.args)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/function.py b/sympy/core/function.py\nindex 36615b6..e5c5d4d 100644\n--- a/sympy/core/function.py\n+++ b/sympy/core/function.py\n@@ -136,6 +136,8 @@ class Function(Application, Expr):\n         evaluate = options.get('evaluate', global_parameters.evaluate)\n         result = super().__new__(cls, *args, **options)\n         if evaluate and isinstance(result, cls) and result.args:\n+            if isinstance(result, sign):\n+                return result.rewrite(Abs)\n             pr2 = min((cls._should_evalf(a) for a in result.args))\n             if pr2 > 0:\n                 pr = max((cls._should_evalf(a) for a in result.args))\n", "normalized_occurrence": 1}
