{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9258", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 51811ca..2a26aed 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -10,7 +10,7 @@\n \n import re\n from collections import OrderedDict\n-from typing import Any, Dict, Iterable, Set, cast\n+from typing import Any, Dict, Iterable, Set, cast, Union\n \n from docutils import nodes\n from docutils.nodes import Element\n@@ -20,6 +20,10 @@ from sphinx.application import Sphinx\n from sphinx.util import inspect, typing\n \n \n+def parse_typehint(typehint: str) -> str:\n+    \"\"\"Parse typehint to replace '|' with 'Union'.\"\"\"\n+    return typehint.replace('|', 'Union[') + ']' if '|' in typehint else typehint\n+\n def record_typehints(app: Sphinx, objtype: str, name: str, obj: Any,\n                      options: Dict, args: str, retann: str) -> None:\n     \"\"\"Record type hints to env object.\"\"\"\n", "occurrence": 1, "normalized_patch": "--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n-from typing import Any, Dict, Iterable, Set, cast\n+from typing import Any, Dict, Iterable, Set, cast, Union\n+def parse_typehint(typehint: str) -> str:\n+    return typehint.replace('|', 'Union[') + ']' if '|' in typehint else typehint", "normalized_occurrence": 1}
