{"model_name_or_path": "agentless", "instance_id": "django__django-16819", "model_patch": "diff --git a/django/db/migrations/optimizer.py b/django/db/migrations/optimizer.py\nindex a9ec258..39e1cc0 100644\n--- a/django/db/migrations/optimizer.py\n+++ b/django/db/migrations/optimizer.py\n@@ -1,3 +1,4 @@\n+\n class MigrationOptimizer:\n     \"\"\"\n     Power the optimization process, where you provide a list of Operations\n@@ -61,9 +62,16 @@ class MigrationOptimizer:\n                         break\n                     new_operations.extend(operations[i + j + 2 :])\n                     return new_operations\n-                elif not result:\n+                elif not result and isinstance(operation, (AddIndex, RemoveIndex)):\n+                    # Check if we can optimize AddIndex followed by RemoveIndex or vice versa\n+                    if isinstance(operation, AddIndex) and isinstance(other, RemoveIndex) and operation.index.name == other.name:\n+                        # They cancel each other out\n+                        return operations[:i] + operations[i + j + 2:]\n+                    elif isinstance(operation, RemoveIndex) and isinstance(other, AddIndex) and operation.name == other.index.name:\n+                        # They cancel each other out\n+                        return operations[:i] + operations[i + j + 2:]\n                     # Can't perform a right reduction.\n                     right = False\n             else:\n                 new_operations.append(operation)\n-        return new_operations\n+        return new_operations\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/optimizer.py b/django/db/migrations/optimizer.py\nindex 06fbfa5..4c22951 100644\n--- a/django/db/migrations/optimizer.py\n+++ b/django/db/migrations/optimizer.py\n@@ -28,7 +28,11 @@ class MigrationOptimizer:\n                         break\n                     new_operations.extend(operations[i + j + 2:])\n                     return new_operations\n-                elif not result:\n+                elif not result and isinstance(operation, (AddIndex, RemoveIndex)):\n+                    if isinstance(operation, AddIndex) and isinstance(other, RemoveIndex) and (operation.index.name == other.name):\n+                        return operations[:i] + operations[i + j + 2:]\n+                    elif isinstance(operation, RemoveIndex) and isinstance(other, AddIndex) and (operation.name == other.index.name):\n+                        return operations[:i] + operations[i + j + 2:]\n                     right = False\n             else:\n                 new_operations.append(operation)\n", "normalized_occurrence": 1}
