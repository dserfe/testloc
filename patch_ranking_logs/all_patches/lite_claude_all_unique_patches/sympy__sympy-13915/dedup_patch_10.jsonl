{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13915", "model_patch": "diff --git a/sympy/core/basic.py b/sympy/core/basic.py\nindex 0977e81..a4d51e0 100644\n--- a/sympy/core/basic.py\n+++ b/sympy/core/basic.py\n@@ -1007,8 +1007,16 @@ class Basic(with_metaclass(ManagedProperties)):\n                 if not _aresame(arg, args[i]):\n                     hit = True\n                     args[i] = arg\n+                # Check if the substitution leads to an undefined expression\n+                if hasattr(arg, 'is_finite') and arg.is_finite is False:\n+                    from sympy import nan\n+                    return nan\n             if hit:\n                 rv = self.func(*args)\n+                # Check if the result is undefined\n+                if hasattr(rv, 'is_finite') and rv.is_finite is False:\n+                    from sympy import nan\n+                    return nan\n                 hack2 = hints.get('hack2', False)\n                 if hack2 and self.is_Mul and not rv.is_Mul:  # 2-arg hack\n                     coeff = S.One\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/basic.py b/sympy/core/basic.py\nindex 782db85..377a2a1 100644\n--- a/sympy/core/basic.py\n+++ b/sympy/core/basic.py\n@@ -342,8 +342,14 @@ class Basic(with_metaclass(ManagedProperties)):\n                 if not _aresame(arg, args[i]):\n                     hit = True\n                     args[i] = arg\n+                if hasattr(arg, 'is_finite') and arg.is_finite is False:\n+                    from sympy import nan\n+                    return nan\n             if hit:\n                 rv = self.func(*args)\n+                if hasattr(rv, 'is_finite') and rv.is_finite is False:\n+                    from sympy import nan\n+                    return nan\n                 hack2 = hints.get('hack2', False)\n                 if hack2 and self.is_Mul and (not rv.is_Mul):\n                     coeff = S.One\n", "normalized_occurrence": 1}
