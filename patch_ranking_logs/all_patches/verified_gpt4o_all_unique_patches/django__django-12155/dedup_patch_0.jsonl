{"model_name_or_path": "agentless", "instance_id": "django__django-12155", "model_patch": "diff --git a/django/contrib/admindocs/utils.py b/django/contrib/admindocs/utils.py\nindex 63ee2fc..51cb1ff 100644\n--- a/django/contrib/admindocs/utils.py\n+++ b/django/contrib/admindocs/utils.py\n@@ -34,7 +34,7 @@ def trim_docstring(docstring):\n         return ''\n     # Convert tabs to spaces and split into lines\n     lines = docstring.expandtabs().splitlines()\n-    indent = min(len(line) - len(line.lstrip()) for line in lines if line.lstrip())\n+    indent = min(len(line) - len(line.lstrip()) for line in lines[1:] if line.lstrip())\n     trimmed = [lines[0].lstrip()] + [line[indent:].rstrip() for line in lines[1:]]\n     return \"\\n\".join(trimmed).strip()\n \n", "occurrence": 40, "normalized_patch": "diff --git a/django/contrib/admindocs/utils.py b/django/contrib/admindocs/utils.py\nindex 0e41dc0..a0fe986 100644\n--- a/django/contrib/admindocs/utils.py\n+++ b/django/contrib/admindocs/utils.py\n@@ -20,7 +20,7 @@ def trim_docstring(docstring):\n     if not docstring or not docstring.strip():\n         return ''\n     lines = docstring.expandtabs().splitlines()\n-    indent = min((len(line) - len(line.lstrip()) for line in lines if line.lstrip()))\n+    indent = min((len(line) - len(line.lstrip()) for line in lines[1:] if line.lstrip()))\n     trimmed = [lines[0].lstrip()] + [line[indent:].rstrip() for line in lines[1:]]\n     return '\\n'.join(trimmed).strip()\n def parse_docstring(docstring):\n", "normalized_occurrence": 40}
