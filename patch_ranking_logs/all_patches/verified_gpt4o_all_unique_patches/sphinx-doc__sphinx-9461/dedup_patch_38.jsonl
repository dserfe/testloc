{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9461", "model_patch": "diff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py\nindex 9e39b23..eb48677 100644\n--- a/sphinx/util/inspect.py\n+++ b/sphinx/util/inspect.py\n@@ -390,7 +390,13 @@ def isproperty(obj: Any) -> bool:\n         if isinstance(obj, cached_property):\n             return True\n \n-    return isinstance(obj, property)\n+    if isinstance(obj, property):\n+        return True\n+    elif (sys.version_info >= (3, 9) and \n+          isinstance(obj, classmethod) and \n+          any(isinstance(deco, property) for deco in obj.__dict__.get('__wrapped__', []))):\n+        return True\n+    return False\n \n \n def isgenericalias(obj: Any) -> bool:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py\nindex 7ca87ab..0f5bd99 100644\n--- a/sphinx/util/inspect.py\n+++ b/sphinx/util/inspect.py\n@@ -229,7 +229,11 @@ def isproperty(obj: Any) -> bool:\n         from functools import cached_property\n         if isinstance(obj, cached_property):\n             return True\n-    return isinstance(obj, property)\n+    if isinstance(obj, property):\n+        return True\n+    elif sys.version_info >= (3, 9) and isinstance(obj, classmethod) and any((isinstance(deco, property) for deco in obj.__dict__.get('__wrapped__', []))):\n+        return True\n+    return False\n def isgenericalias(obj: Any) -> bool:\n     if hasattr(typing, '_GenericAlias') and isinstance(obj, typing._GenericAlias):\n         return True\n", "normalized_occurrence": 1}
