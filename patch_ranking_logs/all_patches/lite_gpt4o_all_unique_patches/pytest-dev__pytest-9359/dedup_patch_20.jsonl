{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-9359", "model_patch": "diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py\nindex 9657da0..d1b81b4 100644\n--- a/src/_pytest/assertion/rewrite.py\n+++ b/src/_pytest/assertion/rewrite.py\n@@ -958,6 +958,8 @@ class AssertionRewriter(ast.NodeVisitor):\n         for stmt in self.statements:\n             for node in traverse_node(stmt):\n                 ast.copy_location(node, assert_)\n+                node.lineno = assert_.lineno\n+                node.col_offset = assert_.col_offset\n         return self.statements\n \n     def visit_Name(self, name: ast.Name) -> Tuple[ast.Name, str]:\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py\nindex 9f4da3b..87e5656 100644\n--- a/src/_pytest/assertion/rewrite.py\n+++ b/src/_pytest/assertion/rewrite.py\n@@ -515,6 +515,8 @@ class AssertionRewriter(ast.NodeVisitor):\n         for stmt in self.statements:\n             for node in traverse_node(stmt):\n                 ast.copy_location(node, assert_)\n+                node.lineno = assert_.lineno\n+                node.col_offset = assert_.col_offset\n         return self.statements\n     def visit_Name(self, name: ast.Name) -> Tuple[ast.Name, str]:\n         locs = ast.Call(self.builtin('locals'), [], [])\n", "normalized_occurrence": 1}
