{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15375", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 3a34bd9..d0601ae 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -1678,6 +1678,8 @@ class SQLAggregateCompiler(SQLCompiler):\n             params.extend(ann_params)\n         self.col_count = len(self.query.annotation_select)\n         sql = ', '.join(sql)\n+        if not sql:\n+            sql = '*'  # Ensure we select at least one column\n         params = tuple(params)\n \n         inner_query_sql, inner_query_params = self.query.inner_query.get_compiler(\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 79108fc..deb9ab7 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -945,6 +945,8 @@ class SQLAggregateCompiler(SQLCompiler):\n             params.extend(ann_params)\n         self.col_count = len(self.query.annotation_select)\n         sql = ', '.join(sql)\n+        if not sql:\n+            sql = '*'\n         params = tuple(params)\n         inner_query_sql, inner_query_params = self.query.inner_query.get_compiler(self.using, elide_empty=self.elide_empty).as_sql(with_col_aliases=True)\n         sql = 'SELECT %s FROM (%s) subquery' % (sql, inner_query_sql)\n", "normalized_occurrence": 1}
