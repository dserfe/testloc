{"model_name_or_path": "agentless_claude", "instance_id": "mwaskom__seaborn-3069", "model_patch": "diff --git a/seaborn/_core/scales.py b/seaborn/_core/scales.py\nindex 1e10d58..1b81d4b 100644\n--- a/seaborn/_core/scales.py\n+++ b/seaborn/_core/scales.py\n@@ -177,11 +177,28 @@ class Nominal(Scale):\n             name = None  # To work around mpl<3.4 compat issues\n \n             def set_default_locators_and_formatters(self, axis):\n-                ...\n-                # axis.set_major_locator(major_locator)\n-                # if minor_locator is not None:\n-                #     axis.set_minor_locator(minor_locator)\n-                # axis.set_major_formatter(major_formatter)\n+                # Set up the axis with categorical locators/formatters\n+                major_locator, minor_locator = new._get_locators(**new._tick_params)\n+                major_formatter = new._get_formatter(major_locator, **new._label_params)\n+                \n+                axis.set_major_locator(major_locator)\n+                if minor_locator is not None:\n+                    axis.set_minor_locator(minor_locator)\n+                axis.set_major_formatter(major_formatter)\n+                \n+                # Add invisible artist with sticky edges to control margins\n+                line = mpl.lines.Line2D([], [])\n+                line.sticky_edges.x = [0 - 0.5, len(units_seed) - 0.5]\n+                line.sticky_edges.y = [0 - 0.5, len(units_seed) - 0.5]\n+                line.set_visible(False)\n+                axis.axes.add_artist(line)\n+                \n+                # Disable grid by default for nominal scales\n+                axis.grid(False)\n+                \n+                # If this is a y-axis, invert it\n+                if axis.axis_name == \"y\":\n+                    axis.set_inverted(True)\n \n         mpl_scale = CatScale(data.name)\n         if axis is None:\n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/_core/scales.py b/seaborn/_core/scales.py\nindex 58a2cdb..779042c 100644\n--- a/seaborn/_core/scales.py\n+++ b/seaborn/_core/scales.py\n@@ -90,7 +90,20 @@ class Nominal(Scale):\n         class CatScale(mpl.scale.LinearScale):\n             name = None\n             def set_default_locators_and_formatters(self, axis):\n-                ...\n+                major_locator, minor_locator = new._get_locators(**new._tick_params)\n+                major_formatter = new._get_formatter(major_locator, **new._label_params)\n+                axis.set_major_locator(major_locator)\n+                if minor_locator is not None:\n+                    axis.set_minor_locator(minor_locator)\n+                axis.set_major_formatter(major_formatter)\n+                line = mpl.lines.Line2D([], [])\n+                line.sticky_edges.x = [0 - 0.5, len(units_seed) - 0.5]\n+                line.sticky_edges.y = [0 - 0.5, len(units_seed) - 0.5]\n+                line.set_visible(False)\n+                axis.axes.add_artist(line)\n+                axis.grid(False)\n+                if axis.axis_name == 'y':\n+                    axis.set_inverted(True)\n         mpl_scale = CatScale(data.name)\n         if axis is None:\n             axis = PseudoAxis(mpl_scale)\n", "normalized_occurrence": 1}
