{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-11143", "model_patch": "diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py\nindex 13debe8..c2a8e8b 100644\n--- a/src/_pytest/assertion/rewrite.py\n+++ b/src/_pytest/assertion/rewrite.py\n@@ -676,6 +676,7 @@ class AssertionRewriter(ast.NodeVisitor):\n                 expect_docstring\n                 and isinstance(item, ast.Expr)\n                 and isinstance(item.value, ast.Constant)\n+                and isinstance(item.value.value, str)\n             ):\n                 doc = item.value.value\n                 if self.is_rewrite_disabled(doc):\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py\nindex ee7c041..61734e1 100644\n--- a/src/_pytest/assertion/rewrite.py\n+++ b/src/_pytest/assertion/rewrite.py\n@@ -361,7 +361,7 @@ class AssertionRewriter(ast.NodeVisitor):\n         pos = 0\n         item = None\n         for item in mod.body:\n-            if expect_docstring and isinstance(item, ast.Expr) and isinstance(item.value, ast.Constant):\n+            if expect_docstring and isinstance(item, ast.Expr) and isinstance(item.value, ast.Constant) and isinstance(item.value.value, str):\n                 doc = item.value.value\n                 if self.is_rewrite_disabled(doc):\n                     return\n", "normalized_occurrence": 2}
