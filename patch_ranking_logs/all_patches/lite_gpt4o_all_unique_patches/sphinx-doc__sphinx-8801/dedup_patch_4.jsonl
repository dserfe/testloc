{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8801", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 9e67bb6..45d46ea 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -684,8 +684,8 @@ class Documenter:\n                         return True\n                     elif name in cls.__dict__:\n                         return False\n-                    elif name in self.get_attr(cls, '__annotations__', {}):\n-                        return False\n+                    elif name in self.get_attr(cls, '__annotations__', {}) and cls != self.object:\n+                        return True\n                     elif isinstance(obj, ObjectMember) and obj.class_ is cls:\n                         return False\n \n@@ -779,9 +779,8 @@ class Documenter:\n                 else:\n                     keep = False\n             else:\n-                if (self.options.members is ALL and\n-                        is_filtered_inherited_member(membername, obj)):\n-                    keep = False\n+                if is_filtered_inherited_member(membername, obj):\n+                    keep = True\n                 else:\n                     # ignore undocumented members if :undoc-members: is not given\n                     keep = has_doc or self.options.undoc_members\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex e1d3d5c..18d89e8 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -352,8 +352,8 @@ class Documenter:\n                         return True\n                     elif name in cls.__dict__:\n                         return False\n-                    elif name in self.get_attr(cls, '__annotations__', {}):\n-                        return False\n+                    elif name in self.get_attr(cls, '__annotations__', {}) and cls != self.object:\n+                        return True\n                     elif isinstance(obj, ObjectMember) and obj.class_ is cls:\n                         return False\n             return False\n@@ -421,8 +421,8 @@ class Documenter:\n                         keep = membername in self.options.private_members\n                 else:\n                     keep = False\n-            elif self.options.members is ALL and is_filtered_inherited_member(membername, obj):\n-                keep = False\n+            elif is_filtered_inherited_member(membername, obj):\n+                keep = True\n             else:\n                 keep = has_doc or self.options.undoc_members\n             if isinstance(obj, ObjectMember) and obj.skipped:\n", "normalized_occurrence": 1}
