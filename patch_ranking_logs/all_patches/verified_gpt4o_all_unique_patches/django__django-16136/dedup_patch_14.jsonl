{"model_name_or_path": "agentless", "instance_id": "django__django-16136", "model_patch": "diff --git a/django/core/handlers/exception.py b/django/core/handlers/exception.py\nindex ac46143..d61e742 100644\n--- a/django/core/handlers/exception.py\n+++ b/django/core/handlers/exception.py\n@@ -165,6 +165,8 @@ def get_exception_response(request, resolver, status_code, exception):\n     except Exception:\n         signals.got_request_exception.send(sender=None, request=request)\n         response = handle_uncaught_exception(request, resolver, sys.exc_info())\n+        if isinstance(response, HttpResponseNotAllowed):\n+            return response\n \n     return response\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/handlers/exception.py b/django/core/handlers/exception.py\nindex 1832412..1672434 100644\n--- a/django/core/handlers/exception.py\n+++ b/django/core/handlers/exception.py\n@@ -71,6 +71,8 @@ def get_exception_response(request, resolver, status_code, exception):\n     except Exception:\n         signals.got_request_exception.send(sender=None, request=request)\n         response = handle_uncaught_exception(request, resolver, sys.exc_info())\n+        if isinstance(response, HttpResponseNotAllowed):\n+            return response\n     return response\n def handle_uncaught_exception(request, resolver, exc_info):\n     if settings.DEBUG_PROPAGATE_EXCEPTIONS:\n", "normalized_occurrence": 1}
