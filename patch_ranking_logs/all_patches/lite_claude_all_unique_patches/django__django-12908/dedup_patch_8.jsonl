{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12908", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex ccac780..edaea73 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -991,9 +991,14 @@ class QuerySet:\n         # Clear limits and ordering so they can be reapplied\n         clone.query.clear_ordering(True)\n         clone.query.clear_limits()\n+        # Preserve distinct fields from the original query\n+        distinct_fields = self.query.distinct_fields\n         clone.query.combined_queries = (self.query,) + tuple(qs.query for qs in other_qs)\n         clone.query.combinator = combinator\n         clone.query.combinator_all = all\n+        # Reapply distinct fields after combining\n+        if distinct_fields:\n+            clone.query.add_distinct_fields(*distinct_fields)\n         return clone\n \n     def union(self, *other_qs, all=False):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 23baba9..3908c60 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -582,9 +582,12 @@ class QuerySet:\n         clone = self._chain()\n         clone.query.clear_ordering(True)\n         clone.query.clear_limits()\n+        distinct_fields = self.query.distinct_fields\n         clone.query.combined_queries = (self.query,) + tuple((qs.query for qs in other_qs))\n         clone.query.combinator = combinator\n         clone.query.combinator_all = all\n+        if distinct_fields:\n+            clone.query.add_distinct_fields(*distinct_fields)\n         return clone\n     def union(self, *other_qs, all=False):\n         if isinstance(self, EmptyQuerySet):\n", "normalized_occurrence": 1}
