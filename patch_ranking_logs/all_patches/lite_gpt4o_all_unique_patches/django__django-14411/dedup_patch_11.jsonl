{"model_name_or_path": "agentless", "instance_id": "django__django-14411", "model_patch": "diff --git a/django/contrib/admin/utils.py b/django/contrib/admin/utils.py\nindex ab619c1..33c2717 100644\n--- a/django/contrib/admin/utils.py\n+++ b/django/contrib/admin/utils.py\n@@ -335,7 +335,12 @@ def label_for_field(name, model, model_admin=None, return_attr=False, form=None)\n             elif hasattr(model, name):\n                 attr = getattr(model, name)\n             elif form and name in form.fields:\n-                attr = form.fields[name]\n+                # Check if the form field is a ReadOnlyPasswordHashWidget\n+                if isinstance(form.fields[name].widget, ReadOnlyPasswordHashWidget):\n+                    label = pretty_name(name)\n+                    attr = name\n+                else:\n+                    attr = form.fields[name]\n             else:\n                 message = \"Unable to lookup '%s' on %s\" % (name, model._meta.object_name)\n                 if model_admin:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/utils.py b/django/contrib/admin/utils.py\nindex 2428fd0..95addb4 100644\n--- a/django/contrib/admin/utils.py\n+++ b/django/contrib/admin/utils.py\n@@ -198,7 +198,11 @@ def label_for_field(name, model, model_admin=None, return_attr=False, form=None)\n             elif hasattr(model, name):\n                 attr = getattr(model, name)\n             elif form and name in form.fields:\n-                attr = form.fields[name]\n+                if isinstance(form.fields[name].widget, ReadOnlyPasswordHashWidget):\n+                    label = pretty_name(name)\n+                    attr = name\n+                else:\n+                    attr = form.fields[name]\n             else:\n                 message = \"Unable to lookup '%s' on %s\" % (name, model._meta.object_name)\n                 if model_admin:\n", "normalized_occurrence": 1}
