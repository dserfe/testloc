{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-10325", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 53e783e..9694099 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -110,9 +110,11 @@ def exclude_members_option(arg: Any) -> Union[object, Set[str]]:\n \n \n def inherited_members_option(arg: Any) -> Union[object, Set[str]]:\n-    \"\"\"Used to convert the :members: option to auto directives.\"\"\"\n+    \"\"\"Used to convert the :inherited-members: option to auto directives.\"\"\"\n     if arg in (None, True):\n         return 'object'\n+    elif isinstance(arg, str):\n+        return {x.strip() for x in arg.split(',') if x.strip()}\n     else:\n         return arg\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex ef486fb..a3c30d6 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -58,6 +58,8 @@ def exclude_members_option(arg: Any) -> Union[object, Set[str]]:\n def inherited_members_option(arg: Any) -> Union[object, Set[str]]:\n     if arg in (None, True):\n         return 'object'\n+    elif isinstance(arg, str):\n+        return {x.strip() for x in arg.split(',') if x.strip()}\n     else:\n         return arg\n def member_order_option(arg: Any) -> Optional[str]:\n", "normalized_occurrence": 1}
