{"model_name_or_path": "agentless", "instance_id": "django__django-12113", "model_patch": "diff --git a/django/db/backends/sqlite3/creation.py b/django/db/backends/sqlite3/creation.py\nindex d05c87d..6978c07 100644\n--- a/django/db/backends/sqlite3/creation.py\n+++ b/django/db/backends/sqlite3/creation.py\n@@ -55,7 +55,9 @@ class DatabaseCreation(BaseDatabaseCreation):\n             return orig_settings_dict\n         else:\n             root, ext = os.path.splitext(orig_settings_dict['NAME'])\n-            return {**orig_settings_dict, 'NAME': '{}_{}.{}'.format(root, suffix, ext)}\n+            # Add a unique identifier to avoid database locking issues.\n+            unique_suffix = '{}_{}_{}'.format(os.getpid(), int(time.time()), suffix)\n+            return {**orig_settings_dict, 'NAME': '{}_{}.{}'.format(root, unique_suffix, ext)}\n \n     def _clone_test_db(self, suffix, verbosity, keepdb=False):\n         source_database_name = self.connection.settings_dict['NAME']\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/sqlite3/creation.py b/django/db/backends/sqlite3/creation.py\nindex 106cce3..753c69b 100644\n--- a/django/db/backends/sqlite3/creation.py\n+++ b/django/db/backends/sqlite3/creation.py\n@@ -39,7 +39,8 @@ class DatabaseCreation(BaseDatabaseCreation):\n             return orig_settings_dict\n         else:\n             root, ext = os.path.splitext(orig_settings_dict['NAME'])\n-            return {**orig_settings_dict, 'NAME': '{}_{}.{}'.format(root, suffix, ext)}\n+            unique_suffix = '{}_{}_{}'.format(os.getpid(), int(time.time()), suffix)\n+            return {**orig_settings_dict, 'NAME': '{}_{}.{}'.format(root, unique_suffix, ext)}\n     def _clone_test_db(self, suffix, verbosity, keepdb=False):\n         source_database_name = self.connection.settings_dict['NAME']\n         target_database_name = self.get_test_db_clone_settings(suffix)['NAME']\n", "normalized_occurrence": 1}
