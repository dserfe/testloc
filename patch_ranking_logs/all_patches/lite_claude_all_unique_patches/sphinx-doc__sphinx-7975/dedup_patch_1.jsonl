{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-7975", "model_patch": "diff --git a/sphinx/builders/html/__init__.py b/sphinx/builders/html/__init__.py\nindex c052c27..42ee53a 100644\n--- a/sphinx/builders/html/__init__.py\n+++ b/sphinx/builders/html/__init__.py\n@@ -659,10 +659,27 @@ class StandaloneHTMLBuilder(Builder):\n         # the total count of lines for each index letter, used to distribute\n         # the entries into two columns\n         genindex = IndexEntries(self.env).create_index(self)\n+        # Merge any symbol sections that might be split\n+        merged_genindex = []\n+        symbol_entries = []\n+        for key, entries in genindex:\n+            if not key.isalpha():  # Symbol section\n+                symbol_entries.extend(entries)\n+            else:\n+                merged_genindex.append((key, entries))\n+        \n+        if symbol_entries:\n+            # Insert all symbol entries at the beginning\n+            merged_genindex.insert(0, ('Symbols', symbol_entries))\n+        \n+        # Calculate counts after merging\n         indexcounts = []\n-        for _k, entries in genindex:\n+        for _k, entries in merged_genindex:\n             indexcounts.append(sum(1 + len(subitems)\n                                    for _, (_, subitems, _) in entries))\n+        \n+        # Use merged index instead of original\n+        genindex = merged_genindex\n \n         genindexcontext = {\n             'genindexentries': genindex,\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/builders/html/__init__.py b/sphinx/builders/html/__init__.py\nindex e212f45..570f805 100644\n--- a/sphinx/builders/html/__init__.py\n+++ b/sphinx/builders/html/__init__.py\n@@ -405,9 +405,19 @@ class StandaloneHTMLBuilder(Builder):\n             self.handle_page('opensearch', {}, 'opensearch.xml', outfilename=fn)\n     def write_genindex(self) -> None:\n         genindex = IndexEntries(self.env).create_index(self)\n+        merged_genindex = []\n+        symbol_entries = []\n+        for key, entries in genindex:\n+            if not key.isalpha():\n+                symbol_entries.extend(entries)\n+            else:\n+                merged_genindex.append((key, entries))\n+        if symbol_entries:\n+            merged_genindex.insert(0, ('Symbols', symbol_entries))\n         indexcounts = []\n-        for _k, entries in genindex:\n+        for _k, entries in merged_genindex:\n             indexcounts.append(sum((1 + len(subitems) for _, (_, subitems, _) in entries)))\n+        genindex = merged_genindex\n         genindexcontext = {'genindexentries': genindex, 'genindexcounts': indexcounts, 'split_index': self.config.html_split_index}\n         logger.info(' genindex', nonl=True)\n         if self.config.html_split_index:\n", "normalized_occurrence": 1}
