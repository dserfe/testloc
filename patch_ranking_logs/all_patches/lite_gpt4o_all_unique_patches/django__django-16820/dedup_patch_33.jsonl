{"model_name_or_path": "agentless", "instance_id": "django__django-16820", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex cffcd20..dbd5883 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -636,16 +636,31 @@ class AlterUniqueTogether(AlterTogetherOptionOperation):\n         super().__init__(name, unique_together)\n \n \n-class AlterIndexTogether(AlterTogetherOptionOperation):\n+class AlterIndexTogether(Operation):\n     \"\"\"\n     Change the value of index_together to the target one.\n-    Input value of index_together must be a set of tuples.\n+    This operation is deprecated and will be removed in Django 5.1.\n     \"\"\"\n \n-    option_name = \"index_together\"\n-\n     def __init__(self, name, index_together):\n-        super().__init__(name, index_together)\n+        self.name = name\n+        self.index_together = index_together\n+\n+    def state_forwards(self, app_label, state):\n+        state.models[app_label, self.name].options[\"index_together\"] = self.index_together\n+\n+    def database_forwards(self, app_label, schema_editor, from_state, to_state):\n+        pass\n+\n+    def database_backwards(self, app_label, schema_editor, from_state, to_state):\n+        pass\n+\n+    def describe(self):\n+        return f\"Alter index_together for {self.name}\"\n+\n+    @property\n+    def reduced(self):\n+        return True\n \n \n class AlterOrderWithRespectTo(ModelOptionOperation):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 064ae1a..d053fe9 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -274,10 +274,21 @@ class AlterUniqueTogether(AlterTogetherOptionOperation):\n     option_name = 'unique_together'\n     def __init__(self, name, unique_together):\n         super().__init__(name, unique_together)\n-class AlterIndexTogether(AlterTogetherOptionOperation):\n-    option_name = 'index_together'\n+class AlterIndexTogether(Operation):\n     def __init__(self, name, index_together):\n-        super().__init__(name, index_together)\n+        self.name = name\n+        self.index_together = index_together\n+    def state_forwards(self, app_label, state):\n+        state.models[app_label, self.name].options['index_together'] = self.index_together\n+    def database_forwards(self, app_label, schema_editor, from_state, to_state):\n+        pass\n+    def database_backwards(self, app_label, schema_editor, from_state, to_state):\n+        pass\n+    def describe(self):\n+        return f'Alter index_together for {self.name}'\n+    @property\n+    def reduced(self):\n+        return True\n class AlterOrderWithRespectTo(ModelOptionOperation):\n     option_name = 'order_with_respect_to'\n     def __init__(self, name, order_with_respect_to):\n", "normalized_occurrence": 1}
