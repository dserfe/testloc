{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-4551", "model_patch": "diff --git a/pylint/pyreverse/diagrams.py b/pylint/pyreverse/diagrams.py\nindex 0111bb1..d7df88c 100644\n--- a/pylint/pyreverse/diagrams.py\n+++ b/pylint/pyreverse/diagrams.py\n@@ -89,6 +89,10 @@ class ClassDiagram(Figure, FilterMixIn):\n             + list(node.locals_type.items())\n             + properties\n         ):\n+            # Process type hints\n+            if node.type_annotations and node_name in node.type_annotations:\n+                type_str = node.type_annotations[node_name].as_string()\n+                node_name = f\"{node_name} : {type_str}\"\n             if not self.show_attr(node_name):\n                 continue\n             names = self.class_names(associated_nodes)\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/pyreverse/diagrams.py b/pylint/pyreverse/diagrams.py\nindex d9b60dc..48a0183 100644\n--- a/pylint/pyreverse/diagrams.py\n+++ b/pylint/pyreverse/diagrams.py\n@@ -58,6 +58,9 @@ class ClassDiagram(Figure, FilterMixIn):\n         attrs = []\n         properties = [(n, m) for n, m in node.items() if isinstance(m, astroid.FunctionDef) and decorated_with_property(m)]\n         for node_name, associated_nodes in list(node.instance_attrs_type.items()) + list(node.locals_type.items()) + properties:\n+            if node.type_annotations and node_name in node.type_annotations:\n+                type_str = node.type_annotations[node_name].as_string()\n+                node_name = f'{node_name} : {type_str}'\n             if not self.show_attr(node_name):\n                 continue\n             names = self.class_names(associated_nodes)\n", "normalized_occurrence": 1}
