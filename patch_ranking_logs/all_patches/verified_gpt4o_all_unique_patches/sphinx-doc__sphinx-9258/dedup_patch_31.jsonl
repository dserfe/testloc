{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9258", "model_patch": "diff --git a/sphinx/util/docstrings.py b/sphinx/util/docstrings.py\nindex 6895942..d402db5 100644\n--- a/sphinx/util/docstrings.py\n+++ b/sphinx/util/docstrings.py\n@@ -8,10 +8,12 @@\n     :license: BSD, see LICENSE for details.\n \"\"\"\n \n+field_type_re = re.compile(r'(?P<name>\\S+)\\s*:\\s*(?P<type>.+)')\n+\n import re\n import sys\n import warnings\n-from typing import Dict, List, Tuple\n+from typing import Dict, List, Tuple, Union\n \n from docutils.parsers.rst.states import Body\n \n@@ -20,7 +22,7 @@ from sphinx.deprecation import RemovedInSphinx50Warning, RemovedInSphinx60Warnin\n field_list_item_re = re.compile(Body.patterns['field_marker'])\n \n \n-def separate_metadata(s: str) -> Tuple[str, Dict[str, str]]:\n+def separate_metadata(s: str) -> Tuple[str, Dict[str, Union[str, List[str]]]]:\n     \"\"\"Separate docstring into metadata and others.\"\"\"\n     in_other_element = False\n     metadata: Dict[str, str] = {}\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/util/docstrings.py b/sphinx/util/docstrings.py\nindex 6c9466f..8b53f5e 100644\n--- a/sphinx/util/docstrings.py\n+++ b/sphinx/util/docstrings.py\n@@ -1,11 +1,12 @@\n+field_type_re = re.compile('(?P<name>\\\\S+)\\\\s*:\\\\s*(?P<type>.+)')\n import re\n import sys\n import warnings\n-from typing import Dict, List, Tuple\n+from typing import Dict, List, Tuple, Union\n from docutils.parsers.rst.states import Body\n from sphinx.deprecation import RemovedInSphinx50Warning, RemovedInSphinx60Warning\n field_list_item_re = re.compile(Body.patterns['field_marker'])\n-def separate_metadata(s: str) -> Tuple[str, Dict[str, str]]:\n+def separate_metadata(s: str) -> Tuple[str, Dict[str, Union[str, List[str]]]]:\n     in_other_element = False\n     metadata: Dict[str, str] = {}\n     lines = []\n", "normalized_occurrence": 1}
