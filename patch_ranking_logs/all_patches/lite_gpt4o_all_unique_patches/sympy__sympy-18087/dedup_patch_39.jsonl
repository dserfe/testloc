{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-18087", "model_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex 73bbc98..ecde786 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -242,7 +242,7 @@ def trigsimp_groebner(expr, hints=[], quick=False, order=\"grlex\",\n                     I.append(fn(coeff*x) - cn)\n         return list(set(I))\n \n-    def analyse_gens(gens, hints):\n+    def analyse_gens(gens, hints, real=False):\n         \"\"\"\n         Analyse the generators ``gens``, using the hints ``hints``.\n \n@@ -355,7 +355,7 @@ def trigsimp_groebner(expr, hints=[], quick=False, order=\"grlex\",\n     except PolificationFailed:\n         return expr\n     debug('initial gens:', opt.gens)\n-    ideal, freegens, gens = analyse_gens(opt.gens, hints)\n+    ideal, freegens, gens = analyse_gens(opt.gens, hints, real=expr.is_real)\n     debug('ideal:', ideal)\n     debug('new gens:', gens, \" -- len\", len(gens))\n     debug('free gens:', freegens, \" -- len\", len(gens))\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex fb82ea6..bd07509 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -44,7 +44,7 @@ def trigsimp_groebner(expr, hints=[], quick=False, order='grlex', polynomial=Fal\n                     cn = fn(coeff * y).expand(trig=True).subs(y, x)\n                     I.append(fn(coeff * x) - cn)\n         return list(set(I))\n-    def analyse_gens(gens, hints):\n+    def analyse_gens(gens, hints, real=False):\n         n, funcs, iterables, extragens = parse_hints(hints)\n         debug('n=%s' % n, 'funcs:', funcs, 'iterables:', iterables, 'extragens:', extragens)\n         gens = list(gens)\n@@ -113,7 +113,7 @@ def trigsimp_groebner(expr, hints=[], quick=False, order='grlex', polynomial=Fal\n     except PolificationFailed:\n         return expr\n     debug('initial gens:', opt.gens)\n-    ideal, freegens, gens = analyse_gens(opt.gens, hints)\n+    ideal, freegens, gens = analyse_gens(opt.gens, hints, real=expr.is_real)\n     debug('ideal:', ideal)\n     debug('new gens:', gens, ' -- len', len(gens))\n     debug('free gens:', freegens, ' -- len', len(gens))\n", "normalized_occurrence": 1}
