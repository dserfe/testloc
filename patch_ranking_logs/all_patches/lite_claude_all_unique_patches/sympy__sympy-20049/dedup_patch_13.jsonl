{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-20049", "model_patch": "diff --git a/sympy/physics/vector/point.py b/sympy/physics/vector/point.py\nindex b711aa3..713166a 100644\n--- a/sympy/physics/vector/point.py\n+++ b/sympy/physics/vector/point.py\n@@ -518,10 +518,25 @@ class Point(object):\n         \"\"\"\n \n         _check_frame(frame)\n-        if not (frame in self._vel_dict):\n-            raise ValueError('Velocity of point ' + self.name + ' has not been'\n-                             ' defined in ReferenceFrame ' + frame.name)\n-        return self._vel_dict[frame]\n+        if frame in self._vel_dict:\n+            return self._vel_dict[frame]\n+            \n+        # If velocity is not explicitly defined but position is,\n+        # calculate velocity from position time derivative\n+        if self._pos_dict:\n+            # Get the reference point and position vector\n+            ref_point = next(iter(self._pos_dict.values()))[0]\n+            pos_vector = self.pos_from(ref_point)\n+            # Calculate velocity as time derivative of position\n+            if ref_point._vel_dict:\n+                # If reference point has velocity, include it\n+                return ref_point.vel(frame) + pos_vector.dt(frame)\n+            else:\n+                # Otherwise just return position derivative\n+                return pos_vector.dt(frame)\n+                \n+        raise ValueError('Velocity of point ' + self.name + ' has not been'\n+                         ' defined in ReferenceFrame ' + frame.name)\n \n     def partial_velocity(self, frame, *gen_speeds):\n         \"\"\"Returns the partial velocities of the linear velocity vector of this\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/physics/vector/point.py b/sympy/physics/vector/point.py\nindex f85c3bd..fea1a4c 100644\n--- a/sympy/physics/vector/point.py\n+++ b/sympy/physics/vector/point.py\n@@ -120,9 +120,16 @@ class Point(object):\n         return self.vel(outframe)\n     def vel(self, frame):\n         _check_frame(frame)\n-        if not frame in self._vel_dict:\n-            raise ValueError('Velocity of point ' + self.name + ' has not been defined in ReferenceFrame ' + frame.name)\n-        return self._vel_dict[frame]\n+        if frame in self._vel_dict:\n+            return self._vel_dict[frame]\n+        if self._pos_dict:\n+            ref_point = next(iter(self._pos_dict.values()))[0]\n+            pos_vector = self.pos_from(ref_point)\n+            if ref_point._vel_dict:\n+                return ref_point.vel(frame) + pos_vector.dt(frame)\n+            else:\n+                return pos_vector.dt(frame)\n+        raise ValueError('Velocity of point ' + self.name + ' has not been defined in ReferenceFrame ' + frame.name)\n     def partial_velocity(self, frame, *gen_speeds):\n         partials = [self.vel(frame).diff(speed, frame, var_in_dcm=False) for speed in gen_speeds]\n         if len(partials) == 1:\n", "normalized_occurrence": 1}
