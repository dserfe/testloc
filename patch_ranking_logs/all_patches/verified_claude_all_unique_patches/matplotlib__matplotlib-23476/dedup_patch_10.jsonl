{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-23476", "model_patch": "diff --git a/lib/matplotlib/backends/backend_macosx.py b/lib/matplotlib/backends/backend_macosx.py\nindex 4ab352a..cb8ef5e 100644\n--- a/lib/matplotlib/backends/backend_macosx.py\n+++ b/lib/matplotlib/backends/backend_macosx.py\n@@ -97,11 +97,23 @@ class FigureCanvasMac(FigureCanvasAgg, _macosx.FigureCanvas, FigureCanvasBase):\n         scale = self.figure.dpi / self.device_pixel_ratio\n         width /= scale\n         height /= scale\n+        # During unpickling, preserve the original DPI\n+        if getattr(self.figure, '_is_being_unpickled', False):\n+            self.figure._set_dpi(self.figure._original_dpi, forward=False)\n         self.figure.set_size_inches(width, height, forward=False)\n         ResizeEvent(\"resize_event\", self)._process()\n         self.draw_idle()\n \n \n+class FigureCanvasMac(_macosx.FigureCanvas, FigureCanvasBase):\n+    def __init__(self, figure):\n+        # During unpickling, mark the figure so we can handle DPI correctly\n+        if hasattr(figure, '_is_unpickling'):\n+            figure._is_being_unpickled = True\n+        super().__init__(figure)\n+        if hasattr(figure, '_is_being_unpickled'):\n+            delattr(figure, '_is_being_unpickled')\n+            \n class NavigationToolbar2Mac(_macosx.NavigationToolbar2, NavigationToolbar2):\n \n     def __init__(self, canvas):\n", "normalized_patch": "diff --git a/lib/matplotlib/backends/backend_macosx.py b/lib/matplotlib/backends/backend_macosx.py\nindex d70bd86..e47455a 100644\n--- a/lib/matplotlib/backends/backend_macosx.py\n+++ b/lib/matplotlib/backends/backend_macosx.py\n@@ -66,10 +66,21 @@ class FigureCanvasMac(FigureCanvasAgg, _macosx.FigureCanvas, FigureCanvasBase):\n         scale = self.figure.dpi / self.device_pixel_ratio\n         width /= scale\n         height /= scale\n+        if getattr(self.figure, '_is_being_unpickled', False):\n+            self.figure._set_dpi(self.figure._original_dpi, forward=False)\n         self.figure.set_size_inches(width, height, forward=False)\n         ResizeEvent('resize_event', self)._process()\n         self.draw_idle()\n \n+class FigureCanvasMac(_macosx.FigureCanvas, FigureCanvasBase):\n+\n+    def __init__(self, figure):\n+        if hasattr(figure, '_is_unpickling'):\n+            figure._is_being_unpickled = True\n+        super().__init__(figure)\n+        if hasattr(figure, '_is_being_unpickled'):\n+            delattr(figure, '_is_being_unpickled')\n+\n class NavigationToolbar2Mac(_macosx.NavigationToolbar2, NavigationToolbar2):\n \n     def __init__(self, canvas):\n", "normalized_occurrence": 1}
