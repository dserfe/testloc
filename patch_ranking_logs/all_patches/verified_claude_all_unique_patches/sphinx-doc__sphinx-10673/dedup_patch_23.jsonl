{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-10673", "model_patch": "diff --git a/sphinx/environment/adapters/toctree.py b/sphinx/environment/adapters/toctree.py\nindex 52ac0d3..d8e1aa4 100644\n--- a/sphinx/environment/adapters/toctree.py\n+++ b/sphinx/environment/adapters/toctree.py\n@@ -165,6 +165,20 @@ class TocTree:\n                                        ref, location=toctreenode)\n                 except KeyError:\n                     # this is raised if the included file does not exist\n+                    # Allow special Sphinx-generated pages\n+                    if ref in ('genindex', 'modindex', 'search'):\n+                        reference = nodes.reference('', '', internal=True,\n+                                                refuri=ref,\n+                                                anchorname='',\n+                                                *[nodes.Text(ref)])\n+                        para = addnodes.compact_paragraph('', '', reference)\n+                        item = nodes.list_item('', para)\n+                        toc = nodes.bullet_list('', item)\n+                        if not separate:\n+                            children = cast(Iterable[nodes.Element], toc)\n+                            entries.extend(children)\n+                        continue\n+                    # Handle regular missing documents\n                     if excluded(self.env.doc2path(ref, False)):\n                         message = __('toctree contains reference to excluded document %r')\n                     elif not included(self.env.doc2path(ref, False)):\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/environment/adapters/toctree.py b/sphinx/environment/adapters/toctree.py\nindex 07fcee3..37ea6df 100644\n--- a/sphinx/environment/adapters/toctree.py\n+++ b/sphinx/environment/adapters/toctree.py\n@@ -86,6 +86,15 @@ class TocTree:\n                     if not toc.children:\n                         logger.warning(__(\"toctree contains reference to document %r that doesn't have a title: no link will be generated\"), ref, location=toctreenode)\n                 except KeyError:\n+                    if ref in ('genindex', 'modindex', 'search'):\n+                        reference = nodes.reference('', '', *[nodes.Text(ref)], internal=True, refuri=ref, anchorname='')\n+                        para = addnodes.compact_paragraph('', '', reference)\n+                        item = nodes.list_item('', para)\n+                        toc = nodes.bullet_list('', item)\n+                        if not separate:\n+                            children = cast(Iterable[nodes.Element], toc)\n+                            entries.extend(children)\n+                        continue\n                     if excluded(self.env.doc2path(ref, False)):\n                         message = __('toctree contains reference to excluded document %r')\n                     elif not included(self.env.doc2path(ref, False)):\n", "normalized_occurrence": 1}
