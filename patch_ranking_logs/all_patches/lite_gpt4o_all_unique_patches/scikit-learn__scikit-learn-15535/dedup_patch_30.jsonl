{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-15535", "model_patch": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex be26d08..f9d767e 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -336,7 +336,7 @@ def _ensure_no_complex_data(array):\n \n \n def check_array(array, accept_sparse=False, accept_large_sparse=True,\n-                dtype=\"numeric\", order=None, copy=False, force_all_finite=True,\n+                dtype=None, order=None, copy=False, force_all_finite=True,\n                 ensure_2d=True, allow_nd=False, ensure_min_samples=1,\n                 ensure_min_features=1, warn_on_dtype=None, estimator=None):\n \n", "occurrence": 2, "normalized_patch": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex 8ce0584..aed158b 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -122,7 +122,7 @@ def _ensure_sparse_format(spmatrix, accept_sparse, dtype, copy, force_all_finite\n def _ensure_no_complex_data(array):\n     if hasattr(array, 'dtype') and array.dtype is not None and hasattr(array.dtype, 'kind') and (array.dtype.kind == 'c'):\n         raise ValueError('Complex data not supported\\n{}\\n'.format(array))\n-def check_array(array, accept_sparse=False, accept_large_sparse=True, dtype='numeric', order=None, copy=False, force_all_finite=True, ensure_2d=True, allow_nd=False, ensure_min_samples=1, ensure_min_features=1, warn_on_dtype=None, estimator=None):\n+def check_array(array, accept_sparse=False, accept_large_sparse=True, dtype=None, order=None, copy=False, force_all_finite=True, ensure_2d=True, allow_nd=False, ensure_min_samples=1, ensure_min_features=1, warn_on_dtype=None, estimator=None):\n     if warn_on_dtype is not None:\n         warnings.warn(\"'warn_on_dtype' is deprecated in version 0.21 and will be removed in 0.23. Don't set `warn_on_dtype` to remove this warning.\", FutureWarning, stacklevel=2)\n     array_orig = array\n", "normalized_occurrence": 2}
