{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12325", "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 77c04dd..8e2a8b4 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -204,7 +204,9 @@ class ModelBase(type):\n             for field in base._meta.local_fields:\n                 if isinstance(field, OneToOneField):\n                     related = resolve_relation(new_class, field.remote_field.model)\n-                    parent_links[make_model_tuple(related)] = field\n+                    related_tuple = make_model_tuple(related)\n+                    if getattr(field, 'parent_link', False) or related_tuple not in parent_links:\n+                        parent_links[related_tuple] = field\n \n         # Track fields inherited from base models.\n         inherited_attributes = set()\n", "normalized_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 0ae5317..2b91c87 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -107,7 +107,9 @@ class ModelBase(type):\n             for field in base._meta.local_fields:\n                 if isinstance(field, OneToOneField):\n                     related = resolve_relation(new_class, field.remote_field.model)\n-                    parent_links[make_model_tuple(related)] = field\n+                    related_tuple = make_model_tuple(related)\n+                    if getattr(field, 'parent_link', False) or related_tuple not in parent_links:\n+                        parent_links[related_tuple] = field\n         inherited_attributes = set()\n         for base in new_class.mro():\n             if base not in parents or not hasattr(base, '_meta'):\n", "normalized_occurrence": 1}
