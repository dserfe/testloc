{"model_name_or_path": "agentless_claude", "instance_id": "psf__requests-2674", "model_patch": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex 06b1117..7d8e5cc 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -413,7 +413,7 @@ class HTTPAdapter(BaseAdapter):\n             raise ConnectionError(err, request=request)\n \n         except MaxRetryError as e:\n-            if isinstance(e.reason, ConnectTimeoutError):\n+            if isinstance(e.reason, (ConnectTimeoutError, TimeoutError)):\n                 raise ConnectTimeout(e, request=request)\n \n             if isinstance(e.reason, ResponseError):\n@@ -424,12 +424,14 @@ class HTTPAdapter(BaseAdapter):\n         except _ProxyError as e:\n             raise ProxyError(e)\n \n-        except (_SSLError, _HTTPError) as e:\n+        except (_SSLError, _HTTPError, DecodeError) as e:\n             if isinstance(e, _SSLError):\n                 raise SSLError(e, request=request)\n             elif isinstance(e, ReadTimeoutError):\n                 raise ReadTimeout(e, request=request)\n+            elif isinstance(e, DecodeError):\n+                raise ContentDecodingError(e, request=request)\n             else:\n                 raise\n \n-        return self.build_response(request, resp)\n+        return self.build_response(request, resp)\n", "occurrence": 1, "normalized_patch": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex 9062cd5..61424c0 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -168,18 +168,20 @@ class HTTPAdapter(BaseAdapter):\n         except (ProtocolError, socket.error) as err:\n             raise ConnectionError(err, request=request)\n         except MaxRetryError as e:\n-            if isinstance(e.reason, ConnectTimeoutError):\n+            if isinstance(e.reason, (ConnectTimeoutError, TimeoutError)):\n                 raise ConnectTimeout(e, request=request)\n             if isinstance(e.reason, ResponseError):\n                 raise RetryError(e, request=request)\n             raise ConnectionError(e, request=request)\n         except _ProxyError as e:\n             raise ProxyError(e)\n-        except (_SSLError, _HTTPError) as e:\n+        except (_SSLError, _HTTPError, DecodeError) as e:\n             if isinstance(e, _SSLError):\n                 raise SSLError(e, request=request)\n             elif isinstance(e, ReadTimeoutError):\n                 raise ReadTimeout(e, request=request)\n+            elif isinstance(e, DecodeError):\n+                raise ContentDecodingError(e, request=request)\n             else:\n                 raise\n         return self.build_response(request, resp)\n\\ No newline at end of file\n", "normalized_occurrence": 1}
