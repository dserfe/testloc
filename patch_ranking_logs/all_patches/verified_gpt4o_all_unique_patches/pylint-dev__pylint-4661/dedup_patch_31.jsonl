{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-4661", "model_patch": "diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py\nindex 1b8a20a..ef5bb4c 100644\n--- a/pylint/lint/pylinter.py\n+++ b/pylint/lint/pylinter.py\n@@ -481,12 +481,17 @@ class PyLinter(\n         self._pragma_lineno = {}\n         self._ignore_file = False\n         # visit variables\n-        self.file_state = FileState()\n+        self.file_state = FileState(os.path.join(self.data_directory, \".pylint.d\"))\n         self.current_name = None\n         self.current_file = None\n         self.stats = None\n         self.fail_on_symbols = []\n-        # init options\n+        # Determine the data directory according to the XDG Base Directory Specification\n+        self.data_directory = os.path.join(\n+            os.getenv(\"XDG_DATA_HOME\", os.path.expanduser(\"~/.local/share\")), \"pylint\"\n+        )\n+        if not os.path.exists(self.data_directory):\n+            os.makedirs(self.data_directory)\n         self._external_opts = options\n         self.options = options + PyLinter.make_options()\n         self.option_groups = option_groups + PyLinter.option_groups\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py\nindex 31c726e..198bc02 100644\n--- a/pylint/lint/pylinter.py\n+++ b/pylint/lint/pylinter.py\n@@ -48,11 +48,14 @@ class PyLinter(config.OptionsManagerMixIn, MessagesHandlerMixIn, reporters.Repor\n         self._checkers = collections.defaultdict(list)\n         self._pragma_lineno = {}\n         self._ignore_file = False\n-        self.file_state = FileState()\n+        self.file_state = FileState(os.path.join(self.data_directory, '.pylint.d'))\n         self.current_name = None\n         self.current_file = None\n         self.stats = None\n         self.fail_on_symbols = []\n+        self.data_directory = os.path.join(os.getenv('XDG_DATA_HOME', os.path.expanduser('~/.local/share')), 'pylint')\n+        if not os.path.exists(self.data_directory):\n+            os.makedirs(self.data_directory)\n         self._external_opts = options\n         self.options = options + PyLinter.make_options()\n         self.option_groups = option_groups + PyLinter.option_groups\n", "normalized_occurrence": 1}
