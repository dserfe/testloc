{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-23563", "model_patch": "diff --git a/lib/mpl_toolkits/mplot3d/art3d.py b/lib/mpl_toolkits/mplot3d/art3d.py\nindex fa869c7..7d44768 100644\n--- a/lib/mpl_toolkits/mplot3d/art3d.py\n+++ b/lib/mpl_toolkits/mplot3d/art3d.py\n@@ -212,10 +212,18 @@ class Line3D(lines.Line2D):\n     @artist.allow_rasterization\n     def draw(self, renderer):\n         xs3d, ys3d, zs3d = self._verts3d\n+        xs, ys, zs = proj3d.proj_transform(xs3d, ys3d, zs3d, self.axes.M)\n+        if not hasattr(self, '_verts3d'):\n+            self._verts3d = (xs3d, ys3d, zs3d)\n+        else:\n+            xs3d, ys3d, zs3d = self._verts3d\n+\n         xs, ys, zs = proj3d.proj_transform(xs3d, ys3d, zs3d, self.axes.M)\n         self.set_data(xs, ys)\n         super().draw(renderer)\n         self.stale = False\n+        super().draw(renderer)\n+        self.stale = False\n \n \n def line_2d_to_3d(line, zs=0, zdir='z'):\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/mpl_toolkits/mplot3d/art3d.py b/lib/mpl_toolkits/mplot3d/art3d.py\nindex e39ff0d..084faa1 100644\n--- a/lib/mpl_toolkits/mplot3d/art3d.py\n+++ b/lib/mpl_toolkits/mplot3d/art3d.py\n@@ -83,9 +83,16 @@ class Line3D(lines.Line2D):\n     def draw(self, renderer):\n         xs3d, ys3d, zs3d = self._verts3d\n         xs, ys, zs = proj3d.proj_transform(xs3d, ys3d, zs3d, self.axes.M)\n+        if not hasattr(self, '_verts3d'):\n+            self._verts3d = (xs3d, ys3d, zs3d)\n+        else:\n+            xs3d, ys3d, zs3d = self._verts3d\n+        xs, ys, zs = proj3d.proj_transform(xs3d, ys3d, zs3d, self.axes.M)\n         self.set_data(xs, ys)\n         super().draw(renderer)\n         self.stale = False\n+        super().draw(renderer)\n+        self.stale = False\n def line_2d_to_3d(line, zs=0, zdir='z'):\n     line.__class__ = Line3D\n     line.set_3d_properties(zs, zdir)\n", "normalized_occurrence": 1}
