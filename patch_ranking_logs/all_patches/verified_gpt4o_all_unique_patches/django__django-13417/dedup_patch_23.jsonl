{"model_name_or_path": "agentless", "instance_id": "django__django-13417", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex b8a8c1e..a335a6f 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -354,6 +354,10 @@ class SQLCompiler:\n                     order_by.append((\n                         OrderBy(Ref(col, RawSQL(*self.query.extra[col])), descending=descending),\n                         True))\n+        # If it's an aggregation or GROUP BY query, set ordering to False\n+        if self.query.group_by is not None:\n+            self.query._ordered = False\n+\n         result = []\n         seen = set()\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 89a1b28..25c27af 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -183,6 +183,8 @@ class SQLCompiler:\n                 order_by.append((OrderBy(RawSQL(*self.query.extra[col]), descending=descending), False))\n             else:\n                 order_by.append((OrderBy(Ref(col, RawSQL(*self.query.extra[col])), descending=descending), True))\n+        if self.query.group_by is not None:\n+            self.query._ordered = False\n         result = []\n         seen = set()\n         for expr, is_ref in order_by:\n", "normalized_occurrence": 1}
