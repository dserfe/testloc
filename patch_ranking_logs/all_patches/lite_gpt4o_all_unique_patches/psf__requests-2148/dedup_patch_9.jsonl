{"model_name_or_path": "agentless", "instance_id": "psf__requests-2148", "model_patch": "diff --git a/requests/models.py b/requests/models.py\nindex c835f24..bc4052f 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -636,10 +636,13 @@ class Response(object):\n                 try:\n                     for chunk in self.raw.stream(chunk_size, decode_content=True):\n                         yield chunk\n-                except IncompleteRead as e:\n-                    raise ChunkedEncodingError(e)\n-                except DecodeError as e:\n-                    raise ContentDecodingError(e)\n+                except (IncompleteRead, DecodeError, socket.error) as e:\n+                    if isinstance(e, socket.error):\n+                        raise ConnectionError(e)\n+                    elif isinstance(e, IncompleteRead):\n+                        raise ChunkedEncodingError(e)\n+                    elif isinstance(e, DecodeError):\n+                        raise ContentDecodingError(e)\n             except AttributeError:\n                 # Standard file-like object.\n                 while True:\n", "occurrence": 3, "normalized_patch": "diff --git a/requests/models.py b/requests/models.py\nindex 08abf42..b919a7b 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -324,10 +324,13 @@ class Response(object):\n                 try:\n                     for chunk in self.raw.stream(chunk_size, decode_content=True):\n                         yield chunk\n-                except IncompleteRead as e:\n-                    raise ChunkedEncodingError(e)\n-                except DecodeError as e:\n-                    raise ContentDecodingError(e)\n+                except (IncompleteRead, DecodeError, socket.error) as e:\n+                    if isinstance(e, socket.error):\n+                        raise ConnectionError(e)\n+                    elif isinstance(e, IncompleteRead):\n+                        raise ChunkedEncodingError(e)\n+                    elif isinstance(e, DecodeError):\n+                        raise ContentDecodingError(e)\n             except AttributeError:\n                 while True:\n                     chunk = self.raw.read(chunk_size)\n", "normalized_occurrence": 3}
