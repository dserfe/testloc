{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-11870", "model_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex bd243c1..ae17c08 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -501,16 +501,19 @@ def trigsimp(expr, **opts):\n             return new\n         return trigsimp_groebner(new, **opts)\n \n-    trigsimpfunc = {\n-        'fu': (lambda x: fu(x, **opts)),\n-        'matching': (lambda x: futrig(x)),\n-        'groebner': (lambda x: groebnersimp(x, **opts)),\n-        'combined': (lambda x: futrig(groebnersimp(x,\n-                               polynomial=True, hints=[2, tan]))),\n-        'old': lambda x: trigsimp_old(x, **opts),\n-                   }[method]\n-\n-    return trigsimpfunc(expr)\n+    if method == 'fu':\n+        return fu(expr, **opts)\n+    elif method == 'matching':\n+        expr = futrig(expr)\n+    elif method == 'groebner':\n+        expr = groebnersimp(expr, **opts)\n+    elif method == 'combined':\n+        expr = futrig(groebnersimp(expr, polynomial=True, hints=[2, tan]))\n+    elif method == 'old':\n+        expr = trigsimp_old(expr, **opts)\n+\n+    # Also try exptrigsimp to handle exponential to trigonometric simplification\n+    return exptrigsimp(expr)\n \n \n def exptrigsimp(expr):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex 8c4936d..9e6dc14 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -170,8 +170,17 @@ def trigsimp(expr, **opts):\n         if not isinstance(new, Expr):\n             return new\n         return trigsimp_groebner(new, **opts)\n-    trigsimpfunc = {'fu': lambda x: fu(x, **opts), 'matching': lambda x: futrig(x), 'groebner': lambda x: groebnersimp(x, **opts), 'combined': lambda x: futrig(groebnersimp(x, polynomial=True, hints=[2, tan])), 'old': lambda x: trigsimp_old(x, **opts)}[method]\n-    return trigsimpfunc(expr)\n+    if method == 'fu':\n+        return fu(expr, **opts)\n+    elif method == 'matching':\n+        expr = futrig(expr)\n+    elif method == 'groebner':\n+        expr = groebnersimp(expr, **opts)\n+    elif method == 'combined':\n+        expr = futrig(groebnersimp(expr, polynomial=True, hints=[2, tan]))\n+    elif method == 'old':\n+        expr = trigsimp_old(expr, **opts)\n+    return exptrigsimp(expr)\n def exptrigsimp(expr):\n     from sympy.simplify.fu import hyper_as_trig, TR2i\n     from sympy.simplify.simplify import bottom_up\n", "normalized_occurrence": 1}
