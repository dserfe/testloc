{"model_name_or_path": "agentless", "instance_id": "django__django-15320", "model_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex f1f229b..0490e4f 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -1151,6 +1151,7 @@ class Subquery(BaseExpression, Combinable):\n         # Allow the usage of both QuerySet and sql.Query objects.\n         self.query = getattr(queryset, 'query', queryset)\n         self.extra = extra\n+        self.query.subquery = True\n         super().__init__(output_field)\n \n     def get_source_expressions(self):\n", "occurrence": 23, "normalized_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex a3ee007..476c7a6 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -714,6 +714,7 @@ class Subquery(BaseExpression, Combinable):\n     def __init__(self, queryset, output_field=None, **extra):\n         self.query = getattr(queryset, 'query', queryset)\n         self.extra = extra\n+        self.query.subquery = True\n         super().__init__(output_field)\n     def get_source_expressions(self):\n         return [self.query]\n", "normalized_occurrence": 23}
