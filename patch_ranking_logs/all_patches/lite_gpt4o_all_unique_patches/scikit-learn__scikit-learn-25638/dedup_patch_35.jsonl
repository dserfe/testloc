{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-25638", "model_patch": "diff --git a/sklearn/utils/multiclass.py b/sklearn/utils/multiclass.py\nindex db3f82e..cc0be78 100644\n--- a/sklearn/utils/multiclass.py\n+++ b/sklearn/utils/multiclass.py\n@@ -280,6 +280,15 @@ def type_of_target(y, input_name=\"\"):\n     'multilabel-indicator'\n     \"\"\"\n     xp, is_array_api = get_namespace(y)\n+    \n+    # Handle nullable pandas dtypes\n+    if hasattr(y, \"dtype\") and pd.api.types.is_extension_array_dtype(y.dtype):\n+        if pd.api.types.is_integer_dtype(y.dtype):\n+            y = y.astype(\"Int64\").to_numpy()\n+        elif pd.api.types.is_float_dtype(y.dtype):\n+            y = y.astype(\"Float64\").to_numpy()\n+        elif pd.api.types.is_bool_dtype(y.dtype):\n+            y = y.astype(\"boolean\").to_numpy()\n     valid = (\n         (isinstance(y, Sequence) or issparse(y) or hasattr(y, \"__array__\"))\n         and not isinstance(y, str)\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/utils/multiclass.py b/sklearn/utils/multiclass.py\nindex dee4b2a..8e2e6f3 100644\n--- a/sklearn/utils/multiclass.py\n+++ b/sklearn/utils/multiclass.py\n@@ -65,6 +65,13 @@ def check_classification_targets(y):\n         raise ValueError('Unknown label type: %r' % y_type)\n def type_of_target(y, input_name=''):\n     xp, is_array_api = get_namespace(y)\n+    if hasattr(y, 'dtype') and pd.api.types.is_extension_array_dtype(y.dtype):\n+        if pd.api.types.is_integer_dtype(y.dtype):\n+            y = y.astype('Int64').to_numpy()\n+        elif pd.api.types.is_float_dtype(y.dtype):\n+            y = y.astype('Float64').to_numpy()\n+        elif pd.api.types.is_bool_dtype(y.dtype):\n+            y = y.astype('boolean').to_numpy()\n     valid = (isinstance(y, Sequence) or issparse(y) or hasattr(y, '__array__')) and (not isinstance(y, str)) or is_array_api\n     if not valid:\n         raise ValueError('Expected array-like (array or non-string sequence), got %r' % y)\n", "normalized_occurrence": 1}
