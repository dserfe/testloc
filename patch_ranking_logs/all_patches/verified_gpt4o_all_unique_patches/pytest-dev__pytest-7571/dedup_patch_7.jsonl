{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7571", "model_patch": "diff --git a/src/_pytest/logging.py b/src/_pytest/logging.py\nindex 16efd55..3beffc0 100644\n--- a/src/_pytest/logging.py\n+++ b/src/_pytest/logging.py\n@@ -435,6 +435,7 @@ class LogCaptureFixture:\n         self._initial_logger_levels.setdefault(logger, logger_obj.level)\n         logger_obj.setLevel(level)\n         self.handler.setLevel(level)\n+        request.addfinalizer(self._finalize)\n \n     @contextmanager\n     def at_level(\n@@ -458,6 +459,11 @@ class LogCaptureFixture:\n             self.handler.setLevel(handler_orig_level)\n \n \n+def _finalize(self):\n+    for logger, level in self._initial_logger_levels.items():\n+        logging.getLogger(logger).setLevel(level)\n+    self.handler.setLevel(logging.NOTSET)\n+\n @pytest.fixture\n def caplog(request: FixtureRequest) -> Generator[LogCaptureFixture, None, None]:\n     \"\"\"Access and control log capturing.\n", "occurrence": 2, "normalized_patch": "diff --git a/src/_pytest/logging.py b/src/_pytest/logging.py\nindex 862b163..a186f7d 100644\n--- a/src/_pytest/logging.py\n+++ b/src/_pytest/logging.py\n@@ -192,6 +192,7 @@ class LogCaptureFixture:\n         self._initial_logger_levels.setdefault(logger, logger_obj.level)\n         logger_obj.setLevel(level)\n         self.handler.setLevel(level)\n+        request.addfinalizer(self._finalize)\n     @contextmanager\n     def at_level(self, level: int, logger: Optional[str]=None) -> Generator[None, None, None]:\n         logger_obj = logging.getLogger(logger)\n@@ -204,6 +205,10 @@ class LogCaptureFixture:\n         finally:\n             logger_obj.setLevel(orig_level)\n             self.handler.setLevel(handler_orig_level)\n+def _finalize(self):\n+    for logger, level in self._initial_logger_levels.items():\n+        logging.getLogger(logger).setLevel(level)\n+    self.handler.setLevel(logging.NOTSET)\n @pytest.fixture\n def caplog(request: FixtureRequest) -> Generator[LogCaptureFixture, None, None]:\n     result = LogCaptureFixture(request.node)\n", "normalized_occurrence": 2}
