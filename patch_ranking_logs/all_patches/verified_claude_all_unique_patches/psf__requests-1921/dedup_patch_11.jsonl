{"model_name_or_path": "agentless_claude", "instance_id": "psf__requests-1921", "model_patch": "diff --git a/requests/structures.py b/requests/structures.py\nindex 37202b8..7313baa 100644\n--- a/requests/structures.py\n+++ b/requests/structures.py\n@@ -71,7 +71,11 @@ class CaseInsensitiveDict(collections.MutableMapping):\n     def __setitem__(self, key, value):\n         # Use the lowercased key for lookups, but store the actual\n         # key alongside the value.\n-        self._store[key.lower()] = (key, value)\n+        if value is None:\n+            # If value is None, remove the key\n+            self._store.pop(key.lower(), None)\n+        else:\n+            self._store[key.lower()] = (key, value)\n \n     def __getitem__(self, key):\n         return self._store[key.lower()][1]\n", "occurrence": 17, "normalized_patch": "diff --git a/requests/structures.py b/requests/structures.py\nindex 46a58af..9b8e798 100644\n--- a/requests/structures.py\n+++ b/requests/structures.py\n@@ -22,7 +22,10 @@ class CaseInsensitiveDict(collections.MutableMapping):\n             data = {}\n         self.update(data, **kwargs)\n     def __setitem__(self, key, value):\n-        self._store[key.lower()] = (key, value)\n+        if value is None:\n+            self._store.pop(key.lower(), None)\n+        else:\n+            self._store[key.lower()] = (key, value)\n     def __getitem__(self, key):\n         return self._store[key.lower()][1]\n     def __delitem__(self, key):\n", "normalized_occurrence": 17}
