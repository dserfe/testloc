{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16816", "model_patch": "diff --git a/django/contrib/admin/checks.py b/django/contrib/admin/checks.py\nindex e2f5674..870a703 100644\n--- a/django/contrib/admin/checks.py\n+++ b/django/contrib/admin/checks.py\n@@ -897,6 +897,23 @@ class ModelAdminChecks(BaseModelAdminChecks):\n             return []\n         try:\n             field = obj.model._meta.get_field(item)\n+            # Check if the field exists on the model directly\n+            if not hasattr(obj.model, item) and not any(\n+                f.name == item for f in obj.model._meta.get_fields()\n+            ):\n+                return [\n+                    checks.Error(\n+                        \"The value of '%s' refers to '%s', which is not a field \"\n+                        \"that exists on the '%s' model.\"\n+                        % (\n+                            label,\n+                            item,\n+                            obj.model._meta.label,\n+                        ),\n+                        obj=obj.__class__,\n+                        id=\"admin.E108\",\n+                    )\n+                ]\n         except FieldDoesNotExist:\n             try:\n                 field = getattr(obj.model, item)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/checks.py b/django/contrib/admin/checks.py\nindex 4734fd9..7b3b2ba 100644\n--- a/django/contrib/admin/checks.py\n+++ b/django/contrib/admin/checks.py\n@@ -339,6 +339,8 @@ class ModelAdminChecks(BaseModelAdminChecks):\n             return []\n         try:\n             field = obj.model._meta.get_field(item)\n+            if not hasattr(obj.model, item) and (not any((f.name == item for f in obj.model._meta.get_fields()))):\n+                return [checks.Error(\"The value of '%s' refers to '%s', which is not a field that exists on the '%s' model.\" % (label, item, obj.model._meta.label), obj=obj.__class__, id='admin.E108')]\n         except FieldDoesNotExist:\n             try:\n                 field = getattr(obj.model, item)\n", "normalized_occurrence": 1}
