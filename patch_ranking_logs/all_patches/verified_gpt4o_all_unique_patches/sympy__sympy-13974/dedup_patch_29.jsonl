{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13974", "model_patch": "diff --git a/sympy/physics/quantum/tensorproduct.py b/sympy/physics/quantum/tensorproduct.py\nindex 153c783..eccfbb2 100644\n--- a/sympy/physics/quantum/tensorproduct.py\n+++ b/sympy/physics/quantum/tensorproduct.py\n@@ -239,7 +239,7 @@ class TensorProduct(Expr):\n         return TensorProduct(*[item.doit(**hints) for item in self.args])\n \n     def _eval_expand_tensorproduct(self, **hints):\n-        \"\"\"Distribute TensorProducts across addition.\"\"\"\n+        \"\"\"Distribute TensorProducts across addition and handle powers.\"\"\"\n         args = self.args\n         add_args = []\n         stop = False\n@@ -251,7 +251,11 @@ class TensorProduct(Expr):\n                         tp = tp._eval_expand_tensorproduct()\n                     add_args.append(tp)\n                 break\n-\n+            elif isinstance(args[i], Pow):\n+                base, exp = args[i].args\n+                expanded_base = TensorProduct(*args[:i] + (base,) + args[i + 1:])._eval_expand_tensorproduct()\n+                return TensorProduct(*(expanded_base,) * exp)\n+                    \n         if add_args:\n             return Add(*add_args)\n         else:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/physics/quantum/tensorproduct.py b/sympy/physics/quantum/tensorproduct.py\nindex e23a275..d2e0db7 100644\n--- a/sympy/physics/quantum/tensorproduct.py\n+++ b/sympy/physics/quantum/tensorproduct.py\n@@ -120,6 +120,10 @@ class TensorProduct(Expr):\n                         tp = tp._eval_expand_tensorproduct()\n                     add_args.append(tp)\n                 break\n+            elif isinstance(args[i], Pow):\n+                base, exp = args[i].args\n+                expanded_base = TensorProduct(*args[:i] + (base,) + args[i + 1:])._eval_expand_tensorproduct()\n+                return TensorProduct(*(expanded_base,) * exp)\n         if add_args:\n             return Add(*add_args)\n         else:\n", "normalized_occurrence": 1}
