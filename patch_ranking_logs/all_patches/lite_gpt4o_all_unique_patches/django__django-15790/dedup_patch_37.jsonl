{"model_name_or_path": "agentless", "instance_id": "django__django-15790", "model_patch": "diff --git a/django/template/engine.py b/django/template/engine.py\nindex 85f830a..f5efec0 100644\n--- a/django/template/engine.py\n+++ b/django/template/engine.py\n@@ -121,6 +121,13 @@ class Engine:\n     def get_template_libraries(self, libraries):\n         loaded = {}\n         for name, path in libraries.items():\n+            if name in loaded:\n+                raise ImproperlyConfigured(\n+                    \"'{name}' is used for multiple template tag modules: \"\n+                    \"'{path}' and '{existing_path}'\".format(\n+                        name=name, path=path, existing_path=loaded[name].__name__\n+                    )\n+                )\n             loaded[name] = import_library(path)\n         return loaded\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/template/engine.py b/django/template/engine.py\nindex 9ee461a..3538bba 100644\n--- a/django/template/engine.py\n+++ b/django/template/engine.py\n@@ -57,6 +57,8 @@ class Engine:\n     def get_template_libraries(self, libraries):\n         loaded = {}\n         for name, path in libraries.items():\n+            if name in loaded:\n+                raise ImproperlyConfigured(\"'{name}' is used for multiple template tag modules: '{path}' and '{existing_path}'\".format(name=name, path=path, existing_path=loaded[name].__name__))\n             loaded[name] = import_library(path)\n         return loaded\n     @cached_property\n", "normalized_occurrence": 1}
