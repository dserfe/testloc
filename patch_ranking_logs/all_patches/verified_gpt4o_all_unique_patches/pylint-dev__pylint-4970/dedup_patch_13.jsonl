{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-4970", "model_patch": "diff --git a/pylint/checkers/similar.py b/pylint/checkers/similar.py\nindex 79a566f..3743632 100644\n--- a/pylint/checkers/similar.py\n+++ b/pylint/checkers/similar.py\n@@ -489,6 +489,8 @@ class Similar:\n         # successive common lines, to the corresponding starting and ending number lines in both files\n         all_couples: CplIndexToCplLines_T = {}\n \n+        if self.min_lines == 0:\n+            return\n         for c_hash in sorted(common_hashes, key=operator.attrgetter(\"_index\")):\n             for indices_in_linesets in itertools.product(\n                 hash_to_index_1[c_hash], hash_to_index_2[c_hash]\n@@ -802,6 +804,8 @@ class SimilarChecker(BaseChecker, Similar, MapReduceMixin):\n         BaseChecker.set_option(self, optname, value, action, optdict)\n         if optname == \"min-similarity-lines\":\n             self.min_lines = self.config.min_similarity_lines\n+            if self.min_lines == 0:\n+                self.min_lines = float('inf')\n         elif optname == \"ignore-comments\":\n             self.ignore_comments = self.config.ignore_comments\n         elif optname == \"ignore-docstrings\":\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/checkers/similar.py b/pylint/checkers/similar.py\nindex 0997b2e..3f50e5a 100644\n--- a/pylint/checkers/similar.py\n+++ b/pylint/checkers/similar.py\n@@ -195,6 +195,8 @@ class Similar:\n         hash_2: FrozenSet[LinesChunk] = frozenset(hash_to_index_2.keys())\n         common_hashes: Iterable[LinesChunk] = sorted(hash_1 & hash_2, key=lambda m: hash_to_index_1[m][0])\n         all_couples: CplIndexToCplLines_T = {}\n+        if self.min_lines == 0:\n+            return\n         for c_hash in sorted(common_hashes, key=operator.attrgetter('_index')):\n             for indices_in_linesets in itertools.product(hash_to_index_1[c_hash], hash_to_index_2[c_hash]):\n                 index_1 = indices_in_linesets[0]\n@@ -306,6 +308,8 @@ class SimilarChecker(BaseChecker, Similar, MapReduceMixin):\n         BaseChecker.set_option(self, optname, value, action, optdict)\n         if optname == 'min-similarity-lines':\n             self.min_lines = self.config.min_similarity_lines\n+            if self.min_lines == 0:\n+                self.min_lines = float('inf')\n         elif optname == 'ignore-comments':\n             self.ignore_comments = self.config.ignore_comments\n         elif optname == 'ignore-docstrings':\n", "normalized_occurrence": 1}
