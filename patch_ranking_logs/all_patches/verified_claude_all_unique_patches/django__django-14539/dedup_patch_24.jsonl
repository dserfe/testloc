{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14539", "model_patch": "diff --git a/django/utils/html.py b/django/utils/html.py\nindex 809fc0f..9308a0b 100644\n--- a/django/utils/html.py\n+++ b/django/utils/html.py\n@@ -283,8 +283,16 @@ def urlize(text, trim_url_limit=None, nofollow=False, autoescape=False):\n             middle_unescaped = html.unescape(middle)\n             stripped = middle_unescaped.rstrip(TRAILING_PUNCTUATION_CHARS)\n             if middle_unescaped != stripped:\n-                trail = middle[len(stripped):] + trail\n-                middle = middle[:len(stripped) - len(middle_unescaped)]\n+                # Count the number of trailing punctuation chars\n+                num_trailing = len(middle_unescaped) - len(stripped)\n+                # Work backwards from the end of middle to find the punctuation\n+                orig_len = len(middle)\n+                while num_trailing > 0 and orig_len > 0:\n+                    if html.unescape(middle[orig_len - 1:]) in TRAILING_PUNCTUATION_CHARS:\n+                        trail = middle[orig_len - 1:] + trail\n+                        middle = middle[:orig_len - 1]\n+                        num_trailing -= 1\n+                    orig_len -= 1\n                 trimmed_something = True\n         return lead, middle, trail\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/html.py b/django/utils/html.py\nindex ed1e228..8694382 100644\n--- a/django/utils/html.py\n+++ b/django/utils/html.py\n@@ -121,8 +121,14 @@ def urlize(text, trim_url_limit=None, nofollow=False, autoescape=False):\n             middle_unescaped = html.unescape(middle)\n             stripped = middle_unescaped.rstrip(TRAILING_PUNCTUATION_CHARS)\n             if middle_unescaped != stripped:\n-                trail = middle[len(stripped):] + trail\n-                middle = middle[:len(stripped) - len(middle_unescaped)]\n+                num_trailing = len(middle_unescaped) - len(stripped)\n+                orig_len = len(middle)\n+                while num_trailing > 0 and orig_len > 0:\n+                    if html.unescape(middle[orig_len - 1:]) in TRAILING_PUNCTUATION_CHARS:\n+                        trail = middle[orig_len - 1:] + trail\n+                        middle = middle[:orig_len - 1]\n+                        num_trailing -= 1\n+                    orig_len -= 1\n                 trimmed_something = True\n         return (lead, middle, trail)\n     def is_email_simple(value):\n", "normalized_occurrence": 1}
