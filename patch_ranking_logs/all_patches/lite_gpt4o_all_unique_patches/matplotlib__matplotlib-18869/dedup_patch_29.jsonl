{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-18869", "model_patch": "diff --git a/lib/matplotlib/__init__.py b/lib/matplotlib/__init__.py\nindex 320d1a7..a3cf088 100644\n--- a/lib/matplotlib/__init__.py\n+++ b/lib/matplotlib/__init__.py\n@@ -147,6 +147,12 @@ def __getattr__(name):\n             )\n         else:  # Get the version from the _version.py setuptools_scm file.\n             __version__ = _version.version\n+        version_parts = __version__.split('.')\n+        version_info = tuple(int(part) if part.isdigit() else part for part in version_parts)\n+        globals().update({\n+            \"__version__\": __version__,\n+            \"version_info\": version_info\n+        })\n         return __version__\n     raise AttributeError(f\"module {__name__!r} has no attribute {name!r}\")\n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/__init__.py b/lib/matplotlib/__init__.py\nindex 4b4b135..9c89430 100644\n--- a/lib/matplotlib/__init__.py\n+++ b/lib/matplotlib/__init__.py\n@@ -34,6 +34,9 @@ def __getattr__(name):\n             __version__ = setuptools_scm.get_version(root=root, version_scheme='post-release', local_scheme='node-and-date', fallback_version=_version.version)\n         else:\n             __version__ = _version.version\n+        version_parts = __version__.split('.')\n+        version_info = tuple((int(part) if part.isdigit() else part for part in version_parts))\n+        globals().update({'__version__': __version__, 'version_info': version_info})\n         return __version__\n     raise AttributeError(f'module {__name__!r} has no attribute {name!r}')\n def _check_versions():\n", "normalized_occurrence": 1}
