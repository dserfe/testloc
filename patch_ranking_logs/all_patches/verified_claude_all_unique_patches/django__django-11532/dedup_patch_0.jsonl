{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11532", "model_patch": "diff --git a/django/core/mail/message.py b/django/core/mail/message.py\nindex e5469be..a732ea5 100644\n--- a/django/core/mail/message.py\n+++ b/django/core/mail/message.py\n@@ -63,6 +63,9 @@ def forbid_multi_line_headers(name, val, encoding):\n     except UnicodeEncodeError:\n         if name.lower() in ADDRESS_HEADERS:\n             val = ', '.join(sanitize_address(addr, encoding) for addr in getaddresses((val,)))\n+        elif name.lower() == 'message-id' and hasattr(val, 'encode'):\n+            # Handle Message-ID specially to support DNS_NAME encoding\n+            val = val.encode(encoding)\n         else:\n             val = Header(val, encoding).encode()\n     else:\ndiff --git a/django/core/mail/utils.py b/django/core/mail/utils.py\nindex af5ac38..3ec5808 100644\n--- a/django/core/mail/utils.py\n+++ b/django/core/mail/utils.py\n@@ -1,3 +1,4 @@\n+\n \"\"\"\n Email message and email sending related helper functions.\n \"\"\"\n@@ -16,5 +17,14 @@ class CachedDnsName:\n             self._fqdn = socket.getfqdn()\n         return self._fqdn\n \n+    def encode(self, encoding):\n+        \"\"\"Return the FQDN encoded with the specified encoding.\"\"\"\n+        fqdn = str(self)\n+        # Convert domain to IDNA/punycode if needed\n+        try:\n+            return fqdn.encode('ascii').decode()\n+        except UnicodeEncodeError:\n+            return fqdn.encode('idna').decode('ascii')\n+\n \n-DNS_NAME = CachedDnsName()\n+DNS_NAME = CachedDnsName()\n", "occurrence": 1, "normalized_patch": "--- a/django/core/mail/utils.py\n+++ b/django/core/mail/utils.py\n+    def encode(self, encoding):\n+        fqdn = str(self)\n+        try:\n+            return fqdn.encode('ascii').decode()\n+        except UnicodeEncodeError:\n+            return fqdn.encode('idna').decode('ascii')diff --git a/django/core/mail/message.py b/django/core/mail/message.py\nindex bf67640..7c40c94 100644\n--- a/django/core/mail/message.py\n+++ b/django/core/mail/message.py\n@@ -33,6 +33,8 @@ def forbid_multi_line_headers(name, val, encoding):\n     except UnicodeEncodeError:\n         if name.lower() in ADDRESS_HEADERS:\n             val = ', '.join((sanitize_address(addr, encoding) for addr in getaddresses((val,))))\n+        elif name.lower() == 'message-id' and hasattr(val, 'encode'):\n+            val = val.encode(encoding)\n         else:\n             val = Header(val, encoding).encode()\n     else:\n", "normalized_occurrence": 1}
