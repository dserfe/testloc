{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14539", "model_patch": "diff --git a/django/utils/html.py b/django/utils/html.py\nindex 809fc0f..7e2a476 100644\n--- a/django/utils/html.py\n+++ b/django/utils/html.py\n@@ -283,8 +283,22 @@ def urlize(text, trim_url_limit=None, nofollow=False, autoescape=False):\n             middle_unescaped = html.unescape(middle)\n             stripped = middle_unescaped.rstrip(TRAILING_PUNCTUATION_CHARS)\n             if middle_unescaped != stripped:\n-                trail = middle[len(stripped):] + trail\n-                middle = middle[:len(stripped) - len(middle_unescaped)]\n+                # Count the trailing punctuation characters\n+                punct_count = len(middle_unescaped) - len(stripped)\n+                # Work backwards from the end of middle to find the punctuation\n+                new_middle = middle\n+                for i in range(punct_count):\n+                    # Find the last character or HTML entity\n+                    last_semicolon = new_middle.rfind(';')\n+                    last_amp = new_middle.rfind('&')\n+                    if last_semicolon > last_amp and last_amp != -1:  # HTML entity\n+                        entity_start = last_amp\n+                        trail = new_middle[entity_start:] + trail\n+                        new_middle = new_middle[:entity_start]\n+                    else:  # Regular character\n+                        trail = new_middle[-1:] + trail\n+                        new_middle = new_middle[:-1]\n+                middle = new_middle\n                 trimmed_something = True\n         return lead, middle, trail\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/html.py b/django/utils/html.py\nindex ed1e228..f63e62f 100644\n--- a/django/utils/html.py\n+++ b/django/utils/html.py\n@@ -121,8 +121,19 @@ def urlize(text, trim_url_limit=None, nofollow=False, autoescape=False):\n             middle_unescaped = html.unescape(middle)\n             stripped = middle_unescaped.rstrip(TRAILING_PUNCTUATION_CHARS)\n             if middle_unescaped != stripped:\n-                trail = middle[len(stripped):] + trail\n-                middle = middle[:len(stripped) - len(middle_unescaped)]\n+                punct_count = len(middle_unescaped) - len(stripped)\n+                new_middle = middle\n+                for i in range(punct_count):\n+                    last_semicolon = new_middle.rfind(';')\n+                    last_amp = new_middle.rfind('&')\n+                    if last_semicolon > last_amp and last_amp != -1:\n+                        entity_start = last_amp\n+                        trail = new_middle[entity_start:] + trail\n+                        new_middle = new_middle[:entity_start]\n+                    else:\n+                        trail = new_middle[-1:] + trail\n+                        new_middle = new_middle[:-1]\n+                middle = new_middle\n                 trimmed_something = True\n         return (lead, middle, trail)\n     def is_email_simple(value):\n", "normalized_occurrence": 1}
