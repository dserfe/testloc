{"model_name_or_path": "agentless", "instance_id": "django__django-15278", "model_patch": "diff --git a/django/db/backends/sqlite3/schema.py b/django/db/backends/sqlite3/schema.py\nindex be6e066..8bcb275 100644\n--- a/django/db/backends/sqlite3/schema.py\n+++ b/django/db/backends/sqlite3/schema.py\n@@ -193,6 +193,9 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):\n                 mapping[create_field.column] = self.prepare_default(\n                     self.effective_default(create_field),\n                 )\n+            # Handle unique constraint addition\n+            if create_field.unique:\n+                recreate_table = True\n         # Add in any altered fields\n         if alter_field:\n             old_field, new_field = alter_field\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/sqlite3/schema.py b/django/db/backends/sqlite3/schema.py\nindex fd5121f..83d3a1d 100644\n--- a/django/db/backends/sqlite3/schema.py\n+++ b/django/db/backends/sqlite3/schema.py\n@@ -108,6 +108,8 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):\n             body[create_field.name] = create_field\n             if not create_field.many_to_many and create_field.concrete:\n                 mapping[create_field.column] = self.prepare_default(self.effective_default(create_field))\n+            if create_field.unique:\n+                recreate_table = True\n         if alter_field:\n             old_field, new_field = alter_field\n             body.pop(old_field.name, None)\n", "normalized_occurrence": 1}
