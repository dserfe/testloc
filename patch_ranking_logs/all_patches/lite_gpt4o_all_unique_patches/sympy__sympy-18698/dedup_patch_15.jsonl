{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-18698", "model_patch": "diff --git a/sympy/polys/sqfreetools.py b/sympy/polys/sqfreetools.py\nindex fbdbcb2..64eb930 100644\n--- a/sympy/polys/sqfreetools.py\n+++ b/sympy/polys/sqfreetools.py\n@@ -324,10 +324,12 @@ def dup_sqf_list(f, K, all=False):\n         if not h:\n             result.append((p, i))\n             break\n+            break\n \n         g, p, q = dup_inner_gcd(p, h, K)\n \n         if all or dup_degree(g) > 0:\n+            result.sort(key=lambda x: x[1])  # Sorting to ensure correct order\n             result.append((g, i))\n \n         i += 1\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/sqfreetools.py b/sympy/polys/sqfreetools.py\nindex 09fb2b6..5917d10 100644\n--- a/sympy/polys/sqfreetools.py\n+++ b/sympy/polys/sqfreetools.py\n@@ -113,8 +113,10 @@ def dup_sqf_list(f, K, all=False):\n         if not h:\n             result.append((p, i))\n             break\n+            break\n         g, p, q = dup_inner_gcd(p, h, K)\n         if all or dup_degree(g) > 0:\n+            result.sort(key=lambda x: x[1])\n             result.append((g, i))\n         i += 1\n     return (coeff, result)\n", "normalized_occurrence": 1}
