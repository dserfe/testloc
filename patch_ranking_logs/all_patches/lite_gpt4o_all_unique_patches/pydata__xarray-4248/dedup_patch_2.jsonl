{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-4248", "model_patch": "diff --git a/xarray/core/formatting.py b/xarray/core/formatting.py\nindex 91a7f67..14c423e 100644\n--- a/xarray/core/formatting.py\n+++ b/xarray/core/formatting.py\n@@ -271,6 +271,9 @@ def inline_variable_array_repr(var, max_width):\n def summarize_variable(\n     name: Hashable, var, col_width: int, marker: str = \" \", max_width: int = None\n ):\n+    units = var.attrs.get(\"units\", \"\")\n+    if units:\n+        name = f\"{name}, in {units}\"\n     \"\"\"Summarize a variable in one line, e.g., for the Dataset.__repr__.\"\"\"\n     if max_width is None:\n         max_width_options = OPTIONS[\"display_width\"]\n@@ -310,6 +313,9 @@ def summarize_datavar(name, var, col_width):\n \n \n def summarize_coord(name: Hashable, var, col_width: int):\n+    units = var.attrs.get(\"units\", \"\")\n+    if units:\n+        name = f\"{name}, in {units}\"\n     is_index = name in var.dims\n     marker = \"*\" if is_index else \" \"\n     if is_index:\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/formatting.py b/xarray/core/formatting.py\nindex 6d31a74..be22ca0 100644\n--- a/xarray/core/formatting.py\n+++ b/xarray/core/formatting.py\n@@ -152,6 +152,10 @@ def inline_variable_array_repr(var, max_width):\n     else:\n         return '...'\n def summarize_variable(name: Hashable, var, col_width: int, marker: str=' ', max_width: int=None):\n+    units = var.attrs.get('units', '')\n+    if units:\n+        name = f'{name}, in {units}'\n+    'Summarize a variable in one line, e.g., for the Dataset.__repr__.'\n     if max_width is None:\n         max_width_options = OPTIONS['display_width']\n         if not isinstance(max_width_options, int):\n@@ -175,6 +179,9 @@ def _summarize_coord_levels(coord, col_width, marker='-'):\n def summarize_datavar(name, var, col_width):\n     return summarize_variable(name, var.variable, col_width)\n def summarize_coord(name: Hashable, var, col_width: int):\n+    units = var.attrs.get('units', '')\n+    if units:\n+        name = f'{name}, in {units}'\n     is_index = name in var.dims\n     marker = '*' if is_index else ' '\n     if is_index:\n", "normalized_occurrence": 1}
