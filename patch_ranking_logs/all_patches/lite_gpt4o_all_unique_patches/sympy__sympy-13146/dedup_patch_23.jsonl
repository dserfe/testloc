{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13146", "model_patch": "diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py\nindex 1ed5a09..9bce0de 100644\n--- a/sympy/simplify/simplify.py\n+++ b/sympy/simplify/simplify.py\n@@ -377,7 +377,18 @@ def signsimp(expr, evaluate=None):\n         return e\n     if e.is_Add:\n         return e.func(*[signsimp(a) for a in e.args])\n-    if evaluate:\n+    if e.is_Add:\n+        # Handle cases where terms cancel out due to similar exponents\n+        terms = {}\n+        for term in e.args:\n+            coeff, base = term.as_coeff_Mul()\n+            terms.setdefault(base, []).append(coeff)\n+        simplified_terms = []\n+        for base, coeffs in terms.items():\n+            combined_coeff = sum(coeffs)\n+            if combined_coeff != 0:\n+                simplified_terms.append(combined_coeff * base)\n+        return e.func(*simplified_terms)\n         e = e.xreplace({m: -(-m) for m in e.atoms(Mul) if -(-m) != m})\n     return e\n \n@@ -512,7 +523,7 @@ def simplify(expr, ratio=1.7, measure=count_ops, fu=False):\n     except AttributeError:\n         pass\n \n-    original_expr = expr = signsimp(expr)\n+    original_expr = expr = signsimp(expr) if not expr.is_Add else expr\n \n     from sympy.simplify.hyperexpand import hyperexpand\n     from sympy.functions.special.bessel import BesselBase\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py\nindex 6ee9e94..d84b01b 100644\n--- a/sympy/simplify/simplify.py\n+++ b/sympy/simplify/simplify.py\n@@ -141,7 +141,17 @@ def signsimp(expr, evaluate=None):\n         return e\n     if e.is_Add:\n         return e.func(*[signsimp(a) for a in e.args])\n-    if evaluate:\n+    if e.is_Add:\n+        terms = {}\n+        for term in e.args:\n+            coeff, base = term.as_coeff_Mul()\n+            terms.setdefault(base, []).append(coeff)\n+        simplified_terms = []\n+        for base, coeffs in terms.items():\n+            combined_coeff = sum(coeffs)\n+            if combined_coeff != 0:\n+                simplified_terms.append(combined_coeff * base)\n+        return e.func(*simplified_terms)\n         e = e.xreplace({m: --m for m in e.atoms(Mul) if --m != m})\n     return e\n def simplify(expr, ratio=1.7, measure=count_ops, fu=False):\n@@ -150,7 +160,7 @@ def simplify(expr, ratio=1.7, measure=count_ops, fu=False):\n         return expr._eval_simplify(ratio=ratio, measure=measure)\n     except AttributeError:\n         pass\n-    original_expr = expr = signsimp(expr)\n+    original_expr = expr = signsimp(expr) if not expr.is_Add else expr\n     from sympy.simplify.hyperexpand import hyperexpand\n     from sympy.functions.special.bessel import BesselBase\n     from sympy import Sum, Product\n", "normalized_occurrence": 1}
