{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-25638", "model_patch": "diff --git a/sklearn/utils/multiclass.py b/sklearn/utils/multiclass.py\nindex db3f82e..fb70dc5 100644\n--- a/sklearn/utils/multiclass.py\n+++ b/sklearn/utils/multiclass.py\n@@ -295,6 +295,16 @@ def type_of_target(y, input_name=\"\"):\n     if sparse_pandas:\n         raise ValueError(\"y cannot be class 'SparseSeries' or 'SparseArray'\")\n \n+    # Handle pandas nullable dtypes\n+    if hasattr(y, \"dtype\") and str(y.dtype) in [\"Int64\", \"Float64\", \"boolean\"]:\n+        # Convert to corresponding numpy dtype\n+        dtype_map = {\n+            \"Int64\": \"int64\",\n+            \"Float64\": \"float64\",\n+            \"boolean\": \"bool\"\n+        }\n+        y = y.astype(dtype_map[str(y.dtype)])\n+\n     if is_multilabel(y):\n         return \"multilabel-indicator\"\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/utils/multiclass.py b/sklearn/utils/multiclass.py\nindex dee4b2a..af9284e 100644\n--- a/sklearn/utils/multiclass.py\n+++ b/sklearn/utils/multiclass.py\n@@ -71,6 +71,9 @@ def type_of_target(y, input_name=''):\n     sparse_pandas = y.__class__.__name__ in ['SparseSeries', 'SparseArray']\n     if sparse_pandas:\n         raise ValueError(\"y cannot be class 'SparseSeries' or 'SparseArray'\")\n+    if hasattr(y, 'dtype') and str(y.dtype) in ['Int64', 'Float64', 'boolean']:\n+        dtype_map = {'Int64': 'int64', 'Float64': 'float64', 'boolean': 'bool'}\n+        y = y.astype(dtype_map[str(y.dtype)])\n     if is_multilabel(y):\n         return 'multilabel-indicator'\n     with warnings.catch_warnings():\n", "normalized_occurrence": 1}
