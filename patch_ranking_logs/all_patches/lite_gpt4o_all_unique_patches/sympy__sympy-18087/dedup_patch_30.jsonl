{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-18087", "model_patch": "diff --git a/sympy/functions/elementary/trigonometric.py b/sympy/functions/elementary/trigonometric.py\nindex 5205b6e..e629030 100644\n--- a/sympy/functions/elementary/trigonometric.py\n+++ b/sympy/functions/elementary/trigonometric.py\n@@ -350,6 +350,11 @@ class sin(TrigonometricFunction):\n         if isinstance(arg, atan):\n             x = arg.args[0]\n             return x / sqrt(1 + x**2)\n+        \n+        if isinstance(arg, sqrt):\n+            base = arg.args[0]\n+            if isinstance(base, sin):\n+                return Abs(base)\n \n         if isinstance(arg, atan2):\n             y, x = arg.args\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/trigonometric.py b/sympy/functions/elementary/trigonometric.py\nindex bfdabb3..ef3d21b 100644\n--- a/sympy/functions/elementary/trigonometric.py\n+++ b/sympy/functions/elementary/trigonometric.py\n@@ -198,6 +198,10 @@ class sin(TrigonometricFunction):\n         if isinstance(arg, atan):\n             x = arg.args[0]\n             return x / sqrt(1 + x ** 2)\n+        if isinstance(arg, sqrt):\n+            base = arg.args[0]\n+            if isinstance(base, sin):\n+                return Abs(base)\n         if isinstance(arg, atan2):\n             y, x = arg.args\n             return y / sqrt(x ** 2 + y ** 2)\n", "normalized_occurrence": 1}
