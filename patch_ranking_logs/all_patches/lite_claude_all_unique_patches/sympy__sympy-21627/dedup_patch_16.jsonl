{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-21627", "model_patch": "diff --git a/sympy/functions/elementary/hyperbolic.py b/sympy/functions/elementary/hyperbolic.py\nindex db125b2..b24c7e2 100644\n--- a/sympy/functions/elementary/hyperbolic.py\n+++ b/sympy/functions/elementary/hyperbolic.py\n@@ -499,6 +499,23 @@ class cosh(HyperbolicFunction):\n         arg = self.args[0]\n         return arg.is_finite\n \n+    def _eval_is_zero(self):\n+        from sympy import pi, I, Mod\n+        arg = self.args[0]\n+        # cosh(x) = 0 iff x = i\u03c0/2 + 2\u03c0in where n is an integer\n+        if arg.is_extended_real:\n+            return False\n+        # Try to identify if arg has the form i\u03c0/2 + 2\u03c0in\n+        if arg.is_Add:\n+            args = arg.args\n+            for a in args:\n+                if a == pi*I/2:\n+                    # The remaining terms should be multiples of 2\u03c0i\n+                    diff = arg - pi*I/2\n+                    if diff.is_zero or (diff/(2*pi*I)).is_integer:\n+                        return True\n+        return None\n+\n \n class tanh(HyperbolicFunction):\n     r\"\"\"\n", "occurrence": 1, "normalized_patch": "--- a/sympy/functions/elementary/hyperbolic.py\n+++ b/sympy/functions/elementary/hyperbolic.py\n+    def _eval_is_zero(self):\n+        from sympy import pi, I, Mod\n+        arg = self.args[0]\n+        if arg.is_extended_real:\n+            return False\n+        if arg.is_Add:\n+            args = arg.args\n+            for a in args:\n+                if a == pi * I / 2:\n+                    diff = arg - pi * I / 2\n+                    if diff.is_zero or (diff / (2 * pi * I)).is_integer:\n+                        return True\n+        return None", "normalized_occurrence": 1}
