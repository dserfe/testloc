{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15498", "model_patch": "diff --git a/django/middleware/http.py b/django/middleware/http.py\nindex 2ea6e03..4102ce9 100644\n--- a/django/middleware/http.py\n+++ b/django/middleware/http.py\n@@ -22,6 +22,7 @@ class ConditionalGetMiddleware(MiddlewareMixin):\n \n         etag = response.get(\"ETag\")\n         last_modified = response.get(\"Last-Modified\")\n+        last_modified = last_modified.strip() if last_modified else None\n         last_modified = last_modified and parse_http_date_safe(last_modified)\n \n         if etag or last_modified:\n@@ -37,4 +38,4 @@ class ConditionalGetMiddleware(MiddlewareMixin):\n     def needs_etag(self, response):\n         \"\"\"Return True if an ETag header should be added to response.\"\"\"\n         cache_control_headers = cc_delim_re.split(response.get(\"Cache-Control\", \"\"))\n-        return all(header.lower() != \"no-store\" for header in cache_control_headers)\n+        return all(header.lower() != \"no-store\" for header in cache_control_headers)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/middleware/http.py b/django/middleware/http.py\nindex c9afcfa..ccbed37 100644\n--- a/django/middleware/http.py\n+++ b/django/middleware/http.py\n@@ -9,6 +9,7 @@ class ConditionalGetMiddleware(MiddlewareMixin):\n             set_response_etag(response)\n         etag = response.get('ETag')\n         last_modified = response.get('Last-Modified')\n+        last_modified = last_modified.strip() if last_modified else None\n         last_modified = last_modified and parse_http_date_safe(last_modified)\n         if etag or last_modified:\n             return get_conditional_response(request, etag=etag, last_modified=last_modified, response=response)\n", "normalized_occurrence": 1}
