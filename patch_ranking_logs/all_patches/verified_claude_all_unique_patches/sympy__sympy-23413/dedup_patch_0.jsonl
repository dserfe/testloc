{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-23413", "model_patch": "diff --git a/sympy/matrices/normalforms.py b/sympy/matrices/normalforms.py\nindex d5302ed..3d9f56a 100644\n--- a/sympy/matrices/normalforms.py\n+++ b/sympy/matrices/normalforms.py\n@@ -124,4 +124,15 @@ def hermite_normal_form(A, *, D=None, check_rank=False):\n     # Accept any of Python int, SymPy Integer, and ZZ itself:\n     if D is not None and not ZZ.of_type(D):\n         D = ZZ(int(D))\n-    return _hnf(A._rep, D=D, check_rank=check_rank).to_Matrix()\n+    \n+    # Preserve original matrix shape when not explicitly checking rank\n+    if not check_rank:\n+        original_shape = A.shape\n+        result = _hnf(A._rep, D=D, check_rank=False).to_Matrix()\n+        if result.shape[0] < original_shape[0]:\n+            # Pad with zero rows if needed to maintain shape\n+            zero_rows = Matrix.zeros(original_shape[0] - result.shape[0], result.shape[1])\n+            result = result.vstack(zero_rows)\n+        return result\n+    \n+    return _hnf(A._rep, D=D, check_rank=check_rank).to_Matrix()\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/normalforms.py b/sympy/matrices/normalforms.py\nindex a9e46e4..153c9f4 100644\n--- a/sympy/matrices/normalforms.py\n+++ b/sympy/matrices/normalforms.py\n@@ -26,4 +26,11 @@ def invariant_factors(m, domain=None):\n def hermite_normal_form(A, *, D=None, check_rank=False):\n     if D is not None and (not ZZ.of_type(D)):\n         D = ZZ(int(D))\n+    if not check_rank:\n+        original_shape = A.shape\n+        result = _hnf(A._rep, D=D, check_rank=False).to_Matrix()\n+        if result.shape[0] < original_shape[0]:\n+            zero_rows = Matrix.zeros(original_shape[0] - result.shape[0], result.shape[1])\n+            result = result.vstack(zero_rows)\n+        return result\n     return _hnf(A._rep, D=D, check_rank=check_rank).to_Matrix()\n\\ No newline at end of file\n", "normalized_occurrence": 1}
