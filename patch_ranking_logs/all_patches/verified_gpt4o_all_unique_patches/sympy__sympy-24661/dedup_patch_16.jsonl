{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-24661", "model_patch": "diff --git a/sympy/parsing/sympy_parser.py b/sympy/parsing/sympy_parser.py\nindex 2ec3cf6..0f1ca5e 100644\n--- a/sympy/parsing/sympy_parser.py\n+++ b/sympy/parsing/sympy_parser.py\n@@ -1079,6 +1079,8 @@ def parse_expr(s: str, local_dict: Optional[DICT] = None,\n         # restore neutral definitions for names\n         for i in local_dict.pop(null, ()):\n             local_dict[i] = null\n+        if isinstance(rv, Relational):\n+            rv = rv.func(rv.lhs, rv.rhs, evaluate=evaluate)\n         return rv\n     except Exception as e:\n         # restore neutral definitions for names\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/parsing/sympy_parser.py b/sympy/parsing/sympy_parser.py\nindex 0c06cf1..c7cd58f 100644\n--- a/sympy/parsing/sympy_parser.py\n+++ b/sympy/parsing/sympy_parser.py\n@@ -516,6 +516,8 @@ def parse_expr(s: str, local_dict: Optional[DICT]=None, transformations: tUnion[\n         rv = eval_expr(code, local_dict, global_dict)\n         for i in local_dict.pop(null, ()):\n             local_dict[i] = null\n+        if isinstance(rv, Relational):\n+            rv = rv.func(rv.lhs, rv.rhs, evaluate=evaluate)\n         return rv\n     except Exception as e:\n         for i in local_dict.pop(null, ()):\n", "normalized_occurrence": 1}
