{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11532", "model_patch": "diff --git a/django/core/mail/utils.py b/django/core/mail/utils.py\nindex af5ac38..64207c7 100644\n--- a/django/core/mail/utils.py\n+++ b/django/core/mail/utils.py\n@@ -1,8 +1,10 @@\n+\n \"\"\"\n Email message and email sending related helper functions.\n \"\"\"\n \n import socket\n+import idna\n \n \n # Cache the hostname, but do it lazily: socket.getfqdn() can take a couple of\n@@ -14,7 +16,10 @@ class CachedDnsName:\n     def get_fqdn(self):\n         if not hasattr(self, '_fqdn'):\n             self._fqdn = socket.getfqdn()\n+        # Convert domain to punycode if it contains non-ASCII characters\n+        if any(ord(c) > 127 for c in self._fqdn):\n+            return idna.encode(self._fqdn).decode('ascii')\n         return self._fqdn\n \n \n-DNS_NAME = CachedDnsName()\n+DNS_NAME = CachedDnsName()\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/mail/utils.py b/django/core/mail/utils.py\nindex f3d6156..71ecf3c 100644\n--- a/django/core/mail/utils.py\n+++ b/django/core/mail/utils.py\n@@ -1,9 +1,12 @@\n import socket\n+import idna\n class CachedDnsName:\n     def __str__(self):\n         return self.get_fqdn()\n     def get_fqdn(self):\n         if not hasattr(self, '_fqdn'):\n             self._fqdn = socket.getfqdn()\n+        if any((ord(c) > 127 for c in self._fqdn)):\n+            return idna.encode(self._fqdn).decode('ascii')\n         return self._fqdn\n DNS_NAME = CachedDnsName()\n\\ No newline at end of file\n", "normalized_occurrence": 1}
