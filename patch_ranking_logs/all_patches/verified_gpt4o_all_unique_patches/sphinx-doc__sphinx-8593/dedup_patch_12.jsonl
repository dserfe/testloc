{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8593", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex c412096..671a66f 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -728,6 +728,9 @@ class Documenter:\n \n             has_doc = bool(doc)\n \n+            if not doc and isinstance(member, Variable):\n+                doc = getattr(member, '__doc__', None)\n+\n             metadata = extract_metadata(doc)\n             if 'private' in metadata:\n                 # consider a member private if docstring has \"private\" metadata\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex f71844a..90d0004 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -378,6 +378,8 @@ class Documenter:\n             if isinstance(obj, ObjectMember) and obj.docstring:\n                 doc = obj.docstring\n             has_doc = bool(doc)\n+            if not doc and isinstance(member, Variable):\n+                doc = getattr(member, '__doc__', None)\n             metadata = extract_metadata(doc)\n             if 'private' in metadata:\n                 isprivate = True\n", "normalized_occurrence": 1}
