{"model_name_or_path": "agentless", "instance_id": "django__django-15957", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 5314293..5d6abee 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -1573,6 +1573,10 @@ class QuerySet:\n                         \"prefetch_related() is not supported with FilteredRelation.\"\n                     )\n             clone._prefetch_related_lookups = clone._prefetch_related_lookups + lookups\n+        # Check for slicing in any of the Prefetch objects and raise a ValueError if found\n+        for lookup in lookups:\n+            if isinstance(lookup, Prefetch) and hasattr(lookup.queryset, '_has_slice') and lookup.queryset._has_slice:\n+                raise ValueError(\"prefetch_related() with sliced querysets is not supported.\")\n         return clone\n \n     def annotate(self, *args, **kwargs):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex cb06696..0bab2f8 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -842,6 +842,9 @@ class QuerySet:\n                 if lookup in self.query._filtered_relations:\n                     raise ValueError('prefetch_related() is not supported with FilteredRelation.')\n             clone._prefetch_related_lookups = clone._prefetch_related_lookups + lookups\n+        for lookup in lookups:\n+            if isinstance(lookup, Prefetch) and hasattr(lookup.queryset, '_has_slice') and lookup.queryset._has_slice:\n+                raise ValueError('prefetch_related() with sliced querysets is not supported.')\n         return clone\n     def annotate(self, *args, **kwargs):\n         self._not_support_combined_queries('annotate')\n", "normalized_occurrence": 1}
