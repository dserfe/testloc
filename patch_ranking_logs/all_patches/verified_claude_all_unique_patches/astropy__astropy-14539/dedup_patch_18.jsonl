{"model_name_or_path": "agentless_claude", "instance_id": "astropy__astropy-14539", "model_patch": "diff --git a/astropy/io/fits/diff.py b/astropy/io/fits/diff.py\nindex 0a08301..71e1f3b 100644\n--- a/astropy/io/fits/diff.py\n+++ b/astropy/io/fits/diff.py\n@@ -1450,14 +1450,12 @@ class TableDataDiff(_BaseDiff):\n             ):\n                 diffs = where_not_allclose(arra, arrb, rtol=self.rtol, atol=self.atol)\n             elif \"P\" in col.format:\n-                diffs = (\n-                    [\n-                        idx\n+                # For variable-length arrays, create a mask of rows with differences\n+                diffs = np.where(\n+                    np.array([\n+                        not np.array_equal(arra[idx], arrb[idx])\n                         for idx in range(len(arra))\n-                        if not np.allclose(\n-                            arra[idx], arrb[idx], rtol=self.rtol, atol=self.atol\n-                        )\n-                    ],\n+                    ])\n                 )\n             else:\n                 diffs = np.where(arra != arrb)\n", "normalized_patch": "diff --git a/astropy/io/fits/diff.py b/astropy/io/fits/diff.py\nindex 0555397..24d7563 100644\n--- a/astropy/io/fits/diff.py\n+++ b/astropy/io/fits/diff.py\n@@ -519,7 +519,7 @@ class TableDataDiff(_BaseDiff):\n             if np.issubdtype(arra.dtype, np.floating) and np.issubdtype(arrb.dtype, np.floating):\n                 diffs = where_not_allclose(arra, arrb, rtol=self.rtol, atol=self.atol)\n             elif 'P' in col.format:\n-                diffs = ([idx for idx in range(len(arra)) if not np.allclose(arra[idx], arrb[idx], rtol=self.rtol, atol=self.atol)],)\n+                diffs = np.where(np.array([not np.array_equal(arra[idx], arrb[idx]) for idx in range(len(arra))]))\n             else:\n                 diffs = np.where(arra != arrb)\n             self.diff_total += len(set(diffs[0]))\n", "normalized_occurrence": 1}
