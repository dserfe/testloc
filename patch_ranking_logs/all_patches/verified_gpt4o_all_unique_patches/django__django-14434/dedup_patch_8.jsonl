{"model_name_or_path": "agentless", "instance_id": "django__django-14434", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 9591387..44725a9 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1592,7 +1592,7 @@ class Query(BaseExpression):\n         def final_transformer(field, alias):\n             if not self.alias_cols:\n                 alias = None\n-            return field.get_col(alias)\n+            return field.get_col(alias.name if hasattr(alias, 'name') else alias)\n \n         # Try resolving all the names as fields first. If there's an error,\n         # treat trailing names as lookups until a field can be resolved.\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex ec726d6..fcdf3cd 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -854,7 +854,7 @@ class Query(BaseExpression):\n         def final_transformer(field, alias):\n             if not self.alias_cols:\n                 alias = None\n-            return field.get_col(alias)\n+            return field.get_col(alias.name if hasattr(alias, 'name') else alias)\n         last_field_exception = None\n         for pivot in range(len(names), 0, -1):\n             try:\n", "normalized_occurrence": 1}
