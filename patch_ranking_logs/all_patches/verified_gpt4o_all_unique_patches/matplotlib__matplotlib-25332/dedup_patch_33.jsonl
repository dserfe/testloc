{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25332", "model_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 973eb1a..bd46232 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -3164,7 +3164,12 @@ None}, default: None\n         # re-attached to another.\n         state.pop(\"canvas\")\n \n-        # discard any changes to the dpi due to pixel ratio changes\n+        # Remove weak references to allow pickling\n+        if \"_align_label_groups\" in state:\n+            state[\"_align_label_groups\"] = {\n+                k: [ax for ax in v if ax() is not None]\n+                for k, v in state[\"_align_label_groups\"].items()\n+            }\n         state[\"_dpi\"] = state.get('_original_dpi', state['_dpi'])\n \n         # add version information to the state\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 7796fb8..d34de46 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -946,6 +946,8 @@ class Figure(FigureBase):\n     def __getstate__(self):\n         state = super().__getstate__()\n         state.pop('canvas')\n+        if '_align_label_groups' in state:\n+            state['_align_label_groups'] = {k: [ax for ax in v if ax() is not None] for k, v in state['_align_label_groups'].items()}\n         state['_dpi'] = state.get('_original_dpi', state['_dpi'])\n         state['__mpl_version__'] = mpl.__version__\n         from matplotlib import _pylab_helpers\n", "normalized_occurrence": 1}
