{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15202", "model_patch": "diff --git a/django/forms/fields.py b/django/forms/fields.py\nindex b31d0ed..87b26b0 100644\n--- a/django/forms/fields.py\n+++ b/django/forms/fields.py\n@@ -679,18 +679,28 @@ class URLField(CharField):\n         super().__init__(strip=True, **kwargs)\n \n     def to_python(self, value):\n-\n-        def split_url(url):\n-            \"\"\"\n-            Return a list of url parts via urlparse.urlsplit(), or raise\n-            ValidationError for some malformed URLs.\n-            \"\"\"\n+        value = super().to_python(value)\n+        if value:\n             try:\n-                return list(urlsplit(url))\n+                url_fields = list(urlsplit(value))\n+                if not url_fields[0]:\n+                    # If no URL scheme given, assume http://\n+                    url_fields[0] = 'http'\n+                if not url_fields[1]:\n+                    # Assume that if no domain is provided, that the path segment\n+                    # contains the domain.\n+                    url_fields[1] = url_fields[2]\n+                    url_fields[2] = ''\n+                    # Rebuild the url_fields list, since the domain segment may now\n+                    # contain the path too.\n+                    try:\n+                        url_fields = list(urlsplit(urlunsplit(url_fields)))\n+                    except ValueError:\n+                        raise ValidationError(self.error_messages['invalid'], code='invalid')\n+                value = urlunsplit(url_fields)\n             except ValueError:\n-                # urlparse.urlsplit can raise a ValueError with some\n-                # misformatted URLs.\n                 raise ValidationError(self.error_messages['invalid'], code='invalid')\n+        return value\n \n         value = super().to_python(value)\n         if value:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/fields.py b/django/forms/fields.py\nindex 8548471..89b1cb6 100644\n--- a/django/forms/fields.py\n+++ b/django/forms/fields.py\n@@ -403,11 +403,23 @@ class URLField(CharField):\n     def __init__(self, **kwargs):\n         super().__init__(strip=True, **kwargs)\n     def to_python(self, value):\n-        def split_url(url):\n+        value = super().to_python(value)\n+        if value:\n             try:\n-                return list(urlsplit(url))\n+                url_fields = list(urlsplit(value))\n+                if not url_fields[0]:\n+                    url_fields[0] = 'http'\n+                if not url_fields[1]:\n+                    url_fields[1] = url_fields[2]\n+                    url_fields[2] = ''\n+                    try:\n+                        url_fields = list(urlsplit(urlunsplit(url_fields)))\n+                    except ValueError:\n+                        raise ValidationError(self.error_messages['invalid'], code='invalid')\n+                value = urlunsplit(url_fields)\n             except ValueError:\n                 raise ValidationError(self.error_messages['invalid'], code='invalid')\n+        return value\n         value = super().to_python(value)\n         if value:\n             url_fields = split_url(value)\n", "normalized_occurrence": 1}
