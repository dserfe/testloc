{"model_name_or_path": "agentless", "instance_id": "django__django-12273", "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 07c5013..fe3c51a 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -787,7 +787,7 @@ class Model(metaclass=ModelBase):\n         # Store the database on which the object was saved\n         self._state.db = using\n         # Once saved, this is no longer a to-be-added instance.\n-        self._state.adding = False\n+        self._state.adding = pk_val is None\n \n         # Signal that the save is complete\n         if not meta.auto_created:\n@@ -843,7 +843,7 @@ class Model(metaclass=ModelBase):\n         if pk_val is None:\n             pk_val = meta.pk.get_pk_value_on_save(self)\n             setattr(self, meta.pk.attname, pk_val)\n-        pk_set = pk_val is not None\n+        pk_set = pk_val is not None or force_insert\n         if not pk_set and (force_update or update_fields):\n             raise ValueError(\"Cannot force an update in save() with no primary key.\")\n         updated = False\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 9dcf0cd..291a234 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -425,7 +425,7 @@ class Model(metaclass=ModelBase):\n                 parent_inserted = self._save_parents(cls, using, update_fields)\n             updated = self._save_table(raw, cls, force_insert or parent_inserted, force_update, using, update_fields)\n         self._state.db = using\n-        self._state.adding = False\n+        self._state.adding = pk_val is None\n         if not meta.auto_created:\n             post_save.send(sender=origin, instance=self, created=not updated, update_fields=update_fields, raw=raw, using=using)\n     save_base.alters_data = True\n@@ -453,7 +453,7 @@ class Model(metaclass=ModelBase):\n         if pk_val is None:\n             pk_val = meta.pk.get_pk_value_on_save(self)\n             setattr(self, meta.pk.attname, pk_val)\n-        pk_set = pk_val is not None\n+        pk_set = pk_val is not None or force_insert\n         if not pk_set and (force_update or update_fields):\n             raise ValueError('Cannot force an update in save() with no primary key.')\n         updated = False\n", "normalized_occurrence": 1}
