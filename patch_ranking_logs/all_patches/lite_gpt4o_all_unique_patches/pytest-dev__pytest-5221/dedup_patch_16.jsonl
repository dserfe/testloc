{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-5221", "model_patch": "diff --git a/src/_pytest/fixtures.py b/src/_pytest/fixtures.py\nindex 8772615..e609eba 100644\n--- a/src/_pytest/fixtures.py\n+++ b/src/_pytest/fixtures.py\n@@ -1199,6 +1199,10 @@ class FixtureManager(object):\n                     arg2fixturedefs[argname] = fixturedefs\n                     merge(fixturedefs[-1].argnames)\n \n+        def format_fixture_info(fixturedef):\n+            scope = fixturedef.scope\n+            return f\"{fixturedef.func.__name__} [scope: {scope}]\"\n+\n         def sort_by_scope(arg_name):\n             try:\n                 fixturedefs = arg2fixturedefs[arg_name]\n@@ -1207,6 +1211,16 @@ class FixtureManager(object):\n             else:\n                 return fixturedefs[-1].scopenum\n \n+        def format_fixture_info(fixturedef):\n+            scope = fixturedef.scope\n+            return f\"{fixturedef.func.__name__} [scope: {scope}]\"\n+            try:\n+                fixturedefs = arg2fixturedefs[arg_name]\n+            except KeyError:\n+                return scopes.index(\"function\")\n+            else:\n+                return fixturedefs[-1].scopenum\n+\n         fixturenames_closure.sort(key=sort_by_scope)\n         return initialnames, fixturenames_closure, arg2fixturedefs\n \n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/fixtures.py b/src/_pytest/fixtures.py\nindex f3fbe6f..e83894a 100644\n--- a/src/_pytest/fixtures.py\n+++ b/src/_pytest/fixtures.py\n@@ -684,6 +684,9 @@ class FixtureManager(object):\n                 if fixturedefs:\n                     arg2fixturedefs[argname] = fixturedefs\n                     merge(fixturedefs[-1].argnames)\n+        def format_fixture_info(fixturedef):\n+            scope = fixturedef.scope\n+            return f'{fixturedef.func.__name__} [scope: {scope}]'\n         def sort_by_scope(arg_name):\n             try:\n                 fixturedefs = arg2fixturedefs[arg_name]\n@@ -691,6 +694,15 @@ class FixtureManager(object):\n                 return scopes.index('function')\n             else:\n                 return fixturedefs[-1].scopenum\n+        def format_fixture_info(fixturedef):\n+            scope = fixturedef.scope\n+            return f'{fixturedef.func.__name__} [scope: {scope}]'\n+            try:\n+                fixturedefs = arg2fixturedefs[arg_name]\n+            except KeyError:\n+                return scopes.index('function')\n+            else:\n+                return fixturedefs[-1].scopenum\n         fixturenames_closure.sort(key=sort_by_scope)\n         return (initialnames, fixturenames_closure, arg2fixturedefs)\n     def pytest_generate_tests(self, metafunc):\n", "normalized_occurrence": 1}
