{"model_name_or_path": "agentless", "instance_id": "psf__requests-863", "model_patch": "diff --git a/requests/models.py b/requests/models.py\nindex bc1c443..cbe4016 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -141,15 +141,22 @@ class Request(object):\n         self.sent = False\n \n         #: Event-handling hooks.\n-        self.hooks = {}\n+        self.hooks = {event: [] for event in HOOKS}\n \n-        for event in HOOKS:\n-            self.hooks[event] = []\n-\n-        hooks = hooks or {}\n+        if hooks is not None:\n+            for k, v in hooks.items():\n+                if isinstance(v, list):\n+                    for hook in v:\n+                        self.register_hook(event=k, hook=hook)\n+                else:\n+                    self.register_hook(event=k, hook=v)\n \n-        for (k, v) in list(hooks.items()):\n-            self.register_hook(event=k, hook=v)\n+        for (k, v) in hooks.items():\n+            if isinstance(v, list):\n+                for hook in v:\n+                    self.register_hook(event=k, hook=hook)\n+            else:\n+                self.register_hook(event=k, hook=v)\n \n         #: Session.\n         self.session = session\n", "occurrence": 1, "normalized_patch": "diff --git a/requests/models.py b/requests/models.py\nindex ec9ed1c..6adb658 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -52,12 +52,20 @@ class Request(object):\n         else:\n             self.cookies = cookiejar_from_dict(cookies)\n         self.sent = False\n-        self.hooks = {}\n-        for event in HOOKS:\n-            self.hooks[event] = []\n-        hooks = hooks or {}\n-        for k, v in list(hooks.items()):\n-            self.register_hook(event=k, hook=v)\n+        self.hooks = {event: [] for event in HOOKS}\n+        if hooks is not None:\n+            for k, v in hooks.items():\n+                if isinstance(v, list):\n+                    for hook in v:\n+                        self.register_hook(event=k, hook=hook)\n+                else:\n+                    self.register_hook(event=k, hook=v)\n+        for k, v in hooks.items():\n+            if isinstance(v, list):\n+                for hook in v:\n+                    self.register_hook(event=k, hook=hook)\n+            else:\n+                self.register_hook(event=k, hook=v)\n         self.session = session\n         self.verify = verify\n         self.cert = cert\n", "normalized_occurrence": 1}
