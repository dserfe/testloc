{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-26208", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex f9613d3..e5f87cd 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -3635,6 +3635,13 @@ class _AxesBase(martist.Artist):\n             if right is not None:\n                 raise TypeError(\"Cannot pass both 'right' and 'xmax'\")\n             right = xmax\n+            \n+        # Don't allow infinite limits when sharing axes\n+        if self in self._shared_axes[\"x\"]:\n+            if left == -np.inf and right == np.inf:\n+                # Keep existing limits if trying to set to ±inf\n+                left, right = self.get_xlim()\n+                \n         return self.xaxis._set_lim(left, right, emit=emit, auto=auto)\n \n     get_xscale = _axis_method_wrapper(\"xaxis\", \"get_scale\")\n@@ -3866,6 +3873,13 @@ class _AxesBase(martist.Artist):\n             if top is not None:\n                 raise TypeError(\"Cannot pass both 'top' and 'ymax'\")\n             top = ymax\n+            \n+        # Don't allow infinite limits when sharing axes\n+        if self in self._shared_axes[\"y\"]:\n+            if bottom == -np.inf and top == np.inf:\n+                # Keep existing limits if trying to set to ±inf\n+                bottom, top = self.get_ylim()\n+                \n         return self.yaxis._set_lim(bottom, top, emit=emit, auto=auto)\n \n     get_yscale = _axis_method_wrapper(\"yaxis\", \"get_scale\")\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex eb9da84..6faf4a6 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1411,6 +1411,9 @@ class _AxesBase(martist.Artist):\n             if right is not None:\n                 raise TypeError(\"Cannot pass both 'right' and 'xmax'\")\n             right = xmax\n+        if self in self._shared_axes['x']:\n+            if left == -np.inf and right == np.inf:\n+                left, right = self.get_xlim()\n         return self.xaxis._set_lim(left, right, emit=emit, auto=auto)\n     get_xscale = _axis_method_wrapper('xaxis', 'get_scale')\n     set_xscale = _axis_method_wrapper('xaxis', '_set_axes_scale')\n@@ -1467,6 +1470,9 @@ class _AxesBase(martist.Artist):\n             if top is not None:\n                 raise TypeError(\"Cannot pass both 'top' and 'ymax'\")\n             top = ymax\n+        if self in self._shared_axes['y']:\n+            if bottom == -np.inf and top == np.inf:\n+                bottom, top = self.get_ylim()\n         return self.yaxis._set_lim(bottom, top, emit=emit, auto=auto)\n     get_yscale = _axis_method_wrapper('yaxis', 'get_scale')\n     set_yscale = _axis_method_wrapper('yaxis', '_set_axes_scale')\n", "normalized_occurrence": 1}
