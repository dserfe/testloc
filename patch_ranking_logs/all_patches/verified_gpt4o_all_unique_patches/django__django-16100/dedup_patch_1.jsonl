{"model_name_or_path": "agentless", "instance_id": "django__django-16100", "model_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 32995ac..19a5b59 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -1921,8 +1921,10 @@ class ModelAdmin(BaseModelAdmin):\n         if not self.has_view_or_change_permission(request):\n             raise PermissionDenied\n \n+        from django.db import transaction\n         try:\n-            cl = self.get_changelist_instance(request)\n+            with transaction.atomic():\n+                cl = self.get_changelist_instance(request)\n         except IncorrectLookupParameters:\n             # Wacky lookup parameters were given, so redirect to the main\n             # changelist page, without parameters, and pass an 'invalid=1'\n@@ -2006,30 +2008,31 @@ class ModelAdmin(BaseModelAdmin):\n             modified_objects = self._get_list_editable_queryset(\n                 request, FormSet.get_default_prefix()\n             )\n-            formset = cl.formset = FormSet(\n-                request.POST, request.FILES, queryset=modified_objects\n-            )\n-            if formset.is_valid():\n-                changecount = 0\n-                for form in formset.forms:\n-                    if form.has_changed():\n-                        obj = self.save_form(request, form, change=True)\n-                        self.save_model(request, obj, form, change=True)\n-                        self.save_related(request, form, formsets=[], change=True)\n-                        change_msg = self.construct_change_message(request, form, None)\n-                        self.log_change(request, obj, change_msg)\n-                        changecount += 1\n-\n-                if changecount:\n-                    msg = ngettext(\n-                        \"%(count)s %(name)s was changed successfully.\",\n-                        \"%(count)s %(name)s were changed successfully.\",\n-                        changecount,\n-                    ) % {\n-                        \"count\": changecount,\n-                        \"name\": model_ngettext(self.opts, changecount),\n-                    }\n-                    self.message_user(request, msg, messages.SUCCESS)\n+            with transaction.atomic():\n+                formset = cl.formset = FormSet(\n+                    request.POST, request.FILES, queryset=modified_objects\n+                )\n+                if formset.is_valid():\n+                    changecount = 0\n+                    for form in formset.forms:\n+                        if form.has_changed():\n+                            obj = self.save_form(request, form, change=True)\n+                            self.save_model(request, obj, form, change=True)\n+                            self.save_related(request, form, formsets=[], change=True)\n+                            change_msg = self.construct_change_message(request, form, None)\n+                            self.log_change(request, obj, change_msg)\n+                            changecount += 1\n+\n+                    if changecount:\n+                        msg = ngettext(\n+                            \"%(count)s %(name)s was changed successfully.\",\n+                            \"%(count)s %(name)s were changed successfully.\",\n+                            changecount,\n+                        ) % {\n+                            \"count\": changecount,\n+                            \"name\": model_ngettext(self.opts, changecount),\n+                        }\n+                        self.message_user(request, msg, messages.SUCCESS)\n \n                 return HttpResponseRedirect(request.get_full_path())\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 6c1421c..1a21cc5 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -818,8 +818,10 @@ class ModelAdmin(BaseModelAdmin):\n         app_label = self.opts.app_label\n         if not self.has_view_or_change_permission(request):\n             raise PermissionDenied\n+        from django.db import transaction\n         try:\n-            cl = self.get_changelist_instance(request)\n+            with transaction.atomic():\n+                cl = self.get_changelist_instance(request)\n         except IncorrectLookupParameters:\n             if ERROR_FLAG in request.GET:\n                 return SimpleTemplateResponse('admin/invalid_setup.html', {'title': _('Database error')})\n@@ -853,20 +855,21 @@ class ModelAdmin(BaseModelAdmin):\n                 raise PermissionDenied\n             FormSet = self.get_changelist_formset(request)\n             modified_objects = self._get_list_editable_queryset(request, FormSet.get_default_prefix())\n-            formset = cl.formset = FormSet(request.POST, request.FILES, queryset=modified_objects)\n-            if formset.is_valid():\n-                changecount = 0\n-                for form in formset.forms:\n-                    if form.has_changed():\n-                        obj = self.save_form(request, form, change=True)\n-                        self.save_model(request, obj, form, change=True)\n-                        self.save_related(request, form, formsets=[], change=True)\n-                        change_msg = self.construct_change_message(request, form, None)\n-                        self.log_change(request, obj, change_msg)\n-                        changecount += 1\n-                if changecount:\n-                    msg = ngettext('%(count)s %(name)s was changed successfully.', '%(count)s %(name)s were changed successfully.', changecount) % {'count': changecount, 'name': model_ngettext(self.opts, changecount)}\n-                    self.message_user(request, msg, messages.SUCCESS)\n+            with transaction.atomic():\n+                formset = cl.formset = FormSet(request.POST, request.FILES, queryset=modified_objects)\n+                if formset.is_valid():\n+                    changecount = 0\n+                    for form in formset.forms:\n+                        if form.has_changed():\n+                            obj = self.save_form(request, form, change=True)\n+                            self.save_model(request, obj, form, change=True)\n+                            self.save_related(request, form, formsets=[], change=True)\n+                            change_msg = self.construct_change_message(request, form, None)\n+                            self.log_change(request, obj, change_msg)\n+                            changecount += 1\n+                    if changecount:\n+                        msg = ngettext('%(count)s %(name)s was changed successfully.', '%(count)s %(name)s were changed successfully.', changecount) % {'count': changecount, 'name': model_ngettext(self.opts, changecount)}\n+                        self.message_user(request, msg, messages.SUCCESS)\n                 return HttpResponseRedirect(request.get_full_path())\n         elif cl.list_editable and self.has_change_permission(request):\n             FormSet = self.get_changelist_formset(request)\n", "normalized_occurrence": 1}
