{"model_name_or_path": "agentless", "instance_id": "django__django-15278", "model_patch": "diff --git a/django/db/backends/sqlite3/schema.py b/django/db/backends/sqlite3/schema.py\nindex be6e066..2657604 100644\n--- a/django/db/backends/sqlite3/schema.py\n+++ b/django/db/backends/sqlite3/schema.py\n@@ -330,7 +330,11 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):\n         if not field.null or self.effective_default(field) is not None:\n             self._remake_table(model, create_field=field)\n         else:\n-            super().add_field(model, field)\n+            # SQLite does not support adding a UNIQUE column with NULL values.\n+            if field.unique:\n+                self._remake_table(model, create_field=field)\n+            else:\n+                super().add_field(model, field)\n \n     def remove_field(self, model, field):\n         \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/sqlite3/schema.py b/django/db/backends/sqlite3/schema.py\nindex fd5121f..0d6f523 100644\n--- a/django/db/backends/sqlite3/schema.py\n+++ b/django/db/backends/sqlite3/schema.py\n@@ -163,6 +163,8 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):\n     def add_field(self, model, field):\n         if not field.null or self.effective_default(field) is not None:\n             self._remake_table(model, create_field=field)\n+        elif field.unique:\n+            self._remake_table(model, create_field=field)\n         else:\n             super().add_field(model, field)\n     def remove_field(self, model, field):\n", "normalized_occurrence": 2}
