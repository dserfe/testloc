{"model_name_or_path": "agentless_claude", "instance_id": "pylint-dev__pylint-7114", "model_patch": "diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py\nindex 6517a9e..28b48b9 100644\n--- a/pylint/lint/pylinter.py\n+++ b/pylint/lint/pylinter.py\n@@ -588,9 +588,7 @@ class PyLinter(\n         Returns iterator of paths to discovered modules and packages.\n         \"\"\"\n         for something in files_or_modules:\n-            if os.path.isdir(something) and not os.path.isfile(\n-                os.path.join(something, \"__init__.py\")\n-            ):\n+            if os.path.isdir(something):\n                 skip_subtrees: list[str] = []\n                 for root, _, files in os.walk(something):\n                     if any(root.startswith(s) for s in skip_subtrees):\n@@ -606,10 +604,17 @@ class PyLinter(\n                         skip_subtrees.append(root)\n                         continue\n \n-                    if \"__init__.py\" in files:\n+                    # Consider a directory a package if it either:\n+                    # 1. Has an __init__.py (traditional package)\n+                    # 2. Contains Python modules (namespace package)\n+                    has_init = \"__init__.py\" in files\n+                    has_py_files = any(f.endswith(\".py\") for f in files)\n+                    \n+                    if has_init or has_py_files:\n                         skip_subtrees.append(root)\n                         yield root\n-                    else:\n+                    \n+                    if not has_init:\n                         yield from (\n                             os.path.join(root, file)\n                             for file in files\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py\nindex 6a01a21..79633be 100644\n--- a/pylint/lint/pylinter.py\n+++ b/pylint/lint/pylinter.py\n@@ -225,7 +225,7 @@ class PyLinter(_ArgumentsManager, _MessageStateHandler, reporters.ReportsHandler\n                 self._msgs_state[msg.msgid] = False\n     def _discover_files(self, files_or_modules: Sequence[str]) -> Iterator[str]:\n         for something in files_or_modules:\n-            if os.path.isdir(something) and (not os.path.isfile(os.path.join(something, '__init__.py'))):\n+            if os.path.isdir(something):\n                 skip_subtrees: list[str] = []\n                 for root, _, files in os.walk(something):\n                     if any((root.startswith(s) for s in skip_subtrees)):\n@@ -233,10 +233,12 @@ class PyLinter(_ArgumentsManager, _MessageStateHandler, reporters.ReportsHandler\n                     if _is_ignored_file(root, self.config.ignore, self.config.ignore_patterns, self.config.ignore_paths):\n                         skip_subtrees.append(root)\n                         continue\n-                    if '__init__.py' in files:\n+                    has_init = '__init__.py' in files\n+                    has_py_files = any((f.endswith('.py') for f in files))\n+                    if has_init or has_py_files:\n                         skip_subtrees.append(root)\n                         yield root\n-                    else:\n+                    if not has_init:\n                         yield from (os.path.join(root, file) for file in files if file.endswith('.py'))\n             else:\n                 yield something\n", "normalized_occurrence": 1}
