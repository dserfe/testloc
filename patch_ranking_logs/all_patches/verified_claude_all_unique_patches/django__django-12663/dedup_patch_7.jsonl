{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12663", "model_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex 141497c..7871514 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -803,7 +803,7 @@ class Field(RegisterLookupMixin):\n     def get_prep_value(self, value):\n         \"\"\"Perform preliminary non-db specific value checks and conversions.\"\"\"\n         if isinstance(value, Promise):\n-            value = value._proxy____cast()\n+            value = value._wrapped\n         return value\n \n     def get_db_prep_value(self, value, connection, prepared=False):\n", "occurrence": 7, "normalized_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex 0ec64fa..69417c0 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -362,7 +362,7 @@ class Field(RegisterLookupMixin):\n         return getattr(model_instance, self.attname)\n     def get_prep_value(self, value):\n         if isinstance(value, Promise):\n-            value = value._proxy____cast()\n+            value = value._wrapped\n         return value\n     def get_db_prep_value(self, value, connection, prepared=False):\n         if not prepared:\n", "normalized_occurrence": 7}
