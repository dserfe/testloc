{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-13142", "model_patch": "diff --git a/sklearn/mixture/base.py b/sklearn/mixture/base.py\nindex a853e4a..ee191bb 100644\n--- a/sklearn/mixture/base.py\n+++ b/sklearn/mixture/base.py\n@@ -188,7 +188,10 @@ class BaseMixture(DensityMixin, BaseEstimator, metaclass=ABCMeta):\n         -------\n         self\n         \"\"\"\n-        self.fit_predict(X, y)\n+        self.fit(X)\n+        # Perform a final E-step to ensure consistency with fit_predict\n+        _, log_resp = self._e_step(X)\n+        return log_resp.argmax(axis=1)\n         return self\n \n     def fit_predict(self, X, y=None):\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/mixture/base.py b/sklearn/mixture/base.py\nindex 9518b16..e37a89e 100644\n--- a/sklearn/mixture/base.py\n+++ b/sklearn/mixture/base.py\n@@ -62,7 +62,9 @@ class BaseMixture(DensityMixin, BaseEstimator, metaclass=ABCMeta):\n     def _initialize(self, X, resp):\n         pass\n     def fit(self, X, y=None):\n-        self.fit_predict(X, y)\n+        self.fit(X)\n+        _, log_resp = self._e_step(X)\n+        return log_resp.argmax(axis=1)\n         return self\n     def fit_predict(self, X, y=None):\n         X = _check_X(X, self.n_components, ensure_min_samples=2)\n", "normalized_occurrence": 1}
