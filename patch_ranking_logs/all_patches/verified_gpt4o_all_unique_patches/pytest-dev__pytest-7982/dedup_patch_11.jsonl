{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7982", "model_patch": "diff --git a/src/_pytest/main.py b/src/_pytest/main.py\nindex e00a6f3..bfc5a95 100644\n--- a/src/_pytest/main.py\n+++ b/src/_pytest/main.py\n@@ -517,7 +517,7 @@ class Session(nodes.FSCollector):\n         return proxy\n \n     def _recurse(self, direntry: \"os.DirEntry[str]\") -> bool:\n-        if direntry.name == \"__pycache__\":\n+        if direntry.name == \"__pycache__\" or (direntry.is_symlink() and not direntry.is_dir()):\n             return False\n         path = py.path.local(direntry.path)\n         ihook = self.gethookproxy(path.dirpath())\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/main.py b/src/_pytest/main.py\nindex df5c6f0..f57757d 100644\n--- a/src/_pytest/main.py\n+++ b/src/_pytest/main.py\n@@ -305,7 +305,7 @@ class Session(nodes.FSCollector):\n         return proxy\n \n     def _recurse(self, direntry: 'os.DirEntry[str]') -> bool:\n-        if direntry.name == '__pycache__':\n+        if direntry.name == '__pycache__' or (direntry.is_symlink() and (not direntry.is_dir())):\n             return False\n         path = py.path.local(direntry.path)\n         ihook = self.gethookproxy(path.dirpath())\n", "normalized_occurrence": 1}
