{"model_name_or_path": "agentless", "instance_id": "mwaskom__seaborn-3187", "model_patch": "diff --git a/seaborn/_core/scales.py b/seaborn/_core/scales.py\nindex 609c102..d1c6ccc 100644\n--- a/seaborn/_core/scales.py\n+++ b/seaborn/_core/scales.py\n@@ -379,7 +379,10 @@ class ContinuousBase(Scale):\n             locs = axis.major.locator()\n             locs = locs[(vmin <= locs) & (locs <= vmax)]\n             labels = axis.major.formatter.format_ticks(locs)\n-            new._legend = list(locs), list(labels)\n+            offset_text = axis.get_major_formatter().get_offset()\n+            if offset_text:\n+                labels = [f\"{label} {offset_text}\" for label in labels]\n+            new._legend = list(locs), labels\n \n         return new\n \n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/_core/scales.py b/seaborn/_core/scales.py\nindex ff6da17..0fc8f7a 100644\n--- a/seaborn/_core/scales.py\n+++ b/seaborn/_core/scales.py\n@@ -179,7 +179,10 @@ class ContinuousBase(Scale):\n             locs = axis.major.locator()\n             locs = locs[(vmin <= locs) & (locs <= vmax)]\n             labels = axis.major.formatter.format_ticks(locs)\n-            new._legend = (list(locs), list(labels))\n+            offset_text = axis.get_major_formatter().get_offset()\n+            if offset_text:\n+                labels = [f'{label} {offset_text}' for label in labels]\n+            new._legend = (list(locs), labels)\n         return new\n     def _get_transform(self):\n         arg = self.trans\n", "normalized_occurrence": 1}
