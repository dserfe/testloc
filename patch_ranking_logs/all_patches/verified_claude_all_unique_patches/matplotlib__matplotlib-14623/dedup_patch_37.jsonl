{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-14623", "model_patch": "diff --git a/lib/matplotlib/transforms.py b/lib/matplotlib/transforms.py\nindex ebf1196..d55f77f 100644\n--- a/lib/matplotlib/transforms.py\n+++ b/lib/matplotlib/transforms.py\n@@ -2819,10 +2819,9 @@ def nonsingular(vmin, vmax, expander=0.001, tiny=1e-15, increasing=True):\n     if (not np.isfinite(vmin)) or (not np.isfinite(vmax)):\n         return -expander, expander\n \n-    swapped = False\n-    if vmax < vmin:\n-        vmin, vmax = vmax, vmin\n-        swapped = True\n+    if increasing:\n+        if vmax < vmin:\n+            vmin, vmax = vmax, vmin\n \n     maxabsvalue = max(abs(vmin), abs(vmax))\n     if maxabsvalue < (1e6 / tiny) * np.finfo(float).tiny:\n@@ -2837,7 +2836,7 @@ def nonsingular(vmin, vmax, expander=0.001, tiny=1e-15, increasing=True):\n             vmin -= expander*abs(vmin)\n             vmax += expander*abs(vmax)\n \n-    if swapped and not increasing:\n+    if not increasing:\n         vmin, vmax = vmax, vmin\n     return vmin, vmax\n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/transforms.py b/lib/matplotlib/transforms.py\nindex 6dcd40d..c51e140 100644\n--- a/lib/matplotlib/transforms.py\n+++ b/lib/matplotlib/transforms.py\n@@ -1155,10 +1155,9 @@ class TransformedPatchPath(TransformedPath):\n def nonsingular(vmin, vmax, expander=0.001, tiny=1e-15, increasing=True):\n     if not np.isfinite(vmin) or not np.isfinite(vmax):\n         return (-expander, expander)\n-    swapped = False\n-    if vmax < vmin:\n-        vmin, vmax = (vmax, vmin)\n-        swapped = True\n+    if increasing:\n+        if vmax < vmin:\n+            vmin, vmax = (vmax, vmin)\n     maxabsvalue = max(abs(vmin), abs(vmax))\n     if maxabsvalue < 1000000.0 / tiny * np.finfo(float).tiny:\n         vmin = -expander\n@@ -1170,7 +1169,7 @@ def nonsingular(vmin, vmax, expander=0.001, tiny=1e-15, increasing=True):\n         else:\n             vmin -= expander * abs(vmin)\n             vmax += expander * abs(vmax)\n-    if swapped and (not increasing):\n+    if not increasing:\n         vmin, vmax = (vmax, vmin)\n     return (vmin, vmax)\n def interval_contains(interval, val):\n", "normalized_occurrence": 1}
