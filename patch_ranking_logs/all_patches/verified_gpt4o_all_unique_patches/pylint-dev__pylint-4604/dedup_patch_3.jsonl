{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-4604", "model_patch": "diff --git a/pylint/checkers/imports.py b/pylint/checkers/imports.py\nindex 7e31505..42f0fb5 100644\n--- a/pylint/checkers/imports.py\n+++ b/pylint/checkers/imports.py\n@@ -565,6 +565,15 @@ class ImportsChecker(DeprecatedMixin, BaseChecker):\n         if isinstance(node.scope(), astroid.Module):\n             self._record_import(node, imported_module)\n         if imported_module is None:\n+            continue\n+\n+        # Check if the import is used in type comments\n+        if any(isinstance(ann, astroid.Const) and ann.value == name for ann in node.root().get_children() if isinstance(ann, astroid.Expr) and isinstance(ann.value, astroid.Const)):\n+            continue\n+            return\n+\n+        # Check if the import is used in type comments\n+        if any(isinstance(ann, astroid.Const) and ann.value == basename for ann in node.root().get_children() if isinstance(ann, astroid.Expr) and isinstance(ann.value, astroid.Const)):\n             return\n         for name, _ in node.names:\n             if name != \"*\":\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/checkers/imports.py b/pylint/checkers/imports.py\nindex 1045c62..539b4bb 100644\n--- a/pylint/checkers/imports.py\n+++ b/pylint/checkers/imports.py\n@@ -201,6 +201,11 @@ class ImportsChecker(DeprecatedMixin, BaseChecker):\n         if isinstance(node.scope(), astroid.Module):\n             self._record_import(node, imported_module)\n         if imported_module is None:\n+            continue\n+        if any((isinstance(ann, astroid.Const) and ann.value == name for ann in node.root().get_children() if isinstance(ann, astroid.Expr) and isinstance(ann.value, astroid.Const))):\n+            continue\n+            return\n+        if any((isinstance(ann, astroid.Const) and ann.value == basename for ann in node.root().get_children() if isinstance(ann, astroid.Expr) and isinstance(ann.value, astroid.Const))):\n             return\n         for name, _ in node.names:\n             if name != '*':\n", "normalized_occurrence": 1}
