{"model_name_or_path": "agentless", "instance_id": "django__django-15382", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex f1dd4d7..d2a6748 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -1103,10 +1103,16 @@ class QuerySet:\n         return clone\n \n     def _filter_or_exclude_inplace(self, negate, args, kwargs):\n-        if negate:\n-            self._query.add_q(~Q(*args, **kwargs))\n-        else:\n-            self._query.add_q(Q(*args, **kwargs))\n+        try:\n+            if negate:\n+                self._query.add_q(~Q(*args, **kwargs))\n+            else:\n+                self._query.add_q(Q(*args, **kwargs))\n+        except EmptyResultSet:\n+            if negate:\n+                self._query.add_q(Q(pk__isnull=False))\n+            else:\n+                self._query.add_q(Q(pk__isnull=True))\n \n     def complex_filter(self, filter_obj):\n         \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 7a9c02b..8bc79c0 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -639,10 +639,16 @@ class QuerySet:\n             clone._filter_or_exclude_inplace(negate, args, kwargs)\n         return clone\n     def _filter_or_exclude_inplace(self, negate, args, kwargs):\n-        if negate:\n-            self._query.add_q(~Q(*args, **kwargs))\n-        else:\n-            self._query.add_q(Q(*args, **kwargs))\n+        try:\n+            if negate:\n+                self._query.add_q(~Q(*args, **kwargs))\n+            else:\n+                self._query.add_q(Q(*args, **kwargs))\n+        except EmptyResultSet:\n+            if negate:\n+                self._query.add_q(Q(pk__isnull=False))\n+            else:\n+                self._query.add_q(Q(pk__isnull=True))\n     def complex_filter(self, filter_obj):\n         if isinstance(filter_obj, Q):\n             clone = self._chain()\n", "normalized_occurrence": 1}
