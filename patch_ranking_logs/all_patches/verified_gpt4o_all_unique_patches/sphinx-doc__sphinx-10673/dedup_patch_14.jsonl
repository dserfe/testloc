{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-10673", "model_patch": "diff --git a/sphinx/environment/adapters/toctree.py b/sphinx/environment/adapters/toctree.py\nindex 52ac0d3..0c997ae 100644\n--- a/sphinx/environment/adapters/toctree.py\n+++ b/sphinx/environment/adapters/toctree.py\n@@ -172,7 +172,11 @@ class TocTree:\n                     else:\n                         message = __('toctree contains reference to nonexisting document %r')\n \n-                    logger.warning(message, ref, location=toctreenode)\n+                    # special case for known automatic documents\n+                    if ref in {'genindex', 'modindex', 'search'}:\n+                        pass\n+                    else:\n+                        logger.warning(message, ref, location=toctreenode)\n                 else:\n                     # if titles_only is given, only keep the main title and\n                     # sub-toctrees\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/environment/adapters/toctree.py b/sphinx/environment/adapters/toctree.py\nindex 07fcee3..b74ae46 100644\n--- a/sphinx/environment/adapters/toctree.py\n+++ b/sphinx/environment/adapters/toctree.py\n@@ -92,7 +92,10 @@ class TocTree:\n                         message = __('toctree contains reference to non-included document %r')\n                     else:\n                         message = __('toctree contains reference to nonexisting document %r')\n-                    logger.warning(message, ref, location=toctreenode)\n+                    if ref in {'genindex', 'modindex', 'search'}:\n+                        pass\n+                    else:\n+                        logger.warning(message, ref, location=toctreenode)\n                 else:\n                     if titles_only:\n                         children = cast(Iterable[nodes.Element], toc)\n", "normalized_occurrence": 1}
