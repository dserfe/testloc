{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12774", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 398c1d7..f516e80 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -689,7 +689,18 @@ class QuerySet:\n         \"\"\"\n         assert not self.query.is_sliced, \\\n             \"Cannot use 'limit' or 'offset' with in_bulk\"\n-        if field_name != 'pk' and not self.model._meta.get_field(field_name).unique:\n+        if field_name == 'pk':\n+            return_unique = True\n+        else:\n+            field = self.model._meta.get_field(field_name)\n+            return_unique = field.unique\n+            if not return_unique:\n+                # Check if the field is unique via a UniqueConstraint\n+                for constraint in self.model._meta.total_unique_constraints:\n+                    if constraint.fields == (field_name,):\n+                        return_unique = True\n+                        break\n+        if not return_unique:\n             raise ValueError(\"in_bulk()'s field_name must be a unique field but %r isn't.\" % field_name)\n         if id_list is not None:\n             if not id_list:\n", "occurrence": 4, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 0586bad..da9bec1 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -417,7 +417,17 @@ class QuerySet:\n             return obj\n     def in_bulk(self, id_list=None, *, field_name='pk'):\n         assert not self.query.is_sliced, \"Cannot use 'limit' or 'offset' with in_bulk\"\n-        if field_name != 'pk' and (not self.model._meta.get_field(field_name).unique):\n+        if field_name == 'pk':\n+            return_unique = True\n+        else:\n+            field = self.model._meta.get_field(field_name)\n+            return_unique = field.unique\n+            if not return_unique:\n+                for constraint in self.model._meta.total_unique_constraints:\n+                    if constraint.fields == (field_name,):\n+                        return_unique = True\n+                        break\n+        if not return_unique:\n             raise ValueError(\"in_bulk()'s field_name must be a unique field but %r isn't.\" % field_name)\n         if id_list is not None:\n             if not id_list:\n", "normalized_occurrence": 5}
