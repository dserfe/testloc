{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-14995", "model_patch": "diff --git a/astropy/nddata/mixins/ndarithmetic.py b/astropy/nddata/mixins/ndarithmetic.py\nindex fbb2aba..ebdcbf4 100644\n--- a/astropy/nddata/mixins/ndarithmetic.py\n+++ b/astropy/nddata/mixins/ndarithmetic.py\n@@ -524,7 +524,16 @@ class NDArithmeticMixin:\n             return deepcopy(self.mask)\n         else:\n             # Now lets calculate the resulting mask (operation enforces copy)\n-            return handle_mask(self.mask, operand.mask, **kwds)\n+            mask1 = self.mask\n+            mask2 = operand.mask\n+\n+            # Ensure both masks are not None\n+            if mask1 is None:\n+                mask1 = np.zeros_like(mask2)\n+            if mask2 is None:\n+                mask2 = np.zeros_like(mask1)\n+\n+            return handle_mask(mask1, mask2, **kwds)\n \n     def _arithmetic_wcs(self, operation, operand, compare_wcs, **kwds):\n         \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/nddata/mixins/ndarithmetic.py b/astropy/nddata/mixins/ndarithmetic.py\nindex b7eb663..d59899a 100644\n--- a/astropy/nddata/mixins/ndarithmetic.py\n+++ b/astropy/nddata/mixins/ndarithmetic.py\n@@ -119,7 +119,13 @@ class NDArithmeticMixin:\n         elif operand is None:\n             return deepcopy(self.mask)\n         else:\n-            return handle_mask(self.mask, operand.mask, **kwds)\n+            mask1 = self.mask\n+            mask2 = operand.mask\n+            if mask1 is None:\n+                mask1 = np.zeros_like(mask2)\n+            if mask2 is None:\n+                mask2 = np.zeros_like(mask1)\n+            return handle_mask(mask1, mask2, **kwds)\n     def _arithmetic_wcs(self, operation, operand, compare_wcs, **kwds):\n         if not compare_wcs(self.wcs, operand.wcs, **kwds):\n             raise ValueError('WCS are not equal.')\n", "normalized_occurrence": 1}
