{"model_name_or_path": "agentless", "instance_id": "django__django-14999", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 165c6f5..ea6bf06 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -317,6 +317,9 @@ class RenameModel(ModelOperation):\n         state.rename_model(app_label, self.old_name, self.new_name)\n \n     def database_forwards(self, app_label, schema_editor, from_state, to_state):\n+        old_model = from_state.apps.get_model(app_label, self.old_name)\n+        if old_model._meta.db_table == self.db_table:\n+            return\n         new_model = to_state.apps.get_model(app_label, self.new_name)\n         if self.allow_migrate_model(schema_editor.connection.alias, new_model):\n             old_model = from_state.apps.get_model(app_label, self.old_name)\n@@ -368,11 +371,17 @@ class RenameModel(ModelOperation):\n                 )\n \n     def database_backwards(self, app_label, schema_editor, from_state, to_state):\n+        old_model = from_state.apps.get_model(app_label, self.old_name)\n+        if old_model._meta.db_table == self.db_table:\n+            return\n         self.new_name_lower, self.old_name_lower = self.old_name_lower, self.new_name_lower\n         self.new_name, self.old_name = self.old_name, self.new_name\n \n         self.database_forwards(app_label, schema_editor, from_state, to_state)\n \n+        old_model = from_state.apps.get_model(app_label, self.old_name)\n+        if old_model._meta.db_table == self.db_table:\n+            return\n         self.new_name_lower, self.old_name_lower = self.old_name_lower, self.new_name_lower\n         self.new_name, self.old_name = self.old_name, self.new_name\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 8445d8b..139adb1 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -149,6 +149,9 @@ class RenameModel(ModelOperation):\n     def state_forwards(self, app_label, state):\n         state.rename_model(app_label, self.old_name, self.new_name)\n     def database_forwards(self, app_label, schema_editor, from_state, to_state):\n+        old_model = from_state.apps.get_model(app_label, self.old_name)\n+        if old_model._meta.db_table == self.db_table:\n+            return\n         new_model = to_state.apps.get_model(app_label, self.new_name)\n         if self.allow_migrate_model(schema_editor.connection.alias, new_model):\n             old_model = from_state.apps.get_model(app_label, self.old_name)\n@@ -171,9 +174,15 @@ class RenameModel(ModelOperation):\n                 schema_editor.alter_db_table(new_m2m_model, old_m2m_model._meta.db_table, new_m2m_model._meta.db_table)\n                 schema_editor.alter_field(new_m2m_model, old_m2m_model._meta.get_field(old_model._meta.model_name), new_m2m_model._meta.get_field(new_model._meta.model_name))\n     def database_backwards(self, app_label, schema_editor, from_state, to_state):\n+        old_model = from_state.apps.get_model(app_label, self.old_name)\n+        if old_model._meta.db_table == self.db_table:\n+            return\n         self.new_name_lower, self.old_name_lower = (self.old_name_lower, self.new_name_lower)\n         self.new_name, self.old_name = (self.old_name, self.new_name)\n         self.database_forwards(app_label, schema_editor, from_state, to_state)\n+        old_model = from_state.apps.get_model(app_label, self.old_name)\n+        if old_model._meta.db_table == self.db_table:\n+            return\n         self.new_name_lower, self.old_name_lower = (self.old_name_lower, self.new_name_lower)\n         self.new_name, self.old_name = (self.old_name, self.new_name)\n     def references_model(self, name, app_label):\n", "normalized_occurrence": 1}
