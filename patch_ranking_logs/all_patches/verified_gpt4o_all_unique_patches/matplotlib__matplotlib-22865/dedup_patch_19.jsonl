{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-22865", "model_patch": "diff --git a/lib/matplotlib/colorbar.py b/lib/matplotlib/colorbar.py\nindex 5ebeaf9..8636441 100644\n--- a/lib/matplotlib/colorbar.py\n+++ b/lib/matplotlib/colorbar.py\n@@ -749,7 +749,8 @@ class Colorbar:\n             color = self.cmap(self.norm(self._values[val]))\n             patch = mpatches.PathPatch(\n                 mpath.Path(xy), facecolor=color,\n-                linewidth=0, antialiased=False,\n+                linewidth=1 if self.drawedges else 0, antialiased=False,\n+                edgecolor='black' if self.drawedges else 'none',\n                 transform=self.ax.transAxes, hatch=hatches[-1], clip_on=False,\n                 # Place it right behind the standard patches, which is\n                 # needed if we updated the extends\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/colorbar.py b/lib/matplotlib/colorbar.py\nindex eb4d80e..c7721b4 100644\n--- a/lib/matplotlib/colorbar.py\n+++ b/lib/matplotlib/colorbar.py\n@@ -314,7 +314,7 @@ class Colorbar:\n                 xy = xy[:, ::-1]\n             val = 0 if self._long_axis().get_inverted() else -1\n             color = self.cmap(self.norm(self._values[val]))\n-            patch = mpatches.PathPatch(mpath.Path(xy), facecolor=color, linewidth=0, antialiased=False, transform=self.ax.transAxes, hatch=hatches[-1], clip_on=False, zorder=np.nextafter(self.ax.patch.zorder, -np.inf))\n+            patch = mpatches.PathPatch(mpath.Path(xy), facecolor=color, linewidth=1 if self.drawedges else 0, antialiased=False, edgecolor='black' if self.drawedges else 'none', transform=self.ax.transAxes, hatch=hatches[-1], clip_on=False, zorder=np.nextafter(self.ax.patch.zorder, -np.inf))\n             self.ax.add_patch(patch)\n             self._extend_patches.append(patch)\n         return\n", "normalized_occurrence": 1}
