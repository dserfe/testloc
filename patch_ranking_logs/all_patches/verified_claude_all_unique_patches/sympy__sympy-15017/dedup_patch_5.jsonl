{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-15017", "model_patch": "diff --git a/sympy/tensor/array/ndim_array.py b/sympy/tensor/array/ndim_array.py\nindex 0b1a18b..2fc8eae 100644\n--- a/sympy/tensor/array/ndim_array.py\n+++ b/sympy/tensor/array/ndim_array.py\n@@ -174,8 +174,13 @@ class NDimArray(object):\n         >>> len(a)\n         9\n \n+        For rank-0 arrays (scalars), returns 1:\n+        >>> from sympy import Array\n+        >>> len(Array(3))\n+        1\n+\n         \"\"\"\n-        return self._loop_size\n+        return max(1, self._loop_size)\n \n     @property\n     def shape(self):\n", "occurrence": 2, "normalized_patch": "diff --git a/sympy/tensor/array/ndim_array.py b/sympy/tensor/array/ndim_array.py\nindex a3ef23c..7dc1380 100644\n--- a/sympy/tensor/array/ndim_array.py\n+++ b/sympy/tensor/array/ndim_array.py\n@@ -78,7 +78,7 @@ class NDimArray(object):\n             raise TypeError('Shape should contain integers only.')\n         return (tuple(shape), iterable)\n     def __len__(self):\n-        return self._loop_size\n+        return max(1, self._loop_size)\n     @property\n     def shape(self):\n         return self._shape\n", "normalized_occurrence": 4}
