{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12125", "model_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex 824ab10..3333c5f 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -90,7 +90,19 @@ class DeconstructableSerializer(BaseSerializer):\n \n     @staticmethod\n     def _serialize_path(path):\n-        module, name = path.rsplit(\".\", 1)\n+        # Split into the module path and class path\n+        parts = path.split('.')\n+        \n+        # Find the first part that's not a module (starts with uppercase)\n+        for i, part in enumerate(parts):\n+            if part[0].isupper():\n+                module = '.'.join(parts[:i])\n+                name = '.'.join(parts[i:])\n+                break\n+        else:\n+            # Fallback to old behavior if no uppercase part found\n+            module, name = path.rsplit(\".\", 1)\n+            \n         if module == \"django.db.models\":\n             imports = {\"from django.db import models\"}\n             name = \"models.%s\" % name\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex d663baf..bd415aa 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -68,7 +68,14 @@ class DeconstructableSerializer(BaseSerializer):\n         return ('%s(%s)' % (name, ', '.join(strings)), imports)\n     @staticmethod\n     def _serialize_path(path):\n-        module, name = path.rsplit('.', 1)\n+        parts = path.split('.')\n+        for i, part in enumerate(parts):\n+            if part[0].isupper():\n+                module = '.'.join(parts[:i])\n+                name = '.'.join(parts[i:])\n+                break\n+        else:\n+            module, name = path.rsplit('.', 1)\n         if module == 'django.db.models':\n             imports = {'from django.db import models'}\n             name = 'models.%s' % name\n", "normalized_occurrence": 1}
