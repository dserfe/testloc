{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-23413", "model_patch": "diff --git a/sympy/matrices/reductions.py b/sympy/matrices/reductions.py\nindex aec23b1..2a247ee 100644\n--- a/sympy/matrices/reductions.py\n+++ b/sympy/matrices/reductions.py\n@@ -235,8 +235,7 @@ def _rank(M, iszerofunc=_iszero, simplify=False):\n         if iszerofunc(d) is False:\n             return 2\n \n-    mat, _       = _permute_complexity_right(M, iszerofunc=iszerofunc)\n-    _, pivots, _ = _row_reduce(mat, iszerofunc, simpfunc, normalize_last=True,\n+    _, pivots, _ = _row_reduce(M, iszerofunc, simpfunc, normalize_last=True,\n             normalize=False, zero_above=False)\n \n     return len(pivots)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/reductions.py b/sympy/matrices/reductions.py\nindex bf0ff55..43509e0 100644\n--- a/sympy/matrices/reductions.py\n+++ b/sympy/matrices/reductions.py\n@@ -88,8 +88,7 @@ def _rank(M, iszerofunc=_iszero, simplify=False):\n             return 1\n         if iszerofunc(d) is False:\n             return 2\n-    mat, _ = _permute_complexity_right(M, iszerofunc=iszerofunc)\n-    _, pivots, _ = _row_reduce(mat, iszerofunc, simpfunc, normalize_last=True, normalize=False, zero_above=False)\n+    _, pivots, _ = _row_reduce(M, iszerofunc, simpfunc, normalize_last=True, normalize=False, zero_above=False)\n     return len(pivots)\n def _rref(M, iszerofunc=_iszero, simplify=False, pivots=True, normalize_last=True):\n     simpfunc = simplify if isinstance(simplify, FunctionType) else _simplify\n", "normalized_occurrence": 1}
