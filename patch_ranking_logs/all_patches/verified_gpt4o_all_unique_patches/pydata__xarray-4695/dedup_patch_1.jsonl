{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-4695", "model_patch": "diff --git a/xarray/core/dataarray.py b/xarray/core/dataarray.py\nindex 81d2785..0e64539 100644\n--- a/xarray/core/dataarray.py\n+++ b/xarray/core/dataarray.py\n@@ -1196,12 +1196,12 @@ class DataArray(AbstractArray, DataWithCoords):\n         DataArray.isel\n \n         \"\"\"\n+        indexers_all = either_dict_or_kwargs(indexers, indexers_kwargs, \"sel\")\n         ds = self._to_temp_dataset().sel(\n-            indexers=indexers,\n+            indexers={k: v for k, v in indexers_all.items() if k not in {'method', 'tolerance', 'drop'}},\n             drop=drop,\n             method=method,\n-            tolerance=tolerance,\n-            **indexers_kwargs,\n+            tolerance=tolerance\n         )\n         return self._from_temp_dataset(ds)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/dataarray.py b/xarray/core/dataarray.py\nindex 4be0f90..4b8fd79 100644\n--- a/xarray/core/dataarray.py\n+++ b/xarray/core/dataarray.py\n@@ -439,7 +439,8 @@ class DataArray(AbstractArray, DataWithCoords):\n             coords[coord_name] = coord_value\n         return self._replace(variable=variable, coords=coords)\n     def sel(self, indexers: Mapping[Hashable, Any]=None, method: str=None, tolerance=None, drop: bool=False, **indexers_kwargs: Any) -> 'DataArray':\n-        ds = self._to_temp_dataset().sel(indexers=indexers, drop=drop, method=method, tolerance=tolerance, **indexers_kwargs)\n+        indexers_all = either_dict_or_kwargs(indexers, indexers_kwargs, 'sel')\n+        ds = self._to_temp_dataset().sel(indexers={k: v for k, v in indexers_all.items() if k not in {'method', 'tolerance', 'drop'}}, drop=drop, method=method, tolerance=tolerance)\n         return self._from_temp_dataset(ds)\n     def head(self, indexers: Union[Mapping[Hashable, int], int]=None, **indexers_kwargs: Any) -> 'DataArray':\n         ds = self._to_temp_dataset().head(indexers, **indexers_kwargs)\n", "normalized_occurrence": 1}
