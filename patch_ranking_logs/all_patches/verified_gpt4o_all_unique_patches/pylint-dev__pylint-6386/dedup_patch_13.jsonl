{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-6386", "model_patch": "diff --git a/pylint/config/option_manager_mixin.py b/pylint/config/option_manager_mixin.py\nindex d22ea01..4c1e375 100644\n--- a/pylint/config/option_manager_mixin.py\n+++ b/pylint/config/option_manager_mixin.py\n@@ -149,7 +149,7 @@ class OptionsManagerMixIn:\n         use with optik/optparse\n         \"\"\"\n         optdict = copy.copy(optdict)\n-        if \"action\" in optdict:\n+        if \"action\" in optdict and optdict[\"action\"] != \"store_true\":\n             self._nocallback_options[provider] = opt\n         else:\n             optdict[\"action\"] = \"callback\"\n@@ -343,4 +343,4 @@ class OptionsManagerMixIn:\n         \"\"\"Return the usage string for available options.\"\"\"\n         self.cmdline_parser.formatter.output_level = level\n         with _patch_optparse():\n-            return self.cmdline_parser.format_help()\n+            return self.cmdline_parser.format_help()\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/config/option_manager_mixin.py b/pylint/config/option_manager_mixin.py\nindex 073d6af..9305af5 100644\n--- a/pylint/config/option_manager_mixin.py\n+++ b/pylint/config/option_manager_mixin.py\n@@ -89,7 +89,7 @@ class OptionsManagerMixIn:\n         self._maxlevel = max(self._maxlevel, option.level or 0)\n     def optik_option(self, provider, opt, optdict):\n         optdict = copy.copy(optdict)\n-        if 'action' in optdict:\n+        if 'action' in optdict and optdict['action'] != 'store_true':\n             self._nocallback_options[provider] = opt\n         else:\n             optdict['action'] = 'callback'\n", "normalized_occurrence": 2}
