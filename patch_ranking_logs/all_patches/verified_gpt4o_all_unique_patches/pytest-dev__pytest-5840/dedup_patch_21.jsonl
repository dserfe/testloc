{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-5840", "model_patch": "diff --git a/src/_pytest/pathlib.py b/src/_pytest/pathlib.py\nindex b3d362f..e4c351a 100644\n--- a/src/_pytest/pathlib.py\n+++ b/src/_pytest/pathlib.py\n@@ -343,4 +343,4 @@ def unique_path(path):\n \n     This is needed only for ``py.path.local``; ``pathlib.Path`` handles this\n     natively with ``resolve()``.\"\"\"\n-    return type(path)(normcase(str(path.realpath())))\n+    return type(path)(normcase(str(path.absolute())))\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/pathlib.py b/src/_pytest/pathlib.py\nindex 769f60b..c0180c4 100644\n--- a/src/_pytest/pathlib.py\n+++ b/src/_pytest/pathlib.py\n@@ -203,4 +203,4 @@ def parts(s):\n     parts = s.split(sep)\n     return {sep.join(parts[:i + 1]) or sep for i in range(len(parts))}\n def unique_path(path):\n-    return type(path)(normcase(str(path.realpath())))\n\\ No newline at end of file\n+    return type(path)(normcase(str(path.absolute())))\n\\ No newline at end of file\n", "normalized_occurrence": 1}
