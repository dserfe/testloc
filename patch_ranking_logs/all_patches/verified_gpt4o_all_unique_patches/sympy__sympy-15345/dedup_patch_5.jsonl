{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-15345", "model_patch": "diff --git a/sympy/printing/mathematica.py b/sympy/printing/mathematica.py\nindex 7ecda40..2af24c6 100644\n--- a/sympy/printing/mathematica.py\n+++ b/sympy/printing/mathematica.py\n@@ -99,7 +99,9 @@ class MCodePrinter(CodePrinter):\n             for cond, mfunc in cond_mfunc:\n                 if cond(*expr.args):\n                     return \"%s[%s]\" % (mfunc, self.stringify(expr.args, \", \"))\n-        return expr.func.__name__ + \"[%s]\" % self.stringify(expr.args, \", \")\n+        if expr.func.__name__ == 'Max':\n+            return \"Max[%s]\" % self.stringify(expr.args, \", \")\n+        return \"%s[%s]\" % (expr.func.__name__, self.stringify(expr.args, \", \"))\n \n     def _print_Integral(self, expr):\n         if len(expr.variables) == 1 and not expr.limits[0][1:]:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/mathematica.py b/sympy/printing/mathematica.py\nindex 7dcf2f7..7c51e44 100644\n--- a/sympy/printing/mathematica.py\n+++ b/sympy/printing/mathematica.py\n@@ -44,7 +44,9 @@ class MCodePrinter(CodePrinter):\n             for cond, mfunc in cond_mfunc:\n                 if cond(*expr.args):\n                     return '%s[%s]' % (mfunc, self.stringify(expr.args, ', '))\n-        return expr.func.__name__ + '[%s]' % self.stringify(expr.args, ', ')\n+        if expr.func.__name__ == 'Max':\n+            return 'Max[%s]' % self.stringify(expr.args, ', ')\n+        return '%s[%s]' % (expr.func.__name__, self.stringify(expr.args, ', '))\n     def _print_Integral(self, expr):\n         if len(expr.variables) == 1 and (not expr.limits[0][1:]):\n             args = [expr.args[0], expr.variables[0]]\n", "normalized_occurrence": 1}
