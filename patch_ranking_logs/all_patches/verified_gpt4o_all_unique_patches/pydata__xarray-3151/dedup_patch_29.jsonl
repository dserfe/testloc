{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-3151", "model_patch": "diff --git a/xarray/core/combine.py b/xarray/core/combine.py\nindex fe3f23b..c67a7e3 100644\n--- a/xarray/core/combine.py\n+++ b/xarray/core/combine.py\n@@ -500,15 +500,13 @@ def combine_by_coords(datasets, compat='no_conflicts', data_vars='all',\n                                    data_vars=data_vars, coords=coords,\n                                    fill_value=fill_value)\n \n-        # Check the overall coordinates are monotonically increasing\n-        for dim in concatenated.dims:\n-            if dim in concatenated:\n-                indexes = concatenated.indexes.get(dim)\n-                if not (indexes.is_monotonic_increasing\n-                        or indexes.is_monotonic_decreasing):\n-                    raise ValueError(\"Resulting object does not have monotonic\"\n-                                     \" global indexes along dimension {}\"\n-                                     .format(dim))\n+        # Check the overall coordinates are monotonically increasing, but only for varying dimensions\n+        for dim in concat_dims:\n+            indexes = concatenated.indexes.get(dim)\n+            if not (indexes.is_monotonic_increasing or indexes.is_monotonic_decreasing):\n+                raise ValueError(\"Resulting object does not have monotonic\"\n+                                 \" global indexes along dimension {}\"\n+                                 .format(dim))\n         concatenated_grouped_by_data_vars.append(concatenated)\n \n     return merge(concatenated_grouped_by_data_vars, compat=compat,\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/combine.py b/xarray/core/combine.py\nindex b8f5640..f55a358 100644\n--- a/xarray/core/combine.py\n+++ b/xarray/core/combine.py\n@@ -115,11 +115,10 @@ def combine_by_coords(datasets, compat='no_conflicts', data_vars='all', coords='\n         combined_ids, concat_dims = _infer_concat_order_from_coords(list(datasets_with_same_vars))\n         _check_shape_tile_ids(combined_ids)\n         concatenated = _combine_nd(combined_ids, concat_dims=concat_dims, data_vars=data_vars, coords=coords, fill_value=fill_value)\n-        for dim in concatenated.dims:\n-            if dim in concatenated:\n-                indexes = concatenated.indexes.get(dim)\n-                if not (indexes.is_monotonic_increasing or indexes.is_monotonic_decreasing):\n-                    raise ValueError('Resulting object does not have monotonic global indexes along dimension {}'.format(dim))\n+        for dim in concat_dims:\n+            indexes = concatenated.indexes.get(dim)\n+            if not (indexes.is_monotonic_increasing or indexes.is_monotonic_decreasing):\n+                raise ValueError('Resulting object does not have monotonic global indexes along dimension {}'.format(dim))\n         concatenated_grouped_by_data_vars.append(concatenated)\n     return merge(concatenated_grouped_by_data_vars, compat=compat, fill_value=fill_value)\n _CONCAT_DIM_DEFAULT = '__infer_concat_dim__'\n", "normalized_occurrence": 1}
