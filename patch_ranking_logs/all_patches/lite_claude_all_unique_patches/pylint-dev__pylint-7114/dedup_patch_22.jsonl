{"model_name_or_path": "agentless_claude", "instance_id": "pylint-dev__pylint-7114", "model_patch": "diff --git a/pylint/lint/expand_modules.py b/pylint/lint/expand_modules.py\nindex a7d6e52..ca09fcf 100644\n--- a/pylint/lint/expand_modules.py\n+++ b/pylint/lint/expand_modules.py\n@@ -89,7 +89,12 @@ def expand_modules(\n                     modutils.modpath_from_file(something, path=additional_search_path)\n                 )\n             except ImportError:\n-                modname = os.path.splitext(basename)[0]\n+                # Handle nested module case (e.g. a/a.py should be module a.a)\n+                relpath = os.path.relpath(something, module_path)\n+                modname = \".\".join(\n+                    part for part in os.path.splitext(relpath)[0].split(os.sep)\n+                    if part and not part == \".\"\n+                )\n             if os.path.isdir(something):\n                 filepath = os.path.join(something, \"__init__.py\")\n             else:\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/lint/expand_modules.py b/pylint/lint/expand_modules.py\nindex a1d3fbd..a760706 100644\n--- a/pylint/lint/expand_modules.py\n+++ b/pylint/lint/expand_modules.py\n@@ -40,7 +40,8 @@ def expand_modules(files_or_modules: Sequence[str], ignore_list: list[str], igno\n             try:\n                 modname = '.'.join(modutils.modpath_from_file(something, path=additional_search_path))\n             except ImportError:\n-                modname = os.path.splitext(basename)[0]\n+                relpath = os.path.relpath(something, module_path)\n+                modname = '.'.join((part for part in os.path.splitext(relpath)[0].split(os.sep) if part and (not part == '.')))\n             if os.path.isdir(something):\n                 filepath = os.path.join(something, '__init__.py')\n             else:\n", "normalized_occurrence": 1}
