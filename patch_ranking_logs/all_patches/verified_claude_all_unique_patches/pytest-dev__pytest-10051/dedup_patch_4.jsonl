{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-10051", "model_patch": "diff --git a/src/_pytest/logging.py b/src/_pytest/logging.py\nindex 9234395..217dc61 100644\n--- a/src/_pytest/logging.py\n+++ b/src/_pytest/logging.py\n@@ -396,6 +396,8 @@ class LogCaptureFixture:\n \n         .. versionadded:: 3.4\n         \"\"\"\n+        if when == \"call\":\n+            return self.records\n         return self._item.stash[caplog_records_key].get(when, [])\n \n     @property\n", "normalized_patch": "diff --git a/src/_pytest/logging.py b/src/_pytest/logging.py\nindex d320659..c9b6538 100644\n--- a/src/_pytest/logging.py\n+++ b/src/_pytest/logging.py\n@@ -183,6 +183,8 @@ class LogCaptureFixture:\n     def handler(self) -> LogCaptureHandler:\n         return self._item.stash[caplog_handler_key]\n     def get_records(self, when: str) -> List[logging.LogRecord]:\n+        if when == 'call':\n+            return self.records\n         return self._item.stash[caplog_records_key].get(when, [])\n     @property\n     def text(self) -> str:\n", "normalized_occurrence": 3}
