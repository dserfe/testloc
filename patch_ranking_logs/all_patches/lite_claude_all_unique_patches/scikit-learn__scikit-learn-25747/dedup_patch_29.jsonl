{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-25747", "model_patch": "diff --git a/sklearn/utils/_set_output.py b/sklearn/utils/_set_output.py\nindex 52acc1f..92b4fb4 100644\n--- a/sklearn/utils/_set_output.py\n+++ b/sklearn/utils/_set_output.py\n@@ -1,3 +1,4 @@\n+\n from functools import wraps\n \n from scipy.sparse import issparse\n@@ -55,10 +56,14 @@ def _wrap_in_pandas_container(\n     if isinstance(data_to_wrap, pd.DataFrame):\n         if columns is not None:\n             data_to_wrap.columns = columns\n-        if index is not None:\n+        if index is not None and len(index) == len(data_to_wrap):\n             data_to_wrap.index = index\n         return data_to_wrap\n \n+    if index is not None and not isinstance(data_to_wrap, (pd.Series, pd.DataFrame)):\n+        # Only set index if lengths match for raw arrays\n+        if len(index) != len(data_to_wrap):\n+            index = None\n     return pd.DataFrame(data_to_wrap, index=index, columns=columns)\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/utils/_set_output.py b/sklearn/utils/_set_output.py\nindex 386f312..68d0432 100644\n--- a/sklearn/utils/_set_output.py\n+++ b/sklearn/utils/_set_output.py\n@@ -15,9 +15,12 @@ def _wrap_in_pandas_container(data_to_wrap, *, columns, index=None):\n     if isinstance(data_to_wrap, pd.DataFrame):\n         if columns is not None:\n             data_to_wrap.columns = columns\n-        if index is not None:\n+        if index is not None and len(index) == len(data_to_wrap):\n             data_to_wrap.index = index\n         return data_to_wrap\n+    if index is not None and (not isinstance(data_to_wrap, (pd.Series, pd.DataFrame))):\n+        if len(index) != len(data_to_wrap):\n+            index = None\n     return pd.DataFrame(data_to_wrap, index=index, columns=columns)\n def _get_output_config(method, estimator=None):\n     est_sklearn_output_config = getattr(estimator, '_sklearn_output_config', {})\n", "normalized_occurrence": 1}
