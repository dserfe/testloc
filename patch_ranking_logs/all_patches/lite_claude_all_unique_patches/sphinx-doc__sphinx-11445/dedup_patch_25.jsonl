{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-11445", "model_patch": "diff --git a/sphinx/environment/collectors/title.py b/sphinx/environment/collectors/title.py\nindex ec97f42..be5cf13 100644\n--- a/sphinx/environment/collectors/title.py\n+++ b/sphinx/environment/collectors/title.py\n@@ -38,8 +38,24 @@ class TitleCollector(EnvironmentCollector):\n             longtitlenode += nodes.Text(doctree['title'])\n         # look for first section title and use that as the title\n         for node in doctree.findall(nodes.section):\n-            visitor = SphinxContentsFilter(doctree)\n-            node[0].walkabout(visitor)\n+            # Create a temporary document for processing domain directives\n+            from docutils.utils import new_document\n+            from docutils.frontend import OptionParser\n+            from docutils.parsers.rst import Parser\n+            settings = OptionParser().get_default_values()\n+            document = new_document('', settings)\n+            \n+            # Deep copy the title node to avoid modifying the original\n+            import copy\n+            title_node = copy.deepcopy(node[0])\n+            \n+            # Process any domain directives in the title\n+            document.append(title_node)\n+            app.env.apply_post_transforms(document, 'title')\n+            \n+            # Now collect the processed title text\n+            visitor = SphinxContentsFilter(document)\n+            title_node.walkabout(visitor)\n             titlenode += visitor.get_entry_text()\n             break\n         else:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/environment/collectors/title.py b/sphinx/environment/collectors/title.py\nindex 90c3ce6..3b22965 100644\n--- a/sphinx/environment/collectors/title.py\n+++ b/sphinx/environment/collectors/title.py\n@@ -20,8 +20,17 @@ class TitleCollector(EnvironmentCollector):\n             longtitlenode = nodes.title()\n             longtitlenode += nodes.Text(doctree['title'])\n         for node in doctree.findall(nodes.section):\n-            visitor = SphinxContentsFilter(doctree)\n-            node[0].walkabout(visitor)\n+            from docutils.utils import new_document\n+            from docutils.frontend import OptionParser\n+            from docutils.parsers.rst import Parser\n+            settings = OptionParser().get_default_values()\n+            document = new_document('', settings)\n+            import copy\n+            title_node = copy.deepcopy(node[0])\n+            document.append(title_node)\n+            app.env.apply_post_transforms(document, 'title')\n+            visitor = SphinxContentsFilter(document)\n+            title_node.walkabout(visitor)\n             titlenode += visitor.get_entry_text()\n             break\n         else:\n", "normalized_occurrence": 1}
