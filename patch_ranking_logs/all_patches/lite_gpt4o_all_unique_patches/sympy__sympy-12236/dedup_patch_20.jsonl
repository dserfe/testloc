{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-12236", "model_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 03af2f5..7b9c0cf 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -137,6 +137,9 @@ def apart(f, x=None, full=False, **options):\n             partial = apart_undetermined_coeffs(P, Q)\n         else:\n             partial = apart_full_decomposition(P, Q)\n+    \n+    if not P:  # If P is zero, avoid erroneous terms addition\n+        return common * poly.as_expr()\n \n     terms = S.Zero\n \n@@ -146,7 +149,7 @@ def apart(f, x=None, full=False, **options):\n         else:\n             terms += factor(term)\n \n-    return common*(poly.as_expr() + terms)\n+    return common * (poly.as_expr() + terms)\n \n \n def apart_undetermined_coeffs(P, Q):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 21c4bd7..c3fc0ab 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -68,6 +68,8 @@ def apart(f, x=None, full=False, **options):\n         partial = apart_undetermined_coeffs(P, Q)\n     else:\n         partial = apart_full_decomposition(P, Q)\n+    if not P:\n+        return common * poly.as_expr()\n     terms = S.Zero\n     for term in Add.make_args(partial):\n         if term.has(RootSum):\n", "normalized_occurrence": 1}
