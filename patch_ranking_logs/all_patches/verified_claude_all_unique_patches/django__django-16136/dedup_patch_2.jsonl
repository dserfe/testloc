{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16136", "model_patch": "diff --git a/django/views/generic/base.py b/django/views/generic/base.py\nindex d6fb4a7..de5f349 100644\n--- a/django/views/generic/base.py\n+++ b/django/views/generic/base.py\n@@ -148,6 +148,10 @@ class View:\n             request.path,\n             extra={\"status_code\": 405, \"request\": request},\n         )\n+        if self.view_is_async:\n+            async def func():\n+                return HttpResponseNotAllowed(self._allowed_methods())\n+            return func()\n         return HttpResponseNotAllowed(self._allowed_methods())\n \n     def options(self, request, *args, **kwargs):\n", "occurrence": 28, "normalized_patch": "diff --git a/django/views/generic/base.py b/django/views/generic/base.py\nindex 70f1b00..a73f3bf 100644\n--- a/django/views/generic/base.py\n+++ b/django/views/generic/base.py\n@@ -64,6 +64,10 @@ class View:\n         return handler(request, *args, **kwargs)\n     def http_method_not_allowed(self, request, *args, **kwargs):\n         logger.warning('Method Not Allowed (%s): %s', request.method, request.path, extra={'status_code': 405, 'request': request})\n+        if self.view_is_async:\n+            async def func():\n+                return HttpResponseNotAllowed(self._allowed_methods())\n+            return func()\n         return HttpResponseNotAllowed(self._allowed_methods())\n     def options(self, request, *args, **kwargs):\n         response = HttpResponse()\n", "normalized_occurrence": 28}
