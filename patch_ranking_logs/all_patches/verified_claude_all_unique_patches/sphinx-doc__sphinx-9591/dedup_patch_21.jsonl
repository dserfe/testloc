{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-9591", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 08b07d9..ff01406 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -2729,6 +2729,11 @@ class PropertyDocumenter(DocstringStripSignatureMixin, ClassLevelDocumenter):  #\n                                               type_aliases=self.config.autodoc_type_aliases)\n                 if signature.return_annotation is not Parameter.empty:\n                     objrepr = stringify_typehint(signature.return_annotation)\n+                    # Preserve cross-references by not converting types that are simple references\n+                    if not isinstance(signature.return_annotation, type):\n+                        objrepr = stringify_typehint(signature.return_annotation)\n+                    else:\n+                        objrepr = signature.return_annotation.__name__\n                     self.add_line('   :type: ' + objrepr, sourcename)\n             except TypeError as exc:\n                 logger.warning(__(\"Failed to get a function signature for %s: %s\"),\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 3c49975..f46efb3 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1647,6 +1647,10 @@ class PropertyDocumenter(DocstringStripSignatureMixin, ClassLevelDocumenter):\n                 signature = inspect.signature(func, type_aliases=self.config.autodoc_type_aliases)\n                 if signature.return_annotation is not Parameter.empty:\n                     objrepr = stringify_typehint(signature.return_annotation)\n+                    if not isinstance(signature.return_annotation, type):\n+                        objrepr = stringify_typehint(signature.return_annotation)\n+                    else:\n+                        objrepr = signature.return_annotation.__name__\n                     self.add_line('   :type: ' + objrepr, sourcename)\n             except TypeError as exc:\n                 logger.warning(__('Failed to get a function signature for %s: %s'), self.fullname, exc)\n", "normalized_occurrence": 1}
