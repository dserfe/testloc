{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-5859", "model_patch": "diff --git a/pylint/utils/utils.py b/pylint/utils/utils.py\nindex 030ec92..520ff4b 100644\n--- a/pylint/utils/utils.py\n+++ b/pylint/utils/utils.py\n@@ -316,10 +316,15 @@ def _unquote(string):\n     return string\n \n \n+import string\n+\n def _check_csv(value):\n     if isinstance(value, (list, tuple)):\n         return value\n-    return _splitstrip(value)\n+    values = _splitstrip(value)\n+    # Ensure that punctuation-only note tags are treated correctly\n+    values = [v for v in values if any(c not in string.punctuation for c in v)]\n+    return values\n \n \n def _comment(string: str) -> str:\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/utils/utils.py b/pylint/utils/utils.py\nindex 0221700..2c4b462 100644\n--- a/pylint/utils/utils.py\n+++ b/pylint/utils/utils.py\n@@ -136,10 +136,13 @@ def _unquote(string):\n     if string[-1] in '\"\\'':\n         string = string[:-1]\n     return string\n+import string\n def _check_csv(value):\n     if isinstance(value, (list, tuple)):\n         return value\n-    return _splitstrip(value)\n+    values = _splitstrip(value)\n+    values = [v for v in values if any((c not in string.punctuation for c in v))]\n+    return values\n def _comment(string: str) -> str:\n     lines = [line.strip() for line in string.splitlines()]\n     sep = '\\n'\n", "normalized_occurrence": 1}
