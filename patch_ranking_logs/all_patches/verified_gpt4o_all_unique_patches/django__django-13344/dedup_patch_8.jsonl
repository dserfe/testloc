{"model_name_or_path": "agentless", "instance_id": "django__django-13344", "model_patch": "diff --git a/django/core/handlers/base.py b/django/core/handlers/base.py\nindex ed8f4af..702ba4a 100644\n--- a/django/core/handlers/base.py\n+++ b/django/core/handlers/base.py\n@@ -84,6 +84,10 @@ class BaseHandler:\n                 self._exception_middleware.append(\n                     self.adapt_method_mode(False, mw_instance.process_exception),\n                 )\n+            if hasattr(mw_instance, 'process_response'):\n+                mw_instance.process_response = self.adapt_method_mode(\n+                    is_async, mw_instance.process_response\n+                )\n \n             handler = convert_exception_to_response(mw_instance)\n             handler_is_async = middleware_is_async\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/handlers/base.py b/django/core/handlers/base.py\nindex a097649..b546b40 100644\n--- a/django/core/handlers/base.py\n+++ b/django/core/handlers/base.py\n@@ -51,6 +51,8 @@ class BaseHandler:\n                 self._template_response_middleware.append(self.adapt_method_mode(is_async, mw_instance.process_template_response))\n             if hasattr(mw_instance, 'process_exception'):\n                 self._exception_middleware.append(self.adapt_method_mode(False, mw_instance.process_exception))\n+            if hasattr(mw_instance, 'process_response'):\n+                mw_instance.process_response = self.adapt_method_mode(is_async, mw_instance.process_response)\n             handler = convert_exception_to_response(mw_instance)\n             handler_is_async = middleware_is_async\n         handler = self.adapt_method_mode(is_async, handler, handler_is_async)\n", "normalized_occurrence": 1}
