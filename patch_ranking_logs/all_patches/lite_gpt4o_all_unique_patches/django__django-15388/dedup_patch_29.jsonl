{"model_name_or_path": "agentless", "instance_id": "django__django-15388", "model_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex dcf3cdd..e39b6cf 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -284,8 +284,11 @@ class BaseReloader:\n                 exc_info=True,\n             )\n             return\n+        if not os.path.isdir(path):\n+            logger.warning('Directory %s does not exist, skipping.', path)\n+            return\n         logger.debug('Watching dir %s with glob %s.', path, glob)\n-        self.directory_globs[path].add(glob)\n+        self.directory_globs[Path(path)].add(glob)\n \n     def watched_files(self, include_globs=True):\n         \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex 4cc598a..9304d06 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -177,8 +177,11 @@ class BaseReloader:\n         except FileNotFoundError:\n             logger.debug('Unable to watch directory %s as it cannot be resolved.', path, exc_info=True)\n             return\n+        if not os.path.isdir(path):\n+            logger.warning('Directory %s does not exist, skipping.', path)\n+            return\n         logger.debug('Watching dir %s with glob %s.', path, glob)\n-        self.directory_globs[path].add(glob)\n+        self.directory_globs[Path(path)].add(glob)\n     def watched_files(self, include_globs=True):\n         yield from iter_all_python_module_files()\n         yield from self.extra_files\n", "normalized_occurrence": 1}
