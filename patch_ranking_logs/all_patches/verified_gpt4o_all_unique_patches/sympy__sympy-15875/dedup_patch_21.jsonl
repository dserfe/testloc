{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-15875", "model_patch": "diff --git a/sympy/core/add.py b/sympy/core/add.py\nindex 1046af8..8ed32a0 100644\n--- a/sympy/core/add.py\n+++ b/sympy/core/add.py\n@@ -522,7 +522,7 @@ class Add(Expr, AssocOp):\n             elif (S.ImaginaryUnit*a).is_real:\n                 im_I.append(a*S.ImaginaryUnit)\n             else:\n-                return\n+                return None\n         b = self.func(*nz)\n         if b.is_zero:\n             return fuzzy_not(self.func(*im_I).is_zero)\n@@ -545,13 +545,13 @@ class Add(Expr, AssocOp):\n                 elif a.is_zero is False:\n                     nz.append(a)\n                 else:\n-                    return\n+                    return None\n             elif a.is_imaginary:\n                 im = True\n             elif (S.ImaginaryUnit*a).is_real:\n                 im_or_z = True\n             else:\n-                return\n+                return None\n         if z == len(self.args):\n             return True\n         if len(nz) == len(self.args):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/add.py b/sympy/core/add.py\nindex 63cb816..6020ddb 100644\n--- a/sympy/core/add.py\n+++ b/sympy/core/add.py\n@@ -279,7 +279,7 @@ class Add(Expr, AssocOp):\n             elif (S.ImaginaryUnit * a).is_real:\n                 im_I.append(a * S.ImaginaryUnit)\n             else:\n-                return\n+                return None\n         b = self.func(*nz)\n         if b.is_zero:\n             return fuzzy_not(self.func(*im_I).is_zero)\n@@ -299,13 +299,13 @@ class Add(Expr, AssocOp):\n                 elif a.is_zero is False:\n                     nz.append(a)\n                 else:\n-                    return\n+                    return None\n             elif a.is_imaginary:\n                 im = True\n             elif (S.ImaginaryUnit * a).is_real:\n                 im_or_z = True\n             else:\n-                return\n+                return None\n         if z == len(self.args):\n             return True\n         if len(nz) == len(self.args):\n", "normalized_occurrence": 1}
