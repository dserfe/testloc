{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14351", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex e16dbc0..fa25cf1 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -230,6 +230,11 @@ class SQLCompiler:\n             # self.query.select is a special case. These columns never go to\n             # any model.\n             cols = self.query.select\n+            # For subqueries in __in lookups, only select the pk to avoid\n+            # \"subquery must return only one column\" errors\n+            if (self.query.subquery and len(cols) > 1 and \n+                any(isinstance(col, Col) and col.target.primary_key for col in cols)):\n+                cols = [col for col in cols if isinstance(col, Col) and col.target.primary_key]\n         if cols:\n             select_list = []\n             for col in cols:\n", "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex b3e101b..6fcff14 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -102,6 +102,8 @@ class SQLCompiler:\n             cols = self.get_default_columns()\n         else:\n             cols = self.query.select\n+            if self.query.subquery and len(cols) > 1 and any((isinstance(col, Col) and col.target.primary_key for col in cols)):\n+                cols = [col for col in cols if isinstance(col, Col) and col.target.primary_key]\n         if cols:\n             select_list = []\n             for col in cols:\n", "normalized_occurrence": 1}
