{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-6528", "model_patch": "diff --git a/pylint/lint/expand_modules.py b/pylint/lint/expand_modules.py\nindex 94af730..cdfc7f2 100644\n--- a/pylint/lint/expand_modules.py\n+++ b/pylint/lint/expand_modules.py\n@@ -65,6 +65,7 @@ def expand_modules(\n             basename in ignore_list\n             or _is_in_ignore_list_re(os.path.basename(something), ignore_list_re)\n             or _is_in_ignore_list_re(something, ignore_list_paths_re)\n+            or _is_in_ignore_list_re(os.path.abspath(something), ignore_list_paths_re)\n         ):\n             continue\n         module_path = get_python_path(something)\n@@ -128,9 +129,12 @@ def expand_modules(\n             ):\n                 if filepath == subfilepath:\n                     continue\n-                if _is_in_ignore_list_re(\n-                    os.path.basename(subfilepath), ignore_list_re\n-                ) or _is_in_ignore_list_re(subfilepath, ignore_list_paths_re):\n+                if (\n+                    os.path.basename(subfilepath) in ignore_list\n+                    or _is_in_ignore_list_re(os.path.basename(subfilepath), ignore_list_re)\n+                    or _is_in_ignore_list_re(subfilepath, ignore_list_paths_re)\n+                    or _is_in_ignore_list_re(os.path.abspath(subfilepath), ignore_list_paths_re)\n+                ):\n                     continue\n \n                 modpath = _modpath_from_file(\n@@ -146,4 +150,4 @@ def expand_modules(\n                         \"basename\": modname,\n                     }\n                 )\n-    return result, errors\n+    return result, errors\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/lint/expand_modules.py b/pylint/lint/expand_modules.py\nindex 37bdd47..c964019 100644\n--- a/pylint/lint/expand_modules.py\n+++ b/pylint/lint/expand_modules.py\n@@ -28,7 +28,7 @@ def expand_modules(files_or_modules: Sequence[str], ignore_list: list[str], igno\n     path = sys.path.copy()\n     for something in files_or_modules:\n         basename = os.path.basename(something)\n-        if basename in ignore_list or _is_in_ignore_list_re(os.path.basename(something), ignore_list_re) or _is_in_ignore_list_re(something, ignore_list_paths_re):\n+        if basename in ignore_list or _is_in_ignore_list_re(os.path.basename(something), ignore_list_re) or _is_in_ignore_list_re(something, ignore_list_paths_re) or _is_in_ignore_list_re(os.path.abspath(something), ignore_list_paths_re):\n             continue\n         module_path = get_python_path(something)\n         additional_search_path = ['.', module_path] + path\n@@ -67,7 +67,7 @@ def expand_modules(files_or_modules: Sequence[str], ignore_list: list[str], igno\n             for subfilepath in modutils.get_module_files(os.path.dirname(filepath), ignore_list, list_all=is_namespace):\n                 if filepath == subfilepath:\n                     continue\n-                if _is_in_ignore_list_re(os.path.basename(subfilepath), ignore_list_re) or _is_in_ignore_list_re(subfilepath, ignore_list_paths_re):\n+                if os.path.basename(subfilepath) in ignore_list or _is_in_ignore_list_re(os.path.basename(subfilepath), ignore_list_re) or _is_in_ignore_list_re(subfilepath, ignore_list_paths_re) or _is_in_ignore_list_re(os.path.abspath(subfilepath), ignore_list_paths_re):\n                     continue\n                 modpath = _modpath_from_file(subfilepath, is_namespace, path=additional_search_path)\n                 submodname = '.'.join(modpath)\n", "normalized_occurrence": 1}
