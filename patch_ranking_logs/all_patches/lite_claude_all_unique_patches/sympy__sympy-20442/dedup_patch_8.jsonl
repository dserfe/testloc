{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-20442", "model_patch": "diff --git a/sympy/physics/units/util.py b/sympy/physics/units/util.py\nindex f42b6a4..1f92121 100644\n--- a/sympy/physics/units/util.py\n+++ b/sympy/physics/units/util.py\n@@ -17,6 +17,14 @@ def _get_conversion_matrix_for_expr(expr, target_units, unit_system):\n \n     expr_dim = Dimension(unit_system.get_dimensional_expr(expr))\n     dim_dependencies = dimension_system.get_dimensional_dependencies(expr_dim, mark_dimensionless=True)\n+    \n+    # Get the combined dimension of target units\n+    target_dim = Dimension(unit_system.get_dimensional_expr(Mul.fromiter(target_units)))\n+    \n+    # Check if dimensions are compatible\n+    if expr_dim != target_dim:\n+        return None\n+        \n     target_dims = [Dimension(unit_system.get_dimensional_expr(x)) for x in target_units]\n     canon_dim_units = [i for x in target_dims for i in dimension_system.get_dimensional_dependencies(x, mark_dimensionless=True)]\n     canon_expr_units = {i for i in dim_dependencies}\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/physics/units/util.py b/sympy/physics/units/util.py\nindex 8deb785..2c87a13 100644\n--- a/sympy/physics/units/util.py\n+++ b/sympy/physics/units/util.py\n@@ -9,6 +9,9 @@ def _get_conversion_matrix_for_expr(expr, target_units, unit_system):\n     dimension_system = unit_system.get_dimension_system()\n     expr_dim = Dimension(unit_system.get_dimensional_expr(expr))\n     dim_dependencies = dimension_system.get_dimensional_dependencies(expr_dim, mark_dimensionless=True)\n+    target_dim = Dimension(unit_system.get_dimensional_expr(Mul.fromiter(target_units)))\n+    if expr_dim != target_dim:\n+        return None\n     target_dims = [Dimension(unit_system.get_dimensional_expr(x)) for x in target_units]\n     canon_dim_units = [i for x in target_dims for i in dimension_system.get_dimensional_dependencies(x, mark_dimensionless=True)]\n     canon_expr_units = {i for i in dim_dependencies}\n", "normalized_occurrence": 1}
