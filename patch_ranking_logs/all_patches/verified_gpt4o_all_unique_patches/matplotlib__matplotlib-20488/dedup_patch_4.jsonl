{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-20488", "model_patch": "diff --git a/lib/matplotlib/colors.py b/lib/matplotlib/colors.py\nindex bbcae54..27cef5b 100644\n--- a/lib/matplotlib/colors.py\n+++ b/lib/matplotlib/colors.py\n@@ -1465,6 +1465,10 @@ def _make_norm_from_scale(scale_cls, base_norm_cls=None, *, init=None):\n             self.autoscale_None(value)\n             if self.vmin > self.vmax:\n                 raise ValueError(\"vmin must be less or equal to vmax\")\n+            if self.vmin <= 0:\n+                self.vmin = np.finfo(float).eps\n+            if self.vmax <= 0:\n+                self.vmax = np.finfo(float).eps\n             if self.vmin == self.vmax:\n                 return np.full_like(value, 0)\n             if clip is None:\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/colors.py b/lib/matplotlib/colors.py\nindex 8344e52..08a9b15 100644\n--- a/lib/matplotlib/colors.py\n+++ b/lib/matplotlib/colors.py\n@@ -1261,6 +1261,10 @@ def _make_norm_from_scale(scale_cls, base_norm_cls=None, *, init=None):\n             self.autoscale_None(value)\n             if self.vmin > self.vmax:\n                 raise ValueError('vmin must be less or equal to vmax')\n+            if self.vmin <= 0:\n+                self.vmin = np.finfo(float).eps\n+            if self.vmax <= 0:\n+                self.vmax = np.finfo(float).eps\n             if self.vmin == self.vmax:\n                 return np.full_like(value, 0)\n             if clip is None:\n", "normalized_occurrence": 1}
