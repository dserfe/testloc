{"model_name_or_path": "agentless", "instance_id": "django__django-12039", "model_patch": "diff --git a/django/db/backends/ddl_references.py b/django/db/backends/ddl_references.py\nindex 1e5b986..4c6d4e2 100644\n--- a/django/db/backends/ddl_references.py\n+++ b/django/db/backends/ddl_references.py\n@@ -112,11 +112,11 @@ class IndexColumns(Columns):\n         def col_str(column, idx):\n             # Index.__init__() guarantees that self.opclasses is the same\n             # length as self.columns.\n-            col = '{} {}'.format(self.quote_name(column), self.opclasses[idx])\n-            try:\n-                col = '{} {}'.format(col, self.col_suffixes[idx])\n-            except IndexError:\n-                pass\n+            col = self.quote_name(column)\n+            if self.opclasses[idx]:\n+                col += ' {}'.format(self.opclasses[idx])\n+            if self.col_suffixes[idx]:\n+                col += ' {}'.format(self.col_suffixes[idx])\n             return col\n \n         return ', '.join(col_str(column, idx) for idx, column in enumerate(self.columns))\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/ddl_references.py b/django/db/backends/ddl_references.py\nindex 285a76a..87d370f 100644\n--- a/django/db/backends/ddl_references.py\n+++ b/django/db/backends/ddl_references.py\n@@ -58,11 +58,11 @@ class IndexColumns(Columns):\n         super().__init__(table, columns, quote_name, col_suffixes)\n     def __str__(self):\n         def col_str(column, idx):\n-            col = '{} {}'.format(self.quote_name(column), self.opclasses[idx])\n-            try:\n-                col = '{} {}'.format(col, self.col_suffixes[idx])\n-            except IndexError:\n-                pass\n+            col = self.quote_name(column)\n+            if self.opclasses[idx]:\n+                col += ' {}'.format(self.opclasses[idx])\n+            if self.col_suffixes[idx]:\n+                col += ' {}'.format(self.col_suffixes[idx])\n             return col\n         return ', '.join((col_str(column, idx) for idx, column in enumerate(self.columns)))\n class ForeignKeyName(TableColumns):\n", "normalized_occurrence": 1}
