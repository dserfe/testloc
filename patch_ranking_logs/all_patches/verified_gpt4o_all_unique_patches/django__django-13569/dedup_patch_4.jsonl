{"model_name_or_path": "agentless", "instance_id": "django__django-13569", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 324369a..2f5ae9a 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -128,8 +128,13 @@ class SQLCompiler:\n         for expr, (sql, params, is_ref) in order_by:\n             # Skip References to the select clause, as all expressions in the\n             # select clause are already part of the group by.\n+            if expr.contains_aggregate:\n+                continue\n             if not is_ref:\n-                expressions.extend(expr.get_group_by_cols())\n+                expressions.extend([\n+                    exp for exp in expr.get_group_by_cols()\n+                    if not isinstance(exp, Random)\n+                ])\n         having_group_by = self.having.get_group_by_cols() if self.having else ()\n         for expr in having_group_by:\n             expressions.append(expr)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex f76d039..6419a6d 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -56,8 +56,10 @@ class SQLCompiler:\n             for col in cols:\n                 expressions.append(col)\n         for expr, (sql, params, is_ref) in order_by:\n+            if expr.contains_aggregate:\n+                continue\n             if not is_ref:\n-                expressions.extend(expr.get_group_by_cols())\n+                expressions.extend([exp for exp in expr.get_group_by_cols() if not isinstance(exp, Random)])\n         having_group_by = self.having.get_group_by_cols() if self.having else ()\n         for expr in having_group_by:\n             expressions.append(expr)\n", "normalized_occurrence": 1}
