{"model_name_or_path": "agentless", "instance_id": "django__django-14011", "model_patch": "diff --git a/django/db/backends/base/base.py b/django/db/backends/base/base.py\nindex 53b9f59..65f53ed 100644\n--- a/django/db/backends/base/base.py\n+++ b/django/db/backends/base/base.py\n@@ -290,6 +290,13 @@ class BaseDatabaseWrapper:\n         # will reset the transaction state anyway.\n         if self.closed_in_transaction or self.connection is None:\n             return\n+        # Make sure to close any pending connections from threads\n+        if hasattr(self.connection, '_thread_connections'):\n+            for conn in self.connection._thread_connections:\n+                try:\n+                    conn.close()\n+                except Exception:\n+                    pass\n         try:\n             self._close()\n         finally:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/base/base.py b/django/db/backends/base/base.py\nindex 3f9f65d..7a1cb18 100644\n--- a/django/db/backends/base/base.py\n+++ b/django/db/backends/base/base.py\n@@ -165,6 +165,12 @@ class BaseDatabaseWrapper:\n         self.run_on_commit = []\n         if self.closed_in_transaction or self.connection is None:\n             return\n+        if hasattr(self.connection, '_thread_connections'):\n+            for conn in self.connection._thread_connections:\n+                try:\n+                    conn.close()\n+                except Exception:\n+                    pass\n         try:\n             self._close()\n         finally:\n", "normalized_occurrence": 1}
