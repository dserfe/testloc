{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-8801", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 9e67bb6..a398f8e 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1645,9 +1645,13 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type:\n                                    (name, self.fullname), type='autodoc')\n             return False, selected\n         elif self.options.inherited_members:\n+            # Include all members when inherited-members is specified\n             return False, list(members.values())\n         else:\n-            return False, [m for m in members.values() if m.class_ == self.object]\n+            # Only include members from the current class\n+            return False, [m for m in members.values() \n+                         if m.class_ == self.object or \n+                         (hasattr(m, 'annotations') and m.class_ == self.object)]\n \n     def get_doc(self, encoding: str = None, ignore: int = None) -> Optional[List[List[str]]]:\n         if encoding is not None:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex e1d3d5c..a3b069b 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -931,7 +931,7 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):\n         elif self.options.inherited_members:\n             return (False, list(members.values()))\n         else:\n-            return (False, [m for m in members.values() if m.class_ == self.object])\n+            return (False, [m for m in members.values() if m.class_ == self.object or (hasattr(m, 'annotations') and m.class_ == self.object)])\n     def get_doc(self, encoding: str=None, ignore: int=None) -> Optional[List[List[str]]]:\n         if encoding is not None:\n             warnings.warn(\"The 'encoding' argument to autodoc.%s.get_doc() is deprecated.\" % self.__class__.__name__, RemovedInSphinx40Warning, stacklevel=2)\n", "normalized_occurrence": 1}
