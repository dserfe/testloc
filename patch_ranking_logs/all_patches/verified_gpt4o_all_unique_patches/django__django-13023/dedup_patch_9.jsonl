{"model_name_or_path": "agentless", "instance_id": "django__django-13023", "model_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex b1fce64..f553e8b 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -1500,6 +1500,8 @@ class DecimalField(Field):\n         if isinstance(value, float):\n             return self.context.create_decimal_from_float(value)\n         try:\n+            if isinstance(value, dict):\n+                raise TypeError\n             return decimal.Decimal(value)\n         except decimal.InvalidOperation:\n             raise exceptions.ValidationError(\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex d93730b..455db6a 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -750,6 +750,8 @@ class DecimalField(Field):\n         if isinstance(value, float):\n             return self.context.create_decimal_from_float(value)\n         try:\n+            if isinstance(value, dict):\n+                raise TypeError\n             return decimal.Decimal(value)\n         except decimal.InvalidOperation:\n             raise exceptions.ValidationError(self.error_messages['invalid'], code='invalid', params={'value': value})\n", "normalized_occurrence": 1}
