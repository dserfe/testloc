{"model_name_or_path": "agentless", "instance_id": "django__django-14411", "model_patch": "diff --git a/django/contrib/admin/utils.py b/django/contrib/admin/utils.py\nindex ab619c1..74f6ee6 100644\n--- a/django/contrib/admin/utils.py\n+++ b/django/contrib/admin/utils.py\n@@ -306,6 +306,10 @@ def _get_non_gfk_field(opts, name):\n \n     return field\n \n+def is_readonly_password_hash_widget(field):\n+    # Placeholder function to determine if a widget is ReadOnlyPasswordHashWidget\n+    return getattr(field, 'widget', None).__class__.__name__ == 'ReadOnlyPasswordHashWidget'\n+\n \n def label_for_field(name, model, model_admin=None, return_attr=False, form=None):\n     \"\"\"\n@@ -361,6 +365,10 @@ def label_for_field(name, model, model_admin=None, return_attr=False, form=None)\n         label = pretty_name(name)\n         attr = name\n \n+    # If the field is ReadOnlyPasswordHashWidget, ensure there is no 'for' attribute\n+    if hasattr(field, 'widget') and is_readonly_password_hash_widget(field):\n+        label += ' (Read-Only)'\n+\n     if return_attr:\n         return (label, attr)\n     else:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/utils.py b/django/contrib/admin/utils.py\nindex 2428fd0..0cec890 100644\n--- a/django/contrib/admin/utils.py\n+++ b/django/contrib/admin/utils.py\n@@ -178,6 +178,8 @@ def _get_non_gfk_field(opts, name):\n     if field.is_relation and (not field.many_to_many) and hasattr(field, 'attname') and (field.attname == name):\n         raise FieldIsAForeignKeyColumnName()\n     return field\n+def is_readonly_password_hash_widget(field):\n+    return getattr(field, 'widget', None).__class__.__name__ == 'ReadOnlyPasswordHashWidget'\n def label_for_field(name, model, model_admin=None, return_attr=False, form=None):\n     attr = None\n     try:\n@@ -220,6 +222,8 @@ def label_for_field(name, model, model_admin=None, return_attr=False, form=None)\n     except FieldIsAForeignKeyColumnName:\n         label = pretty_name(name)\n         attr = name\n+    if hasattr(field, 'widget') and is_readonly_password_hash_widget(field):\n+        label += ' (Read-Only)'\n     if return_attr:\n         return (label, attr)\n     else:\n", "normalized_occurrence": 1}
