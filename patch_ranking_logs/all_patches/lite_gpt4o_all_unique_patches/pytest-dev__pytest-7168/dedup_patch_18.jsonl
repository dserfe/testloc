{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7168", "model_patch": "diff --git a/src/_pytest/_io/saferepr.py b/src/_pytest/_io/saferepr.py\nindex adc421d..da4ace4 100644\n--- a/src/_pytest/_io/saferepr.py\n+++ b/src/_pytest/_io/saferepr.py\n@@ -51,6 +51,15 @@ class SafeRepr(reprlib.Repr):\n             s = _format_repr_exception(exc, x)\n         return _ellipsize(s, self.maxsize)\n \n+    def repr_instance(self, x: Any, level: int) -> str:\n+        try:\n+            s = super().repr_instance(x, level)\n+        except (KeyboardInterrupt, SystemExit):\n+            raise\n+        except BaseException as exc:\n+            s = _format_repr_exception(exc, x)\n+        return _ellipsize(s, self.maxsize)\n+\n     def repr_instance(self, x: Any, level: int) -> str:\n         try:\n             s = repr(x)\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/_io/saferepr.py b/src/_pytest/_io/saferepr.py\nindex 789deb9..6ef5fa5 100644\n--- a/src/_pytest/_io/saferepr.py\n+++ b/src/_pytest/_io/saferepr.py\n@@ -35,6 +35,14 @@ class SafeRepr(reprlib.Repr):\n         except BaseException as exc:\n             s = _format_repr_exception(exc, x)\n         return _ellipsize(s, self.maxsize)\n+    def repr_instance(self, x: Any, level: int) -> str:\n+        try:\n+            s = super().repr_instance(x, level)\n+        except (KeyboardInterrupt, SystemExit):\n+            raise\n+        except BaseException as exc:\n+            s = _format_repr_exception(exc, x)\n+        return _ellipsize(s, self.maxsize)\n     def repr_instance(self, x: Any, level: int) -> str:\n         try:\n             s = repr(x)\n", "normalized_occurrence": 1}
