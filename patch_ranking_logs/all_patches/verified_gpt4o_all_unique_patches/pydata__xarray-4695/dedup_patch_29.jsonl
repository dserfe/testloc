{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-4695", "model_patch": "diff --git a/xarray/core/indexing.py b/xarray/core/indexing.py\nindex 4b06bfd..962dd6d 100644\n--- a/xarray/core/indexing.py\n+++ b/xarray/core/indexing.py\n@@ -105,7 +105,7 @@ def get_indexer_nd(index, labels, method=None, tolerance=None):\n     return indexer\n \n \n-def convert_label_indexer(index, label, index_name=\"\", method=None, tolerance=None):\n+def convert_label_indexer(index, label, index_name=\"\", method=None, tolerance=None, dim_name=None):\n     \"\"\"Given a pandas.Index and labels (e.g., from __getitem__) for one\n     dimension, return an indexer suitable for indexing an ndarray along that\n     dimension. If `index` is a pandas.MultiIndex and depending on `label`,\n@@ -188,7 +188,7 @@ def convert_label_indexer(index, label, index_name=\"\", method=None, tolerance=No\n                     )\n                 indexer = index.get_loc(label_value)\n             else:\n-                indexer = index.get_loc(label_value, method=method, tolerance=tolerance)\n+                indexer = index.get_loc(label_value, method=method if dim_name != \"method\" else None, tolerance=tolerance)\n         elif label.dtype.kind == \"b\":\n             indexer = label\n         else:\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/indexing.py b/xarray/core/indexing.py\nindex 27ac399..fc7b49f 100644\n--- a/xarray/core/indexing.py\n+++ b/xarray/core/indexing.py\n@@ -57,7 +57,7 @@ def get_indexer_nd(index, labels, method=None, tolerance=None):\n     flat_indexer = index.get_indexer(flat_labels, method=method, tolerance=tolerance)\n     indexer = flat_indexer.reshape(labels.shape)\n     return indexer\n-def convert_label_indexer(index, label, index_name='', method=None, tolerance=None):\n+def convert_label_indexer(index, label, index_name='', method=None, tolerance=None, dim_name=None):\n     new_index = None\n     if isinstance(label, slice):\n         if method is not None or tolerance is not None:\n@@ -98,7 +98,7 @@ def convert_label_indexer(index, label, index_name='', method=None, tolerance=No\n                     raise ValueError(\"'tolerance' is not a valid kwarg when indexing using a CategoricalIndex.\")\n                 indexer = index.get_loc(label_value)\n             else:\n-                indexer = index.get_loc(label_value, method=method, tolerance=tolerance)\n+                indexer = index.get_loc(label_value, method=method if dim_name != 'method' else None, tolerance=tolerance)\n         elif label.dtype.kind == 'b':\n             indexer = label\n         else:\n", "normalized_occurrence": 1}
