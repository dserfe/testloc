{"model_name_or_path": "agentless", "instance_id": "django__django-11211", "model_patch": "diff --git a/django/contrib/contenttypes/fields.py b/django/contrib/contenttypes/fields.py\nindex 3bf5851..ac6e858 100644\n--- a/django/contrib/contenttypes/fields.py\n+++ b/django/contrib/contenttypes/fields.py\n@@ -229,7 +229,11 @@ class GenericForeignKey(FieldCacheMixin):\n         rel_obj = self.get_cached_value(instance, default=None)\n         if rel_obj is not None:\n             ct_match = ct_id == self.get_content_type(obj=rel_obj, using=instance._state.db).id\n-            pk_match = rel_obj._meta.pk.to_python(pk_val) == rel_obj.pk\n+            # Ensure pk_match correctly handles UUIDs\n+            if isinstance(rel_obj._meta.pk, models.UUIDField):\n+                pk_match = str(rel_obj.pk) == pk_val\n+            else:\n+                pk_match = rel_obj._meta.pk.to_python(pk_val) == rel_obj.pk\n             if ct_match and pk_match:\n                 return rel_obj\n             else:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/contenttypes/fields.py b/django/contrib/contenttypes/fields.py\nindex 8e99ea7..24c6a86 100644\n--- a/django/contrib/contenttypes/fields.py\n+++ b/django/contrib/contenttypes/fields.py\n@@ -111,7 +111,10 @@ class GenericForeignKey(FieldCacheMixin):\n         rel_obj = self.get_cached_value(instance, default=None)\n         if rel_obj is not None:\n             ct_match = ct_id == self.get_content_type(obj=rel_obj, using=instance._state.db).id\n-            pk_match = rel_obj._meta.pk.to_python(pk_val) == rel_obj.pk\n+            if isinstance(rel_obj._meta.pk, models.UUIDField):\n+                pk_match = str(rel_obj.pk) == pk_val\n+            else:\n+                pk_match = rel_obj._meta.pk.to_python(pk_val) == rel_obj.pk\n             if ct_match and pk_match:\n                 return rel_obj\n             else:\n", "normalized_occurrence": 1}
