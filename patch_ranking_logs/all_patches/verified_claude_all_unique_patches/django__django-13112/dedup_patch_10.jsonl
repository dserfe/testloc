{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13112", "model_patch": "diff --git a/django/db/migrations/loader.py b/django/db/migrations/loader.py\nindex 20d9b09..d0713ff 100644\n--- a/django/db/migrations/loader.py\n+++ b/django/db/migrations/loader.py\n@@ -62,8 +62,15 @@ class MigrationLoader:\n         if app_label in settings.MIGRATION_MODULES:\n             return settings.MIGRATION_MODULES[app_label], True\n         else:\n-            app_package_name = apps.get_app_config(app_label).name\n-            return '%s.%s' % (app_package_name, MIGRATIONS_MODULE_NAME), False\n+            # Case-insensitive lookup of app config\n+            app_config = None\n+            for config in apps.get_app_configs():\n+                if config.label.lower() == app_label.lower():\n+                    app_config = config\n+                    break\n+            if app_config is None:\n+                return None, False\n+            return '%s.%s' % (app_config.name, MIGRATIONS_MODULE_NAME), False\n \n     def load_disk(self):\n         \"\"\"Load the migrations from all INSTALLED_APPS from disk.\"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/loader.py b/django/db/migrations/loader.py\nindex 58d09ae..f6aab71 100644\n--- a/django/db/migrations/loader.py\n+++ b/django/db/migrations/loader.py\n@@ -21,8 +21,14 @@ class MigrationLoader:\n         if app_label in settings.MIGRATION_MODULES:\n             return (settings.MIGRATION_MODULES[app_label], True)\n         else:\n-            app_package_name = apps.get_app_config(app_label).name\n-            return ('%s.%s' % (app_package_name, MIGRATIONS_MODULE_NAME), False)\n+            app_config = None\n+            for config in apps.get_app_configs():\n+                if config.label.lower() == app_label.lower():\n+                    app_config = config\n+                    break\n+            if app_config is None:\n+                return (None, False)\n+            return ('%s.%s' % (app_config.name, MIGRATIONS_MODULE_NAME), False)\n     def load_disk(self):\n         self.disk_migrations = {}\n         self.unmigrated_apps = set()\n", "normalized_occurrence": 1}
