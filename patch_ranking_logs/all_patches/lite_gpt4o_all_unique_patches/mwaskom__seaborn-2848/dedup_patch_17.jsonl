{"model_name_or_path": "agentless", "instance_id": "mwaskom__seaborn-2848", "model_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 21c0562..70c5781 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -1560,15 +1560,21 @@ class PairGrid(Grid):\n \n         x = data[x_var]\n         y = data[y_var]\n-        if self._hue_var is None:\n-            hue = None\n-        else:\n-            hue = data.get(self._hue_var)\n+        hue = kwargs.pop(\"hue\", None)\n+        if hue is None:\n+            if self._hue_var is None:\n+                hue = None\n+            else:\n+                hue = data.get(self._hue_var)\n \n-        if \"hue\" not in kwargs:\n-            kwargs.update({\n-                \"hue\": hue, \"hue_order\": self._hue_order, \"palette\": self._orig_palette,\n-            })\n+            if \"hue\" not in kwargs:\n+                kwargs.update({\n+                    \"hue\": hue, \"hue_order\": self._hue_order, \"palette\": self._orig_palette,\n+                })\n+        else:\n+            if isinstance(hue, pd.Series) and hue.name in data:\n+                hue = data[hue.name]\n+            kwargs[\"hue\"] = hue\n         func(x=x, y=y, **kwargs)\n \n         self._update_legend_data(ax)\n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 0807052..b7b69be 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -743,12 +743,18 @@ class PairGrid(Grid):\n             data = data.dropna()\n         x = data[x_var]\n         y = data[y_var]\n-        if self._hue_var is None:\n-            hue = None\n+        hue = kwargs.pop('hue', None)\n+        if hue is None:\n+            if self._hue_var is None:\n+                hue = None\n+            else:\n+                hue = data.get(self._hue_var)\n+            if 'hue' not in kwargs:\n+                kwargs.update({'hue': hue, 'hue_order': self._hue_order, 'palette': self._orig_palette})\n         else:\n-            hue = data.get(self._hue_var)\n-        if 'hue' not in kwargs:\n-            kwargs.update({'hue': hue, 'hue_order': self._hue_order, 'palette': self._orig_palette})\n+            if isinstance(hue, pd.Series) and hue.name in data:\n+                hue = data[hue.name]\n+            kwargs['hue'] = hue\n         func(x=x, y=y, **kwargs)\n         self._update_legend_data(ax)\n     def _plot_bivariate_iter_hue(self, x_var, y_var, ax, func, **kwargs):\n", "normalized_occurrence": 1}
