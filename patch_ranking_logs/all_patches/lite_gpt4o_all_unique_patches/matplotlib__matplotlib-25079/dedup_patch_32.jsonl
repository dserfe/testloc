{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25079", "model_patch": "diff --git a/lib/matplotlib/cm.py b/lib/matplotlib/cm.py\nindex 06f543d..bef20dc 100644\n--- a/lib/matplotlib/cm.py\n+++ b/lib/matplotlib/cm.py\n@@ -592,6 +592,9 @@ class ScalarMappable:\n \n     @norm.setter\n     def norm(self, norm):\n+        if isinstance(norm, colors.LogNorm):\n+            if norm.vmin <= 0 or norm.vmax <= 0:\n+                raise ValueError(\"vmin and vmax must be positive for LogNorm\")\n         _api.check_isinstance((colors.Normalize, str, None), norm=norm)\n         if norm is None:\n             norm = colors.Normalize()\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/cm.py b/lib/matplotlib/cm.py\nindex f5a7578..3e84e45 100644\n--- a/lib/matplotlib/cm.py\n+++ b/lib/matplotlib/cm.py\n@@ -176,6 +176,9 @@ class ScalarMappable:\n         return self._norm\n     @norm.setter\n     def norm(self, norm):\n+        if isinstance(norm, colors.LogNorm):\n+            if norm.vmin <= 0 or norm.vmax <= 0:\n+                raise ValueError('vmin and vmax must be positive for LogNorm')\n         _api.check_isinstance((colors.Normalize, str, None), norm=norm)\n         if norm is None:\n             norm = colors.Normalize()\n", "normalized_occurrence": 1}
