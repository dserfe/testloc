{"model_name_or_path": "agentless", "instance_id": "django__django-12470", "model_patch": "diff --git a/django/db/models/options.py b/django/db/models/options.py\nindex 69e5965..89a87aa 100644\n--- a/django/db/models/options.py\n+++ b/django/db/models/options.py\n@@ -159,7 +159,7 @@ class Options:\n         # for use when serializing the model definition\n         self.original_attrs = {}\n \n-        # Next, apply any overridden values from 'class Meta'.\n+        # Next, apply any overridden values from 'class Meta' or inherit from parent Meta.\n         if self.meta:\n             meta_attrs = self.meta.__dict__.copy()\n             for name in self.meta.__dict__:\n@@ -172,9 +172,10 @@ class Options:\n                 if attr_name in meta_attrs:\n                     setattr(self, attr_name, meta_attrs.pop(attr_name))\n                     self.original_attrs[attr_name] = getattr(self, attr_name)\n-                elif hasattr(self.meta, attr_name):\n-                    setattr(self, attr_name, getattr(self.meta, attr_name))\n-                    self.original_attrs[attr_name] = getattr(self, attr_name)\n+                elif hasattr(self.meta, attr_name) or hasattr(getattr(cls, '_meta', self), attr_name):\n+                    val = getattr(self.meta, attr_name, getattr(getattr(cls, '_meta', self), attr_name))\n+                    setattr(self, attr_name, val)\n+                    self.original_attrs[attr_name] = val\n \n             self.unique_together = normalize_together(self.unique_together)\n             self.index_together = normalize_together(self.index_together)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/options.py b/django/db/models/options.py\nindex 0edba5f..d36a35b 100644\n--- a/django/db/models/options.py\n+++ b/django/db/models/options.py\n@@ -106,9 +106,10 @@ class Options:\n                 if attr_name in meta_attrs:\n                     setattr(self, attr_name, meta_attrs.pop(attr_name))\n                     self.original_attrs[attr_name] = getattr(self, attr_name)\n-                elif hasattr(self.meta, attr_name):\n-                    setattr(self, attr_name, getattr(self.meta, attr_name))\n-                    self.original_attrs[attr_name] = getattr(self, attr_name)\n+                elif hasattr(self.meta, attr_name) or hasattr(getattr(cls, '_meta', self), attr_name):\n+                    val = getattr(self.meta, attr_name, getattr(getattr(cls, '_meta', self), attr_name))\n+                    setattr(self, attr_name, val)\n+                    self.original_attrs[attr_name] = val\n             self.unique_together = normalize_together(self.unique_together)\n             self.index_together = normalize_together(self.index_together)\n             if not getattr(cls._meta, 'abstract', False):\n", "normalized_occurrence": 1}
