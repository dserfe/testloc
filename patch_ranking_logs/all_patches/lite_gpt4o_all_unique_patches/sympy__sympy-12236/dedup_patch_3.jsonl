{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-12236", "model_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 03af2f5..0bb6e5f 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -73,7 +73,7 @@ def apart(f, x=None, full=False, **options):\n     f = sympify(f)\n \n     if f.is_Atom:\n-        return f\n+        return f.apart(x)\n     else:\n         P, Q = f.as_numer_denom()\n \n@@ -146,7 +146,7 @@ def apart(f, x=None, full=False, **options):\n         else:\n             terms += factor(term)\n \n-    return common*(poly.as_expr() + terms)\n+    return common * (poly.as_expr() + terms).apart(x)\n \n \n def apart_undetermined_coeffs(P, Q):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 21c4bd7..cc3d234 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -13,7 +13,7 @@ def apart(f, x=None, full=False, **options):\n     allowed_flags(options, [])\n     f = sympify(f)\n     if f.is_Atom:\n-        return f\n+        return f.apart(x)\n     else:\n         P, Q = f.as_numer_denom()\n     _options = options.copy()\n@@ -74,7 +74,7 @@ def apart(f, x=None, full=False, **options):\n             terms += term\n         else:\n             terms += factor(term)\n-    return common * (poly.as_expr() + terms)\n+    return common * (poly.as_expr() + terms).apart(x)\n def apart_undetermined_coeffs(P, Q):\n     X = numbered_symbols(cls=Dummy)\n     partial, symbols = ([], [])\n", "normalized_occurrence": 1}
