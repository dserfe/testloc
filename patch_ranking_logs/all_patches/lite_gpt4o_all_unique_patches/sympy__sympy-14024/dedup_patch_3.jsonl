{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-14024", "model_patch": "diff --git a/sympy/core/power.py b/sympy/core/power.py\nindex 0a340d5..20100ec 100644\n--- a/sympy/core/power.py\n+++ b/sympy/core/power.py\n@@ -314,7 +314,7 @@ class Pow(Expr):\n             elif ask(Q.odd(e), assumptions):\n                 return -Pow(-b, e)\n \n-    def _eval_power(self, other):\n+    def _eval_power(self, other, **hints):\n         from sympy import Abs, arg, exp, floor, im, log, re, sign\n         b, e = self.as_base_exp()\n         if b is S.NaN:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/power.py b/sympy/core/power.py\nindex f12eb85..8d7f134 100644\n--- a/sympy/core/power.py\n+++ b/sympy/core/power.py\n@@ -149,7 +149,7 @@ class Pow(Expr):\n                 return Pow(-b, e)\n             elif ask(Q.odd(e), assumptions):\n                 return -Pow(-b, e)\n-    def _eval_power(self, other):\n+    def _eval_power(self, other, **hints):\n         from sympy import Abs, arg, exp, floor, im, log, re, sign\n         b, e = self.as_base_exp()\n         if b is S.NaN:\n", "normalized_occurrence": 1}
