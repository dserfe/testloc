{"model_name_or_path": "agentless_claude", "instance_id": "astropy__astropy-7671", "model_patch": "diff --git a/astropy/utils/introspection.py b/astropy/utils/introspection.py\nindex c8df9c0..9886e71 100644\n--- a/astropy/utils/introspection.py\n+++ b/astropy/utils/introspection.py\n@@ -139,10 +139,11 @@ def minversion(module, version, inclusive=True, version_path='__version__'):\n     else:\n         have_version = resolve_name(module.__name__, version_path)\n \n+    from pkg_resources import parse_version\n     if inclusive:\n-        return LooseVersion(have_version) >= LooseVersion(version)\n+        return parse_version(have_version) >= parse_version(version)\n     else:\n-        return LooseVersion(have_version) > LooseVersion(version)\n+        return parse_version(have_version) > parse_version(version)\n \n \n def find_current_module(depth=1, finddiff=False):\n", "occurrence": 23, "normalized_patch": "diff --git a/astropy/utils/introspection.py b/astropy/utils/introspection.py\nindex 3431535..774c996 100644\n--- a/astropy/utils/introspection.py\n+++ b/astropy/utils/introspection.py\n@@ -48,10 +48,11 @@ def minversion(module, version, inclusive=True, version_path='__version__'):\n         have_version = getattr(module, version_path)\n     else:\n         have_version = resolve_name(module.__name__, version_path)\n+    from pkg_resources import parse_version\n     if inclusive:\n-        return LooseVersion(have_version) >= LooseVersion(version)\n+        return parse_version(have_version) >= parse_version(version)\n     else:\n-        return LooseVersion(have_version) > LooseVersion(version)\n+        return parse_version(have_version) > parse_version(version)\n def find_current_module(depth=1, finddiff=False):\n     frm = inspect.currentframe()\n     for i in range(depth):\n", "normalized_occurrence": 23}
