{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-21627", "model_patch": "diff --git a/sympy/functions/elementary/hyperbolic.py b/sympy/functions/elementary/hyperbolic.py\nindex db125b2..246ac0a 100644\n--- a/sympy/functions/elementary/hyperbolic.py\n+++ b/sympy/functions/elementary/hyperbolic.py\n@@ -264,11 +264,6 @@ class sinh(HyperbolicFunction):\n         arg = self.args[0]\n         return arg.is_finite\n \n-    def _eval_is_zero(self):\n-        arg = self.args[0]\n-        if arg.is_zero:\n-            return True\n-\n \n class cosh(HyperbolicFunction):\n     r\"\"\"\n@@ -499,6 +494,13 @@ class cosh(HyperbolicFunction):\n         arg = self.args[0]\n         return arg.is_finite\n \n+    def _eval_is_zero(self):\n+        # cosh(x) is never zero for real x\n+        # for complex x, cosh(x) = 0 only for specific values\n+        # but checking the exact condition is complex and could lead to recursion\n+        if self.args[0].is_real:\n+            return False\n+\n \n class tanh(HyperbolicFunction):\n     r\"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/hyperbolic.py b/sympy/functions/elementary/hyperbolic.py\nindex f81ffb5..e6e232a 100644\n--- a/sympy/functions/elementary/hyperbolic.py\n+++ b/sympy/functions/elementary/hyperbolic.py\n@@ -157,10 +157,6 @@ class sinh(HyperbolicFunction):\n     def _eval_is_finite(self):\n         arg = self.args[0]\n         return arg.is_finite\n-    def _eval_is_zero(self):\n-        arg = self.args[0]\n-        if arg.is_zero:\n-            return True\n class cosh(HyperbolicFunction):\n     def fdiff(self, argindex=1):\n         if argindex == 1:\n@@ -301,6 +297,9 @@ class cosh(HyperbolicFunction):\n     def _eval_is_finite(self):\n         arg = self.args[0]\n         return arg.is_finite\n+    def _eval_is_zero(self):\n+        if self.args[0].is_real:\n+            return False\n class tanh(HyperbolicFunction):\n     def fdiff(self, argindex=1):\n         if argindex == 1:\n", "normalized_occurrence": 1}
