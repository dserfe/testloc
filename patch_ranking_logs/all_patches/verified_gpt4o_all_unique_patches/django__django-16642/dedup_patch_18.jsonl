{"model_name_or_path": "agentless", "instance_id": "django__django-16642", "model_patch": "diff --git a/django/http/response.py b/django/http/response.py\nindex b918697..b27eff6 100644\n--- a/django/http/response.py\n+++ b/django/http/response.py\n@@ -613,9 +613,15 @@ class FileResponse(StreamingHttpResponse):\n                     \"gzip\": \"application/gzip\",\n                     \"xz\": \"application/x-xz\",\n                 }.get(encoding, content_type)\n-                self.headers[\"Content-Type\"] = (\n-                    content_type or \"application/octet-stream\"\n-                )\n+                # Handle 'Z' and 'br' extensions specifically\n+                if filename.endswith('.Z'):\n+                    self.headers[\"Content-Type\"] = 'application/x-compress'\n+                elif filename.endswith('.br'):\n+                    self.headers[\"Content-Type\"] = 'application/x-brotli'\n+                else:\n+                    self.headers[\"Content-Type\"] = (\n+                        content_type or \"application/octet-stream\"\n+                    )\n             else:\n                 self.headers[\"Content-Type\"] = \"application/octet-stream\"\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/http/response.py b/django/http/response.py\nindex 508a8a7..d95abb6 100644\n--- a/django/http/response.py\n+++ b/django/http/response.py\n@@ -330,7 +330,12 @@ class FileResponse(StreamingHttpResponse):\n             if filename:\n                 content_type, encoding = mimetypes.guess_type(filename)\n                 content_type = {'bzip2': 'application/x-bzip', 'gzip': 'application/gzip', 'xz': 'application/x-xz'}.get(encoding, content_type)\n-                self.headers['Content-Type'] = content_type or 'application/octet-stream'\n+                if filename.endswith('.Z'):\n+                    self.headers['Content-Type'] = 'application/x-compress'\n+                elif filename.endswith('.br'):\n+                    self.headers['Content-Type'] = 'application/x-brotli'\n+                else:\n+                    self.headers['Content-Type'] = content_type or 'application/octet-stream'\n             else:\n                 self.headers['Content-Type'] = 'application/octet-stream'\n         if (content_disposition := content_disposition_header(self.as_attachment, filename)):\n", "normalized_occurrence": 6}
