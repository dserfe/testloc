{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11815", "model_patch": "diff --git a/django/db/migrations/writer.py b/django/db/migrations/writer.py\nindex 36f0ec3..3951e1a 100644\n--- a/django/db/migrations/writer.py\n+++ b/django/db/migrations/writer.py\n@@ -268,6 +268,11 @@ class MigrationWriter:\n \n     @classmethod\n     def serialize(cls, value):\n+        # Special handling for Enum values to use name instead of value\n+        if value.__class__.__class__ is type(Enum):\n+            for member in type(value).__members__.values():\n+                if member is value:\n+                    return f\"{type(value).__name__}['{member.name}']\"\n         return serializer_factory(value).serialize()\n \n     @classmethod\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/writer.py b/django/db/migrations/writer.py\nindex acf3688..e79674e 100644\n--- a/django/db/migrations/writer.py\n+++ b/django/db/migrations/writer.py\n@@ -186,6 +186,10 @@ class MigrationWriter:\n         return os.path.join(self.basedir, self.filename)\n     @classmethod\n     def serialize(cls, value):\n+        if value.__class__.__class__ is type(Enum):\n+            for member in type(value).__members__.values():\n+                if member is value:\n+                    return f\"{type(value).__name__}['{member.name}']\"\n         return serializer_factory(value).serialize()\n     @classmethod\n     def register_serializer(cls, type_, serializer):\n", "normalized_occurrence": 1}
