{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-15609", "model_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 4afd374..9b1cc24 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -546,7 +546,7 @@ class LatexPrinter(Printer):\n \n     def _print_Sum(self, expr):\n         if len(expr.limits) == 1:\n-            tex = r\"\\sum_{%s=%s}^{%s} \" % \\\n+            tex = r\"\\sum_{%s={%s}}^{%s} \" % \\\n                 tuple([ self._print(i) for i in expr.limits[0] ])\n         else:\n             def _format_ineq(l):\n@@ -615,7 +615,7 @@ class LatexPrinter(Printer):\n     def _print_Indexed(self, expr):\n         tex_base = self._print(expr.base)\n         tex = '{'+tex_base+'}'+'_{%s}' % ','.join(\n-            map(self._print, expr.indices))\n+            '{'+self._print(i)+'}' for i in expr.indices)\n         return tex\n \n     def _print_IndexedBase(self, expr):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex bf7c5bb..67e5360 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -299,7 +299,7 @@ class LatexPrinter(Printer):\n         return self._print(expr.args[0])\n     def _print_Sum(self, expr):\n         if len(expr.limits) == 1:\n-            tex = '\\\\sum_{%s=%s}^{%s} ' % tuple([self._print(i) for i in expr.limits[0]])\n+            tex = '\\\\sum_{%s={%s}}^{%s} ' % tuple([self._print(i) for i in expr.limits[0]])\n         else:\n             def _format_ineq(l):\n                 return '%s \\\\leq %s \\\\leq %s' % tuple([self._print(s) for s in (l[1], l[0], l[2])])\n@@ -349,7 +349,7 @@ class LatexPrinter(Printer):\n         return outstr\n     def _print_Indexed(self, expr):\n         tex_base = self._print(expr.base)\n-        tex = '{' + tex_base + '}' + '_{%s}' % ','.join(map(self._print, expr.indices))\n+        tex = '{' + tex_base + '}' + '_{%s}' % ','.join(('{' + self._print(i) + '}' for i in expr.indices))\n         return tex\n     def _print_IndexedBase(self, expr):\n         return self._print(expr.label)\n", "normalized_occurrence": 1}
