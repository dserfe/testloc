{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-8365", "model_patch": "diff --git a/src/_pytest/tmpdir.py b/src/_pytest/tmpdir.py\nindex cae5caf..0941de1 100644\n--- a/src/_pytest/tmpdir.py\n+++ b/src/_pytest/tmpdir.py\n@@ -150,11 +150,16 @@ class TempdirFactory:\n \n def get_user() -> Optional[str]:\n     \"\"\"Return the current user name, or None if getuser() does not work\n-    in the current environment (see #1010).\"\"\"\n+    in the current environment (see #1010).\n+    The username is sanitized to remove characters that are illegal in file paths.\"\"\"\n     import getpass\n+    import re\n \n     try:\n-        return getpass.getuser()\n+        username = getpass.getuser()\n+        # Replace illegal characters with underscore\n+        # Windows illegal chars: \\ / : * ? \" < > |\n+        return re.sub(r'[\\\\/:\"*?<>|]+', '_', username)\n     except (ImportError, KeyError):\n         return None\n \n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/tmpdir.py b/src/_pytest/tmpdir.py\nindex 6f08c0a..f1d8970 100644\n--- a/src/_pytest/tmpdir.py\n+++ b/src/_pytest/tmpdir.py\n@@ -78,8 +78,10 @@ class TempdirFactory:\n         return py.path.local(self._tmppath_factory.getbasetemp().resolve())\n def get_user() -> Optional[str]:\n     import getpass\n+    import re\n     try:\n-        return getpass.getuser()\n+        username = getpass.getuser()\n+        return re.sub('[\\\\\\\\/:\"*?<>|]+', '_', username)\n     except (ImportError, KeyError):\n         return None\n def pytest_configure(config: Config) -> None:\n", "normalized_occurrence": 1}
