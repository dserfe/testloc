{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-8801", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 9e67bb6..f83fe55 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -2398,6 +2398,10 @@ class AttributeDocumenter(GenericAliasMixin, NewTypeMixin, SlotsMixin,  # type:\n               not inspect.isroutine(member) and\n               not isinstance(member, type)):\n             return True\n+        elif (inspect.isclass(parent) and\n+              any(membername in getattr(cls_, '__annotations__', {})\n+                  for cls_ in inspect.getmro(parent))):\n+            return True\n         else:\n             return False\n \n", "occurrence": 4, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex e1d3d5c..c4b5906 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1397,6 +1397,8 @@ class AttributeDocumenter(GenericAliasMixin, NewTypeMixin, SlotsMixin, TypeVarMi\n             return True\n         elif not isinstance(parent, ModuleDocumenter) and (not inspect.isroutine(member)) and (not isinstance(member, type)):\n             return True\n+        elif inspect.isclass(parent) and any((membername in getattr(cls_, '__annotations__', {}) for cls_ in inspect.getmro(parent))):\n+            return True\n         else:\n             return False\n     def document_members(self, all_members: bool=False) -> None:\n", "normalized_occurrence": 4}
