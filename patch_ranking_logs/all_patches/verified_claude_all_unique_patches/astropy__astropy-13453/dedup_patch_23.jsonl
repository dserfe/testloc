{"model_name_or_path": "agentless_claude", "instance_id": "astropy__astropy-13453", "model_patch": "diff --git a/astropy/io/ascii/html.py b/astropy/io/ascii/html.py\nindex 1220930..8a3ea97 100644\n--- a/astropy/io/ascii/html.py\n+++ b/astropy/io/ascii/html.py\n@@ -423,6 +423,9 @@ class HTML(core.BaseReader):\n                         # requires that the weakref info._parent be maintained.\n                         new_cols = []\n \n+                        # Set column formats before getting string values\n+                        self.data._set_col_formats()\n+                        \n                         for col, col_escaped in zip(cols, cols_escaped):\n                             if len(col.shape) > 1 and self.html['multicol']:\n                                 span = col.shape[1]\n@@ -436,7 +439,6 @@ class HTML(core.BaseReader):\n                                     new_cols_escaped.append(col_escaped)\n                                     new_cols.append(new_col)\n                             else:\n-\n                                 col_iter_str_vals = self.fill_values(col, col.info.iter_str_vals())\n                                 col_str_iters.append(col_iter_str_vals)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/io/ascii/html.py b/astropy/io/ascii/html.py\nindex 45fa153..ccb474c 100644\n--- a/astropy/io/ascii/html.py\n+++ b/astropy/io/ascii/html.py\n@@ -207,6 +207,7 @@ class HTML(core.BaseReader):\n                         col_str_iters = []\n                         new_cols_escaped = []\n                         new_cols = []\n+                        self.data._set_col_formats()\n                         for col, col_escaped in zip(cols, cols_escaped):\n                             if len(col.shape) > 1 and self.html['multicol']:\n                                 span = col.shape[1]\n", "normalized_occurrence": 1}
