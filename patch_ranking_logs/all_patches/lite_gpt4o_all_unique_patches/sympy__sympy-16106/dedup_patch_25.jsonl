{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-16106", "model_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 59074b8..92d0770 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -1011,10 +1011,11 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n         mi = self.dom.createElement('mi')\n         mi.appendChild(self.dom.createTextNode(self.mathml_tag(e)))\n         mrow.appendChild(mi)\n-        brac = self.dom.createElement('mfenced')\n-        for arg in e.args:\n-            brac.appendChild(self._print(arg))\n-        mrow.appendChild(brac)\n+        if hasattr(e, 'args'):\n+            brac = self.dom.createElement('mfenced')\n+            for arg in e.args:\n+                brac.appendChild(self._print(arg))\n+            mrow.appendChild(brac)\n         return mrow\n \n     def _print_Tuple(self, e):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 6d7dfb1..86cc2de 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -751,10 +751,11 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n         mi = self.dom.createElement('mi')\n         mi.appendChild(self.dom.createTextNode(self.mathml_tag(e)))\n         mrow.appendChild(mi)\n-        brac = self.dom.createElement('mfenced')\n-        for arg in e.args:\n-            brac.appendChild(self._print(arg))\n-        mrow.appendChild(brac)\n+        if hasattr(e, 'args'):\n+            brac = self.dom.createElement('mfenced')\n+            for arg in e.args:\n+                brac.appendChild(self._print(arg))\n+            mrow.appendChild(brac)\n         return mrow\n     def _print_Tuple(self, e):\n         mrow = self.dom.createElement('mrow')\n", "normalized_occurrence": 1}
