{"model_name_or_path": "agentless", "instance_id": "django__django-12589", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 56581f2..1ab22ab 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -125,9 +125,15 @@ class SQLCompiler:\n             # select clause are already part of the group by.\n             if not is_ref:\n                 expressions.extend(expr.get_group_by_cols())\n+        subquery_group_by = set()\n+        for expr in select:\n+            if isinstance(expr[0], Subquery):\n+                subquery_group_by.update(expr[0].get_source_expressions())\n         having_group_by = self.having.get_group_by_cols() if self.having else ()\n         for expr in having_group_by:\n             expressions.append(expr)\n+        for expr in subquery_group_by:\n+            expressions.append(expr)\n         result = []\n         seen = set()\n         expressions = self.collapse_group_by(expressions, having_group_by)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex aa7c887..9ffa8e5 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -57,9 +57,15 @@ class SQLCompiler:\n         for expr, (sql, params, is_ref) in order_by:\n             if not is_ref:\n                 expressions.extend(expr.get_group_by_cols())\n+        subquery_group_by = set()\n+        for expr in select:\n+            if isinstance(expr[0], Subquery):\n+                subquery_group_by.update(expr[0].get_source_expressions())\n         having_group_by = self.having.get_group_by_cols() if self.having else ()\n         for expr in having_group_by:\n             expressions.append(expr)\n+        for expr in subquery_group_by:\n+            expressions.append(expr)\n         result = []\n         seen = set()\n         expressions = self.collapse_group_by(expressions, having_group_by)\n", "normalized_occurrence": 1}
