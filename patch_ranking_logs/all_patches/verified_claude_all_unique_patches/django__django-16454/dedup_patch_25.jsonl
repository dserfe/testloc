{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16454", "model_patch": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex f221176..c752396 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -71,6 +71,21 @@ class CommandParser(ArgumentParser):\n         else:\n             raise CommandError(\"Error: %s\" % message)\n \n+    def add_subparsers(self, **kwargs):\n+        # Self-override parser_class so subparsers use the same class and kwargs as the parent\n+        kwargs.setdefault('parser_class', type(self))\n+        action = super().add_subparsers(**kwargs)\n+\n+        # Ensure the parser class for subparsers is the same as the parent\n+        # and propagate defaults for missing_args_message and called_from_command_line\n+        original_add_parser = action.add_parser\n+        def add_parser(name, **subparser_kwargs):\n+            subparser_kwargs.setdefault('missing_args_message', self.missing_args_message)\n+            subparser_kwargs.setdefault('called_from_command_line', self.called_from_command_line)\n+            return original_add_parser(name, **subparser_kwargs)\n+        action.add_parser = add_parser\n+        return action\n+\n \n def handle_default_options(options):\n     \"\"\"\n", "occurrence": 1, "normalized_patch": "--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n+    def add_subparsers(self, **kwargs):\n+        kwargs.setdefault('parser_class', type(self))\n+        action = super().add_subparsers(**kwargs)\n+        original_add_parser = action.add_parser\n+        def add_parser(name, **subparser_kwargs):\n+            subparser_kwargs.setdefault('missing_args_message', self.missing_args_message)\n+            subparser_kwargs.setdefault('called_from_command_line', self.called_from_command_line)\n+            return original_add_parser(name, **subparser_kwargs)\n+        action.add_parser = add_parser\n+        return action", "normalized_occurrence": 1}
