{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8593", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex c412096..9df3e73 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -738,6 +738,16 @@ class Documenter:\n             else:\n                 isprivate = membername.startswith('_')\n \n+            # check for metadata first before defaulting to private\n+            if 'private' in metadata:\n+                # consider a member private if docstring has \"private\" metadata\n+                isprivate = True\n+            elif 'public' in metadata:\n+                # consider a member public if docstring has \"public\" metadata\n+                isprivate = False\n+            else:\n+                isprivate = membername.startswith('_')\n+\n             keep = False\n             if safe_getattr(member, '__sphinx_mock__', None) is not None:\n                 # mocked module or object\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex f71844a..72f8a15 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -379,6 +379,12 @@ class Documenter:\n                 doc = obj.docstring\n             has_doc = bool(doc)\n             metadata = extract_metadata(doc)\n+            if 'private' in metadata:\n+                isprivate = True\n+            elif 'public' in metadata:\n+                isprivate = False\n+            else:\n+                isprivate = membername.startswith('_')\n             if 'private' in metadata:\n                 isprivate = True\n             elif 'public' in metadata:\n", "normalized_occurrence": 1}
