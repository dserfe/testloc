{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14351", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex e16dbc0..a648be1 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -232,6 +232,12 @@ class SQLCompiler:\n             cols = self.query.select\n         if cols:\n             select_list = []\n+            # For subqueries in OR conditions with __in lookups, only select the ID field\n+            if (self.query.subquery and \n+                any(isinstance(child, tuple) and child[0].endswith('__in') \n+                    for child in getattr(self.query.where.children[0], 'children', [])\n+                    if hasattr(self.query.where.children[0], 'children'))):\n+                cols = [cols[0]]  # Take only the first column which should be the ID\n             for col in cols:\n                 select_list.append(select_idx)\n                 select.append((col, None))\n", "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex b3e101b..1868828 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -104,6 +104,8 @@ class SQLCompiler:\n             cols = self.query.select\n         if cols:\n             select_list = []\n+            if self.query.subquery and any((isinstance(child, tuple) and child[0].endswith('__in') for child in getattr(self.query.where.children[0], 'children', []) if hasattr(self.query.where.children[0], 'children'))):\n+                cols = [cols[0]]\n             for col in cols:\n                 select_list.append(select_idx)\n                 select.append((col, None))\n", "normalized_occurrence": 1}
