{"model_name_or_path": "agentless", "instance_id": "django__django-16877", "model_patch": "diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py\nindex 693c70d..95c0bfd 100644\n--- a/django/template/defaultfilters.py\n+++ b/django/template/defaultfilters.py\n@@ -593,6 +593,17 @@ def join(value, arg, autoescape=True):\n         return value\n     return mark_safe(data)\n \n+@register.filter(is_safe=True, needs_autoescape=True)\n+def escapeseq(value, autoescape=True):\n+    \"\"\"Escape each item in a list.\"\"\"\n+    try:\n+        if autoescape:\n+            data = [conditional_escape(item) for item in value]\n+        else:\n+            data = list(value)  # Make a copy of the list\n+    except TypeError:  # Fail silently if value isn't iterable.\n+        return value\n+    return data\n \n @register.filter(is_safe=True)\n def last(value):\n", "occurrence": 1, "normalized_patch": "--- a/django/template/defaultfilters.py\n+++ b/django/template/defaultfilters.py\n+@register.filter(is_safe=True, needs_autoescape=True)\n+def escapeseq(value, autoescape=True):\n+    try:\n+        if autoescape:\n+            data = [conditional_escape(item) for item in value]\n+        else:\n+            data = list(value)\n+    except TypeError:\n+        return value\n+    return data", "normalized_occurrence": 1}
