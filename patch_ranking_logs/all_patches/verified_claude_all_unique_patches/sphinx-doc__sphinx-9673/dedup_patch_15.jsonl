{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-9673", "model_patch": "diff --git a/sphinx/ext/napoleon/docstring.py b/sphinx/ext/napoleon/docstring.py\nindex ea465e6..3fbc234 100644\n--- a/sphinx/ext/napoleon/docstring.py\n+++ b/sphinx/ext/napoleon/docstring.py\n@@ -776,7 +776,13 @@ class GoogleDocstring:\n \n         lines: List[str] = []\n         for _name, _type, _desc in fields:\n-            if use_rtype:\n+            # Always include type in the field when autodoc_typehints_description_target is \"documented\"\n+            typehints_in_descriptions = False\n+            if hasattr(self._config, 'autodoc_typehints') and hasattr(self._config, 'autodoc_typehints_description_target'):\n+                if self._config.autodoc_typehints == \"description\" and self._config.autodoc_typehints_description_target == \"documented\":\n+                    typehints_in_descriptions = True\n+\n+            if use_rtype and not typehints_in_descriptions:\n                 field = self._format_field(_name, '', _desc)\n             else:\n                 field = self._format_field(_name, _type, _desc)\n@@ -788,7 +794,7 @@ class GoogleDocstring:\n                     lines.extend(self._format_block(':returns: * ', field))\n             else:\n                 lines.extend(self._format_block(':returns: ', field))\n-                if _type and use_rtype:\n+                if _type and use_rtype and not typehints_in_descriptions:\n                     lines.extend([':rtype: %s' % _type, ''])\n         if lines and lines[-1]:\n             lines.append('')\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/napoleon/docstring.py b/sphinx/ext/napoleon/docstring.py\nindex bc7a995..98b0db7 100644\n--- a/sphinx/ext/napoleon/docstring.py\n+++ b/sphinx/ext/napoleon/docstring.py\n@@ -513,7 +513,11 @@ class GoogleDocstring:\n             use_rtype = self._config.napoleon_use_rtype\n         lines: List[str] = []\n         for _name, _type, _desc in fields:\n-            if use_rtype:\n+            typehints_in_descriptions = False\n+            if hasattr(self._config, 'autodoc_typehints') and hasattr(self._config, 'autodoc_typehints_description_target'):\n+                if self._config.autodoc_typehints == 'description' and self._config.autodoc_typehints_description_target == 'documented':\n+                    typehints_in_descriptions = True\n+            if use_rtype and (not typehints_in_descriptions):\n                 field = self._format_field(_name, '', _desc)\n             else:\n                 field = self._format_field(_name, _type, _desc)\n@@ -524,7 +528,7 @@ class GoogleDocstring:\n                     lines.extend(self._format_block(':returns: * ', field))\n             else:\n                 lines.extend(self._format_block(':returns: ', field))\n-                if _type and use_rtype:\n+                if _type and use_rtype and (not typehints_in_descriptions):\n                     lines.extend([':rtype: %s' % _type, ''])\n         if lines and lines[-1]:\n             lines.append('')\n", "normalized_occurrence": 1}
