{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13158", "model_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 56fc5f8..9d11210 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -1342,6 +1342,9 @@ class ModelMultipleChoiceField(ModelChoiceField):\n         invalid (not a valid PK, not in the queryset, etc.)\n         \"\"\"\n         key = self.to_field_name or 'pk'\n+        # Return empty queryset if no values are provided\n+        if not value:\n+            return self.queryset.none()\n         # deduplicate given values to avoid creating many querysets or\n         # requiring the database backend deduplicate efficiently.\n         try:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 4e65eaf..66f1ae3 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -697,6 +697,8 @@ class ModelMultipleChoiceField(ModelChoiceField):\n         return qs\n     def _check_values(self, value):\n         key = self.to_field_name or 'pk'\n+        if not value:\n+            return self.queryset.none()\n         try:\n             value = frozenset(value)\n         except TypeError:\n", "normalized_occurrence": 2}
