{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-25433", "model_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex f12a9a3..3d3d958 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -983,7 +983,12 @@ class RangeSlider(SliderBase):\n         int\n             Connection id (which can be used to disconnect *func*).\n         \"\"\"\n-        return self._observers.connect('changed', lambda val: func(val))\n+        def wrapped_func(val):\n+            # Ensure the callback is processed after the slider event is complete\n+            if self.figure.canvas:\n+                self.figure.canvas.draw_idle()\n+            return func(val)\n+        return self._observers.connect('changed', wrapped_func)\n \n \n def _expand_text_props(props):\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex 2882ff9..f217922 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -795,7 +795,12 @@ class RangeSlider(SliderBase):\n         int\n             Connection id (which can be used to disconnect *func*).\n         \"\"\"\n-        return self._observers.connect('changed', lambda val: func(val))\n+\n+        def wrapped_func(val):\n+            if self.figure.canvas:\n+                self.figure.canvas.draw_idle()\n+            return func(val)\n+        return self._observers.connect('changed', wrapped_func)\n \n def _expand_text_props(props):\n     props = cbook.normalize_kwargs(props, mtext.Text)\n", "normalized_occurrence": 1}
