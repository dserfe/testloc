{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-24539", "model_patch": "diff --git a/sympy/polys/rings.py b/sympy/polys/rings.py\nindex 8995407..4a74705 100644\n--- a/sympy/polys/rings.py\n+++ b/sympy/polys/rings.py\n@@ -613,6 +613,7 @@ class PolyElement(DomainElement, DefaultPrinting, CantSympify, dict):\n             terms = list(zip(*_dict_reorder(self, self.ring.symbols, new_ring.symbols)))\n             return new_ring.from_terms(terms, self.ring.domain)\n         else:\n+            symbols = self.ring.symbols\n             return new_ring.from_dict(self, self.ring.domain)\n \n     def as_expr(self, *symbols):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/rings.py b/sympy/polys/rings.py\nindex 082d6a9..9a4344d 100644\n--- a/sympy/polys/rings.py\n+++ b/sympy/polys/rings.py\n@@ -335,6 +335,7 @@ class PolyElement(DomainElement, DefaultPrinting, CantSympify, dict):\n             terms = list(zip(*_dict_reorder(self, self.ring.symbols, new_ring.symbols)))\n             return new_ring.from_terms(terms, self.ring.domain)\n         else:\n+            symbols = self.ring.symbols\n             return new_ring.from_dict(self, self.ring.domain)\n     def as_expr(self, *symbols):\n         if symbols and len(symbols) != self.ring.ngens:\n", "normalized_occurrence": 1}
