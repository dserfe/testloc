{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-21379", "model_patch": "diff --git a/sympy/functions/elementary/piecewise.py b/sympy/functions/elementary/piecewise.py\nindex 218f537..255a3c3 100644\n--- a/sympy/functions/elementary/piecewise.py\n+++ b/sympy/functions/elementary/piecewise.py\n@@ -132,10 +132,15 @@ class Piecewise(Function):\n             if cond is true:\n                 break\n \n-        if options.pop('evaluate', True):\n+        evaluate_option = options.pop('evaluate', True)\n+        if evaluate_option:\n             r = cls.eval(*newargs)\n+            if r is None:\n+                r = Basic.__new__(cls, *newargs, **options)\n+            else:\n+                return r\n         else:\n-            r = None\n+            r = Basic.__new__(cls, *newargs, **options)\n \n         if r is None:\n             return Basic.__new__(cls, *newargs, **options)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/piecewise.py b/sympy/functions/elementary/piecewise.py\nindex e1c61a2..d096983 100644\n--- a/sympy/functions/elementary/piecewise.py\n+++ b/sympy/functions/elementary/piecewise.py\n@@ -50,10 +50,15 @@ class Piecewise(Function):\n             newargs.append(pair)\n             if cond is true:\n                 break\n-        if options.pop('evaluate', True):\n+        evaluate_option = options.pop('evaluate', True)\n+        if evaluate_option:\n             r = cls.eval(*newargs)\n+            if r is None:\n+                r = Basic.__new__(cls, *newargs, **options)\n+            else:\n+                return r\n         else:\n-            r = None\n+            r = Basic.__new__(cls, *newargs, **options)\n         if r is None:\n             return Basic.__new__(cls, *newargs, **options)\n         else:\n", "normalized_occurrence": 1}
