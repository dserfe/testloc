{"model_name_or_path": "agentless", "instance_id": "django__django-11149", "model_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex acc7653..78b096f 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -2046,7 +2046,7 @@ class InlineModelAdmin(BaseModelAdmin):\n \n         base_model_form = defaults['form']\n         can_change = self.has_change_permission(request, obj) if request else True\n-        can_add = self.has_add_permission(request, obj) if request else True\n+        can_add = self.has_add_permission(request, obj) if request else False\n \n         class DeleteProtectedModelForm(base_model_form):\n \n@@ -2091,6 +2091,7 @@ class InlineModelAdmin(BaseModelAdmin):\n                 # Protect against unauthorized edits.\n                 if not can_change and not self.instance._state.adding:\n                     return False\n+                    return False\n                 if not can_add and self.instance._state.adding:\n                     return False\n                 return super().has_changed()\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex b043b1a..0fc25a5 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -1003,7 +1003,7 @@ class InlineModelAdmin(BaseModelAdmin):\n         defaults = {'form': self.form, 'formset': self.formset, 'fk_name': self.fk_name, 'fields': fields, 'exclude': exclude, 'formfield_callback': partial(self.formfield_for_dbfield, request=request), 'extra': self.get_extra(request, obj, **kwargs), 'min_num': self.get_min_num(request, obj, **kwargs), 'max_num': self.get_max_num(request, obj, **kwargs), 'can_delete': can_delete, **kwargs}\n         base_model_form = defaults['form']\n         can_change = self.has_change_permission(request, obj) if request else True\n-        can_add = self.has_add_permission(request, obj) if request else True\n+        can_add = self.has_add_permission(request, obj) if request else False\n         class DeleteProtectedModelForm(base_model_form):\n             def hand_clean_DELETE(self):\n                 if self.cleaned_data.get(DELETION_FIELD_NAME, False):\n@@ -1026,6 +1026,7 @@ class InlineModelAdmin(BaseModelAdmin):\n             def has_changed(self):\n                 if not can_change and (not self.instance._state.adding):\n                     return False\n+                    return False\n                 if not can_add and self.instance._state.adding:\n                     return False\n                 return super().has_changed()\n", "normalized_occurrence": 1}
