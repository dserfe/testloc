{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13773", "model_patch": "diff --git a/sympy/matrices/expressions/matmul.py b/sympy/matrices/expressions/matmul.py\nindex 13b44f5..177c92d 100644\n--- a/sympy/matrices/expressions/matmul.py\n+++ b/sympy/matrices/expressions/matmul.py\n@@ -135,6 +135,12 @@ class MatMul(MatrixExpr):\n \n def validate(*matrices):\n     \"\"\" Checks for valid shapes for args of MatMul \"\"\"\n+    # First check that all arguments are actually matrices\n+    for mat in matrices:\n+        if not mat.is_Matrix:\n+            raise TypeError(\"Scalar operands are not allowed for matrix multiplication (@), use '*' instead\")\n+    \n+    # Then check matrix dimensions\n     for i in range(len(matrices)-1):\n         A, B = matrices[i:i+2]\n         if A.cols != B.rows:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/expressions/matmul.py b/sympy/matrices/expressions/matmul.py\nindex c9124f3..f37a943 100644\n--- a/sympy/matrices/expressions/matmul.py\n+++ b/sympy/matrices/expressions/matmul.py\n@@ -86,6 +86,9 @@ class MatMul(MatrixExpr):\n         coeff_c, coeff_nc = coeff.args_cnc(**kwargs)\n         return (coeff_c, coeff_nc + matrices)\n def validate(*matrices):\n+    for mat in matrices:\n+        if not mat.is_Matrix:\n+            raise TypeError(\"Scalar operands are not allowed for matrix multiplication (@), use '*' instead\")\n     for i in range(len(matrices) - 1):\n         A, B = matrices[i:i + 2]\n         if A.cols != B.rows:\n", "normalized_occurrence": 1}
