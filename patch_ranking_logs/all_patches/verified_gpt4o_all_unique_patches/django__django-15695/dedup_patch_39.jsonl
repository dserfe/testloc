{"model_name_or_path": "agentless", "instance_id": "django__django-15695", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex b086232..fff6f27 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -963,7 +963,12 @@ class RenameIndex(IndexOperation):\n \n         to_model_state = to_state.models[app_label, self.model_name_lower]\n         new_index = to_model_state.get_index_by_name(self.new_name)\n-        schema_editor.rename_index(model, old_index, new_index)\n+        if old_index.name != new_index.name:\n+            schema_editor.rename_index(model, old_index, new_index)\n+        else:\n+            # If the names are the same, ensure the index is still dropped and recreated\n+            schema_editor.remove_index(model, old_index)\n+            schema_editor.add_index(model, new_index)\n \n     def database_backwards(self, app_label, schema_editor, from_state, to_state):\n         if self.old_fields:\n@@ -974,6 +979,11 @@ class RenameIndex(IndexOperation):\n             self.old_name_lower,\n             self.new_name_lower,\n         )\n+        # Restore old auto-generated name if necessary\n+        if not self.old_name:\n+            from_model_state = from_state.models[app_label, self.model_name_lower]\n+            old_index = from_model_state.get_index_by_name(self.new_name)\n+            self.old_name = old_index.name\n         self.new_name, self.old_name = self.old_name, self.new_name\n \n         self.database_forwards(app_label, schema_editor, from_state, to_state)\n@@ -982,6 +992,11 @@ class RenameIndex(IndexOperation):\n             self.old_name_lower,\n             self.new_name_lower,\n         )\n+        # Restore old auto-generated name if necessary\n+        if not self.old_name:\n+            from_model_state = from_state.models[app_label, self.model_name_lower]\n+            old_index = from_model_state.get_index_by_name(self.new_name)\n+            self.old_name = old_index.name\n         self.new_name, self.old_name = self.old_name, self.new_name\n \n     def describe(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 87ad28e..509872a 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -433,14 +433,26 @@ class RenameIndex(IndexOperation):\n             old_index = from_model_state.get_index_by_name(self.old_name)\n         to_model_state = to_state.models[app_label, self.model_name_lower]\n         new_index = to_model_state.get_index_by_name(self.new_name)\n-        schema_editor.rename_index(model, old_index, new_index)\n+        if old_index.name != new_index.name:\n+            schema_editor.rename_index(model, old_index, new_index)\n+        else:\n+            schema_editor.remove_index(model, old_index)\n+            schema_editor.add_index(model, new_index)\n     def database_backwards(self, app_label, schema_editor, from_state, to_state):\n         if self.old_fields:\n             return\n         self.new_name_lower, self.old_name_lower = (self.old_name_lower, self.new_name_lower)\n+        if not self.old_name:\n+            from_model_state = from_state.models[app_label, self.model_name_lower]\n+            old_index = from_model_state.get_index_by_name(self.new_name)\n+            self.old_name = old_index.name\n         self.new_name, self.old_name = (self.old_name, self.new_name)\n         self.database_forwards(app_label, schema_editor, from_state, to_state)\n         self.new_name_lower, self.old_name_lower = (self.old_name_lower, self.new_name_lower)\n+        if not self.old_name:\n+            from_model_state = from_state.models[app_label, self.model_name_lower]\n+            old_index = from_model_state.get_index_by_name(self.new_name)\n+            self.old_name = old_index.name\n         self.new_name, self.old_name = (self.old_name, self.new_name)\n     def describe(self):\n         if self.old_name:\n", "normalized_occurrence": 1}
