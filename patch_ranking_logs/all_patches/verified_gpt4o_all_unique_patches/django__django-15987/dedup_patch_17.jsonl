{"model_name_or_path": "agentless", "instance_id": "django__django-15987", "model_patch": "diff --git a/django/core/management/commands/loaddata.py b/django/core/management/commands/loaddata.py\nindex c98b0b6..c24e6ce 100644\n--- a/django/core/management/commands/loaddata.py\n+++ b/django/core/management/commands/loaddata.py\n@@ -362,12 +362,13 @@ class Command(BaseCommand):\n         \"\"\"\n         dirs = []\n         fixture_dirs = settings.FIXTURE_DIRS\n-        if len(fixture_dirs) != len(set(fixture_dirs)):\n+        str_fixture_dirs = [str(dir) for dir in fixture_dirs]\n+        if len(str_fixture_dirs) != len(set(str_fixture_dirs)):\n             raise ImproperlyConfigured(\"settings.FIXTURE_DIRS contains duplicates.\")\n         for app_config in apps.get_app_configs():\n             app_label = app_config.label\n             app_dir = os.path.join(app_config.path, \"fixtures\")\n-            if app_dir in fixture_dirs:\n+            if str(app_dir) in str_fixture_dirs:\n                 raise ImproperlyConfigured(\n                     \"'%s' is a default fixture directory for the '%s' app \"\n                     \"and cannot be listed in settings.FIXTURE_DIRS.\"\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/management/commands/loaddata.py b/django/core/management/commands/loaddata.py\nindex 1c3856a..c22c39f 100644\n--- a/django/core/management/commands/loaddata.py\n+++ b/django/core/management/commands/loaddata.py\n@@ -188,12 +188,13 @@ class Command(BaseCommand):\n     def fixture_dirs(self):\n         dirs = []\n         fixture_dirs = settings.FIXTURE_DIRS\n-        if len(fixture_dirs) != len(set(fixture_dirs)):\n+        str_fixture_dirs = [str(dir) for dir in fixture_dirs]\n+        if len(str_fixture_dirs) != len(set(str_fixture_dirs)):\n             raise ImproperlyConfigured('settings.FIXTURE_DIRS contains duplicates.')\n         for app_config in apps.get_app_configs():\n             app_label = app_config.label\n             app_dir = os.path.join(app_config.path, 'fixtures')\n-            if app_dir in fixture_dirs:\n+            if str(app_dir) in str_fixture_dirs:\n                 raise ImproperlyConfigured(\"'%s' is a default fixture directory for the '%s' app and cannot be listed in settings.FIXTURE_DIRS.\" % (app_dir, app_label))\n             if self.app_label and app_label != self.app_label:\n                 continue\n", "normalized_occurrence": 1}
