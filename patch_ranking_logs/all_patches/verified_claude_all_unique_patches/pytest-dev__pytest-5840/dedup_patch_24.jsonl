{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-5840", "model_patch": "diff --git a/src/_pytest/python.py b/src/_pytest/python.py\nindex eb77bda..c38c2cc 100644\n--- a/src/_pytest/python.py\n+++ b/src/_pytest/python.py\n@@ -498,7 +498,7 @@ class Module(nodes.File, PyCollector):\n         # we assume we are only called once per module\n         importmode = self.config.getoption(\"--import-mode\")\n         try:\n-            mod = self.fspath.pyimport(ensuresyspath=importmode)\n+            mod = self.fspath.pyimport(ensuresyspath=importmode, case_sensitive=True)\n         except SyntaxError:\n             raise self.CollectError(\n                 _pytest._code.ExceptionInfo.from_current().getrepr(style=\"short\")\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/python.py b/src/_pytest/python.py\nindex 38d2a37..2a8e5ae 100644\n--- a/src/_pytest/python.py\n+++ b/src/_pytest/python.py\n@@ -286,7 +286,7 @@ class Module(nodes.File, PyCollector):\n     def _importtestmodule(self):\n         importmode = self.config.getoption('--import-mode')\n         try:\n-            mod = self.fspath.pyimport(ensuresyspath=importmode)\n+            mod = self.fspath.pyimport(ensuresyspath=importmode, case_sensitive=True)\n         except SyntaxError:\n             raise self.CollectError(_pytest._code.ExceptionInfo.from_current().getrepr(style='short'))\n         except self.fspath.ImportMismatchError:\n", "normalized_occurrence": 1}
