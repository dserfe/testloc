{"model_name_or_path": "agentless_claude", "instance_id": "astropy__astropy-13236", "model_patch": "diff --git a/astropy/table/table.py b/astropy/table/table.py\nindex 39b0202..3285fb3 100644\n--- a/astropy/table/table.py\n+++ b/astropy/table/table.py\n@@ -1243,6 +1243,12 @@ class Table:\n         # mixin class\n         if (not isinstance(data, Column) and not data_is_mixin\n                 and isinstance(data, np.ndarray) and len(data.dtype) > 1):\n+            warnings.warn(\n+                \"In astropy 5.2, structured numpy arrays will be added as Column \"\n+                \"objects by default. To maintain current behavior, wrap the data \"\n+                \"in NdarrayMixin explicitly, or to adopt the new behavior now, \"\n+                \"wrap the data in Column.\",\n+                FutureWarning)\n             data = data.view(NdarrayMixin)\n             data_is_mixin = True\n \n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/table/table.py b/astropy/table/table.py\nindex c25424c..13fc297 100644\n--- a/astropy/table/table.py\n+++ b/astropy/table/table.py\n@@ -892,6 +892,7 @@ class Table:\n                 fully_qualified_name = original_data.__class__.__module__ + '.' + original_data.__class__.__name__\n                 raise TypeError(f'Mixin handler for object of type {fully_qualified_name} did not return a valid mixin column')\n         if not isinstance(data, Column) and (not data_is_mixin) and isinstance(data, np.ndarray) and (len(data.dtype) > 1):\n+            warnings.warn('In astropy 5.2, structured numpy arrays will be added as Column objects by default. To maintain current behavior, wrap the data in NdarrayMixin explicitly, or to adopt the new behavior now, wrap the data in Column.', FutureWarning)\n             data = data.view(NdarrayMixin)\n             data_is_mixin = True\n         if not name:\n", "normalized_occurrence": 1}
