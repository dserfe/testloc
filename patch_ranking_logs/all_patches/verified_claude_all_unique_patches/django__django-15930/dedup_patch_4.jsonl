{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15930", "model_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 47df1a9..3a7e97b 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -1265,6 +1265,10 @@ class When(Expression):\n         self.result = self._parse_expressions(then)[0]\n \n     def __str__(self):\n+        if isinstance(self.condition, Q):\n+            if not self.condition.children:\n+                # Handle empty Q object - negated empty Q is TRUE, non-negated is FALSE\n+                return \"WHEN %s THEN %r\" % ('1=1' if self.condition.negated else '1=0', self.result)\n         return \"WHEN %r THEN %r\" % (self.condition, self.result)\n \n     def __repr__(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 1b947ba..f8bebc9 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -639,6 +639,9 @@ class When(Expression):\n         self.condition = condition\n         self.result = self._parse_expressions(then)[0]\n     def __str__(self):\n+        if isinstance(self.condition, Q):\n+            if not self.condition.children:\n+                return 'WHEN %s THEN %r' % ('1=1' if self.condition.negated else '1=0', self.result)\n         return 'WHEN %r THEN %r' % (self.condition, self.result)\n     def __repr__(self):\n         return '<%s: %s>' % (self.__class__.__name__, self)\n", "normalized_occurrence": 1}
