{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15732", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 42e02c2..9240835 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -604,6 +604,14 @@ class AlterUniqueTogether(AlterTogetherOptionOperation):\n     option_name = \"unique_together\"\n \n     def __init__(self, name, unique_together):\n+        # Filter out any single-field unique constraints that might overlap with\n+        # existing unique field constraints or primary keys\n+        if unique_together:\n+            unique_together = {\n+                tuple(constraint)\n+                for constraint in unique_together\n+                if len(constraint) > 1\n+            }\n         super().__init__(name, unique_together)\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex b786bec..ba15afc 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -259,6 +259,8 @@ class AlterTogetherOptionOperation(ModelOptionOperation):\n class AlterUniqueTogether(AlterTogetherOptionOperation):\n     option_name = 'unique_together'\n     def __init__(self, name, unique_together):\n+        if unique_together:\n+            unique_together = {tuple(constraint) for constraint in unique_together if len(constraint) > 1}\n         super().__init__(name, unique_together)\n class AlterIndexTogether(AlterTogetherOptionOperation):\n     option_name = 'index_together'\n", "normalized_occurrence": 2}
