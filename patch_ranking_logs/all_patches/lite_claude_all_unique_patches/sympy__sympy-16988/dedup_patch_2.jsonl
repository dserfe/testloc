{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-16988", "model_patch": "diff --git a/sympy/sets/sets.py b/sympy/sets/sets.py\nindex 693f641..29ce0ed 100644\n--- a/sympy/sets/sets.py\n+++ b/sympy/sets/sets.py\n@@ -1267,7 +1267,8 @@ class Intersection(Set, LatticeOp):\n             args = list(cls._new_args_filter(args))\n             return simplify_intersection(args)\n \n-        args = list(ordered(args, Set._infimum_key))\n+        # Remove duplicates and order the remaining args\n+        args = list(ordered(set(args), Set._infimum_key))\n \n         obj = Basic.__new__(cls, *args)\n         obj._argset = frozenset(args)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/sets/sets.py b/sympy/sets/sets.py\nindex 42d5bd8..0001c75 100644\n--- a/sympy/sets/sets.py\n+++ b/sympy/sets/sets.py\n@@ -477,7 +477,7 @@ class Intersection(Set, LatticeOp):\n         if evaluate:\n             args = list(cls._new_args_filter(args))\n             return simplify_intersection(args)\n-        args = list(ordered(args, Set._infimum_key))\n+        args = list(ordered(set(args), Set._infimum_key))\n         obj = Basic.__new__(cls, *args)\n         obj._argset = frozenset(args)\n         return obj\n", "normalized_occurrence": 1}
