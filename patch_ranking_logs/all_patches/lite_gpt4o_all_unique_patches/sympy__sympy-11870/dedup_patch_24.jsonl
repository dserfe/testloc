{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-11870", "model_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex bd243c1..8e544f0 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -531,7 +531,16 @@ def exptrigsimp(expr):\n     from sympy.simplify.fu import hyper_as_trig, TR2i\n     from sympy.simplify.simplify import bottom_up\n \n+    from sympy import I, exp, sin, cos\n+\n     def exp_trig(e):\n+        # Recognize specific patterns for sine and cosine\n+        if e.is_Mul and I in e.args:\n+            coeff, term = e.as_coeff_Mul()\n+            if term == exp(I*e.args[-1]) - exp(-I*e.args[-1]):\n+                return sin(e.args[-1])\n+            if term == exp(I*e.args[-1]) + exp(-I*e.args[-1]):\n+                return cos(e.args[-1])\n         # select the better of e, and e rewritten in terms of exp or trig\n         # functions\n         choices = [e]\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex 8c4936d..3375153 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -175,7 +175,14 @@ def trigsimp(expr, **opts):\n def exptrigsimp(expr):\n     from sympy.simplify.fu import hyper_as_trig, TR2i\n     from sympy.simplify.simplify import bottom_up\n+    from sympy import I, exp, sin, cos\n     def exp_trig(e):\n+        if e.is_Mul and I in e.args:\n+            coeff, term = e.as_coeff_Mul()\n+            if term == exp(I * e.args[-1]) - exp(-I * e.args[-1]):\n+                return sin(e.args[-1])\n+            if term == exp(I * e.args[-1]) + exp(-I * e.args[-1]):\n+                return cos(e.args[-1])\n         choices = [e]\n         if e.has(*_trigs):\n             choices.append(e.rewrite(exp))\n", "normalized_occurrence": 1}
