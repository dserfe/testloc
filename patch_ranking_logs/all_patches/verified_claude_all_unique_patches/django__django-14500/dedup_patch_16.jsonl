{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14500", "model_patch": "diff --git a/django/db/migrations/loader.py b/django/db/migrations/loader.py\nindex aa36469..85e28c0 100644\n--- a/django/db/migrations/loader.py\n+++ b/django/db/migrations/loader.py\n@@ -243,8 +243,6 @@ class MigrationLoader:\n                 # its replacement targets are.\n                 if all(applied_statuses):\n                     self.applied_migrations[key] = migration\n-                else:\n-                    self.applied_migrations.pop(key, None)\n                 # A replacing migration can be used if either all or none of\n                 # its replacement targets have been applied.\n                 if all(applied_statuses) or (not any(applied_statuses)):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/loader.py b/django/db/migrations/loader.py\nindex cb04902..12c4226 100644\n--- a/django/db/migrations/loader.py\n+++ b/django/db/migrations/loader.py\n@@ -132,8 +132,6 @@ class MigrationLoader:\n                 applied_statuses = [target in self.applied_migrations for target in migration.replaces]\n                 if all(applied_statuses):\n                     self.applied_migrations[key] = migration\n-                else:\n-                    self.applied_migrations.pop(key, None)\n                 if all(applied_statuses) or not any(applied_statuses):\n                     self.graph.remove_replaced_nodes(key, migration.replaces)\n                 else:\n", "normalized_occurrence": 2}
