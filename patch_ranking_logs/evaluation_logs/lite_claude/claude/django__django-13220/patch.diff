diff --git a/django/core/exceptions.py b/django/core/exceptions.py
index 7969d41..aa2a89d 100644
--- a/django/core/exceptions.py
+++ b/django/core/exceptions.py
@@ -182,6 +182,35 @@ class ValidationError(Exception):
     def __repr__(self):
         return 'ValidationError(%s)' % self
 
+    def __eq__(self, other):
+        if not isinstance(other, ValidationError):
+            return NotImplemented
+        
+        if hasattr(self, 'error_dict') and hasattr(other, 'error_dict'):
+            # Compare error dictionaries
+            if self.error_dict.keys() != other.error_dict.keys():
+                return False
+            for field in self.error_dict:
+                self_errors = sorted(str(e) for e in self.error_dict[field])
+                other_errors = sorted(str(e) for e in other.error_dict[field])
+                if self_errors != other_errors:
+                    return False
+            return True
+        elif hasattr(self, 'error_dict') or hasattr(other, 'error_dict'):
+            return False
+        elif hasattr(self, 'message') and hasattr(other, 'message'):
+            # Compare simple messages
+            return (
+                self.message == other.message and
+                self.code == other.code and
+                self.params == other.params
+            )
+        else:
+            # Compare error lists
+            self_errors = sorted(str(e) for e in self.error_list)
+            other_errors = sorted(str(e) for e in other.error_list)
+            return self_errors == other_errors
+
 
 class EmptyResultSet(Exception):
     """A database query predicate is impossible."""
@@ -190,4 +219,4 @@ class EmptyResultSet(Exception):
 
 class SynchronousOnlyOperation(Exception):
     """The user tried to call a sync-only function from an async context."""
-    pass
+    pass
