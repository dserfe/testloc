{"model_name_or_path": "agentless_claude", "instance_id": "astropy__astropy-14508", "model_patch": "diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py\nindex 471c162..9c0fe68 100644\n--- a/astropy/io/fits/card.py\n+++ b/astropy/io/fits/card.py\n@@ -1299,7 +1299,10 @@ def _format_value(value):\n \n def _format_float(value):\n     \"\"\"Format a floating number to make sure it gets the decimal point.\"\"\"\n-    value_str = f\"{value:.16G}\"\n+    # First try using Python's default string representation\n+    value_str = str(value)\n+    \n+    # If the default representation doesn't include a decimal point, add it\n     if \".\" not in value_str and \"E\" not in value_str:\n         value_str += \".0\"\n     elif \"E\" in value_str:\n@@ -1313,6 +1316,20 @@ def _format_float(value):\n         else:\n             sign = \"\"\n         value_str = f\"{significand}E{sign}{int(exponent):02d}\"\n+    \n+    # If the resulting string is too long, fall back to 16G format\n+    if len(value_str) > 20:\n+        value_str = f\"{value:.16G}\"\n+        if \".\" not in value_str and \"E\" not in value_str:\n+            value_str += \".0\"\n+        elif \"E\" in value_str:\n+            significand, exponent = value_str.split(\"E\")\n+            if exponent[0] in (\"+\", \"-\"):\n+                sign = exponent[0]\n+                exponent = exponent[1:]\n+            else:\n+                sign = \"\"\n+            value_str = f\"{significand}E{sign}{int(exponent):02d}\"\n \n     # Limit the value string to at most 20 characters.\n     str_len = len(value_str)\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py\nindex 2109132..603f945 100644\n--- a/astropy/io/fits/card.py\n+++ b/astropy/io/fits/card.py\n@@ -655,7 +655,7 @@ def _format_value(value):\n     else:\n         return ''\n def _format_float(value):\n-    value_str = f'{value:.16G}'\n+    value_str = str(value)\n     if '.' not in value_str and 'E' not in value_str:\n         value_str += '.0'\n     elif 'E' in value_str:\n@@ -666,6 +666,18 @@ def _format_float(value):\n         else:\n             sign = ''\n         value_str = f'{significand}E{sign}{int(exponent):02d}'\n+    if len(value_str) > 20:\n+        value_str = f'{value:.16G}'\n+        if '.' not in value_str and 'E' not in value_str:\n+            value_str += '.0'\n+        elif 'E' in value_str:\n+            significand, exponent = value_str.split('E')\n+            if exponent[0] in ('+', '-'):\n+                sign = exponent[0]\n+                exponent = exponent[1:]\n+            else:\n+                sign = ''\n+            value_str = f'{significand}E{sign}{int(exponent):02d}'\n     str_len = len(value_str)\n     if str_len > 20:\n         idx = value_str.find('E')\n", "normalized_occurrence": 3}
