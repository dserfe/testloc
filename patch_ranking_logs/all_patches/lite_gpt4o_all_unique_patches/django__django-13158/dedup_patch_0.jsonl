{"model_name_or_path": "agentless", "instance_id": "django__django-13158", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex e0d8d05..2d6628e 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -997,8 +997,8 @@ class QuerySet:\n         return clone\n \n     def union(self, *other_qs, all=False):\n-        # If the query is an EmptyQuerySet, combine all nonempty querysets.\n-        if isinstance(self, EmptyQuerySet):\n+        # If any query is an EmptyQuerySet, return it.\n+        if isinstance(self, EmptyQuerySet) or any(isinstance(q, EmptyQuerySet) for q in other_qs):\n             qs = [q for q in other_qs if not isinstance(q, EmptyQuerySet)]\n             return qs[0]._combinator_query('union', *qs[1:], all=all) if qs else self\n         return self._combinator_query('union', *other_qs, all=all)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex be3ebe2..be24761 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -587,7 +587,7 @@ class QuerySet:\n         clone.query.combinator_all = all\n         return clone\n     def union(self, *other_qs, all=False):\n-        if isinstance(self, EmptyQuerySet):\n+        if isinstance(self, EmptyQuerySet) or any((isinstance(q, EmptyQuerySet) for q in other_qs)):\n             qs = [q for q in other_qs if not isinstance(q, EmptyQuerySet)]\n             return qs[0]._combinator_query('union', *qs[1:], all=all) if qs else self\n         return self._combinator_query('union', *other_qs, all=all)\n", "normalized_occurrence": 1}
