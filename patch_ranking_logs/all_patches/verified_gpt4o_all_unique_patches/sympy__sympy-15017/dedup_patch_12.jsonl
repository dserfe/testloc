{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-15017", "model_patch": "diff --git a/sympy/tensor/array/ndim_array.py b/sympy/tensor/array/ndim_array.py\nindex 0b1a18b..fbe1332 100644\n--- a/sympy/tensor/array/ndim_array.py\n+++ b/sympy/tensor/array/ndim_array.py\n@@ -175,7 +175,7 @@ class NDimArray(object):\n         9\n \n         \"\"\"\n-        return self._loop_size\n+        return 1 if self._loop_size == 0 else self._loop_size\n \n     @property\n     def shape(self):\n", "occurrence": 2, "normalized_patch": "diff --git a/sympy/tensor/array/ndim_array.py b/sympy/tensor/array/ndim_array.py\nindex a3ef23c..ccbcf45 100644\n--- a/sympy/tensor/array/ndim_array.py\n+++ b/sympy/tensor/array/ndim_array.py\n@@ -78,7 +78,7 @@ class NDimArray(object):\n             raise TypeError('Shape should contain integers only.')\n         return (tuple(shape), iterable)\n     def __len__(self):\n-        return self._loop_size\n+        return 1 if self._loop_size == 0 else self._loop_size\n     @property\n     def shape(self):\n         return self._shape\n", "normalized_occurrence": 2}
