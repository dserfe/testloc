{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15741", "model_patch": "diff --git a/django/utils/formats.py b/django/utils/formats.py\nindex 82173e8..22efbe3 100644\n--- a/django/utils/formats.py\n+++ b/django/utils/formats.py\n@@ -123,15 +123,17 @@ def get_format(format_type, lang=None, use_l10n=None):\n     # of the format_modules for the given lang if l10n is enabled. If it's not\n     # there or if l10n is disabled, fall back to the project settings.\n     val = None\n+    # Force string evaluation of format_type to handle lazy strings\n+    format_type_str = str(format_type)\n     if use_l10n:\n         for module in get_format_modules(lang):\n-            val = getattr(module, format_type, None)\n+            val = getattr(module, format_type_str, None)\n             if val is not None:\n                 break\n     if val is None:\n-        if format_type not in FORMAT_SETTINGS:\n+        if format_type_str not in FORMAT_SETTINGS:\n             return format_type\n-        val = getattr(settings, format_type)\n+        val = getattr(settings, format_type_str)\n     elif format_type in ISO_INPUT_FORMATS:\n         # If a list of input formats from one of the format_modules was\n         # retrieved, make sure the ISO_INPUT_FORMATS are in this list.\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/formats.py b/django/utils/formats.py\nindex fe1b781..a503ea1 100644\n--- a/django/utils/formats.py\n+++ b/django/utils/formats.py\n@@ -58,15 +58,16 @@ def get_format(format_type, lang=None, use_l10n=None):\n     except KeyError:\n         pass\n     val = None\n+    format_type_str = str(format_type)\n     if use_l10n:\n         for module in get_format_modules(lang):\n-            val = getattr(module, format_type, None)\n+            val = getattr(module, format_type_str, None)\n             if val is not None:\n                 break\n     if val is None:\n-        if format_type not in FORMAT_SETTINGS:\n+        if format_type_str not in FORMAT_SETTINGS:\n             return format_type\n-        val = getattr(settings, format_type)\n+        val = getattr(settings, format_type_str)\n     elif format_type in ISO_INPUT_FORMATS:\n         val = list(val)\n         for iso_input in ISO_INPUT_FORMATS.get(format_type, ()):\n", "normalized_occurrence": 8}
