{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14351", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex e16dbc0..64e3450 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -225,7 +225,14 @@ class SQLCompiler:\n             select_idx += 1\n         assert not (self.query.select and self.query.default_cols)\n         if self.query.default_cols:\n-            cols = self.get_default_columns()\n+            # When the query is a subquery for an IN clause, only select the ID\n+            if (hasattr(self.query, 'subquery') and self.query.subquery and \n+                len(self.query.where.children) == 1 and\n+                isinstance(self.query.where.children[0], RelatedExact)):\n+                pk = self.query.model._meta.pk\n+                cols = [pk.get_col(self.query.get_initial_alias())]\n+            else:\n+                cols = self.get_default_columns()\n         else:\n             # self.query.select is a special case. These columns never go to\n             # any model.\n", "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex b3e101b..f2857a2 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -99,7 +99,11 @@ class SQLCompiler:\n             select_idx += 1\n         assert not (self.query.select and self.query.default_cols)\n         if self.query.default_cols:\n-            cols = self.get_default_columns()\n+            if hasattr(self.query, 'subquery') and self.query.subquery and (len(self.query.where.children) == 1) and isinstance(self.query.where.children[0], RelatedExact):\n+                pk = self.query.model._meta.pk\n+                cols = [pk.get_col(self.query.get_initial_alias())]\n+            else:\n+                cols = self.get_default_columns()\n         else:\n             cols = self.query.select\n         if cols:\n", "normalized_occurrence": 1}
