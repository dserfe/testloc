{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-14995", "model_patch": "diff --git a/astropy/nddata/nddata.py b/astropy/nddata/nddata.py\nindex 8cbdc69..5eeec87 100644\n--- a/astropy/nddata/nddata.py\n+++ b/astropy/nddata/nddata.py\n@@ -323,7 +323,8 @@ class NDData(NDDataBase):\n         Masks should follow the ``numpy`` convention that valid data points are\n         marked by ``False`` and invalid ones with ``True``.\n         \"\"\"\n-        return self._mask\n+        # If mask is None, return an array of False (indicating no mask).\n+        return np.zeros_like(self.data, dtype=bool) if self._mask is None else self._mask\n \n     @mask.setter\n     def mask(self, value):\n@@ -402,4 +403,4 @@ class NDData(NDDataBase):\n                 # to be saved as weakref but that's done by NDUncertainty\n                 # setter).\n                 value.parent_nddata = self\n-        self._uncertainty = value\n+        self._uncertainty = value\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/nddata/nddata.py b/astropy/nddata/nddata.py\nindex 75e2ca7..ad6b262 100644\n--- a/astropy/nddata/nddata.py\n+++ b/astropy/nddata/nddata.py\n@@ -117,7 +117,7 @@ class NDData(NDDataBase):\n         return self._data\n     @property\n     def mask(self):\n-        return self._mask\n+        return np.zeros_like(self.data, dtype=bool) if self._mask is None else self._mask\n     @mask.setter\n     def mask(self, value):\n         self._mask = value\n", "normalized_occurrence": 1}
