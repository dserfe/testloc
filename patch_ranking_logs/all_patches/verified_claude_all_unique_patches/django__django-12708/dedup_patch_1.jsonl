{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12708", "model_patch": "diff --git a/django/db/backends/base/schema.py b/django/db/backends/base/schema.py\nindex d7d8448..0669712 100644\n--- a/django/db/backends/base/schema.py\n+++ b/django/db/backends/base/schema.py\n@@ -403,9 +403,15 @@ class BaseDatabaseSchemaEditor:\n         meta_constraint_names = {constraint.name for constraint in model._meta.constraints}\n         meta_index_names = {constraint.name for constraint in model._meta.indexes}\n         columns = [model._meta.get_field(field).column for field in fields]\n+        # Add type='index' for index lookups and type='unique' for unique lookups\n+        lookup_kwargs = constraint_kwargs.copy()\n+        if 'index' in constraint_kwargs:\n+            lookup_kwargs['type'] = 'index'\n+        elif 'unique' in constraint_kwargs:\n+            lookup_kwargs['type'] = 'unique'\n         constraint_names = self._constraint_names(\n             model, columns, exclude=meta_constraint_names | meta_index_names,\n-            **constraint_kwargs\n+            **lookup_kwargs\n         )\n         if len(constraint_names) != 1:\n             raise ValueError(\"Found wrong number (%s) of constraints for %s(%s)\" % (\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/base/schema.py b/django/db/backends/base/schema.py\nindex 7b679d7..ab3f13f 100644\n--- a/django/db/backends/base/schema.py\n+++ b/django/db/backends/base/schema.py\n@@ -229,7 +229,12 @@ class BaseDatabaseSchemaEditor:\n         meta_constraint_names = {constraint.name for constraint in model._meta.constraints}\n         meta_index_names = {constraint.name for constraint in model._meta.indexes}\n         columns = [model._meta.get_field(field).column for field in fields]\n-        constraint_names = self._constraint_names(model, columns, exclude=meta_constraint_names | meta_index_names, **constraint_kwargs)\n+        lookup_kwargs = constraint_kwargs.copy()\n+        if 'index' in constraint_kwargs:\n+            lookup_kwargs['type'] = 'index'\n+        elif 'unique' in constraint_kwargs:\n+            lookup_kwargs['type'] = 'unique'\n+        constraint_names = self._constraint_names(model, columns, exclude=meta_constraint_names | meta_index_names, **lookup_kwargs)\n         if len(constraint_names) != 1:\n             raise ValueError('Found wrong number (%s) of constraints for %s(%s)' % (len(constraint_names), model._meta.db_table, ', '.join(columns)))\n         self.execute(self._delete_constraint_sql(sql, model, constraint_names[0]))\n", "normalized_occurrence": 1}
