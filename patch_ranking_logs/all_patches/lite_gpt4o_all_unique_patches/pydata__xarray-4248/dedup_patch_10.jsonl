{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-4248", "model_patch": "diff --git a/xarray/core/formatting.py b/xarray/core/formatting.py\nindex 91a7f67..525d3df 100644\n--- a/xarray/core/formatting.py\n+++ b/xarray/core/formatting.py\n@@ -271,6 +271,9 @@ def inline_variable_array_repr(var, max_width):\n def summarize_variable(\n     name: Hashable, var, col_width: int, marker: str = \" \", max_width: int = None\n ):\n+    unit = var.attrs.get('units', '')\n+    if unit:\n+        unit = f\", in {unit}\"\n     \"\"\"Summarize a variable in one line, e.g., for the Dataset.__repr__.\"\"\"\n     if max_width is None:\n         max_width_options = OPTIONS[\"display_width\"]\n@@ -283,7 +286,7 @@ def summarize_variable(\n         dims_str = \"({}) \".format(\", \".join(map(str, var.dims)))\n     else:\n         dims_str = \"\"\n-    front_str = f\"{first_col}{dims_str}{var.dtype} \"\n+    front_str = f\"{first_col}{name}{unit} {dims_str}{var.dtype} \"\n \n     values_width = max_width - len(front_str)\n     values_str = inline_variable_array_repr(var, values_width)\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/formatting.py b/xarray/core/formatting.py\nindex 6d31a74..1ba7431 100644\n--- a/xarray/core/formatting.py\n+++ b/xarray/core/formatting.py\n@@ -152,6 +152,10 @@ def inline_variable_array_repr(var, max_width):\n     else:\n         return '...'\n def summarize_variable(name: Hashable, var, col_width: int, marker: str=' ', max_width: int=None):\n+    unit = var.attrs.get('units', '')\n+    if unit:\n+        unit = f', in {unit}'\n+    'Summarize a variable in one line, e.g., for the Dataset.__repr__.'\n     if max_width is None:\n         max_width_options = OPTIONS['display_width']\n         if not isinstance(max_width_options, int):\n@@ -163,7 +167,7 @@ def summarize_variable(name: Hashable, var, col_width: int, marker: str=' ', max\n         dims_str = '({}) '.format(', '.join(map(str, var.dims)))\n     else:\n         dims_str = ''\n-    front_str = f'{first_col}{dims_str}{var.dtype} '\n+    front_str = f'{first_col}{name}{unit} {dims_str}{var.dtype} '\n     values_width = max_width - len(front_str)\n     values_str = inline_variable_array_repr(var, values_width)\n     return front_str + values_str\n", "normalized_occurrence": 1}
