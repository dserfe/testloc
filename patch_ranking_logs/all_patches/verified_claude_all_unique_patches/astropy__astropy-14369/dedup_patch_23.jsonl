{"model_name_or_path": "agentless_claude", "instance_id": "astropy__astropy-14369", "model_patch": "diff --git a/astropy/units/format/cds.py b/astropy/units/format/cds.py\nindex 761c4b8..a802aa7 100644\n--- a/astropy/units/format/cds.py\n+++ b/astropy/units/format/cds.py\n@@ -187,7 +187,15 @@ class CDS(Base):\n             if len(p) == 3:\n                 p[0] = p[2] ** -1\n             else:\n-                p[0] = p[1] / p[3]\n+                # For cases like a/b/c, treat it as a/(b*c) to maintain proper division order\n+                if isinstance(p[3], u.Unit) and '/' in str(p[3]):\n+                    # If the right side contains divisions, combine them first\n+                    denom = p[3]\n+                    if denom.powers[0] < 0:  # If it starts with negative power\n+                        denom = denom ** -1\n+                    p[0] = p[1] / denom\n+                else:\n+                    p[0] = p[1] / p[3]\n \n         def p_unit_expression(p):\n             \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/units/format/cds.py b/astropy/units/format/cds.py\nindex 829c8ad..6e1b468 100644\n--- a/astropy/units/format/cds.py\n+++ b/astropy/units/format/cds.py\n@@ -81,6 +81,11 @@ class CDS(Base):\n         def p_division_of_units(p):\n             if len(p) == 3:\n                 p[0] = p[2] ** (-1)\n+            elif isinstance(p[3], u.Unit) and '/' in str(p[3]):\n+                denom = p[3]\n+                if denom.powers[0] < 0:\n+                    denom = denom ** (-1)\n+                p[0] = p[1] / denom\n             else:\n                 p[0] = p[1] / p[3]\n         def p_unit_expression(p):\n", "normalized_occurrence": 1}
