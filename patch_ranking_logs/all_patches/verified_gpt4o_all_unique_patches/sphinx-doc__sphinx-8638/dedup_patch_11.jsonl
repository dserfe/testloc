{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8638", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex f4e1e57..a7b2183 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -776,7 +776,10 @@ class Documenter:\n                     # ignore undocumented members if :undoc-members: is not given\n                     keep = has_doc or self.options.undoc_members\n \n-            if isinstance(obj, ObjectMember) and obj.skipped:\n+            if membername in member_names:\n+                # ensure we do not link to another unrelated member with the same name\n+                keep = False\n+            elif isinstance(obj, ObjectMember) and obj.skipped:\n                 # forcedly skipped member (ex. a module attribute not defined in __all__)\n                 keep = False\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 320f592..52ffb51 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -420,7 +420,9 @@ class Documenter:\n                 keep = False\n             else:\n                 keep = has_doc or self.options.undoc_members\n-            if isinstance(obj, ObjectMember) and obj.skipped:\n+            if membername in member_names:\n+                keep = False\n+            elif isinstance(obj, ObjectMember) and obj.skipped:\n                 keep = False\n             if self.env.app:\n                 try:\n", "normalized_occurrence": 1}
