{"model_name_or_path": "agentless", "instance_id": "django__django-15695", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex b086232..a08437d 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -970,14 +970,21 @@ class RenameIndex(IndexOperation):\n             # Backward operation with unnamed index is a no-op.\n             return\n \n+        if self.old_fields:\n+            # Backward operation with unnamed index is a no-op.\n+            return\n+\n+        # Swap the names to restore the old name\n         self.new_name_lower, self.old_name_lower = (\n             self.old_name_lower,\n             self.new_name_lower,\n         )\n         self.new_name, self.old_name = self.old_name, self.new_name\n \n+        # Perform the rename operation to restore the old name\n         self.database_forwards(app_label, schema_editor, from_state, to_state)\n \n+        # Swap the names back to their original state\n         self.new_name_lower, self.old_name_lower = (\n             self.old_name_lower,\n             self.new_name_lower,\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 87ad28e..f428022 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -435,6 +435,8 @@ class RenameIndex(IndexOperation):\n         new_index = to_model_state.get_index_by_name(self.new_name)\n         schema_editor.rename_index(model, old_index, new_index)\n     def database_backwards(self, app_label, schema_editor, from_state, to_state):\n+        if self.old_fields:\n+            return\n         if self.old_fields:\n             return\n         self.new_name_lower, self.old_name_lower = (self.old_name_lower, self.new_name_lower)\n", "normalized_occurrence": 1}
