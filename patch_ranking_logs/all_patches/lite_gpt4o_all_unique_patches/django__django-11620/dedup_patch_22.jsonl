{"model_name_or_path": "agentless", "instance_id": "django__django-11620", "model_patch": "diff --git a/django/views/debug.py b/django/views/debug.py\nindex fa06caa..4cd4072 100644\n--- a/django/views/debug.py\n+++ b/django/views/debug.py\n@@ -460,12 +460,12 @@ def technical_404_response(request, exception):\n     \"\"\"Create a technical 404 error response. `exception` is the Http404.\"\"\"\n     try:\n         error_url = exception.args[0]['path']\n-    except (IndexError, TypeError, KeyError):\n+    except (IndexError, TypeError, KeyError, Http404):\n         error_url = request.path_info[1:]  # Trim leading slash\n \n     try:\n         tried = exception.args[0]['tried']\n-    except (IndexError, TypeError, KeyError):\n+    except (IndexError, TypeError, KeyError, Http404):\n         tried = []\n     else:\n         if (not tried or (                  # empty URLconf\n@@ -484,7 +484,7 @@ def technical_404_response(request, exception):\n     try:\n         resolver_match = resolve(request.path)\n     except Resolver404:\n-        pass\n+        exception = Http404({'path': request.path_info, 'tried': []})\n     else:\n         obj = resolver_match.func\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/views/debug.py b/django/views/debug.py\nindex 9e5f1cd..00ef4c5 100644\n--- a/django/views/debug.py\n+++ b/django/views/debug.py\n@@ -264,11 +264,11 @@ class ExceptionReporter:\n def technical_404_response(request, exception):\n     try:\n         error_url = exception.args[0]['path']\n-    except (IndexError, TypeError, KeyError):\n+    except (IndexError, TypeError, KeyError, Http404):\n         error_url = request.path_info[1:]\n     try:\n         tried = exception.args[0]['tried']\n-    except (IndexError, TypeError, KeyError):\n+    except (IndexError, TypeError, KeyError, Http404):\n         tried = []\n     else:\n         if not tried or (request.path == '/' and len(tried) == 1 and (len(tried[0]) == 1) and (getattr(tried[0][0], 'app_name', '') == getattr(tried[0][0], 'namespace', '') == 'admin')):\n@@ -280,7 +280,7 @@ def technical_404_response(request, exception):\n     try:\n         resolver_match = resolve(request.path)\n     except Resolver404:\n-        pass\n+        exception = Http404({'path': request.path_info, 'tried': []})\n     else:\n         obj = resolver_match.func\n         if hasattr(obj, '__name__'):\n", "normalized_occurrence": 1}
