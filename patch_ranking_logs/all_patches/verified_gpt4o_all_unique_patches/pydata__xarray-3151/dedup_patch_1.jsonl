{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-3151", "model_patch": "diff --git a/xarray/core/combine.py b/xarray/core/combine.py\nindex fe3f23b..20115b9 100644\n--- a/xarray/core/combine.py\n+++ b/xarray/core/combine.py\n@@ -68,7 +68,7 @@ def _infer_concat_order_from_coords(datasets):\n \n             # If dimension coordinate values are same on every dataset then\n             # should be leaving this dimension alone (it's just a \"bystander\")\n-            if not all(index.equals(indexes[0]) for index in indexes[1:]):\n+            if not all(index.equals(indexes[0]) for index in indexes):\n \n                 # Infer order datasets should be arranged in along this dim\n                 concat_dims.append(dim)\n@@ -501,8 +501,8 @@ def combine_by_coords(datasets, compat='no_conflicts', data_vars='all',\n                                    fill_value=fill_value)\n \n         # Check the overall coordinates are monotonically increasing\n-        for dim in concatenated.dims:\n-            if dim in concatenated:\n+        for dim in concat_dims:\n+            if dim in concatenated.dims:\n                 indexes = concatenated.indexes.get(dim)\n                 if not (indexes.is_monotonic_increasing\n                         or indexes.is_monotonic_decreasing):\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/combine.py b/xarray/core/combine.py\nindex b8f5640..4854c17 100644\n--- a/xarray/core/combine.py\n+++ b/xarray/core/combine.py\n@@ -27,7 +27,7 @@ def _infer_concat_order_from_coords(datasets):\n             indexes = [ds.indexes.get(dim) for ds in datasets]\n             if any((index is None for index in indexes)):\n                 raise ValueError('Every dimension needs a coordinate for inferring concatenation order')\n-            if not all((index.equals(indexes[0]) for index in indexes[1:])):\n+            if not all((index.equals(indexes[0]) for index in indexes)):\n                 concat_dims.append(dim)\n                 if all((index.is_monotonic_increasing for index in indexes)):\n                     ascending = True\n@@ -115,8 +115,8 @@ def combine_by_coords(datasets, compat='no_conflicts', data_vars='all', coords='\n         combined_ids, concat_dims = _infer_concat_order_from_coords(list(datasets_with_same_vars))\n         _check_shape_tile_ids(combined_ids)\n         concatenated = _combine_nd(combined_ids, concat_dims=concat_dims, data_vars=data_vars, coords=coords, fill_value=fill_value)\n-        for dim in concatenated.dims:\n-            if dim in concatenated:\n+        for dim in concat_dims:\n+            if dim in concatenated.dims:\n                 indexes = concatenated.indexes.get(dim)\n                 if not (indexes.is_monotonic_increasing or indexes.is_monotonic_decreasing):\n                     raise ValueError('Resulting object does not have monotonic global indexes along dimension {}'.format(dim))\n", "normalized_occurrence": 1}
