{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13757", "model_patch": "diff --git a/sympy/polys/polytools.py b/sympy/polys/polytools.py\nindex c4501f6..bbc8a03 100644\n--- a/sympy/polys/polytools.py\n+++ b/sympy/polys/polytools.py\n@@ -1407,6 +1407,12 @@ class Poly(Expr):\n \n         return per(result)\n \n+    def __rmul__(self, other):\n+        \"\"\"\n+        Handle multiplication when polynomial is on right side: other * self\n+        \"\"\"\n+        return self.mul(other)\n+\n     def sqr(f):\n         \"\"\"\n         Square a polynomial ``f``.\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/polytools.py b/sympy/polys/polytools.py\nindex 69acdb8..652aea9 100644\n--- a/sympy/polys/polytools.py\n+++ b/sympy/polys/polytools.py\n@@ -490,6 +490,8 @@ class Poly(Expr):\n         else:\n             raise OperationNotSupported(f, 'mul')\n         return per(result)\n+    def __rmul__(self, other):\n+        return self.mul(other)\n     def sqr(f):\n         if hasattr(f.rep, 'sqr'):\n             result = f.rep.sqr()\n", "normalized_occurrence": 2}
