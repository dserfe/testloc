{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-7975", "model_patch": "diff --git a/sphinx/environment/adapters/indexentries.py b/sphinx/environment/adapters/indexentries.py\nindex 44ea73a..586ffd0 100644\n--- a/sphinx/environment/adapters/indexentries.py\n+++ b/sphinx/environment/adapters/indexentries.py\n@@ -167,10 +167,9 @@ class IndexEntries:\n                 letter = unicodedata.normalize('NFD', k[0])[0].upper()\n                 if letter.isalpha() or letter == '_':\n                     return letter\n-                else:\n-                    # get all other symbols under one heading\n-                    return _('Symbols')\n+                # get all other symbols under one heading\n+                return _('Symbols')\n             else:\n                 return v[2]\n         return [(key_, list(group))\n-                for (key_, group) in groupby(newlist, keyfunc3)]\n+                for (key_, group) in groupby(newlist, keyfunc3)]\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/environment/adapters/indexentries.py b/sphinx/environment/adapters/indexentries.py\nindex 665aa6b..9217f68 100644\n--- a/sphinx/environment/adapters/indexentries.py\n+++ b/sphinx/environment/adapters/indexentries.py\n@@ -111,8 +111,7 @@ class IndexEntries:\n                 letter = unicodedata.normalize('NFD', k[0])[0].upper()\n                 if letter.isalpha() or letter == '_':\n                     return letter\n-                else:\n-                    return _('Symbols')\n+                return _('Symbols')\n             else:\n                 return v[2]\n         return [(key_, list(group)) for key_, group in groupby(newlist, keyfunc3)]\n\\ No newline at end of file\n", "normalized_occurrence": 1}
