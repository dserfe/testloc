{"model_name_or_path": "agentless", "instance_id": "django__django-15213", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex d5af8cd..1dbf9f8 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -552,6 +552,8 @@ class SQLCompiler:\n                 from_, f_params = self.get_from_clause()\n                 try:\n                     where, w_params = self.compile(self.where) if self.where is not None else ('', [])\n+                    if where == '':\n+                        where = '1=1'  # Ensure there's a valid placeholder when the condition is empty\n                 except EmptyResultSet:\n                     if self.elide_empty:\n                         raise\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 4c4fd00..cdda946 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -310,6 +310,8 @@ class SQLCompiler:\n                 from_, f_params = self.get_from_clause()\n                 try:\n                     where, w_params = self.compile(self.where) if self.where is not None else ('', [])\n+                    if where == '':\n+                        where = '1=1'\n                 except EmptyResultSet:\n                     if self.elide_empty:\n                         raise\n", "normalized_occurrence": 1}
