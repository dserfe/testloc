{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-12236", "model_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 03af2f5..e967572 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -127,7 +127,13 @@ def apart(f, x=None, full=False, **options):\n \n     common, P, Q = P.cancel(Q)\n \n-    poly, P = P.div(Q, auto=True)\n+    # Only perform polynomial division if P's degree >= Q's degree\n+    if P.degree() >= Q.degree():\n+        poly, P = P.div(Q, auto=True)\n+    else:\n+        poly = P.zero\n+        P = P\n+\n     P, Q = P.rat_clear_denoms(Q)\n \n     if Q.degree() <= 1:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 21c4bd7..916a7cf 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -60,7 +60,11 @@ def apart(f, x=None, full=False, **options):\n             return apart(fc, x=x, full=full, **_options)\n         raise NotImplementedError('multivariate partial fraction decomposition')\n     common, P, Q = P.cancel(Q)\n-    poly, P = P.div(Q, auto=True)\n+    if P.degree() >= Q.degree():\n+        poly, P = P.div(Q, auto=True)\n+    else:\n+        poly = P.zero\n+        P = P\n     P, Q = P.rat_clear_denoms(Q)\n     if Q.degree() <= 1:\n         partial = P / Q\n", "normalized_occurrence": 1}
