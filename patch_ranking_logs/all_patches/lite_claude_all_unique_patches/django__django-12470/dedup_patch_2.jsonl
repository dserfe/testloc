{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12470", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 776e18d..8b6750c 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -1111,7 +1111,24 @@ class QuerySet:\n             \"Cannot reorder a query once a slice has been taken.\"\n         obj = self._chain()\n         obj.query.clear_ordering(force_empty=False)\n-        obj.query.add_ordering(*field_names)\n+        # Ensure inherited model respects parent's Meta.ordering direction\n+        processed_fields = []\n+        for field in field_names:\n+            if isinstance(field, str) and field.startswith('-'):\n+                field_name = field[1:]\n+                # Handle parent fields for inherited models\n+                if self.model._meta.parents:\n+                    for parent in self.model._meta.parents:\n+                        if field_name in [f.name for f in parent._meta.fields]:\n+                            processed_fields.append('-' + field_name)\n+                            break\n+                    else:\n+                        processed_fields.append(field)\n+                else:\n+                    processed_fields.append(field)\n+            else:\n+                processed_fields.append(field)\n+        obj.query.add_ordering(*processed_fields)\n         return obj\n \n     def distinct(self, *field_names):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 891e86d..8e6aaab 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -673,7 +673,22 @@ class QuerySet:\n         assert not self.query.is_sliced, 'Cannot reorder a query once a slice has been taken.'\n         obj = self._chain()\n         obj.query.clear_ordering(force_empty=False)\n-        obj.query.add_ordering(*field_names)\n+        processed_fields = []\n+        for field in field_names:\n+            if isinstance(field, str) and field.startswith('-'):\n+                field_name = field[1:]\n+                if self.model._meta.parents:\n+                    for parent in self.model._meta.parents:\n+                        if field_name in [f.name for f in parent._meta.fields]:\n+                            processed_fields.append('-' + field_name)\n+                            break\n+                    else:\n+                        processed_fields.append(field)\n+                else:\n+                    processed_fields.append(field)\n+            else:\n+                processed_fields.append(field)\n+        obj.query.add_ordering(*processed_fields)\n         return obj\n     def distinct(self, *field_names):\n         assert not self.query.is_sliced, 'Cannot create distinct fields once a slice has been taken.'\n", "normalized_occurrence": 1}
