{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-14317", "model_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 408ff45..f4c08b3 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1854,7 +1854,26 @@ class LatexPrinter(Printer):\n \n     def _print_Poly(self, poly):\n         cls = poly.__class__.__name__\n-        expr = self._print(poly.as_expr())\n+        terms = []\n+        \n+        # Get terms in descending degree order\n+        deg = poly.degree()\n+        for i in range(deg, -1, -1):\n+            coeff = poly.coeff_monomial((poly.gen,) * i)\n+            if coeff != 0:\n+                if i == 0:\n+                    terms.append(self._print(coeff))\n+                else:\n+                    term = self._print(coeff) if coeff != 1 or i == 0 else \"\"\n+                    if term == \"-1\":\n+                        term = \"-\"\n+                    elif term == \"1\":\n+                        term = \"\"\n+                    var = self._print(poly.gen)\n+                    exp = \"^{%d}\" % i if i > 1 else \"\"\n+                    terms.append(\"%s%s%s\" % (term, var, exp))\n+        \n+        expr = \" + \".join(terms) if terms else \"0\"\n         gens = list(map(self._print, poly.gens))\n         domain = \"domain=%s\" % self._print(poly.get_domain())\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 5a18831..b010c9a 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1241,7 +1241,23 @@ class LatexPrinter(Printer):\n         return '%s%s\\\\left[%s\\\\right]' % (inv, domain, symbols)\n     def _print_Poly(self, poly):\n         cls = poly.__class__.__name__\n-        expr = self._print(poly.as_expr())\n+        terms = []\n+        deg = poly.degree()\n+        for i in range(deg, -1, -1):\n+            coeff = poly.coeff_monomial((poly.gen,) * i)\n+            if coeff != 0:\n+                if i == 0:\n+                    terms.append(self._print(coeff))\n+                else:\n+                    term = self._print(coeff) if coeff != 1 or i == 0 else ''\n+                    if term == '-1':\n+                        term = '-'\n+                    elif term == '1':\n+                        term = ''\n+                    var = self._print(poly.gen)\n+                    exp = '^{%d}' % i if i > 1 else ''\n+                    terms.append('%s%s%s' % (term, var, exp))\n+        expr = ' + '.join(terms) if terms else '0'\n         gens = list(map(self._print, poly.gens))\n         domain = 'domain=%s' % self._print(poly.get_domain())\n         args = ', '.join([expr] + gens + [domain])\n", "normalized_occurrence": 1}
