{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-25570", "model_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex 36a655a..4bf7b96 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -733,7 +733,8 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n         self._validate_column_callables(X)\n         self._validate_remainder(X)\n \n-        result = self._fit_transform(X, y, _fit_transform_one)\n+        result = [(X, name) for name, trans, columns in self._iter(fitted=True) if not _is_empty_column_selection(columns)]\n+        result.extend(self._fit_transform(X, y, _fit_transform_one))\n \n         if not result:\n             self._update_fitted_transformers([])\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex 03f51bb..52a22dd 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -207,7 +207,8 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n         self._validate_transformers()\n         self._validate_column_callables(X)\n         self._validate_remainder(X)\n-        result = self._fit_transform(X, y, _fit_transform_one)\n+        result = [(X, name) for name, trans, columns in self._iter(fitted=True) if not _is_empty_column_selection(columns)]\n+        result.extend(self._fit_transform(X, y, _fit_transform_one))\n         if not result:\n             self._update_fitted_transformers([])\n             return np.zeros((X.shape[0], 0))\n", "normalized_occurrence": 1}
