{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16560", "model_patch": "diff --git a/django/db/models/constraints.py b/django/db/models/constraints.py\nindex 8b23275..234230c 100644\n--- a/django/db/models/constraints.py\n+++ b/django/db/models/constraints.py\n@@ -42,7 +42,7 @@ class BaseConstraint:\n                 RemovedInDjango60Warning,\n                 stacklevel=2,\n             )\n-            for arg, attr in zip(args, [\"name\", \"violation_error_message\"]):\n+            for arg, attr in zip(args, [\"name\", \"violation_error_message\", \"violation_error_code\"]):\n                 if arg:\n                     setattr(self, attr, arg)\n \n@@ -74,6 +74,8 @@ class BaseConstraint:\n             and self.violation_error_message != self.default_violation_error_message\n         ):\n             kwargs[\"violation_error_message\"] = self.violation_error_message\n+        if self.violation_error_code is not None:\n+            kwargs[\"violation_error_code\"] = self.violation_error_code\n         return (path, (), kwargs)\n \n     def clone(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/constraints.py b/django/db/models/constraints.py\nindex 50c20cc..9e07dcc 100644\n--- a/django/db/models/constraints.py\n+++ b/django/db/models/constraints.py\n@@ -25,7 +25,7 @@ class BaseConstraint:\n             self.violation_error_message = self.default_violation_error_message\n         if args:\n             warnings.warn(f'Passing positional arguments to {self.__class__.__name__} is deprecated.', RemovedInDjango60Warning, stacklevel=2)\n-            for arg, attr in zip(args, ['name', 'violation_error_message']):\n+            for arg, attr in zip(args, ['name', 'violation_error_message', 'violation_error_code']):\n                 if arg:\n                     setattr(self, attr, arg)\n     @property\n@@ -47,6 +47,8 @@ class BaseConstraint:\n         kwargs = {'name': self.name}\n         if self.violation_error_message is not None and self.violation_error_message != self.default_violation_error_message:\n             kwargs['violation_error_message'] = self.violation_error_message\n+        if self.violation_error_code is not None:\n+            kwargs['violation_error_code'] = self.violation_error_code\n         return (path, (), kwargs)\n     def clone(self):\n         _, args, kwargs = self.deconstruct()\n", "normalized_occurrence": 1}
