{"model_name_or_path": "agentless", "instance_id": "mwaskom__seaborn-3190", "model_patch": "diff --git a/seaborn/_core/properties.py b/seaborn/_core/properties.py\nindex b7d827a..8503a93 100644\n--- a/seaborn/_core/properties.py\n+++ b/seaborn/_core/properties.py\n@@ -569,7 +569,9 @@ class Color(Property):\n \n         # TODO need to rethink the variable type system\n         # (e.g. boolean, ordered categories as Ordinal, etc)..\n-        var_type = variable_type(data, boolean_type=\"categorical\")\n+        var_type = variable_type(data)\n+        if var_type == \"boolean\":\n+            var_type = \"categorical\"\n \n         if isinstance(arg, (dict, list)):\n             return Nominal(arg)\n@@ -587,9 +589,8 @@ class Color(Property):\n \n         # TODO Do we accept str like \"log\", \"pow\", etc. for semantics?\n \n-        # TODO what about\n-        # - Temporal? (i.e. datetime)\n-        # - Boolean?\n+        if var_type == \"boolean\":\n+            return Nominal(arg)\n \n         if not isinstance(arg, str):\n             msg = \" \".join([\n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/_core/properties.py b/seaborn/_core/properties.py\nindex 92ce937..ef41b48 100644\n--- a/seaborn/_core/properties.py\n+++ b/seaborn/_core/properties.py\n@@ -292,7 +292,9 @@ class Color(Property):\n         else:\n             return to_rgba_array(colors)[:, :3]\n     def infer_scale(self, arg: Any, data: Series) -> Scale:\n-        var_type = variable_type(data, boolean_type='categorical')\n+        var_type = variable_type(data)\n+        if var_type == 'boolean':\n+            var_type = 'categorical'\n         if isinstance(arg, (dict, list)):\n             return Nominal(arg)\n         if isinstance(arg, tuple):\n@@ -301,6 +303,8 @@ class Color(Property):\n             return Continuous(arg)\n         if callable(arg):\n             return Continuous(arg)\n+        if var_type == 'boolean':\n+            return Nominal(arg)\n         if not isinstance(arg, str):\n             msg = ' '.join([f'A single scale argument for {self.variable} variables must be', f'a string, dict, tuple, list, or callable, not {type(arg)}.'])\n             raise TypeError(msg)\n", "normalized_occurrence": 1}
