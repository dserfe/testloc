{"model_name_or_path": "agentless", "instance_id": "django__django-14999", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 165c6f5..bdeb5ec 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -319,6 +319,8 @@ class RenameModel(ModelOperation):\n     def database_forwards(self, app_label, schema_editor, from_state, to_state):\n         new_model = to_state.apps.get_model(app_label, self.new_name)\n         if self.allow_migrate_model(schema_editor.connection.alias, new_model):\n+            if new_model._meta.db_table == old_model._meta.db_table:\n+                return\n             old_model = from_state.apps.get_model(app_label, self.old_name)\n             # Move the main table\n             schema_editor.alter_db_table(\n@@ -371,7 +373,9 @@ class RenameModel(ModelOperation):\n         self.new_name_lower, self.old_name_lower = self.old_name_lower, self.new_name_lower\n         self.new_name, self.old_name = self.old_name, self.new_name\n \n-        self.database_forwards(app_label, schema_editor, from_state, to_state)\n+        new_model = to_state.apps.get_model(app_label, self.old_name)\n+        if new_model._meta.db_table != old_model._meta.db_table:\n+            self.database_forwards(app_label, schema_editor, from_state, to_state)\n \n         self.new_name_lower, self.old_name_lower = self.old_name_lower, self.new_name_lower\n         self.new_name, self.old_name = self.old_name, self.new_name\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 8445d8b..274c68f 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -151,6 +151,8 @@ class RenameModel(ModelOperation):\n     def database_forwards(self, app_label, schema_editor, from_state, to_state):\n         new_model = to_state.apps.get_model(app_label, self.new_name)\n         if self.allow_migrate_model(schema_editor.connection.alias, new_model):\n+            if new_model._meta.db_table == old_model._meta.db_table:\n+                return\n             old_model = from_state.apps.get_model(app_label, self.old_name)\n             schema_editor.alter_db_table(new_model, old_model._meta.db_table, new_model._meta.db_table)\n             for related_object in old_model._meta.related_objects:\n@@ -173,7 +175,9 @@ class RenameModel(ModelOperation):\n     def database_backwards(self, app_label, schema_editor, from_state, to_state):\n         self.new_name_lower, self.old_name_lower = (self.old_name_lower, self.new_name_lower)\n         self.new_name, self.old_name = (self.old_name, self.new_name)\n-        self.database_forwards(app_label, schema_editor, from_state, to_state)\n+        new_model = to_state.apps.get_model(app_label, self.old_name)\n+        if new_model._meta.db_table != old_model._meta.db_table:\n+            self.database_forwards(app_label, schema_editor, from_state, to_state)\n         self.new_name_lower, self.old_name_lower = (self.old_name_lower, self.new_name_lower)\n         self.new_name, self.old_name = (self.old_name, self.new_name)\n     def references_model(self, name, app_label):\n", "normalized_occurrence": 1}
