{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-16450", "model_patch": "diff --git a/sympy/core/symbol.py b/sympy/core/symbol.py\nindex 9a1c686..c4901e7 100644\n--- a/sympy/core/symbol.py\n+++ b/sympy/core/symbol.py\n@@ -232,6 +232,7 @@ class Symbol(AtomicExpr, Boolean):\n         # be strict about commutativity\n         is_commutative = fuzzy_bool(assumptions.get('commutative', True))\n         assumptions['commutative'] = is_commutative\n+        assumptions.setdefault('finite', fuzzy_bool(assumptions.get('finite', None)))\n         obj._assumptions = StdFactKB(assumptions)\n         obj._assumptions._generator = tmp_asm_copy  # Issue #8873\n         return obj\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/symbol.py b/sympy/core/symbol.py\nindex 9bc1e52..b0cee64 100644\n--- a/sympy/core/symbol.py\n+++ b/sympy/core/symbol.py\n@@ -78,6 +78,7 @@ class Symbol(AtomicExpr, Boolean):\n         tmp_asm_copy = assumptions.copy()\n         is_commutative = fuzzy_bool(assumptions.get('commutative', True))\n         assumptions['commutative'] = is_commutative\n+        assumptions.setdefault('finite', fuzzy_bool(assumptions.get('finite', None)))\n         obj._assumptions = StdFactKB(assumptions)\n         obj._assumptions._generator = tmp_asm_copy\n         return obj\n", "normalized_occurrence": 1}
