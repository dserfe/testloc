{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11477", "model_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 58da200..1780b4d 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -617,9 +617,13 @@ class URLResolver:\n                         continue\n                     candidate_subs = dict(zip(params, args))\n                 else:\n-                    if set(kwargs).symmetric_difference(params).difference(defaults):\n+                    # Get all params not in kwargs, then remove all defaults from that set\n+                    missing_params = set(params) - set(kwargs)\n+                    if missing_params - set(defaults):\n                         continue\n-                    if any(kwargs.get(k, v) != v for k, v in defaults.items()):\n+                    # All present kwargs must match defaults if they're in defaults\n+                    if any(k in defaults and kwargs[k] != defaults[k]\n+                          for k in kwargs):\n                         continue\n                     candidate_subs = kwargs\n                 # Convert the candidate subs to text using Converter.to_url().\n@@ -666,4 +670,4 @@ class URLResolver:\n                 \"Reverse for '%(view)s' not found. '%(view)s' is not \"\n                 \"a valid view function or pattern name.\" % {'view': lookup_view_s}\n             )\n-        raise NoReverseMatch(msg)\n+        raise NoReverseMatch(msg)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex e10e0e8..85b4e6c 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -403,9 +403,10 @@ class URLResolver:\n                         continue\n                     candidate_subs = dict(zip(params, args))\n                 else:\n-                    if set(kwargs).symmetric_difference(params).difference(defaults):\n+                    missing_params = set(params) - set(kwargs)\n+                    if missing_params - set(defaults):\n                         continue\n-                    if any((kwargs.get(k, v) != v for k, v in defaults.items())):\n+                    if any((k in defaults and kwargs[k] != defaults[k] for k in kwargs)):\n                         continue\n                     candidate_subs = kwargs\n                 text_candidate_subs = {}\n", "normalized_occurrence": 1}
