{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-13241", "model_patch": "diff --git a/sklearn/decomposition/kernel_pca.py b/sklearn/decomposition/kernel_pca.py\nindex 650c24f..4e716fc 100644\n--- a/sklearn/decomposition/kernel_pca.py\n+++ b/sklearn/decomposition/kernel_pca.py\n@@ -208,7 +208,8 @@ class KernelPCA(BaseEstimator, TransformerMixin, _UnstableOn32BitMixin):\n                                                 which=\"LA\",\n                                                 tol=self.tol,\n                                                 maxiter=self.max_iter,\n-                                                v0=v0)\n+                                                v0=v0,\n+                                                random_state=random_state)\n \n         # sort eigenvectors in descending order\n         indices = self.lambdas_.argsort()[::-1]\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/decomposition/kernel_pca.py b/sklearn/decomposition/kernel_pca.py\nindex 92bc5ab..d66022d 100644\n--- a/sklearn/decomposition/kernel_pca.py\n+++ b/sklearn/decomposition/kernel_pca.py\n@@ -53,7 +53,7 @@ class KernelPCA(BaseEstimator, TransformerMixin, _UnstableOn32BitMixin):\n         elif eigen_solver == 'arpack':\n             random_state = check_random_state(self.random_state)\n             v0 = random_state.uniform(-1, 1, K.shape[0])\n-            self.lambdas_, self.alphas_ = eigsh(K, n_components, which='LA', tol=self.tol, maxiter=self.max_iter, v0=v0)\n+            self.lambdas_, self.alphas_ = eigsh(K, n_components, which='LA', tol=self.tol, maxiter=self.max_iter, v0=v0, random_state=random_state)\n         indices = self.lambdas_.argsort()[::-1]\n         self.lambdas_ = self.lambdas_[indices]\n         self.alphas_ = self.alphas_[:, indices]\n", "normalized_occurrence": 1}
