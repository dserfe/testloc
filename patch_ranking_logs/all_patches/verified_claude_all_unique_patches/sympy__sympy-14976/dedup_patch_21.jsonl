{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-14976", "model_patch": "diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py\nindex 48d6783..ff00e7d 100644\n--- a/sympy/utilities/lambdify.py\n+++ b/sympy/utilities/lambdify.py\n@@ -396,7 +396,9 @@ def lambdify(args, expr, modules=None, printer=None, use_imps=True,\n             namespace.update({str(term): term})\n \n     if printer is None:\n-        if _module_present('mpmath', namespaces):\n+        if not module_provided and len(namespaces) == 1 and _module_present('mpmath', namespaces):\n+            from sympy.printing.pycode import SymPyPrinter as Printer\n+        elif _module_present('mpmath', namespaces):\n             from sympy.printing.pycode import MpmathPrinter as Printer\n         elif _module_present('numpy', namespaces):\n             from sympy.printing.pycode import NumPyPrinter as Printer\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py\nindex 9997e01..f6d826e 100644\n--- a/sympy/utilities/lambdify.py\n+++ b/sympy/utilities/lambdify.py\n@@ -86,7 +86,9 @@ def lambdify(args, expr, modules=None, printer=None, use_imps=True, dummify=Fals\n         for term in syms:\n             namespace.update({str(term): term})\n     if printer is None:\n-        if _module_present('mpmath', namespaces):\n+        if not module_provided and len(namespaces) == 1 and _module_present('mpmath', namespaces):\n+            from sympy.printing.pycode import SymPyPrinter as Printer\n+        elif _module_present('mpmath', namespaces):\n             from sympy.printing.pycode import MpmathPrinter as Printer\n         elif _module_present('numpy', namespaces):\n             from sympy.printing.pycode import NumPyPrinter as Printer\n", "normalized_occurrence": 1}
