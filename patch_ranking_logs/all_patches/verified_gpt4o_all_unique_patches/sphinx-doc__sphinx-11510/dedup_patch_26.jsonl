{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-11510", "model_patch": "diff --git a/sphinx/environment/__init__.py b/sphinx/environment/__init__.py\nindex 96f4a03..ca12689 100644\n--- a/sphinx/environment/__init__.py\n+++ b/sphinx/environment/__init__.py\n@@ -667,6 +667,14 @@ class BuildEnvironment:\n                            builder: Builder) -> None:\n         self.apply_post_transforms(doctree, fromdocname)\n \n+        # Re-apply source-read event transformations to included files\n+        for node in doctree.traverse():\n+            if isinstance(node, nodes.include):\n+                new_doc_source = ''.join(node.children[0].astext())\n+                src = [new_doc_source]\n+                self.app.emit('source-read', fromdocname, src)\n+                node.children = [nodes.raw('', src[0], format='html')]\n+\n     def apply_post_transforms(self, doctree: nodes.document, docname: str) -> None:\n         \"\"\"Apply all post-transforms.\"\"\"\n         try:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/environment/__init__.py b/sphinx/environment/__init__.py\nindex 3c422c4..f033b50 100644\n--- a/sphinx/environment/__init__.py\n+++ b/sphinx/environment/__init__.py\n@@ -372,6 +372,12 @@ class BuildEnvironment:\n         return _resolve_toctree(self, docname, builder, toctree, prune, maxdepth, titles_only, collapse, includehidden)\n     def resolve_references(self, doctree: nodes.document, fromdocname: str, builder: Builder) -> None:\n         self.apply_post_transforms(doctree, fromdocname)\n+        for node in doctree.traverse():\n+            if isinstance(node, nodes.include):\n+                new_doc_source = ''.join(node.children[0].astext())\n+                src = [new_doc_source]\n+                self.app.emit('source-read', fromdocname, src)\n+                node.children = [nodes.raw('', src[0], format='html')]\n     def apply_post_transforms(self, doctree: nodes.document, docname: str) -> None:\n         try:\n             backup = copy(self.temp_data)\n", "normalized_occurrence": 1}
