{"model_name_or_path": "agentless", "instance_id": "django__django-15561", "model_patch": "diff --git a/django/db/backends/sqlite3/schema.py b/django/db/backends/sqlite3/schema.py\nindex 86692c3..d0c3cd5 100644\n--- a/django/db/backends/sqlite3/schema.py\n+++ b/django/db/backends/sqlite3/schema.py\n@@ -123,6 +123,13 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):\n     def alter_field(self, model, old_field, new_field, strict=False):\n         if not self._field_should_be_altered(old_field, new_field):\n             return\n+        if (\n+            old_field.name == new_field.name and\n+            old_field.__class__ == new_field.__class__ and\n+            old_field.choices != new_field.choices and\n+            old_field.deconstruct()[1:] == new_field.deconstruct()[1:]\n+        ):\n+            return\n         old_field_name = old_field.name\n         table_name = model._meta.db_table\n         _, old_column_name = old_field.get_attname_column()\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/sqlite3/schema.py b/django/db/backends/sqlite3/schema.py\nindex 9a783c9..11c0a4b 100644\n--- a/django/db/backends/sqlite3/schema.py\n+++ b/django/db/backends/sqlite3/schema.py\n@@ -67,6 +67,8 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):\n     def alter_field(self, model, old_field, new_field, strict=False):\n         if not self._field_should_be_altered(old_field, new_field):\n             return\n+        if old_field.name == new_field.name and old_field.__class__ == new_field.__class__ and (old_field.choices != new_field.choices) and (old_field.deconstruct()[1:] == new_field.deconstruct()[1:]):\n+            return\n         old_field_name = old_field.name\n         table_name = model._meta.db_table\n         _, old_column_name = old_field.get_attname_column()\n", "normalized_occurrence": 1}
