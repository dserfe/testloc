{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9461", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 00b90de..787776c 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -2130,7 +2130,7 @@ class MethodDocumenter(DocstringSignatureMixin, ClassLevelDocumenter):  # type:\n             self.add_line('   :abstractmethod:', sourcename)\n         if inspect.iscoroutinefunction(obj):\n             self.add_line('   :async:', sourcename)\n-        if inspect.isclassmethod(obj):\n+        if inspect.isclassmethod(obj) or (inspect.isproperty(obj) and inspect.isclassmethod(getattr(obj, 'fget', None))):\n             self.add_line('   :classmethod:', sourcename)\n         if inspect.isstaticmethod(obj, cls=self.parent, name=self.object_name):\n             self.add_line('   :staticmethod:', sourcename)\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex ee3bdad..45dd8e1 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1241,7 +1241,7 @@ class MethodDocumenter(DocstringSignatureMixin, ClassLevelDocumenter):\n             self.add_line('   :abstractmethod:', sourcename)\n         if inspect.iscoroutinefunction(obj):\n             self.add_line('   :async:', sourcename)\n-        if inspect.isclassmethod(obj):\n+        if inspect.isclassmethod(obj) or (inspect.isproperty(obj) and inspect.isclassmethod(getattr(obj, 'fget', None))):\n             self.add_line('   :classmethod:', sourcename)\n         if inspect.isstaticmethod(obj, cls=self.parent, name=self.object_name):\n             self.add_line('   :staticmethod:', sourcename)\n", "normalized_occurrence": 1}
