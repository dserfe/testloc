{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8627", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 5f20d3a..3b15864 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -31,8 +31,12 @@ def record_typehints(app: Sphinx, objtype: str, name: str, obj: Any,\n             for param in sig.parameters.values():\n                 if param.annotation is not param.empty:\n                     annotation[param.name] = typing.stringify(param.annotation)\n+                    if param.annotation is struct.Struct:\n+                        annotation[param.name] = 'struct.Struct'\n             if sig.return_annotation is not sig.empty:\n                 annotation['return'] = typing.stringify(sig.return_annotation)\n+                if sig.return_annotation is struct.Struct:\n+                    annotation['return'] = 'struct.Struct'\n     except (TypeError, ValueError):\n         pass\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 80cd509..2918bb0 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -15,8 +15,12 @@ def record_typehints(app: Sphinx, objtype: str, name: str, obj: Any, options: Di\n             for param in sig.parameters.values():\n                 if param.annotation is not param.empty:\n                     annotation[param.name] = typing.stringify(param.annotation)\n+                    if param.annotation is struct.Struct:\n+                        annotation[param.name] = 'struct.Struct'\n             if sig.return_annotation is not sig.empty:\n                 annotation['return'] = typing.stringify(sig.return_annotation)\n+                if sig.return_annotation is struct.Struct:\n+                    annotation['return'] = 'struct.Struct'\n     except (TypeError, ValueError):\n         pass\n def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element) -> None:\n", "normalized_occurrence": 1}
