{"model_name_or_path": "agentless", "instance_id": "django__django-13406", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 3533127..aa8f5c0 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -206,6 +206,8 @@ class QuerySet:\n             negate, args, kwargs = self._deferred_filter\n             self._filter_or_exclude_inplace(negate, args, kwargs)\n             self._deferred_filter = None\n+        if self._query._iterable_class is not self._iterable_class:\n+            self._query._iterable_class = self._iterable_class\n         return self._query\n \n     @query.setter\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex fdf020d..15c0c8a 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -122,6 +122,8 @@ class QuerySet:\n             negate, args, kwargs = self._deferred_filter\n             self._filter_or_exclude_inplace(negate, args, kwargs)\n             self._deferred_filter = None\n+        if self._query._iterable_class is not self._iterable_class:\n+            self._query._iterable_class = self._iterable_class\n         return self._query\n     @query.setter\n     def query(self, value):\n", "normalized_occurrence": 1}
