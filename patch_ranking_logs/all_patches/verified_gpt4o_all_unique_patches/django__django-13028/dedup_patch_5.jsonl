{"model_name_or_path": "agentless", "instance_id": "django__django-13028", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex a6a3e97..28a7612 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1124,7 +1124,7 @@ class Query(BaseExpression):\n \n     def check_filterable(self, expression):\n         \"\"\"Raise an error if expression cannot be used in a WHERE clause.\"\"\"\n-        if not getattr(expression, 'filterable', True):\n+        if not getattr(expression, 'is_filterable', True):\n             raise NotSupportedError(\n                 expression.__class__.__name__ + ' is disallowed in the filter '\n                 'clause.'\n@@ -1257,6 +1257,11 @@ class Query(BaseExpression):\n \n         if check_filterable:\n             self.check_filterable(reffed_expression)\n+            if hasattr(reffed_expression, 'filterable') and not reffed_expression.filterable:\n+                raise NotSupportedError(\n+                    reffed_expression.__class__.__name__ + ' is disallowed in the filter '\n+                    'clause.'\n+                )\n \n         if not allow_joins and len(parts) > 1:\n             raise FieldError(\"Joined field references are not permitted in this query\")\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 5b98027..9f4095f 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -611,7 +611,7 @@ class Query(BaseExpression):\n                 for v in value:\n                     self.check_query_object_type(v, opts, field)\n     def check_filterable(self, expression):\n-        if not getattr(expression, 'filterable', True):\n+        if not getattr(expression, 'is_filterable', True):\n             raise NotSupportedError(expression.__class__.__name__ + ' is disallowed in the filter clause.')\n         if hasattr(expression, 'get_source_expressions'):\n             for expr in expression.get_source_expressions():\n@@ -667,6 +667,8 @@ class Query(BaseExpression):\n         lookups, parts, reffed_expression = self.solve_lookup_type(arg)\n         if check_filterable:\n             self.check_filterable(reffed_expression)\n+            if hasattr(reffed_expression, 'filterable') and (not reffed_expression.filterable):\n+                raise NotSupportedError(reffed_expression.__class__.__name__ + ' is disallowed in the filter clause.')\n         if not allow_joins and len(parts) > 1:\n             raise FieldError('Joined field references are not permitted in this query')\n         pre_joins = self.alias_refcount.copy()\n", "normalized_occurrence": 1}
