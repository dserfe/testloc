{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-8435", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 77fd48c..4a2aa22 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1716,7 +1716,13 @@ class DataDocumenter(ModuleLevelDocumenter):\n                 annotations = {}\n \n             if self.objpath[-1] in annotations:\n-                objrepr = stringify_typehint(annotations.get(self.objpath[-1]))\n+                annotation = annotations.get(self.objpath[-1])\n+                if 'autodoc_type_aliases' in self.env.config:\n+                    aliases = self.env.config.autodoc_type_aliases\n+                    # Handle string type hints that might match aliases\n+                    if isinstance(annotation, str) and annotation in aliases:\n+                        annotation = aliases[annotation]\n+                objrepr = stringify_typehint(annotation)\n                 self.add_line('   :type: ' + objrepr, sourcename)\n             else:\n                 key = ('.'.join(self.objpath[:-1]), self.objpath[-1])\n@@ -2107,7 +2113,13 @@ class AttributeDocumenter(DocstringStripSignatureMixin, ClassLevelDocumenter):\n                 annotations = {}\n \n             if self.objpath[-1] in annotations:\n-                objrepr = stringify_typehint(annotations.get(self.objpath[-1]))\n+                annotation = annotations.get(self.objpath[-1])\n+                if 'autodoc_type_aliases' in self.env.config:\n+                    aliases = self.env.config.autodoc_type_aliases\n+                    # Handle string type hints that might match aliases\n+                    if isinstance(annotation, str) and annotation in aliases:\n+                        annotation = aliases[annotation]\n+                objrepr = stringify_typehint(annotation)\n                 self.add_line('   :type: ' + objrepr, sourcename)\n             else:\n                 key = ('.'.join(self.objpath[:-1]), self.objpath[-1])\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 2484638..aea8787 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -965,7 +965,12 @@ class DataDocumenter(ModuleLevelDocumenter):\n             except AttributeError:\n                 annotations = {}\n             if self.objpath[-1] in annotations:\n-                objrepr = stringify_typehint(annotations.get(self.objpath[-1]))\n+                annotation = annotations.get(self.objpath[-1])\n+                if 'autodoc_type_aliases' in self.env.config:\n+                    aliases = self.env.config.autodoc_type_aliases\n+                    if isinstance(annotation, str) and annotation in aliases:\n+                        annotation = aliases[annotation]\n+                objrepr = stringify_typehint(annotation)\n                 self.add_line('   :type: ' + objrepr, sourcename)\n             else:\n                 key = ('.'.join(self.objpath[:-1]), self.objpath[-1])\n@@ -1223,7 +1228,12 @@ class AttributeDocumenter(DocstringStripSignatureMixin, ClassLevelDocumenter):\n             except AttributeError:\n                 annotations = {}\n             if self.objpath[-1] in annotations:\n-                objrepr = stringify_typehint(annotations.get(self.objpath[-1]))\n+                annotation = annotations.get(self.objpath[-1])\n+                if 'autodoc_type_aliases' in self.env.config:\n+                    aliases = self.env.config.autodoc_type_aliases\n+                    if isinstance(annotation, str) and annotation in aliases:\n+                        annotation = aliases[annotation]\n+                objrepr = stringify_typehint(annotation)\n                 self.add_line('   :type: ' + objrepr, sourcename)\n             else:\n                 key = ('.'.join(self.objpath[:-1]), self.objpath[-1])\n", "normalized_occurrence": 1}
