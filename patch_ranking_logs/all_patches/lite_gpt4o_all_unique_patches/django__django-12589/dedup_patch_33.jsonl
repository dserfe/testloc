{"model_name_or_path": "agentless", "instance_id": "django__django-12589", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 56581f2..e9404a5 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -132,6 +132,14 @@ class SQLCompiler:\n         seen = set()\n         expressions = self.collapse_group_by(expressions, having_group_by)\n \n+        # Ensure annotation aliases are properly added to the group by clause\n+        if self.query.group_by is True:\n+            for alias, annotation in self.query.annotations.items():\n+                if isinstance(annotation, Subquery):\n+                    group_by_cols = annotation.get_group_by_cols(alias=alias)\n+                    for col in group_by_cols:\n+                        expressions.append(col)\n+\n         for expr in expressions:\n             sql, params = self.compile(expr)\n             params_hash = make_hashable(params)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex aa7c887..f3cc7f3 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -63,6 +63,12 @@ class SQLCompiler:\n         result = []\n         seen = set()\n         expressions = self.collapse_group_by(expressions, having_group_by)\n+        if self.query.group_by is True:\n+            for alias, annotation in self.query.annotations.items():\n+                if isinstance(annotation, Subquery):\n+                    group_by_cols = annotation.get_group_by_cols(alias=alias)\n+                    for col in group_by_cols:\n+                        expressions.append(col)\n         for expr in expressions:\n             sql, params = self.compile(expr)\n             params_hash = make_hashable(params)\n", "normalized_occurrence": 1}
