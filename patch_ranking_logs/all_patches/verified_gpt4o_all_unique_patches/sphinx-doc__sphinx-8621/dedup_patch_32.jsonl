{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8621", "model_patch": "diff --git a/sphinx/util/rst.py b/sphinx/util/rst.py\nindex cb38e2c..17265f5 100644\n--- a/sphinx/util/rst.py\n+++ b/sphinx/util/rst.py\n@@ -26,10 +26,24 @@ from sphinx.util import docutils, logging\n logger = logging.getLogger(__name__)\n \n docinfo_re = re.compile(':\\\\w+:.*?')\n-symbols_re = re.compile(r'([!-\\-/:-@\\[-`{-~])')  # symbols without dot(0x2e)\n+symbols_re = re.compile(r'([!#-\\//:-@\\[-`{-~])')  # symbols without plus(0x2b) and caret(0x5e)\n SECTIONING_CHARS = ['=', '-', '~']\n \n-# width of characters\n+def parse_kbd_content(content: str) -> List[str]:\n+    \"\"\"Parse the content of a kbd role to properly handle complex keystrokes.\"\"\"\n+    keys = []\n+    buffer = []\n+    for char in content:\n+        if char in '-+^':\n+            if buffer:\n+                keys.append(''.join(buffer))\n+                buffer = []\n+            keys.append(char)\n+        else:\n+            buffer.append(char)\n+    if buffer:\n+        keys.append(''.join(buffer))\n+    return keys\n WIDECHARS = defaultdict(lambda: \"WF\")   # type: Dict[str, str]\n                                         # WF: Wide + Full-width\n WIDECHARS[\"ja\"] = \"WFA\"  # In Japanese, Ambiguous characters also have double width\n", "occurrence": 1, "normalized_patch": "--- a/sphinx/util/rst.py\n+++ b/sphinx/util/rst.py\n-symbols_re = re.compile('([!-\\\\-/:-@\\\\[-`{-~])')\n+symbols_re = re.compile('([!#-\\\\//:-@\\\\[-`{-~])')\n+def parse_kbd_content(content: str) -> List[str]:\n+    keys = []\n+    buffer = []\n+    for char in content:\n+        if char in '-+^':\n+            if buffer:\n+                keys.append(''.join(buffer))\n+                buffer = []\n+            keys.append(char)\n+        else:\n+            buffer.append(char)\n+    if buffer:\n+        keys.append(''.join(buffer))\n+    return keys", "normalized_occurrence": 1}
