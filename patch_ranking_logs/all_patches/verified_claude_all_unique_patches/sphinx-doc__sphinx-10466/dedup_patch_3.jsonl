{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-10466", "model_patch": "diff --git a/sphinx/builders/gettext.py b/sphinx/builders/gettext.py\nindex c138802..26b7e50 100644\n--- a/sphinx/builders/gettext.py\n+++ b/sphinx/builders/gettext.py\n@@ -57,8 +57,16 @@ class Catalog:\n \n     def __iter__(self) -> Generator[Message, None, None]:\n         for message in self.messages:\n-            positions = [(source, line) for source, line, uuid in self.metadata[message]]\n-            uuids = [uuid for source, line, uuid in self.metadata[message]]\n+            # Deduplicate positions while preserving order\n+            seen = set()\n+            positions = []\n+            uuids = []\n+            for source, line, uuid in self.metadata[message]:\n+                pos = (source, line)\n+                if pos not in seen:\n+                    seen.add(pos)\n+                    positions.append(pos)\n+                    uuids.append(uuid)\n             yield Message(message, positions, uuids)\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/builders/gettext.py b/sphinx/builders/gettext.py\nindex 906ebf1..4de7a50 100644\n--- a/sphinx/builders/gettext.py\n+++ b/sphinx/builders/gettext.py\n@@ -39,8 +39,15 @@ class Catalog:\n         self.metadata[msg].append((origin.source, origin.line, origin.uid))\n     def __iter__(self) -> Generator[Message, None, None]:\n         for message in self.messages:\n-            positions = [(source, line) for source, line, uuid in self.metadata[message]]\n-            uuids = [uuid for source, line, uuid in self.metadata[message]]\n+            seen = set()\n+            positions = []\n+            uuids = []\n+            for source, line, uuid in self.metadata[message]:\n+                pos = (source, line)\n+                if pos not in seen:\n+                    seen.add(pos)\n+                    positions.append(pos)\n+                    uuids.append(uuid)\n             yield Message(message, positions, uuids)\n class MsgOrigin:\n     def __init__(self, source: str, line: int) -> None:\n", "normalized_occurrence": 1}
