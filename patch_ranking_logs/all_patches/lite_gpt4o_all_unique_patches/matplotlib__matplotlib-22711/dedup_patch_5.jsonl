{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-22711", "model_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex 6b32b96..b9604b5 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -893,8 +893,11 @@ class RangeSlider(SliderBase):\n         ----------\n         val : tuple or array-like of float\n         \"\"\"\n-        val = np.sort(val)\n-        _api.check_shape((2,), val=val)\n+        val = np.sort(np.asanyarray(val))\n+        if val.shape != (2,):\n+            raise ValueError(\n+                f\"val must have shape (2,) but has shape {val.shape}\"\n+            )\n         val[0] = self._min_in_bounds(val[0])\n         val[1] = self._max_in_bounds(val[1])\n         xy = self.poly.xy\n@@ -903,13 +906,17 @@ class RangeSlider(SliderBase):\n             xy[1] = .25, val[1]\n             xy[2] = .75, val[1]\n             xy[3] = .75, val[0]\n-            xy[4] = .25, val[0]\n+            # Ensure the polygon has the correct number of points\n+            if len(xy) == 5:\n+                xy = xy[:-1]\n         else:\n             xy[0] = val[0], .25\n             xy[1] = val[0], .75\n             xy[2] = val[1], .75\n             xy[3] = val[1], .25\n-            xy[4] = val[0], .25\n+            # Ensure the polygon has the correct number of points\n+            if len(xy) == 5:\n+                xy = xy[:-1]\n         self.poly.xy = xy\n         self.valtext.set_text(self._format(val))\n         if self.drawon:\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex 02314ac..5643c83 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -707,8 +707,9 @@ class RangeSlider(SliderBase):\n         ----------\n         val : tuple or array-like of float\n         \"\"\"\n-        val = np.sort(val)\n-        _api.check_shape((2,), val=val)\n+        val = np.sort(np.asanyarray(val))\n+        if val.shape != (2,):\n+            raise ValueError(f'val must have shape (2,) but has shape {val.shape}')\n         val[0] = self._min_in_bounds(val[0])\n         val[1] = self._max_in_bounds(val[1])\n         xy = self.poly.xy\n@@ -717,13 +718,15 @@ class RangeSlider(SliderBase):\n             xy[1] = (0.25, val[1])\n             xy[2] = (0.75, val[1])\n             xy[3] = (0.75, val[0])\n-            xy[4] = (0.25, val[0])\n+            if len(xy) == 5:\n+                xy = xy[:-1]\n         else:\n             xy[0] = (val[0], 0.25)\n             xy[1] = (val[0], 0.75)\n             xy[2] = (val[1], 0.75)\n             xy[3] = (val[1], 0.25)\n-            xy[4] = (val[0], 0.25)\n+            if len(xy) == 5:\n+                xy = xy[:-1]\n         self.poly.xy = xy\n         self.valtext.set_text(self._format(val))\n         if self.drawon:\n", "normalized_occurrence": 1}
