{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25332", "model_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 973eb1a..1e05d1f 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -3174,6 +3174,11 @@ None}, default: None\n         from matplotlib import _pylab_helpers\n         if self.canvas.manager in _pylab_helpers.Gcf.figs.values():\n             state['_restore_to_pylab'] = True\n+        \n+        # Handle aligned labels which might contain weak references\n+        aligned_labels = state.pop('aligned_labels', None)\n+        if aligned_labels is not None:\n+            state['aligned_labels'] = (aligned_labels[0], [w() for w in aligned_labels[1] if w() is not None])\n         return state\n \n     def __setstate__(self, state):\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 7796fb8..8c5464b 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -951,6 +951,9 @@ class Figure(FigureBase):\n         from matplotlib import _pylab_helpers\n         if self.canvas.manager in _pylab_helpers.Gcf.figs.values():\n             state['_restore_to_pylab'] = True\n+        aligned_labels = state.pop('aligned_labels', None)\n+        if aligned_labels is not None:\n+            state['aligned_labels'] = (aligned_labels[0], [w() for w in aligned_labels[1] if w() is not None])\n         return state\n     def __setstate__(self, state):\n         version = state.pop('__mpl_version__')\n", "normalized_occurrence": 1}
