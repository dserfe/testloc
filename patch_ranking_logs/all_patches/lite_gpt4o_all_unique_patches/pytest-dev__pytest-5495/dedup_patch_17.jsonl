{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-5495", "model_patch": "diff --git a/src/_pytest/assertion/util.py b/src/_pytest/assertion/util.py\nindex c9b4ff0..6fe83ef 100644\n--- a/src/_pytest/assertion/util.py\n+++ b/src/_pytest/assertion/util.py\n@@ -257,12 +257,22 @@ def _compare_eq_sequence(left, right, verbose=0):\n     explanation = []\n     len_left = len(left)\n     len_right = len(right)\n-    for i in range(min(len_left, len_right)):\n-        if left[i] != right[i]:\n-            explanation += [\n-                \"At index {} diff: {!r} != {!r}\".format(i, left[i], right[i])\n-            ]\n-            break\n+    if isinstance(left, bytes) and isinstance(right, bytes):\n+        left_decoded = list(left)\n+        right_decoded = list(right)\n+        for i in range(min(len_left, len_right)):\n+            if left_decoded[i] != right_decoded[i]:\n+                explanation += [\n+                    \"At index {} diff: {!r} != {!r}\".format(i, chr(left_decoded[i]), chr(right_decoded[i]))\n+                ]\n+                break\n+    else:\n+        for i in range(min(len_left, len_right)):\n+            if left[i] != right[i]:\n+                explanation += [\n+                    \"At index {} diff: {!r} != {!r}\".format(i, left[i], right[i])\n+                ]\n+                break\n     len_diff = len_left - len_right\n \n     if len_diff:\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/assertion/util.py b/src/_pytest/assertion/util.py\nindex 855efef..c31bda7 100644\n--- a/src/_pytest/assertion/util.py\n+++ b/src/_pytest/assertion/util.py\n@@ -159,10 +159,18 @@ def _compare_eq_sequence(left, right, verbose=0):\n     explanation = []\n     len_left = len(left)\n     len_right = len(right)\n-    for i in range(min(len_left, len_right)):\n-        if left[i] != right[i]:\n-            explanation += ['At index {} diff: {!r} != {!r}'.format(i, left[i], right[i])]\n-            break\n+    if isinstance(left, bytes) and isinstance(right, bytes):\n+        left_decoded = list(left)\n+        right_decoded = list(right)\n+        for i in range(min(len_left, len_right)):\n+            if left_decoded[i] != right_decoded[i]:\n+                explanation += ['At index {} diff: {!r} != {!r}'.format(i, chr(left_decoded[i]), chr(right_decoded[i]))]\n+                break\n+    else:\n+        for i in range(min(len_left, len_right)):\n+            if left[i] != right[i]:\n+                explanation += ['At index {} diff: {!r} != {!r}'.format(i, left[i], right[i])]\n+                break\n     len_diff = len_left - len_right\n     if len_diff:\n         if len_diff > 0:\n", "normalized_occurrence": 1}
