{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14500", "model_patch": "diff --git a/django/db/migrations/executor.py b/django/db/migrations/executor.py\nindex 9e05ef1..d47e8f0 100644\n--- a/django/db/migrations/executor.py\n+++ b/django/db/migrations/executor.py\n@@ -251,9 +251,12 @@ class MigrationExecutor:\n             with self.connection.schema_editor(atomic=migration.atomic) as schema_editor:\n                 state = migration.unapply(state, schema_editor)\n         # For replacement migrations, record individual statuses\n+        # Only mark the replaced migrations as unapplied, not the squashed migration itself\n         if migration.replaces:\n             for app_label, name in migration.replaces:\n                 self.recorder.record_unapplied(app_label, name)\n+            # Let check_replacements() handle the squashed migration's state\n+            self.check_replacements()\n         else:\n             self.recorder.record_unapplied(migration.app_label, migration.name)\n         # Report progress\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/executor.py b/django/db/migrations/executor.py\nindex d5a1e7d..25a2197 100644\n--- a/django/db/migrations/executor.py\n+++ b/django/db/migrations/executor.py\n@@ -148,6 +148,7 @@ class MigrationExecutor:\n         if migration.replaces:\n             for app_label, name in migration.replaces:\n                 self.recorder.record_unapplied(app_label, name)\n+            self.check_replacements()\n         else:\n             self.recorder.record_unapplied(migration.app_label, migration.name)\n         if self.progress_callback:\n", "normalized_occurrence": 1}
