{"model_name_or_path": "agentless", "instance_id": "django__django-12325", "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 77c04dd..bae2c6d 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -200,10 +200,14 @@ class ModelBase(type):\n             # Skip concrete parent classes.\n             if base != new_class and not base._meta.abstract:\n                 continue\n-            # Locate OneToOneField instances.\n-            for field in base._meta.local_fields:\n-                if isinstance(field, OneToOneField):\n-                    related = resolve_relation(new_class, field.remote_field.model)\n+            # Locate OneToOneField instances and order by field declaration.\n+            for field in [f for f in new_class._meta.local_fields if isinstance(f, OneToOneField)]:\n+                related = resolve_relation(new_class, field.remote_field.model)\n+                if field.remote_field.parent_link:\n+                    parent_links[make_model_tuple(related)] = field\n+            for field in [f for f in base._meta.local_fields if isinstance(f, OneToOneField)]:\n+                related = resolve_relation(new_class, field.remote_field.model)\n+                if not field.remote_field.parent_link:\n                     parent_links[make_model_tuple(related)] = field\n \n         # Track fields inherited from base models.\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 0ae5317..9c287f4 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -104,9 +104,13 @@ class ModelBase(type):\n                 continue\n             if base != new_class and (not base._meta.abstract):\n                 continue\n-            for field in base._meta.local_fields:\n-                if isinstance(field, OneToOneField):\n-                    related = resolve_relation(new_class, field.remote_field.model)\n+            for field in [f for f in new_class._meta.local_fields if isinstance(f, OneToOneField)]:\n+                related = resolve_relation(new_class, field.remote_field.model)\n+                if field.remote_field.parent_link:\n+                    parent_links[make_model_tuple(related)] = field\n+            for field in [f for f in base._meta.local_fields if isinstance(f, OneToOneField)]:\n+                related = resolve_relation(new_class, field.remote_field.model)\n+                if not field.remote_field.parent_link:\n                     parent_links[make_model_tuple(related)] = field\n         inherited_attributes = set()\n         for base in new_class.mro():\n", "normalized_occurrence": 1}
