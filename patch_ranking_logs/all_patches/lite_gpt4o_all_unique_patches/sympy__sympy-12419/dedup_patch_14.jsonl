{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-12419", "model_patch": "diff --git a/sympy/matrices/expressions/matexpr.py b/sympy/matrices/expressions/matexpr.py\nindex 8f30d0d..f062d85 100644\n--- a/sympy/matrices/expressions/matexpr.py\n+++ b/sympy/matrices/expressions/matexpr.py\n@@ -427,6 +427,8 @@ class MatrixSymbol(MatrixExpr):\n         return set((self,))\n \n     def doit(self, **hints):\n+        if hasattr(self, 'is_Identity') and self.is_Identity:\n+            return self\n         if hints.get('deep', True):\n             return type(self)(self.name, self.args[1].doit(**hints),\n                     self.args[2].doit(**hints))\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/expressions/matexpr.py b/sympy/matrices/expressions/matexpr.py\nindex 9ec3ea5..21b574d 100644\n--- a/sympy/matrices/expressions/matexpr.py\n+++ b/sympy/matrices/expressions/matexpr.py\n@@ -253,6 +253,8 @@ class MatrixSymbol(MatrixExpr):\n     def free_symbols(self):\n         return set((self,))\n     def doit(self, **hints):\n+        if hasattr(self, 'is_Identity') and self.is_Identity:\n+            return self\n         if hints.get('deep', True):\n             return type(self)(self.name, self.args[1].doit(**hints), self.args[2].doit(**hints))\n         else:\n", "normalized_occurrence": 1}
