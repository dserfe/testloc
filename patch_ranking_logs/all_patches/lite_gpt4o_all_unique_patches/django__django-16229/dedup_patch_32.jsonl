{"model_name_or_path": "agentless", "instance_id": "django__django-16229", "model_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 5264b71..bb73853 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -355,9 +355,13 @@ class BaseModelForm(BaseForm, AltersData):\n         else:\n             self.instance = instance\n             object_data = model_to_dict(instance, opts.fields, opts.exclude)\n-        # if initial was provided, it should override the values from instance\n+        # if initial was provided, it should override the values from instance, ensuring callable defaults are respected\n         if initial is not None:\n-            object_data.update(initial)\n+            for key, value in initial.items():\n+                if callable(value):\n+                    object_data[key] = value()\n+                else:\n+                    object_data[key] = value\n         # self._validate_unique will be set to True by BaseModelForm.clean().\n         # It is False by default so overriding self.clean() and failing to call\n         # super will stop validate_unique from being called.\n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex a9413ca..53c0dc4 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -149,7 +149,11 @@ class BaseModelForm(BaseForm, AltersData):\n             self.instance = instance\n             object_data = model_to_dict(instance, opts.fields, opts.exclude)\n         if initial is not None:\n-            object_data.update(initial)\n+            for key, value in initial.items():\n+                if callable(value):\n+                    object_data[key] = value()\n+                else:\n+                    object_data[key] = value\n         self._validate_unique = False\n         super().__init__(data, files, auto_id, prefix, object_data, error_class, label_suffix, empty_permitted, use_required_attribute=use_required_attribute, renderer=renderer)\n         for formfield in self.fields.values():\n", "normalized_occurrence": 5}
