{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-14317", "model_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 408ff45..e0d5a76 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1854,7 +1854,43 @@ class LatexPrinter(Printer):\n \n     def _print_Poly(self, poly):\n         cls = poly.__class__.__name__\n-        expr = self._print(poly.as_expr())\n+        terms = poly.terms()\n+        \n+        # Build the expression string term by term to preserve order\n+        expr_parts = []\n+        for monom, coeff in terms:\n+            if not coeff:\n+                continue\n+            \n+            # Get the variables with exponents\n+            term = []\n+            for base, exp in zip(poly.gens, monom):\n+                if exp == 0:\n+                    continue\n+                elif exp == 1:\n+                    term.append(self._print(base))\n+                else:\n+                    term.append(\"%s^{%d}\" % (self._print(base), exp))\n+            \n+            # Handle the coefficient\n+            if coeff == 1 and term:\n+                coeff_str = \"\"\n+            elif coeff == -1 and term:\n+                coeff_str = \"-\"\n+            else:\n+                coeff_str = self._print(coeff)\n+                \n+            # Combine coefficient and variables\n+            if term:\n+                if coeff_str in [\"\", \"-\"]:\n+                    expr_parts.append(coeff_str + \" \".join(term))\n+                else:\n+                    expr_parts.append(coeff_str + \" \" + \" \".join(term))\n+            else:\n+                expr_parts.append(coeff_str)\n+                \n+        expr = \" + \".join(expr_parts).replace(\" + -\", \" - \")\n+        \n         gens = list(map(self._print, poly.gens))\n         domain = \"domain=%s\" % self._print(poly.get_domain())\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 5a18831..e8baaa3 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1241,7 +1241,33 @@ class LatexPrinter(Printer):\n         return '%s%s\\\\left[%s\\\\right]' % (inv, domain, symbols)\n     def _print_Poly(self, poly):\n         cls = poly.__class__.__name__\n-        expr = self._print(poly.as_expr())\n+        terms = poly.terms()\n+        expr_parts = []\n+        for monom, coeff in terms:\n+            if not coeff:\n+                continue\n+            term = []\n+            for base, exp in zip(poly.gens, monom):\n+                if exp == 0:\n+                    continue\n+                elif exp == 1:\n+                    term.append(self._print(base))\n+                else:\n+                    term.append('%s^{%d}' % (self._print(base), exp))\n+            if coeff == 1 and term:\n+                coeff_str = ''\n+            elif coeff == -1 and term:\n+                coeff_str = '-'\n+            else:\n+                coeff_str = self._print(coeff)\n+            if term:\n+                if coeff_str in ['', '-']:\n+                    expr_parts.append(coeff_str + ' '.join(term))\n+                else:\n+                    expr_parts.append(coeff_str + ' ' + ' '.join(term))\n+            else:\n+                expr_parts.append(coeff_str)\n+        expr = ' + '.join(expr_parts).replace(' + -', ' - ')\n         gens = list(map(self._print, poly.gens))\n         domain = 'domain=%s' % self._print(poly.get_domain())\n         args = ', '.join([expr] + gens + [domain])\n", "normalized_occurrence": 1}
