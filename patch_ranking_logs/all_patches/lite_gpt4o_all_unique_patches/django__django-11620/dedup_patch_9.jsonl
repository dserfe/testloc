{"model_name_or_path": "agentless", "instance_id": "django__django-11620", "model_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 37e3b61..8cbfda4 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -568,8 +568,8 @@ class URLResolver:\n                             self._join_route(current_route, sub_match.route),\n                         )\n                     tried.append([pattern])\n-            raise Resolver404({'tried': tried, 'path': new_path})\n-        raise Resolver404({'path': path})\n+            raise Resolver404({'tried': tried, 'path': new_path}, original_exc=e)\n+        raise Resolver404({'path': path}, original_exc=e)\n \n     @cached_property\n     def urlconf_module(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 24bb34e..58f9a15 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -367,8 +367,8 @@ class URLResolver:\n                         current_route = '' if isinstance(pattern, URLPattern) else str(pattern.pattern)\n                         return ResolverMatch(sub_match.func, sub_match_args, sub_match_dict, sub_match.url_name, [self.app_name] + sub_match.app_names, [self.namespace] + sub_match.namespaces, self._join_route(current_route, sub_match.route))\n                     tried.append([pattern])\n-            raise Resolver404({'tried': tried, 'path': new_path})\n-        raise Resolver404({'path': path})\n+            raise Resolver404({'tried': tried, 'path': new_path}, original_exc=e)\n+        raise Resolver404({'path': path}, original_exc=e)\n     @cached_property\n     def urlconf_module(self):\n         if isinstance(self.urlconf_name, str):\n", "normalized_occurrence": 1}
