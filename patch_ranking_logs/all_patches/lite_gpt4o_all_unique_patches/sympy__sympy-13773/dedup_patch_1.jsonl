{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13773", "model_patch": "diff --git a/sympy/matrices/expressions/matmul.py b/sympy/matrices/expressions/matmul.py\nindex 13b44f5..0e2e92d 100644\n--- a/sympy/matrices/expressions/matmul.py\n+++ b/sympy/matrices/expressions/matmul.py\n@@ -144,8 +144,11 @@ def validate(*matrices):\n \n \n def newmul(*args):\n+    from sympy.matrices.common import MatrixBase\n     if args[0] == 1:\n         args = args[1:]\n+    if not all(isinstance(arg, MatrixBase) for arg in args if isinstance(arg, Basic)):\n+        raise ValueError(\"Scalar operands are not allowed, use '*' instead\")\n     return new(MatMul, *args)\n \n def any_zeros(mul):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/expressions/matmul.py b/sympy/matrices/expressions/matmul.py\nindex c9124f3..29ceb6b 100644\n--- a/sympy/matrices/expressions/matmul.py\n+++ b/sympy/matrices/expressions/matmul.py\n@@ -91,8 +91,11 @@ def validate(*matrices):\n         if A.cols != B.rows:\n             raise ShapeError('Matrices %s and %s are not aligned' % (A, B))\n def newmul(*args):\n+    from sympy.matrices.common import MatrixBase\n     if args[0] == 1:\n         args = args[1:]\n+    if not all((isinstance(arg, MatrixBase) for arg in args if isinstance(arg, Basic))):\n+        raise ValueError(\"Scalar operands are not allowed, use '*' instead\")\n     return new(MatMul, *args)\n def any_zeros(mul):\n     if any([arg.is_zero or (arg.is_Matrix and arg.is_ZeroMatrix) for arg in mul.args]):\n", "normalized_occurrence": 1}
