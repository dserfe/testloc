{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7490", "model_patch": "diff --git a/src/_pytest/skipping.py b/src/_pytest/skipping.py\nindex 1316da9..925711d 100644\n--- a/src/_pytest/skipping.py\n+++ b/src/_pytest/skipping.py\n@@ -272,10 +272,18 @@ def pytest_runtest_makereport(item: Item, call: CallInfo[None]):\n         rep.outcome = \"failed\"\n     elif item.config.option.runxfail:\n         pass  # don't interfere\n-    elif call.excinfo and isinstance(call.excinfo.value, xfail.Exception):\n-        assert call.excinfo.value.msg is not None\n-        rep.wasxfail = \"reason: \" + call.excinfo.value.msg\n-        rep.outcome = \"skipped\"\n+    elif call.excinfo and (isinstance(call.excinfo.value, xfail.Exception) or (xfailed and not rep.skipped)):\n+        if isinstance(call.excinfo.value, xfail.Exception):\n+            assert call.excinfo.value.msg is not None\n+            rep.wasxfail = \"reason: \" + call.excinfo.value.msg\n+            rep.outcome = \"skipped\"\n+        elif xfailed:\n+            raises = xfailed.raises\n+            if raises is not None and not isinstance(call.excinfo.value, raises):\n+                rep.outcome = \"failed\"\n+            else:\n+                rep.outcome = \"skipped\"\n+                rep.wasxfail = xfailed.reason\n     elif not rep.skipped and xfailed:\n         if call.excinfo:\n             raises = xfailed.raises\n@@ -312,4 +320,4 @@ def pytest_report_teststatus(report: BaseReport) -> Optional[Tuple[str, str, str\n             return \"xfailed\", \"x\", \"XFAIL\"\n         elif report.passed:\n             return \"xpassed\", \"X\", \"XPASS\"\n-    return None\n+    return None\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/skipping.py b/src/_pytest/skipping.py\nindex d85ae4c..b877fce 100644\n--- a/src/_pytest/skipping.py\n+++ b/src/_pytest/skipping.py\n@@ -150,10 +150,18 @@ def pytest_runtest_makereport(item: Item, call: CallInfo[None]):\n         rep.outcome = 'failed'\n     elif item.config.option.runxfail:\n         pass\n-    elif call.excinfo and isinstance(call.excinfo.value, xfail.Exception):\n-        assert call.excinfo.value.msg is not None\n-        rep.wasxfail = 'reason: ' + call.excinfo.value.msg\n-        rep.outcome = 'skipped'\n+    elif call.excinfo and (isinstance(call.excinfo.value, xfail.Exception) or (xfailed and (not rep.skipped))):\n+        if isinstance(call.excinfo.value, xfail.Exception):\n+            assert call.excinfo.value.msg is not None\n+            rep.wasxfail = 'reason: ' + call.excinfo.value.msg\n+            rep.outcome = 'skipped'\n+        elif xfailed:\n+            raises = xfailed.raises\n+            if raises is not None and (not isinstance(call.excinfo.value, raises)):\n+                rep.outcome = 'failed'\n+            else:\n+                rep.outcome = 'skipped'\n+                rep.wasxfail = xfailed.reason\n     elif not rep.skipped and xfailed:\n         if call.excinfo:\n             raises = xfailed.raises\n", "normalized_occurrence": 1}
