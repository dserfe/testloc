{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-25960", "model_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex eeb18de..5574b82 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -1589,7 +1589,9 @@ default: %(va)s\n         sfarr = np.empty((nrows, ncols), dtype=object)\n         for i in range(ncols):\n             for j in range(nrows):\n-                sfarr[j, i] = self.add_subfigure(gs[j, i], **kwargs)\n+                # Get the position from the gridspec, which includes spacing\n+                pos = gs[j, i].get_position(self)\n+                sfarr[j, i] = self.add_subfigure(gs[j, i], position=pos, **kwargs)\n \n         if squeeze:\n             # Discarding unneeded dimensions that equal 1.  If we only have one\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 19ec421..665eddd 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -414,7 +414,8 @@ class FigureBase(Artist):\n         sfarr = np.empty((nrows, ncols), dtype=object)\n         for i in range(ncols):\n             for j in range(nrows):\n-                sfarr[j, i] = self.add_subfigure(gs[j, i], **kwargs)\n+                pos = gs[j, i].get_position(self)\n+                sfarr[j, i] = self.add_subfigure(gs[j, i], position=pos, **kwargs)\n         if squeeze:\n             return sfarr.item() if sfarr.size == 1 else sfarr.squeeze()\n         else:\n", "normalized_occurrence": 3}
