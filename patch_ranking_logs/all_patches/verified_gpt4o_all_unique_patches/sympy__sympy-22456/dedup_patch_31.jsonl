{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-22456", "model_patch": "diff --git a/sympy/codegen/ast.py b/sympy/codegen/ast.py\nindex 7a7d795..e10d3d2 100644\n--- a/sympy/codegen/ast.py\n+++ b/sympy/codegen/ast.py\n@@ -895,7 +895,6 @@ class String(Token):\n \n     \"\"\"\n     __slots__ = ('text',)\n-    not_in_args = ['text']\n     is_Atom = True\n \n     @classmethod\n@@ -904,7 +903,9 @@ class String(Token):\n             raise TypeError(\"Argument text is not a string type.\")\n         return text\n \n-    def _sympystr(self, printer, *args, **kwargs):\n+    @property\n+    def args(self):\n+        return (self.text,)\n         return self.text\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/codegen/ast.py b/sympy/codegen/ast.py\nindex 41490eb..6763105 100644\n--- a/sympy/codegen/ast.py\n+++ b/sympy/codegen/ast.py\n@@ -774,7 +774,6 @@ class String(Token):\n \n     \"\"\"\n     __slots__ = ('text',)\n-    not_in_args = ['text']\n     is_Atom = True\n \n     @classmethod\n@@ -783,7 +782,9 @@ class String(Token):\n             raise TypeError('Argument text is not a string type.')\n         return text\n \n-    def _sympystr(self, printer, *args, **kwargs):\n+    @property\n+    def args(self):\n+        return (self.text,)\n         return self.text\n \n class QuotedString(String):\n", "normalized_occurrence": 1}
