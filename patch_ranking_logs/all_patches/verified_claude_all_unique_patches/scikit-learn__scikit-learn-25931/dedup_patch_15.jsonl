{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-25931", "model_patch": "diff --git a/sklearn/ensemble/_iforest.py b/sklearn/ensemble/_iforest.py\nindex d995c25..24c304c 100644\n--- a/sklearn/ensemble/_iforest.py\n+++ b/sklearn/ensemble/_iforest.py\n@@ -288,6 +288,10 @@ class IsolationForest(OutlierMixin, BaseBagging):\n             Fitted estimator.\n         \"\"\"\n         self._validate_params()\n+        # Store original feature names info for internal predictions\n+        self._feature_names_in = None\n+        if hasattr(X, \"columns\"):\n+            self._feature_names_in = X.columns\n         X = self._validate_data(X, accept_sparse=[\"csc\"], dtype=tree_dtype)\n         if issparse(X):\n             # Pre-sort indices to avoid that each individual tree of the\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/ensemble/_iforest.py b/sklearn/ensemble/_iforest.py\nindex f9e64b9..48a2586 100644\n--- a/sklearn/ensemble/_iforest.py\n+++ b/sklearn/ensemble/_iforest.py\n@@ -23,6 +23,9 @@ class IsolationForest(OutlierMixin, BaseBagging):\n         return {'prefer': 'threads'}\n     def fit(self, X, y=None, sample_weight=None):\n         self._validate_params()\n+        self._feature_names_in = None\n+        if hasattr(X, 'columns'):\n+            self._feature_names_in = X.columns\n         X = self._validate_data(X, accept_sparse=['csc'], dtype=tree_dtype)\n         if issparse(X):\n             X.sort_indices()\n", "normalized_occurrence": 1}
