{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-24177", "model_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 36d6e8e..dd82c06 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -6893,6 +6893,9 @@ such objects\n             # we return patches, so put it back in the expected order\n             patches.reverse()\n \n+        # Ensure the view is auto-scaled properly\n+        self.autoscale_view()\n+\n         # If None, make all labels None (via zip_longest below); otherwise,\n         # cast each element to str, but keep a single str as it.\n         labels = [] if label is None else np.atleast_1d(np.asarray(label, str))\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 63bfb92..d1986ac 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -2045,6 +2045,7 @@ class Axes(_AxesBase):\n                     elif orientation == 'horizontal':\n                         patch.sticky_edges.x.append(0)\n             patches.reverse()\n+        self.autoscale_view()\n         labels = [] if label is None else np.atleast_1d(np.asarray(label, str))\n         for patch, lbl in itertools.zip_longest(patches, labels):\n             if patch:\n", "normalized_occurrence": 1}
