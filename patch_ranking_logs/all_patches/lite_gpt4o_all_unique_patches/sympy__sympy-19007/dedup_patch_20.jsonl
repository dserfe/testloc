{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-19007", "model_patch": "diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py\nindex 0612235..a93be15 100644\n--- a/sympy/matrices/expressions/blockmatrix.py\n+++ b/sympy/matrices/expressions/blockmatrix.py\n@@ -237,14 +237,12 @@ class BlockMatrix(MatrixExpr):\n         for row_block, numrows in enumerate(self.rowblocksizes):\n             if (i < numrows) != False:\n                 break\n-            else:\n-                i -= numrows\n+            i -= numrows\n         for col_block, numcols in enumerate(self.colblocksizes):\n             if (j < numcols) != False:\n                 break\n-            else:\n-                j -= numcols\n-        return self.blocks[row_block, col_block][i, j]\n+            j -= numcols\n+        return self.blocks[row_block, col_block]._entry(i, j, **kwargs)\n \n     @property\n     def is_Identity(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py\nindex 4517bd0..204ad03 100644\n--- a/sympy/matrices/expressions/blockmatrix.py\n+++ b/sympy/matrices/expressions/blockmatrix.py\n@@ -106,14 +106,12 @@ class BlockMatrix(MatrixExpr):\n         for row_block, numrows in enumerate(self.rowblocksizes):\n             if (i < numrows) != False:\n                 break\n-            else:\n-                i -= numrows\n+            i -= numrows\n         for col_block, numcols in enumerate(self.colblocksizes):\n             if (j < numcols) != False:\n                 break\n-            else:\n-                j -= numcols\n-        return self.blocks[row_block, col_block][i, j]\n+            j -= numcols\n+        return self.blocks[row_block, col_block]._entry(i, j, **kwargs)\n     @property\n     def is_Identity(self):\n         if self.blockshape[0] != self.blockshape[1]:\n", "normalized_occurrence": 1}
