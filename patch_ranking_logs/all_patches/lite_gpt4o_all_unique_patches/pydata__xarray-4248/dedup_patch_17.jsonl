{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-4248", "model_patch": "diff --git a/xarray/core/formatting.py b/xarray/core/formatting.py\nindex 91a7f67..75ed21a 100644\n--- a/xarray/core/formatting.py\n+++ b/xarray/core/formatting.py\n@@ -283,7 +283,8 @@ def summarize_variable(\n         dims_str = \"({}) \".format(\", \".join(map(str, var.dims)))\n     else:\n         dims_str = \"\"\n-    front_str = f\"{first_col}{dims_str}{var.dtype} \"\n+    unit_str = f\", in {var.attrs['units']}\" if 'units' in var.attrs else \"\"\n+    front_str = f\"{first_col}{dims_str}{var.dtype}{unit_str} \"\n \n     values_width = max_width - len(front_str)\n     values_str = inline_variable_array_repr(var, values_width)\n@@ -308,6 +309,20 @@ def _summarize_coord_levels(coord, col_width, marker=\"-\"):\n def summarize_datavar(name, var, col_width):\n     return summarize_variable(name, var.variable, col_width)\n \n+def summarize_coord(name: Hashable, var, col_width: int):\n+    is_index = name in var.dims\n+    marker = \"*\" if is_index else \" \"\n+    if is_index:\n+        coord = var.variable.to_index_variable()\n+        if coord.level_names is not None:\n+            return \"\\n\".join(\n+                [\n+                    _summarize_coord_multiindex(coord, col_width, marker),\n+                    _summarize_coord_levels(coord, col_width),\n+                ]\n+            )\n+    return summarize_variable(name, var.variable, col_width, marker)\n+\n \n def summarize_coord(name: Hashable, var, col_width: int):\n     is_index = name in var.dims\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/formatting.py b/xarray/core/formatting.py\nindex 6d31a74..f400b34 100644\n--- a/xarray/core/formatting.py\n+++ b/xarray/core/formatting.py\n@@ -163,7 +163,8 @@ def summarize_variable(name: Hashable, var, col_width: int, marker: str=' ', max\n         dims_str = '({}) '.format(', '.join(map(str, var.dims)))\n     else:\n         dims_str = ''\n-    front_str = f'{first_col}{dims_str}{var.dtype} '\n+    unit_str = f\", in {var.attrs['units']}\" if 'units' in var.attrs else ''\n+    front_str = f'{first_col}{dims_str}{var.dtype}{unit_str} '\n     values_width = max_width - len(front_str)\n     values_str = inline_variable_array_repr(var, values_width)\n     return front_str + values_str\n@@ -182,6 +183,14 @@ def summarize_coord(name: Hashable, var, col_width: int):\n         if coord.level_names is not None:\n             return '\\n'.join([_summarize_coord_multiindex(coord, col_width, marker), _summarize_coord_levels(coord, col_width)])\n     return summarize_variable(name, var.variable, col_width, marker)\n+def summarize_coord(name: Hashable, var, col_width: int):\n+    is_index = name in var.dims\n+    marker = '*' if is_index else ' '\n+    if is_index:\n+        coord = var.variable.to_index_variable()\n+        if coord.level_names is not None:\n+            return '\\n'.join([_summarize_coord_multiindex(coord, col_width, marker), _summarize_coord_levels(coord, col_width)])\n+    return summarize_variable(name, var.variable, col_width, marker)\n def summarize_attr(key, value, col_width=None):\n     k_str = f'    {key}:'\n     if col_width is not None:\n", "normalized_occurrence": 1}
