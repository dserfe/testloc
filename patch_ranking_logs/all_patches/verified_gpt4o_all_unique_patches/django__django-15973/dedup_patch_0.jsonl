{"model_name_or_path": "agentless", "instance_id": "django__django-15973", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 42e02c2..04b707a 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -93,6 +93,10 @@ class CreateModel(ModelOperation):\n     def database_forwards(self, app_label, schema_editor, from_state, to_state):\n         model = to_state.apps.get_model(app_label, self.name)\n         if self.allow_migrate_model(schema_editor.connection.alias, model):\n+            # Ensure through model is resolved before creating the model\n+            for field in model._meta.local_many_to_many:\n+                if isinstance(field.remote_field.through, str):\n+                    field.remote_field.through = to_state.apps.get_model(field.remote_field.through)\n             schema_editor.create_model(model)\n \n     def database_backwards(self, app_label, schema_editor, from_state, to_state):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex b786bec..7afd78f 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -48,6 +48,9 @@ class CreateModel(ModelOperation):\n     def database_forwards(self, app_label, schema_editor, from_state, to_state):\n         model = to_state.apps.get_model(app_label, self.name)\n         if self.allow_migrate_model(schema_editor.connection.alias, model):\n+            for field in model._meta.local_many_to_many:\n+                if isinstance(field.remote_field.through, str):\n+                    field.remote_field.through = to_state.apps.get_model(field.remote_field.through)\n             schema_editor.create_model(model)\n     def database_backwards(self, app_label, schema_editor, from_state, to_state):\n         model = from_state.apps.get_model(app_label, self.name)\n", "normalized_occurrence": 1}
