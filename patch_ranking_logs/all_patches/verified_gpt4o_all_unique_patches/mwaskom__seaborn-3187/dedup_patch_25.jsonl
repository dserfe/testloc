{"model_name_or_path": "agentless", "instance_id": "mwaskom__seaborn-3187", "model_patch": "diff --git a/seaborn/relational.py b/seaborn/relational.py\nindex a94a471..75301fa 100644\n--- a/seaborn/relational.py\n+++ b/seaborn/relational.py\n@@ -292,9 +292,13 @@ class _RelationalPlotter(VectorPlotter):\n         for level, formatted_level in zip(size_levels, size_formatted_levels):\n             if level is not None:\n                 size = self._size_map(level)\n+                offset_text = ''\n+                if isinstance(self._size_map.norm, mpl.ticker.ScalarFormatter):\n+                    formatter = self._size_map.norm\n+                    offset_text = formatter.get_offset()\n                 update(\n                     self.variables[\"size\"],\n-                    formatted_level,\n+                    formatted_level + offset_text,\n                     linewidth=size,\n                     s=size,\n                 )\n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/relational.py b/seaborn/relational.py\nindex 1613149..bf883ff 100644\n--- a/seaborn/relational.py\n+++ b/seaborn/relational.py\n@@ -73,7 +73,11 @@ class _RelationalPlotter(VectorPlotter):\n         for level, formatted_level in zip(size_levels, size_formatted_levels):\n             if level is not None:\n                 size = self._size_map(level)\n-                update(self.variables['size'], formatted_level, linewidth=size, s=size)\n+                offset_text = ''\n+                if isinstance(self._size_map.norm, mpl.ticker.ScalarFormatter):\n+                    formatter = self._size_map.norm\n+                    offset_text = formatter.get_offset()\n+                update(self.variables['size'], formatted_level + offset_text, linewidth=size, s=size)\n         if not legend_title and self.variables.get('style', None) is not None:\n             update((self.variables['style'], 'title'), self.variables['style'], **title_kws)\n         if self._style_map.levels is not None:\n", "normalized_occurrence": 1}
