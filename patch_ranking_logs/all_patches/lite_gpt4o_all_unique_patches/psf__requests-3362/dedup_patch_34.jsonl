{"model_name_or_path": "agentless", "instance_id": "psf__requests-3362", "model_patch": "diff --git a/requests/utils.py b/requests/utils.py\nindex 177dcd1..f1d279a 100644\n--- a/requests/utils.py\n+++ b/requests/utils.py\n@@ -365,10 +365,14 @@ def stream_decode_response_unicode(iterator, r):\n         return\n \n     decoder = codecs.getincrementaldecoder(r.encoding)(errors='replace')\n+    buffer = ''\n     for chunk in iterator:\n-        rv = decoder.decode(chunk)\n-        if rv:\n-            yield rv\n+        buffer += chunk.decode(r.encoding, errors='replace')\n+        while '\\n' in buffer:\n+            line, buffer = buffer.split('\\n', 1)\n+            yield line\n+    if buffer:\n+        yield buffer\n     rv = decoder.decode(b'', final=True)\n     if rv:\n         yield rv\n", "occurrence": 1, "normalized_patch": "diff --git a/requests/utils.py b/requests/utils.py\nindex 9f5088a..a874295 100644\n--- a/requests/utils.py\n+++ b/requests/utils.py\n@@ -146,10 +146,14 @@ def stream_decode_response_unicode(iterator, r):\n             yield item\n         return\n     decoder = codecs.getincrementaldecoder(r.encoding)(errors='replace')\n+    buffer = ''\n     for chunk in iterator:\n-        rv = decoder.decode(chunk)\n-        if rv:\n-            yield rv\n+        buffer += chunk.decode(r.encoding, errors='replace')\n+        while '\\n' in buffer:\n+            line, buffer = buffer.split('\\n', 1)\n+            yield line\n+    if buffer:\n+        yield buffer\n     rv = decoder.decode(b'', final=True)\n     if rv:\n         yield rv\n", "normalized_occurrence": 1}
