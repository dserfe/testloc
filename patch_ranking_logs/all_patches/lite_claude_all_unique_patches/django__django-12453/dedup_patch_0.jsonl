{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12453", "model_patch": "diff --git a/django/db/backends/base/creation.py b/django/db/backends/base/creation.py\nindex 522260d..0af11a9 100644\n--- a/django/db/backends/base/creation.py\n+++ b/django/db/backends/base/creation.py\n@@ -126,8 +126,9 @@ class BaseDatabaseCreation:\n         the serialize_db_to_string() method.\n         \"\"\"\n         data = StringIO(data)\n-        for obj in serializers.deserialize(\"json\", data, using=self.connection.alias):\n-            obj.save()\n+        with transaction.atomic(using=self.connection.alias):\n+            for obj in serializers.deserialize(\"json\", data, using=self.connection.alias):\n+                obj.save()\n \n     def _get_database_display_str(self, verbosity, database_name):\n         \"\"\"\n", "occurrence": 40, "normalized_patch": "diff --git a/django/db/backends/base/creation.py b/django/db/backends/base/creation.py\nindex 64dc974..afda711 100644\n--- a/django/db/backends/base/creation.py\n+++ b/django/db/backends/base/creation.py\n@@ -51,8 +51,9 @@ class BaseDatabaseCreation:\n         return out.getvalue()\n     def deserialize_db_from_string(self, data):\n         data = StringIO(data)\n-        for obj in serializers.deserialize('json', data, using=self.connection.alias):\n-            obj.save()\n+        with transaction.atomic(using=self.connection.alias):\n+            for obj in serializers.deserialize('json', data, using=self.connection.alias):\n+                obj.save()\n     def _get_database_display_str(self, verbosity, database_name):\n         return \"'%s'%s\" % (self.connection.alias, \" ('%s')\" % database_name if verbosity >= 2 else '')\n     def _get_test_db_name(self):\n", "normalized_occurrence": 40}
