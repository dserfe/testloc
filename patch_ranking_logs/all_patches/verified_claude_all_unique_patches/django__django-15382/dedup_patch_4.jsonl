{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15382", "model_patch": "diff --git a/django/db/models/sql/where.py b/django/db/models/sql/where.py\nindex 7a540c9..2a53642 100644\n--- a/django/db/models/sql/where.py\n+++ b/django/db/models/sql/where.py\n@@ -87,21 +87,20 @@ class WhereNode(tree.Node):\n                     result_params.extend(params)\n                 else:\n                     full_needed -= 1\n-            # Check if this node matches nothing or everything.\n-            # First check the amount of full nodes and empty nodes\n-            # to make this node empty/full.\n-            # Now, check if this node is full/empty using the\n-            # counts.\n-            if empty_needed == 0:\n-                if self.negated:\n-                    return '', []\n-                else:\n-                    raise EmptyResultSet\n-            if full_needed == 0:\n-                if self.negated:\n-                    raise EmptyResultSet\n-                else:\n-                    return '', []\n+            # Continue processing all children before making any decisions\n+        # Now check if this node matches nothing or everything.\n+        # Check the amount of full nodes and empty nodes\n+        # to make this node empty/full.\n+        if empty_needed == 0:\n+            if self.negated:\n+                return '', []\n+            else:\n+                raise EmptyResultSet\n+        if full_needed == 0:\n+            if self.negated:\n+                raise EmptyResultSet\n+            else:\n+                return '', []\n         conn = ' %s ' % self.connector\n         sql_string = conn.join(result)\n         if sql_string:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/where.py b/django/db/models/sql/where.py\nindex 7f5e30d..9bc7826 100644\n--- a/django/db/models/sql/where.py\n+++ b/django/db/models/sql/where.py\n@@ -48,16 +48,16 @@ class WhereNode(tree.Node):\n                     result_params.extend(params)\n                 else:\n                     full_needed -= 1\n-            if empty_needed == 0:\n-                if self.negated:\n-                    return ('', [])\n-                else:\n-                    raise EmptyResultSet\n-            if full_needed == 0:\n-                if self.negated:\n-                    raise EmptyResultSet\n-                else:\n-                    return ('', [])\n+        if empty_needed == 0:\n+            if self.negated:\n+                return ('', [])\n+            else:\n+                raise EmptyResultSet\n+        if full_needed == 0:\n+            if self.negated:\n+                raise EmptyResultSet\n+            else:\n+                return ('', [])\n         conn = ' %s ' % self.connector\n         sql_string = conn.join(result)\n         if sql_string:\n", "normalized_occurrence": 5}
