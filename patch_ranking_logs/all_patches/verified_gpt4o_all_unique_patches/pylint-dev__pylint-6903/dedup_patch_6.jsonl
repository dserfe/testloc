{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-6903", "model_patch": "diff --git a/pylint/lint/run.py b/pylint/lint/run.py\nindex aabf0aa..8b8ae17 100644\n--- a/pylint/lint/run.py\n+++ b/pylint/lint/run.py\n@@ -58,7 +58,7 @@ def _query_cpu() -> int | None:\n             cpu_shares = int(file.read().rstrip())\n         # For AWS, gives correct value * 1024.\n         avail_cpu = int(cpu_shares / 1024)\n-    return avail_cpu\n+    return max(avail_cpu, 1)\n \n \n def _cpu_count() -> int:\n", "occurrence": 2, "normalized_patch": "diff --git a/pylint/lint/run.py b/pylint/lint/run.py\nindex 1397b08..46b9386 100644\n--- a/pylint/lint/run.py\n+++ b/pylint/lint/run.py\n@@ -32,7 +32,7 @@ def _query_cpu() -> int | None:\n         with open('/sys/fs/cgroup/cpu/cpu.shares', encoding='utf-8') as file:\n             cpu_shares = int(file.read().rstrip())\n         avail_cpu = int(cpu_shares / 1024)\n-    return avail_cpu\n+    return max(avail_cpu, 1)\n def _cpu_count() -> int:\n     cpu_share = _query_cpu()\n     cpu_count = None\n", "normalized_occurrence": 2}
