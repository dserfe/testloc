{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-9258", "model_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex b8c505d..7afb1f3 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -116,7 +116,7 @@ def _parse_annotation(annotation: str, env: BuildEnvironment = None) -> List[Nod\n             result.extend(unparse(node.op))\n             result.extend(unparse(node.right))\n             return result\n-        elif isinstance(node, ast.BitOr):\n+        elif isinstance(node, (ast.BitOr, ast.Or)):  # support both | operator and Union\n             return [nodes.Text(' '), addnodes.desc_sig_punctuation('', '|'), nodes.Text(' ')]\n         elif isinstance(node, ast.Constant):  # type: ignore\n             if node.value is Ellipsis:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex c76b6ac..9389d64 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -65,7 +65,7 @@ def _parse_annotation(annotation: str, env: BuildEnvironment=None) -> List[Node]\n             result.extend(unparse(node.op))\n             result.extend(unparse(node.right))\n             return result\n-        elif isinstance(node, ast.BitOr):\n+        elif isinstance(node, (ast.BitOr, ast.Or)):\n             return [nodes.Text(' '), addnodes.desc_sig_punctuation('', '|'), nodes.Text(' ')]\n         elif isinstance(node, ast.Constant):\n             if node.value is Ellipsis:\n", "normalized_occurrence": 1}
