{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-7757", "model_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex 3555587..079a25b 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -147,9 +147,6 @@ def _parse_arglist(arglist: str) -> addnodes.desc_parameterlist:\n     sig = signature_from_str('(%s)' % arglist)\n     last_kind = None\n     for param in sig.parameters.values():\n-        if param.kind != param.POSITIONAL_ONLY and last_kind == param.POSITIONAL_ONLY:\n-            # PEP-570: Separator for Positional Only Parameter: /\n-            params += addnodes.desc_parameter('', '', addnodes.desc_sig_operator('', '/'))\n         if param.kind == param.KEYWORD_ONLY and last_kind in (param.POSITIONAL_OR_KEYWORD,\n                                                               param.POSITIONAL_ONLY,\n                                                               None):\n@@ -182,6 +179,9 @@ def _parse_arglist(arglist: str) -> addnodes.desc_parameterlist:\n                                  support_smartquotes=False)\n \n         params += node\n+        if param.kind != param.POSITIONAL_ONLY and last_kind == param.POSITIONAL_ONLY:\n+            # PEP-570: Separator for Positional Only Parameter: /\n+            params += addnodes.desc_parameter('', '', addnodes.desc_sig_operator('', '/'))\n         last_kind = param.kind\n \n     if last_kind == Parameter.POSITIONAL_ONLY:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex 0daece2..bb1a330 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -91,8 +91,6 @@ def _parse_arglist(arglist: str) -> addnodes.desc_parameterlist:\n     sig = signature_from_str('(%s)' % arglist)\n     last_kind = None\n     for param in sig.parameters.values():\n-        if param.kind != param.POSITIONAL_ONLY and last_kind == param.POSITIONAL_ONLY:\n-            params += addnodes.desc_parameter('', '', addnodes.desc_sig_operator('', '/'))\n         if param.kind == param.KEYWORD_ONLY and last_kind in (param.POSITIONAL_OR_KEYWORD, param.POSITIONAL_ONLY, None):\n             params += addnodes.desc_parameter('', '', addnodes.desc_sig_operator('', '*'))\n         node = addnodes.desc_parameter()\n@@ -118,6 +116,8 @@ def _parse_arglist(arglist: str) -> addnodes.desc_parameterlist:\n                 node += addnodes.desc_sig_operator('', '=')\n             node += nodes.inline('', param.default, classes=['default_value'], support_smartquotes=False)\n         params += node\n+        if param.kind != param.POSITIONAL_ONLY and last_kind == param.POSITIONAL_ONLY:\n+            params += addnodes.desc_parameter('', '', addnodes.desc_sig_operator('', '/'))\n         last_kind = param.kind\n     if last_kind == Parameter.POSITIONAL_ONLY:\n         params += addnodes.desc_parameter('', '', addnodes.desc_sig_operator('', '/'))\n", "normalized_occurrence": 1}
