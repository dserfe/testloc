{"model_name_or_path": "agentless", "instance_id": "django__django-13343", "model_patch": "diff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py\nindex 4e9ee79..f60bed6 100644\n--- a/django/db/models/fields/files.py\n+++ b/django/db/models/fields/files.py\n@@ -279,7 +279,7 @@ class FileField(Field):\n             del kwargs[\"max_length\"]\n         kwargs['upload_to'] = self.upload_to\n         if self.storage is not default_storage:\n-            kwargs['storage'] = self.storage\n+            kwargs['storage'] = self.storage if not callable(self.storage) else self.storage.__name__\n         return name, path, args, kwargs\n \n     def get_internal_type(self):\n", "occurrence": 9, "normalized_patch": "diff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py\nindex fc9a6b0..f56495d 100644\n--- a/django/db/models/fields/files.py\n+++ b/django/db/models/fields/files.py\n@@ -145,7 +145,7 @@ class FileField(Field):\n             del kwargs['max_length']\n         kwargs['upload_to'] = self.upload_to\n         if self.storage is not default_storage:\n-            kwargs['storage'] = self.storage\n+            kwargs['storage'] = self.storage if not callable(self.storage) else self.storage.__name__\n         return (name, path, args, kwargs)\n     def get_internal_type(self):\n         return 'FileField'\n", "normalized_occurrence": 9}
