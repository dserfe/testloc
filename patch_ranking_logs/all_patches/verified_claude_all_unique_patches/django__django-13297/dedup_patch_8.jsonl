{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13297", "model_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 4950955..7b9ccc9 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -554,7 +554,9 @@ class URLResolver:\n                 else:\n                     if sub_match:\n                         # Merge captured arguments in match with submatch\n-                        sub_match_dict = {**kwargs, **self.default_kwargs}\n+                        # Force evaluation of any lazy objects in kwargs\n+                        resolved_kwargs = {k: str(v) if hasattr(v, '_wrapped') else v for k, v in kwargs.items()}\n+                        sub_match_dict = {**resolved_kwargs, **self.default_kwargs}\n                         # Update the sub_match_dict with the kwargs from the sub_match.\n                         sub_match_dict.update(sub_match.kwargs)\n                         # If there are *any* named groups, ignore all non-named groups.\n", "occurrence": 1, "normalized_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 715ed78..11c857c 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -363,7 +363,8 @@ class URLResolver:\n                         tried.append([pattern])\n                 else:\n                     if sub_match:\n-                        sub_match_dict = {**kwargs, **self.default_kwargs}\n+                        resolved_kwargs = {k: str(v) if hasattr(v, '_wrapped') else v for k, v in kwargs.items()}\n+                        sub_match_dict = {**resolved_kwargs, **self.default_kwargs}\n                         sub_match_dict.update(sub_match.kwargs)\n                         sub_match_args = sub_match.args\n                         if not sub_match_dict:\n", "normalized_occurrence": 1}
