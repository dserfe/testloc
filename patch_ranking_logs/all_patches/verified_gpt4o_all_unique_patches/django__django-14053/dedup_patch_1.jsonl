{"model_name_or_path": "agentless", "instance_id": "django__django-14053", "model_patch": "diff --git a/django/contrib/staticfiles/storage.py b/django/contrib/staticfiles/storage.py\nindex 04c866a..2b1b113 100644\n--- a/django/contrib/staticfiles/storage.py\n+++ b/django/contrib/staticfiles/storage.py\n@@ -228,8 +228,11 @@ class HashedFilesMixin:\n         ]\n         # Do a single pass first. Post-process all files once, then repeat for\n         # adjustable files.\n+        processed_files = set()\n         for name, hashed_name, processed, _ in self._post_process(paths, adjustable_paths, hashed_files):\n-            yield name, hashed_name, processed\n+            if name not in processed_files:\n+                yield name, hashed_name, processed\n+                processed_files.add(name)\n \n         paths = {path: paths[path] for path in adjustable_paths}\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/staticfiles/storage.py b/django/contrib/staticfiles/storage.py\nindex 08bad89..c8a75f9 100644\n--- a/django/contrib/staticfiles/storage.py\n+++ b/django/contrib/staticfiles/storage.py\n@@ -126,8 +126,11 @@ class HashedFilesMixin:\n             return\n         hashed_files = {}\n         adjustable_paths = [path for path in paths if matches_patterns(path, self._patterns)]\n+        processed_files = set()\n         for name, hashed_name, processed, _ in self._post_process(paths, adjustable_paths, hashed_files):\n-            yield (name, hashed_name, processed)\n+            if name not in processed_files:\n+                yield (name, hashed_name, processed)\n+                processed_files.add(name)\n         paths = {path: paths[path] for path in adjustable_paths}\n         for i in range(self.max_post_process_passes):\n             substitutions = False\n", "normalized_occurrence": 1}
