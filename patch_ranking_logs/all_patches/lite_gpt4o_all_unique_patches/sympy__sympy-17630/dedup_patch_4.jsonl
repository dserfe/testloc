{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-17630", "model_patch": "diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py\nindex 5a4ea29..134b585 100644\n--- a/sympy/matrices/expressions/blockmatrix.py\n+++ b/sympy/matrices/expressions/blockmatrix.py\n@@ -464,13 +464,13 @@ def bc_matmul(expr):\n     while (i+1 < len(matrices)):\n         A, B = matrices[i:i+2]\n         if isinstance(A, BlockMatrix) and isinstance(B, BlockMatrix):\n-            matrices[i] = A._blockmul(B)\n+            matrices[i] = A._blockmul(B).as_explicit()\n             matrices.pop(i+1)\n         elif isinstance(A, BlockMatrix):\n-            matrices[i] = A._blockmul(BlockMatrix([[B]]))\n+            matrices[i] = A._blockmul(BlockMatrix([[B]])).as_explicit()\n             matrices.pop(i+1)\n         elif isinstance(B, BlockMatrix):\n-            matrices[i] = BlockMatrix([[A]])._blockmul(B)\n+            matrices[i] = BlockMatrix([[A]])._blockmul(B).as_explicit()\n             matrices.pop(i+1)\n         else:\n             i+=1\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py\nindex c0f9049..09cf318 100644\n--- a/sympy/matrices/expressions/blockmatrix.py\n+++ b/sympy/matrices/expressions/blockmatrix.py\n@@ -237,13 +237,13 @@ def bc_matmul(expr):\n     while i + 1 < len(matrices):\n         A, B = matrices[i:i + 2]\n         if isinstance(A, BlockMatrix) and isinstance(B, BlockMatrix):\n-            matrices[i] = A._blockmul(B)\n+            matrices[i] = A._blockmul(B).as_explicit()\n             matrices.pop(i + 1)\n         elif isinstance(A, BlockMatrix):\n-            matrices[i] = A._blockmul(BlockMatrix([[B]]))\n+            matrices[i] = A._blockmul(BlockMatrix([[B]])).as_explicit()\n             matrices.pop(i + 1)\n         elif isinstance(B, BlockMatrix):\n-            matrices[i] = BlockMatrix([[A]])._blockmul(B)\n+            matrices[i] = BlockMatrix([[A]])._blockmul(B).as_explicit()\n             matrices.pop(i + 1)\n         else:\n             i += 1\n", "normalized_occurrence": 1}
