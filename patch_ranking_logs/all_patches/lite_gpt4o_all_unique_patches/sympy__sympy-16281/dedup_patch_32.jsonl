{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-16281", "model_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex b70dcf9..e088e82 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -489,12 +489,12 @@ class PrettyPrinter(Printer):\n         max_upper = 0\n         sign_height = 0\n \n-        for lim in expr.limits:\n+        for i, lim in enumerate(expr.limits):\n             width = (func_height + 2) * 5 // 3 - 2\n             sign_lines = []\n             sign_lines.append(corner_chr + (horizontal_chr*width) + corner_chr)\n-            for i in range(func_height + 1):\n-                sign_lines.append(vertical_chr + (' '*width) + vertical_chr)\n+            for i in range(func_height):\n+                sign_lines.append(vertical_chr + (' ' * width) + vertical_chr)\n \n             pretty_sign = stringPict('')\n             pretty_sign = prettyForm(*pretty_sign.stack(*sign_lines))\n@@ -514,12 +514,9 @@ class PrettyPrinter(Printer):\n                 pretty_func.baseline = 0\n                 first = False\n \n-            height = pretty_sign.height()\n-            padding = stringPict('')\n-            padding = prettyForm(*padding.stack(*[' ']*(height - 1)))\n-            pretty_sign = prettyForm(*pretty_sign.right(padding))\n-\n-            pretty_func = prettyForm(*pretty_sign.right(pretty_func))\n+            if i > 0:\n+                pretty_sign = prettyForm(*pretty_sign.right(pretty_func))\n+            pretty_func = prettyForm(*pretty_sign.right(pretty_func if i > 0 else stringPict('')))\n \n         pretty_func.baseline = max_upper + sign_height//2\n         pretty_func.binding = prettyForm.MUL\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 0b99bb2..745246d 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -358,11 +358,11 @@ class PrettyPrinter(Printer):\n         first = True\n         max_upper = 0\n         sign_height = 0\n-        for lim in expr.limits:\n+        for i, lim in enumerate(expr.limits):\n             width = (func_height + 2) * 5 // 3 - 2\n             sign_lines = []\n             sign_lines.append(corner_chr + horizontal_chr * width + corner_chr)\n-            for i in range(func_height + 1):\n+            for i in range(func_height):\n                 sign_lines.append(vertical_chr + ' ' * width + vertical_chr)\n             pretty_sign = stringPict('')\n             pretty_sign = prettyForm(*pretty_sign.stack(*sign_lines))\n@@ -376,11 +376,9 @@ class PrettyPrinter(Printer):\n             if first:\n                 pretty_func.baseline = 0\n                 first = False\n-            height = pretty_sign.height()\n-            padding = stringPict('')\n-            padding = prettyForm(*padding.stack(*[' '] * (height - 1)))\n-            pretty_sign = prettyForm(*pretty_sign.right(padding))\n-            pretty_func = prettyForm(*pretty_sign.right(pretty_func))\n+            if i > 0:\n+                pretty_sign = prettyForm(*pretty_sign.right(pretty_func))\n+            pretty_func = prettyForm(*pretty_sign.right(pretty_func if i > 0 else stringPict('')))\n         pretty_func.baseline = max_upper + sign_height // 2\n         pretty_func.binding = prettyForm.MUL\n         return pretty_func\n", "normalized_occurrence": 1}
