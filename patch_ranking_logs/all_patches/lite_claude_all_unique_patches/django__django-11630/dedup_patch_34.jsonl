{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11630", "model_patch": "diff --git a/django/core/checks/model_checks.py b/django/core/checks/model_checks.py\nindex 231b761..f697efd 100644\n--- a/django/core/checks/model_checks.py\n+++ b/django/core/checks/model_checks.py\n@@ -1,3 +1,4 @@\n+\n import inspect\n import types\n from collections import defaultdict\n@@ -35,16 +36,28 @@ def check_all_models(app_configs=None, **kwargs):\n             indexes[model_index.name].append(model._meta.label)\n         for model_constraint in model._meta.constraints:\n             constraints[model_constraint.name].append(model._meta.label)\n+    # Group models by database to allow same table name in different DBs\n     for db_table, model_labels in db_table_models.items():\n         if len(model_labels) != 1:\n-            errors.append(\n-                Error(\n-                    \"db_table '%s' is used by multiple models: %s.\"\n-                    % (db_table, ', '.join(db_table_models[db_table])),\n-                    obj=db_table,\n-                    id='models.E028',\n-                )\n-            )\n+            # Get the models for these labels\n+            models_by_db = {}\n+            for label in model_labels:\n+                model = apps.get_model(label)\n+                # Use getattr to get the database attribute, default to 'default'\n+                db_name = getattr(model._meta, 'db', 'default')\n+                models_by_db.setdefault(db_name, []).append(label)\n+            \n+            # Only raise error if multiple models share table name in same database\n+            for db_name, db_model_labels in models_by_db.items():\n+                if len(db_model_labels) > 1:\n+                    errors.append(\n+                        Error(\n+                            \"db_table '%s' is used by multiple models in the same database (%s): %s.\"\n+                            % (db_table, db_name, ', '.join(db_model_labels)),\n+                            obj=db_table,\n+                            id='models.E028',\n+                        )\n+                    )\n     for index_name, model_labels in indexes.items():\n         if len(model_labels) > 1:\n             model_labels = set(model_labels)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/checks/model_checks.py b/django/core/checks/model_checks.py\nindex 8001d47..302ab3b 100644\n--- a/django/core/checks/model_checks.py\n+++ b/django/core/checks/model_checks.py\n@@ -27,7 +27,14 @@ def check_all_models(app_configs=None, **kwargs):\n             constraints[model_constraint.name].append(model._meta.label)\n     for db_table, model_labels in db_table_models.items():\n         if len(model_labels) != 1:\n-            errors.append(Error(\"db_table '%s' is used by multiple models: %s.\" % (db_table, ', '.join(db_table_models[db_table])), obj=db_table, id='models.E028'))\n+            models_by_db = {}\n+            for label in model_labels:\n+                model = apps.get_model(label)\n+                db_name = getattr(model._meta, 'db', 'default')\n+                models_by_db.setdefault(db_name, []).append(label)\n+            for db_name, db_model_labels in models_by_db.items():\n+                if len(db_model_labels) > 1:\n+                    errors.append(Error(\"db_table '%s' is used by multiple models in the same database (%s): %s.\" % (db_table, db_name, ', '.join(db_model_labels)), obj=db_table, id='models.E028'))\n     for index_name, model_labels in indexes.items():\n         if len(model_labels) > 1:\n             model_labels = set(model_labels)\n", "normalized_occurrence": 1}
