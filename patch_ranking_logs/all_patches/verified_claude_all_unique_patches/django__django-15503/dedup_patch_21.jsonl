{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15503", "model_patch": "diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py\nindex 0a76a39..ce17097 100644\n--- a/django/db/models/fields/json.py\n+++ b/django/db/models/fields/json.py\n@@ -228,7 +228,7 @@ class HasKeyLookup(PostgresOperatorLookup):\n \n     def as_sqlite(self, compiler, connection):\n         return self.as_sql(\n-            compiler, connection, template=\"JSON_TYPE(%s, %%s) IS NOT NULL\"\n+            compiler, connection, template=\"JSON_EXTRACT(%s, '$.' || quote(%%s)) IS NOT NULL\"\n         )\n \n \n", "occurrence": 3, "normalized_patch": "diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py\nindex 272d7b8..c3d5fca 100644\n--- a/django/db/models/fields/json.py\n+++ b/django/db/models/fields/json.py\n@@ -141,7 +141,7 @@ class HasKeyLookup(PostgresOperatorLookup):\n             self.rhs = rhs_key_transforms[-1]\n         return super().as_postgresql(compiler, connection)\n     def as_sqlite(self, compiler, connection):\n-        return self.as_sql(compiler, connection, template='JSON_TYPE(%s, %%s) IS NOT NULL')\n+        return self.as_sql(compiler, connection, template=\"JSON_EXTRACT(%s, '$.' || quote(%%s)) IS NOT NULL\")\n class HasKey(HasKeyLookup):\n     lookup_name = 'has_key'\n     postgres_operator = '?'\n", "normalized_occurrence": 3}
