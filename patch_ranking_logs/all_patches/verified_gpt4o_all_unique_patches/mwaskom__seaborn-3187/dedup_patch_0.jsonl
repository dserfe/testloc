{"model_name_or_path": "agentless", "instance_id": "mwaskom__seaborn-3187", "model_patch": "diff --git a/seaborn/_core/plot.py b/seaborn/_core/plot.py\nindex 8f14ac9..90099ce 100644\n--- a/seaborn/_core/plot.py\n+++ b/seaborn/_core/plot.py\n@@ -1569,6 +1569,12 @@ class Plotter:\n                         break\n                 else:\n                     title = self._resolve_label(p, var, data.names[var])\n+                    # Retrieve the formatter and its offset value for the scale\n+                    formatter = scales[var]._get_formatter(None, None, None, None, None)\n+                    if isinstance(formatter, ScalarFormatter) and formatter.get_offset():\n+                        offset_value = formatter.get_offset()\n+                        # Adjust labels to include the offset value\n+                        labels = [f\"{label} {offset_value}\" for label in labels]\n                     entry = (title, data.ids[var]), [var], (values, labels)\n                     schema.append(entry)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/_core/plot.py b/seaborn/_core/plot.py\nindex c674f99..dc6b657 100644\n--- a/seaborn/_core/plot.py\n+++ b/seaborn/_core/plot.py\n@@ -716,6 +716,10 @@ class Plotter:\n                         break\n                 else:\n                     title = self._resolve_label(p, var, data.names[var])\n+                    formatter = scales[var]._get_formatter(None, None, None, None, None)\n+                    if isinstance(formatter, ScalarFormatter) and formatter.get_offset():\n+                        offset_value = formatter.get_offset()\n+                        labels = [f'{label} {offset_value}' for label in labels]\n                     entry = ((title, data.ids[var]), [var], (values, labels))\n                     schema.append(entry)\n         contents: list[tuple[tuple[str, str | int], Any, list[str]]] = []\n", "normalized_occurrence": 1}
