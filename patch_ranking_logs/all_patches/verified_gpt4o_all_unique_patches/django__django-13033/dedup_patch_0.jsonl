{"model_name_or_path": "agentless", "instance_id": "django__django-13033", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex e0d8d05..dc9abfb 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -1131,7 +1131,7 @@ class QuerySet:\n         assert not self.query.is_sliced, \\\n             \"Cannot reorder a query once a slice has been taken.\"\n         obj = self._chain()\n-        obj.query.clear_ordering(force_empty=False)\n+        obj.query.clear_ordering(force_empty=True)\n         obj.query.add_ordering(*field_names)\n         return obj\n \n", "occurrence": 2, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex be3ebe2..83b2770 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -673,7 +673,7 @@ class QuerySet:\n     def order_by(self, *field_names):\n         assert not self.query.is_sliced, 'Cannot reorder a query once a slice has been taken.'\n         obj = self._chain()\n-        obj.query.clear_ordering(force_empty=False)\n+        obj.query.clear_ordering(force_empty=True)\n         obj.query.add_ordering(*field_names)\n         return obj\n     def distinct(self, *field_names):\n", "normalized_occurrence": 2}
