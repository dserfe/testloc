{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-4094", "model_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex 1e17b93..9587f82 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -3444,11 +3444,10 @@ class Dataset(Mapping, ImplementsDatasetReduce, DataWithCoords):\n \n         for variable in self:\n             dims = self[variable].dims\n-            dims_include_sample_dims = set(sample_dims) <= set(dims)\n-            if not dims_include_sample_dims:\n+            if not set(sample_dims).issubset(dims):\n                 raise ValueError(\n-                    \"All variables in the dataset must contain the \"\n-                    \"dimensions {}.\".format(dims)\n+                    f\"All variables in the dataset must contain the sample dimensions {sample_dims}. \"\n+                    f\"Variable '{variable}' does not.\"\n                 )\n \n         def ensure_stackable(val):\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex 21ef2a4..f44767f 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -1142,9 +1142,8 @@ class Dataset(Mapping, ImplementsDatasetReduce, DataWithCoords):\n         stacking_dims = tuple((dim for dim in self.dims if dim not in sample_dims))\n         for variable in self:\n             dims = self[variable].dims\n-            dims_include_sample_dims = set(sample_dims) <= set(dims)\n-            if not dims_include_sample_dims:\n-                raise ValueError('All variables in the dataset must contain the dimensions {}.'.format(dims))\n+            if not set(sample_dims).issubset(dims):\n+                raise ValueError(f\"All variables in the dataset must contain the sample dimensions {sample_dims}. Variable '{variable}' does not.\")\n         def ensure_stackable(val):\n             assign_coords = {variable_dim: val.name}\n             for dim in stacking_dims:\n", "normalized_occurrence": 1}
