{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-14248", "model_patch": "diff --git a/sympy/printing/str.py b/sympy/printing/str.py\nindex 29d16bd..ec61c23 100644\n--- a/sympy/printing/str.py\n+++ b/sympy/printing/str.py\n@@ -47,6 +47,7 @@ class StrPrinter(Printer):\n             return str(expr)\n \n     def _print_Add(self, expr, order=None):\n+        from sympy.matrices.expressions.matexpr import MatrixSymbol\n         if self.order == 'none':\n             terms = list(expr.args)\n         else:\n@@ -56,11 +57,18 @@ class StrPrinter(Printer):\n         l = []\n         for term in terms:\n             t = self._print(term)\n-            if t.startswith('-'):\n-                sign = \"-\"\n-                t = t[1:]\n+            if isinstance(term, MatrixSymbol):\n+                if term.could_extract_minus_sign():\n+                    sign = \"-\"\n+                    t = t[1:]\n+                else:\n+                    sign = \"+\"\n             else:\n-                sign = \"+\"\n+                if t.startswith('-'):\n+                    sign = \"-\"\n+                    t = t[1:]\n+                else:\n+                    sign = \"+\"\n             if precedence(term) < PREC:\n                 l.extend([sign, \"(%s)\" % t])\n             else:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/str.py b/sympy/printing/str.py\nindex a98e2a9..77ee2a1 100644\n--- a/sympy/printing/str.py\n+++ b/sympy/printing/str.py\n@@ -28,6 +28,7 @@ class StrPrinter(Printer):\n         else:\n             return str(expr)\n     def _print_Add(self, expr, order=None):\n+        from sympy.matrices.expressions.matexpr import MatrixSymbol\n         if self.order == 'none':\n             terms = list(expr.args)\n         else:\n@@ -36,7 +37,13 @@ class StrPrinter(Printer):\n         l = []\n         for term in terms:\n             t = self._print(term)\n-            if t.startswith('-'):\n+            if isinstance(term, MatrixSymbol):\n+                if term.could_extract_minus_sign():\n+                    sign = '-'\n+                    t = t[1:]\n+                else:\n+                    sign = '+'\n+            elif t.startswith('-'):\n                 sign = '-'\n                 t = t[1:]\n             else:\n", "normalized_occurrence": 1}
