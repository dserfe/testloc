{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13647", "model_patch": "diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py\nindex fb4452b..cd0fd57 100644\n--- a/sympy/matrices/common.py\n+++ b/sympy/matrices/common.py\n@@ -83,7 +83,7 @@ class MatrixShaping(MatrixRequired):\n \n         def entry(i, j):\n             if j < pos:\n-                return self[i, j]\n+                return self[i, j - other.cols]\n             elif pos <= j < pos + other.cols:\n                 return other[i, j - pos]\n             return self[i, j - pos - other.cols]\n@@ -96,7 +96,7 @@ class MatrixShaping(MatrixRequired):\n \n         def entry(i, j):\n             if i < rows:\n-                return self[i, j]\n+                return self[i, j - other.cols]\n             return other[i - rows, j]\n \n         return classof(self, other)._new(self.rows + other.rows, self.cols,\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py\nindex 384852e..2f7d368 100644\n--- a/sympy/matrices/common.py\n+++ b/sympy/matrices/common.py\n@@ -44,7 +44,7 @@ class MatrixShaping(MatrixRequired):\n         cols = self.cols\n         def entry(i, j):\n             if j < pos:\n-                return self[i, j]\n+                return self[i, j - other.cols]\n             elif pos <= j < pos + other.cols:\n                 return other[i, j - pos]\n             return self[i, j - pos - other.cols]\n@@ -53,7 +53,7 @@ class MatrixShaping(MatrixRequired):\n         rows = self.rows\n         def entry(i, j):\n             if i < rows:\n-                return self[i, j]\n+                return self[i, j - other.cols]\n             return other[i - rows, j]\n         return classof(self, other)._new(self.rows + other.rows, self.cols, lambda i, j: entry(i, j))\n     def _eval_extract(self, rowsList, colsList):\n", "normalized_occurrence": 1}
