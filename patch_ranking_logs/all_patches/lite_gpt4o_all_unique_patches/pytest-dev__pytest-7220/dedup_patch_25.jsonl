{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7220", "model_patch": "diff --git a/src/_pytest/nodes.py b/src/_pytest/nodes.py\nindex 585fb01..a37ca0e 100644\n--- a/src/_pytest/nodes.py\n+++ b/src/_pytest/nodes.py\n@@ -367,7 +367,17 @@ class Node(metaclass=NodeMeta):\n         except OSError:\n             abspath = True\n \n-        return excinfo.getrepr(\n+        # Store the original working directory\n+        original_cwd = os.getcwd()\n+        try:\n+            os.getcwd()\n+            abspath = False\n+        except OSError:\n+            abspath = True\n+\n+        # Change back to the original working directory before getting the repr\n+        os.chdir(original_cwd)\n+        result = excinfo.getrepr(\n             funcargs=True,\n             abspath=abspath,\n             showlocals=self.config.getoption(\"showlocals\", False),\n@@ -376,6 +386,10 @@ class Node(metaclass=NodeMeta):\n             truncate_locals=truncate_locals,\n         )\n \n+        # Change back to the test's working directory\n+        os.chdir(self.config.invocation_dir)\n+        return result\n+\n     def repr_failure(\n         self, excinfo, style=None\n     ) -> Union[str, ReprExceptionInfo, ExceptionChainRepr, FixtureLookupErrorRepr]:\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/nodes.py b/src/_pytest/nodes.py\nindex e228031..78d7e4f 100644\n--- a/src/_pytest/nodes.py\n+++ b/src/_pytest/nodes.py\n@@ -294,7 +294,16 @@ class Node(metaclass=NodeMeta):\n             abspath = False\n         except OSError:\n             abspath = True\n-        return excinfo.getrepr(funcargs=True, abspath=abspath, showlocals=self.config.getoption('showlocals', False), style=style, tbfilter=False, truncate_locals=truncate_locals)\n+        original_cwd = os.getcwd()\n+        try:\n+            os.getcwd()\n+            abspath = False\n+        except OSError:\n+            abspath = True\n+        os.chdir(original_cwd)\n+        result = excinfo.getrepr(funcargs=True, abspath=abspath, showlocals=self.config.getoption('showlocals', False), style=style, tbfilter=False, truncate_locals=truncate_locals)\n+        os.chdir(self.config.invocation_dir)\n+        return result\n \n     def repr_failure(self, excinfo, style=None) -> Union[str, ReprExceptionInfo, ExceptionChainRepr, FixtureLookupErrorRepr]:\n         \"\"\"\n", "normalized_occurrence": 1}
