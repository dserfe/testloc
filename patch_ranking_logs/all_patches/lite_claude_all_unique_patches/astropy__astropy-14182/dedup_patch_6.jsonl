{"model_name_or_path": "agentless_claude", "instance_id": "astropy__astropy-14182", "model_patch": "diff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py\nindex 00bbbaf..a73260b 100644\n--- a/astropy/io/ascii/rst.py\n+++ b/astropy/io/ascii/rst.py\n@@ -61,6 +61,20 @@ class RST(FixedWidth):\n         super().__init__(delimiter_pad=None, bookend=False)\n \n     def write(self, lines):\n+        # Get the lines from parent class which handles header_rows\n         lines = super().write(lines)\n-        lines = [lines[1]] + lines + [lines[1]]\n-        return lines\n+        \n+        if self.header_rows:\n+            # For header_rows, we need the separator line after each header row\n+            header_end = len(self.header_rows)\n+            header_lines = lines[1:header_end + 1]\n+            data_lines = lines[header_end + 1:]\n+            # Add separator line after each header row\n+            lines = [lines[1]]  # First separator\n+            for line in header_lines:\n+                lines.extend([line, lines[1]])  # Header line + separator\n+            lines.extend(data_lines)  # Rest of the data\n+        else:\n+            # Original behavior for standard tables\n+            lines = [lines[1]] + lines + [lines[1]]\n+        return lines\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py\nindex 65d6c1d..bf1a128 100644\n--- a/astropy/io/ascii/rst.py\n+++ b/astropy/io/ascii/rst.py\n@@ -22,5 +22,14 @@ class RST(FixedWidth):\n         super().__init__(delimiter_pad=None, bookend=False)\n     def write(self, lines):\n         lines = super().write(lines)\n-        lines = [lines[1]] + lines + [lines[1]]\n+        if self.header_rows:\n+            header_end = len(self.header_rows)\n+            header_lines = lines[1:header_end + 1]\n+            data_lines = lines[header_end + 1:]\n+            lines = [lines[1]]\n+            for line in header_lines:\n+                lines.extend([line, lines[1]])\n+            lines.extend(data_lines)\n+        else:\n+            lines = [lines[1]] + lines + [lines[1]]\n         return lines\n\\ No newline at end of file\n", "normalized_occurrence": 1}
