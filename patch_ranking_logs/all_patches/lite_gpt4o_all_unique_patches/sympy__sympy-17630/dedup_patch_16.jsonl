{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-17630", "model_patch": "diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py\nindex 5a4ea29..794ba4e 100644\n--- a/sympy/matrices/expressions/blockmatrix.py\n+++ b/sympy/matrices/expressions/blockmatrix.py\n@@ -96,7 +96,7 @@ class BlockMatrix(MatrixExpr):\n             if ok:\n                 # same number of rows for each matrix in a row\n                 for r in rows:\n-                    ok = len(set([i.rows for i in r])) == 1\n+                    ok = len(set([i.rows for i in r if isinstance(i, MatrixBase) or isinstance(i, MatrixExpr)])) == 1\n                     if not ok:\n                         break\n                 blocky = ok\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py\nindex c0f9049..6a9319d 100644\n--- a/sympy/matrices/expressions/blockmatrix.py\n+++ b/sympy/matrices/expressions/blockmatrix.py\n@@ -31,7 +31,7 @@ class BlockMatrix(MatrixExpr):\n             blocky = ok = len(set([len(r) for r in rows])) == 1\n             if ok:\n                 for r in rows:\n-                    ok = len(set([i.rows for i in r])) == 1\n+                    ok = len(set([i.rows for i in r if isinstance(i, MatrixBase) or isinstance(i, MatrixExpr)])) == 1\n                     if not ok:\n                         break\n                 blocky = ok\n", "normalized_occurrence": 1}
