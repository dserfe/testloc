{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-12236", "model_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 03af2f5..a231fa1 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -74,8 +74,9 @@ def apart(f, x=None, full=False, **options):\n \n     if f.is_Atom:\n         return f\n-    else:\n-        P, Q = f.as_numer_denom()\n+    elif x is None and f.is_rational_function():\n+        x = list(f.free_symbols)[0]\n+    P, Q = f.as_numer_denom()\n \n     _options = options.copy()\n     options = set_defaults(options, extension=True)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 21c4bd7..9cfa52c 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -14,8 +14,9 @@ def apart(f, x=None, full=False, **options):\n     f = sympify(f)\n     if f.is_Atom:\n         return f\n-    else:\n-        P, Q = f.as_numer_denom()\n+    elif x is None and f.is_rational_function():\n+        x = list(f.free_symbols)[0]\n+    P, Q = f.as_numer_denom()\n     _options = options.copy()\n     options = set_defaults(options, extension=True)\n     try:\n", "normalized_occurrence": 1}
