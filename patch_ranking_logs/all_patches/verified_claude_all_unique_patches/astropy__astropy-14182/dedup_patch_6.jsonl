{"model_name_or_path": "agentless_claude", "instance_id": "astropy__astropy-14182", "model_patch": "diff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py\nindex 00bbbaf..6661e48 100644\n--- a/astropy/io/ascii/rst.py\n+++ b/astropy/io/ascii/rst.py\n@@ -57,10 +57,23 @@ class RST(FixedWidth):\n     data_class = SimpleRSTData\n     header_class = SimpleRSTHeader\n \n-    def __init__(self):\n+    def __init__(self, header_rows=None):\n         super().__init__(delimiter_pad=None, bookend=False)\n+        self.header_rows = header_rows\n \n     def write(self, lines):\n         lines = super().write(lines)\n-        lines = [lines[1]] + lines + [lines[1]]\n-        return lines\n+        if self.header_rows:\n+            header = []\n+            for row_type in self.header_rows:\n+                if row_type == 'name':\n+                    header.append(lines[1])  # Column names row\n+                elif row_type == 'unit':\n+                    # Add units row\n+                    units = [str(col.unit or '') for col in self.cols]\n+                    header.append(self.splitter.join(units))\n+            separator = lines[1]  # The === === line\n+            lines = [separator] + header + [separator] + lines[2:-1] + [separator]\n+        else:\n+            lines = [lines[1]] + lines + [lines[1]]\n+        return lines\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py\nindex 65d6c1d..7986449 100644\n--- a/astropy/io/ascii/rst.py\n+++ b/astropy/io/ascii/rst.py\n@@ -18,9 +18,21 @@ class RST(FixedWidth):\n     _description = 'reStructuredText simple table'\n     data_class = SimpleRSTData\n     header_class = SimpleRSTHeader\n-    def __init__(self):\n+    def __init__(self, header_rows=None):\n         super().__init__(delimiter_pad=None, bookend=False)\n+        self.header_rows = header_rows\n     def write(self, lines):\n         lines = super().write(lines)\n-        lines = [lines[1]] + lines + [lines[1]]\n+        if self.header_rows:\n+            header = []\n+            for row_type in self.header_rows:\n+                if row_type == 'name':\n+                    header.append(lines[1])\n+                elif row_type == 'unit':\n+                    units = [str(col.unit or '') for col in self.cols]\n+                    header.append(self.splitter.join(units))\n+            separator = lines[1]\n+            lines = [separator] + header + [separator] + lines[2:-1] + [separator]\n+        else:\n+            lines = [lines[1]] + lines + [lines[1]]\n         return lines\n\\ No newline at end of file\n", "normalized_occurrence": 1}
