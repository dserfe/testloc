{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12184", "model_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 1a3b6f6..5793b4e 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -159,7 +159,7 @@ class RegexPattern(CheckURLMixin):\n             # non-named groups. Otherwise, pass all non-named arguments as\n             # positional arguments.\n             kwargs = {k: v for k, v in match.groupdict().items() if v is not None}\n-            args = () if kwargs else match.groups()\n+            args = ()  # Named groups should always use kwargs\n             return path[match.end():], args, kwargs\n         return None\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex a06ca7c..7530eb8 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -92,7 +92,7 @@ class RegexPattern(CheckURLMixin):\n         match = self.regex.search(path)\n         if match:\n             kwargs = {k: v for k, v in match.groupdict().items() if v is not None}\n-            args = () if kwargs else match.groups()\n+            args = ()\n             return (path[match.end():], args, kwargs)\n         return None\n     def check(self):\n", "normalized_occurrence": 4}
