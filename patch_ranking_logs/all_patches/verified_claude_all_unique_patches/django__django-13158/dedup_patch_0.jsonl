{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13158", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex e0d8d05..174c4c1 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -919,6 +919,12 @@ class QuerySet:\n     def none(self):\n         \"\"\"Return an empty QuerySet.\"\"\"\n         clone = self._chain()\n+        # Handle case where this is a combined query (e.g. union)\n+        if clone.query.combinator:\n+            # Clear the combinator to ensure emptiness propagates correctly\n+            clone.query.combinator = None\n+            clone.query.combinator_all = False\n+            clone.query.combined_queries = ()\n         clone.query.set_empty()\n         return clone\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex be3ebe2..aad391b 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -546,6 +546,10 @@ class QuerySet:\n         return self.annotate(datetimefield=Trunc(field_name, kind, output_field=DateTimeField(), tzinfo=tzinfo, is_dst=is_dst), plain_field=F(field_name)).values_list('datetimefield', flat=True).distinct().filter(plain_field__isnull=False).order_by(('-' if order == 'DESC' else '') + 'datetimefield')\n     def none(self):\n         clone = self._chain()\n+        if clone.query.combinator:\n+            clone.query.combinator = None\n+            clone.query.combinator_all = False\n+            clone.query.combined_queries = ()\n         clone.query.set_empty()\n         return clone\n     def all(self):\n", "normalized_occurrence": 1}
