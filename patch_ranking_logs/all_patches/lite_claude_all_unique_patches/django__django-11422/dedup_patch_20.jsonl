{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11422", "model_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex 2510c51..78c41a0 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -110,6 +110,9 @@ def iter_all_python_module_files():\n def iter_modules_and_files(modules, extra_files):\n     \"\"\"Iterate through all modules needed to be watched.\"\"\"\n     sys_file_paths = []\n+    # Add the script file (usually manage.py) that started this process\n+    if sys.argv[0]:\n+        sys_file_paths.append(sys.argv[0])\n     for module in modules:\n         # During debugging (with PyDev) the 'typing.io' and 'typing.re' objects\n         # are added to sys.modules, however they are types not modules and so\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex bb4b189..c711eeb 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -74,6 +74,8 @@ def iter_all_python_module_files():\n @functools.lru_cache(maxsize=1)\n def iter_modules_and_files(modules, extra_files):\n     sys_file_paths = []\n+    if sys.argv[0]:\n+        sys_file_paths.append(sys.argv[0])\n     for module in modules:\n         if not isinstance(module, ModuleType) or getattr(module, '__spec__', None) is None:\n             continue\n", "normalized_occurrence": 4}
