{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-24177", "model_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 36d6e8e..cf001ca 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -6821,6 +6821,10 @@ such objects\n                     patch.sticky_edges.x[:] = patch.sticky_edges.y[:] = []\n \n         elif histtype.startswith('step'):\n+            if density:\n+                tops /= np.diff(bins)\n+                if stacked:\n+                    tops /= tops.sum(axis=0)\n             # these define the perimeter of the polygon\n             x = np.zeros(4 * len(bins) - 3)\n             y = np.zeros(4 * len(bins) - 3)\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 63bfb92..0c8110a 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -2005,6 +2005,10 @@ class Axes(_AxesBase):\n                 for patch in bars:\n                     patch.sticky_edges.x[:] = patch.sticky_edges.y[:] = []\n         elif histtype.startswith('step'):\n+            if density:\n+                tops /= np.diff(bins)\n+                if stacked:\n+                    tops /= tops.sum(axis=0)\n             x = np.zeros(4 * len(bins) - 3)\n             y = np.zeros(4 * len(bins) - 3)\n             x[0:2 * len(bins) - 1:2], x[1:2 * len(bins) - 1:2] = (bins, bins[:-1])\n", "normalized_occurrence": 1}
