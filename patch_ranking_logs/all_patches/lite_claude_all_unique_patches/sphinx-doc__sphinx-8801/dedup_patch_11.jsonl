{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-8801", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 9e67bb6..5bf77e4 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -2503,10 +2503,17 @@ class AttributeDocumenter(GenericAliasMixin, NewTypeMixin, SlotsMixin,  # type:\n \n                 analyzer = ModuleAnalyzer.for_module(module)\n                 analyzer.analyze()\n-                if qualname and self.objpath:\n+                if qualname:\n+                    # Check using the current class's qualname\n                     key = (qualname, attrname)\n                     if key in analyzer.attr_docs:\n                         return list(analyzer.attr_docs[key])\n+                    \n+                    # For inherited attributes, also check using the attribute's containing class\n+                    if self.objpath:\n+                        key = (self.objpath[-2], attrname)\n+                        if key in analyzer.attr_docs:\n+                            return list(analyzer.attr_docs[key])\n             except (AttributeError, PycodeError):\n                 pass\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex e1d3d5c..836df51 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1477,10 +1477,14 @@ class AttributeDocumenter(GenericAliasMixin, NewTypeMixin, SlotsMixin, TypeVarMi\n                 qualname = safe_getattr(cls, '__qualname__')\n                 analyzer = ModuleAnalyzer.for_module(module)\n                 analyzer.analyze()\n-                if qualname and self.objpath:\n+                if qualname:\n                     key = (qualname, attrname)\n                     if key in analyzer.attr_docs:\n                         return list(analyzer.attr_docs[key])\n+                    if self.objpath:\n+                        key = (self.objpath[-2], attrname)\n+                        if key in analyzer.attr_docs:\n+                            return list(analyzer.attr_docs[key])\n             except (AttributeError, PycodeError):\n                 pass\n         return None\n", "normalized_occurrence": 1}
