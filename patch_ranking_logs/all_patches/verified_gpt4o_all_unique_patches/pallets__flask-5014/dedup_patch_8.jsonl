{"model_name_or_path": "agentless", "instance_id": "pallets__flask-5014", "model_patch": "diff --git a/src/flask/blueprints.py b/src/flask/blueprints.py\nindex 678f5f0..a4f9ae3 100644\n--- a/src/flask/blueprints.py\n+++ b/src/flask/blueprints.py\n@@ -190,7 +190,8 @@ class Blueprint(Scaffold):\n             root_path=root_path,\n         )\n \n-        if \".\" in name:\n+        if not name or \".\" in name:\n+            raise ValueError(\"'name' must not be empty and may not contain a dot '.' character.\")\n             raise ValueError(\"'name' may not contain a dot '.' character.\")\n \n         self.name = name\n@@ -618,4 +619,4 @@ class Blueprint(Scaffold):\n         self.record_once(\n             lambda s: s.app.url_default_functions.setdefault(None, []).append(f)\n         )\n-        return f\n+        return f\n", "occurrence": 1, "normalized_patch": "diff --git a/src/flask/blueprints.py b/src/flask/blueprints.py\nindex dc1272e..d6771cb 100644\n--- a/src/flask/blueprints.py\n+++ b/src/flask/blueprints.py\n@@ -55,7 +55,8 @@ class Blueprint(Scaffold):\n     _got_registered_once = False\n     def __init__(self, name: str, import_name: str, static_folder: t.Optional[t.Union[str, os.PathLike]]=None, static_url_path: t.Optional[str]=None, template_folder: t.Optional[t.Union[str, os.PathLike]]=None, url_prefix: t.Optional[str]=None, subdomain: t.Optional[str]=None, url_defaults: t.Optional[dict]=None, root_path: t.Optional[str]=None, cli_group: t.Optional[str]=_sentinel):\n         super().__init__(import_name=import_name, static_folder=static_folder, static_url_path=static_url_path, template_folder=template_folder, root_path=root_path)\n-        if '.' in name:\n+        if not name or '.' in name:\n+            raise ValueError(\"'name' must not be empty and may not contain a dot '.' character.\")\n             raise ValueError(\"'name' may not contain a dot '.' character.\")\n         self.name = name\n         self.url_prefix = url_prefix\n", "normalized_occurrence": 1}
