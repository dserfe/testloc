{"model_name_or_path": "agentless_claude", "instance_id": "psf__requests-6028", "model_patch": "diff --git a/requests/auth.py b/requests/auth.py\nindex f6990ec..d586f39 100644\n--- a/requests/auth.py\n+++ b/requests/auth.py\n@@ -101,7 +101,14 @@ class HTTPProxyAuth(HTTPBasicAuth):\n     \"\"\"Attaches HTTP Proxy Authentication to a given Request object.\"\"\"\n \n     def __call__(self, r):\n+        # Set proxy auth header\n         r.headers['Proxy-Authorization'] = _basic_auth_str(self.username, self.password)\n+        \n+        # Ensure the header is preserved for subsequent requests\n+        r.headers['Connection'] = 'keep-alive'\n+        # Store the credentials in the request object for potential retries\n+        r._proxy_auth = self\n+        \n         return r\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/requests/auth.py b/requests/auth.py\nindex 926e90b..1788ab2 100644\n--- a/requests/auth.py\n+++ b/requests/auth.py\n@@ -41,6 +41,8 @@ class HTTPBasicAuth(AuthBase):\n class HTTPProxyAuth(HTTPBasicAuth):\n     def __call__(self, r):\n         r.headers['Proxy-Authorization'] = _basic_auth_str(self.username, self.password)\n+        r.headers['Connection'] = 'keep-alive'\n+        r._proxy_auth = self\n         return r\n class HTTPDigestAuth(AuthBase):\n     def __init__(self, username, password):\n", "normalized_occurrence": 1}
