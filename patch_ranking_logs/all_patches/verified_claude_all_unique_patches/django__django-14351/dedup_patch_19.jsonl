{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14351", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex e16dbc0..bfb180d 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -226,6 +226,10 @@ class SQLCompiler:\n         assert not (self.query.select and self.query.default_cols)\n         if self.query.default_cols:\n             cols = self.get_default_columns()\n+            # When in a subquery for an __in lookup, only include the primary key\n+            if (self.query.subquery and \n+                any(isinstance(child, RelatedIn) for child in self.query.where.children)):\n+                cols = [col for col in cols if getattr(col.target, 'primary_key', False)]\n         else:\n             # self.query.select is a special case. These columns never go to\n             # any model.\n", "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex b3e101b..7f89d0a 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -100,6 +100,8 @@ class SQLCompiler:\n         assert not (self.query.select and self.query.default_cols)\n         if self.query.default_cols:\n             cols = self.get_default_columns()\n+            if self.query.subquery and any((isinstance(child, RelatedIn) for child in self.query.where.children)):\n+                cols = [col for col in cols if getattr(col.target, 'primary_key', False)]\n         else:\n             cols = self.query.select\n         if cols:\n", "normalized_occurrence": 1}
