{"model_name_or_path": "agentless", "instance_id": "django__django-11532", "model_patch": "diff --git a/django/core/mail/message.py b/django/core/mail/message.py\nindex e5469be..d01f9e2 100644\n--- a/django/core/mail/message.py\n+++ b/django/core/mail/message.py\n@@ -64,7 +64,7 @@ def forbid_multi_line_headers(name, val, encoding):\n         if name.lower() in ADDRESS_HEADERS:\n             val = ', '.join(sanitize_address(addr, encoding) for addr in getaddresses((val,)))\n         else:\n-            val = Header(val, encoding).encode()\n+            val = Header(val.encode('idna').decode('ascii'), encoding).encode()\n     else:\n         if name.lower() == 'subject':\n             val = Header(val).encode()\n@@ -257,7 +257,7 @@ class EmailMessage:\n             msg['Date'] = formatdate(localtime=settings.EMAIL_USE_LOCALTIME)\n         if 'message-id' not in header_names:\n             # Use cached DNS_NAME for performance\n-            msg['Message-ID'] = make_msgid(domain=DNS_NAME)\n+            msg['Message-ID'] = make_msgid(domain=DNS_NAME.encode('idna').decode('ascii'))\n         for name, value in self.extra_headers.items():\n             if name.lower() != 'from':  # From is already handled\n                 msg[name] = value\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/mail/message.py b/django/core/mail/message.py\nindex bf67640..e858121 100644\n--- a/django/core/mail/message.py\n+++ b/django/core/mail/message.py\n@@ -34,7 +34,7 @@ def forbid_multi_line_headers(name, val, encoding):\n         if name.lower() in ADDRESS_HEADERS:\n             val = ', '.join((sanitize_address(addr, encoding) for addr in getaddresses((val,))))\n         else:\n-            val = Header(val, encoding).encode()\n+            val = Header(val.encode('idna').decode('ascii'), encoding).encode()\n     else:\n         if name.lower() == 'subject':\n             val = Header(val).encode()\n@@ -160,7 +160,7 @@ class EmailMessage:\n         if 'date' not in header_names:\n             msg['Date'] = formatdate(localtime=settings.EMAIL_USE_LOCALTIME)\n         if 'message-id' not in header_names:\n-            msg['Message-ID'] = make_msgid(domain=DNS_NAME)\n+            msg['Message-ID'] = make_msgid(domain=DNS_NAME.encode('idna').decode('ascii'))\n         for name, value in self.extra_headers.items():\n             if name.lower() != 'from':\n                 msg[name] = value\n", "normalized_occurrence": 1}
