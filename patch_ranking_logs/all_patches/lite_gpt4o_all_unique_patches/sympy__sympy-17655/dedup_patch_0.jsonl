{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-17655", "model_patch": "diff --git a/sympy/core/mul.py b/sympy/core/mul.py\nindex 152e4d1..f44b502 100644\n--- a/sympy/core/mul.py\n+++ b/sympy/core/mul.py\n@@ -198,7 +198,7 @@ class Mul(Expr, AssocOp):\n             assert not a is S.One\n             if not a.is_zero and a.is_Rational:\n                 r, b = b.as_coeff_Mul()\n-                if b.is_Add:\n+                if b.is_Add or isinstance(b, ge.Point):\n                     if r is not S.One:  # 2-arg hack\n                         # leave the Mul as a Mul\n                         rv = [cls(a*r, b, evaluate=False)], [], None\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/mul.py b/sympy/core/mul.py\nindex 87e8d70..fbdac51 100644\n--- a/sympy/core/mul.py\n+++ b/sympy/core/mul.py\n@@ -71,7 +71,7 @@ class Mul(Expr, AssocOp):\n             assert not a is S.One\n             if not a.is_zero and a.is_Rational:\n                 r, b = b.as_coeff_Mul()\n-                if b.is_Add:\n+                if b.is_Add or isinstance(b, ge.Point):\n                     if r is not S.One:\n                         rv = ([cls(a * r, b, evaluate=False)], [], None)\n                     elif global_distribute[0] and b.is_commutative:\n", "normalized_occurrence": 1}
