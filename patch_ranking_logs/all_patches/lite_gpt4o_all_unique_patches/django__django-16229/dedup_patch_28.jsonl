{"model_name_or_path": "agentless", "instance_id": "django__django-16229", "model_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 5264b71..9f8b152 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -363,17 +363,19 @@ class BaseModelForm(BaseForm, AltersData):\n         # super will stop validate_unique from being called.\n         self._validate_unique = False\n         super().__init__(\n-            data,\n-            files,\n-            auto_id,\n-            prefix,\n-            object_data,\n-            error_class,\n-            label_suffix,\n-            empty_permitted,\n+            data=data,\n+            files=files,\n+            auto_id=auto_id,\n+            prefix=prefix,\n+            initial=object_data,\n+            error_class=error_class,\n+            label_suffix=label_suffix,\n+            empty_permitted=empty_permitted,\n             use_required_attribute=use_required_attribute,\n             renderer=renderer,\n         )\n+        for formfield in self.fields.values():\n+            formfield.show_hidden_initial = False\n         for formfield in self.fields.values():\n             apply_limit_choices_to_to_formfield(formfield)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex a9413ca..c4d6031 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -151,7 +151,9 @@ class BaseModelForm(BaseForm, AltersData):\n         if initial is not None:\n             object_data.update(initial)\n         self._validate_unique = False\n-        super().__init__(data, files, auto_id, prefix, object_data, error_class, label_suffix, empty_permitted, use_required_attribute=use_required_attribute, renderer=renderer)\n+        super().__init__(data=data, files=files, auto_id=auto_id, prefix=prefix, initial=object_data, error_class=error_class, label_suffix=label_suffix, empty_permitted=empty_permitted, use_required_attribute=use_required_attribute, renderer=renderer)\n+        for formfield in self.fields.values():\n+            formfield.show_hidden_initial = False\n         for formfield in self.fields.values():\n             apply_limit_choices_to_to_formfield(formfield)\n     def _get_validation_exclusions(self):\n", "normalized_occurrence": 1}
