{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8621", "model_patch": "diff --git a/sphinx/roles.py b/sphinx/roles.py\nindex 307975f..bdb7e82 100644\n--- a/sphinx/roles.py\n+++ b/sphinx/roles.py\n@@ -132,6 +132,13 @@ class XRefRole(ReferenceRole):\n \n     def create_non_xref_node(self) -> Tuple[List[Node], List[system_message]]:\n         text = utils.unescape(self.text[1:])\n+\n+        # Handle special characters in kbd role\n+        if self.name == 'kbd':\n+            # Split the text by compound key separators but keep the separators\n+            parts = re.split(r'([\\-+^])', text)\n+            # Rebuild the text ensuring that separators are not treated as separate keys\n+            text = ''.join(f'<kbd>{part}</kbd>' if part not in '-+^' else part for part in parts)\n         if self.fix_parens:\n             self.has_explicit_title = False  # treat as implicit\n             text, target = self.update_title_and_target(text, \"\")\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/roles.py b/sphinx/roles.py\nindex ef483a8..f6f123c 100644\n--- a/sphinx/roles.py\n+++ b/sphinx/roles.py\n@@ -60,6 +60,9 @@ class XRefRole(ReferenceRole):\n             return self.create_xref_node()\n     def create_non_xref_node(self) -> Tuple[List[Node], List[system_message]]:\n         text = utils.unescape(self.text[1:])\n+        if self.name == 'kbd':\n+            parts = re.split('([\\\\-+^])', text)\n+            text = ''.join((f'<kbd>{part}</kbd>' if part not in '-+^' else part for part in parts))\n         if self.fix_parens:\n             self.has_explicit_title = False\n             text, target = self.update_title_and_target(text, '')\n", "normalized_occurrence": 1}
