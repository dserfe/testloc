{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14155", "model_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 43e675a..a5fb0b4 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -45,12 +45,23 @@ class ResolverMatch:\n         self.namespaces = [x for x in namespaces if x] if namespaces else []\n         self.namespace = ':'.join(self.namespaces)\n \n-        if not hasattr(func, '__name__'):\n-            # A class-based view\n-            self._func_path = func.__class__.__module__ + '.' + func.__class__.__name__\n+        # Handle functools.partial objects\n+        if hasattr(func, 'func') and hasattr(func, 'args') and hasattr(func, 'keywords'):\n+            # This is likely a functools.partial object\n+            real_func = func.func\n+            if not hasattr(real_func, '__name__'):\n+                # A class-based view\n+                self._func_path = real_func.__class__.__module__ + '.' + real_func.__class__.__name__\n+            else:\n+                # A function-based view\n+                self._func_path = real_func.__module__ + '.' + real_func.__name__\n         else:\n-            # A function-based view\n-            self._func_path = func.__module__ + '.' + func.__name__\n+            if not hasattr(func, '__name__'):\n+                # A class-based view\n+                self._func_path = func.__class__.__module__ + '.' + func.__class__.__name__\n+            else:\n+                # A function-based view\n+                self._func_path = func.__module__ + '.' + func.__name__\n \n         view_path = url_name or self._func_path\n         self.view_name = ':'.join(self.namespaces + [view_path])\n", "occurrence": 1, "normalized_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 8f64f28..599ec17 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -29,7 +29,13 @@ class ResolverMatch:\n         self.app_name = ':'.join(self.app_names)\n         self.namespaces = [x for x in namespaces if x] if namespaces else []\n         self.namespace = ':'.join(self.namespaces)\n-        if not hasattr(func, '__name__'):\n+        if hasattr(func, 'func') and hasattr(func, 'args') and hasattr(func, 'keywords'):\n+            real_func = func.func\n+            if not hasattr(real_func, '__name__'):\n+                self._func_path = real_func.__class__.__module__ + '.' + real_func.__class__.__name__\n+            else:\n+                self._func_path = real_func.__module__ + '.' + real_func.__name__\n+        elif not hasattr(func, '__name__'):\n             self._func_path = func.__class__.__module__ + '.' + func.__class__.__name__\n         else:\n             self._func_path = func.__module__ + '.' + func.__name__\n", "normalized_occurrence": 1}
