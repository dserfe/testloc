{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-12419", "model_patch": "diff --git a/sympy/matrices/expressions/matmul.py b/sympy/matrices/expressions/matmul.py\nindex 639ff43..194263e 100644\n--- a/sympy/matrices/expressions/matmul.py\n+++ b/sympy/matrices/expressions/matmul.py\n@@ -115,7 +115,10 @@ class MatMul(MatrixExpr):\n             args = [arg.doit(**kwargs) for arg in self.args]\n         else:\n             args = self.args\n-        return canonicalize(MatMul(*args))\n+        result = canonicalize(MatMul(*args))\n+        if isinstance(result, Identity):\n+            return result.as_explicit()\n+        return result\n \n     # Needed for partial compatibility with Mul\n     def args_cnc(self, **kwargs):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/expressions/matmul.py b/sympy/matrices/expressions/matmul.py\nindex 5b270b9..0eeed7d 100644\n--- a/sympy/matrices/expressions/matmul.py\n+++ b/sympy/matrices/expressions/matmul.py\n@@ -78,7 +78,10 @@ class MatMul(MatrixExpr):\n             args = [arg.doit(**kwargs) for arg in self.args]\n         else:\n             args = self.args\n-        return canonicalize(MatMul(*args))\n+        result = canonicalize(MatMul(*args))\n+        if isinstance(result, Identity):\n+            return result.as_explicit()\n+        return result\n     def args_cnc(self, **kwargs):\n         coeff, matrices = self.as_coeff_matrices()\n         coeff_c, coeff_nc = coeff.args_cnc(**kwargs)\n", "normalized_occurrence": 1}
