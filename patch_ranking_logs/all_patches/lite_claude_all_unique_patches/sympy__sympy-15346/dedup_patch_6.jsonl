{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-15346", "model_patch": "diff --git a/sympy/functions/elementary/trigonometric.py b/sympy/functions/elementary/trigonometric.py\nindex d9ef12f..d6b5bd5 100644\n--- a/sympy/functions/elementary/trigonometric.py\n+++ b/sympy/functions/elementary/trigonometric.py\n@@ -867,6 +867,11 @@ class cos(TrigonometricFunction):\n         x = None\n         if arg.is_Add:  # TODO: Do this more efficiently for more than two terms\n             x, y = arg.as_two_terms()\n+            # If both terms are rational, expand individually first\n+            if all(isinstance(t, Rational) for t in (x, y)):\n+                x = cos(x, evaluate=False)._eval_expand_trig()\n+                y = cos(y, evaluate=False)._eval_expand_trig()\n+                return x*cos(y) + sin(x)*sin(y)\n             sx = sin(x, evaluate=False)._eval_expand_trig()\n             sy = sin(y, evaluate=False)._eval_expand_trig()\n             cx = cos(x, evaluate=False)._eval_expand_trig()\n@@ -880,6 +885,8 @@ class cos(TrigonometricFunction):\n             if pi_coeff is not None:\n                 if pi_coeff.is_Rational:\n                     return self.rewrite(sqrt)\n+            if arg.is_Rational:\n+                return self.rewrite(sqrt)\n         return cos(arg)\n \n     def _eval_as_leading_term(self, x):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/trigonometric.py b/sympy/functions/elementary/trigonometric.py\nindex 9f9dff8..92bf3e3 100644\n--- a/sympy/functions/elementary/trigonometric.py\n+++ b/sympy/functions/elementary/trigonometric.py\n@@ -545,6 +545,10 @@ class cos(TrigonometricFunction):\n         x = None\n         if arg.is_Add:\n             x, y = arg.as_two_terms()\n+            if all((isinstance(t, Rational) for t in (x, y))):\n+                x = cos(x, evaluate=False)._eval_expand_trig()\n+                y = cos(y, evaluate=False)._eval_expand_trig()\n+                return x * cos(y) + sin(x) * sin(y)\n             sx = sin(x, evaluate=False)._eval_expand_trig()\n             sy = sin(y, evaluate=False)._eval_expand_trig()\n             cx = cos(x, evaluate=False)._eval_expand_trig()\n@@ -558,6 +562,8 @@ class cos(TrigonometricFunction):\n             if pi_coeff is not None:\n                 if pi_coeff.is_Rational:\n                     return self.rewrite(sqrt)\n+            if arg.is_Rational:\n+                return self.rewrite(sqrt)\n         return cos(arg)\n     def _eval_as_leading_term(self, x):\n         from sympy import Order\n", "normalized_occurrence": 1}
