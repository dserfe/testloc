{"model_name_or_path": "agentless_claude", "instance_id": "mwaskom__seaborn-2848", "model_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 21c0562..f29e193 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -1564,6 +1564,14 @@ class PairGrid(Grid):\n             hue = None\n         else:\n             hue = data.get(self._hue_var)\n+            # Handle case where hue is passed directly in kwargs\n+            if \"hue\" in kwargs and isinstance(kwargs[\"hue\"], pd.Series):\n+                hue = kwargs.pop(\"hue\")\n+                if len(hue) == len(data):\n+                    if self._hue_var is None:\n+                        self._hue_var = hue.name\n+                    if self._hue_order is None:\n+                        self._hue_order = list(hue.unique())\n \n         if \"hue\" not in kwargs:\n             kwargs.update({\n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 0807052..8febd56 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -747,6 +747,13 @@ class PairGrid(Grid):\n             hue = None\n         else:\n             hue = data.get(self._hue_var)\n+            if 'hue' in kwargs and isinstance(kwargs['hue'], pd.Series):\n+                hue = kwargs.pop('hue')\n+                if len(hue) == len(data):\n+                    if self._hue_var is None:\n+                        self._hue_var = hue.name\n+                    if self._hue_order is None:\n+                        self._hue_order = list(hue.unique())\n         if 'hue' not in kwargs:\n             kwargs.update({'hue': hue, 'hue_order': self._hue_order, 'palette': self._orig_palette})\n         func(x=x, y=y, **kwargs)\n", "normalized_occurrence": 1}
