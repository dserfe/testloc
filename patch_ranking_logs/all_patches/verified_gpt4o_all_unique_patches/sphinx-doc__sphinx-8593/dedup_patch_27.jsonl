{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8593", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex c412096..c229737 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -722,9 +722,14 @@ class Documenter:\n                 if cls_doc == doc:\n                     doc = None\n \n-            if isinstance(obj, ObjectMember) and obj.docstring:\n-                # hack for ClassDocumenter to inject docstring via ObjectMember\n-                doc = obj.docstring\n+            if isinstance(member, ObjectMember):\n+                if member.docstring:\n+                    # hack for ClassDocumenter to inject docstring via ObjectMember\n+                    doc = member.docstring\n+                else:\n+                    doc = None\n+            else:\n+                doc = self.get_doc(member, member, False)\n \n             has_doc = bool(doc)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex f71844a..3c1486f 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -375,8 +375,13 @@ class Documenter:\n                 cls_doc = self.get_attr(cls, '__doc__', None)\n                 if cls_doc == doc:\n                     doc = None\n-            if isinstance(obj, ObjectMember) and obj.docstring:\n-                doc = obj.docstring\n+            if isinstance(member, ObjectMember):\n+                if member.docstring:\n+                    doc = member.docstring\n+                else:\n+                    doc = None\n+            else:\n+                doc = self.get_doc(member, member, False)\n             has_doc = bool(doc)\n             metadata = extract_metadata(doc)\n             if 'private' in metadata:\n", "normalized_occurrence": 1}
