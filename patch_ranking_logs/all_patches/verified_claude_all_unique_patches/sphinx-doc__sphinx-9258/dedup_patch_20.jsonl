{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-9258", "model_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex b8c505d..9800be2 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -170,6 +170,17 @@ def _parse_annotation(annotation: str, env: BuildEnvironment = None) -> List[Nod\n         warnings.warn(\"The env parameter for _parse_annotation becomes required now.\",\n                       RemovedInSphinx50Warning, stacklevel=2)\n \n+    # First try parsing as a union type with | separator\n+    if '|' in annotation:\n+        types = [t.strip() for t in annotation.split('|')]\n+        result = []\n+        for i, type_name in enumerate(types):\n+            if i > 0:\n+                result.extend([nodes.Text(' '), addnodes.desc_sig_punctuation('', '|'), nodes.Text(' ')])\n+            result.append(type_to_xref(type_name, env))\n+        return result\n+\n+    # If no union type, try parsing as Python expression\n     try:\n         tree = ast_parse(annotation)\n         result = unparse(tree)\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex c76b6ac..8b74599 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -113,6 +113,14 @@ def _parse_annotation(annotation: str, env: BuildEnvironment=None) -> List[Node]\n             raise SyntaxError\n     if env is None:\n         warnings.warn('The env parameter for _parse_annotation becomes required now.', RemovedInSphinx50Warning, stacklevel=2)\n+    if '|' in annotation:\n+        types = [t.strip() for t in annotation.split('|')]\n+        result = []\n+        for i, type_name in enumerate(types):\n+            if i > 0:\n+                result.extend([nodes.Text(' '), addnodes.desc_sig_punctuation('', '|'), nodes.Text(' ')])\n+            result.append(type_to_xref(type_name, env))\n+        return result\n     try:\n         tree = ast_parse(annotation)\n         result = unparse(tree)\n", "normalized_occurrence": 1}
