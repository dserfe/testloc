{"model_name_or_path": "agentless", "instance_id": "django__django-15987", "model_patch": "diff --git a/django/core/management/commands/loaddata.py b/django/core/management/commands/loaddata.py\nindex c98b0b6..5860807 100644\n--- a/django/core/management/commands/loaddata.py\n+++ b/django/core/management/commands/loaddata.py\n@@ -324,7 +324,7 @@ class Command(BaseCommand):\n         fixture_name, fixture_dirs = self.get_fixture_name_and_dirs(fixture_name)\n         targets = self.get_targets(fixture_name, ser_fmt, cmp_fmt)\n         fixture_files = []\n-        for fixture_dir in fixture_dirs:\n+        for fixture_dir in map(str, fixture_dirs):\n             if self.verbosity >= 2:\n                 self.stdout.write(\"Checking %s for fixtures...\" % humanize(fixture_dir))\n             fixture_files_in_dir = self.find_fixture_files_in_dir(\n@@ -362,6 +362,7 @@ class Command(BaseCommand):\n         \"\"\"\n         dirs = []\n         fixture_dirs = settings.FIXTURE_DIRS\n+        fixture_dirs = [str(d) if isinstance(d, Path) else d for d in fixture_dirs]\n         if len(fixture_dirs) != len(set(fixture_dirs)):\n             raise ImproperlyConfigured(\"settings.FIXTURE_DIRS contains duplicates.\")\n         for app_config in apps.get_app_configs():\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/management/commands/loaddata.py b/django/core/management/commands/loaddata.py\nindex 1c3856a..0c574fd 100644\n--- a/django/core/management/commands/loaddata.py\n+++ b/django/core/management/commands/loaddata.py\n@@ -172,7 +172,7 @@ class Command(BaseCommand):\n         fixture_name, fixture_dirs = self.get_fixture_name_and_dirs(fixture_name)\n         targets = self.get_targets(fixture_name, ser_fmt, cmp_fmt)\n         fixture_files = []\n-        for fixture_dir in fixture_dirs:\n+        for fixture_dir in map(str, fixture_dirs):\n             if self.verbosity >= 2:\n                 self.stdout.write('Checking %s for fixtures...' % humanize(fixture_dir))\n             fixture_files_in_dir = self.find_fixture_files_in_dir(fixture_dir, fixture_name, targets)\n@@ -188,6 +188,7 @@ class Command(BaseCommand):\n     def fixture_dirs(self):\n         dirs = []\n         fixture_dirs = settings.FIXTURE_DIRS\n+        fixture_dirs = [str(d) if isinstance(d, Path) else d for d in fixture_dirs]\n         if len(fixture_dirs) != len(set(fixture_dirs)):\n             raise ImproperlyConfigured('settings.FIXTURE_DIRS contains duplicates.')\n         for app_config in apps.get_app_configs():\n", "normalized_occurrence": 1}
