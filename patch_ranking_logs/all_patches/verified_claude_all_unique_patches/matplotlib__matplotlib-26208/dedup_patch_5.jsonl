{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-26208", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex f9613d3..5b0ebe2 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -4408,9 +4408,16 @@ class _AxesBase(martist.Artist):\n                 self.get_position(True), *args, **kwargs,\n                 axes_locator=_TransformedBoundsLocator(\n                     [0, 0, 1, 1], self.transAxes))\n+        # Store current data limits\n+        orig_limits = self.dataLim.frozen()\n+        \n         self.set_adjustable('datalim')\n         twin.set_adjustable('datalim')\n         self._twinned_axes.join(self, twin)\n+        \n+        # Restore original data limits\n+        self.dataLim.set(orig_limits)\n+        \n         return twin\n \n     def twinx(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex eb9da84..5e2ee69 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1688,9 +1688,11 @@ class _AxesBase(martist.Artist):\n             twin = self.figure.add_subplot(ss, *args, **kwargs)\n         else:\n             twin = self.figure.add_axes(self.get_position(True), *args, **kwargs, axes_locator=_TransformedBoundsLocator([0, 0, 1, 1], self.transAxes))\n+        orig_limits = self.dataLim.frozen()\n         self.set_adjustable('datalim')\n         twin.set_adjustable('datalim')\n         self._twinned_axes.join(self, twin)\n+        self.dataLim.set(orig_limits)\n         return twin\n     def twinx(self):\n         ax2 = self._make_twin_axes(sharex=self)\n", "normalized_occurrence": 1}
