{"model_name_or_path": "agentless", "instance_id": "django__django-15781", "model_patch": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex 778cb1c..eb005a9 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -288,7 +288,7 @@ class BaseCommand:\n         \"\"\"\n         parser = CommandParser(\n             prog=\"%s %s\" % (os.path.basename(prog_name), subcommand),\n-            description=self.help or None,\n+            description=textwrap.dedent(self.help).strip() or None,\n             formatter_class=DjangoHelpFormatter,\n             missing_args_message=getattr(self, \"missing_args_message\", None),\n             called_from_command_line=getattr(self, \"_called_from_command_line\", None),\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex 2883dc3..a7da5ca 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -105,7 +105,7 @@ class BaseCommand:\n     def get_version(self):\n         return django.get_version()\n     def create_parser(self, prog_name, subcommand, **kwargs):\n-        parser = CommandParser(prog='%s %s' % (os.path.basename(prog_name), subcommand), description=self.help or None, formatter_class=DjangoHelpFormatter, missing_args_message=getattr(self, 'missing_args_message', None), called_from_command_line=getattr(self, '_called_from_command_line', None), **kwargs)\n+        parser = CommandParser(prog='%s %s' % (os.path.basename(prog_name), subcommand), description=textwrap.dedent(self.help).strip() or None, formatter_class=DjangoHelpFormatter, missing_args_message=getattr(self, 'missing_args_message', None), called_from_command_line=getattr(self, '_called_from_command_line', None), **kwargs)\n         self.add_base_argument(parser, '--version', action='version', version=self.get_version(), help=\"Show program's version number and exit.\")\n         self.add_base_argument(parser, '-v', '--verbosity', default=1, type=int, choices=[0, 1, 2, 3], help='Verbosity level; 0=minimal output, 1=normal output, 2=verbose output, 3=very verbose output')\n         self.add_base_argument(parser, '--settings', help='The Python path to a settings module, e.g. \"myproject.settings.main\". If this isn\\'t provided, the DJANGO_SETTINGS_MODULE environment variable will be used.')\n", "normalized_occurrence": 1}
