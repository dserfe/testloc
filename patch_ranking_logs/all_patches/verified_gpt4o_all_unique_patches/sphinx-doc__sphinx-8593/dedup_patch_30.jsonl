{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8593", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex c412096..d6a1360 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -735,8 +735,11 @@ class Documenter:\n             elif 'public' in metadata:\n                 # consider a member public if docstring has \"public\" metadata\n                 isprivate = False\n+            elif membername.startswith('_') and not isinstance(member, ObjectMember):\n+                # consider a member private if it starts with '_' and is not an ObjectMember\n+                isprivate = True\n             else:\n-                isprivate = membername.startswith('_')\n+                isprivate = False\n \n             keep = False\n             if safe_getattr(member, '__sphinx_mock__', None) is not None:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex f71844a..2b25e01 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -383,8 +383,10 @@ class Documenter:\n                 isprivate = True\n             elif 'public' in metadata:\n                 isprivate = False\n+            elif membername.startswith('_') and (not isinstance(member, ObjectMember)):\n+                isprivate = True\n             else:\n-                isprivate = membername.startswith('_')\n+                isprivate = False\n             keep = False\n             if safe_getattr(member, '__sphinx_mock__', None) is not None:\n                 pass\n", "normalized_occurrence": 1}
