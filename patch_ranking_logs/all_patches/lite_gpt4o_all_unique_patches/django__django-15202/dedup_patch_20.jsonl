{"model_name_or_path": "agentless", "instance_id": "django__django-15202", "model_patch": "diff --git a/django/forms/fields.py b/django/forms/fields.py\nindex b31d0ed..454b59d 100644\n--- a/django/forms/fields.py\n+++ b/django/forms/fields.py\n@@ -692,21 +692,24 @@ class URLField(CharField):\n                 # misformatted URLs.\n                 raise ValidationError(self.error_messages['invalid'], code='invalid')\n \n-        value = super().to_python(value)\n-        if value:\n-            url_fields = split_url(value)\n-            if not url_fields[0]:\n-                # If no URL scheme given, assume http://\n-                url_fields[0] = 'http'\n-            if not url_fields[1]:\n-                # Assume that if no domain is provided, that the path segment\n-                # contains the domain.\n-                url_fields[1] = url_fields[2]\n-                url_fields[2] = ''\n-                # Rebuild the url_fields list, since the domain segment may now\n-                # contain the path too.\n-                url_fields = split_url(urlunsplit(url_fields))\n-            value = urlunsplit(url_fields)\n+        try:\n+            value = super().to_python(value)\n+            if value:\n+                url_fields = split_url(value)\n+                if not url_fields[0]:\n+                    # If no URL scheme given, assume http://\n+                    url_fields[0] = 'http'\n+                if not url_fields[1]:\n+                    # Assume that if no domain is provided, that the path segment\n+                    # contains the domain.\n+                    url_fields[1] = url_fields[2]\n+                    url_fields[2] = ''\n+                    # Rebuild the url_fields list, since the domain segment may now\n+                    # contain the path too.\n+                    url_fields = split_url(urlunsplit(url_fields))\n+                value = urlunsplit(url_fields)\n+        except ValueError:\n+            raise ValidationError(self.error_messages['invalid'], code='invalid')\n         return value\n \n \n", "occurrence": 2, "normalized_patch": "diff --git a/django/forms/fields.py b/django/forms/fields.py\nindex 8548471..522c15d 100644\n--- a/django/forms/fields.py\n+++ b/django/forms/fields.py\n@@ -408,16 +408,19 @@ class URLField(CharField):\n                 return list(urlsplit(url))\n             except ValueError:\n                 raise ValidationError(self.error_messages['invalid'], code='invalid')\n-        value = super().to_python(value)\n-        if value:\n-            url_fields = split_url(value)\n-            if not url_fields[0]:\n-                url_fields[0] = 'http'\n-            if not url_fields[1]:\n-                url_fields[1] = url_fields[2]\n-                url_fields[2] = ''\n-                url_fields = split_url(urlunsplit(url_fields))\n-            value = urlunsplit(url_fields)\n+        try:\n+            value = super().to_python(value)\n+            if value:\n+                url_fields = split_url(value)\n+                if not url_fields[0]:\n+                    url_fields[0] = 'http'\n+                if not url_fields[1]:\n+                    url_fields[1] = url_fields[2]\n+                    url_fields[2] = ''\n+                    url_fields = split_url(urlunsplit(url_fields))\n+                value = urlunsplit(url_fields)\n+        except ValueError:\n+            raise ValidationError(self.error_messages['invalid'], code='invalid')\n         return value\n class BooleanField(Field):\n     widget = CheckboxInput\n", "normalized_occurrence": 2}
