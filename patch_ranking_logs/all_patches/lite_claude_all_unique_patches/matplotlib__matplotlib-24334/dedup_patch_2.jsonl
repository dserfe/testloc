{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-24334", "model_patch": "diff --git a/lib/matplotlib/axis.py b/lib/matplotlib/axis.py\nindex d63d9ca..1cdc2eb 100644\n--- a/lib/matplotlib/axis.py\n+++ b/lib/matplotlib/axis.py\n@@ -2020,7 +2020,25 @@ class Axis(martist.Artist):\n         choice to prevent the surprise of a non-visible tick. If you need\n         other limits, you should set the limits explicitly after setting the\n         ticks.\n+\n+        Raises\n+        ------\n+        ValueError\n+            If any of the keyword arguments are not valid Text properties.\n         \"\"\"\n+        # Validate that kwargs are valid Text properties even if labels are not set\n+        if kwargs:\n+            dummy_text = self.figure.text(0, 0, '')  # Create dummy text for validation\n+            try:\n+                dummy_text.update(kwargs)\n+            except AttributeError as e:\n+                raise ValueError(\n+                    f\"Keywords arguments must be valid Text properties, but found \"\n+                    f\"invalid property: {str(e)}\"\n+                ) from None\n+            finally:\n+                dummy_text.remove()\n+\n         result = self._set_tick_locations(ticks, minor=minor)\n         if labels is not None:\n             self.set_ticklabels(labels, minor=minor, **kwargs)\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axis.py b/lib/matplotlib/axis.py\nindex 95f7f71..c04e28d 100644\n--- a/lib/matplotlib/axis.py\n+++ b/lib/matplotlib/axis.py\n@@ -1649,7 +1649,20 @@ class Axis(martist.Artist):\n         choice to prevent the surprise of a non-visible tick. If you need\n         other limits, you should set the limits explicitly after setting the\n         ticks.\n+\n+        Raises\n+        ------\n+        ValueError\n+            If any of the keyword arguments are not valid Text properties.\n         \"\"\"\n+        if kwargs:\n+            dummy_text = self.figure.text(0, 0, '')\n+            try:\n+                dummy_text.update(kwargs)\n+            except AttributeError as e:\n+                raise ValueError(f'Keywords arguments must be valid Text properties, but found invalid property: {str(e)}') from None\n+            finally:\n+                dummy_text.remove()\n         result = self._set_tick_locations(ticks, minor=minor)\n         if labels is not None:\n             self.set_ticklabels(labels, minor=minor, **kwargs)\n", "normalized_occurrence": 1}
