{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-7671", "model_patch": "diff --git a/astropy/utils/introspection.py b/astropy/utils/introspection.py\nindex c8df9c0..2559bf4 100644\n--- a/astropy/utils/introspection.py\n+++ b/astropy/utils/introspection.py\n@@ -88,6 +88,8 @@ def resolve_name(name, *additional_parts):\n     return ret\n \n \n+from pkg_resources import parse_version\n+\n def minversion(module, version, inclusive=True, version_path='__version__'):\n     \"\"\"\n     Returns `True` if the specified Python module satisfies a minimum version\n@@ -140,9 +142,9 @@ def minversion(module, version, inclusive=True, version_path='__version__'):\n         have_version = resolve_name(module.__name__, version_path)\n \n     if inclusive:\n-        return LooseVersion(have_version) >= LooseVersion(version)\n+        return parse_version(have_version) >= parse_version(version)\n     else:\n-        return LooseVersion(have_version) > LooseVersion(version)\n+        return parse_version(have_version) > parse_version(version)\n \n \n def find_current_module(depth=1, finddiff=False):\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/utils/introspection.py b/astropy/utils/introspection.py\nindex 3431535..47d2ac8 100644\n--- a/astropy/utils/introspection.py\n+++ b/astropy/utils/introspection.py\n@@ -33,6 +33,7 @@ def resolve_name(name, *additional_parts):\n         except AttributeError:\n             raise ImportError(name)\n     return ret\n+from pkg_resources import parse_version\n def minversion(module, version, inclusive=True, version_path='__version__'):\n     if isinstance(module, types.ModuleType):\n         module_name = module.__name__\n@@ -49,9 +50,9 @@ def minversion(module, version, inclusive=True, version_path='__version__'):\n     else:\n         have_version = resolve_name(module.__name__, version_path)\n     if inclusive:\n-        return LooseVersion(have_version) >= LooseVersion(version)\n+        return parse_version(have_version) >= parse_version(version)\n     else:\n-        return LooseVersion(have_version) > LooseVersion(version)\n+        return parse_version(have_version) > parse_version(version)\n def find_current_module(depth=1, finddiff=False):\n     frm = inspect.currentframe()\n     for i in range(depth):\n", "normalized_occurrence": 1}
