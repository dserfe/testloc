{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8459", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 6f90bd7..225b5e0 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -51,6 +51,13 @@ def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element\n             fullname = '.'.join([signature['module'], signature['fullname']])\n         else:\n             fullname = signature['fullname']\n+\n+        # Apply type aliases\n+        if 'annotations' in signature.attributes:\n+            annotations = signature.attributes['annotations']\n+            for key, value in annotations.items():\n+                if value in app.config.autodoc_type_aliases:\n+                    annotations[key] = app.config.autodoc_type_aliases[value]\n     except KeyError:\n         # signature node does not have valid context info for the target object\n         return\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 377d0c5..72a41d7 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -32,6 +32,11 @@ def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element\n             fullname = '.'.join([signature['module'], signature['fullname']])\n         else:\n             fullname = signature['fullname']\n+        if 'annotations' in signature.attributes:\n+            annotations = signature.attributes['annotations']\n+            for key, value in annotations.items():\n+                if value in app.config.autodoc_type_aliases:\n+                    annotations[key] = app.config.autodoc_type_aliases[value]\n     except KeyError:\n         return\n     annotations = app.env.temp_data.get('annotations', {})\n", "normalized_occurrence": 1}
