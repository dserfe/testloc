{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-10949", "model_patch": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex 7e2fa63..e98fba7 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -461,10 +461,14 @@ def check_array(array, accept_sparse=False, accept_large_sparse=True,\n     # store whether originally we wanted numeric dtype\n     dtype_numeric = isinstance(dtype, six.string_types) and dtype == \"numeric\"\n \n+    # Get original dtype for comparison\n     dtype_orig = getattr(array, \"dtype\", None)\n     if not hasattr(dtype_orig, 'kind'):\n-        # not a data type (e.g. a column named dtype in a pandas DataFrame)\n-        dtype_orig = None\n+        # If pandas dataframe, get the dtype of the first column\n+        if hasattr(array, 'iloc'):\n+            dtype_orig = array.iloc[:, 0].dtype\n+        else:\n+            dtype_orig = None\n \n     if dtype_numeric:\n         if dtype_orig is not None and dtype_orig.kind == \"O\":\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex 7db8b51..ea05bd0 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -127,7 +127,10 @@ def check_array(array, accept_sparse=False, accept_large_sparse=True, dtype='num\n     dtype_numeric = isinstance(dtype, six.string_types) and dtype == 'numeric'\n     dtype_orig = getattr(array, 'dtype', None)\n     if not hasattr(dtype_orig, 'kind'):\n-        dtype_orig = None\n+        if hasattr(array, 'iloc'):\n+            dtype_orig = array.iloc[:, 0].dtype\n+        else:\n+            dtype_orig = None\n     if dtype_numeric:\n         if dtype_orig is not None and dtype_orig.kind == 'O':\n             dtype = np.float64\n", "normalized_occurrence": 1}
