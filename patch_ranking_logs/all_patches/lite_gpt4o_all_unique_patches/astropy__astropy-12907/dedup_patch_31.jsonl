{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-12907", "model_patch": "diff --git a/astropy/modeling/separable.py b/astropy/modeling/separable.py\nindex d6e9246..d63822f 100644\n--- a/astropy/modeling/separable.py\n+++ b/astropy/modeling/separable.py\n@@ -211,8 +211,8 @@ def _coord_matrix(model, pos, noutp):\n \n         for i in range(model.n_inputs):\n             mat[i, i] = 1\n-        if pos == 'right':\n-            mat = np.roll(mat, (noutp - model.n_outputs))\n+        if pos == 'right' and model.n_outputs < noutp:\n+            mat = np.roll(mat, (noutp - model.n_outputs), axis=0)\n     return mat\n \n \n@@ -307,7 +307,7 @@ def _separable(transform):\n         sepleft = _separable(transform.left)\n         sepright = _separable(transform.right)\n         return _operators[transform.op](sepleft, sepright)\n-    elif isinstance(transform, Model):\n+    elif isinstance(transform, Model) and not isinstance(transform, CompoundModel):\n         return _coord_matrix(transform, 'left', transform.n_outputs)\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/modeling/separable.py b/astropy/modeling/separable.py\nindex 198a838..c429707 100644\n--- a/astropy/modeling/separable.py\n+++ b/astropy/modeling/separable.py\n@@ -64,8 +64,8 @@ def _coord_matrix(model, pos, noutp):\n         mat = np.zeros((noutp, model.n_inputs))\n         for i in range(model.n_inputs):\n             mat[i, i] = 1\n-        if pos == 'right':\n-            mat = np.roll(mat, noutp - model.n_outputs)\n+        if pos == 'right' and model.n_outputs < noutp:\n+            mat = np.roll(mat, noutp - model.n_outputs, axis=0)\n     return mat\n def _cstack(left, right):\n     noutp = _compute_n_outputs(left, right)\n@@ -102,6 +102,6 @@ def _separable(transform):\n         sepleft = _separable(transform.left)\n         sepright = _separable(transform.right)\n         return _operators[transform.op](sepleft, sepright)\n-    elif isinstance(transform, Model):\n+    elif isinstance(transform, Model) and (not isinstance(transform, CompoundModel)):\n         return _coord_matrix(transform, 'left', transform.n_outputs)\n _operators = {'&': _cstack, '|': _cdot, '+': _arith_oper, '-': _arith_oper, '*': _arith_oper, '/': _arith_oper, '**': _arith_oper}\n\\ No newline at end of file\n", "normalized_occurrence": 1}
