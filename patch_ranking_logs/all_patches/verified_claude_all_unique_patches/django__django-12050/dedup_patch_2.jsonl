{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12050", "model_patch": "diff --git a/django/db/models/lookups.py b/django/db/models/lookups.py\nindex ba8a5e5..751f9c6 100644\n--- a/django/db/models/lookups.py\n+++ b/django/db/models/lookups.py\n@@ -252,7 +252,9 @@ class FieldGetDbPrepValueIterableMixin(FieldGetDbPrepValueMixin):\n             self.resolve_expression_parameter(compiler, connection, sql, param)\n             for sql, param in zip(*pre_processed)\n         ))\n-        params = itertools.chain.from_iterable(params)\n+        params = list(itertools.chain.from_iterable(params))\n+        if isinstance(self.rhs, list):\n+            return sql, params\n         return sql, tuple(params)\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/lookups.py b/django/db/models/lookups.py\nindex a76d93e..1408c5c 100644\n--- a/django/db/models/lookups.py\n+++ b/django/db/models/lookups.py\n@@ -176,7 +176,9 @@ class FieldGetDbPrepValueIterableMixin(FieldGetDbPrepValueMixin):\n     def batch_process_rhs(self, compiler, connection, rhs=None):\n         pre_processed = super().batch_process_rhs(compiler, connection, rhs)\n         sql, params = zip(*(self.resolve_expression_parameter(compiler, connection, sql, param) for sql, param in zip(*pre_processed)))\n-        params = itertools.chain.from_iterable(params)\n+        params = list(itertools.chain.from_iterable(params))\n+        if isinstance(self.rhs, list):\n+            return (sql, params)\n         return (sql, tuple(params))\n @Field.register_lookup\n class Exact(FieldGetDbPrepValueMixin, BuiltinLookup):\n", "normalized_occurrence": 1}
