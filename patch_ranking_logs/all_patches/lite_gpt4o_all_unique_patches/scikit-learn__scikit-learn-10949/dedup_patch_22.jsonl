{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-10949", "model_patch": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex 7e2fa63..8e1669d 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -462,6 +462,8 @@ def check_array(array, accept_sparse=False, accept_large_sparse=True,\n     dtype_numeric = isinstance(dtype, six.string_types) and dtype == \"numeric\"\n \n     dtype_orig = getattr(array, \"dtype\", None)\n+    if dtype_numeric and hasattr(array, 'dtypes') and hasattr(array.dtypes, 'apply'):\n+        dtype_orig = np.result_type(*array.dtypes.apply(lambda dt: dt if dt != 'O' else np.float64))\n     if not hasattr(dtype_orig, 'kind'):\n         # not a data type (e.g. a column named dtype in a pandas DataFrame)\n         dtype_orig = None\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex 7db8b51..497f059 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -126,6 +126,8 @@ def check_array(array, accept_sparse=False, accept_large_sparse=True, dtype='num\n     array_orig = array\n     dtype_numeric = isinstance(dtype, six.string_types) and dtype == 'numeric'\n     dtype_orig = getattr(array, 'dtype', None)\n+    if dtype_numeric and hasattr(array, 'dtypes') and hasattr(array.dtypes, 'apply'):\n+        dtype_orig = np.result_type(*array.dtypes.apply(lambda dt: dt if dt != 'O' else np.float64))\n     if not hasattr(dtype_orig, 'kind'):\n         dtype_orig = None\n     if dtype_numeric:\n", "normalized_occurrence": 1}
