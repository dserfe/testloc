{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-6938", "model_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex 8aa32fc..f8f721b 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -3773,6 +3773,8 @@ class Dataset(\n             dims = tuple(dims_dict.get(dim, dim) for dim in v.dims)\n             if k in result_dims:\n                 var = v.to_index_variable()\n+                var = var.copy(deep=True)\n+                var = var.copy(deep=True)\n                 var.dims = dims\n                 if k in self._indexes:\n                     indexes[k] = self._indexes[k]\n@@ -3783,7 +3785,8 @@ class Dataset(\n                     variables.update(index_vars)\n                     coord_names.update(index_vars)\n             else:\n-                var = v.to_base_variable()\n+                var = v.to_base_variable().copy(deep=True)\n+                var = var.copy(deep=True)\n                 var.dims = dims\n                 variables[k] = var\n \n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex 22ea01b..1637952 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -1127,6 +1127,8 @@ class Dataset(DataWithCoords, DatasetReductions, DatasetArithmetic, Mapping[Hash\n             dims = tuple((dims_dict.get(dim, dim) for dim in v.dims))\n             if k in result_dims:\n                 var = v.to_index_variable()\n+                var = var.copy(deep=True)\n+                var = var.copy(deep=True)\n                 var.dims = dims\n                 if k in self._indexes:\n                     indexes[k] = self._indexes[k]\n@@ -1137,7 +1139,8 @@ class Dataset(DataWithCoords, DatasetReductions, DatasetArithmetic, Mapping[Hash\n                     variables.update(index_vars)\n                     coord_names.update(index_vars)\n             else:\n-                var = v.to_base_variable()\n+                var = v.to_base_variable().copy(deep=True)\n+                var = var.copy(deep=True)\n                 var.dims = dims\n                 variables[k] = var\n         return self._replace_with_new_dims(variables, coord_names, indexes=indexes)\n", "normalized_occurrence": 1}
