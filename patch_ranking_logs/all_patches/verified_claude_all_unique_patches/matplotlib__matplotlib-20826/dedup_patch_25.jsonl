{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-20826", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 07605b5..ad6ffd4 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1295,19 +1295,28 @@ class _AxesBase(martist.Artist):\n         self.patch.set_linewidth(0)\n         self.patch.set_transform(self.transAxes)\n \n-        self.set_axis_on()\n-\n         self.xaxis.set_clip_path(self.patch)\n         self.yaxis.set_clip_path(self.patch)\n \n+        # Clean shared axes state first\n         self._shared_axes[\"x\"].clean()\n         self._shared_axes[\"y\"].clean()\n-        if self._sharex is not None:\n-            self.xaxis.set_visible(xaxis_visible)\n-            self.patch.set_visible(patch_visible)\n-        if self._sharey is not None:\n-            self.yaxis.set_visible(yaxis_visible)\n-            self.patch.set_visible(patch_visible)\n+\n+        # Only call set_axis_on() if axes weren't previously shared\n+        if self._sharex is None and self._sharey is None:\n+            self.set_axis_on()\n+        else:\n+            # For shared axes, restore previous visibility states\n+            if self._sharex is not None:\n+                self.xaxis.set_visible(xaxis_visible)\n+                # Restore tick label visibility for shared x-axis\n+                self.xaxis.set_tick_params(labelbottom=self.xaxis.majorTicks[0].label1.get_visible())\n+                self.patch.set_visible(patch_visible)\n+            if self._sharey is not None:\n+                self.yaxis.set_visible(yaxis_visible)\n+                # Restore tick label visibility for shared y-axis\n+                self.yaxis.set_tick_params(labelleft=self.yaxis.majorTicks[0].label1.get_visible())\n+                self.patch.set_visible(patch_visible)\n \n         self.stale = True\n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 33a6de3..566c7da 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -570,17 +570,21 @@ class _AxesBase(martist.Artist):\n         self.patch.set_edgecolor('None')\n         self.patch.set_linewidth(0)\n         self.patch.set_transform(self.transAxes)\n-        self.set_axis_on()\n         self.xaxis.set_clip_path(self.patch)\n         self.yaxis.set_clip_path(self.patch)\n         self._shared_axes['x'].clean()\n         self._shared_axes['y'].clean()\n-        if self._sharex is not None:\n-            self.xaxis.set_visible(xaxis_visible)\n-            self.patch.set_visible(patch_visible)\n-        if self._sharey is not None:\n-            self.yaxis.set_visible(yaxis_visible)\n-            self.patch.set_visible(patch_visible)\n+        if self._sharex is None and self._sharey is None:\n+            self.set_axis_on()\n+        else:\n+            if self._sharex is not None:\n+                self.xaxis.set_visible(xaxis_visible)\n+                self.xaxis.set_tick_params(labelbottom=self.xaxis.majorTicks[0].label1.get_visible())\n+                self.patch.set_visible(patch_visible)\n+            if self._sharey is not None:\n+                self.yaxis.set_visible(yaxis_visible)\n+                self.yaxis.set_tick_params(labelleft=self.yaxis.majorTicks[0].label1.get_visible())\n+                self.patch.set_visible(patch_visible)\n         self.stale = True\n     class ArtistList(MutableSequence):\n         def __init__(self, axes, prop_name, add_name, valid_types=None, invalid_types=None):\n", "normalized_occurrence": 1}
