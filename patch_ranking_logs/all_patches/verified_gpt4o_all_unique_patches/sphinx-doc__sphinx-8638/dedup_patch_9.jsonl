{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8638", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex f4e1e57..98e413e 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -829,7 +829,7 @@ class Documenter:\n             classes.sort(key=lambda cls: cls.priority)\n             # give explicitly separated module name, so that members\n             # of inner classes can be documented\n-            full_mname = self.modname + '::' + \\\n+            full_mname = self.modname + '.' + \\\n                 '.'.join(self.objpath + [mname])\n             documenter = classes[-1](self.directive, full_mname, self.indent)\n             memberdocumenters.append((documenter, isattr))\n", "occurrence": 6, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 320f592..404cfcb 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -445,7 +445,7 @@ class Documenter:\n             if not classes:\n                 continue\n             classes.sort(key=lambda cls: cls.priority)\n-            full_mname = self.modname + '::' + '.'.join(self.objpath + [mname])\n+            full_mname = self.modname + '.' + '.'.join(self.objpath + [mname])\n             documenter = classes[-1](self.directive, full_mname, self.indent)\n             memberdocumenters.append((documenter, isattr))\n         member_order = self.options.member_order or self.config.autodoc_member_order\n", "normalized_occurrence": 6}
