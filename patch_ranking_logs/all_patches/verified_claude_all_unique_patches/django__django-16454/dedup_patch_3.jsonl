{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16454", "model_patch": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex f221176..12add61 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -71,6 +71,21 @@ class CommandParser(ArgumentParser):\n         else:\n             raise CommandError(\"Error: %s\" % message)\n \n+    def add_subparsers(self, **kwargs):\n+        # Propagate the custom arguments passed to this parser when creating subparsers\n+        subparsers_action = super().add_subparsers(**kwargs)\n+        original_add_parser = subparsers_action.add_parser\n+        def add_parser(name, **kwargs):\n+            # Pass the custom arguments by default\n+            parser_kwargs = {\n+                'missing_args_message': self.missing_args_message,\n+                'called_from_command_line': self.called_from_command_line,\n+                **kwargs,\n+            }\n+            return original_add_parser(name, **parser_kwargs)\n+        subparsers_action.add_parser = add_parser\n+        return subparsers_action\n+\n \n def handle_default_options(options):\n     \"\"\"\n", "occurrence": 3, "normalized_patch": "--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n+    def add_subparsers(self, **kwargs):\n+        subparsers_action = super().add_subparsers(**kwargs)\n+        original_add_parser = subparsers_action.add_parser\n+        def add_parser(name, **kwargs):\n+            parser_kwargs = {'missing_args_message': self.missing_args_message, 'called_from_command_line': self.called_from_command_line, **kwargs}\n+            return original_add_parser(name, **parser_kwargs)\n+        subparsers_action.add_parser = add_parser\n+        return subparsers_action", "normalized_occurrence": 6}
