{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15382", "model_patch": "diff --git a/django/db/models/sql/where.py b/django/db/models/sql/where.py\nindex 7a540c9..3e807cf 100644\n--- a/django/db/models/sql/where.py\n+++ b/django/db/models/sql/where.py\n@@ -80,13 +80,17 @@ class WhereNode(tree.Node):\n             try:\n                 sql, params = compiler.compile(child)\n             except EmptyResultSet:\n+                if self.connector == AND and not self.negated:\n+                    raise EmptyResultSet\n+                if self.connector == OR and self.negated:\n+                    raise EmptyResultSet\n                 empty_needed -= 1\n+                continue\n+            if sql:\n+                result.append(sql)\n+                result_params.extend(params)\n             else:\n-                if sql:\n-                    result.append(sql)\n-                    result_params.extend(params)\n-                else:\n-                    full_needed -= 1\n+                full_needed -= 1\n             # Check if this node matches nothing or everything.\n             # First check the amount of full nodes and empty nodes\n             # to make this node empty/full.\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/where.py b/django/db/models/sql/where.py\nindex 7f5e30d..6241f02 100644\n--- a/django/db/models/sql/where.py\n+++ b/django/db/models/sql/where.py\n@@ -41,13 +41,17 @@ class WhereNode(tree.Node):\n             try:\n                 sql, params = compiler.compile(child)\n             except EmptyResultSet:\n+                if self.connector == AND and (not self.negated):\n+                    raise EmptyResultSet\n+                if self.connector == OR and self.negated:\n+                    raise EmptyResultSet\n                 empty_needed -= 1\n+                continue\n+            if sql:\n+                result.append(sql)\n+                result_params.extend(params)\n             else:\n-                if sql:\n-                    result.append(sql)\n-                    result_params.extend(params)\n-                else:\n-                    full_needed -= 1\n+                full_needed -= 1\n             if empty_needed == 0:\n                 if self.negated:\n                     return ('', [])\n", "normalized_occurrence": 1}
