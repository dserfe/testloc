{"model_name_or_path": "agentless", "instance_id": "psf__requests-3362", "model_patch": "diff --git a/requests/utils.py b/requests/utils.py\nindex 177dcd1..2357fec 100644\n--- a/requests/utils.py\n+++ b/requests/utils.py\n@@ -369,9 +369,13 @@ def stream_decode_response_unicode(iterator, r):\n         rv = decoder.decode(chunk)\n         if rv:\n             yield rv\n-    rv = decoder.decode(b'', final=True)\n-    if rv:\n-        yield rv\n+    # Ensure that final decode is properly handled\n+    try:\n+        rv = decoder.decode(b'', final=True)\n+        if rv:\n+            yield rv\n+    except Exception:\n+        pass\n \n \n def iter_slices(string, slice_length):\n", "occurrence": 1, "normalized_patch": "diff --git a/requests/utils.py b/requests/utils.py\nindex 9f5088a..5fcd8d6 100644\n--- a/requests/utils.py\n+++ b/requests/utils.py\n@@ -150,9 +150,12 @@ def stream_decode_response_unicode(iterator, r):\n         rv = decoder.decode(chunk)\n         if rv:\n             yield rv\n-    rv = decoder.decode(b'', final=True)\n-    if rv:\n-        yield rv\n+    try:\n+        rv = decoder.decode(b'', final=True)\n+        if rv:\n+            yield rv\n+    except Exception:\n+        pass\n def iter_slices(string, slice_length):\n     pos = 0\n     while pos < len(string):\n", "normalized_occurrence": 1}
