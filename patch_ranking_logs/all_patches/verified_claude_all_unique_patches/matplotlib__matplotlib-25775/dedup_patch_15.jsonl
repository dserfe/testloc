{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-25775", "model_patch": "diff --git a/lib/matplotlib/text.py b/lib/matplotlib/text.py\nindex c2b18d4..6e4e348 100644\n--- a/lib/matplotlib/text.py\n+++ b/lib/matplotlib/text.py\n@@ -571,6 +571,22 @@ class Text(Artist):\n         \"\"\"Return whether the text can be wrapped.\"\"\"\n         return self._wrap\n \n+    def get_antialiased(self):\n+        \"\"\"Return whether text should be antialiased.\"\"\"\n+        return mpl.rcParams['text.antialiased'] if self._antialiased is None else self._antialiased\n+\n+    def set_antialiased(self, b):\n+        \"\"\"\n+        Set whether to use antialiased rendering.\n+\n+        Parameters\n+        ----------\n+        b : bool or None\n+            If None, use :rc:`text.antialiased`. Otherwise, override that value.\n+        \"\"\"\n+        self._antialiased = b\n+        self.stale = True\n+\n     def set_wrap(self, wrap):\n         \"\"\"\n         Set whether the text can be wrapped.\n", "occurrence": 1, "normalized_patch": "--- a/lib/matplotlib/text.py\n+++ b/lib/matplotlib/text.py\n+    def get_antialiased(self):\n+        return mpl.rcParams['text.antialiased'] if self._antialiased is None else self._antialiased\n+    def set_antialiased(self, b):\n+        self._antialiased = b\n+        self.stale = True", "normalized_occurrence": 1}
