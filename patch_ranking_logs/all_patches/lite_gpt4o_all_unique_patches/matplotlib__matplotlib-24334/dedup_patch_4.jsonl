{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-24334", "model_patch": "diff --git a/lib/matplotlib/axis.py b/lib/matplotlib/axis.py\nindex d63d9ca..1c02c75 100644\n--- a/lib/matplotlib/axis.py\n+++ b/lib/matplotlib/axis.py\n@@ -2021,7 +2021,14 @@ class Axis(martist.Artist):\n         other limits, you should set the limits explicitly after setting the\n         ticks.\n         \"\"\"\n+        from matplotlib.text import Text\n+\n         result = self._set_tick_locations(ticks, minor=minor)\n+        if kwargs:\n+            valid_text_properties = Text().properties()\n+            for key in kwargs:\n+                if key not in valid_text_properties:\n+                    raise TypeError(f\"'{key}' is not a valid Text property\")\n         if labels is not None:\n             self.set_ticklabels(labels, minor=minor, **kwargs)\n         return result\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axis.py b/lib/matplotlib/axis.py\nindex 95f7f71..50912d9 100644\n--- a/lib/matplotlib/axis.py\n+++ b/lib/matplotlib/axis.py\n@@ -1650,7 +1650,13 @@ class Axis(martist.Artist):\n         other limits, you should set the limits explicitly after setting the\n         ticks.\n         \"\"\"\n+        from matplotlib.text import Text\n         result = self._set_tick_locations(ticks, minor=minor)\n+        if kwargs:\n+            valid_text_properties = Text().properties()\n+            for key in kwargs:\n+                if key not in valid_text_properties:\n+                    raise TypeError(f\"'{key}' is not a valid Text property\")\n         if labels is not None:\n             self.set_ticklabels(labels, minor=minor, **kwargs)\n         return result\n", "normalized_occurrence": 1}
