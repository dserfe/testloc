{"model_name_or_path": "agentless", "instance_id": "django__django-11885", "model_patch": "diff --git a/django/db/models/deletion.py b/django/db/models/deletion.py\nindex da91f5e..4440636 100644\n--- a/django/db/models/deletion.py\n+++ b/django/db/models/deletion.py\n@@ -329,7 +329,11 @@ class Collector:\n             for model, instances in self.data.items():\n                 query = sql.DeleteQuery(model)\n                 pk_list = [obj.pk for obj in instances]\n-                count = query.delete_batch(pk_list, self.using)\n+                if model in self.fast_deletes:\n+                    fast_delete_qs = self.fast_deletes[model]\n+                    count = fast_delete_qs.filter(pk__in=pk_list)._raw_delete(using=self.using)\n+                else:\n+                    count = query.delete_batch(pk_list, self.using)\n                 deleted_counter[model._meta.label] += count\n \n                 if not model._meta.auto_created:\n@@ -346,4 +350,4 @@ class Collector:\n         for model, instances in self.data.items():\n             for instance in instances:\n                 setattr(instance, model._meta.pk.attname, None)\n-        return sum(deleted_counter.values()), dict(deleted_counter)\n+        return sum(deleted_counter.values()), dict(deleted_counter)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/deletion.py b/django/db/models/deletion.py\nindex 97cb878..f01b2c4 100644\n--- a/django/db/models/deletion.py\n+++ b/django/db/models/deletion.py\n@@ -168,7 +168,11 @@ class Collector:\n             for model, instances in self.data.items():\n                 query = sql.DeleteQuery(model)\n                 pk_list = [obj.pk for obj in instances]\n-                count = query.delete_batch(pk_list, self.using)\n+                if model in self.fast_deletes:\n+                    fast_delete_qs = self.fast_deletes[model]\n+                    count = fast_delete_qs.filter(pk__in=pk_list)._raw_delete(using=self.using)\n+                else:\n+                    count = query.delete_batch(pk_list, self.using)\n                 deleted_counter[model._meta.label] += count\n                 if not model._meta.auto_created:\n                     for obj in instances:\n", "normalized_occurrence": 1}
