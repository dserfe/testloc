{"model_name_or_path": "agentless", "instance_id": "django__django-15103", "model_patch": "diff --git a/django/utils/html.py b/django/utils/html.py\nindex 7cf5a9b..6b6cafa 100644\n--- a/django/utils/html.py\n+++ b/django/utils/html.py\n@@ -61,7 +61,7 @@ _json_script_escapes = {\n }\n \n \n-def json_script(value, element_id):\n+def json_script(value, element_id=None):\n     \"\"\"\n     Escape all the HTML/XML special characters with their unicode escapes, so\n     value is safe to be output anywhere except for inside a tag attribute. Wrap\n@@ -70,8 +70,8 @@ def json_script(value, element_id):\n     from django.core.serializers.json import DjangoJSONEncoder\n     json_str = json.dumps(value, cls=DjangoJSONEncoder).translate(_json_script_escapes)\n     return format_html(\n-        '<script id=\"{}\" type=\"application/json\">{}</script>',\n-        element_id, mark_safe(json_str)\n+        '<script {}type=\"application/json\">{}</script>',\n+        format_html('id=\"{}\" '.format(element_id)) if element_id else '', mark_safe(json_str)\n     )\n \n \n", "occurrence": 2, "normalized_patch": "diff --git a/django/utils/html.py b/django/utils/html.py\nindex e69cdf0..d808ce4 100644\n--- a/django/utils/html.py\n+++ b/django/utils/html.py\n@@ -18,10 +18,10 @@ _js_escapes.update(((ord('%c' % z), '\\\\u%04X' % z) for z in range(32)))\n def escapejs(value):\n     return mark_safe(str(value).translate(_js_escapes))\n _json_script_escapes = {ord('>'): '\\\\u003E', ord('<'): '\\\\u003C', ord('&'): '\\\\u0026'}\n-def json_script(value, element_id):\n+def json_script(value, element_id=None):\n     from django.core.serializers.json import DjangoJSONEncoder\n     json_str = json.dumps(value, cls=DjangoJSONEncoder).translate(_json_script_escapes)\n-    return format_html('<script id=\"{}\" type=\"application/json\">{}</script>', element_id, mark_safe(json_str))\n+    return format_html('<script {}type=\"application/json\">{}</script>', format_html('id=\"{}\" '.format(element_id)) if element_id else '', mark_safe(json_str))\n def conditional_escape(text):\n     if isinstance(text, Promise):\n         text = str(text)\n", "normalized_occurrence": 2}
