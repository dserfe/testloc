{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14730", "model_patch": "diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex d685b12..89d3682 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -1636,6 +1636,11 @@ class ManyToManyField(RelatedField):\n             self.remote_field.model == RECURSIVE_RELATIONSHIP_CONSTANT or\n             self.remote_field.model == cls._meta.object_name\n         ):\n+            if hasattr(self.remote_field, '_related_name'):\n+                raise ValueError(\n+                    'Cannot set related_name on a symmetrical ManyToManyField '\n+                    '(field {}.{})'.format(cls.__name__, name)\n+                )\n             self.remote_field.related_name = \"%s_rel_+\" % name\n         elif self.remote_field.is_hidden():\n             # If the backwards relation is disabled, replace the original\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex 6fd437b..02dabf9 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -716,6 +716,8 @@ class ManyToManyField(RelatedField):\n         return getattr(self, cache_attr)\n     def contribute_to_class(self, cls, name, **kwargs):\n         if self.remote_field.symmetrical and (self.remote_field.model == RECURSIVE_RELATIONSHIP_CONSTANT or self.remote_field.model == cls._meta.object_name):\n+            if hasattr(self.remote_field, '_related_name'):\n+                raise ValueError('Cannot set related_name on a symmetrical ManyToManyField (field {}.{})'.format(cls.__name__, name))\n             self.remote_field.related_name = '%s_rel_+' % name\n         elif self.remote_field.is_hidden():\n             self.remote_field.related_name = '_%s_%s_%s_+' % (cls._meta.app_label, cls.__name__.lower(), name)\n", "normalized_occurrence": 1}
