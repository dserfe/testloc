{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-4094", "model_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex 1e17b93..ae2622a 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -3488,9 +3488,12 @@ class Dataset(Mapping, ImplementsDatasetReduce, DataWithCoords):\n         return data_array\n \n     def _unstack_once(self, dim: Hashable, fill_value, sparse) -> \"Dataset\":\n-        index = self.get_index(dim)\n-        index = remove_unused_levels_categories(index)\n-        full_idx = pd.MultiIndex.from_product(index.levels, names=index.names)\n+        if isinstance(self.get_index(dim), pd.Index):\n+            index = self.get_index(dim)\n+        else:\n+            index = self.get_index(dim)\n+            index = remove_unused_levels_categories(index)\n+            full_idx = pd.MultiIndex.from_product(index.levels, names=index.names)\n \n         # take a shortcut in case the MultiIndex was not modified.\n         if index.equals(full_idx):\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex 21ef2a4..b1bbe28 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -1164,9 +1164,12 @@ class Dataset(Mapping, ImplementsDatasetReduce, DataWithCoords):\n             data_array.name = name\n         return data_array\n     def _unstack_once(self, dim: Hashable, fill_value, sparse) -> 'Dataset':\n-        index = self.get_index(dim)\n-        index = remove_unused_levels_categories(index)\n-        full_idx = pd.MultiIndex.from_product(index.levels, names=index.names)\n+        if isinstance(self.get_index(dim), pd.Index):\n+            index = self.get_index(dim)\n+        else:\n+            index = self.get_index(dim)\n+            index = remove_unused_levels_categories(index)\n+            full_idx = pd.MultiIndex.from_product(index.levels, names=index.names)\n         if index.equals(full_idx):\n             obj = self\n         else:\n", "normalized_occurrence": 1}
