{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-9359", "model_patch": "diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py\nindex 9657da0..fb08442 100644\n--- a/src/_pytest/assertion/rewrite.py\n+++ b/src/_pytest/assertion/rewrite.py\n@@ -941,8 +941,10 @@ class AssertionRewriter(ast.NodeVisitor):\n                 assertmsg = ast.Str(\"\")\n                 explanation = \"assert \" + explanation\n             template = ast.BinOp(assertmsg, ast.Add(), ast.Str(explanation))\n+            # Only include the assertion line in the error message\n             msg = self.pop_format_context(template)\n-            fmt = self.helper(\"_format_explanation\", msg)\n+            # Ensure we only format the actual assertion line\n+            fmt = self.helper(\"_format_explanation\", msg, ast.Num(assert_.lineno))\n             err_name = ast.Name(\"AssertionError\", ast.Load())\n             exc = ast.Call(err_name, [fmt], [])\n             raise_ = ast.Raise(exc, None)\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py\nindex 9f4da3b..d91812b 100644\n--- a/src/_pytest/assertion/rewrite.py\n+++ b/src/_pytest/assertion/rewrite.py\n@@ -503,7 +503,7 @@ class AssertionRewriter(ast.NodeVisitor):\n                 explanation = 'assert ' + explanation\n             template = ast.BinOp(assertmsg, ast.Add(), ast.Str(explanation))\n             msg = self.pop_format_context(template)\n-            fmt = self.helper('_format_explanation', msg)\n+            fmt = self.helper('_format_explanation', msg, ast.Num(assert_.lineno))\n             err_name = ast.Name('AssertionError', ast.Load())\n             exc = ast.Call(err_name, [fmt], [])\n             raise_ = ast.Raise(exc, None)\n", "normalized_occurrence": 1}
