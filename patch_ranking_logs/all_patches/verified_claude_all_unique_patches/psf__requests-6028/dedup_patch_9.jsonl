{"model_name_or_path": "agentless_claude", "instance_id": "psf__requests-6028", "model_patch": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex d47134b..4ec91d7 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -386,9 +386,12 @@ class HTTPAdapter(BaseAdapter):\n         headers = {}\n         username, password = get_auth_from_url(proxy)\n \n-        if username:\n-            headers['Proxy-Authorization'] = _basic_auth_str(username,\n-                                                             password)\n+        if username and password:\n+            headers['Proxy-Authorization'] = _basic_auth_str(username, password)\n+        elif hasattr(self, '_auth') and isinstance(self._auth, HTTPProxyAuth):\n+            r = requests.Request('GET', proxy)\n+            self._auth(r)\n+            headers['Proxy-Authorization'] = r.headers['Proxy-Authorization']\n \n         return headers\n \n", "occurrence": 1, "normalized_patch": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex 8bf110e..77c375c 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -156,8 +156,12 @@ class HTTPAdapter(BaseAdapter):\n     def proxy_headers(self, proxy):\n         headers = {}\n         username, password = get_auth_from_url(proxy)\n-        if username:\n+        if username and password:\n             headers['Proxy-Authorization'] = _basic_auth_str(username, password)\n+        elif hasattr(self, '_auth') and isinstance(self._auth, HTTPProxyAuth):\n+            r = requests.Request('GET', proxy)\n+            self._auth(r)\n+            headers['Proxy-Authorization'] = r.headers['Proxy-Authorization']\n         return headers\n     def send(self, request, stream=False, timeout=None, verify=True, cert=None, proxies=None):\n         try:\n", "normalized_occurrence": 1}
