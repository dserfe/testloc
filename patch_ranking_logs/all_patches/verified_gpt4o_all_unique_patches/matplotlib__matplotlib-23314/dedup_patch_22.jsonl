{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-23314", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex f43c36a..ea026ab 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -3017,6 +3017,8 @@ class _AxesBase(martist.Artist):\n     @martist.allow_rasterization\n     def draw(self, renderer):\n         # docstring inherited\n+        if not self.get_visible():\n+            return\n         if renderer is None:\n             raise RuntimeError('No renderer defined')\n         if not self.get_visible():\n@@ -3025,6 +3027,10 @@ class _AxesBase(martist.Artist):\n \n         renderer.open_group('axes', gid=self.get_gid())\n \n+        if not self.get_visible():\n+            renderer.close_group('axes')\n+            return\n+\n         # prevent triggering call backs during the draw process\n         self._stale = True\n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex d0b0d73..7d972f8 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1266,12 +1266,17 @@ class _AxesBase(martist.Artist):\n             title.set_position((x, ymax))\n     @martist.allow_rasterization\n     def draw(self, renderer):\n+        if not self.get_visible():\n+            return\n         if renderer is None:\n             raise RuntimeError('No renderer defined')\n         if not self.get_visible():\n             return\n         self._unstale_viewLim()\n         renderer.open_group('axes', gid=self.get_gid())\n+        if not self.get_visible():\n+            renderer.close_group('axes')\n+            return\n         self._stale = True\n         locator = self.get_axes_locator()\n         if locator:\n", "normalized_occurrence": 1}
