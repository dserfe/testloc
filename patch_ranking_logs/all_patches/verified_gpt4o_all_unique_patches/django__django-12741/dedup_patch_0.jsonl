{"model_name_or_path": "agentless", "instance_id": "django__django-12741", "model_patch": "diff --git a/django/db/backends/base/operations.py b/django/db/backends/base/operations.py\nindex 5fc53dc..5701b37 100644\n--- a/django/db/backends/base/operations.py\n+++ b/django/db/backends/base/operations.py\n@@ -400,8 +400,9 @@ class BaseDatabaseOperations:\n         \"\"\"\n         raise NotImplementedError('subclasses of BaseDatabaseOperations must provide a sql_flush() method')\n \n-    def execute_sql_flush(self, using, sql_list):\n+    def execute_sql_flush(self, sql_list):\n         \"\"\"Execute a list of SQL statements to flush the database.\"\"\"\n+        using = self.connection.alias\n         with transaction.atomic(using=using, savepoint=self.connection.features.can_rollback_ddl):\n             with self.connection.cursor() as cursor:\n                 for sql in sql_list:\n", "occurrence": 12, "normalized_patch": "diff --git a/django/db/backends/base/operations.py b/django/db/backends/base/operations.py\nindex 4a62c8c..a613bd1 100644\n--- a/django/db/backends/base/operations.py\n+++ b/django/db/backends/base/operations.py\n@@ -121,7 +121,8 @@ class BaseDatabaseOperations:\n         return ''\n     def sql_flush(self, style, tables, *, reset_sequences=False, allow_cascade=False):\n         raise NotImplementedError('subclasses of BaseDatabaseOperations must provide a sql_flush() method')\n-    def execute_sql_flush(self, using, sql_list):\n+    def execute_sql_flush(self, sql_list):\n+        using = self.connection.alias\n         with transaction.atomic(using=using, savepoint=self.connection.features.can_rollback_ddl):\n             with self.connection.cursor() as cursor:\n                 for sql in sql_list:\n", "normalized_occurrence": 12}
