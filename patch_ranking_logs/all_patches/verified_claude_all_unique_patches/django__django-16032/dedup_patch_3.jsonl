{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16032", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 5314293..5480aa2 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -1299,6 +1299,10 @@ class QuerySet:\n         if expressions:\n             clone = clone.annotate(**expressions)\n         clone._fields = fields\n+        # Clear annotations and aliases when used as a subquery in __in\n+        if not fields and getattr(clone.query, 'is_subquery', False):\n+            clone.query.annotations = {}\n+            clone.query.annotation_select = {}\n         clone.query.set_values(fields)\n         return clone\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex cb06696..7369c11 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -696,6 +696,9 @@ class QuerySet:\n         if expressions:\n             clone = clone.annotate(**expressions)\n         clone._fields = fields\n+        if not fields and getattr(clone.query, 'is_subquery', False):\n+            clone.query.annotations = {}\n+            clone.query.annotation_select = {}\n         clone.query.set_values(fields)\n         return clone\n     def values(self, *fields, **expressions):\n", "normalized_occurrence": 1}
