{"model_name_or_path": "agentless_claude", "instance_id": "pylint-dev__pylint-5859", "model_patch": "diff --git a/pylint/checkers/misc.py b/pylint/checkers/misc.py\nindex e597487..7bfe6c7 100644\n--- a/pylint/checkers/misc.py\n+++ b/pylint/checkers/misc.py\n@@ -121,9 +121,9 @@ class EncodingChecker(BaseChecker):\n \n         notes = \"|\".join(re.escape(note) for note in self.config.notes)\n         if self.config.notes_rgx:\n-            regex_string = rf\"#\\s*({notes}|{self.config.notes_rgx})\\b\"\n+            regex_string = rf\"#\\s*({notes}|{self.config.notes_rgx})(?=\\b|[\\s]|$)\"\n         else:\n-            regex_string = rf\"#\\s*({notes})\\b\"\n+            regex_string = rf\"#\\s*({notes})(?=\\b|[\\s]|$)\"\n \n         self._fixme_pattern = re.compile(regex_string, re.I)\n \n", "occurrence": 2, "normalized_patch": "diff --git a/pylint/checkers/misc.py b/pylint/checkers/misc.py\nindex 71f2810..620666d 100644\n--- a/pylint/checkers/misc.py\n+++ b/pylint/checkers/misc.py\n@@ -34,9 +34,9 @@ class EncodingChecker(BaseChecker):\n         super().open()\n         notes = '|'.join((re.escape(note) for note in self.config.notes))\n         if self.config.notes_rgx:\n-            regex_string = f'#\\\\s*({notes}|{self.config.notes_rgx})\\\\b'\n+            regex_string = f'#\\\\s*({notes}|{self.config.notes_rgx})(?=\\\\b|[\\\\s]|$)'\n         else:\n-            regex_string = f'#\\\\s*({notes})\\\\b'\n+            regex_string = f'#\\\\s*({notes})(?=\\\\b|[\\\\s]|$)'\n         self._fixme_pattern = re.compile(regex_string, re.I)\n     def _check_encoding(self, lineno: int, line: bytes, file_encoding: str) -> Optional[str]:\n         try:\n", "normalized_occurrence": 2}
