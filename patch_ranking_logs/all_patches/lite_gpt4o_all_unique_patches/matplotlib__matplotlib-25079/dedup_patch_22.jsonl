{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25079", "model_patch": "diff --git a/lib/matplotlib/cm.py b/lib/matplotlib/cm.py\nindex 06f543d..75d84fa 100644\n--- a/lib/matplotlib/cm.py\n+++ b/lib/matplotlib/cm.py\n@@ -609,15 +609,13 @@ class ScalarMappable:\n             # We aren't updating anything\n             return\n \n-        in_init = self.norm is None\n+        in_init = self._norm is None\n         # Remove the current callback and connect to the new one\n-        if not in_init:\n-            self.norm.callbacks.disconnect(self._id_norm)\n+        if self._norm is not None:\n+            self._norm.callbacks.disconnect(self._id_norm)\n         self._norm = norm\n-        self._id_norm = self.norm.callbacks.connect('changed',\n-                                                    self.changed)\n-        if not in_init:\n-            self.changed()\n+        self._id_norm = self._norm.callbacks.connect('changed', self.changed)\n+        self.changed()\n \n     def set_norm(self, norm):\n         \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/cm.py b/lib/matplotlib/cm.py\nindex f5a7578..93e5e91 100644\n--- a/lib/matplotlib/cm.py\n+++ b/lib/matplotlib/cm.py\n@@ -187,13 +187,12 @@ class ScalarMappable:\n             norm = _auto_norm_from_scale(scale_cls)()\n         if norm is self.norm:\n             return\n-        in_init = self.norm is None\n-        if not in_init:\n-            self.norm.callbacks.disconnect(self._id_norm)\n+        in_init = self._norm is None\n+        if self._norm is not None:\n+            self._norm.callbacks.disconnect(self._id_norm)\n         self._norm = norm\n-        self._id_norm = self.norm.callbacks.connect('changed', self.changed)\n-        if not in_init:\n-            self.changed()\n+        self._id_norm = self._norm.callbacks.connect('changed', self.changed)\n+        self.changed()\n     def set_norm(self, norm):\n         self.norm = norm\n     def autoscale(self):\n", "normalized_occurrence": 1}
