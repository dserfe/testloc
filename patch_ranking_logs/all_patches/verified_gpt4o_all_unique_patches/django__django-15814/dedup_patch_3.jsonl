{"model_name_or_path": "agentless", "instance_id": "django__django-15814", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 5314293..cb1975a 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -2580,6 +2580,9 @@ class RelatedPopulator:\n             self.init_list = [\n                 f[0].target.attname for f in select[self.cols_start : self.cols_end]\n             ]\n+            # Ensure the primary key field from the concrete model is included\n+            if self.model_cls._meta.pk.attname not in self.init_list:\n+                self.init_list.append(self.model_cls._meta.pk.attname)\n             self.reorder_for_init = None\n         else:\n             attname_indexes = {\n@@ -2623,4 +2626,4 @@ def get_related_populators(klass_info, select, db):\n     for rel_klass_info in related_klass_infos:\n         rel_cls = RelatedPopulator(rel_klass_info, select, db)\n         iterators.append(rel_cls)\n-    return iterators\n+    return iterators\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex cb06696..f72939d 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -1308,6 +1308,8 @@ class RelatedPopulator:\n             self.cols_start = select_fields[0]\n             self.cols_end = select_fields[-1] + 1\n             self.init_list = [f[0].target.attname for f in select[self.cols_start:self.cols_end]]\n+            if self.model_cls._meta.pk.attname not in self.init_list:\n+                self.init_list.append(self.model_cls._meta.pk.attname)\n             self.reorder_for_init = None\n         else:\n             attname_indexes = {select[idx][0].target.attname: idx for idx in select_fields}\n", "normalized_occurrence": 2}
