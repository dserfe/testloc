{"model_name_or_path": "agentless", "instance_id": "django__django-11532", "model_patch": "diff --git a/django/core/mail/utils.py b/django/core/mail/utils.py\nindex af5ac38..93a0af6 100644\n--- a/django/core/mail/utils.py\n+++ b/django/core/mail/utils.py\n@@ -1,3 +1,4 @@\n+\n \"\"\"\n Email message and email sending related helper functions.\n \"\"\"\n@@ -7,9 +8,18 @@ import socket\n \n # Cache the hostname, but do it lazily: socket.getfqdn() can take a couple of\n # seconds, which slows down the restart of the server.\n+import idna\n+\n class CachedDnsName:\n     def __str__(self):\n-        return self.get_fqdn()\n+        return self.punycode_fqdn()\n+\n+    def punycode_fqdn(self):\n+        fqdn = self.get_fqdn()\n+        try:\n+            return idna.encode(fqdn).decode('ascii')\n+        except idna.IDNAError:\n+            return fqdn\n \n     def get_fqdn(self):\n         if not hasattr(self, '_fqdn'):\n@@ -17,4 +27,4 @@ class CachedDnsName:\n         return self._fqdn\n \n \n-DNS_NAME = CachedDnsName()\n+DNS_NAME = CachedDnsName()\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/mail/utils.py b/django/core/mail/utils.py\nindex f3d6156..5e40a14 100644\n--- a/django/core/mail/utils.py\n+++ b/django/core/mail/utils.py\n@@ -1,7 +1,14 @@\n import socket\n+import idna\n class CachedDnsName:\n     def __str__(self):\n-        return self.get_fqdn()\n+        return self.punycode_fqdn()\n+    def punycode_fqdn(self):\n+        fqdn = self.get_fqdn()\n+        try:\n+            return idna.encode(fqdn).decode('ascii')\n+        except idna.IDNAError:\n+            return fqdn\n     def get_fqdn(self):\n         if not hasattr(self, '_fqdn'):\n             self._fqdn = socket.getfqdn()\n", "normalized_occurrence": 1}
