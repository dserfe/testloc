{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13974", "model_patch": "diff --git a/sympy/physics/quantum/tensorproduct.py b/sympy/physics/quantum/tensorproduct.py\nindex 153c783..1a73b75 100644\n--- a/sympy/physics/quantum/tensorproduct.py\n+++ b/sympy/physics/quantum/tensorproduct.py\n@@ -382,6 +382,17 @@ def tensor_product_simp(e, **hints):\n     if isinstance(e, Add):\n         return Add(*[tensor_product_simp(arg) for arg in e.args])\n     elif isinstance(e, Pow):\n+        # Handle integer powers by converting to repeated multiplication\n+        if isinstance(e.exp, Integer):\n+            if e.exp > 0:\n+                # For positive powers, multiply the base by itself e.exp times\n+                result = e.base\n+                for _ in range(int(e.exp) - 1):\n+                    result *= e.base\n+                return tensor_product_simp(result)\n+            elif e.exp == 0:\n+                return S.One\n+        # For non-integer powers, just simplify the base\n         return tensor_product_simp(e.base) ** e.exp\n     elif isinstance(e, Mul):\n         return tensor_product_simp_Mul(e)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/physics/quantum/tensorproduct.py b/sympy/physics/quantum/tensorproduct.py\nindex e23a275..93684e7 100644\n--- a/sympy/physics/quantum/tensorproduct.py\n+++ b/sympy/physics/quantum/tensorproduct.py\n@@ -161,6 +161,14 @@ def tensor_product_simp(e, **hints):\n     if isinstance(e, Add):\n         return Add(*[tensor_product_simp(arg) for arg in e.args])\n     elif isinstance(e, Pow):\n+        if isinstance(e.exp, Integer):\n+            if e.exp > 0:\n+                result = e.base\n+                for _ in range(int(e.exp) - 1):\n+                    result *= e.base\n+                return tensor_product_simp(result)\n+            elif e.exp == 0:\n+                return S.One\n         return tensor_product_simp(e.base) ** e.exp\n     elif isinstance(e, Mul):\n         return tensor_product_simp_Mul(e)\n", "normalized_occurrence": 1}
