{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-10451", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex c6bab1b..e78c0b6 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -93,7 +93,7 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str],\n     for field in fields:\n         field_name = field[0].astext()\n         parts = re.split(' +', field_name)\n-        if parts[0] == 'param':\n+        if parts[0] == 'param' and parts[1] not in ('*args', '**kwargs'):\n             if len(parts) == 2:\n                 # :param xxx:\n                 arg = arguments.setdefault(parts[1], {})\n@@ -149,12 +149,11 @@ def augment_descriptions_with_types(\n     for field in fields:\n         field_name = field[0].astext()\n         parts = re.split(' +', field_name)\n-        if parts[0] == 'param':\n+        if parts[0] == 'param' and parts[1] not in ('*args', '**kwargs'):\n             if len(parts) == 2:\n                 # :param xxx:\n                 has_description.add(parts[1])\n-            elif len(parts) > 2:\n-                # :param xxx yyy:\n+            elif len(parts) > 2 and parts[2] not in ('*args', '**kwargs'):\n                 name = ' '.join(parts[2:])\n                 has_description.add(name)\n                 has_type.add(name)\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 5da2ea8..bd278c7 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -67,7 +67,7 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str], suppr\n     for field in fields:\n         field_name = field[0].astext()\n         parts = re.split(' +', field_name)\n-        if parts[0] == 'param':\n+        if parts[0] == 'param' and parts[1] not in ('*args', '**kwargs'):\n             if len(parts) == 2:\n                 arg = arguments.setdefault(parts[1], {})\n                 arg['param'] = True\n@@ -111,10 +111,10 @@ def augment_descriptions_with_types(node: nodes.field_list, annotations: Dict[st\n     for field in fields:\n         field_name = field[0].astext()\n         parts = re.split(' +', field_name)\n-        if parts[0] == 'param':\n+        if parts[0] == 'param' and parts[1] not in ('*args', '**kwargs'):\n             if len(parts) == 2:\n                 has_description.add(parts[1])\n-            elif len(parts) > 2:\n+            elif len(parts) > 2 and parts[2] not in ('*args', '**kwargs'):\n                 name = ' '.join(parts[2:])\n                 has_description.add(name)\n                 has_type.add(name)\n", "normalized_occurrence": 1}
