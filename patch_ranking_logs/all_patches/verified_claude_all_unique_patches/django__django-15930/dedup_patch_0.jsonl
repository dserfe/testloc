{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15930", "model_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 47df1a9..0b0d43e 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -1265,7 +1265,8 @@ class When(Expression):\n         self.result = self._parse_expressions(then)[0]\n \n     def __str__(self):\n-        return \"WHEN %r THEN %r\" % (self.condition, self.result)\n+        condition_str = '1=1' if isinstance(self.condition, Q) and not self.condition and hasattr(self.condition, 'negated') and self.condition.negated else str(self.condition)\n+        return \"WHEN %s THEN %r\" % (condition_str, self.result)\n \n     def __repr__(self):\n         return \"<%s: %s>\" % (self.__class__.__name__, self)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 1b947ba..23b02d6 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -639,7 +639,8 @@ class When(Expression):\n         self.condition = condition\n         self.result = self._parse_expressions(then)[0]\n     def __str__(self):\n-        return 'WHEN %r THEN %r' % (self.condition, self.result)\n+        condition_str = '1=1' if isinstance(self.condition, Q) and (not self.condition) and hasattr(self.condition, 'negated') and self.condition.negated else str(self.condition)\n+        return 'WHEN %s THEN %r' % (condition_str, self.result)\n     def __repr__(self):\n         return '<%s: %s>' % (self.__class__.__name__, self)\n     def get_source_expressions(self):\n", "normalized_occurrence": 1}
