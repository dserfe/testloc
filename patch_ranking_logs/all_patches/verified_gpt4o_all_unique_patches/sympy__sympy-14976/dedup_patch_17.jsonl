{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-14976", "model_patch": "diff --git a/sympy/printing/pycode.py b/sympy/printing/pycode.py\nindex d66bba3..87e86fd 100644\n--- a/sympy/printing/pycode.py\n+++ b/sympy/printing/pycode.py\n@@ -307,7 +307,8 @@ _known_functions_mpmath = dict(_in_mpmath, **{\n     'sign': 'sign',\n })\n _known_constants_mpmath = {\n-    'Pi': 'pi'\n+    'Pi': 'pi',\n+    'Rational': 'mpf'\n }\n \n \n@@ -322,6 +323,9 @@ class MpmathPrinter(PythonCodePrinter):\n         [(k, 'mpmath.' + v) for k, v in _known_functions_mpmath.items()]\n     ))\n \n+    def _print_Rational(self, e):\n+        return '{0}({1})/{0}({2})'.format(self._module_format('mpmath.mpf'), e.p, e.q)\n+        \n     def _print_Float(self, e):\n         # XXX: This does not handle setting mpmath.mp.dps. It is assumed that\n         # the caller of the lambdified function will have set it to sufficient\n", "occurrence": 1, "normalized_patch": "--- a/sympy/printing/pycode.py\n+++ b/sympy/printing/pycode.py\n-_known_constants_mpmath = {'Pi': 'pi'}\n+_known_constants_mpmath = {'Pi': 'pi', 'Rational': 'mpf'}\n+    def _print_Rational(self, e):\n+        return '{0}({1})/{0}({2})'.format(self._module_format('mpmath.mpf'), e.p, e.q)", "normalized_occurrence": 1}
