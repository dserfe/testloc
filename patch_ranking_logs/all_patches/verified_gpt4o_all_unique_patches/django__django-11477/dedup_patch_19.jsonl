{"model_name_or_path": "agentless", "instance_id": "django__django-11477", "model_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 58da200..a109d69 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -614,13 +614,22 @@ class URLResolver:\n             for result, params in possibility:\n                 if args:\n                     if len(args) != len(params):\n-                        continue\n+                        candidate_subs = {k: v for k, v in kwargs.items() if k in params}\n+                        missing_params = set(params) - set(candidate_subs)\n+                        if missing_params and not set(missing_params) <= set(defaults):\n+                            continue\n                     candidate_subs = dict(zip(params, args))\n                 else:\n                     if set(kwargs).symmetric_difference(params).difference(defaults):\n-                        continue\n+                        candidate_subs = {k: v for k, v in kwargs.items() if k in params}\n+                        missing_params = set(params) - set(candidate_subs)\n+                        if missing_params and not set(missing_params) <= set(defaults):\n+                            continue\n                     if any(kwargs.get(k, v) != v for k, v in defaults.items()):\n-                        continue\n+                        candidate_subs = {k: v for k, v in kwargs.items() if k in params}\n+                        missing_params = set(params) - set(candidate_subs)\n+                        if missing_params and not set(missing_params) <= set(defaults):\n+                            continue\n                     candidate_subs = kwargs\n                 # Convert the candidate subs to text using Converter.to_url().\n                 text_candidate_subs = {}\n", "occurrence": 1, "normalized_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex e10e0e8..2f220c2 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -400,13 +400,22 @@ class URLResolver:\n             for result, params in possibility:\n                 if args:\n                     if len(args) != len(params):\n-                        continue\n+                        candidate_subs = {k: v for k, v in kwargs.items() if k in params}\n+                        missing_params = set(params) - set(candidate_subs)\n+                        if missing_params and (not set(missing_params) <= set(defaults)):\n+                            continue\n                     candidate_subs = dict(zip(params, args))\n                 else:\n                     if set(kwargs).symmetric_difference(params).difference(defaults):\n-                        continue\n+                        candidate_subs = {k: v for k, v in kwargs.items() if k in params}\n+                        missing_params = set(params) - set(candidate_subs)\n+                        if missing_params and (not set(missing_params) <= set(defaults)):\n+                            continue\n                     if any((kwargs.get(k, v) != v for k, v in defaults.items())):\n-                        continue\n+                        candidate_subs = {k: v for k, v in kwargs.items() if k in params}\n+                        missing_params = set(params) - set(candidate_subs)\n+                        if missing_params and (not set(missing_params) <= set(defaults)):\n+                            continue\n                     candidate_subs = kwargs\n                 text_candidate_subs = {}\n                 for k, v in candidate_subs.items():\n", "normalized_occurrence": 1}
