{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-14248", "model_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex d02494c..ab74ce3 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1478,8 +1478,16 @@ class LatexPrinter(Printer):\n \n     def _print_MatAdd(self, expr):\n         terms = list(expr.args)\n-        tex = \" + \".join(map(self._print, terms))\n-        return tex\n+        tex = []\n+        for term in terms:\n+            term_tex = self._print(term)\n+            if term_tex.startswith('-'):\n+                tex.append(term_tex)\n+            else:\n+                tex.append('+' + term_tex)\n+        if tex[0].startswith('+'):\n+            tex[0] = tex[0][1:]\n+        return ' '.join(tex)\n \n     def _print_MatMul(self, expr):\n         from sympy import Add, MatAdd, HadamardProduct\ndiff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 41521ad..1911e30 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -819,7 +819,16 @@ class PrettyPrinter(Printer):\n         return self._print(B.blocks)\n \n     def _print_MatAdd(self, expr):\n-        return self._print_seq(expr.args, None, None, ' + ')\n+        terms = expr.args\n+        s = []\n+        for term in terms:\n+            pform = self._print(term)\n+            s.append(pform)\n+\n+        def parse_coeff(p):\n+            return p.startswith('-')\n+\n+        return prettyForm.__add__(*s, binding=prettyForm.ADD, parse_leading_minus=True)\n \n     def _print_MatMul(self, expr):\n         args = list(expr.args)\ndiff --git a/sympy/printing/str.py b/sympy/printing/str.py\nindex 29d16bd..608c179 100644\n--- a/sympy/printing/str.py\n+++ b/sympy/printing/str.py\n@@ -312,8 +312,24 @@ class StrPrinter(Printer):\n             for arg in expr.args])\n \n     def _print_MatAdd(self, expr):\n-        return ' + '.join([self.parenthesize(arg, precedence(expr))\n-            for arg in expr.args])\n+        terms = expr.args\n+        PREC = precedence(expr)\n+        l = []\n+        for term in terms:\n+            t = self._print(term)\n+            if t.startswith('-'):\n+                sign = \"-\"\n+                t = t[1:]\n+            else:\n+                sign = \"+\"\n+            if precedence(term) < PREC:\n+                l.extend([sign, \"(%s)\" % t])\n+            else:\n+                l.extend([sign, t])\n+        sign = l.pop(0)\n+        if sign == '+':\n+            sign = \"\"\n+        return sign + ' '.join(l)\n \n     def _print_NaN(self, expr):\n         return 'nan'\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/str.py b/sympy/printing/str.py\nindex a98e2a9..4154d1b 100644\n--- a/sympy/printing/str.py\n+++ b/sympy/printing/str.py\n@@ -224,7 +224,24 @@ class StrPrinter(Printer):\n     def _print_HadamardProduct(self, expr):\n         return '.*'.join([self.parenthesize(arg, precedence(expr)) for arg in expr.args])\n     def _print_MatAdd(self, expr):\n-        return ' + '.join([self.parenthesize(arg, precedence(expr)) for arg in expr.args])\n+        terms = expr.args\n+        PREC = precedence(expr)\n+        l = []\n+        for term in terms:\n+            t = self._print(term)\n+            if t.startswith('-'):\n+                sign = '-'\n+                t = t[1:]\n+            else:\n+                sign = '+'\n+            if precedence(term) < PREC:\n+                l.extend([sign, '(%s)' % t])\n+            else:\n+                l.extend([sign, t])\n+        sign = l.pop(0)\n+        if sign == '+':\n+            sign = ''\n+        return sign + ' '.join(l)\n     def _print_NaN(self, expr):\n         return 'nan'\n     def _print_NegativeInfinity(self, expr):\ndiff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 928334c..00be6a0 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -586,7 +586,14 @@ class PrettyPrinter(Printer):\n             return self._print(B.blocks[0, 0])\n         return self._print(B.blocks)\n     def _print_MatAdd(self, expr):\n-        return self._print_seq(expr.args, None, None, ' + ')\n+        terms = expr.args\n+        s = []\n+        for term in terms:\n+            pform = self._print(term)\n+            s.append(pform)\n+        def parse_coeff(p):\n+            return p.startswith('-')\n+        return prettyForm.__add__(*s, binding=prettyForm.ADD, parse_leading_minus=True)\n     def _print_MatMul(self, expr):\n         args = list(expr.args)\n         from sympy import Add, MatAdd, HadamardProduct\ndiff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 5c88620..cd09167 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -965,8 +965,16 @@ class LatexPrinter(Printer):\n             return '%s^\\\\dagger' % self._print(mat)\n     def _print_MatAdd(self, expr):\n         terms = list(expr.args)\n-        tex = ' + '.join(map(self._print, terms))\n-        return tex\n+        tex = []\n+        for term in terms:\n+            term_tex = self._print(term)\n+            if term_tex.startswith('-'):\n+                tex.append(term_tex)\n+            else:\n+                tex.append('+' + term_tex)\n+        if tex[0].startswith('+'):\n+            tex[0] = tex[0][1:]\n+        return ' '.join(tex)\n     def _print_MatMul(self, expr):\n         from sympy import Add, MatAdd, HadamardProduct\n         def parens(x):\n", "normalized_occurrence": 1}
