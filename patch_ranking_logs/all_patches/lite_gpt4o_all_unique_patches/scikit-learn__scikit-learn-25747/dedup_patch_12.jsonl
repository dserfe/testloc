{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-25747", "model_patch": "diff --git a/sklearn/pipeline.py b/sklearn/pipeline.py\nindex 2f2ca70..5a531a3 100644\n--- a/sklearn/pipeline.py\n+++ b/sklearn/pipeline.py\n@@ -1280,7 +1280,9 @@ class FeatureUnion(TransformerMixin, _BaseComposition):\n         config = _get_output_config(\"transform\", self)\n         if config[\"dense\"] == \"pandas\" and all(hasattr(X, \"iloc\") for X in Xs):\n             pd = check_pandas_support(\"transform\")\n-            return pd.concat(Xs, axis=1)\n+            # Align the indices of all DataFrames to fix the length mismatch issue\n+            aligned_Xs = [X.reindex(Xs[0].index) for X in Xs]\n+            return pd.concat(aligned_Xs, axis=1)\n \n         if any(sparse.issparse(f) for f in Xs):\n             Xs = sparse.hstack(Xs).tocsr()\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/pipeline.py b/sklearn/pipeline.py\nindex f4194e0..9ff93ee 100644\n--- a/sklearn/pipeline.py\n+++ b/sklearn/pipeline.py\n@@ -350,7 +350,8 @@ class FeatureUnion(TransformerMixin, _BaseComposition):\n         config = _get_output_config('transform', self)\n         if config['dense'] == 'pandas' and all((hasattr(X, 'iloc') for X in Xs)):\n             pd = check_pandas_support('transform')\n-            return pd.concat(Xs, axis=1)\n+            aligned_Xs = [X.reindex(Xs[0].index) for X in Xs]\n+            return pd.concat(aligned_Xs, axis=1)\n         if any((sparse.issparse(f) for f in Xs)):\n             Xs = sparse.hstack(Xs).tocsr()\n         else:\n", "normalized_occurrence": 1}
