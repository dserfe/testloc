{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8593", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex c412096..2023df3 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -723,9 +723,13 @@ class Documenter:\n                     doc = None\n \n             if isinstance(obj, ObjectMember) and obj.docstring:\n+                metadata = extract_metadata(obj.docstring)\n+            elif isinstance(obj, str):\n+                metadata = extract_metadata(doc)\n                 # hack for ClassDocumenter to inject docstring via ObjectMember\n                 doc = obj.docstring\n \n+            metadata = extract_metadata(doc)\n             has_doc = bool(doc)\n \n             metadata = extract_metadata(doc)\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex f71844a..230219b 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -376,7 +376,11 @@ class Documenter:\n                 if cls_doc == doc:\n                     doc = None\n             if isinstance(obj, ObjectMember) and obj.docstring:\n+                metadata = extract_metadata(obj.docstring)\n+            elif isinstance(obj, str):\n+                metadata = extract_metadata(doc)\n                 doc = obj.docstring\n+            metadata = extract_metadata(doc)\n             has_doc = bool(doc)\n             metadata = extract_metadata(doc)\n             if 'private' in metadata:\n", "normalized_occurrence": 1}
