{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13773", "model_patch": "diff --git a/sympy/matrices/expressions/matmul.py b/sympy/matrices/expressions/matmul.py\nindex 13b44f5..b959f7c 100644\n--- a/sympy/matrices/expressions/matmul.py\n+++ b/sympy/matrices/expressions/matmul.py\n@@ -31,7 +31,9 @@ class MatMul(MatrixExpr):\n     def __new__(cls, *args, **kwargs):\n         check = kwargs.get('check', True)\n \n-        args = list(map(sympify, args))\n+        args = [arg for arg in map(sympify, args) if arg.is_Matrix]\n+        if len(args) != len(kwargs.get('args', args)):\n+            raise ValueError(\"All arguments to MatMul must be matrices.\")\n         obj = Basic.__new__(cls, *args)\n         factor, matrices = obj.as_coeff_matrices()\n         if check:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/expressions/matmul.py b/sympy/matrices/expressions/matmul.py\nindex c9124f3..f86f928 100644\n--- a/sympy/matrices/expressions/matmul.py\n+++ b/sympy/matrices/expressions/matmul.py\n@@ -11,7 +11,9 @@ class MatMul(MatrixExpr):\n     is_MatMul = True\n     def __new__(cls, *args, **kwargs):\n         check = kwargs.get('check', True)\n-        args = list(map(sympify, args))\n+        args = [arg for arg in map(sympify, args) if arg.is_Matrix]\n+        if len(args) != len(kwargs.get('args', args)):\n+            raise ValueError('All arguments to MatMul must be matrices.')\n         obj = Basic.__new__(cls, *args)\n         factor, matrices = obj.as_coeff_matrices()\n         if check:\n", "normalized_occurrence": 1}
