{"model_name_or_path": "agentless", "instance_id": "django__django-13516", "model_patch": "diff --git a/django/core/management/commands/migrate.py b/django/core/management/commands/migrate.py\nindex 7e14473..e03bd1a 100644\n--- a/django/core/management/commands/migrate.py\n+++ b/django/core/management/commands/migrate.py\n@@ -283,6 +283,14 @@ class Command(BaseCommand):\n                     self.stdout.write(self.style.SUCCESS(\" FAKED\" + elapsed))\n                 else:\n                     self.stdout.write(self.style.SUCCESS(\" OK\" + elapsed))\n+                self.stdout.flush()\n+            elif action == \"apply_success\":\n+                elapsed = \" (%.3fs)\" % (time.monotonic() - self.start) if compute_time else \"\"\n+                if fake:\n+                    self.stdout.write(self.style.SUCCESS(\" FAKED\" + elapsed))\n+                else:\n+                    self.stdout.write(self.style.SUCCESS(\" OK\" + elapsed))\n+                self.stdout.flush()\n             elif action == \"unapply_start\":\n                 if compute_time:\n                     self.start = time.monotonic()\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/management/commands/migrate.py b/django/core/management/commands/migrate.py\nindex 51822d0..43595a4 100644\n--- a/django/core/management/commands/migrate.py\n+++ b/django/core/management/commands/migrate.py\n@@ -154,6 +154,14 @@ class Command(BaseCommand):\n                     self.stdout.write(self.style.SUCCESS(' FAKED' + elapsed))\n                 else:\n                     self.stdout.write(self.style.SUCCESS(' OK' + elapsed))\n+                self.stdout.flush()\n+            elif action == 'apply_success':\n+                elapsed = ' (%.3fs)' % (time.monotonic() - self.start) if compute_time else ''\n+                if fake:\n+                    self.stdout.write(self.style.SUCCESS(' FAKED' + elapsed))\n+                else:\n+                    self.stdout.write(self.style.SUCCESS(' OK' + elapsed))\n+                self.stdout.flush()\n             elif action == 'unapply_start':\n                 if compute_time:\n                     self.start = time.monotonic()\n", "normalized_occurrence": 1}
