{"model_name_or_path": "agentless", "instance_id": "mwaskom__seaborn-2848", "model_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 21c0562..73e478b 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -1546,6 +1546,11 @@ class PairGrid(Grid):\n         else:\n             plt.sca(ax)\n \n+        if hue is not None:\n+            unique_hue_vals = hue.unique()\n+            self._hue_order = unique_hue_vals.tolist()\n+            self._orig_palette = dict(zip(self._hue_order, sns.color_palette(n_colors=len(self._hue_order))))\n+        \n         if x_var == y_var:\n             axes_vars = [x_var]\n         else:\n@@ -1581,6 +1586,11 @@ class PairGrid(Grid):\n         else:\n             plt.sca(ax)\n \n+        if hue is not None:\n+            unique_hue_vals = hue.unique()\n+            self._hue_order = unique_hue_vals.tolist()\n+            self._orig_palette = dict(zip(self._hue_order, sns.color_palette(n_colors=len(self._hue_order))))\n+        \n         if x_var == y_var:\n             axes_vars = [x_var]\n         else:\n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 0807052..7301ab9 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -732,6 +732,10 @@ class PairGrid(Grid):\n             kwargs['ax'] = ax\n         else:\n             plt.sca(ax)\n+        if hue is not None:\n+            unique_hue_vals = hue.unique()\n+            self._hue_order = unique_hue_vals.tolist()\n+            self._orig_palette = dict(zip(self._hue_order, sns.color_palette(n_colors=len(self._hue_order))))\n         if x_var == y_var:\n             axes_vars = [x_var]\n         else:\n@@ -757,6 +761,10 @@ class PairGrid(Grid):\n             kwargs['ax'] = ax\n         else:\n             plt.sca(ax)\n+        if hue is not None:\n+            unique_hue_vals = hue.unique()\n+            self._hue_order = unique_hue_vals.tolist()\n+            self._orig_palette = dict(zip(self._hue_order, sns.color_palette(n_colors=len(self._hue_order))))\n         if x_var == y_var:\n             axes_vars = [x_var]\n         else:\n", "normalized_occurrence": 1}
