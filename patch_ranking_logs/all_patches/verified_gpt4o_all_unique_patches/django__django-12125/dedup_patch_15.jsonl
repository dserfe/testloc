{"model_name_or_path": "agentless", "instance_id": "django__django-12125", "model_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex 824ab10..6fc9ec9 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -90,13 +90,28 @@ class DeconstructableSerializer(BaseSerializer):\n \n     @staticmethod\n     def _serialize_path(path):\n+        # Recursive function to get the full path of nested classes\n+        def get_full_path(cls):\n+            if cls.__module__ == \"builtins\":\n+                return cls.__name__\n+            if cls.__module__:\n+                module = cls.__module__ + \".\"\n+            else:\n+                module = \"\"\n+            if cls.__qualname__:\n+                qualname = cls.__qualname__\n+            else:\n+                qualname = cls.__name__\n+            return module + qualname\n+\n         module, name = path.rsplit(\".\", 1)\n-        if module == \"django.db.models\":\n+        module_name = get_full_path(eval(path))\n+        if module_name.startswith(\"django.db.models\"):\n             imports = {\"from django.db import models\"}\n-            name = \"models.%s\" % name\n+            name = \"models.%s\" % module_name.split(\".django.db.models.\")[-1]\n         else:\n-            imports = {\"import %s\" % module}\n-            name = path\n+            imports = {\"import %s\" % module_name.rsplit(\".\", 1)[0]}\n+            name = module_name\n         return name, imports\n \n     def serialize(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex d663baf..b6e878b 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -68,13 +68,26 @@ class DeconstructableSerializer(BaseSerializer):\n         return ('%s(%s)' % (name, ', '.join(strings)), imports)\n     @staticmethod\n     def _serialize_path(path):\n+        def get_full_path(cls):\n+            if cls.__module__ == 'builtins':\n+                return cls.__name__\n+            if cls.__module__:\n+                module = cls.__module__ + '.'\n+            else:\n+                module = ''\n+            if cls.__qualname__:\n+                qualname = cls.__qualname__\n+            else:\n+                qualname = cls.__name__\n+            return module + qualname\n         module, name = path.rsplit('.', 1)\n-        if module == 'django.db.models':\n+        module_name = get_full_path(eval(path))\n+        if module_name.startswith('django.db.models'):\n             imports = {'from django.db import models'}\n-            name = 'models.%s' % name\n+            name = 'models.%s' % module_name.split('.django.db.models.')[-1]\n         else:\n-            imports = {'import %s' % module}\n-            name = path\n+            imports = {'import %s' % module_name.rsplit('.', 1)[0]}\n+            name = module_name\n         return (name, imports)\n     def serialize(self):\n         return self.serialize_deconstructed(*self.value.deconstruct())\n", "normalized_occurrence": 1}
