{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-23824", "model_patch": "diff --git a/sympy/physics/hep/gamma_matrices.py b/sympy/physics/hep/gamma_matrices.py\nindex 8ce17be..2892bc5 100644\n--- a/sympy/physics/hep/gamma_matrices.py\n+++ b/sympy/physics/hep/gamma_matrices.py\n@@ -674,7 +674,7 @@ def kahane_simplify(expression):\n                 pointer = next_ones[0]\n \n             if pointer >= first_dum_pos and free_pos[pointer] is not None:\n-                prepend_indices.insert(0, free_pos[pointer])\n+                prepend_indices.append(free_pos[pointer])\n         # if `prepend_indices` is void, it means there are no free indices\n         # in the loop (and it can be shown that there must be a virtual index),\n         # loops of virtual indices only contribute by a factor of two:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/physics/hep/gamma_matrices.py b/sympy/physics/hep/gamma_matrices.py\nindex a91f01b..7359430 100644\n--- a/sympy/physics/hep/gamma_matrices.py\n+++ b/sympy/physics/hep/gamma_matrices.py\n@@ -304,7 +304,7 @@ def kahane_simplify(expression):\n             if next_ones:\n                 pointer = next_ones[0]\n             if pointer >= first_dum_pos and free_pos[pointer] is not None:\n-                prepend_indices.insert(0, free_pos[pointer])\n+                prepend_indices.append(free_pos[pointer])\n         if len(prepend_indices) == 0:\n             resulting_coeff *= 2\n         else:\n", "normalized_occurrence": 1}
