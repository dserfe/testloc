{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9673", "model_patch": "diff --git a/sphinx/ext/napoleon/docstring.py b/sphinx/ext/napoleon/docstring.py\nindex ea465e6..1aaf85b 100644\n--- a/sphinx/ext/napoleon/docstring.py\n+++ b/sphinx/ext/napoleon/docstring.py\n@@ -777,7 +777,9 @@ class GoogleDocstring:\n         lines: List[str] = []\n         for _name, _type, _desc in fields:\n             if use_rtype:\n-                field = self._format_field(_name, '', _desc)\n+                if not _type and _name == 'return' and 'return' in self._annotations:\n+                    _type = self._annotations['return']\n+                field = self._format_field(_name, _type, _desc)\n             else:\n                 field = self._format_field(_name, _type, _desc)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/napoleon/docstring.py b/sphinx/ext/napoleon/docstring.py\nindex bc7a995..12f918f 100644\n--- a/sphinx/ext/napoleon/docstring.py\n+++ b/sphinx/ext/napoleon/docstring.py\n@@ -514,7 +514,9 @@ class GoogleDocstring:\n         lines: List[str] = []\n         for _name, _type, _desc in fields:\n             if use_rtype:\n-                field = self._format_field(_name, '', _desc)\n+                if not _type and _name == 'return' and ('return' in self._annotations):\n+                    _type = self._annotations['return']\n+                field = self._format_field(_name, _type, _desc)\n             else:\n                 field = self._format_field(_name, _type, _desc)\n             if multi:\n", "normalized_occurrence": 1}
