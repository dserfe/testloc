{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13265", "model_patch": "diff --git a/django/db/migrations/optimizer.py b/django/db/migrations/optimizer.py\nindex f01e0f5..f57d38d 100644\n--- a/django/db/migrations/optimizer.py\n+++ b/django/db/migrations/optimizer.py\n@@ -39,6 +39,29 @@ class MigrationOptimizer:\n \n     def optimize_inner(self, operations, app_label):\n         \"\"\"Inner optimization loop.\"\"\"\n+        new_operations = []\n+        \n+        # Pre-process to move AlterOrderWithRespectTo before related AddIndex\n+        pending_operations = operations.copy()\n+        alter_order_ops = []\n+        other_ops = []\n+        \n+        for op in pending_operations:\n+            if isinstance(op, migrations.AlterOrderWithRespectTo):\n+                alter_order_ops.append(op)\n+            else:\n+                # If this is an AddIndex operation that references _order\n+                if (isinstance(op, migrations.AddIndex) and \n+                    any('_order' in field_list for field_list in [getattr(op.index, 'fields', [])])):\n+                    # Add any pending AlterOrderWithRespectTo first\n+                    new_operations.extend(alter_order_ops)\n+                    alter_order_ops = []\n+                other_ops.append(op)\n+        \n+        # Add any remaining operations\n+        new_operations.extend(alter_order_ops)\n+        operations = new_operations + other_ops\n+        \n         new_operations = []\n         for i, operation in enumerate(operations):\n             right = True  # Should we reduce on the right or on the left.\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/optimizer.py b/django/db/migrations/optimizer.py\nindex 06fbfa5..2803a35 100644\n--- a/django/db/migrations/optimizer.py\n+++ b/django/db/migrations/optimizer.py\n@@ -10,6 +10,20 @@ class MigrationOptimizer:\n                 return result\n             operations = result\n     def optimize_inner(self, operations, app_label):\n+        new_operations = []\n+        pending_operations = operations.copy()\n+        alter_order_ops = []\n+        other_ops = []\n+        for op in pending_operations:\n+            if isinstance(op, migrations.AlterOrderWithRespectTo):\n+                alter_order_ops.append(op)\n+            else:\n+                if isinstance(op, migrations.AddIndex) and any(('_order' in field_list for field_list in [getattr(op.index, 'fields', [])])):\n+                    new_operations.extend(alter_order_ops)\n+                    alter_order_ops = []\n+                other_ops.append(op)\n+        new_operations.extend(alter_order_ops)\n+        operations = new_operations + other_ops\n         new_operations = []\n         for i, operation in enumerate(operations):\n             right = True\n", "normalized_occurrence": 1}
