{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7324", "model_patch": "diff --git a/src/_pytest/debugging.py b/src/_pytest/debugging.py\nindex 6a19d2c..8e7edf0 100644\n--- a/src/_pytest/debugging.py\n+++ b/src/_pytest/debugging.py\n@@ -369,4 +369,5 @@ def post_mortem(t) -> None:\n     p.reset()\n     p.interaction(None, t)\n     if p.quitting:\n-        outcomes.exit(\"Quitting debugger\")\n+        if expression in {\"None\", \"True\", \"False\"}:\n+            raise ValueError(f\"Cannot compile expression with reserved word: {expression}\")\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/debugging.py b/src/_pytest/debugging.py\nindex 04f3f1a..9b8d5a4 100644\n--- a/src/_pytest/debugging.py\n+++ b/src/_pytest/debugging.py\n@@ -220,4 +220,5 @@ def post_mortem(t) -> None:\n     p.reset()\n     p.interaction(None, t)\n     if p.quitting:\n-        outcomes.exit('Quitting debugger')\n\\ No newline at end of file\n+        if expression in {'None', 'True', 'False'}:\n+            raise ValueError(f'Cannot compile expression with reserved word: {expression}')\n\\ No newline at end of file\n", "normalized_occurrence": 1}
