{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8459", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 6f90bd7..3f98ce8 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -56,7 +56,11 @@ def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element\n         return\n \n     annotations = app.env.temp_data.get('annotations', {})\n-    if annotations.get(fullname, {}):\n+    if annotations.get(fullname):\n+        annotations[fullname] = {\n+            key: app.config.autodoc_type_aliases.get(value, value)\n+            for key, value in annotations[fullname].items()\n+        }\n         field_lists = [n for n in contentnode if isinstance(n, nodes.field_list)]\n         if field_lists == []:\n             field_list = insert_field_list(contentnode)\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 377d0c5..0a2e83f 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -35,7 +35,8 @@ def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element\n     except KeyError:\n         return\n     annotations = app.env.temp_data.get('annotations', {})\n-    if annotations.get(fullname, {}):\n+    if annotations.get(fullname):\n+        annotations[fullname] = {key: app.config.autodoc_type_aliases.get(value, value) for key, value in annotations[fullname].items()}\n         field_lists = [n for n in contentnode if isinstance(n, nodes.field_list)]\n         if field_lists == []:\n             field_list = insert_field_list(contentnode)\n", "normalized_occurrence": 1}
