{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-7220", "model_patch": "diff --git a/src/_pytest/nodes.py b/src/_pytest/nodes.py\nindex 585fb01..01f1729 100644\n--- a/src/_pytest/nodes.py\n+++ b/src/_pytest/nodes.py\n@@ -602,6 +602,10 @@ class Item(Node):\n             fspath = location[0]\n         else:\n             fspath = py.path.local(location[0])\n-        relfspath = self.session._node_location_to_relpath(fspath)\n+        # Use absolute path to ensure correct relative path calculation\n+        abs_fspath = fspath.realpath()\n+        relfspath = abs_fspath.relto(self.config.rootdir)\n+        if not relfspath:\n+            relfspath = self.session._node_location_to_relpath(fspath)\n         assert type(location[2]) is str\n-        return (relfspath, location[1], location[2])\n+        return (relfspath, location[1], location[2])\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/nodes.py b/src/_pytest/nodes.py\nindex e228031..7ae2cc4 100644\n--- a/src/_pytest/nodes.py\n+++ b/src/_pytest/nodes.py\n@@ -486,6 +486,9 @@ class Item(Node):\n             fspath = location[0]\n         else:\n             fspath = py.path.local(location[0])\n-        relfspath = self.session._node_location_to_relpath(fspath)\n+        abs_fspath = fspath.realpath()\n+        relfspath = abs_fspath.relto(self.config.rootdir)\n+        if not relfspath:\n+            relfspath = self.session._node_location_to_relpath(fspath)\n         assert type(location[2]) is str\n         return (relfspath, location[1], location[2])\n\\ No newline at end of file\n", "normalized_occurrence": 1}
