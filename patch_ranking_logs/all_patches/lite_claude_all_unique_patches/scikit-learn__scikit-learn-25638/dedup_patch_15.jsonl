{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-25638", "model_patch": "diff --git a/sklearn/utils/multiclass.py b/sklearn/utils/multiclass.py\nindex db3f82e..6e87987 100644\n--- a/sklearn/utils/multiclass.py\n+++ b/sklearn/utils/multiclass.py\n@@ -295,6 +295,13 @@ def type_of_target(y, input_name=\"\"):\n     if sparse_pandas:\n         raise ValueError(\"y cannot be class 'SparseSeries' or 'SparseArray'\")\n \n+    # Handle pandas nullable dtypes by converting them to numpy arrays with appropriate dtype\n+    if hasattr(y, \"dtype\") and hasattr(y.dtype, \"name\"):\n+        if y.dtype.name in [\"Int64\", \"Float64\"]:\n+            y = y.astype(\"float64\")\n+        elif y.dtype.name == \"boolean\":\n+            y = y.astype(\"bool\")\n+\n     if is_multilabel(y):\n         return \"multilabel-indicator\"\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/utils/multiclass.py b/sklearn/utils/multiclass.py\nindex dee4b2a..d199cfe 100644\n--- a/sklearn/utils/multiclass.py\n+++ b/sklearn/utils/multiclass.py\n@@ -71,6 +71,11 @@ def type_of_target(y, input_name=''):\n     sparse_pandas = y.__class__.__name__ in ['SparseSeries', 'SparseArray']\n     if sparse_pandas:\n         raise ValueError(\"y cannot be class 'SparseSeries' or 'SparseArray'\")\n+    if hasattr(y, 'dtype') and hasattr(y.dtype, 'name'):\n+        if y.dtype.name in ['Int64', 'Float64']:\n+            y = y.astype('float64')\n+        elif y.dtype.name == 'boolean':\n+            y = y.astype('bool')\n     if is_multilabel(y):\n         return 'multilabel-indicator'\n     with warnings.catch_warnings():\n", "normalized_occurrence": 1}
