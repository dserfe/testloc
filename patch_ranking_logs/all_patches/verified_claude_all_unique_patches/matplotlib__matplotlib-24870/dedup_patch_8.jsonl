{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-24870", "model_patch": "diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py\nindex 908a24f..611084f 100644\n--- a/lib/matplotlib/contour.py\n+++ b/lib/matplotlib/contour.py\n@@ -1456,12 +1456,16 @@ class QuadContourSet(ContourSet):\n         else:\n             raise _api.nargs_error(fn, takes=\"from 1 to 4\", given=nargs)\n         z = ma.masked_invalid(z, copy=False)\n+        # Check if input was boolean and set default level to 0.5 if no levels specified\n+        was_bool = np.issubdtype(z.dtype, np.bool_)\n         self.zmax = float(z.max())\n         self.zmin = float(z.min())\n         if self.logscale and self.zmin <= 0:\n             z = ma.masked_where(z <= 0, z)\n             _api.warn_external('Log scale: values of z <= 0 have been masked')\n             self.zmin = float(z.min())\n+        if was_bool and not args:\n+            args = ([0.5],)\n         self._process_contour_level_args(args)\n         return (x, y, z)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py\nindex 04dc867..55d77c2 100644\n--- a/lib/matplotlib/contour.py\n+++ b/lib/matplotlib/contour.py\n@@ -672,12 +672,15 @@ class QuadContourSet(ContourSet):\n         else:\n             raise _api.nargs_error(fn, takes='from 1 to 4', given=nargs)\n         z = ma.masked_invalid(z, copy=False)\n+        was_bool = np.issubdtype(z.dtype, np.bool_)\n         self.zmax = float(z.max())\n         self.zmin = float(z.min())\n         if self.logscale and self.zmin <= 0:\n             z = ma.masked_where(z <= 0, z)\n             _api.warn_external('Log scale: values of z <= 0 have been masked')\n             self.zmin = float(z.min())\n+        if was_bool and (not args):\n+            args = ([0.5],)\n         self._process_contour_level_args(args)\n         return (x, y, z)\n     def _check_xyz(self, args, kwargs):\n", "normalized_occurrence": 1}
