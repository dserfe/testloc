{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-20676", "model_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex a6bed3c..59db2be 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -2184,10 +2184,18 @@ class SpanSelector(_SelectorWidget):\n             # visibility to False and extents to (v, v)\n             # update will be called when setting the extents\n             self.visible = False\n+            # Store current axis limits\n+            curr_xlim = self.ax.get_xlim()\n+            curr_ylim = self.ax.get_ylim()\n             self.extents = v, v\n             # We need to set the visibility back, so the span selector will be\n             # drawn when necessary (span width > 0)\n             self.visible = True\n+            # Restore the original axis limits\n+            if self.direction == 'horizontal':\n+                self.ax.set_xlim(curr_xlim)\n+            else:\n+                self.ax.set_ylim(curr_ylim)\n         else:\n             self.set_visible(True)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex b2dd641..00d997b 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -1784,8 +1784,14 @@ class SpanSelector(_SelectorWidget):\n         self._prev = self._get_data(event)\n         if self._active_handle is None:\n             self.visible = False\n+            curr_xlim = self.ax.get_xlim()\n+            curr_ylim = self.ax.get_ylim()\n             self.extents = (v, v)\n             self.visible = True\n+            if self.direction == 'horizontal':\n+                self.ax.set_xlim(curr_xlim)\n+            else:\n+                self.ax.set_ylim(curr_ylim)\n         else:\n             self.set_visible(True)\n         return False\n", "normalized_occurrence": 1}
