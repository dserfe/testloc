{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-15678", "model_patch": "diff --git a/sympy/geometry/util.py b/sympy/geometry/util.py\nindex 52a1560..2d80424 100644\n--- a/sympy/geometry/util.py\n+++ b/sympy/geometry/util.py\n@@ -565,13 +565,21 @@ def idiff(eq, y, x, n=1):\n     sympy.core.function.diff: explicitly differentiates wrt symbols\n \n     \"\"\"\n+    # Handle Eq objects by extracting the equation\n+    if isinstance(eq, Eq):\n+        eq = eq.lhs - eq.rhs\n+\n     if is_sequence(y):\n         dep = set(y)\n         y = y[0]\n     elif isinstance(y, Symbol):\n         dep = {y}\n+    elif isinstance(y, Function):\n+        # Support function expressions like f(x)\n+        dep = {y}\n+        y = y.func\n     else:\n-        raise ValueError(\"expecting x-dependent symbol(s) but got: %s\" % y)\n+        raise ValueError(\"expecting x-dependent symbol(s) or function but got: %s\" % y)\n \n     f = dict([(s, Function(\n         s.name)(x)) for s in eq.free_symbols if s != x and s in dep])\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/geometry/util.py b/sympy/geometry/util.py\nindex 8c03173..eb9e1cc 100644\n--- a/sympy/geometry/util.py\n+++ b/sympy/geometry/util.py\n@@ -222,13 +222,18 @@ def farthest_points(*args):\n         diam = d\n     return set(rv)\n def idiff(eq, y, x, n=1):\n+    if isinstance(eq, Eq):\n+        eq = eq.lhs - eq.rhs\n     if is_sequence(y):\n         dep = set(y)\n         y = y[0]\n     elif isinstance(y, Symbol):\n         dep = {y}\n+    elif isinstance(y, Function):\n+        dep = {y}\n+        y = y.func\n     else:\n-        raise ValueError('expecting x-dependent symbol(s) but got: %s' % y)\n+        raise ValueError('expecting x-dependent symbol(s) or function but got: %s' % y)\n     f = dict([(s, Function(s.name)(x)) for s in eq.free_symbols if s != x and s in dep])\n     dydx = Function(y.name)(x).diff(x)\n     eq = eq.subs(f)\n", "normalized_occurrence": 1}
