{"model_name_or_path": "agentless", "instance_id": "django__django-14500", "model_patch": "diff --git a/django/db/migrations/executor.py b/django/db/migrations/executor.py\nindex 9e05ef1..4e8f203 100644\n--- a/django/db/migrations/executor.py\n+++ b/django/db/migrations/executor.py\n@@ -252,8 +252,13 @@ class MigrationExecutor:\n                 state = migration.unapply(state, schema_editor)\n         # For replacement migrations, record individual statuses\n         if migration.replaces:\n+            all_replaced_unapplied = True\n             for app_label, name in migration.replaces:\n                 self.recorder.record_unapplied(app_label, name)\n+                if (app_label, name) in self.loader.applied_migrations:\n+                    all_replaced_unapplied = False\n+            if all_replaced_unapplied:\n+                self.recorder.record_unapplied(migration.app_label, migration.name)\n         else:\n             self.recorder.record_unapplied(migration.app_label, migration.name)\n         # Report progress\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/executor.py b/django/db/migrations/executor.py\nindex d5a1e7d..7a94904 100644\n--- a/django/db/migrations/executor.py\n+++ b/django/db/migrations/executor.py\n@@ -146,8 +146,13 @@ class MigrationExecutor:\n             with self.connection.schema_editor(atomic=migration.atomic) as schema_editor:\n                 state = migration.unapply(state, schema_editor)\n         if migration.replaces:\n+            all_replaced_unapplied = True\n             for app_label, name in migration.replaces:\n                 self.recorder.record_unapplied(app_label, name)\n+                if (app_label, name) in self.loader.applied_migrations:\n+                    all_replaced_unapplied = False\n+            if all_replaced_unapplied:\n+                self.recorder.record_unapplied(migration.app_label, migration.name)\n         else:\n             self.recorder.record_unapplied(migration.app_label, migration.name)\n         if self.progress_callback:\n", "normalized_occurrence": 2}
