{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7432", "model_patch": "diff --git a/src/_pytest/skipping.py b/src/_pytest/skipping.py\nindex 1e94c70..36861c2 100644\n--- a/src/_pytest/skipping.py\n+++ b/src/_pytest/skipping.py\n@@ -271,7 +271,10 @@ def pytest_runtest_makereport(item: Item, call: CallInfo[None]):\n             rep.longrepr = \"Unexpected success\"\n         rep.outcome = \"failed\"\n     elif item.config.option.runxfail:\n-        pass  # don't interfere\n+        if call.excinfo and isinstance(call.excinfo.value, skip.Exception):\n+            filename, line = item.reportinfo()[:2]\n+            assert line is not None\n+            rep.longrepr = str(filename), line + 1, call.excinfo.value.msg\n     elif call.excinfo and isinstance(call.excinfo.value, xfail.Exception):\n         assert call.excinfo.value.msg is not None\n         rep.wasxfail = \"reason: \" + call.excinfo.value.msg\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/skipping.py b/src/_pytest/skipping.py\nindex 5f70c26..6837803 100644\n--- a/src/_pytest/skipping.py\n+++ b/src/_pytest/skipping.py\n@@ -149,7 +149,10 @@ def pytest_runtest_makereport(item: Item, call: CallInfo[None]):\n             rep.longrepr = 'Unexpected success'\n         rep.outcome = 'failed'\n     elif item.config.option.runxfail:\n-        pass\n+        if call.excinfo and isinstance(call.excinfo.value, skip.Exception):\n+            filename, line = item.reportinfo()[:2]\n+            assert line is not None\n+            rep.longrepr = (str(filename), line + 1, call.excinfo.value.msg)\n     elif call.excinfo and isinstance(call.excinfo.value, xfail.Exception):\n         assert call.excinfo.value.msg is not None\n         rep.wasxfail = 'reason: ' + call.excinfo.value.msg\n", "normalized_occurrence": 1}
