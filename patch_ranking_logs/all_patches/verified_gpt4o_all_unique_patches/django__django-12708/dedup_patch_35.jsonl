{"model_name_or_path": "agentless", "instance_id": "django__django-12708", "model_patch": "diff --git a/django/db/backends/base/schema.py b/django/db/backends/base/schema.py\nindex d7d8448..f208e2a 100644\n--- a/django/db/backends/base/schema.py\n+++ b/django/db/backends/base/schema.py\n@@ -393,7 +393,19 @@ class BaseDatabaseSchemaEditor:\n         news = {tuple(fields) for fields in new_index_together}\n         # Deleted indexes\n         for fields in olds.difference(news):\n-            self._delete_composed_index(model, fields, {'index': True}, self.sql_delete_index)\n+            try:\n+                self._delete_composed_index(model, fields, {'index': True}, self.sql_delete_index)\n+            except ValueError as e:\n+                # If the error is due to multiple constraints, filter out the unique constraint\n+                constraint_names = self._constraint_names(\n+                    model, [model._meta.get_field(field).column for field in fields], \n+                    exclude={constraint.name for constraint in model._meta.constraints},\n+                    index=True\n+                )\n+                if len(constraint_names) == 1:\n+                    self.execute(self._delete_constraint_sql(self.sql_delete_index, model, constraint_names[0]))\n+                else:\n+                    raise e\n         # Created indexes\n         for field_names in news.difference(olds):\n             fields = [model._meta.get_field(field) for field in field_names]\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/base/schema.py b/django/db/backends/base/schema.py\nindex 7b679d7..fece8d6 100644\n--- a/django/db/backends/base/schema.py\n+++ b/django/db/backends/base/schema.py\n@@ -221,7 +221,14 @@ class BaseDatabaseSchemaEditor:\n         olds = {tuple(fields) for fields in old_index_together}\n         news = {tuple(fields) for fields in new_index_together}\n         for fields in olds.difference(news):\n-            self._delete_composed_index(model, fields, {'index': True}, self.sql_delete_index)\n+            try:\n+                self._delete_composed_index(model, fields, {'index': True}, self.sql_delete_index)\n+            except ValueError as e:\n+                constraint_names = self._constraint_names(model, [model._meta.get_field(field).column for field in fields], exclude={constraint.name for constraint in model._meta.constraints}, index=True)\n+                if len(constraint_names) == 1:\n+                    self.execute(self._delete_constraint_sql(self.sql_delete_index, model, constraint_names[0]))\n+                else:\n+                    raise e\n         for field_names in news.difference(olds):\n             fields = [model._meta.get_field(field) for field in field_names]\n             self.execute(self._create_index_sql(model, fields, suffix='_idx'))\n", "normalized_occurrence": 1}
