{"model_name_or_path": "agentless_claude", "instance_id": "astropy__astropy-14182", "model_patch": "diff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py\nindex 00bbbaf..4732edd 100644\n--- a/astropy/io/ascii/rst.py\n+++ b/astropy/io/ascii/rst.py\n@@ -57,10 +57,26 @@ class RST(FixedWidth):\n     data_class = SimpleRSTData\n     header_class = SimpleRSTHeader\n \n-    def __init__(self):\n+    def __init__(self, header_rows=None):\n         super().__init__(delimiter_pad=None, bookend=False)\n+        self.header_rows = header_rows\n \n     def write(self, lines):\n         lines = super().write(lines)\n+        if self.header_rows:\n+            # Insert additional header rows after the column names\n+            header_pos = 1  # Position after the first separator line\n+            for row_type in self.header_rows:\n+                if row_type == 'unit':\n+                    header_pos += 1\n+                    units = [str(col.unit or '') for col in self.cols]\n+                    lines.insert(header_pos, self.splitter.join(units))\n+                elif row_type == 'name':\n+                    # Names are already included by default\n+                    continue\n+                else:\n+                    raise ValueError(f\"Unknown header_rows type: {row_type}\")\n+        \n+        # Add separator lines at start and end\n         lines = [lines[1]] + lines + [lines[1]]\n-        return lines\n+        return lines\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py\nindex 65d6c1d..b0a9d64 100644\n--- a/astropy/io/ascii/rst.py\n+++ b/astropy/io/ascii/rst.py\n@@ -18,9 +18,21 @@ class RST(FixedWidth):\n     _description = 'reStructuredText simple table'\n     data_class = SimpleRSTData\n     header_class = SimpleRSTHeader\n-    def __init__(self):\n+    def __init__(self, header_rows=None):\n         super().__init__(delimiter_pad=None, bookend=False)\n+        self.header_rows = header_rows\n     def write(self, lines):\n         lines = super().write(lines)\n+        if self.header_rows:\n+            header_pos = 1\n+            for row_type in self.header_rows:\n+                if row_type == 'unit':\n+                    header_pos += 1\n+                    units = [str(col.unit or '') for col in self.cols]\n+                    lines.insert(header_pos, self.splitter.join(units))\n+                elif row_type == 'name':\n+                    continue\n+                else:\n+                    raise ValueError(f'Unknown header_rows type: {row_type}')\n         lines = [lines[1]] + lines + [lines[1]]\n         return lines\n\\ No newline at end of file\n", "normalized_occurrence": 1}
