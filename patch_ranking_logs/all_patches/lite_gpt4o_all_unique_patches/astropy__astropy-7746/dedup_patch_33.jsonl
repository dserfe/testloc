{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-7746", "model_patch": "diff --git a/astropy/wcs/wcs.py b/astropy/wcs/wcs.py\nindex 369cdd2..e8fc10a 100644\n--- a/astropy/wcs/wcs.py\n+++ b/astropy/wcs/wcs.py\n@@ -1218,6 +1218,8 @@ reduce these to 2 dimensions using the naxis kwarg.\n                 raise ValueError(\n                     \"Coordinate arrays are not broadcastable to each other\")\n \n+            if all(x.size == 0 for x in axes):\n+                return [np.array([]).reshape(x.shape) for x in axes]\n             xy = np.hstack([x.reshape((x.size, 1)) for x in axes])\n \n             if ra_dec_order and sky == 'input':\n@@ -1243,6 +1245,9 @@ reduce these to 2 dimensions using the naxis kwarg.\n             return result\n \n         if len(args) == 2:\n+            # Check for empty arrays and return empty result if true\n+            if np.asarray(args[0]).size == 0:\n+                return np.array([]), np.array([])\n             try:\n                 xy, origin = args\n                 xy = np.asarray(xy)\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/wcs/wcs.py b/astropy/wcs/wcs.py\nindex 3d9c35a..619bc35 100644\n--- a/astropy/wcs/wcs.py\n+++ b/astropy/wcs/wcs.py\n@@ -598,6 +598,8 @@ class WCS(WCSBase):\n                 axes = np.broadcast_arrays(*axes)\n             except ValueError:\n                 raise ValueError('Coordinate arrays are not broadcastable to each other')\n+            if all((x.size == 0 for x in axes)):\n+                return [np.array([]).reshape(x.shape) for x in axes]\n             xy = np.hstack([x.reshape((x.size, 1)) for x in axes])\n             if ra_dec_order and sky == 'input':\n                 xy = self._denormalize_sky(xy)\n@@ -616,6 +618,8 @@ class WCS(WCSBase):\n                 result = self._normalize_sky(result)\n             return result\n         if len(args) == 2:\n+            if np.asarray(args[0]).size == 0:\n+                return (np.array([]), np.array([]))\n             try:\n                 xy, origin = args\n                 xy = np.asarray(xy)\n", "normalized_occurrence": 1}
