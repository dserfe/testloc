{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-13142", "model_patch": "diff --git a/sklearn/mixture/base.py b/sklearn/mixture/base.py\nindex a853e4a..c5bb0ba 100644\n--- a/sklearn/mixture/base.py\n+++ b/sklearn/mixture/base.py\n@@ -188,7 +188,7 @@ class BaseMixture(DensityMixin, BaseEstimator, metaclass=ABCMeta):\n         -------\n         self\n         \"\"\"\n-        self.fit_predict(X, y)\n+        self.fit(X)\n         return self\n \n     def fit_predict(self, X, y=None):\n@@ -273,6 +273,7 @@ class BaseMixture(DensityMixin, BaseEstimator, metaclass=ABCMeta):\n         self.n_iter_ = best_n_iter\n         self.lower_bound_ = max_lower_bound\n \n+        self._set_parameters(best_params)\n         return log_resp.argmax(axis=1)\n \n     def _e_step(self, X):\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/mixture/base.py b/sklearn/mixture/base.py\nindex 9518b16..5c15caa 100644\n--- a/sklearn/mixture/base.py\n+++ b/sklearn/mixture/base.py\n@@ -62,7 +62,7 @@ class BaseMixture(DensityMixin, BaseEstimator, metaclass=ABCMeta):\n     def _initialize(self, X, resp):\n         pass\n     def fit(self, X, y=None):\n-        self.fit_predict(X, y)\n+        self.fit(X)\n         return self\n     def fit_predict(self, X, y=None):\n         X = _check_X(X, self.n_components, ensure_min_samples=2)\n@@ -99,6 +99,7 @@ class BaseMixture(DensityMixin, BaseEstimator, metaclass=ABCMeta):\n         self._set_parameters(best_params)\n         self.n_iter_ = best_n_iter\n         self.lower_bound_ = max_lower_bound\n+        self._set_parameters(best_params)\n         return log_resp.argmax(axis=1)\n     def _e_step(self, X):\n         log_prob_norm, log_resp = self._estimate_log_prob_resp(X)\n", "normalized_occurrence": 1}
