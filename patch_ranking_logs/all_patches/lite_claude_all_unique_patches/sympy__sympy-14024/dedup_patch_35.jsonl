{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-14024", "model_patch": "diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py\nindex a6ca9db..e893ab2 100644\n--- a/sympy/simplify/simplify.py\n+++ b/sympy/simplify/simplify.py\n@@ -378,7 +378,10 @@ def signsimp(expr, evaluate=None):\n     if e.is_Add:\n         return e.func(*[signsimp(a, evaluate) for a in e.args])\n     if evaluate:\n-        e = e.xreplace({m: -(-m) for m in e.atoms(Mul) if -(-m) != m})\n+        # Don't simplify (-a)**x type terms where a is positive\n+        e = e.xreplace({m: -(-m) for m in e.atoms(Mul) \n+                       if -(-m) != m and not (isinstance(m, Pow) and \n+                       (-m.base).is_positive)})\n     return e\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py\nindex 52e38cb..3af58a5 100644\n--- a/sympy/simplify/simplify.py\n+++ b/sympy/simplify/simplify.py\n@@ -142,7 +142,7 @@ def signsimp(expr, evaluate=None):\n     if e.is_Add:\n         return e.func(*[signsimp(a, evaluate) for a in e.args])\n     if evaluate:\n-        e = e.xreplace({m: --m for m in e.atoms(Mul) if --m != m})\n+        e = e.xreplace({m: --m for m in e.atoms(Mul) if --m != m and (not (isinstance(m, Pow) and (-m.base).is_positive))})\n     return e\n def simplify(expr, ratio=1.7, measure=count_ops, rational=False):\n     expr = sympify(expr)\n", "normalized_occurrence": 1}
