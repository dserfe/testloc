{"model_name_or_path": "agentless", "instance_id": "django__django-11087", "model_patch": "diff --git a/django/db/models/deletion.py b/django/db/models/deletion.py\nindex 0bd756b..bee398a 100644\n--- a/django/db/models/deletion.py\n+++ b/django/db/models/deletion.py\n@@ -221,6 +221,8 @@ class Collector:\n                     if self.can_fast_delete(sub_objs, from_field=field):\n                         self.fast_deletes.append(sub_objs)\n                     elif sub_objs:\n+                        # Only fetch the primary key fields to avoid unnecessary data fetching\n+                        sub_objs = sub_objs.only(sub_objs.model._meta.pk.name)\n                         field.remote_field.on_delete(self, field, sub_objs, self.using)\n             for field in model._meta.private_fields:\n                 if hasattr(field, 'bulk_related_objects'):\n@@ -325,4 +327,4 @@ class Collector:\n         for model, instances in self.data.items():\n             for instance in instances:\n                 setattr(instance, model._meta.pk.attname, None)\n-        return sum(deleted_counter.values()), dict(deleted_counter)\n+        return sum(deleted_counter.values()), dict(deleted_counter)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/deletion.py b/django/db/models/deletion.py\nindex f42ced6..7b49dbb 100644\n--- a/django/db/models/deletion.py\n+++ b/django/db/models/deletion.py\n@@ -103,6 +103,7 @@ class Collector:\n                     if self.can_fast_delete(sub_objs, from_field=field):\n                         self.fast_deletes.append(sub_objs)\n                     elif sub_objs:\n+                        sub_objs = sub_objs.only(sub_objs.model._meta.pk.name)\n                         field.remote_field.on_delete(self, field, sub_objs, self.using)\n             for field in model._meta.private_fields:\n                 if hasattr(field, 'bulk_related_objects'):\n", "normalized_occurrence": 1}
