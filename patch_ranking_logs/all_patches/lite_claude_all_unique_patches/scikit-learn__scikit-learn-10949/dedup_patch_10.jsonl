{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-10949", "model_patch": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex 7e2fa63..56cb06b 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -462,9 +462,15 @@ def check_array(array, accept_sparse=False, accept_large_sparse=True,\n     dtype_numeric = isinstance(dtype, six.string_types) and dtype == \"numeric\"\n \n     dtype_orig = getattr(array, \"dtype\", None)\n-    if not hasattr(dtype_orig, 'kind'):\n-        # not a data type (e.g. a column named dtype in a pandas DataFrame)\n-        dtype_orig = None\n+    if dtype_orig is not None and not hasattr(dtype_orig, 'kind'):\n+        # Store original dtype for later comparison\n+        dtype_orig_saved = dtype_orig\n+        # For non-numpy dtypes (e.g. pandas dtypes)\n+        try:\n+            dtype_orig = np.dtype(dtype_orig)\n+        except (TypeError, ValueError):\n+            # not a data type (e.g. a column named dtype in a pandas DataFrame)\n+            dtype_orig = None\n \n     if dtype_numeric:\n         if dtype_orig is not None and dtype_orig.kind == \"O\":\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex 7db8b51..cdbf89e 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -126,8 +126,12 @@ def check_array(array, accept_sparse=False, accept_large_sparse=True, dtype='num\n     array_orig = array\n     dtype_numeric = isinstance(dtype, six.string_types) and dtype == 'numeric'\n     dtype_orig = getattr(array, 'dtype', None)\n-    if not hasattr(dtype_orig, 'kind'):\n-        dtype_orig = None\n+    if dtype_orig is not None and (not hasattr(dtype_orig, 'kind')):\n+        dtype_orig_saved = dtype_orig\n+        try:\n+            dtype_orig = np.dtype(dtype_orig)\n+        except (TypeError, ValueError):\n+            dtype_orig = None\n     if dtype_numeric:\n         if dtype_orig is not None and dtype_orig.kind == 'O':\n             dtype = np.float64\n", "normalized_occurrence": 1}
