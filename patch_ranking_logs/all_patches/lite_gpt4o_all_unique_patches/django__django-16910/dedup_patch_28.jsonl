{"model_name_or_path": "agentless", "instance_id": "django__django-16910", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 364ef3b..e4bad3c 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -1226,7 +1226,7 @@ class SQLCompiler:\n             _, _, _, joins, _, _ = self.query.setup_joins([f.name], opts, root_alias)\n             alias = joins[-1]\n             columns = self.get_default_columns(\n-                related_select_mask, start_alias=alias, opts=f.remote_field.model._meta\n+                select_mask.get(f, {}), start_alias=alias, opts=f.remote_field.model._meta\n             )\n             for col in columns:\n                 select_fields.append(len(select))\n@@ -1250,7 +1250,7 @@ class SQLCompiler:\n                 if o.field.unique and not o.many_to_many\n             ]\n             for related_field, model in related_fields:\n-                related_select_mask = select_mask.get(related_field) or {}\n+                related_select_mask = select_mask.get((related_field.related_query_name(), related_field)) or {}\n                 if not select_related_descend(\n                     related_field,\n                     restricted,\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 802130c..62c4161 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -616,7 +616,7 @@ class SQLCompiler:\n             select_fields = []\n             _, _, _, joins, _, _ = self.query.setup_joins([f.name], opts, root_alias)\n             alias = joins[-1]\n-            columns = self.get_default_columns(related_select_mask, start_alias=alias, opts=f.remote_field.model._meta)\n+            columns = self.get_default_columns(select_mask.get(f, {}), start_alias=alias, opts=f.remote_field.model._meta)\n             for col in columns:\n                 select_fields.append(len(select))\n                 select.append((col, None))\n@@ -626,7 +626,7 @@ class SQLCompiler:\n         if restricted:\n             related_fields = [(o.field, o.related_model) for o in opts.related_objects if o.field.unique and (not o.many_to_many)]\n             for related_field, model in related_fields:\n-                related_select_mask = select_mask.get(related_field) or {}\n+                related_select_mask = select_mask.get((related_field.related_query_name(), related_field)) or {}\n                 if not select_related_descend(related_field, restricted, requested, related_select_mask, reverse=True):\n                     continue\n                 related_field_name = related_field.related_query_name()\n", "normalized_occurrence": 1}
