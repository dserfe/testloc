{"model_name_or_path": "agentless", "instance_id": "django__django-12908", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex a26bee7..3c549bf 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -475,7 +475,13 @@ class SQLCompiler:\n             combinator_sql += ' ALL'\n         braces = '({})' if features.supports_slicing_ordering_in_compound else '{}'\n         sql_parts, args_parts = zip(*((braces.format(sql), args) for sql, args in parts))\n-        result = [' {} '.format(combinator_sql).join(sql_parts)]\n+        distinct_fields, distinct_params = self.get_distinct()\n+        distinct_sql = \"\"\n+        if distinct_fields:\n+            distinct_sql = \"DISTINCT ON ({}) \".format(\", \".join(distinct_fields))\n+            params.extend(distinct_params)\n+\n+        result = ['{}{} '.format(distinct_sql, combinator_sql).join(sql_parts)]\n         params = []\n         for part in args_parts:\n             params.extend(part)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex e6a07a3..5c394f0 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -267,7 +267,12 @@ class SQLCompiler:\n             combinator_sql += ' ALL'\n         braces = '({})' if features.supports_slicing_ordering_in_compound else '{}'\n         sql_parts, args_parts = zip(*((braces.format(sql), args) for sql, args in parts))\n-        result = [' {} '.format(combinator_sql).join(sql_parts)]\n+        distinct_fields, distinct_params = self.get_distinct()\n+        distinct_sql = ''\n+        if distinct_fields:\n+            distinct_sql = 'DISTINCT ON ({}) '.format(', '.join(distinct_fields))\n+            params.extend(distinct_params)\n+        result = ['{}{} '.format(distinct_sql, combinator_sql).join(sql_parts)]\n         params = []\n         for part in args_parts:\n             params.extend(part)\n", "normalized_occurrence": 1}
