{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-7080", "model_patch": "diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py\nindex 440e6fe..b91f161 100644\n--- a/pylint/lint/pylinter.py\n+++ b/pylint/lint/pylinter.py\n@@ -588,10 +588,9 @@ class PyLinter(\n         Returns iterator of paths to discovered modules and packages.\n         \"\"\"\n         for something in files_or_modules:\n-            if os.path.isdir(something) and not os.path.isfile(\n-                os.path.join(something, \"__init__.py\")\n-            ):\n+            if os.path.isdir(something):\n                 skip_subtrees: list[str] = []\n+\n                 for root, _, files in os.walk(something):\n                     if any(root.startswith(s) for s in skip_subtrees):\n                         # Skip subtree of already discovered package.\n@@ -601,7 +600,12 @@ class PyLinter(\n                         root,\n                         self.config.ignore,\n                         self.config.ignore_patterns,\n-                        self.config.ignore_paths,\n+                        self.config.ignore_paths\n+                    ) or _is_ignored_file(\n+                        root,\n+                        [],\n+                        [],\n+                        self.config.get('ignore-paths', [])\n                     ):\n                         skip_subtrees.append(root)\n                         continue\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py\nindex afb1178..238d04d 100644\n--- a/pylint/lint/pylinter.py\n+++ b/pylint/lint/pylinter.py\n@@ -225,12 +225,12 @@ class PyLinter(_ArgumentsManager, _MessageStateHandler, reporters.ReportsHandler\n                 self._msgs_state[msg.msgid] = False\n     def _discover_files(self, files_or_modules: Sequence[str]) -> Iterator[str]:\n         for something in files_or_modules:\n-            if os.path.isdir(something) and (not os.path.isfile(os.path.join(something, '__init__.py'))):\n+            if os.path.isdir(something):\n                 skip_subtrees: list[str] = []\n                 for root, _, files in os.walk(something):\n                     if any((root.startswith(s) for s in skip_subtrees)):\n                         continue\n-                    if _is_ignored_file(root, self.config.ignore, self.config.ignore_patterns, self.config.ignore_paths):\n+                    if _is_ignored_file(root, self.config.ignore, self.config.ignore_patterns, self.config.ignore_paths) or _is_ignored_file(root, [], [], self.config.get('ignore-paths', [])):\n                         skip_subtrees.append(root)\n                         continue\n                     if '__init__.py' in files:\n", "normalized_occurrence": 1}
