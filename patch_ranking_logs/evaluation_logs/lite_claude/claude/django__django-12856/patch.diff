diff --git a/django/db/models/constraints.py b/django/db/models/constraints.py
index 714e891..be68d5f 100644
--- a/django/db/models/constraints.py
+++ b/django/db/models/constraints.py
@@ -71,6 +71,8 @@ class CheckConstraint(BaseConstraint):
         return path, args, kwargs
 
 
+from django.core import checks
+
 class Deferrable(Enum):
     DEFERRED = 'deferred'
     IMMEDIATE = 'immediate'
@@ -104,6 +106,21 @@ class UniqueConstraint(BaseConstraint):
         sql, params = where.as_sql(compiler, schema_editor.connection)
         return sql % tuple(schema_editor.quote_value(p) for p in params)
 
+    def check(self, model):
+        errors = []
+        for field_name in self.fields:
+            try:
+                field = model._meta.get_field(field_name)
+            except Exception:
+                errors.append(
+                    checks.Error(
+                        "The field '%s' referenced by the unique constraint does not exist." % field_name,
+                        obj=model,
+                        id='models.E012',
+                    )
+                )
+        return errors
+
     def constraint_sql(self, model, schema_editor):
         fields = [model._meta.get_field(field_name).column for field_name in self.fields]
         condition = self._get_condition_sql(model, schema_editor)
@@ -150,4 +167,4 @@ class UniqueConstraint(BaseConstraint):
             kwargs['condition'] = self.condition
         if self.deferrable:
             kwargs['deferrable'] = self.deferrable
-        return path, args, kwargs
+        return path, args, kwargs
