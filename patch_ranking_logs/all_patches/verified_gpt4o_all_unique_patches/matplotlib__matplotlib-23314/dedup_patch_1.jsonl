{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-23314", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex f43c36a..0e6ee9e 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -3020,6 +3020,12 @@ class _AxesBase(martist.Artist):\n         if renderer is None:\n             raise RuntimeError('No renderer defined')\n         if not self.get_visible():\n+            if hasattr(self, 'axison') and not self.axison:\n+                return\n+            for spine in self.spines.values():\n+                spine.set_visible(False)\n+            if hasattr(self, 'patch'):\n+                self.patch.set_visible(False)\n             return\n         self._unstale_viewLim()\n \n@@ -4608,4 +4614,4 @@ class _AxesBase(martist.Artist):\n \n     def get_shared_y_axes(self):\n         \"\"\"Return an immutable view on the shared y-axes Grouper.\"\"\"\n-        return cbook.GrouperView(self._shared_axes[\"y\"])\n+        return cbook.GrouperView(self._shared_axes[\"y\"])\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex d0b0d73..7e71168 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1269,6 +1269,12 @@ class _AxesBase(martist.Artist):\n         if renderer is None:\n             raise RuntimeError('No renderer defined')\n         if not self.get_visible():\n+            if hasattr(self, 'axison') and (not self.axison):\n+                return\n+            for spine in self.spines.values():\n+                spine.set_visible(False)\n+            if hasattr(self, 'patch'):\n+                self.patch.set_visible(False)\n             return\n         self._unstale_viewLim()\n         renderer.open_group('axes', gid=self.get_gid())\n", "normalized_occurrence": 1}
