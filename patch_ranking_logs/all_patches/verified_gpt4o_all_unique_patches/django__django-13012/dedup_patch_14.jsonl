{"model_name_or_path": "agentless", "instance_id": "django__django-13012", "model_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 48095d5..a036a84 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -866,7 +866,10 @@ class ExpressionWrapper(Expression):\n     def as_sql(self, compiler, connection):\n         return self.expression.as_sql(compiler, connection)\n \n-    def __repr__(self):\n+    def get_group_by_cols(self, alias=None):\n+        if isinstance(self.expression, Value):\n+            return []\n+        return self.expression.get_group_by_cols(alias)\n         return \"{}({})\".format(self.__class__.__name__, self.expression)\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 8ef7cb9..d5cc934 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -515,7 +515,10 @@ class ExpressionWrapper(Expression):\n         return [self.expression]\n     def as_sql(self, compiler, connection):\n         return self.expression.as_sql(compiler, connection)\n-    def __repr__(self):\n+    def get_group_by_cols(self, alias=None):\n+        if isinstance(self.expression, Value):\n+            return []\n+        return self.expression.get_group_by_cols(alias)\n         return '{}({})'.format(self.__class__.__name__, self.expression)\n class When(Expression):\n     template = 'WHEN %(condition)s THEN %(result)s'\n", "normalized_occurrence": 1}
