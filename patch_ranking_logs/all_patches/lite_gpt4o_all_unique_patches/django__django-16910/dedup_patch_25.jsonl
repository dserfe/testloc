{"model_name_or_path": "agentless", "instance_id": "django__django-16910", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 364ef3b..cd32db7 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -1225,9 +1225,14 @@ class SQLCompiler:\n             select_fields = []\n             _, _, _, joins, _, _ = self.query.setup_joins([f.name], opts, root_alias)\n             alias = joins[-1]\n-            columns = self.get_default_columns(\n-                related_select_mask, start_alias=alias, opts=f.remote_field.model._meta\n-            )\n+            related_select_fields = self.query.get_loaded_field_names().get(f.remote_field.model, set())\n+            columns = [\n+                col\n+                for col in self.get_default_columns(\n+                    related_select_mask, start_alias=alias, opts=f.remote_field.model._meta\n+                )\n+                if related_select_fields and col[1].split(LOOKUP_SEP, 1)[0] in related_select_fields\n+            ]\n             for col in columns:\n                 select_fields.append(len(select))\n                 select.append((col, None))\n@@ -1278,12 +1283,17 @@ class SQLCompiler:\n                 }\n                 related_klass_infos.append(klass_info)\n                 select_fields = []\n-                columns = self.get_default_columns(\n-                    related_select_mask,\n-                    start_alias=alias,\n-                    opts=model._meta,\n-                    from_parent=opts.model,\n-                )\n+                related_select_fields = self.query.get_loaded_field_names().get(model, set())\n+                columns = [\n+                    col\n+                    for col in self.get_default_columns(\n+                        related_select_mask,\n+                        start_alias=alias,\n+                        opts=model._meta,\n+                        from_parent=opts.model,\n+                    )\n+                    if related_select_fields and col[1].split(LOOKUP_SEP, 1)[0] in related_select_fields\n+                ]\n                 for col in columns:\n                     select_fields.append(len(select))\n                     select.append((col, None))\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 802130c..f92eebc 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -616,7 +616,8 @@ class SQLCompiler:\n             select_fields = []\n             _, _, _, joins, _, _ = self.query.setup_joins([f.name], opts, root_alias)\n             alias = joins[-1]\n-            columns = self.get_default_columns(related_select_mask, start_alias=alias, opts=f.remote_field.model._meta)\n+            related_select_fields = self.query.get_loaded_field_names().get(f.remote_field.model, set())\n+            columns = [col for col in self.get_default_columns(related_select_mask, start_alias=alias, opts=f.remote_field.model._meta) if related_select_fields and col[1].split(LOOKUP_SEP, 1)[0] in related_select_fields]\n             for col in columns:\n                 select_fields.append(len(select))\n                 select.append((col, None))\n@@ -637,7 +638,8 @@ class SQLCompiler:\n                 klass_info = {'model': model, 'field': related_field, 'reverse': True, 'local_setter': related_field.remote_field.set_cached_value, 'remote_setter': related_field.set_cached_value, 'from_parent': from_parent}\n                 related_klass_infos.append(klass_info)\n                 select_fields = []\n-                columns = self.get_default_columns(related_select_mask, start_alias=alias, opts=model._meta, from_parent=opts.model)\n+                related_select_fields = self.query.get_loaded_field_names().get(model, set())\n+                columns = [col for col in self.get_default_columns(related_select_mask, start_alias=alias, opts=model._meta, from_parent=opts.model) if related_select_fields and col[1].split(LOOKUP_SEP, 1)[0] in related_select_fields]\n                 for col in columns:\n                     select_fields.append(len(select))\n                     select.append((col, None))\n", "normalized_occurrence": 1}
