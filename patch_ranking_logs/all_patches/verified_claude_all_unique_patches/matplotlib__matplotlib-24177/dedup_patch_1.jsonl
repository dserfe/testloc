{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-24177", "model_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 36d6e8e..1d1f463 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -6747,6 +6747,9 @@ such objects\n             # this will automatically overwrite bins,\n             # so that each histogram uses the same bins\n             m, bins = np.histogram(x[i], bins, weights=w[i], **hist_kwargs)\n+            if density and histtype.startswith('step'):\n+                db = np.diff(bins)\n+                m = m / (m.sum() * db)\n             tops.append(m)\n         tops = np.array(tops, float)  # causes problems later if it's an int\n         bins = np.array(bins, float)  # causes problems if float16\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 63bfb92..5bf2710 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -1948,6 +1948,9 @@ class Axes(_AxesBase):\n         tops = []\n         for i in range(nx):\n             m, bins = np.histogram(x[i], bins, weights=w[i], **hist_kwargs)\n+            if density and histtype.startswith('step'):\n+                db = np.diff(bins)\n+                m = m / (m.sum() * db)\n             tops.append(m)\n         tops = np.array(tops, float)\n         bins = np.array(bins, float)\n", "normalized_occurrence": 1}
