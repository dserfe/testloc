{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9258", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 51811ca..214891d 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -80,7 +80,7 @@ def insert_field_list(node: Element) -> nodes.field_list:\n     return field_list\n \n \n-def modify_field_list(node: nodes.field_list, annotations: Dict[str, str]) -> None:\n+def modify_field_list(node: nodes.field_list, annotations: Dict[str, Union[str, List[str]]]) -> None:\n     arguments: Dict[str, Dict[str, bool]] = {}\n     fields = cast(Iterable[nodes.field], node)\n     for field in fields:\n@@ -112,7 +112,11 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str]) -> No\n         if not arg.get('type'):\n             field = nodes.field()\n             field += nodes.field_name('', 'type ' + name)\n-            field += nodes.field_body('', nodes.paragraph('', annotation))\n+            if isinstance(annotation, list):\n+                annotation_text = ' | '.join(annotation)\n+            else:\n+                annotation_text = annotation\n+            field += nodes.field_body('', nodes.paragraph('', annotation_text))\n             node += field\n         if not arg.get('param'):\n             field = nodes.field()\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 03a755b..92226c7 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -52,7 +52,7 @@ def insert_field_list(node: Element) -> nodes.field_list:\n     else:\n         node += field_list\n     return field_list\n-def modify_field_list(node: nodes.field_list, annotations: Dict[str, str]) -> None:\n+def modify_field_list(node: nodes.field_list, annotations: Dict[str, Union[str, List[str]]]) -> None:\n     arguments: Dict[str, Dict[str, bool]] = {}\n     fields = cast(Iterable[nodes.field], node)\n     for field in fields:\n@@ -80,7 +80,11 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str]) -> No\n         if not arg.get('type'):\n             field = nodes.field()\n             field += nodes.field_name('', 'type ' + name)\n-            field += nodes.field_body('', nodes.paragraph('', annotation))\n+            if isinstance(annotation, list):\n+                annotation_text = ' | '.join(annotation)\n+            else:\n+                annotation_text = annotation\n+            field += nodes.field_body('', nodes.paragraph('', annotation_text))\n             node += field\n         if not arg.get('param'):\n             field = nodes.field()\n", "normalized_occurrence": 1}
