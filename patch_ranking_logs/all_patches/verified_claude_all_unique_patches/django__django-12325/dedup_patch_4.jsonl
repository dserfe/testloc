{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12325", "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 77c04dd..7e72f00 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -200,9 +200,9 @@ class ModelBase(type):\n             # Skip concrete parent classes.\n             if base != new_class and not base._meta.abstract:\n                 continue\n-            # Locate OneToOneField instances.\n+            # Locate OneToOneField instances marked as parent links\n             for field in base._meta.local_fields:\n-                if isinstance(field, OneToOneField):\n+                if isinstance(field, OneToOneField) and getattr(field.remote_field, 'parent_link', False):\n                     related = resolve_relation(new_class, field.remote_field.model)\n                     parent_links[make_model_tuple(related)] = field\n \n", "normalized_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 0ae5317..431b073 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -105,7 +105,7 @@ class ModelBase(type):\n             if base != new_class and (not base._meta.abstract):\n                 continue\n             for field in base._meta.local_fields:\n-                if isinstance(field, OneToOneField):\n+                if isinstance(field, OneToOneField) and getattr(field.remote_field, 'parent_link', False):\n                     related = resolve_relation(new_class, field.remote_field.model)\n                     parent_links[make_model_tuple(related)] = field\n         inherited_attributes = set()\n", "normalized_occurrence": 1}
