{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-8593", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex c412096..45a195a 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1865,6 +1865,18 @@ class DataDocumenter(GenericAliasMixin, NewTypeMixin, TypeVarMixin,\n     @classmethod\n     def can_document_member(cls, member: Any, membername: str, isattr: bool, parent: Any\n                             ) -> bool:\n+        if not (isinstance(parent, ModuleDocumenter) and isattr):\n+            return False\n+\n+        # Check if it has :meta public: in its docstring\n+        try:\n+            from sphinx.util.docstrings import extract_metadata\n+            metadata = extract_metadata(parent.__dict__.get('__doc__', ''))\n+            if 'public' in metadata:\n+                return True\n+        except Exception:\n+            pass\n+\n         return isinstance(parent, ModuleDocumenter) and isattr\n \n     def update_annotations(self, parent: Any) -> None:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex f71844a..2cf7949 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1047,6 +1047,15 @@ class DataDocumenter(GenericAliasMixin, NewTypeMixin, TypeVarMixin, Uninitialize\n     option_spec['no-value'] = bool_option\n     @classmethod\n     def can_document_member(cls, member: Any, membername: str, isattr: bool, parent: Any) -> bool:\n+        if not (isinstance(parent, ModuleDocumenter) and isattr):\n+            return False\n+        try:\n+            from sphinx.util.docstrings import extract_metadata\n+            metadata = extract_metadata(parent.__dict__.get('__doc__', ''))\n+            if 'public' in metadata:\n+                return True\n+        except Exception:\n+            pass\n         return isinstance(parent, ModuleDocumenter) and isattr\n     def update_annotations(self, parent: Any) -> None:\n         try:\n", "normalized_occurrence": 1}
