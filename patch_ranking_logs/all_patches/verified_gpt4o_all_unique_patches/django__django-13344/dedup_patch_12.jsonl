{"model_name_or_path": "agentless", "instance_id": "django__django-13344", "model_patch": "diff --git a/django/core/handlers/base.py b/django/core/handlers/base.py\nindex ed8f4af..edef3e2 100644\n--- a/django/core/handlers/base.py\n+++ b/django/core/handlers/base.py\n@@ -125,7 +125,7 @@ class BaseHandler:\n         \"\"\"Return an HttpResponse object for the given HttpRequest.\"\"\"\n         # Setup default url resolver for this thread\n         set_urlconf(settings.ROOT_URLCONF)\n-        response = self._middleware_chain(request)\n+        response = await self._middleware_chain(request) if asyncio.iscoroutinefunction(self._middleware_chain) else self._middleware_chain(request)\n         response._resource_closers.append(request.close)\n         if response.status_code >= 400:\n             log_response(\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/handlers/base.py b/django/core/handlers/base.py\nindex a097649..833ef0b 100644\n--- a/django/core/handlers/base.py\n+++ b/django/core/handlers/base.py\n@@ -72,7 +72,7 @@ class BaseHandler:\n         return method\n     def get_response(self, request):\n         set_urlconf(settings.ROOT_URLCONF)\n-        response = self._middleware_chain(request)\n+        response = await self._middleware_chain(request) if asyncio.iscoroutinefunction(self._middleware_chain) else self._middleware_chain(request)\n         response._resource_closers.append(request.close)\n         if response.status_code >= 400:\n             log_response('%s: %s', response.reason_phrase, request.path, response=response, request=request)\n", "normalized_occurrence": 1}
