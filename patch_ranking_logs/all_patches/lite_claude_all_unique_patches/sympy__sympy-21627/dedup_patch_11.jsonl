{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-21627", "model_patch": "diff --git a/sympy/functions/elementary/hyperbolic.py b/sympy/functions/elementary/hyperbolic.py\nindex db125b2..93dc9bc 100644\n--- a/sympy/functions/elementary/hyperbolic.py\n+++ b/sympy/functions/elementary/hyperbolic.py\n@@ -266,8 +266,15 @@ class sinh(HyperbolicFunction):\n \n     def _eval_is_zero(self):\n         arg = self.args[0]\n+        from sympy import pi, I\n         if arg.is_zero:\n             return True\n+        # cosh(x) = 0 iff x = (2n+1)\u03c0i/2 for integer n\n+        # Try to identify if arg = (2n+1)\u03c0i/2\n+        coeff = arg / (pi*I/2)\n+        if coeff.is_number:\n+            return False  # If we can evaluate it numerically, cosh is never exactly zero\n+        return None\n \n \n class cosh(HyperbolicFunction):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/hyperbolic.py b/sympy/functions/elementary/hyperbolic.py\nindex f81ffb5..2a59d83 100644\n--- a/sympy/functions/elementary/hyperbolic.py\n+++ b/sympy/functions/elementary/hyperbolic.py\n@@ -159,8 +159,13 @@ class sinh(HyperbolicFunction):\n         return arg.is_finite\n     def _eval_is_zero(self):\n         arg = self.args[0]\n+        from sympy import pi, I\n         if arg.is_zero:\n             return True\n+        coeff = arg / (pi * I / 2)\n+        if coeff.is_number:\n+            return False\n+        return None\n class cosh(HyperbolicFunction):\n     def fdiff(self, argindex=1):\n         if argindex == 1:\n", "normalized_occurrence": 1}
