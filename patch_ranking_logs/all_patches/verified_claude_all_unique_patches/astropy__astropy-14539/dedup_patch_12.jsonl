{"model_name_or_path": "agentless_claude", "instance_id": "astropy__astropy-14539", "model_patch": "diff --git a/astropy/io/fits/diff.py b/astropy/io/fits/diff.py\nindex 0a08301..4bc7e9a 100644\n--- a/astropy/io/fits/diff.py\n+++ b/astropy/io/fits/diff.py\n@@ -1450,15 +1450,16 @@ class TableDataDiff(_BaseDiff):\n             ):\n                 diffs = where_not_allclose(arra, arrb, rtol=self.rtol, atol=self.atol)\n             elif \"P\" in col.format:\n-                diffs = (\n-                    [\n-                        idx\n-                        for idx in range(len(arra))\n-                        if not np.allclose(\n-                            arra[idx], arrb[idx], rtol=self.rtol, atol=self.atol\n-                        )\n-                    ],\n-                )\n+                # Handle Variable Length Arrays (VLAs)\n+                diff_indices = []\n+                for idx in range(len(arra)):\n+                    a, b = arra[idx], arrb[idx]\n+                    # Consider empty arrays as equal\n+                    if len(a) == 0 and len(b) == 0:\n+                        continue\n+                    if len(a) != len(b) or not np.allclose(a, b, rtol=self.rtol, atol=self.atol):\n+                        diff_indices.append(idx)\n+                diffs = (np.array(diff_indices),)\n             else:\n                 diffs = np.where(arra != arrb)\n \n", "normalized_patch": "diff --git a/astropy/io/fits/diff.py b/astropy/io/fits/diff.py\nindex 0555397..0c3b8df 100644\n--- a/astropy/io/fits/diff.py\n+++ b/astropy/io/fits/diff.py\n@@ -519,7 +519,14 @@ class TableDataDiff(_BaseDiff):\n             if np.issubdtype(arra.dtype, np.floating) and np.issubdtype(arrb.dtype, np.floating):\n                 diffs = where_not_allclose(arra, arrb, rtol=self.rtol, atol=self.atol)\n             elif 'P' in col.format:\n-                diffs = ([idx for idx in range(len(arra)) if not np.allclose(arra[idx], arrb[idx], rtol=self.rtol, atol=self.atol)],)\n+                diff_indices = []\n+                for idx in range(len(arra)):\n+                    a, b = (arra[idx], arrb[idx])\n+                    if len(a) == 0 and len(b) == 0:\n+                        continue\n+                    if len(a) != len(b) or not np.allclose(a, b, rtol=self.rtol, atol=self.atol):\n+                        diff_indices.append(idx)\n+                diffs = (np.array(diff_indices),)\n             else:\n                 diffs = np.where(arra != arrb)\n             self.diff_total += len(set(diffs[0]))\n", "normalized_occurrence": 1}
