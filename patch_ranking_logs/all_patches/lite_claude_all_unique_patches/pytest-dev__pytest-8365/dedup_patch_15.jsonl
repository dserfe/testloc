{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-8365", "model_patch": "diff --git a/src/_pytest/tmpdir.py b/src/_pytest/tmpdir.py\nindex cae5caf..65c252b 100644\n--- a/src/_pytest/tmpdir.py\n+++ b/src/_pytest/tmpdir.py\n@@ -150,11 +150,16 @@ class TempdirFactory:\n \n def get_user() -> Optional[str]:\n     \"\"\"Return the current user name, or None if getuser() does not work\n-    in the current environment (see #1010).\"\"\"\n+    in the current environment (see #1010). The username is sanitized\n+    to ensure it is valid for use in directory names.\"\"\"\n     import getpass\n+    import re\n \n     try:\n-        return getpass.getuser()\n+        username = getpass.getuser()\n+        # Replace common invalid characters with underscore\n+        username = re.sub(r'[\\\\/:*?\"<>|]', '_', username)\n+        return username\n     except (ImportError, KeyError):\n         return None\n \n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/tmpdir.py b/src/_pytest/tmpdir.py\nindex 6f08c0a..d16adcc 100644\n--- a/src/_pytest/tmpdir.py\n+++ b/src/_pytest/tmpdir.py\n@@ -78,8 +78,11 @@ class TempdirFactory:\n         return py.path.local(self._tmppath_factory.getbasetemp().resolve())\n def get_user() -> Optional[str]:\n     import getpass\n+    import re\n     try:\n-        return getpass.getuser()\n+        username = getpass.getuser()\n+        username = re.sub('[\\\\\\\\/:*?\"<>|]', '_', username)\n+        return username\n     except (ImportError, KeyError):\n         return None\n def pytest_configure(config: Config) -> None:\n", "normalized_occurrence": 8}
