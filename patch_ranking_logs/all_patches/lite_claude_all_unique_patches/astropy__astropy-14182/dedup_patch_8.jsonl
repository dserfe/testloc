{"model_name_or_path": "agentless_claude", "instance_id": "astropy__astropy-14182", "model_patch": "diff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py\nindex 00bbbaf..dce8a94 100644\n--- a/astropy/io/ascii/rst.py\n+++ b/astropy/io/ascii/rst.py\n@@ -50,6 +50,17 @@ class RST(FixedWidth):\n     or for ones which define column spans through the use of an additional\n     line of dashes in the header.\n \n+    The writer supports multiple header rows through the ``header_rows`` parameter,\n+    which can be used to include additional information like units::\n+\n+        ===== ========\n+         wave response\n+          nm      ct  \n+        ===== ========\n+        350.0      0.7\n+        950.0      1.2\n+        ===== ========\n+\n     \"\"\"\n \n     _format_name = \"rst\"\n@@ -57,10 +68,18 @@ class RST(FixedWidth):\n     data_class = SimpleRSTData\n     header_class = SimpleRSTHeader\n \n-    def __init__(self):\n-        super().__init__(delimiter_pad=None, bookend=False)\n+    def __init__(self, header_rows=None):\n+        \"\"\"Initialize RST writer\n+        \n+        Parameters\n+        ----------\n+        header_rows : list, optional\n+            List of the names of different header rows to include. Common values are\n+            ['name', 'unit']. Default is ['name'].\n+        \"\"\"\n+        super().__init__(delimiter_pad=None, bookend=False, header_rows=header_rows)\n \n     def write(self, lines):\n         lines = super().write(lines)\n         lines = [lines[1]] + lines + [lines[1]]\n-        return lines\n+        return lines\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py\nindex 65d6c1d..a3367fd 100644\n--- a/astropy/io/ascii/rst.py\n+++ b/astropy/io/ascii/rst.py\n@@ -18,8 +18,8 @@ class RST(FixedWidth):\n     _description = 'reStructuredText simple table'\n     data_class = SimpleRSTData\n     header_class = SimpleRSTHeader\n-    def __init__(self):\n-        super().__init__(delimiter_pad=None, bookend=False)\n+    def __init__(self, header_rows=None):\n+        super().__init__(delimiter_pad=None, bookend=False, header_rows=header_rows)\n     def write(self, lines):\n         lines = super().write(lines)\n         lines = [lines[1]] + lines + [lines[1]]\n", "normalized_occurrence": 5}
