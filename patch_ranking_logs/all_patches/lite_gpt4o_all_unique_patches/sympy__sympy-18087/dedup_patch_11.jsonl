{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-18087", "model_patch": "diff --git a/sympy/functions/elementary/trigonometric.py b/sympy/functions/elementary/trigonometric.py\nindex 5205b6e..3ea97c9 100644\n--- a/sympy/functions/elementary/trigonometric.py\n+++ b/sympy/functions/elementary/trigonometric.py\n@@ -347,6 +347,11 @@ class sin(TrigonometricFunction):\n         if isinstance(arg, asin):\n             return arg.args[0]\n \n+        if isinstance(arg, sqrt):\n+            base = arg.args[0]\n+            if isinstance(base, sin):\n+                return abs(base)\n+\n         if isinstance(arg, atan):\n             x = arg.args[0]\n             return x / sqrt(1 + x**2)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/trigonometric.py b/sympy/functions/elementary/trigonometric.py\nindex bfdabb3..cdebea5 100644\n--- a/sympy/functions/elementary/trigonometric.py\n+++ b/sympy/functions/elementary/trigonometric.py\n@@ -195,6 +195,10 @@ class sin(TrigonometricFunction):\n             return S.Zero\n         if isinstance(arg, asin):\n             return arg.args[0]\n+        if isinstance(arg, sqrt):\n+            base = arg.args[0]\n+            if isinstance(base, sin):\n+                return abs(base)\n         if isinstance(arg, atan):\n             x = arg.args[0]\n             return x / sqrt(1 + x ** 2)\n", "normalized_occurrence": 1}
