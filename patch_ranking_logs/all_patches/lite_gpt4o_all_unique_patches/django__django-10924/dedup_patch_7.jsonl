{"model_name_or_path": "agentless", "instance_id": "django__django-10924", "model_patch": "diff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py\nindex 73109d9..8e5d41c 100644\n--- a/django/db/models/fields/files.py\n+++ b/django/db/models/fields/files.py\n@@ -249,7 +249,7 @@ class FileField(Field):\n             return []\n \n     def _check_upload_to(self):\n-        if isinstance(self.upload_to, str) and self.upload_to.startswith('/'):\n+        if isinstance(self.upload_to, str) and self.upload_to.startswith('/') and not callable(self.upload_to):\n             return [\n                 checks.Error(\n                     \"%s's 'upload_to' argument must be a relative path, not an \"\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py\nindex 782a310..aae24ea 100644\n--- a/django/db/models/fields/files.py\n+++ b/django/db/models/fields/files.py\n@@ -133,7 +133,7 @@ class FileField(Field):\n         else:\n             return []\n     def _check_upload_to(self):\n-        if isinstance(self.upload_to, str) and self.upload_to.startswith('/'):\n+        if isinstance(self.upload_to, str) and self.upload_to.startswith('/') and (not callable(self.upload_to)):\n             return [checks.Error(\"%s's 'upload_to' argument must be a relative path, not an absolute path.\" % self.__class__.__name__, obj=self, id='fields.E202', hint='Remove the leading slash.')]\n         else:\n             return []\n", "normalized_occurrence": 1}
