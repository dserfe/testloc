{"model_name_or_path": "agentless", "instance_id": "django__django-12589", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 4b61f66..e113627 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1927,7 +1927,16 @@ class Query(BaseExpression):\n         primary key, and the query would be equivalent, the optimization\n         will be made automatically.\n         \"\"\"\n-        group_by = list(self.select)\n+        group_by = []\n+        seen = set()\n+        for item in self.select:\n+            if hasattr(item[0], 'alias'):\n+                alias = item[0].alias\n+                if alias not in seen:\n+                    group_by.append(item)\n+                    seen.add(alias)\n+            else:\n+                group_by.append(item)\n         if self.annotation_select:\n             for alias, annotation in self.annotation_select.items():\n                 signature = inspect.signature(annotation.get_group_by_cols)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 4386979..a8caa98 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1023,7 +1023,16 @@ class Query(BaseExpression):\n         if force_empty:\n             self.default_ordering = False\n     def set_group_by(self, allow_aliases=True):\n-        group_by = list(self.select)\n+        group_by = []\n+        seen = set()\n+        for item in self.select:\n+            if hasattr(item[0], 'alias'):\n+                alias = item[0].alias\n+                if alias not in seen:\n+                    group_by.append(item)\n+                    seen.add(alias)\n+            else:\n+                group_by.append(item)\n         if self.annotation_select:\n             for alias, annotation in self.annotation_select.items():\n                 signature = inspect.signature(annotation.get_group_by_cols)\n", "normalized_occurrence": 1}
