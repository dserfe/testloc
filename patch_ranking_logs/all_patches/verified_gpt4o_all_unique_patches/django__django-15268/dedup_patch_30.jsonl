{"model_name_or_path": "agentless", "instance_id": "django__django-15268", "model_patch": "diff --git a/django/db/migrations/optimizer.py b/django/db/migrations/optimizer.py\nindex f01e0f5..c490b5f 100644\n--- a/django/db/migrations/optimizer.py\n+++ b/django/db/migrations/optimizer.py\n@@ -43,7 +43,14 @@ class MigrationOptimizer:\n         for i, operation in enumerate(operations):\n             right = True  # Should we reduce on the right or on the left.\n             # Compare it to each operation after it\n+            j_offset = 0\n             for j, other in enumerate(operations[i + 1:]):\n+                if isinstance(operation, (AlterUniqueTogether, AlterIndexTogether)) and isinstance(other, (AlterUniqueTogether, AlterIndexTogether)):\n+                    if operation.name == other.name and operation.option_name == other.option_name:\n+                        combined_operation = operation.reduce(other, app_label)\n+                        if isinstance(combined_operation, list) and len(combined_operation) == 1:\n+                            new_operations.append(combined_operation[0])\n+                            continue\n                 result = operation.reduce(other, app_label)\n                 if isinstance(result, list):\n                     in_between = operations[i + 1:i + j + 1]\n@@ -66,4 +73,4 @@ class MigrationOptimizer:\n                     right = False\n             else:\n                 new_operations.append(operation)\n-        return new_operations\n+        return new_operations\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/optimizer.py b/django/db/migrations/optimizer.py\nindex 06fbfa5..8c33d38 100644\n--- a/django/db/migrations/optimizer.py\n+++ b/django/db/migrations/optimizer.py\n@@ -13,7 +13,14 @@ class MigrationOptimizer:\n         new_operations = []\n         for i, operation in enumerate(operations):\n             right = True\n+            j_offset = 0\n             for j, other in enumerate(operations[i + 1:]):\n+                if isinstance(operation, (AlterUniqueTogether, AlterIndexTogether)) and isinstance(other, (AlterUniqueTogether, AlterIndexTogether)):\n+                    if operation.name == other.name and operation.option_name == other.option_name:\n+                        combined_operation = operation.reduce(other, app_label)\n+                        if isinstance(combined_operation, list) and len(combined_operation) == 1:\n+                            new_operations.append(combined_operation[0])\n+                            continue\n                 result = operation.reduce(other, app_label)\n                 if isinstance(result, list):\n                     in_between = operations[i + 1:i + j + 1]\n", "normalized_occurrence": 1}
