{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-13236", "model_patch": "diff --git a/astropy/table/table.py b/astropy/table/table.py\nindex 39b0202..daca7d4 100644\n--- a/astropy/table/table.py\n+++ b/astropy/table/table.py\n@@ -1239,12 +1239,14 @@ class Table:\n                                 f'{fully_qualified_name} '\n                                 'did not return a valid mixin column')\n \n-        # Structured ndarray gets viewed as a mixin unless already a valid\n-        # mixin class\n+        # Future deprecation warning for structured ndarray transformation\n         if (not isinstance(data, Column) and not data_is_mixin\n                 and isinstance(data, np.ndarray) and len(data.dtype) > 1):\n-            data = data.view(NdarrayMixin)\n-            data_is_mixin = True\n+            warnings.warn(\n+                \"Structured ndarray will be added as a Column in future releases. \"\n+                \"To avoid this warning, wrap the data in a Column.\",\n+                FutureWarning\n+            )\n \n         # Get the final column name using precedence.  Some objects may not\n         # have an info attribute. Also avoid creating info as a side effect.\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/table/table.py b/astropy/table/table.py\nindex c25424c..1dab252 100644\n--- a/astropy/table/table.py\n+++ b/astropy/table/table.py\n@@ -892,8 +892,7 @@ class Table:\n                 fully_qualified_name = original_data.__class__.__module__ + '.' + original_data.__class__.__name__\n                 raise TypeError(f'Mixin handler for object of type {fully_qualified_name} did not return a valid mixin column')\n         if not isinstance(data, Column) and (not data_is_mixin) and isinstance(data, np.ndarray) and (len(data.dtype) > 1):\n-            data = data.view(NdarrayMixin)\n-            data_is_mixin = True\n+            warnings.warn('Structured ndarray will be added as a Column in future releases. To avoid this warning, wrap the data in a Column.', FutureWarning)\n         if not name:\n             if isinstance(data, Column):\n                 name = data.name or default_name\n", "normalized_occurrence": 1}
