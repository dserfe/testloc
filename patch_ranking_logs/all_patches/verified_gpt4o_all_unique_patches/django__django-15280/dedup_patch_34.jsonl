{"model_name_or_path": "agentless", "instance_id": "django__django-15280", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 1013471..46c75f3 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -844,6 +844,12 @@ class QuerySet:\n     def _prefetch_related_objects(self):\n         # This method can only be called once the result cache has been filled.\n         prefetch_related_objects(self._result_cache, *self._prefetch_related_lookups)\n+        for obj in self._result_cache:\n+            if hasattr(obj, '_prefetched_objects_cache'):\n+                for rel_obj_cache in obj._prefetched_objects_cache.values():\n+                    for rel_obj in rel_obj_cache:\n+                        if hasattr(rel_obj, '_deferred_fields'):\n+                            rel_obj._deferred_fields = set()\n         self._prefetch_done = True\n \n     def explain(self, *, format=None, **options):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex b23a375..07f8b8f 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -514,6 +514,12 @@ class QuerySet:\n         return self.filter(pk=obj.pk).exists()\n     def _prefetch_related_objects(self):\n         prefetch_related_objects(self._result_cache, *self._prefetch_related_lookups)\n+        for obj in self._result_cache:\n+            if hasattr(obj, '_prefetched_objects_cache'):\n+                for rel_obj_cache in obj._prefetched_objects_cache.values():\n+                    for rel_obj in rel_obj_cache:\n+                        if hasattr(rel_obj, '_deferred_fields'):\n+                            rel_obj._deferred_fields = set()\n         self._prefetch_done = True\n     def explain(self, *, format=None, **options):\n         return self.query.explain(using=self.db, format=format, **options)\n", "normalized_occurrence": 1}
