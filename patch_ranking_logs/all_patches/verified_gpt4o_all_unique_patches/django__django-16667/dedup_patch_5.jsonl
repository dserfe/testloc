{"model_name_or_path": "agentless", "instance_id": "django__django-16667", "model_patch": "diff --git a/django/forms/widgets.py b/django/forms/widgets.py\nindex d370339..7f96377 100644\n--- a/django/forms/widgets.py\n+++ b/django/forms/widgets.py\n@@ -1156,7 +1156,10 @@ class SelectDateWidget(Widget):\n             input_format = get_format(\"DATE_INPUT_FORMATS\")[0]\n             input_format = formats.sanitize_strftime_format(input_format)\n             try:\n-                date_value = datetime.date(int(y), int(m), int(d))\n+                try:\n+                    date_value = datetime.date(int(y), int(m), int(d))\n+                except OverflowError:\n+                    raise ValueError(\"Year, month, or day is out of range\")\n             except ValueError:\n                 # Return pseudo-ISO dates with zeros for any unselected values,\n                 # e.g. '2017-0-23'.\n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/widgets.py b/django/forms/widgets.py\nindex e4109e5..d3a05d8 100644\n--- a/django/forms/widgets.py\n+++ b/django/forms/widgets.py\n@@ -629,7 +629,10 @@ class SelectDateWidget(Widget):\n             input_format = get_format('DATE_INPUT_FORMATS')[0]\n             input_format = formats.sanitize_strftime_format(input_format)\n             try:\n-                date_value = datetime.date(int(y), int(m), int(d))\n+                try:\n+                    date_value = datetime.date(int(y), int(m), int(d))\n+                except OverflowError:\n+                    raise ValueError('Year, month, or day is out of range')\n             except ValueError:\n                 return '%s-%s-%s' % (y or 0, m or 0, d or 0)\n             return date_value.strftime(input_format)\n", "normalized_occurrence": 1}
