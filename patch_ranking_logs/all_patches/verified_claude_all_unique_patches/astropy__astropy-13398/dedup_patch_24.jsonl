{"model_name_or_path": "agentless_claude", "instance_id": "astropy__astropy-13398", "model_patch": "diff --git a/astropy/coordinates/builtin_frames/itrs.py b/astropy/coordinates/builtin_frames/itrs.py\nindex c4e677a..e663199 100644\n--- a/astropy/coordinates/builtin_frames/itrs.py\n+++ b/astropy/coordinates/builtin_frames/itrs.py\n@@ -2,9 +2,13 @@\n \n from astropy.utils.decorators import format_doc\n from astropy.coordinates.representation import CartesianRepresentation, CartesianDifferential\n-from astropy.coordinates.baseframe import BaseCoordinateFrame, base_doc\n+from astropy.coordinates.baseframe import BaseCoordinateFrame, base_doc, frame_transform_graph\n from astropy.coordinates.attributes import TimeAttribute\n-from .utils import DEFAULT_OBSTIME\n+from astropy.coordinates.transformations import FunctionTransformWithFiniteDifference\n+from astropy.coordinates.matrix_utilities import rotation_matrix, matrix_transpose\n+from .utils import DEFAULT_OBSTIME, PIOVER2\n+import numpy as np\n+from astropy import units as u\n \n __all__ = ['ITRS']\n \n@@ -24,15 +28,4 @@ class ITRS(BaseCoordinateFrame):\n \n     obstime = TimeAttribute(default=DEFAULT_OBSTIME)\n \n-    @property\n-    def earth_location(self):\n-        \"\"\"\n-        The data in this frame as an `~astropy.coordinates.EarthLocation` class.\n-        \"\"\"\n-        from astropy.coordinates.earth import EarthLocation\n \n-        cart = self.represent_as(CartesianRepresentation)\n-        return EarthLocation(x=cart.x, y=cart.y, z=cart.z)\n-\n-# Self-transform is in intermediate_rotation_transforms.py with all the other\n-# ITRS transforms\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/coordinates/builtin_frames/itrs.py b/astropy/coordinates/builtin_frames/itrs.py\nindex 6d91a25..5399efe 100644\n--- a/astropy/coordinates/builtin_frames/itrs.py\n+++ b/astropy/coordinates/builtin_frames/itrs.py\n@@ -1,16 +1,15 @@\n from astropy.utils.decorators import format_doc\n from astropy.coordinates.representation import CartesianRepresentation, CartesianDifferential\n-from astropy.coordinates.baseframe import BaseCoordinateFrame, base_doc\n+from astropy.coordinates.baseframe import BaseCoordinateFrame, base_doc, frame_transform_graph\n from astropy.coordinates.attributes import TimeAttribute\n-from .utils import DEFAULT_OBSTIME\n+from astropy.coordinates.transformations import FunctionTransformWithFiniteDifference\n+from astropy.coordinates.matrix_utilities import rotation_matrix, matrix_transpose\n+from .utils import DEFAULT_OBSTIME, PIOVER2\n+import numpy as np\n+from astropy import units as u\n __all__ = ['ITRS']\n @format_doc(base_doc, components='', footer='')\n class ITRS(BaseCoordinateFrame):\n     default_representation = CartesianRepresentation\n     default_differential = CartesianDifferential\n-    obstime = TimeAttribute(default=DEFAULT_OBSTIME)\n-    @property\n-    def earth_location(self):\n-        from astropy.coordinates.earth import EarthLocation\n-        cart = self.represent_as(CartesianRepresentation)\n-        return EarthLocation(x=cart.x, y=cart.y, z=cart.z)\n\\ No newline at end of file\n+    obstime = TimeAttribute(default=DEFAULT_OBSTIME)\n\\ No newline at end of file\n", "normalized_occurrence": 1}
