{"model_name_or_path": "agentless_claude", "instance_id": "pydata__xarray-7393", "model_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex 0194550..abce905 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -4487,7 +4487,9 @@ class Dataset(\n             else:\n                 _, _, var = _get_virtual_variable(self._variables, dim, self.dims)\n             # dummy index (only `stack_coords` will be used to construct the multi-index)\n-            stack_index = PandasIndex([0], dim)\n+            # preserve the original dtype when creating the index\n+            dtype = var.dtype if hasattr(var, 'dtype') else None\n+            stack_index = PandasIndex([0], dim, dtype=dtype)\n             stack_coords = {dim: var}\n \n         return stack_index, stack_coords\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex b7eb26f..0ebe185 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -1413,7 +1413,8 @@ class Dataset(DataWithCoords, DatasetAggregations, DatasetArithmetic, Mapping[Ha\n                 var = self._variables[dim]\n             else:\n                 _, _, var = _get_virtual_variable(self._variables, dim, self.dims)\n-            stack_index = PandasIndex([0], dim)\n+            dtype = var.dtype if hasattr(var, 'dtype') else None\n+            stack_index = PandasIndex([0], dim, dtype=dtype)\n             stack_coords = {dim: var}\n         return (stack_index, stack_coords)\n     def _stack_once(self: T_Dataset, dims: Sequence[Hashable | ellipsis], new_dim: Hashable, index_cls: type[Index], create_index: bool | None=True) -> T_Dataset:\n", "normalized_occurrence": 1}
