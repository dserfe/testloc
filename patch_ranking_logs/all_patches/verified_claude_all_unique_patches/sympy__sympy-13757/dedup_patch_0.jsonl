{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13757", "model_patch": "diff --git a/sympy/core/mul.py b/sympy/core/mul.py\nindex dd02372..3aa6243 100644\n--- a/sympy/core/mul.py\n+++ b/sympy/core/mul.py\n@@ -290,6 +290,13 @@ class Mul(Expr, AssocOp):\n                 neg1e += S.Half\n                 continue\n \n+            # Handle multiplication with polynomials\n+            elif hasattr(o, 'is_Poly') and o.is_Poly:\n+                if c:\n+                    o = o.mul(self.func(*c))\n+                    c = []\n+                nc_seq.append(o)\n+                continue\n             elif o.is_commutative:\n                 #      e\n                 # o = b\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/mul.py b/sympy/core/mul.py\nindex 6739e29..4e1abe3 100644\n--- a/sympy/core/mul.py\n+++ b/sympy/core/mul.py\n@@ -118,6 +118,12 @@ class Mul(Expr, AssocOp):\n             elif o is S.ImaginaryUnit:\n                 neg1e += S.Half\n                 continue\n+            elif hasattr(o, 'is_Poly') and o.is_Poly:\n+                if c:\n+                    o = o.mul(self.func(*c))\n+                    c = []\n+                nc_seq.append(o)\n+                continue\n             elif o.is_commutative:\n                 b, e = o.as_base_exp()\n                 if o.is_Pow:\n", "normalized_occurrence": 1}
