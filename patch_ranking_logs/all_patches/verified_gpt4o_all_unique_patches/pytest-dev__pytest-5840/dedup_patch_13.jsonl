{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-5840", "model_patch": "diff --git a/src/_pytest/main.py b/src/_pytest/main.py\nindex be5f299..b43c8b4 100644\n--- a/src/_pytest/main.py\n+++ b/src/_pytest/main.py\n@@ -632,7 +632,8 @@ class Session(nodes.FSCollector):\n         parts = str(arg).split(\"::\")\n         if self.config.option.pyargs:\n             parts[0] = self._tryconvertpyarg(parts[0])\n-        relpath = parts[0].replace(\"/\", os.sep)\n+        from .pathlib import unique_path\n+        relpath = unique_path(parts[0].replace(\"/\", os.sep))\n         path = self.config.invocation_dir.join(relpath, abs=True)\n         if not path.check():\n             if self.config.option.pyargs:\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/main.py b/src/_pytest/main.py\nindex ea2d5dc..df6ea57 100644\n--- a/src/_pytest/main.py\n+++ b/src/_pytest/main.py\n@@ -413,7 +413,8 @@ class Session(nodes.FSCollector):\n         parts = str(arg).split('::')\n         if self.config.option.pyargs:\n             parts[0] = self._tryconvertpyarg(parts[0])\n-        relpath = parts[0].replace('/', os.sep)\n+        from .pathlib import unique_path\n+        relpath = unique_path(parts[0].replace('/', os.sep))\n         path = self.config.invocation_dir.join(relpath, abs=True)\n         if not path.check():\n             if self.config.option.pyargs:\n", "normalized_occurrence": 1}
