{"model_name_or_path": "agentless", "instance_id": "django__django-13220", "model_patch": "diff --git a/django/core/exceptions.py b/django/core/exceptions.py\nindex 7969d41..81ebf58 100644\n--- a/django/core/exceptions.py\n+++ b/django/core/exceptions.py\n@@ -97,6 +97,10 @@ NON_FIELD_ERRORS = '__all__'\n \n \n class ValidationError(Exception):\n+    def __eq__(self, other):\n+        if not isinstance(other, ValidationError):\n+            return NotImplemented\n+        return sorted(self.messages) == sorted(other.messages)\n     \"\"\"An error while validating data.\"\"\"\n     def __init__(self, message, code=None, params=None):\n         \"\"\"\n@@ -190,4 +194,4 @@ class EmptyResultSet(Exception):\n \n class SynchronousOnlyOperation(Exception):\n     \"\"\"The user tried to call a sync-only function from an async context.\"\"\"\n-    pass\n+    pass\n", "occurrence": 1, "normalized_patch": "--- a/django/core/exceptions.py\n+++ b/django/core/exceptions.py\n-    \"\"\"An error while validating data.\"\"\"\n+\n+    def __eq__(self, other):\n+        if not isinstance(other, ValidationError):\n+            return NotImplemented\n+        return sorted(self.messages) == sorted(other.messages)\n+    'An error while validating data.'", "normalized_occurrence": 1}
