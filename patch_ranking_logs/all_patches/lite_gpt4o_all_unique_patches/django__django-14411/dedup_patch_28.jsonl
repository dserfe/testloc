{"model_name_or_path": "agentless", "instance_id": "django__django-14411", "model_patch": "diff --git a/django/contrib/admin/utils.py b/django/contrib/admin/utils.py\nindex ab619c1..c3cfb67 100644\n--- a/django/contrib/admin/utils.py\n+++ b/django/contrib/admin/utils.py\n@@ -361,7 +361,11 @@ def label_for_field(name, model, model_admin=None, return_attr=False, form=None)\n         label = pretty_name(name)\n         attr = name\n \n-    if return_attr:\n+    # Check if the field is ReadOnlyPasswordHashWidget and modify the label accordingly\n+    if hasattr(attr, 'widget') and attr.widget.__class__.__name__ == 'ReadOnlyPasswordHashWidget':\n+        label = None\n+\n+    if return_attr and label:\n         return (label, attr)\n     else:\n         return label\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/utils.py b/django/contrib/admin/utils.py\nindex 2428fd0..98e4776 100644\n--- a/django/contrib/admin/utils.py\n+++ b/django/contrib/admin/utils.py\n@@ -220,7 +220,9 @@ def label_for_field(name, model, model_admin=None, return_attr=False, form=None)\n     except FieldIsAForeignKeyColumnName:\n         label = pretty_name(name)\n         attr = name\n-    if return_attr:\n+    if hasattr(attr, 'widget') and attr.widget.__class__.__name__ == 'ReadOnlyPasswordHashWidget':\n+        label = None\n+    if return_attr and label:\n         return (label, attr)\n     else:\n         return label\n", "normalized_occurrence": 1}
