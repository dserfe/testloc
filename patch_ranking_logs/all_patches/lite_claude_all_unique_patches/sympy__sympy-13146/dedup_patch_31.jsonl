{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13146", "model_patch": "diff --git a/sympy/core/power.py b/sympy/core/power.py\nindex 13deb95..f7465f0 100644\n--- a/sympy/core/power.py\n+++ b/sympy/core/power.py\n@@ -1070,6 +1070,12 @@ class Pow(Expr):\n         base, exp = self.as_base_exp()\n         base = base._evalf(prec)\n         if not exp.is_Integer:\n+            # Try to convert float exponents to exact rationals before evaluating\n+            if exp.is_Float:\n+                from sympy import nsimplify\n+                rational_exp = nsimplify(exp, rational=True)\n+                if abs(float(rational_exp) - float(exp)) < 10**(-prec):\n+                    exp = rational_exp\n             exp = exp._evalf(prec)\n         if exp.is_negative and base.is_number and base.is_real is False:\n             base = base.conjugate() / (base * base.conjugate())._evalf(prec)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/power.py b/sympy/core/power.py\nindex a9c2232..80278f8 100644\n--- a/sympy/core/power.py\n+++ b/sympy/core/power.py\n@@ -737,6 +737,11 @@ class Pow(Expr):\n         base, exp = self.as_base_exp()\n         base = base._evalf(prec)\n         if not exp.is_Integer:\n+            if exp.is_Float:\n+                from sympy import nsimplify\n+                rational_exp = nsimplify(exp, rational=True)\n+                if abs(float(rational_exp) - float(exp)) < 10 ** (-prec):\n+                    exp = rational_exp\n             exp = exp._evalf(prec)\n         if exp.is_negative and base.is_number and (base.is_real is False):\n             base = base.conjugate() / (base * base.conjugate())._evalf(prec)\n", "normalized_occurrence": 1}
