{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11049", "model_patch": "diff --git a/django/forms/fields.py b/django/forms/fields.py\nindex 935044e..f59bd82 100644\n--- a/django/forms/fields.py\n+++ b/django/forms/fields.py\n@@ -468,10 +468,14 @@ class DateTimeField(BaseTemporalField):\n \n class DurationField(Field):\n     default_error_messages = {\n-        'invalid': _('Enter a valid duration.'),\n+        'invalid': _('Enter a valid duration in the format: [DD] [[HH:]MM:]ss[.uuuuuu]'),\n         'overflow': _('The number of days must be between {min_days} and {max_days}.')\n     }\n \n+    def __init__(self, **kwargs):\n+        kwargs.setdefault('help_text', _('Duration format: [DD] [[HH:]MM:]ss[.uuuuuu]'))\n+        super().__init__(**kwargs)\n+\n     def prepare_value(self, value):\n         if isinstance(value, datetime.timedelta):\n             return duration_string(value)\n", "occurrence": 2, "normalized_patch": "--- a/django/forms/fields.py\n+++ b/django/forms/fields.py\n-    default_error_messages = {'invalid': _('Enter a valid duration.'), 'overflow': _('The number of days must be between {min_days} and {max_days}.')}\n+    default_error_messages = {'invalid': _('Enter a valid duration in the format: [DD] [[HH:]MM:]ss[.uuuuuu]'), 'overflow': _('The number of days must be between {min_days} and {max_days}.')}\n+    def __init__(self, **kwargs):\n+        kwargs.setdefault('help_text', _('Duration format: [DD] [[HH:]MM:]ss[.uuuuuu]'))\n+        super().__init__(**kwargs)", "normalized_occurrence": 2}
