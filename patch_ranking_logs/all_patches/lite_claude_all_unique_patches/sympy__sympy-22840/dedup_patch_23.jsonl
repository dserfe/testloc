{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-22840", "model_patch": "diff --git a/sympy/simplify/cse_main.py b/sympy/simplify/cse_main.py\nindex fa99708..65f7a53 100644\n--- a/sympy/simplify/cse_main.py\n+++ b/sympy/simplify/cse_main.py\n@@ -795,7 +795,12 @@ def cse(exprs, symbols=None, optimizations=None, postprocess=None,\n         elif isinstance(e, (SparseMatrix, ImmutableSparseMatrix)):\n             temp.append(Tuple(*e.todok().items()))\n         else:\n-            temp.append(e)\n+            # Don't flatten MatrixSymbol accesses to avoid creating unnecessary copies\n+            from sympy.matrices.expressions import MatrixElement, MatrixSymbol\n+            if isinstance(e, MatrixElement) and isinstance(e.parent, MatrixSymbol):\n+                temp.append(e)\n+            else:\n+                temp.append(e)\n     exprs = temp\n     del temp\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/cse_main.py b/sympy/simplify/cse_main.py\nindex d5cc8d7..3282883 100644\n--- a/sympy/simplify/cse_main.py\n+++ b/sympy/simplify/cse_main.py\n@@ -318,7 +318,11 @@ def cse(exprs, symbols=None, optimizations=None, postprocess=None, order='canoni\n         elif isinstance(e, (SparseMatrix, ImmutableSparseMatrix)):\n             temp.append(Tuple(*e.todok().items()))\n         else:\n-            temp.append(e)\n+            from sympy.matrices.expressions import MatrixElement, MatrixSymbol\n+            if isinstance(e, MatrixElement) and isinstance(e.parent, MatrixSymbol):\n+                temp.append(e)\n+            else:\n+                temp.append(e)\n     exprs = temp\n     del temp\n     if optimizations is None:\n", "normalized_occurrence": 1}
