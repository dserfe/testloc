{"model_name_or_path": "agentless_claude", "instance_id": "mwaskom__seaborn-3407", "model_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 29c361e..bf4d0a7 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -1663,6 +1663,11 @@ class PairGrid(Grid):\n \n     def _find_numeric_cols(self, data):\n         \"\"\"Find which variables in a DataFrame are numeric.\"\"\"\n+        # Handle MultiIndex columns by flattening them\n+        if isinstance(data.columns, pd.MultiIndex):\n+            data = data.copy()\n+            data.columns = [''.join(str(i) for i in col) for col in data.columns]\n+            \n         numeric_cols = []\n         for col in data:\n             if variable_type(data[col]) == \"numeric\":\n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 039b44a..9210aa6 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -791,6 +791,9 @@ class PairGrid(Grid):\n         for ax, label in zip(self.axes[:, 0], self.y_vars):\n             ax.set_ylabel(label)\n     def _find_numeric_cols(self, data):\n+        if isinstance(data.columns, pd.MultiIndex):\n+            data = data.copy()\n+            data.columns = [''.join((str(i) for i in col)) for col in data.columns]\n         numeric_cols = []\n         for col in data:\n             if variable_type(data[col]) == 'numeric':\n", "normalized_occurrence": 1}
