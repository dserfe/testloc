{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-22714", "model_patch": "diff --git a/sympy/core/sympify.py b/sympy/core/sympify.py\nindex cba74f3..256b07a 100644\n--- a/sympy/core/sympify.py\n+++ b/sympy/core/sympify.py\n@@ -473,7 +473,10 @@ def sympify(a, locals=None, convert_xor=True, strict=False, rational=False,\n \n     try:\n         a = a.replace('\\n', '')\n-        expr = parse_expr(a, local_dict=locals, transformations=transformations, evaluate=evaluate)\n+        if evaluate:\n+            expr = parse_expr(a, local_dict=locals, transformations=transformations, evaluate=evaluate)\n+        else:\n+            expr = parse_expr(a, local_dict=locals, transformations=transformations, evaluate=False)\n     except (TokenError, SyntaxError) as exc:\n         raise SympifyError('could not parse %r' % a, exc)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/sympify.py b/sympy/core/sympify.py\nindex 8e167eb..16f6a70 100644\n--- a/sympy/core/sympify.py\n+++ b/sympy/core/sympify.py\n@@ -120,7 +120,10 @@ def sympify(a, locals=None, convert_xor=True, strict=False, rational=False, eval\n         transformations += (t_convert_xor,)\n     try:\n         a = a.replace('\\n', '')\n-        expr = parse_expr(a, local_dict=locals, transformations=transformations, evaluate=evaluate)\n+        if evaluate:\n+            expr = parse_expr(a, local_dict=locals, transformations=transformations, evaluate=evaluate)\n+        else:\n+            expr = parse_expr(a, local_dict=locals, transformations=transformations, evaluate=False)\n     except (TokenError, SyntaxError) as exc:\n         raise SympifyError('could not parse %r' % a, exc)\n     return expr\n", "normalized_occurrence": 1}
