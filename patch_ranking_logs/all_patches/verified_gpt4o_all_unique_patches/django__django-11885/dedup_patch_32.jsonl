{"model_name_or_path": "agentless", "instance_id": "django__django-11885", "model_patch": "diff --git a/django/db/models/deletion.py b/django/db/models/deletion.py\nindex da91f5e..f50b0da 100644\n--- a/django/db/models/deletion.py\n+++ b/django/db/models/deletion.py\n@@ -310,9 +310,20 @@ class Collector:\n                     )\n \n             # fast deletes\n+            # Combine fast deletes by model and related fields\n+            combined_fast_deletes = {}\n             for qs in self.fast_deletes:\n-                count = qs._raw_delete(using=self.using)\n-                deleted_counter[qs.model._meta.label] += count\n+                model = qs.model\n+                if model not in combined_fast_deletes:\n+                    combined_fast_deletes[model] = []\n+                combined_fast_deletes[model].append(qs)\n+\n+            # Execute combined fast deletes\n+            for model, querysets in combined_fast_deletes.items():\n+                if querysets:\n+                    combined_qs = querysets[0].union(*querysets[1:])\n+                    count = combined_qs._raw_delete(using=self.using)\n+                    deleted_counter[model._meta.label] += count\n \n             # update fields\n             for model, instances_for_fieldvalues in self.field_updates.items():\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/deletion.py b/django/db/models/deletion.py\nindex 97cb878..a3a7ee5 100644\n--- a/django/db/models/deletion.py\n+++ b/django/db/models/deletion.py\n@@ -156,9 +156,17 @@ class Collector:\n             for model, obj in self.instances_with_model():\n                 if not model._meta.auto_created:\n                     signals.pre_delete.send(sender=model, instance=obj, using=self.using)\n+            combined_fast_deletes = {}\n             for qs in self.fast_deletes:\n-                count = qs._raw_delete(using=self.using)\n-                deleted_counter[qs.model._meta.label] += count\n+                model = qs.model\n+                if model not in combined_fast_deletes:\n+                    combined_fast_deletes[model] = []\n+                combined_fast_deletes[model].append(qs)\n+            for model, querysets in combined_fast_deletes.items():\n+                if querysets:\n+                    combined_qs = querysets[0].union(*querysets[1:])\n+                    count = combined_qs._raw_delete(using=self.using)\n+                    deleted_counter[model._meta.label] += count\n             for model, instances_for_fieldvalues in self.field_updates.items():\n                 for (field, value), instances in instances_for_fieldvalues.items():\n                     query = sql.UpdateQuery(model)\n", "normalized_occurrence": 1}
