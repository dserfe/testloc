{"model_name_or_path": "agentless", "instance_id": "django__django-16116", "model_patch": "diff --git a/django/core/management/commands/makemigrations.py b/django/core/management/commands/makemigrations.py\nindex f0e76b4..9c82a53 100644\n--- a/django/core/management/commands/makemigrations.py\n+++ b/django/core/management/commands/makemigrations.py\n@@ -113,7 +113,13 @@ class Command(BaseCommand):\n         check_changes = options[\"check_changes\"]\n         self.scriptable = options[\"scriptable\"]\n         self.update = options[\"update\"]\n-        # If logs and prompts are diverted to stderr, remove the ERROR style.\n+        self.check_changes = options[\"check_changes\"]\n+        # Exit early if --check is specified and there are no changes\n+        if self.check_changes and not self.merge and not self.empty:\n+            if changes:\n+                sys.exit(1)\n+            else:\n+                sys.exit(0)\n         if self.scriptable:\n             self.stderr.style_func = None\n \n@@ -251,8 +257,9 @@ class Command(BaseCommand):\n             if self.update:\n                 self.write_to_last_migration_files(changes)\n             else:\n-                self.write_migration_files(changes)\n-            if check_changes:\n+                if not self.check_changes:\n+                    self.write_migration_files(changes)\n+            if self.check_changes:\n                 sys.exit(1)\n \n     def write_to_last_migration_files(self, changes):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/management/commands/makemigrations.py b/django/core/management/commands/makemigrations.py\nindex be2b711..2759e09 100644\n--- a/django/core/management/commands/makemigrations.py\n+++ b/django/core/management/commands/makemigrations.py\n@@ -49,6 +49,12 @@ class Command(BaseCommand):\n         check_changes = options['check_changes']\n         self.scriptable = options['scriptable']\n         self.update = options['update']\n+        self.check_changes = options['check_changes']\n+        if self.check_changes and (not self.merge) and (not self.empty):\n+            if changes:\n+                sys.exit(1)\n+            else:\n+                sys.exit(0)\n         if self.scriptable:\n             self.stderr.style_func = None\n         app_labels = set(app_labels)\n@@ -107,9 +113,9 @@ class Command(BaseCommand):\n         else:\n             if self.update:\n                 self.write_to_last_migration_files(changes)\n-            else:\n+            elif not self.check_changes:\n                 self.write_migration_files(changes)\n-            if check_changes:\n+            if self.check_changes:\n                 sys.exit(1)\n     def write_to_last_migration_files(self, changes):\n         loader = MigrationLoader(connections[DEFAULT_DB_ALIAS])\n", "normalized_occurrence": 1}
