{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-22456", "model_patch": "diff --git a/sympy/codegen/ast.py b/sympy/codegen/ast.py\nindex 7a7d795..d3e6f3d 100644\n--- a/sympy/codegen/ast.py\n+++ b/sympy/codegen/ast.py\n@@ -898,6 +898,11 @@ class String(Token):\n     not_in_args = ['text']\n     is_Atom = True\n \n+    def __new__(cls, text, **kwargs):\n+        if not isinstance(text, str):\n+            raise TypeError(\"Argument text is not a string type.\")\n+        return Token.__new__(cls, text=text, **kwargs)\n+\n     @classmethod\n     def _construct_text(cls, text):\n         if not isinstance(text, str):\n", "occurrence": 1, "normalized_patch": "--- a/sympy/codegen/ast.py\n+++ b/sympy/codegen/ast.py\n+    def __new__(cls, text, **kwargs):\n+        if not isinstance(text, str):\n+            raise TypeError('Argument text is not a string type.')\n+        return Token.__new__(cls, text=text, **kwargs)\n+", "normalized_occurrence": 1}
