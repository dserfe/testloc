{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-3364", "model_patch": "diff --git a/xarray/core/concat.py b/xarray/core/concat.py\nindex 1ac1b8e..d9ab4c6 100644\n--- a/xarray/core/concat.py\n+++ b/xarray/core/concat.py\n@@ -1,3 +1,4 @@\n+\n import pandas as pd\n \n from . import dtypes, utils\n@@ -313,12 +314,8 @@ def _dataset_concat(\n \n         for ds in datasets:\n             absent_merge_vars = variables_to_merge - set(ds.variables)\n-            if absent_merge_vars:\n-                raise ValueError(\n-                    \"variables %r are present in some datasets but not others. \"\n-                    % absent_merge_vars\n-                )\n-\n+            for var in absent_merge_vars:\n+                ds[var] = Variable(dims_sizes.keys(), fill_value)\n             for var in variables_to_merge:\n                 to_merge[var].append(ds.variables[var])\n \n@@ -367,12 +364,9 @@ def _dataset_concat(\n             result_vars[k] = combined\n \n     result = Dataset(result_vars, attrs=result_attrs)\n-    absent_coord_names = coord_names - set(result.variables)\n-    if absent_coord_names:\n-        raise ValueError(\n-            \"Variables %r are coordinates in some datasets but not others.\"\n-            % absent_coord_names\n-        )\n+    for coord in coord_names:\n+        if coord not in result.variables:\n+            result[coord] = Variable(dims_sizes.keys(), fill_value)\n     result = result.set_coords(coord_names)\n     result.encoding = result_encoding\n \n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/concat.py b/xarray/core/concat.py\nindex 06e5a50..28f3fc5 100644\n--- a/xarray/core/concat.py\n+++ b/xarray/core/concat.py\n@@ -127,8 +127,8 @@ def _dataset_concat(datasets, dim, data_vars, coords, compat, positions, fill_va\n         to_merge = {var: [] for var in variables_to_merge}\n         for ds in datasets:\n             absent_merge_vars = variables_to_merge - set(ds.variables)\n-            if absent_merge_vars:\n-                raise ValueError('variables %r are present in some datasets but not others. ' % absent_merge_vars)\n+            for var in absent_merge_vars:\n+                ds[var] = Variable(dims_sizes.keys(), fill_value)\n             for var in variables_to_merge:\n                 to_merge[var].append(ds.variables[var])\n         for var in variables_to_merge:\n@@ -160,9 +160,9 @@ def _dataset_concat(datasets, dim, data_vars, coords, compat, positions, fill_va\n             assert isinstance(combined, Variable)\n             result_vars[k] = combined\n     result = Dataset(result_vars, attrs=result_attrs)\n-    absent_coord_names = coord_names - set(result.variables)\n-    if absent_coord_names:\n-        raise ValueError('Variables %r are coordinates in some datasets but not others.' % absent_coord_names)\n+    for coord in coord_names:\n+        if coord not in result.variables:\n+            result[coord] = Variable(dims_sizes.keys(), fill_value)\n     result = result.set_coords(coord_names)\n     result.encoding = result_encoding\n     result = result.drop(unlabeled_dims, errors='ignore')\n", "normalized_occurrence": 1}
