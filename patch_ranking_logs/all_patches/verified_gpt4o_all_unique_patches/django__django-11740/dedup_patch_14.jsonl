{"model_name_or_path": "agentless", "instance_id": "django__django-11740", "model_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 816737e..6e5b6c8 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -184,6 +184,7 @@ class MigrationAutodetector:\n         self.generate_removed_fields()\n         self.generate_added_fields()\n         self.generate_altered_fields()\n+        self.generate_foreign_key_dependencies()\n         self.generate_altered_unique_together()\n         self.generate_altered_index_together()\n         self.generate_added_indexes()\n@@ -191,6 +192,24 @@ class MigrationAutodetector:\n         self.generate_altered_db_table()\n         self.generate_altered_order_with_respect_to()\n \n+    def generate_foreign_key_dependencies(self):\n+        \"\"\"\n+        Generate dependencies for foreign key fields.\n+        \"\"\"\n+        for (app_label, model_name), model_state in sorted(self.kept_model_keys):\n+            for field_name, field in model_state.fields.items():\n+                if isinstance(field, models.ForeignKey):\n+                    dependencies = self._get_dependencies_for_foreign_key(field)\n+                    for dep in dependencies:\n+                        self.add_operation(\n+                            app_label,\n+                            operations.AddField(\n+                                model_name=model_name,\n+                                name=field_name,\n+                                field=field,\n+                            )\n+                        )\n+        \n         self._sort_migrations()\n         self._build_migration_list(graph)\n         self._optimize_migrations()\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 9fda64b..03f4f62 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -98,12 +98,20 @@ class MigrationAutodetector:\n         self.generate_removed_fields()\n         self.generate_added_fields()\n         self.generate_altered_fields()\n+        self.generate_foreign_key_dependencies()\n         self.generate_altered_unique_together()\n         self.generate_altered_index_together()\n         self.generate_added_indexes()\n         self.generate_added_constraints()\n         self.generate_altered_db_table()\n         self.generate_altered_order_with_respect_to()\n+    def generate_foreign_key_dependencies(self):\n+        for (app_label, model_name), model_state in sorted(self.kept_model_keys):\n+            for field_name, field in model_state.fields.items():\n+                if isinstance(field, models.ForeignKey):\n+                    dependencies = self._get_dependencies_for_foreign_key(field)\n+                    for dep in dependencies:\n+                        self.add_operation(app_label, operations.AddField(model_name=model_name, name=field_name, field=field))\n         self._sort_migrations()\n         self._build_migration_list(graph)\n         self._optimize_migrations()\n", "normalized_occurrence": 1}
