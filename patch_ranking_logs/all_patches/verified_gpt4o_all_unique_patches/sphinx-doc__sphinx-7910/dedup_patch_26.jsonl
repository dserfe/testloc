{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-7910", "model_patch": "diff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py\nindex f48faa1..68ee063 100644\n--- a/sphinx/util/inspect.py\n+++ b/sphinx/util/inspect.py\n@@ -127,12 +127,14 @@ def unwrap(obj: Any) -> Any:\n         return obj\n \n \n-def unwrap_all(obj: Any, *, stop: Callable = None) -> Any:\n+def unwrap_all(obj: Any, *, stop: Callable = None, max_depth: int = 10) -> Any:\n     \"\"\"\n     Get an original object from wrapped object (unwrapping partials, wrapped\n     functions, and other decorators).\n     \"\"\"\n-    while True:\n+    depth = 0\n+    while depth < max_depth:\n+        depth += 1\n         if stop and stop(obj):\n             return obj\n         elif ispartial(obj):\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py\nindex 6e5e6c6..fe43eed 100644\n--- a/sphinx/util/inspect.py\n+++ b/sphinx/util/inspect.py\n@@ -69,8 +69,10 @@ def unwrap(obj: Any) -> Any:\n         return inspect.unwrap(obj)\n     except ValueError:\n         return obj\n-def unwrap_all(obj: Any, *, stop: Callable=None) -> Any:\n-    while True:\n+def unwrap_all(obj: Any, *, stop: Callable=None, max_depth: int=10) -> Any:\n+    depth = 0\n+    while depth < max_depth:\n+        depth += 1\n         if stop and stop(obj):\n             return obj\n         elif ispartial(obj):\n", "normalized_occurrence": 1}
