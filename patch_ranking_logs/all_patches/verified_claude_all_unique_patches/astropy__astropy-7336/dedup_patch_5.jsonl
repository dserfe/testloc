{"model_name_or_path": "agentless_claude", "instance_id": "astropy__astropy-7336", "model_patch": "diff --git a/astropy/units/decorators.py b/astropy/units/decorators.py\nindex 5ce0659..853ceba 100644\n--- a/astropy/units/decorators.py\n+++ b/astropy/units/decorators.py\n@@ -221,11 +221,12 @@ class QuantityInput:\n             with add_enabled_equivalencies(self.equivalencies):\n                 return_ = wrapped_function(*func_args, **func_kwargs)\n             if wrapped_signature.return_annotation is not inspect.Signature.empty:\n-                return return_.to(wrapped_signature.return_annotation)\n-            else:\n-                return return_\n+                # Don't try to convert the return value if the annotation is None\n+                if wrapped_signature.return_annotation is not None:\n+                    return return_.to(wrapped_signature.return_annotation)\n+            return return_\n \n         return wrapper\n \n \n-quantity_input = QuantityInput.as_decorator\n+quantity_input = QuantityInput.as_decorator\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/units/decorators.py b/astropy/units/decorators.py\nindex a93123e..8719c3b 100644\n--- a/astropy/units/decorators.py\n+++ b/astropy/units/decorators.py\n@@ -78,8 +78,8 @@ class QuantityInput:\n             with add_enabled_equivalencies(self.equivalencies):\n                 return_ = wrapped_function(*func_args, **func_kwargs)\n             if wrapped_signature.return_annotation is not inspect.Signature.empty:\n-                return return_.to(wrapped_signature.return_annotation)\n-            else:\n-                return return_\n+                if wrapped_signature.return_annotation is not None:\n+                    return return_.to(wrapped_signature.return_annotation)\n+            return return_\n         return wrapper\n quantity_input = QuantityInput.as_decorator\n\\ No newline at end of file\n", "normalized_occurrence": 1}
