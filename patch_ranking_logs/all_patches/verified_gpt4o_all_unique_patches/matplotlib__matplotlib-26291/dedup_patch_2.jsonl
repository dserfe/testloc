{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-26291", "model_patch": "diff --git a/lib/matplotlib/offsetbox.py b/lib/matplotlib/offsetbox.py\nindex 8110df0..20084e4 100644\n--- a/lib/matplotlib/offsetbox.py\n+++ b/lib/matplotlib/offsetbox.py\n@@ -392,10 +392,10 @@ class OffsetBox(martist.Artist):\n         bbox = self.get_bbox(renderer)\n         return bbox.width, bbox.height, -bbox.x0, -bbox.y0\n \n-    def get_window_extent(self, renderer=None):\n+    def get_window_extent(self, renderer):\n         # docstring inherited\n         if renderer is None:\n-            renderer = self.figure._get_renderer()\n+            raise ValueError(\"Renderer must be provided.\")\n         bbox = self.get_bbox(renderer)\n         try:  # Some subclasses redefine get_offset to take no args.\n             px, py = self.get_offset(bbox, renderer)\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/offsetbox.py b/lib/matplotlib/offsetbox.py\nindex 509a096..2c4304d 100644\n--- a/lib/matplotlib/offsetbox.py\n+++ b/lib/matplotlib/offsetbox.py\n@@ -358,9 +358,9 @@ class OffsetBox(martist.Artist):\n         bbox = self.get_bbox(renderer)\n         return (bbox.width, bbox.height, -bbox.x0, -bbox.y0)\n \n-    def get_window_extent(self, renderer=None):\n+    def get_window_extent(self, renderer):\n         if renderer is None:\n-            renderer = self.figure._get_renderer()\n+            raise ValueError('Renderer must be provided.')\n         bbox = self.get_bbox(renderer)\n         try:\n             px, py = self.get_offset(bbox, renderer)\n", "normalized_occurrence": 1}
