{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-25973", "model_patch": "diff --git a/sklearn/model_selection/_validation.py b/sklearn/model_selection/_validation.py\nindex 295d6b7..218b7ed 100644\n--- a/sklearn/model_selection/_validation.py\n+++ b/sklearn/model_selection/_validation.py\n@@ -306,7 +306,10 @@ def cross_validate(\n     if callable(scoring):\n         _insert_error_scores(results, error_score)\n \n-    results = _aggregate_score_dicts(results)\n+    if isinstance(cv, _CVIterableWrapper):\n+        results = _aggregate_score_dicts(results, n_splits=cv.get_n_splits())\n+    else:\n+        results = _aggregate_score_dicts(results)\n \n     ret = {}\n     ret[\"fit_time\"] = results[\"fit_time\"]\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/model_selection/_validation.py b/sklearn/model_selection/_validation.py\nindex c8c3425..6b9c1b4 100644\n--- a/sklearn/model_selection/_validation.py\n+++ b/sklearn/model_selection/_validation.py\n@@ -37,7 +37,10 @@ def cross_validate(estimator, X, y=None, *, groups=None, scoring=None, cv=None,\n     _warn_or_raise_about_fit_failures(results, error_score)\n     if callable(scoring):\n         _insert_error_scores(results, error_score)\n-    results = _aggregate_score_dicts(results)\n+    if isinstance(cv, _CVIterableWrapper):\n+        results = _aggregate_score_dicts(results, n_splits=cv.get_n_splits())\n+    else:\n+        results = _aggregate_score_dicts(results)\n     ret = {}\n     ret['fit_time'] = results['fit_time']\n     ret['score_time'] = results['score_time']\n", "normalized_occurrence": 1}
