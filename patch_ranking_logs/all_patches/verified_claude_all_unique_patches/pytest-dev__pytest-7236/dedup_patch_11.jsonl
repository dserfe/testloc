{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-7236", "model_patch": "diff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py\nindex 28ce115..4730c67 100644\n--- a/src/_pytest/unittest.py\n+++ b/src/_pytest/unittest.py\n@@ -220,7 +220,9 @@ class TestCaseFunction(Function):\n             # arguably we could always postpone tearDown(), but this changes the moment where the\n             # TestCase instance interacts with the results object, so better to only do it\n             # when absolutely needed\n-            if self.config.getoption(\"usepdb\"):\n+            test_method = getattr(self._testcase, self.name)\n+            is_skipped = getattr(test_method, \"__unittest_skip__\", False)\n+            if self.config.getoption(\"usepdb\") and not is_skipped:\n                 self._explicit_tearDown = self._testcase.tearDown\n                 setattr(self._testcase, \"tearDown\", lambda *args: None)\n \n", "occurrence": 4, "normalized_patch": "diff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py\nindex 4eb682f..9ed6bdd 100644\n--- a/src/_pytest/unittest.py\n+++ b/src/_pytest/unittest.py\n@@ -152,7 +152,9 @@ class TestCaseFunction(Function):\n         if is_async_function(self.obj):\n             self._testcase(self)\n         else:\n-            if self.config.getoption('usepdb'):\n+            test_method = getattr(self._testcase, self.name)\n+            is_skipped = getattr(test_method, '__unittest_skip__', False)\n+            if self.config.getoption('usepdb') and (not is_skipped):\n                 self._explicit_tearDown = self._testcase.tearDown\n                 setattr(self._testcase, 'tearDown', lambda *args: None)\n             setattr(self._testcase, self.name, self.obj)\n", "normalized_occurrence": 4}
