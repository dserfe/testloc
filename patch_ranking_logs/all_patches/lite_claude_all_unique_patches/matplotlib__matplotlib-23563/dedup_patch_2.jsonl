{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-23563", "model_patch": "diff --git a/lib/mpl_toolkits/mplot3d/art3d.py b/lib/mpl_toolkits/mplot3d/art3d.py\nindex fa869c7..1c2c33d 100644\n--- a/lib/mpl_toolkits/mplot3d/art3d.py\n+++ b/lib/mpl_toolkits/mplot3d/art3d.py\n@@ -211,6 +211,14 @@ class Line3D(lines.Line2D):\n \n     @artist.allow_rasterization\n     def draw(self, renderer):\n+        # Ensure _verts3d exists and is valid\n+        if not hasattr(self, '_verts3d') or self._verts3d is None:\n+            # If no 3D data available, try to reconstruct from 2D data\n+            xs = self.get_xdata()\n+            ys = self.get_ydata()\n+            zs = np.zeros_like(xs)  # Default to z=0\n+            self._verts3d = (xs, ys, zs)\n+        \n         xs3d, ys3d, zs3d = self._verts3d\n         xs, ys, zs = proj3d.proj_transform(xs3d, ys3d, zs3d, self.axes.M)\n         self.set_data(xs, ys)\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/mpl_toolkits/mplot3d/art3d.py b/lib/mpl_toolkits/mplot3d/art3d.py\nindex e39ff0d..fc4c08a 100644\n--- a/lib/mpl_toolkits/mplot3d/art3d.py\n+++ b/lib/mpl_toolkits/mplot3d/art3d.py\n@@ -81,6 +81,11 @@ class Line3D(lines.Line2D):\n         return self._verts3d\n     @artist.allow_rasterization\n     def draw(self, renderer):\n+        if not hasattr(self, '_verts3d') or self._verts3d is None:\n+            xs = self.get_xdata()\n+            ys = self.get_ydata()\n+            zs = np.zeros_like(xs)\n+            self._verts3d = (xs, ys, zs)\n         xs3d, ys3d, zs3d = self._verts3d\n         xs, ys, zs = proj3d.proj_transform(xs3d, ys3d, zs3d, self.axes.M)\n         self.set_data(xs, ys)\n", "normalized_occurrence": 1}
