{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-15976", "model_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 85af872..84e41d2 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -772,8 +772,39 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n             else:\n                 return s\n \n-        name, supers, subs = split_super_sub(sym.name)\n-        name = translate(name)\n+        # Check if the symbol name contains explicit subscripts/superscripts\n+        if '_' in sym.name or '^' in sym.name:\n+            name, supers, subs = split_super_sub(sym.name)\n+            name = translate(name)\n+            supers = [translate(sup) for sup in supers]\n+            subs = [translate(sub) for sub in subs]\n+\n+            mname = self.dom.createElement('mi')\n+            mname.appendChild(self.dom.createTextNode(name))\n+            if len(supers) == 0:\n+                if len(subs) == 0:\n+                    x.appendChild(self.dom.createTextNode(name))\n+                else:\n+                    msub = self.dom.createElement('msub')\n+                    msub.appendChild(mname)\n+                    msub.appendChild(join(subs))\n+                    x.appendChild(msub)\n+            else:\n+                if len(subs) == 0:\n+                    msup = self.dom.createElement('msup')\n+                    msup.appendChild(mname)\n+                    msup.appendChild(join(supers))\n+                    x.appendChild(msup)\n+                else:\n+                    msubsup = self.dom.createElement('msubsup')\n+                    msubsup.appendChild(mname)\n+                    msubsup.appendChild(join(subs))\n+                    msubsup.appendChild(join(supers))\n+                    x.appendChild(msubsup)\n+        else:\n+            # Handle the symbol name as is without splitting\n+            name = translate(sym.name)\n+            x.appendChild(self.dom.createTextNode(name))\n         supers = [translate(sup) for sup in supers]\n         subs = [translate(sub) for sub in subs]\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 28d3e1a..cf95de7 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -540,8 +540,35 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n                 return greek_unicode.get(s)\n             else:\n                 return s\n-        name, supers, subs = split_super_sub(sym.name)\n-        name = translate(name)\n+        if '_' in sym.name or '^' in sym.name:\n+            name, supers, subs = split_super_sub(sym.name)\n+            name = translate(name)\n+            supers = [translate(sup) for sup in supers]\n+            subs = [translate(sub) for sub in subs]\n+            mname = self.dom.createElement('mi')\n+            mname.appendChild(self.dom.createTextNode(name))\n+            if len(supers) == 0:\n+                if len(subs) == 0:\n+                    x.appendChild(self.dom.createTextNode(name))\n+                else:\n+                    msub = self.dom.createElement('msub')\n+                    msub.appendChild(mname)\n+                    msub.appendChild(join(subs))\n+                    x.appendChild(msub)\n+            elif len(subs) == 0:\n+                msup = self.dom.createElement('msup')\n+                msup.appendChild(mname)\n+                msup.appendChild(join(supers))\n+                x.appendChild(msup)\n+            else:\n+                msubsup = self.dom.createElement('msubsup')\n+                msubsup.appendChild(mname)\n+                msubsup.appendChild(join(subs))\n+                msubsup.appendChild(join(supers))\n+                x.appendChild(msubsup)\n+        else:\n+            name = translate(sym.name)\n+            x.appendChild(self.dom.createTextNode(name))\n         supers = [translate(sup) for sup in supers]\n         subs = [translate(sub) for sub in subs]\n         mname = self.dom.createElement('mi')\n", "normalized_occurrence": 1}
