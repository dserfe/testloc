{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-18869", "model_patch": "diff --git a/lib/matplotlib/__init__.py b/lib/matplotlib/__init__.py\nindex 320d1a7..1b433ff 100644\n--- a/lib/matplotlib/__init__.py\n+++ b/lib/matplotlib/__init__.py\n@@ -130,7 +130,17 @@ __bibtex__ = r\"\"\"@Article{Hunter:2007,\n }\"\"\"\n \n \n+import re\n+\n+def _parse_version(version):\n+    match = re.match(r\"(\\d+)\\.(\\d+)\\.(\\d+)(.*)\", version)\n+    major, minor, micro, extra = match.groups()\n+    extra = extra or \"\"\n+    return int(major), int(minor), int(micro), extra\n+\n def __getattr__(name):\n+    if name == \"version_info\":\n+        return _parse_version(__version__)\n     if name == \"__version__\":\n         import setuptools_scm\n         global __version__  # cache it.\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/__init__.py b/lib/matplotlib/__init__.py\nindex 4b4b135..069192d 100644\n--- a/lib/matplotlib/__init__.py\n+++ b/lib/matplotlib/__init__.py\n@@ -25,7 +25,15 @@ from matplotlib.cbook import mplDeprecation\n from matplotlib.rcsetup import validate_backend, cycler\n _log = logging.getLogger(__name__)\n __bibtex__ = '@Article{Hunter:2007,\\n  Author    = {Hunter, J. D.},\\n  Title     = {Matplotlib: A 2D graphics environment},\\n  Journal   = {Computing in Science \\\\& Engineering},\\n  Volume    = {9},\\n  Number    = {3},\\n  Pages     = {90--95},\\n  abstract  = {Matplotlib is a 2D graphics package used for Python\\n  for application development, interactive scripting, and\\n  publication-quality image generation across user\\n  interfaces and operating systems.},\\n  publisher = {IEEE COMPUTER SOC},\\n  year      = 2007\\n}'\n+import re\n+def _parse_version(version):\n+    match = re.match('(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(.*)', version)\n+    major, minor, micro, extra = match.groups()\n+    extra = extra or ''\n+    return (int(major), int(minor), int(micro), extra)\n def __getattr__(name):\n+    if name == 'version_info':\n+        return _parse_version(__version__)\n     if name == '__version__':\n         import setuptools_scm\n         global __version__\n", "normalized_occurrence": 1}
