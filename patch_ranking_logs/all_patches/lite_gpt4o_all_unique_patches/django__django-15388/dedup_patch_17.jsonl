{"model_name_or_path": "agentless", "instance_id": "django__django-15388", "model_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex dcf3cdd..8da8b76 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -255,11 +255,14 @@ def get_child_arguments():\n \n def trigger_reload(filename):\n     logger.info('%s changed, reloading.', filename)\n-    sys.exit(3)\n+    if 'BASE_DIR' in filename:\n+        sys.exit(3)\n+    else:\n+        sys.exit(3)\n \n \n def restart_with_reloader():\n-    new_environ = {**os.environ, DJANGO_AUTORELOAD_ENV: 'true'}\n+    new_environ = {**os.environ, 'DJANGO_AUTORELOAD_ENV': 'true'}\n     args = get_child_arguments()\n     while True:\n         p = subprocess.run(args, env=new_environ, close_fds=False)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex 4cc598a..8b05c97 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -157,9 +157,12 @@ def get_child_arguments():\n     return args\n def trigger_reload(filename):\n     logger.info('%s changed, reloading.', filename)\n-    sys.exit(3)\n+    if 'BASE_DIR' in filename:\n+        sys.exit(3)\n+    else:\n+        sys.exit(3)\n def restart_with_reloader():\n-    new_environ = {**os.environ, DJANGO_AUTORELOAD_ENV: 'true'}\n+    new_environ = {**os.environ, 'DJANGO_AUTORELOAD_ENV': 'true'}\n     args = get_child_arguments()\n     while True:\n         p = subprocess.run(args, env=new_environ, close_fds=False)\n", "normalized_occurrence": 1}
