{"model_name_or_path": "agentless", "instance_id": "django__django-16950", "model_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex f9e6a6e..850bd1b 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -217,7 +217,10 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n \n             return formfield\n \n-        # If we've got overrides for the formfield defined, use 'em. **kwargs\n+        # Handle UUIDField default value\n+        if isinstance(db_field, models.UUIDField):\n+            if 'initial' not in kwargs:\n+                kwargs['initial'] = db_field.default() if callable(db_field.default) else db_field.default\n         # passed to formfield_for_dbfield override the defaults.\n         for klass in db_field.__class__.mro():\n             if klass in self.formfield_overrides:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 7be1ef7..78841c9 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -96,6 +96,9 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n                     wrapper_kwargs = {'can_add_related': related_modeladmin.has_add_permission(request), 'can_change_related': related_modeladmin.has_change_permission(request), 'can_delete_related': related_modeladmin.has_delete_permission(request), 'can_view_related': related_modeladmin.has_view_permission(request)}\n                 formfield.widget = widgets.RelatedFieldWidgetWrapper(formfield.widget, db_field.remote_field, self.admin_site, **wrapper_kwargs)\n             return formfield\n+        if isinstance(db_field, models.UUIDField):\n+            if 'initial' not in kwargs:\n+                kwargs['initial'] = db_field.default() if callable(db_field.default) else db_field.default\n         for klass in db_field.__class__.mro():\n             if klass in self.formfield_overrides:\n                 kwargs = {**copy.deepcopy(self.formfield_overrides[klass]), **kwargs}\n", "normalized_occurrence": 1}
