{"model_name_or_path": "agentless_claude", "instance_id": "pylint-dev__pylint-5859", "model_patch": "diff --git a/pylint/checkers/misc.py b/pylint/checkers/misc.py\nindex e597487..273d9ce 100644\n--- a/pylint/checkers/misc.py\n+++ b/pylint/checkers/misc.py\n@@ -123,7 +123,7 @@ class EncodingChecker(BaseChecker):\n         if self.config.notes_rgx:\n             regex_string = rf\"#\\s*({notes}|{self.config.notes_rgx})\\b\"\n         else:\n-            regex_string = rf\"#\\s*({notes})\\b\"\n+            regex_string = rf\"#\\s*({notes})(?=\\s|$)\"\n \n         self._fixme_pattern = re.compile(regex_string, re.I)\n \n", "occurrence": 2, "normalized_patch": "diff --git a/pylint/checkers/misc.py b/pylint/checkers/misc.py\nindex 71f2810..818f2bd 100644\n--- a/pylint/checkers/misc.py\n+++ b/pylint/checkers/misc.py\n@@ -36,7 +36,7 @@ class EncodingChecker(BaseChecker):\n         if self.config.notes_rgx:\n             regex_string = f'#\\\\s*({notes}|{self.config.notes_rgx})\\\\b'\n         else:\n-            regex_string = f'#\\\\s*({notes})\\\\b'\n+            regex_string = f'#\\\\s*({notes})(?=\\\\s|$)'\n         self._fixme_pattern = re.compile(regex_string, re.I)\n     def _check_encoding(self, lineno: int, line: bytes, file_encoding: str) -> Optional[str]:\n         try:\n", "normalized_occurrence": 2}
