{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-11870", "model_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex bd243c1..9322276 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -495,11 +495,14 @@ def trigsimp(expr, **opts):\n             args = [traverse(x) for x in e.args]\n             if e.is_Function or e.is_Pow:\n                 args = [trigsimp_groebner(x, **opts) for x in args]\n+            if e.func == exp:\n+                return exptrigsimp(e)\n             return e.func(*args)\n         new = traverse(ex)\n         if not isinstance(new, Expr):\n             return new\n-        return trigsimp_groebner(new, **opts)\n+        new = trigsimp_groebner(new, **opts)\n+        return exptrigsimp(new)\n \n     trigsimpfunc = {\n         'fu': (lambda x: fu(x, **opts)),\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex 8c4936d..2fa3b6e 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -165,11 +165,14 @@ def trigsimp(expr, **opts):\n             args = [traverse(x) for x in e.args]\n             if e.is_Function or e.is_Pow:\n                 args = [trigsimp_groebner(x, **opts) for x in args]\n+            if e.func == exp:\n+                return exptrigsimp(e)\n             return e.func(*args)\n         new = traverse(ex)\n         if not isinstance(new, Expr):\n             return new\n-        return trigsimp_groebner(new, **opts)\n+        new = trigsimp_groebner(new, **opts)\n+        return exptrigsimp(new)\n     trigsimpfunc = {'fu': lambda x: fu(x, **opts), 'matching': lambda x: futrig(x), 'groebner': lambda x: groebnersimp(x, **opts), 'combined': lambda x: futrig(groebnersimp(x, polynomial=True, hints=[2, tan])), 'old': lambda x: trigsimp_old(x, **opts)}[method]\n     return trigsimpfunc(expr)\n def exptrigsimp(expr):\n", "normalized_occurrence": 1}
