{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12858", "model_patch": "diff --git a/django/db/models/lookups.py b/django/db/models/lookups.py\nindex 9cf4391..c7cb844 100644\n--- a/django/db/models/lookups.py\n+++ b/django/db/models/lookups.py\n@@ -485,8 +485,9 @@ class Range(FieldGetDbPrepValueIterableMixin, BuiltinLookup):\n \n \n @Field.register_lookup\n-class IsNull(BuiltinLookup):\n+class IsNull(Transform):\n     lookup_name = 'isnull'\n+    output_field = BooleanField()\n     prepare_rhs = False\n \n     def as_sql(self, compiler, connection):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/lookups.py b/django/db/models/lookups.py\nindex 5a8ba48..e494c93 100644\n--- a/django/db/models/lookups.py\n+++ b/django/db/models/lookups.py\n@@ -324,8 +324,9 @@ class Range(FieldGetDbPrepValueIterableMixin, BuiltinLookup):\n     def get_rhs_op(self, connection, rhs):\n         return 'BETWEEN %s AND %s' % (rhs[0], rhs[1])\n @Field.register_lookup\n-class IsNull(BuiltinLookup):\n+class IsNull(Transform):\n     lookup_name = 'isnull'\n+    output_field = BooleanField()\n     prepare_rhs = False\n     def as_sql(self, compiler, connection):\n         if not isinstance(self.rhs, bool):\n", "normalized_occurrence": 1}
