{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-23191", "model_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 4e979d2..518d542 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -95,13 +95,16 @@ class PrettyPrinter(Printer):\n     def _print_Cross(self, e):\n         vec1 = e._expr1\n         vec2 = e._expr2\n-        pform = self._print(vec2)\n-        pform = prettyForm(*pform.left('('))\n-        pform = prettyForm(*pform.right(')'))\n-        pform = prettyForm(*pform.left(self._print(U('MULTIPLICATION SIGN'))))\n-        pform = prettyForm(*pform.left(')'))\n-        pform = prettyForm(*pform.left(self._print(vec1)))\n-        pform = prettyForm(*pform.left('('))\n+        # Print first vector\n+        pform = self._print(vec1)\n+        pform = prettyForm(*pform.parens())\n+        # Add cross product symbol\n+        pform = prettyForm(*pform.right(self._print(U('MULTIPLICATION SIGN'))))\n+        # Print second vector\n+        pform2 = self._print(vec2)\n+        pform2 = prettyForm(*pform2.parens())\n+        # Combine them\n+        pform = prettyForm(*pform.right(pform2))\n         return pform\n \n     def _print_Curl(self, e):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex b00c794..60dc7bf 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -60,13 +60,12 @@ class PrettyPrinter(Printer):\n     def _print_Cross(self, e):\n         vec1 = e._expr1\n         vec2 = e._expr2\n-        pform = self._print(vec2)\n-        pform = prettyForm(*pform.left('('))\n-        pform = prettyForm(*pform.right(')'))\n-        pform = prettyForm(*pform.left(self._print(U('MULTIPLICATION SIGN'))))\n-        pform = prettyForm(*pform.left(')'))\n-        pform = prettyForm(*pform.left(self._print(vec1)))\n-        pform = prettyForm(*pform.left('('))\n+        pform = self._print(vec1)\n+        pform = prettyForm(*pform.parens())\n+        pform = prettyForm(*pform.right(self._print(U('MULTIPLICATION SIGN'))))\n+        pform2 = self._print(vec2)\n+        pform2 = prettyForm(*pform2.parens())\n+        pform = prettyForm(*pform.right(pform2))\n         return pform\n     def _print_Curl(self, e):\n         vec = e._expr\n", "normalized_occurrence": 1}
