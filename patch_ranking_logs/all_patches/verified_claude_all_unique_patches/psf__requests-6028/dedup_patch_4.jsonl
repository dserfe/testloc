{"model_name_or_path": "agentless_claude", "instance_id": "psf__requests-6028", "model_patch": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex d47134b..1d8a87c 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -386,6 +386,10 @@ class HTTPAdapter(BaseAdapter):\n         headers = {}\n         username, password = get_auth_from_url(proxy)\n \n+        if not username and isinstance(proxy, dict):\n+            username = proxy.get('user')\n+            password = proxy.get('pass')\n+\n         if username:\n             headers['Proxy-Authorization'] = _basic_auth_str(username,\n                                                              password)\n", "occurrence": 1, "normalized_patch": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex 8bf110e..0f459fa 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -156,6 +156,9 @@ class HTTPAdapter(BaseAdapter):\n     def proxy_headers(self, proxy):\n         headers = {}\n         username, password = get_auth_from_url(proxy)\n+        if not username and isinstance(proxy, dict):\n+            username = proxy.get('user')\n+            password = proxy.get('pass')\n         if username:\n             headers['Proxy-Authorization'] = _basic_auth_str(username, password)\n         return headers\n", "normalized_occurrence": 1}
