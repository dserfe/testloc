{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11532", "model_patch": "diff --git a/django/core/mail/utils.py b/django/core/mail/utils.py\nindex af5ac38..355cc5d 100644\n--- a/django/core/mail/utils.py\n+++ b/django/core/mail/utils.py\n@@ -1,3 +1,4 @@\n+\n \"\"\"\n Email message and email sending related helper functions.\n \"\"\"\n@@ -13,8 +14,8 @@ class CachedDnsName:\n \n     def get_fqdn(self):\n         if not hasattr(self, '_fqdn'):\n-            self._fqdn = socket.getfqdn()\n+            self._fqdn = socket.getfqdn().encode('idna').decode('ascii')\n         return self._fqdn\n \n \n-DNS_NAME = CachedDnsName()\n+DNS_NAME = CachedDnsName()\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/mail/utils.py b/django/core/mail/utils.py\nindex f3d6156..3a7b039 100644\n--- a/django/core/mail/utils.py\n+++ b/django/core/mail/utils.py\n@@ -4,6 +4,6 @@ class CachedDnsName:\n         return self.get_fqdn()\n     def get_fqdn(self):\n         if not hasattr(self, '_fqdn'):\n-            self._fqdn = socket.getfqdn()\n+            self._fqdn = socket.getfqdn().encode('idna').decode('ascii')\n         return self._fqdn\n DNS_NAME = CachedDnsName()\n\\ No newline at end of file\n", "normalized_occurrence": 1}
