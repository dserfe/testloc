{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8269", "model_patch": "diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py\nindex 8266583..a4d83d9 100644\n--- a/sphinx/builders/linkcheck.py\n+++ b/sphinx/builders/linkcheck.py\n@@ -183,15 +183,6 @@ class CheckExternalLinksBuilder(Builder):\n                         response = requests.get(req_url, stream=True, config=self.app.config,\n                                                 auth=auth_info, **kwargs)\n                         response.raise_for_status()\n-            except HTTPError as err:\n-                if err.response.status_code == 401:\n-                    # We'll take \"Unauthorized\" as working.\n-                    return 'working', ' - unauthorized', 0\n-                elif err.response.status_code == 503:\n-                    # We'll take \"Service Unavailable\" as ignored.\n-                    return 'ignored', str(err), 0\n-                else:\n-                    return 'broken', str(err), 0\n             except Exception as err:\n                 if is_ssl_error(err):\n                     return 'ignored', str(err), 0\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py\nindex ace1ed3..07c76ac 100644\n--- a/sphinx/builders/linkcheck.py\n+++ b/sphinx/builders/linkcheck.py\n@@ -107,13 +107,6 @@ class CheckExternalLinksBuilder(Builder):\n                     except HTTPError:\n                         response = requests.get(req_url, stream=True, config=self.app.config, auth=auth_info, **kwargs)\n                         response.raise_for_status()\n-            except HTTPError as err:\n-                if err.response.status_code == 401:\n-                    return ('working', ' - unauthorized', 0)\n-                elif err.response.status_code == 503:\n-                    return ('ignored', str(err), 0)\n-                else:\n-                    return ('broken', str(err), 0)\n             except Exception as err:\n                 if is_ssl_error(err):\n                     return ('ignored', str(err), 0)\n", "normalized_occurrence": 1}
