{"model_name_or_path": "agentless", "instance_id": "django__django-16315", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 9211371..5fb58eb 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -786,7 +786,8 @@ class QuerySet(AltersData):\n         if unique_fields:\n             # Primary key is allowed in unique_fields.\n             unique_fields = [\n-                opts.pk.name if name == \"pk\" else name for name in unique_fields\n+                opts.pk.db_column if name == \"pk\" else opts.get_field(name).db_column or name\n+                for name in unique_fields\n             ]\n         on_conflict = self._check_bulk_create_options(\n             ignore_conflicts,\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 6f2160b..cfd5713 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -394,7 +394,7 @@ class QuerySet(AltersData):\n             return objs\n         opts = self.model._meta\n         if unique_fields:\n-            unique_fields = [opts.pk.name if name == 'pk' else name for name in unique_fields]\n+            unique_fields = [opts.pk.db_column if name == 'pk' else opts.get_field(name).db_column or name for name in unique_fields]\n         on_conflict = self._check_bulk_create_options(ignore_conflicts, update_conflicts, update_fields, unique_fields)\n         self._for_write = True\n         fields = opts.concrete_fields\n", "normalized_occurrence": 1}
