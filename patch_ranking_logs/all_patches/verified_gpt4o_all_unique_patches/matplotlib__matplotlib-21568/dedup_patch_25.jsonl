{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-21568", "model_patch": "diff --git a/lib/matplotlib/dates.py b/lib/matplotlib/dates.py\nindex f565bc8..bbe3b3f 100644\n--- a/lib/matplotlib/dates.py\n+++ b/lib/matplotlib/dates.py\n@@ -770,7 +770,10 @@ class ConciseDateFormatter(ticker.Formatter):\n     def __call__(self, x, pos=None):\n         formatter = DateFormatter(self.defaultfmt, self._tz,\n                                   usetex=self._usetex)\n-        return formatter(x, pos=pos)\n+        result = formatter(x, pos=pos)\n+        if self._usetex:\n+            result = result.replace(\" \", \"\\\\, \")\n+        return result\n \n     def format_ticks(self, values):\n         tickdatetime = [num2date(value, tz=self._tz) for value in values]\n@@ -971,6 +974,8 @@ class AutoDateFormatter(ticker.Formatter):\n         else:\n             raise TypeError('Unexpected type passed to {0!r}.'.format(self))\n \n+        if self._usetex:\n+            result = result.replace(\" \", \"\\\\, \")\n         return result\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/dates.py b/lib/matplotlib/dates.py\nindex 71de92e..6248266 100644\n--- a/lib/matplotlib/dates.py\n+++ b/lib/matplotlib/dates.py\n@@ -187,7 +187,10 @@ class ConciseDateFormatter(ticker.Formatter):\n         self._usetex = usetex if usetex is not None else mpl.rcParams['text.usetex']\n     def __call__(self, x, pos=None):\n         formatter = DateFormatter(self.defaultfmt, self._tz, usetex=self._usetex)\n-        return formatter(x, pos=pos)\n+        result = formatter(x, pos=pos)\n+        if self._usetex:\n+            result = result.replace(' ', '\\\\, ')\n+        return result\n     def format_ticks(self, values):\n         tickdatetime = [num2date(value, tz=self._tz) for value in values]\n         tickdate = np.array([tdt.timetuple()[:6] for tdt in tickdatetime])\n@@ -256,6 +259,8 @@ class AutoDateFormatter(ticker.Formatter):\n             result = fmt(x, pos)\n         else:\n             raise TypeError('Unexpected type passed to {0!r}.'.format(self))\n+        if self._usetex:\n+            result = result.replace(' ', '\\\\, ')\n         return result\n class rrulewrapper:\n     def __init__(self, freq, tzinfo=None, **kwargs):\n", "normalized_occurrence": 1}
