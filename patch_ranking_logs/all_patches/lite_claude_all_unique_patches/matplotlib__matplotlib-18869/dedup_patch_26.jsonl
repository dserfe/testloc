{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-18869", "model_patch": "diff --git a/lib/matplotlib/__init__.py b/lib/matplotlib/__init__.py\nindex 320d1a7..b19c4e4 100644\n--- a/lib/matplotlib/__init__.py\n+++ b/lib/matplotlib/__init__.py\n@@ -536,6 +536,10 @@ def matplotlib_fname():\n     raise RuntimeError(\"Could not find matplotlibrc file; your Matplotlib \"\n                        \"install is broken\")\n \n+# Convert __version__ string to tuple for easier comparison\n+version_info = tuple(int(v) if v.isdigit() else v\n+                    for v in __version__.replace('rc', '.').split('.'))\n+\n \n # rcParams deprecated and automatically mapped to another key.\n # Values are tuples of (version, new_name, f_old2new, f_new2old).\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/__init__.py b/lib/matplotlib/__init__.py\nindex 4b4b135..58aac45 100644\n--- a/lib/matplotlib/__init__.py\n+++ b/lib/matplotlib/__init__.py\n@@ -203,6 +203,7 @@ def matplotlib_fname():\n         if os.path.exists(fname) and (not os.path.isdir(fname)):\n             return fname\n     raise RuntimeError('Could not find matplotlibrc file; your Matplotlib install is broken')\n+version_info = tuple((int(v) if v.isdigit() else v for v in __version__.replace('rc', '.').split('.')))\n _deprecated_map = {}\n _deprecated_ignore_map = {'mpl_toolkits.legacy_colorbar': ('3.4', None)}\n _deprecated_remain_as_none = {'animation.avconv_path': ('3.3',), 'animation.avconv_args': ('3.3',), 'animation.html_args': ('3.3',)}\n", "normalized_occurrence": 1}
