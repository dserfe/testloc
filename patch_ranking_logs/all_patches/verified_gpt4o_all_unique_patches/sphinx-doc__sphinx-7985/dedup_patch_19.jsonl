{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-7985", "model_patch": "diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py\nindex 4e6b0df..843aa13 100644\n--- a/sphinx/builders/linkcheck.py\n+++ b/sphinx/builders/linkcheck.py\n@@ -212,7 +212,10 @@ class CheckExternalLinksBuilder(Builder):\n             # check for various conditions without bothering the network\n             if len(uri) == 0 or uri.startswith(('#', 'mailto:', 'ftp:')):\n                 return 'unchecked', '', 0\n-            elif not uri.startswith(('http:', 'https:')):\n+            elif not uri.startswith(('http:', 'https:', 'ftp:')):\n+                local_path = path.join(self.srcdir, uri)\n+                if not path.exists(local_path):\n+                    return 'broken', 'Local file does not exist', 0\n                 return 'local', '', 0\n             elif uri in self.good:\n                 return 'working', 'old', 0\n@@ -268,9 +271,14 @@ class CheckExternalLinksBuilder(Builder):\n                 logger.info(darkgray('-ignored- ') + uri)\n             self.write_linkstat(linkstat)\n         elif status == 'local':\n-            logger.info(darkgray('-local-   ') + uri)\n-            self.write_entry('local', docname, filename, lineno, uri)\n-            self.write_linkstat(linkstat)\n+            local_path = path.join(self.srcdir, uri)\n+            if path.exists(local_path):\n+                logger.info(darkgreen('ok        ') + uri)\n+                self.write_linkstat(linkstat)\n+            else:\n+                logger.info(red('broken    ') + uri + red(' - Local file does not exist'))\n+                self.write_entry('broken', docname, filename, lineno, uri + ': Local file does not exist')\n+                self.write_linkstat(linkstat)\n         elif status == 'working':\n             logger.info(darkgreen('ok        ') + uri + info)\n             self.write_linkstat(linkstat)\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py\nindex f6c8f65..7885c03 100644\n--- a/sphinx/builders/linkcheck.py\n+++ b/sphinx/builders/linkcheck.py\n@@ -132,7 +132,10 @@ class CheckExternalLinksBuilder(Builder):\n         def check() -> Tuple[str, str, int]:\n             if len(uri) == 0 or uri.startswith(('#', 'mailto:', 'ftp:')):\n                 return ('unchecked', '', 0)\n-            elif not uri.startswith(('http:', 'https:')):\n+            elif not uri.startswith(('http:', 'https:', 'ftp:')):\n+                local_path = path.join(self.srcdir, uri)\n+                if not path.exists(local_path):\n+                    return ('broken', 'Local file does not exist', 0)\n                 return ('local', '', 0)\n             elif uri in self.good:\n                 return ('working', 'old', 0)\n@@ -179,9 +182,14 @@ class CheckExternalLinksBuilder(Builder):\n                 logger.info(darkgray('-ignored- ') + uri)\n             self.write_linkstat(linkstat)\n         elif status == 'local':\n-            logger.info(darkgray('-local-   ') + uri)\n-            self.write_entry('local', docname, filename, lineno, uri)\n-            self.write_linkstat(linkstat)\n+            local_path = path.join(self.srcdir, uri)\n+            if path.exists(local_path):\n+                logger.info(darkgreen('ok        ') + uri)\n+                self.write_linkstat(linkstat)\n+            else:\n+                logger.info(red('broken    ') + uri + red(' - Local file does not exist'))\n+                self.write_entry('broken', docname, filename, lineno, uri + ': Local file does not exist')\n+                self.write_linkstat(linkstat)\n         elif status == 'working':\n             logger.info(darkgreen('ok        ') + uri + info)\n             self.write_linkstat(linkstat)\n", "normalized_occurrence": 1}
