{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-18087", "model_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex 73bbc98..fdd3599 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -1117,10 +1117,16 @@ def _futrig(e, **kwargs):\n         TR8, TR6, TR15, TR16, TR111, TR5, TRmorrie, TR11, TR14, TR22,\n         TR12)\n     from sympy.core.compatibility import _nodes\n+    from sympy import sqrt, sin\n \n     if not e.has(TrigonometricFunction):\n         return e\n \n+    # Protect sqrt(sin(x)**2) from being simplified when x could be complex\n+    if isinstance(e, sqrt) and e.args[0].is_Pow and isinstance(e.args[0].base, sin) and e.args[0].exp == 2:\n+        if not e.args[0].base.args[0].is_extended_real:\n+            return e\n+\n     if e.is_Mul:\n         coeff, e = e.as_independent(TrigonometricFunction)\n     else:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex fb82ea6..c71837c 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -494,8 +494,12 @@ def futrig(e, **kwargs):\n def _futrig(e, **kwargs):\n     from sympy.simplify.fu import TR1, TR2, TR3, TR2i, TR10, L, TR10i, TR8, TR6, TR15, TR16, TR111, TR5, TRmorrie, TR11, TR14, TR22, TR12\n     from sympy.core.compatibility import _nodes\n+    from sympy import sqrt, sin\n     if not e.has(TrigonometricFunction):\n         return e\n+    if isinstance(e, sqrt) and e.args[0].is_Pow and isinstance(e.args[0].base, sin) and (e.args[0].exp == 2):\n+        if not e.args[0].base.args[0].is_extended_real:\n+            return e\n     if e.is_Mul:\n         coeff, e = e.as_independent(TrigonometricFunction)\n     else:\n", "normalized_occurrence": 1}
