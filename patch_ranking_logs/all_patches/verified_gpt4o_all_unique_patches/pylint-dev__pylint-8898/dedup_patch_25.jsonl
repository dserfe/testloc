{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-8898", "model_patch": "diff --git a/pylint/config/argument.py b/pylint/config/argument.py\nindex 58062ab..a53126f 100644\n--- a/pylint/config/argument.py\n+++ b/pylint/config/argument.py\n@@ -113,8 +113,14 @@ def _regex_transformer(value: str) -> Pattern[str]:\n \n def _regexp_csv_transfomer(value: str) -> Sequence[Pattern[str]]:\n     \"\"\"Transforms a comma separated list of regular expressions.\"\"\"\n+    def custom_csv_parser(value: str) -> list[str]:\n+        \"\"\"Parse a CSV string while handling commas within parentheses.\"\"\"\n+        import re\n+        parts = re.findall(r'\\([^)]*\\)|[^,]+', value)\n+        return [part.strip() for part in parts]\n+\n     patterns: list[Pattern[str]] = []\n-    for pattern in _csv_transformer(value):\n+    for pattern in custom_csv_parser(value):\n         patterns.append(_regex_transformer(pattern))\n     return patterns\n \n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/config/argument.py b/pylint/config/argument.py\nindex 61d66ca..99aedc9 100644\n--- a/pylint/config/argument.py\n+++ b/pylint/config/argument.py\n@@ -54,8 +54,12 @@ def _regex_transformer(value: str) -> Pattern[str]:\n         msg = f'Error in provided regular expression: {value} beginning at index {e.pos}: {e.msg}'\n         raise argparse.ArgumentTypeError(msg) from e\n def _regexp_csv_transfomer(value: str) -> Sequence[Pattern[str]]:\n+    def custom_csv_parser(value: str) -> list[str]:\n+        import re\n+        parts = re.findall('\\\\([^)]*\\\\)|[^,]+', value)\n+        return [part.strip() for part in parts]\n     patterns: list[Pattern[str]] = []\n-    for pattern in _csv_transformer(value):\n+    for pattern in custom_csv_parser(value):\n         patterns.append(_regex_transformer(pattern))\n     return patterns\n def _regexp_paths_csv_transfomer(value: str) -> Sequence[Pattern[str]]:\n", "normalized_occurrence": 1}
