{"model_name_or_path": "agentless", "instance_id": "django__django-13569", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 324369a..e174595 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -129,6 +129,9 @@ class SQLCompiler:\n             # Skip References to the select clause, as all expressions in the\n             # select clause are already part of the group by.\n             if not is_ref:\n+                # Skip Random expressions in the group by clause.\n+                if isinstance(expr, Random):\n+                    continue\n                 expressions.extend(expr.get_group_by_cols())\n         having_group_by = self.having.get_group_by_cols() if self.having else ()\n         for expr in having_group_by:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex f76d039..5bfd6d5 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -57,6 +57,8 @@ class SQLCompiler:\n                 expressions.append(col)\n         for expr, (sql, params, is_ref) in order_by:\n             if not is_ref:\n+                if isinstance(expr, Random):\n+                    continue\n                 expressions.extend(expr.get_group_by_cols())\n         having_group_by = self.having.get_group_by_cols() if self.having else ()\n         for expr in having_group_by:\n", "normalized_occurrence": 11}
