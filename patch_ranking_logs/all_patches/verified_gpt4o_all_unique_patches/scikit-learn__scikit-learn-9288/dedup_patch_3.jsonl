{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-9288", "model_patch": "diff --git a/sklearn/cluster/k_means_.py b/sklearn/cluster/k_means_.py\nindex 915d041..1f24ca2 100644\n--- a/sklearn/cluster/k_means_.py\n+++ b/sklearn/cluster/k_means_.py\n@@ -334,7 +334,12 @@ def k_means(X, n_clusters, sample_weight=None, init='k-means++',\n                 % n_init, RuntimeWarning, stacklevel=2)\n             n_init = 1\n \n-    # subtract of mean of x for more accurate distance computations\n+    # Ensure numerical consistency across parallel runs by explicitly setting dtype\n+    X = X.astype(np.float64, copy=False)\n+    if sample_weight is not None:\n+        sample_weight = sample_weight.astype(np.float64, copy=False)\n+\n+    # subtract mean of x for more accurate distance computations\n     if not sp.issparse(X):\n         X_mean = X.mean(axis=0)\n         # The copy was already done above\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/cluster/k_means_.py b/sklearn/cluster/k_means_.py\nindex abcc315..f7d05f4 100644\n--- a/sklearn/cluster/k_means_.py\n+++ b/sklearn/cluster/k_means_.py\n@@ -89,6 +89,9 @@ def k_means(X, n_clusters, sample_weight=None, init='k-means++', precompute_dist\n         if n_init != 1:\n             warnings.warn('Explicit initial center position passed: performing only one init in k-means instead of n_init=%d' % n_init, RuntimeWarning, stacklevel=2)\n             n_init = 1\n+    X = X.astype(np.float64, copy=False)\n+    if sample_weight is not None:\n+        sample_weight = sample_weight.astype(np.float64, copy=False)\n     if not sp.issparse(X):\n         X_mean = X.mean(axis=0)\n         X -= X_mean\n", "normalized_occurrence": 1}
