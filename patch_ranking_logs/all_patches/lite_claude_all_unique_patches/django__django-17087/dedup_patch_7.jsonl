{"model_name_or_path": "agentless_claude", "instance_id": "django__django-17087", "model_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex 941a5ed..2be8a39 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -100,6 +100,23 @@ class DeconstructableSerializer(BaseSerializer):\n \n     @staticmethod\n     def _serialize_path(path):\n+        # Handle nested classes by looking for the last module part\n+        parts = path.split('.')\n+        for i in range(len(parts) - 1, 0, -1):\n+            module = '.'.join(parts[:i])\n+            try:\n+                importlib.import_module(module)\n+                name = '.'.join(parts[i:])\n+                if module == \"django.db.models\":\n+                    imports = {\"from django.db import models\"}\n+                    name = \"models.%s\" % name\n+                else:\n+                    imports = {\"import %s\" % module}\n+                    name = path\n+                return name, imports\n+            except ImportError:\n+                continue\n+        # Fallback to original behavior\n         module, name = path.rsplit(\".\", 1)\n         if module == \"django.db.models\":\n             imports = {\"from django.db import models\"}\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex bd46ec1..7d04357 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -70,6 +70,21 @@ class DeconstructableSerializer(BaseSerializer):\n         return ('%s(%s)' % (name, ', '.join(strings)), imports)\n     @staticmethod\n     def _serialize_path(path):\n+        parts = path.split('.')\n+        for i in range(len(parts) - 1, 0, -1):\n+            module = '.'.join(parts[:i])\n+            try:\n+                importlib.import_module(module)\n+                name = '.'.join(parts[i:])\n+                if module == 'django.db.models':\n+                    imports = {'from django.db import models'}\n+                    name = 'models.%s' % name\n+                else:\n+                    imports = {'import %s' % module}\n+                    name = path\n+                return (name, imports)\n+            except ImportError:\n+                continue\n         module, name = path.rsplit('.', 1)\n         if module == 'django.db.models':\n             imports = {'from django.db import models'}\n", "normalized_occurrence": 1}
