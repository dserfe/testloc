{"model_name_or_path": "agentless", "instance_id": "django__django-13837", "model_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex 3b7178c..7902490 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -216,12 +216,12 @@ def get_child_arguments():\n     executable is reported to not have the .exe extension which can cause bugs\n     on reloading.\n     \"\"\"\n-    import django.__main__\n-    django_main_path = Path(django.__main__.__file__)\n+    import __main__\n+    django_main_path = Path(__main__.__spec__.parent) if __main__.__spec__ is not None else None\n     py_script = Path(sys.argv[0])\n \n     args = [sys.executable] + ['-W%s' % o for o in sys.warnoptions]\n-    if py_script == django_main_path:\n+    if django_main_path is not None and py_script == django_main_path:\n         # The server was started with `python -m django runserver`.\n         args += ['-m', 'django']\n         args += sys.argv[1:]\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex 9acf8d8..fa7e102 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -131,11 +131,11 @@ def sys_path_directories():\n         else:\n             yield resolved_path\n def get_child_arguments():\n-    import django.__main__\n-    django_main_path = Path(django.__main__.__file__)\n+    import __main__\n+    django_main_path = Path(__main__.__spec__.parent) if __main__.__spec__ is not None else None\n     py_script = Path(sys.argv[0])\n     args = [sys.executable] + ['-W%s' % o for o in sys.warnoptions]\n-    if py_script == django_main_path:\n+    if django_main_path is not None and py_script == django_main_path:\n         args += ['-m', 'django']\n         args += sys.argv[1:]\n     elif not py_script.exists():\n", "normalized_occurrence": 1}
