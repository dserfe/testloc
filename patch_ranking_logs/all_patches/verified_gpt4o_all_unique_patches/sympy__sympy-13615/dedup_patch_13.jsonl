{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13615", "model_patch": "diff --git a/sympy/sets/sets.py b/sympy/sets/sets.py\nindex e78d679..70a00b9 100644\n--- a/sympy/sets/sets.py\n+++ b/sympy/sets/sets.py\n@@ -1943,11 +1943,10 @@ class FiniteSet(Set, EvalfMixin):\n                     intervals.append(Interval(a, b, True, True))  # both open\n                 intervals.append(Interval(nums[-1], S.Infinity, True, True))\n \n-                if syms != []:\n-                    return Complement(Union(intervals, evaluate=False),\n-                            FiniteSet(*syms), evaluate=False)\n-                else:\n-                    return Union(intervals, evaluate=False)\n+                complement_set = Union(intervals, evaluate=False)\n+                if syms:\n+                    complement_set = Complement(complement_set, FiniteSet(*syms), evaluate=False)\n+                return complement_set\n             elif nums == []:\n                 return None\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/sets/sets.py b/sympy/sets/sets.py\nindex be9090d..32e47f4 100644\n--- a/sympy/sets/sets.py\n+++ b/sympy/sets/sets.py\n@@ -849,10 +849,10 @@ class FiniteSet(Set, EvalfMixin):\n                 for a, b in zip(nums[:-1], nums[1:]):\n                     intervals.append(Interval(a, b, True, True))\n                 intervals.append(Interval(nums[-1], S.Infinity, True, True))\n-                if syms != []:\n-                    return Complement(Union(intervals, evaluate=False), FiniteSet(*syms), evaluate=False)\n-                else:\n-                    return Union(intervals, evaluate=False)\n+                complement_set = Union(intervals, evaluate=False)\n+                if syms:\n+                    complement_set = Complement(complement_set, FiniteSet(*syms), evaluate=False)\n+                return complement_set\n             elif nums == []:\n                 return None\n         elif isinstance(other, FiniteSet):\n", "normalized_occurrence": 1}
