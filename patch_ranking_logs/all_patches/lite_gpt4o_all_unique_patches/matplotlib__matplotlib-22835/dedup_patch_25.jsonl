{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-22835", "model_patch": "diff --git a/lib/matplotlib/artist.py b/lib/matplotlib/artist.py\nindex 2914fa8..98f0300 100644\n--- a/lib/matplotlib/artist.py\n+++ b/lib/matplotlib/artist.py\n@@ -1302,7 +1302,7 @@ class Artist:\n             if np.ma.getmask(data):\n                 return \"[]\"\n             normed = self.norm(data)\n-            if np.isfinite(normed):\n+            if np.isfinite(normed) and hasattr(self.norm, 'inverse'):\n                 # Midpoints of neighboring color intervals.\n                 neighbors = self.norm.inverse(\n                     (int(self.norm(data) * n) + np.array([0, 1])) / n)\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/artist.py b/lib/matplotlib/artist.py\nindex a2cf16a..2db72c6 100644\n--- a/lib/matplotlib/artist.py\n+++ b/lib/matplotlib/artist.py\n@@ -459,7 +459,7 @@ class Artist:\n             if np.ma.getmask(data):\n                 return '[]'\n             normed = self.norm(data)\n-            if np.isfinite(normed):\n+            if np.isfinite(normed) and hasattr(self.norm, 'inverse'):\n                 neighbors = self.norm.inverse((int(self.norm(data) * n) + np.array([0, 1])) / n)\n                 delta = abs(neighbors - data).max()\n                 g_sig_digits = cbook._g_sig_digits(data, delta)\n", "normalized_occurrence": 1}
