{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13615", "model_patch": "diff --git a/sympy/sets/sets.py b/sympy/sets/sets.py\nindex e78d679..3cb15ac 100644\n--- a/sympy/sets/sets.py\n+++ b/sympy/sets/sets.py\n@@ -1725,6 +1725,11 @@ class Complement(Set, EvalfMixin):\n         if isinstance(B, Union):\n             return Intersection(s.complement(A) for s in B.args)\n \n+        # For FiniteSets containing symbols mixed with numbers,\n+        # maintain the unevaluated form when taking complement with intervals\n+        if isinstance(A, FiniteSet) and any(not i.is_number for i in A.args):\n+            return Complement(A, B, evaluate=False)\n+\n         result = B._complement(A)\n         if result != None:\n             return result\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/sets/sets.py b/sympy/sets/sets.py\nindex be9090d..987dd0a 100644\n--- a/sympy/sets/sets.py\n+++ b/sympy/sets/sets.py\n@@ -752,6 +752,8 @@ class Complement(Set, EvalfMixin):\n             return EmptySet()\n         if isinstance(B, Union):\n             return Intersection((s.complement(A) for s in B.args))\n+        if isinstance(A, FiniteSet) and any((not i.is_number for i in A.args)):\n+            return Complement(A, B, evaluate=False)\n         result = B._complement(A)\n         if result != None:\n             return result\n", "normalized_occurrence": 1}
