{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16400", "model_patch": "diff --git a/django/contrib/auth/management/__init__.py b/django/contrib/auth/management/__init__.py\nindex c21d9d7..1cc4200 100644\n--- a/django/contrib/auth/management/__init__.py\n+++ b/django/contrib/auth/management/__init__.py\n@@ -79,6 +79,9 @@ def create_permissions(\n         ctype = ContentType.objects.db_manager(using).get_for_model(\n             klass, for_concrete_model=False\n         )\n+        # Ensure the ContentType is fully loaded from the specified database\n+        if not ctype._state.adding:\n+            ctype = ContentType.objects.db_manager(using).filter(pk=ctype.pk).select_related()[0]\n \n         ctypes.add(ctype)\n         for perm in _get_all_permissions(klass._meta):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/auth/management/__init__.py b/django/contrib/auth/management/__init__.py\nindex eb43af8..9127fbf 100644\n--- a/django/contrib/auth/management/__init__.py\n+++ b/django/contrib/auth/management/__init__.py\n@@ -29,6 +29,8 @@ def create_permissions(app_config, verbosity=2, interactive=True, using=DEFAULT_\n     ctypes = set()\n     for klass in app_config.get_models():\n         ctype = ContentType.objects.db_manager(using).get_for_model(klass, for_concrete_model=False)\n+        if not ctype._state.adding:\n+            ctype = ContentType.objects.db_manager(using).filter(pk=ctype.pk).select_related()[0]\n         ctypes.add(ctype)\n         for perm in _get_all_permissions(klass._meta):\n             searched_perms.append((ctype, perm))\n", "normalized_occurrence": 1}
