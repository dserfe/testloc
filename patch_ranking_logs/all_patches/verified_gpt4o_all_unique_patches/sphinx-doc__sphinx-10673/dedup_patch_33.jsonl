{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-10673", "model_patch": "diff --git a/sphinx/environment/collectors/toctree.py b/sphinx/environment/collectors/toctree.py\nindex 7757742..7eae6c3 100644\n--- a/sphinx/environment/collectors/toctree.py\n+++ b/sphinx/environment/collectors/toctree.py\n@@ -110,6 +110,12 @@ class TocTreeCollector(EnvironmentCollector):\n                         entries.append(item)\n                         # important: do the inventory stuff\n                         TocTree(app.env).note(docname, toctreenode)\n+                        \n+                    # Ensure 'genindex', 'modindex', 'search' are included\n+                    if docname == 'index' and sectionnode.tagname == 'section':\n+                        entries.append(nodes.reference('', 'genindex', refuri='genindex'))\n+                        entries.append(nodes.reference('', 'modindex', refuri='modindex'))\n+                        entries.append(nodes.reference('', 'search', refuri='search'))\n             if entries:\n                 return nodes.bullet_list('', *entries)\n             return None\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/environment/collectors/toctree.py b/sphinx/environment/collectors/toctree.py\nindex 4ba0190..a2379a9 100644\n--- a/sphinx/environment/collectors/toctree.py\n+++ b/sphinx/environment/collectors/toctree.py\n@@ -80,6 +80,10 @@ class TocTreeCollector(EnvironmentCollector):\n                         item = toctreenode.copy()\n                         entries.append(item)\n                         TocTree(app.env).note(docname, toctreenode)\n+                    if docname == 'index' and sectionnode.tagname == 'section':\n+                        entries.append(nodes.reference('', 'genindex', refuri='genindex'))\n+                        entries.append(nodes.reference('', 'modindex', refuri='modindex'))\n+                        entries.append(nodes.reference('', 'search', refuri='search'))\n             if entries:\n                 return nodes.bullet_list('', *entries)\n             return None\n", "normalized_occurrence": 1}
