{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8056", "model_patch": "diff --git a/sphinx/ext/napoleon/docstring.py b/sphinx/ext/napoleon/docstring.py\nindex f955f19..99991e0 100644\n--- a/sphinx/ext/napoleon/docstring.py\n+++ b/sphinx/ext/napoleon/docstring.py\n@@ -1105,7 +1105,16 @@ class NumpyDocstring(GoogleDocstring):\n         if prefer_type and not _type:\n             _type, _name = _name, _type\n         indent = self._get_indent(line) + 1\n+        # Handle multiple parameters separated by commas\n+        if ', ' in _name:\n+            _names = _name.split(', ')\n+            _name = ', '.join([f\"{name.strip()} ({_type})\" for name in _names])\n+        else:\n+            _name = f\"{_name} ({_type})\" if _type else _name\n+\n         _desc = self._dedent(self._consume_indented_block(indent))\n+        if _type and \"optional\" in _type:\n+            _desc.insert(0, \"optional\")\n         _desc = self.__class__(_desc, self._config).lines()\n         return _name, _type, _desc\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/napoleon/docstring.py b/sphinx/ext/napoleon/docstring.py\nindex f69cdab..9e50766 100644\n--- a/sphinx/ext/napoleon/docstring.py\n+++ b/sphinx/ext/napoleon/docstring.py\n@@ -670,7 +670,14 @@ class NumpyDocstring(GoogleDocstring):\n         if prefer_type and (not _type):\n             _type, _name = (_name, _type)\n         indent = self._get_indent(line) + 1\n+        if ', ' in _name:\n+            _names = _name.split(', ')\n+            _name = ', '.join([f'{name.strip()} ({_type})' for name in _names])\n+        else:\n+            _name = f'{_name} ({_type})' if _type else _name\n         _desc = self._dedent(self._consume_indented_block(indent))\n+        if _type and 'optional' in _type:\n+            _desc.insert(0, 'optional')\n         _desc = self.__class__(_desc, self._config).lines()\n         return (_name, _type, _desc)\n     def _consume_returns_section(self) -> List[Tuple[str, str, List[str]]]:\n", "normalized_occurrence": 1}
