{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25479", "model_patch": "diff --git a/lib/matplotlib/pyplot.py b/lib/matplotlib/pyplot.py\nindex 3c5d091..29b18a6 100644\n--- a/lib/matplotlib/pyplot.py\n+++ b/lib/matplotlib/pyplot.py\n@@ -2255,10 +2255,9 @@ def clim(vmin: float | None = None, vmax: float | None = None) -> None:\n \n # eventually this implementation should move here, use indirection for now to\n # avoid having two copies of the code floating around.\n-def get_cmap(\n-    name: Colormap | str | None = None,\n-    lut: int | None = None\n-) -> Colormap:\n+def get_cmap(name: Colormap | str | None = None, lut: int | None = None) -> Colormap:\n+    if isinstance(name, str):\n+        name = cm.cmap_d.get(name, name)\n     return cm._get_cmap(name=name, lut=lut)  # type: ignore\n get_cmap.__doc__ = cm._get_cmap.__doc__  # type: ignore\n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/pyplot.py b/lib/matplotlib/pyplot.py\nindex 1eb21f9..077d56a 100644\n--- a/lib/matplotlib/pyplot.py\n+++ b/lib/matplotlib/pyplot.py\n@@ -538,6 +538,8 @@ def clim(vmin: float | None=None, vmax: float | None=None) -> None:\n         raise RuntimeError('You must first define an image, e.g., with imshow')\n     im.set_clim(vmin, vmax)\n def get_cmap(name: Colormap | str | None=None, lut: int | None=None) -> Colormap:\n+    if isinstance(name, str):\n+        name = cm.cmap_d.get(name, name)\n     return cm._get_cmap(name=name, lut=lut)\n get_cmap.__doc__ = cm._get_cmap.__doc__\n def set_cmap(cmap: Colormap | str) -> None:\n", "normalized_occurrence": 1}
