{"model_name_or_path": "agentless", "instance_id": "django__django-13925", "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 7468862..8e7d523 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -1284,14 +1284,23 @@ class Model(metaclass=ModelBase):\n             # clashes.\n             if not clash_errors:\n                 errors.extend(cls._check_column_name_clashes())\n-            errors += [\n-                *cls._check_index_together(),\n-                *cls._check_unique_together(),\n-                *cls._check_indexes(databases),\n-                *cls._check_ordering(),\n-                *cls._check_constraints(databases),\n-                *cls._check_default_pk(),\n-            ]\n+            if not cls._meta.pk.auto_created or settings.is_overridden('DEFAULT_AUTO_FIELD') or cls._meta.app_config._is_default_auto_field_overridden:\n+                errors += [\n+                    *cls._check_index_together(),\n+                    *cls._check_unique_together(),\n+                    *cls._check_indexes(databases),\n+                    *cls._check_ordering(),\n+                    *cls._check_constraints(databases),\n+                    *cls._check_default_pk(),\n+                ]\n+            else:\n+                errors += [\n+                    *cls._check_index_together(),\n+                    *cls._check_unique_together(),\n+                    *cls._check_indexes(databases),\n+                    *cls._check_ordering(),\n+                    *cls._check_constraints(databases),\n+                ]\n \n         return errors\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 5a9ea3d..cd26771 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -692,7 +692,10 @@ class Model(metaclass=ModelBase):\n             errors.extend(clash_errors)\n             if not clash_errors:\n                 errors.extend(cls._check_column_name_clashes())\n-            errors += [*cls._check_index_together(), *cls._check_unique_together(), *cls._check_indexes(databases), *cls._check_ordering(), *cls._check_constraints(databases), *cls._check_default_pk()]\n+            if not cls._meta.pk.auto_created or settings.is_overridden('DEFAULT_AUTO_FIELD') or cls._meta.app_config._is_default_auto_field_overridden:\n+                errors += [*cls._check_index_together(), *cls._check_unique_together(), *cls._check_indexes(databases), *cls._check_ordering(), *cls._check_constraints(databases), *cls._check_default_pk()]\n+            else:\n+                errors += [*cls._check_index_together(), *cls._check_unique_together(), *cls._check_indexes(databases), *cls._check_ordering(), *cls._check_constraints(databases)]\n         return errors\n     @classmethod\n     def _check_default_pk(cls):\n", "normalized_occurrence": 1}
