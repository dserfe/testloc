{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11964", "model_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex 6957452..fc6e2ee 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -792,6 +792,9 @@ class Field(RegisterLookupMixin):\n         \"\"\"Perform preliminary non-db specific value checks and conversions.\"\"\"\n         if isinstance(value, Promise):\n             value = value._proxy____cast()\n+        # Handle TextChoices/IntegerChoices enum values\n+        if hasattr(value, '_value_'):\n+            value = value._value_\n         return value\n \n     def get_db_prep_value(self, value, connection, prepared=False):\n", "occurrence": 2, "normalized_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex e3867cb..7c30726 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -358,6 +358,8 @@ class Field(RegisterLookupMixin):\n     def get_prep_value(self, value):\n         if isinstance(value, Promise):\n             value = value._proxy____cast()\n+        if hasattr(value, '_value_'):\n+            value = value._value_\n         return value\n     def get_db_prep_value(self, value, connection, prepared=False):\n         if not prepared:\n", "normalized_occurrence": 3}
