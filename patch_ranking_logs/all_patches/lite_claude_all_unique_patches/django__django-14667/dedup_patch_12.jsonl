{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14667", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 8635bf4..5c3733c 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -2083,7 +2083,12 @@ class Query(BaseExpression):\n         existing, defer = self.deferred_loading\n         if defer:\n             # Add to existing deferred names.\n-            self.deferred_loading = existing.union(field_names), True\n+            # If we're in immediate loading mode (from only), we need to remove\n+            # the deferred fields from the existing set\n+            if not existing:\n+                self.deferred_loading = set(field_names), True\n+            else:\n+                self.deferred_loading = existing.union(field_names), True\n         else:\n             # Remove names from the set of any existing \"immediate load\" names.\n             self.deferred_loading = existing.difference(field_names), False\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex a07bc15..3b9cedd 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1138,7 +1138,10 @@ class Query(BaseExpression):\n     def add_deferred_loading(self, field_names):\n         existing, defer = self.deferred_loading\n         if defer:\n-            self.deferred_loading = (existing.union(field_names), True)\n+            if not existing:\n+                self.deferred_loading = (set(field_names), True)\n+            else:\n+                self.deferred_loading = (existing.union(field_names), True)\n         else:\n             self.deferred_loading = (existing.difference(field_names), False)\n     def add_immediate_loading(self, field_names):\n", "normalized_occurrence": 1}
