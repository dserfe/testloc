{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-24443", "model_patch": "diff --git a/sympy/combinatorics/homomorphisms.py b/sympy/combinatorics/homomorphisms.py\nindex 0a601d4..1987105 100644\n--- a/sympy/combinatorics/homomorphisms.py\n+++ b/sympy/combinatorics/homomorphisms.py\n@@ -333,10 +333,11 @@ def _check_homomorphism(domain, codomain, images):\n             # both indices\n             while i < len(r):\n                 power = r_arr[j][1]\n-                if isinstance(domain, PermutationGroup) and r[i] in gens:\n-                    s = domain.generators[gens.index(r[i])]\n-                else:\n-                    s = r[i]\n+                s = r[i]\n+                if isinstance(domain, PermutationGroup):\n+                    for j, g in enumerate(domain.generators):\n+                        if s == g or s == g**-1:\n+                            s = g\n                 if s in images:\n                     w = w*images[s]**power\n                 elif s**-1 in images:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/combinatorics/homomorphisms.py b/sympy/combinatorics/homomorphisms.py\nindex c2fbe44..dd474f8 100644\n--- a/sympy/combinatorics/homomorphisms.py\n+++ b/sympy/combinatorics/homomorphisms.py\n@@ -202,10 +202,11 @@ def _check_homomorphism(domain, codomain, images):\n             j = 0\n             while i < len(r):\n                 power = r_arr[j][1]\n-                if isinstance(domain, PermutationGroup) and r[i] in gens:\n-                    s = domain.generators[gens.index(r[i])]\n-                else:\n-                    s = r[i]\n+                s = r[i]\n+                if isinstance(domain, PermutationGroup):\n+                    for j, g in enumerate(domain.generators):\n+                        if s == g or s == g ** (-1):\n+                            s = g\n                 if s in images:\n                     w = w * images[s] ** power\n                 elif s ** (-1) in images:\n", "normalized_occurrence": 2}
