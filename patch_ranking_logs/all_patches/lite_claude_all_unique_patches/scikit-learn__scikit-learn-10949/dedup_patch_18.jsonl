{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-10949", "model_patch": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex 7e2fa63..7a24adf 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -462,7 +462,11 @@ def check_array(array, accept_sparse=False, accept_large_sparse=True,\n     dtype_numeric = isinstance(dtype, six.string_types) and dtype == \"numeric\"\n \n     dtype_orig = getattr(array, \"dtype\", None)\n-    if not hasattr(dtype_orig, 'kind'):\n+    if hasattr(array, 'dtypes'):  # pandas DataFrame, Series\n+        # For pandas DataFrames, check if any column has object dtype\n+        if any(dt.kind == 'O' for dt in array.dtypes):\n+            dtype_orig = np.dtype('O')\n+    elif not hasattr(dtype_orig, 'kind'):\n         # not a data type (e.g. a column named dtype in a pandas DataFrame)\n         dtype_orig = None\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex 7db8b51..c7eef4c 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -126,7 +126,10 @@ def check_array(array, accept_sparse=False, accept_large_sparse=True, dtype='num\n     array_orig = array\n     dtype_numeric = isinstance(dtype, six.string_types) and dtype == 'numeric'\n     dtype_orig = getattr(array, 'dtype', None)\n-    if not hasattr(dtype_orig, 'kind'):\n+    if hasattr(array, 'dtypes'):\n+        if any((dt.kind == 'O' for dt in array.dtypes)):\n+            dtype_orig = np.dtype('O')\n+    elif not hasattr(dtype_orig, 'kind'):\n         dtype_orig = None\n     if dtype_numeric:\n         if dtype_orig is not None and dtype_orig.kind == 'O':\n", "normalized_occurrence": 1}
