{"model_name_or_path": "agentless", "instance_id": "django__django-15268", "model_patch": "diff --git a/django/db/migrations/optimizer.py b/django/db/migrations/optimizer.py\nindex f01e0f5..6622f26 100644\n--- a/django/db/migrations/optimizer.py\n+++ b/django/db/migrations/optimizer.py\n@@ -1,3 +1,4 @@\n+\n class MigrationOptimizer:\n     \"\"\"\n     Power the optimization process, where you provide a list of Operations\n@@ -62,8 +63,17 @@ class MigrationOptimizer:\n                     new_operations.extend(operations[i + j + 2:])\n                     return new_operations\n                 elif not result:\n-                    # Can't perform a right reduction.\n-                    right = False\n+                    # Check if we can merge consecutive AlterUniqueTogether or AlterIndexTogether operations\n+                    if (\n+                        isinstance(operation, (AlterUniqueTogether, AlterIndexTogether)) and\n+                        isinstance(operations[i + 1], operation.__class__) and\n+                        operation.name == operations[i + 1].name\n+                    ):\n+                        operation.option_value = operations[i + 1].option_value\n+                        right = True\n+                    else:\n+                        # Can't perform a right reduction.\n+                        right = False\n             else:\n                 new_operations.append(operation)\n-        return new_operations\n+        return new_operations\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/optimizer.py b/django/db/migrations/optimizer.py\nindex 06fbfa5..dc79547 100644\n--- a/django/db/migrations/optimizer.py\n+++ b/django/db/migrations/optimizer.py\n@@ -29,7 +29,11 @@ class MigrationOptimizer:\n                     new_operations.extend(operations[i + j + 2:])\n                     return new_operations\n                 elif not result:\n-                    right = False\n+                    if isinstance(operation, (AlterUniqueTogether, AlterIndexTogether)) and isinstance(operations[i + 1], operation.__class__) and (operation.name == operations[i + 1].name):\n+                        operation.option_value = operations[i + 1].option_value\n+                        right = True\n+                    else:\n+                        right = False\n             else:\n                 new_operations.append(operation)\n         return new_operations\n\\ No newline at end of file\n", "normalized_occurrence": 1}
