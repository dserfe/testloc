{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-13453", "model_patch": "diff --git a/astropy/io/ascii/html.py b/astropy/io/ascii/html.py\nindex 1220930..79979e9 100644\n--- a/astropy/io/ascii/html.py\n+++ b/astropy/io/ascii/html.py\n@@ -357,11 +357,11 @@ class HTML(core.BaseReader):\n \n         lines = []\n \n-        # Set HTML escaping to False for any column in the raw_html_cols input\n-        raw_html_cols = self.html.get('raw_html_cols', [])\n-        if isinstance(raw_html_cols, str):\n-            raw_html_cols = [raw_html_cols]  # Allow for a single string as input\n-        cols_escaped = [col.info.name not in raw_html_cols for col in cols]\n+        # Apply formats to columns if specified\n+        if self.formats:\n+            for col in cols:\n+                if col.info.name in self.formats:\n+                    col.info.format = self.formats[col.info.name]\n \n         # Kwargs that get passed on to bleach.clean() if that is available.\n         raw_html_clean_kwargs = self.html.get('raw_html_clean_kwargs', {})\n@@ -437,7 +437,11 @@ class HTML(core.BaseReader):\n                                     new_cols.append(new_col)\n                             else:\n \n-                                col_iter_str_vals = self.fill_values(col, col.info.iter_str_vals())\n+                                # Apply formatting to column values\n+                                col_iter_str_vals = self.fill_values(\n+                                    col, \n+                                    (col.info.formatter(val) if col.info.format else str(val) for val in col)\n+                                )\n                                 col_str_iters.append(col_iter_str_vals)\n \n                                 new_cols_escaped.append(col_escaped)\n@@ -474,4 +478,4 @@ class HTML(core.BaseReader):\n                     yield col.fill_values[col_str]\n                     continue\n \n-            yield col_str\n+            yield col_str\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/io/ascii/html.py b/astropy/io/ascii/html.py\nindex 45fa153..65555d8 100644\n--- a/astropy/io/ascii/html.py\n+++ b/astropy/io/ascii/html.py\n@@ -157,10 +157,10 @@ class HTML(core.BaseReader):\n             self.data.fill_values = [self.data.fill_values]\n         self.data._set_fill_values(cols)\n         lines = []\n-        raw_html_cols = self.html.get('raw_html_cols', [])\n-        if isinstance(raw_html_cols, str):\n-            raw_html_cols = [raw_html_cols]\n-        cols_escaped = [col.info.name not in raw_html_cols for col in cols]\n+        if self.formats:\n+            for col in cols:\n+                if col.info.name in self.formats:\n+                    col.info.format = self.formats[col.info.name]\n         raw_html_clean_kwargs = self.html.get('raw_html_clean_kwargs', {})\n         w = writer.XMLWriter(ListWriter(lines))\n         with w.tag('html'):\n@@ -217,7 +217,7 @@ class HTML(core.BaseReader):\n                                     new_cols_escaped.append(col_escaped)\n                                     new_cols.append(new_col)\n                             else:\n-                                col_iter_str_vals = self.fill_values(col, col.info.iter_str_vals())\n+                                col_iter_str_vals = self.fill_values(col, (col.info.formatter(val) if col.info.format else str(val) for val in col))\n                                 col_str_iters.append(col_iter_str_vals)\n                                 new_cols_escaped.append(col_escaped)\n                     for row in zip(*col_str_iters):\n", "normalized_occurrence": 1}
