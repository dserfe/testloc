{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-24870", "model_patch": "diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py\nindex 908a24f..85e17f5 100644\n--- a/lib/matplotlib/contour.py\n+++ b/lib/matplotlib/contour.py\n@@ -1120,7 +1120,15 @@ class ContourSet(cm.ScalarMappable, ContourLabeler):\n     def _process_contour_level_args(self, args):\n         \"\"\"\n         Determine the contour levels and store in self.levels.\n+        For boolean input arrays, automatically use [0.5] as the level.\n         \"\"\"\n+        # Auto-detect boolean arrays and set appropriate level\n+        if (self.levels is None and \n+            np.issubdtype(self.z.dtype, np.bool_) and \n+            len(args) == 0):\n+            self.levels = [0.5]\n+            return\n+            \n         if self.levels is None:\n             if len(args) == 0:\n                 levels_arg = 7  # Default, hard-wired.\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py\nindex 04dc867..3198d8a 100644\n--- a/lib/matplotlib/contour.py\n+++ b/lib/matplotlib/contour.py\n@@ -481,6 +481,9 @@ class ContourSet(cm.ScalarMappable, ContourLabeler):\n             i0, i1 = (0, len(lev))\n         return lev[i0:i1]\n     def _process_contour_level_args(self, args):\n+        if self.levels is None and np.issubdtype(self.z.dtype, np.bool_) and (len(args) == 0):\n+            self.levels = [0.5]\n+            return\n         if self.levels is None:\n             if len(args) == 0:\n                 levels_arg = 7\n", "normalized_occurrence": 1}
