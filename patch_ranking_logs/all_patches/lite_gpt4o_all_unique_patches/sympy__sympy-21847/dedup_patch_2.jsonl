{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-21847", "model_patch": "diff --git a/sympy/polys/monomials.py b/sympy/polys/monomials.py\nindex 9019221..43ce06c 100644\n--- a/sympy/polys/monomials.py\n+++ b/sympy/polys/monomials.py\n@@ -127,8 +127,8 @@ def itermonomials(variables, max_degrees, min_degrees=None):\n                 for variable in item:\n                     if variable != 1:\n                         powers[variable] += 1\n-                if max(powers.values()) >= min_degree:\n-                    monomials_list_comm.append(Mul(*item))\n+                if sum(powers.values()) >= min_degree:\n+                    monomials_list_comm.append(Mul(*[k**v for k, v in powers.items() if v > 0]))\n             yield from set(monomials_list_comm)\n         else:\n             monomials_list_non_comm = []\n@@ -139,8 +139,8 @@ def itermonomials(variables, max_degrees, min_degrees=None):\n                 for variable in item:\n                     if variable != 1:\n                         powers[variable] += 1\n-                if max(powers.values()) >= min_degree:\n-                    monomials_list_non_comm.append(Mul(*item))\n+                if sum(powers.values()) >= min_degree:\n+                    monomials_list_non_comm.append(Mul(*[k**v for k, v in powers.items() if v > 0]))\n             yield from set(monomials_list_non_comm)\n     else:\n         if any(min_degrees[i] > max_degrees[i] for i in range(n)):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/monomials.py b/sympy/polys/monomials.py\nindex 7c8de23..eea7ebc 100644\n--- a/sympy/polys/monomials.py\n+++ b/sympy/polys/monomials.py\n@@ -49,8 +49,8 @@ def itermonomials(variables, max_degrees, min_degrees=None):\n                 for variable in item:\n                     if variable != 1:\n                         powers[variable] += 1\n-                if max(powers.values()) >= min_degree:\n-                    monomials_list_comm.append(Mul(*item))\n+                if sum(powers.values()) >= min_degree:\n+                    monomials_list_comm.append(Mul(*[k ** v for k, v in powers.items() if v > 0]))\n             yield from set(monomials_list_comm)\n         else:\n             monomials_list_non_comm = []\n@@ -61,8 +61,8 @@ def itermonomials(variables, max_degrees, min_degrees=None):\n                 for variable in item:\n                     if variable != 1:\n                         powers[variable] += 1\n-                if max(powers.values()) >= min_degree:\n-                    monomials_list_non_comm.append(Mul(*item))\n+                if sum(powers.values()) >= min_degree:\n+                    monomials_list_non_comm.append(Mul(*[k ** v for k, v in powers.items() if v > 0]))\n             yield from set(monomials_list_non_comm)\n     else:\n         if any((min_degrees[i] > max_degrees[i] for i in range(n))):\n", "normalized_occurrence": 1}
