{"model_name_or_path": "agentless_claude", "instance_id": "psf__requests-2931", "model_patch": "diff --git a/requests/utils.py b/requests/utils.py\nindex 7aa8a2f..d416889 100644\n--- a/requests/utils.py\n+++ b/requests/utils.py\n@@ -689,9 +689,11 @@ def to_native_string(string, encoding='ascii'):\n     string in the native string type, encoding and decoding where necessary.\n     This assumes ASCII unless told otherwise.\n     \"\"\"\n-    out = None\n-\n-    if isinstance(string, builtin_str):\n+    # Note: On Python 2.x, bytes and str are the same type, so we must use\n+    # unicode as our key for assuming bytes.\n+    if isinstance(string, bytes):\n+        out = string\n+    elif isinstance(string, builtin_str):\n         out = string\n     else:\n         if is_py2:\n", "occurrence": 1, "normalized_patch": "diff --git a/requests/utils.py b/requests/utils.py\nindex 69197df..28abfb3 100644\n--- a/requests/utils.py\n+++ b/requests/utils.py\n@@ -316,8 +316,9 @@ def get_auth_from_url(url):\n         auth = ('', '')\n     return auth\n def to_native_string(string, encoding='ascii'):\n-    out = None\n-    if isinstance(string, builtin_str):\n+    if isinstance(string, bytes):\n+        out = string\n+    elif isinstance(string, builtin_str):\n         out = string\n     elif is_py2:\n         out = string.encode(encoding)\n", "normalized_occurrence": 4}
