{
  "instance_id": "pytest-dev__pytest-7373",
  "container_id": "6da1096aaf2c3529891a9916b150089540cbfc71512a4bcfc23b77e88db23c5b",
  "regression": {
    "results": [
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7373/dedup_patch_0.jsonl",
        "inst": "pytest-dev__pytest-7373",
        "passed": 0,
        "failed": 9
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7373/dedup_patch_1.jsonl",
        "inst": "pytest-dev__pytest-7373",
        "passed": 0,
        "failed": 9
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7373/dedup_patch_2.jsonl",
        "inst": "pytest-dev__pytest-7373",
        "passed": 0,
        "failed": 9
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7373/dedup_patch_3.jsonl",
        "inst": "pytest-dev__pytest-7373",
        "passed": 0,
        "failed": 9
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7373/dedup_patch_4.jsonl",
        "inst": "pytest-dev__pytest-7373",
        "passed": 0,
        "failed": 9
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7373/dedup_patch_5.jsonl",
        "inst": "pytest-dev__pytest-7373",
        "passed": 0,
        "failed": 9
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7373/dedup_patch_6.jsonl",
        "inst": "pytest-dev__pytest-7373",
        "passed": 0,
        "failed": 9
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7373/dedup_patch_7.jsonl",
        "inst": "pytest-dev__pytest-7373",
        "passed": 0,
        "failed": 9
      }
    ],
    "top_passed": 0,
    "top_subset_size": 8
  },
  "reproduction": {
    "testing/test_skipping.py::test_relpath_rootdir#1": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "testing/test_skipping.py::TestSkipif::test_skipif_string_condition_caching#2": {
      "repro_fails_on_clean": true,
      "outcomes": [
        {
          "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7373/dedup_patch_0.jsonl",
          "inst": "pytest-dev__pytest-7373",
          "passed": false
        },
        {
          "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7373/dedup_patch_1.jsonl",
          "inst": "pytest-dev__pytest-7373",
          "passed": false
        },
        {
          "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7373/dedup_patch_2.jsonl",
          "inst": "pytest-dev__pytest-7373",
          "passed": false
        },
        {
          "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7373/dedup_patch_3.jsonl",
          "inst": "pytest-dev__pytest-7373",
          "passed": false
        },
        {
          "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7373/dedup_patch_4.jsonl",
          "inst": "pytest-dev__pytest-7373",
          "passed": false
        },
        {
          "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7373/dedup_patch_5.jsonl",
          "inst": "pytest-dev__pytest-7373",
          "passed": false
        },
        {
          "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7373/dedup_patch_6.jsonl",
          "inst": "pytest-dev__pytest-7373",
          "passed": false
        },
        {
          "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7373/dedup_patch_7.jsonl",
          "inst": "pytest-dev__pytest-7373",
          "passed": false
        }
      ]
    },
    "testing/test_skipping.py::test_invalid_skip_keyword_parameter#3": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "testing/test_skipping.py::test_xfail_skipif_with_globals#4": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "testing/test_skipping.py::test_relpath_rootdir#5": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "testing/test_skipping.py::test_relpath_rootdir#6": {
      "repro_fails_on_clean": false,
      "outcomes": []
    }
  }
}