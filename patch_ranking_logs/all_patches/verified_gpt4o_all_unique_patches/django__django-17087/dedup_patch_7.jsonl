{"model_name_or_path": "agentless", "instance_id": "django__django-17087", "model_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 5a40118..bbfa2c3 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -70,6 +70,9 @@ class MigrationAutodetector:\n         elif isinstance(obj, COMPILED_REGEX_TYPE):\n             return RegexObject(obj)\n         elif isinstance(obj, type):\n+            if issubclass(obj, models.Model):\n+                module = obj.__module__\n+                return f\"{module}.{obj.__name__}\"\n             # If this is a type that implements 'deconstruct' as an instance method,\n             # avoid treating this as being deconstructible itself - see #22951\n             return obj\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 74bfa63..b9b3b80 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -35,6 +35,9 @@ class MigrationAutodetector:\n         elif isinstance(obj, COMPILED_REGEX_TYPE):\n             return RegexObject(obj)\n         elif isinstance(obj, type):\n+            if issubclass(obj, models.Model):\n+                module = obj.__module__\n+                return f'{module}.{obj.__name__}'\n             return obj\n         elif hasattr(obj, 'deconstruct'):\n             deconstructed = obj.deconstruct()\n", "normalized_occurrence": 1}
