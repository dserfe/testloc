{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-20049", "model_patch": "diff --git a/sympy/physics/vector/point.py b/sympy/physics/vector/point.py\nindex b711aa3..c7f654e 100644\n--- a/sympy/physics/vector/point.py\n+++ b/sympy/physics/vector/point.py\n@@ -518,10 +518,19 @@ class Point(object):\n         \"\"\"\n \n         _check_frame(frame)\n-        if not (frame in self._vel_dict):\n-            raise ValueError('Velocity of point ' + self.name + ' has not been'\n-                             ' defined in ReferenceFrame ' + frame.name)\n-        return self._vel_dict[frame]\n+        if frame in self._vel_dict:\n+            return self._vel_dict[frame]\n+        # If velocity is not explicitly defined but position is,\n+        # calculate velocity from time derivative of position\n+        if self._pos_dict:\n+            # Get any point we have a position relative to\n+            other_point = next(iter(self._pos_dict.keys()))\n+            # Get the position vector\n+            pos_vec = self.pos_from(other_point)\n+            # Calculate velocity by taking time derivative\n+            return pos_vec.dt(frame)\n+        raise ValueError('Velocity of point ' + self.name + ' has not been'\n+                         ' defined in ReferenceFrame ' + frame.name)\n \n     def partial_velocity(self, frame, *gen_speeds):\n         \"\"\"Returns the partial velocities of the linear velocity vector of this\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/physics/vector/point.py b/sympy/physics/vector/point.py\nindex f85c3bd..be70b3b 100644\n--- a/sympy/physics/vector/point.py\n+++ b/sympy/physics/vector/point.py\n@@ -120,9 +120,13 @@ class Point(object):\n         return self.vel(outframe)\n     def vel(self, frame):\n         _check_frame(frame)\n-        if not frame in self._vel_dict:\n-            raise ValueError('Velocity of point ' + self.name + ' has not been defined in ReferenceFrame ' + frame.name)\n-        return self._vel_dict[frame]\n+        if frame in self._vel_dict:\n+            return self._vel_dict[frame]\n+        if self._pos_dict:\n+            other_point = next(iter(self._pos_dict.keys()))\n+            pos_vec = self.pos_from(other_point)\n+            return pos_vec.dt(frame)\n+        raise ValueError('Velocity of point ' + self.name + ' has not been defined in ReferenceFrame ' + frame.name)\n     def partial_velocity(self, frame, *gen_speeds):\n         partials = [self.vel(frame).diff(speed, frame, var_in_dcm=False) for speed in gen_speeds]\n         if len(partials) == 1:\n", "normalized_occurrence": 1}
