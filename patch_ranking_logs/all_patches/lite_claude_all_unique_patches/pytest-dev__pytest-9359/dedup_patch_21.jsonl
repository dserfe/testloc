{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-9359", "model_patch": "diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py\nindex 9657da0..c598e53 100644\n--- a/src/_pytest/assertion/rewrite.py\n+++ b/src/_pytest/assertion/rewrite.py\n@@ -954,8 +954,10 @@ class AssertionRewriter(ast.NodeVisitor):\n             variables = [ast.Name(name, ast.Store()) for name in self.variables]\n             clear = ast.Assign(variables, ast.NameConstant(None))\n             self.statements.append(clear)\n-        # Fix locations (line numbers/column offsets).\n-        for stmt in self.statements:\n+        # Fix locations (line numbers/column offsets), but only for the actual assertion\n+        # and error message nodes to avoid showing irrelevant code in the error output\n+        assertion_nodes = self.statements[:2]  # Only include assertion check and error message\n+        for stmt in assertion_nodes:\n             for node in traverse_node(stmt):\n                 ast.copy_location(node, assert_)\n         return self.statements\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py\nindex 9f4da3b..b7774b4 100644\n--- a/src/_pytest/assertion/rewrite.py\n+++ b/src/_pytest/assertion/rewrite.py\n@@ -512,7 +512,8 @@ class AssertionRewriter(ast.NodeVisitor):\n             variables = [ast.Name(name, ast.Store()) for name in self.variables]\n             clear = ast.Assign(variables, ast.NameConstant(None))\n             self.statements.append(clear)\n-        for stmt in self.statements:\n+        assertion_nodes = self.statements[:2]\n+        for stmt in assertion_nodes:\n             for node in traverse_node(stmt):\n                 ast.copy_location(node, assert_)\n         return self.statements\n", "normalized_occurrence": 1}
