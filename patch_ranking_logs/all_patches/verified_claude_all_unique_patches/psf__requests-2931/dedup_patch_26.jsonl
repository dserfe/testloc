{"model_name_or_path": "agentless_claude", "instance_id": "psf__requests-2931", "model_patch": "diff --git a/requests/utils.py b/requests/utils.py\nindex 7aa8a2f..f5f6d9a 100644\n--- a/requests/utils.py\n+++ b/requests/utils.py\n@@ -694,10 +694,18 @@ def to_native_string(string, encoding='ascii'):\n     if isinstance(string, builtin_str):\n         out = string\n     else:\n-        if is_py2:\n-            out = string.encode(encoding)\n-        else:\n-            out = string.decode(encoding)\n+        try:\n+            if is_py2:\n+                out = string.encode(encoding)\n+            else:\n+                if isinstance(string, bytes):\n+                    out = string.decode(encoding)\n+                else:\n+                    out = string\n+        except UnicodeEncodeError:\n+            out = string\n+        except UnicodeDecodeError:\n+            out = string\n \n     return out\n \n", "occurrence": 1, "normalized_patch": "diff --git a/requests/utils.py b/requests/utils.py\nindex 69197df..110bc83 100644\n--- a/requests/utils.py\n+++ b/requests/utils.py\n@@ -319,10 +319,18 @@ def to_native_string(string, encoding='ascii'):\n     out = None\n     if isinstance(string, builtin_str):\n         out = string\n-    elif is_py2:\n-        out = string.encode(encoding)\n     else:\n-        out = string.decode(encoding)\n+        try:\n+            if is_py2:\n+                out = string.encode(encoding)\n+            elif isinstance(string, bytes):\n+                out = string.decode(encoding)\n+            else:\n+                out = string\n+        except UnicodeEncodeError:\n+            out = string\n+        except UnicodeDecodeError:\n+            out = string\n     return out\n def urldefragauth(url):\n     scheme, netloc, path, params, query, fragment = urlparse(url)\n", "normalized_occurrence": 1}
