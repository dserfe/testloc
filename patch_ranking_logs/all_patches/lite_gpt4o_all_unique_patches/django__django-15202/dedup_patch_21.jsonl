{"model_name_or_path": "agentless", "instance_id": "django__django-15202", "model_patch": "diff --git a/django/forms/fields.py b/django/forms/fields.py\nindex b31d0ed..4d6d199 100644\n--- a/django/forms/fields.py\n+++ b/django/forms/fields.py\n@@ -687,10 +687,10 @@ class URLField(CharField):\n             \"\"\"\n             try:\n                 return list(urlsplit(url))\n-            except ValueError:\n+            except ValueError as e:\n                 # urlparse.urlsplit can raise a ValueError with some\n                 # misformatted URLs.\n-                raise ValidationError(self.error_messages['invalid'], code='invalid')\n+                raise ValidationError(self.error_messages['invalid'], code='invalid') from e\n \n         value = super().to_python(value)\n         if value:\n", "occurrence": 6, "normalized_patch": "diff --git a/django/forms/fields.py b/django/forms/fields.py\nindex 8548471..58d569a 100644\n--- a/django/forms/fields.py\n+++ b/django/forms/fields.py\n@@ -406,8 +406,8 @@ class URLField(CharField):\n         def split_url(url):\n             try:\n                 return list(urlsplit(url))\n-            except ValueError:\n-                raise ValidationError(self.error_messages['invalid'], code='invalid')\n+            except ValueError as e:\n+                raise ValidationError(self.error_messages['invalid'], code='invalid') from e\n         value = super().to_python(value)\n         if value:\n             url_fields = split_url(value)\n", "normalized_occurrence": 6}
