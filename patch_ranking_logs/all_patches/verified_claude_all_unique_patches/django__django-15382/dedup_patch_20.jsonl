{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15382", "model_patch": "diff --git a/django/db/models/sql/where.py b/django/db/models/sql/where.py\nindex 7a540c9..9cbbfd2 100644\n--- a/django/db/models/sql/where.py\n+++ b/django/db/models/sql/where.py\n@@ -88,11 +88,14 @@ class WhereNode(tree.Node):\n                 else:\n                     full_needed -= 1\n             # Check if this node matches nothing or everything.\n-            # First check the amount of full nodes and empty nodes\n-            # to make this node empty/full.\n-            # Now, check if this node is full/empty using the\n-            # counts.\n-            if empty_needed == 0:\n+            # For AND, any empty child makes the whole clause empty.\n+            # For OR, all children must be empty to make the whole clause empty.\n+            if self.connector == AND and empty_needed < len(self.children):\n+                if self.negated:\n+                    return '', []\n+                else:\n+                    raise EmptyResultSet\n+            if self.connector == OR and empty_needed == 0:\n                 if self.negated:\n                     return '', []\n                 else:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/where.py b/django/db/models/sql/where.py\nindex 7f5e30d..286f73d 100644\n--- a/django/db/models/sql/where.py\n+++ b/django/db/models/sql/where.py\n@@ -48,7 +48,12 @@ class WhereNode(tree.Node):\n                     result_params.extend(params)\n                 else:\n                     full_needed -= 1\n-            if empty_needed == 0:\n+            if self.connector == AND and empty_needed < len(self.children):\n+                if self.negated:\n+                    return ('', [])\n+                else:\n+                    raise EmptyResultSet\n+            if self.connector == OR and empty_needed == 0:\n                 if self.negated:\n                     return ('', [])\n                 else:\n", "normalized_occurrence": 1}
