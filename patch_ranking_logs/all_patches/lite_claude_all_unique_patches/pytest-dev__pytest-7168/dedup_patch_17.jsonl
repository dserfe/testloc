{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-7168", "model_patch": "diff --git a/src/_pytest/_io/saferepr.py b/src/_pytest/_io/saferepr.py\nindex adc421d..a4328a4 100644\n--- a/src/_pytest/_io/saferepr.py\n+++ b/src/_pytest/_io/saferepr.py\n@@ -1,3 +1,4 @@\n+\n import pprint\n import reprlib\n from typing import Any\n@@ -56,6 +57,13 @@ class SafeRepr(reprlib.Repr):\n             s = repr(x)\n         except (KeyboardInterrupt, SystemExit):\n             raise\n+        except RuntimeError as exc:\n+            if str(exc) == \"No active exception to reraise\":\n+                s = \"<[RuntimeError raised in repr()] {} object at 0x{:x}>\".format(\n+                    x.__class__.__name__, id(x)\n+                )\n+            else:\n+                s = _format_repr_exception(exc, x)\n         except BaseException as exc:\n             s = _format_repr_exception(exc, x)\n         return _ellipsize(s, self.maxsize)\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/_io/saferepr.py b/src/_pytest/_io/saferepr.py\nindex 789deb9..b3e98bb 100644\n--- a/src/_pytest/_io/saferepr.py\n+++ b/src/_pytest/_io/saferepr.py\n@@ -40,6 +40,11 @@ class SafeRepr(reprlib.Repr):\n             s = repr(x)\n         except (KeyboardInterrupt, SystemExit):\n             raise\n+        except RuntimeError as exc:\n+            if str(exc) == 'No active exception to reraise':\n+                s = '<[RuntimeError raised in repr()] {} object at 0x{:x}>'.format(x.__class__.__name__, id(x))\n+            else:\n+                s = _format_repr_exception(exc, x)\n         except BaseException as exc:\n             s = _format_repr_exception(exc, x)\n         return _ellipsize(s, self.maxsize)\n", "normalized_occurrence": 2}
