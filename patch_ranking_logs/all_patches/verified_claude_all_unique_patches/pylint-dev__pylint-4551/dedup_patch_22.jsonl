{"model_name_or_path": "agentless_claude", "instance_id": "pylint-dev__pylint-4551", "model_patch": "diff --git a/pylint/pyreverse/diagrams.py b/pylint/pyreverse/diagrams.py\nindex 0111bb1..c69cece 100644\n--- a/pylint/pyreverse/diagrams.py\n+++ b/pylint/pyreverse/diagrams.py\n@@ -84,6 +84,8 @@ class ClassDiagram(Figure, FilterMixIn):\n             for n, m in node.items()\n             if isinstance(m, astroid.FunctionDef) and decorated_with_property(m)\n         ]\n+        \n+        # Handle instance attributes with their types\n         for node_name, associated_nodes in (\n             list(node.instance_attrs_type.items())\n             + list(node.locals_type.items())\n@@ -92,6 +94,23 @@ class ClassDiagram(Figure, FilterMixIn):\n             if not self.show_attr(node_name):\n                 continue\n             names = self.class_names(associated_nodes)\n+            \n+            # If no type found in instance_attrs_type, check for type annotations\n+            if not names and node_name in node.instance_attrs:\n+                for assign_node in node.instance_attrs[node_name]:\n+                    if hasattr(assign_node, 'annotation') and assign_node.annotation:\n+                        try:\n+                            annotation = assign_node.annotation\n+                            # Handle subscript types (e.g., List[str])\n+                            if isinstance(annotation, astroid.Subscript):\n+                                base = annotation.value.name\n+                                names = [base]\n+                            # Handle simple types\n+                            elif isinstance(annotation, astroid.Name):\n+                                names = [annotation.name]\n+                        except (AttributeError, TypeError):\n+                            continue\n+            \n             if names:\n                 node_name = \"{} : {}\".format(node_name, \", \".join(names))\n             attrs.append(node_name)\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/pyreverse/diagrams.py b/pylint/pyreverse/diagrams.py\nindex d9b60dc..94a0e07 100644\n--- a/pylint/pyreverse/diagrams.py\n+++ b/pylint/pyreverse/diagrams.py\n@@ -61,6 +61,18 @@ class ClassDiagram(Figure, FilterMixIn):\n             if not self.show_attr(node_name):\n                 continue\n             names = self.class_names(associated_nodes)\n+            if not names and node_name in node.instance_attrs:\n+                for assign_node in node.instance_attrs[node_name]:\n+                    if hasattr(assign_node, 'annotation') and assign_node.annotation:\n+                        try:\n+                            annotation = assign_node.annotation\n+                            if isinstance(annotation, astroid.Subscript):\n+                                base = annotation.value.name\n+                                names = [base]\n+                            elif isinstance(annotation, astroid.Name):\n+                                names = [annotation.name]\n+                        except (AttributeError, TypeError):\n+                            continue\n             if names:\n                 node_name = '{} : {}'.format(node_name, ', '.join(names))\n             attrs.append(node_name)\n", "normalized_occurrence": 1}
