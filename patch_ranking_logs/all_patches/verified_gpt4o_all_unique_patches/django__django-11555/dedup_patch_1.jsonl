{"model_name_or_path": "agentless", "instance_id": "django__django-11555", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 7177b41..12f1bea 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -2218,9 +2218,13 @@ def get_order_dir(field, default='ASC'):\n     prefix) should sort. The '-' prefix always sorts the opposite way.\n     \"\"\"\n     dirn = ORDER_DIR[default]\n-    if field[0] == '-':\n-        return field[1:], dirn[1]\n-    return field, dirn[0]\n+    if hasattr(field, 'expression') and hasattr(field, 'descending'):\n+        return field.expression.name, 'DESC' if field.descending else 'ASC'\n+    if isinstance(field, str):\n+        if field[0] == '-':\n+            return field[1:], dirn[1]\n+        return field, dirn[0]\n+    raise ValueError('Invalid field type for ordering')\n \n \n def add_to_dict(data, key, value):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 45811ad..7a6ee62 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1189,9 +1189,13 @@ class Query(BaseExpression):\n         return connections[DEFAULT_DB_ALIAS].features.interprets_empty_strings_as_nulls and field.empty_strings_allowed or field.null\n def get_order_dir(field, default='ASC'):\n     dirn = ORDER_DIR[default]\n-    if field[0] == '-':\n-        return (field[1:], dirn[1])\n-    return (field, dirn[0])\n+    if hasattr(field, 'expression') and hasattr(field, 'descending'):\n+        return (field.expression.name, 'DESC' if field.descending else 'ASC')\n+    if isinstance(field, str):\n+        if field[0] == '-':\n+            return (field[1:], dirn[1])\n+        return (field, dirn[0])\n+    raise ValueError('Invalid field type for ordering')\n def add_to_dict(data, key, value):\n     if key in data:\n         data[key].add(value)\n", "normalized_occurrence": 1}
