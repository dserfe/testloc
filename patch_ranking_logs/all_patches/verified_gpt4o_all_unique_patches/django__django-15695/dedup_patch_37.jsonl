{"model_name_or_path": "agentless", "instance_id": "django__django-15695", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex b086232..e483236 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -976,7 +976,16 @@ class RenameIndex(IndexOperation):\n         )\n         self.new_name, self.old_name = self.old_name, self.new_name\n \n-        self.database_forwards(app_label, schema_editor, from_state, to_state)\n+        try:\n+            self.database_forwards(app_label, schema_editor, from_state, to_state)\n+        except django.db.utils.ProgrammingError as e:\n+            # Restore old auto-generated name for unnamed index\n+            if 'already exists' in str(e):\n+                if not self.old_name:\n+                    self.new_name, self.old_name = self.old_name, self.new_name\n+                    self.database_forwards(app_label, schema_editor, from_state, to_state)\n+                else:\n+                    raise e\n \n         self.new_name_lower, self.old_name_lower = (\n             self.old_name_lower,\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 87ad28e..0adf8e8 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -439,7 +439,15 @@ class RenameIndex(IndexOperation):\n             return\n         self.new_name_lower, self.old_name_lower = (self.old_name_lower, self.new_name_lower)\n         self.new_name, self.old_name = (self.old_name, self.new_name)\n-        self.database_forwards(app_label, schema_editor, from_state, to_state)\n+        try:\n+            self.database_forwards(app_label, schema_editor, from_state, to_state)\n+        except django.db.utils.ProgrammingError as e:\n+            if 'already exists' in str(e):\n+                if not self.old_name:\n+                    self.new_name, self.old_name = (self.old_name, self.new_name)\n+                    self.database_forwards(app_label, schema_editor, from_state, to_state)\n+                else:\n+                    raise e\n         self.new_name_lower, self.old_name_lower = (self.old_name_lower, self.new_name_lower)\n         self.new_name, self.old_name = (self.old_name, self.new_name)\n     def describe(self):\n", "normalized_occurrence": 1}
