{"model_name_or_path": "agentless", "instance_id": "django__django-13158", "model_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 56fc5f8..08e2e0d 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -1322,7 +1322,7 @@ class ModelMultipleChoiceField(ModelChoiceField):\n         value = self.prepare_value(value)\n         if self.required and not value:\n             raise ValidationError(self.error_messages['required'], code='required')\n-        elif not self.required and not value:\n+        elif not value:\n             return self.queryset.none()\n         if not isinstance(value, (list, tuple)):\n             raise ValidationError(\n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 4e65eaf..502e3f0 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -688,7 +688,7 @@ class ModelMultipleChoiceField(ModelChoiceField):\n         value = self.prepare_value(value)\n         if self.required and (not value):\n             raise ValidationError(self.error_messages['required'], code='required')\n-        elif not self.required and (not value):\n+        elif not value:\n             return self.queryset.none()\n         if not isinstance(value, (list, tuple)):\n             raise ValidationError(self.error_messages['invalid_list'], code='invalid_list')\n", "normalized_occurrence": 1}
