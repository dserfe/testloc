{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-22840", "model_patch": "diff --git a/sympy/simplify/cse_main.py b/sympy/simplify/cse_main.py\nindex fa99708..7376472 100644\n--- a/sympy/simplify/cse_main.py\n+++ b/sympy/simplify/cse_main.py\n@@ -817,7 +817,16 @@ def cse(exprs, symbols=None, optimizations=None, postprocess=None,\n     # Find other optimization opportunities.\n     opt_subs = opt_cse(reduced_exprs, order)\n \n-    # Main CSE algorithm.\n+    # Don't create intermediate vars for pure MatrixSymbol indexing\n+    from sympy.matrices.expressions import MatrixElement, MatrixSymbol\n+    def filter_matrix_index(expr):\n+        if isinstance(expr, MatrixElement) and isinstance(expr.parent, MatrixSymbol):\n+            return False\n+        return True\n+        \n+    opt_subs = {k: v for k, v in opt_subs.items() if filter_matrix_index(k)}\n+\n+    # Main CSE algorithm. \n     replacements, reduced_exprs = tree_cse(reduced_exprs, symbols, opt_subs,\n                                            order, ignore)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/cse_main.py b/sympy/simplify/cse_main.py\nindex d5cc8d7..0f6121a 100644\n--- a/sympy/simplify/cse_main.py\n+++ b/sympy/simplify/cse_main.py\n@@ -331,6 +331,12 @@ def cse(exprs, symbols=None, optimizations=None, postprocess=None, order='canoni\n     else:\n         symbols = iter(symbols)\n     opt_subs = opt_cse(reduced_exprs, order)\n+    from sympy.matrices.expressions import MatrixElement, MatrixSymbol\n+    def filter_matrix_index(expr):\n+        if isinstance(expr, MatrixElement) and isinstance(expr.parent, MatrixSymbol):\n+            return False\n+        return True\n+    opt_subs = {k: v for k, v in opt_subs.items() if filter_matrix_index(k)}\n     replacements, reduced_exprs = tree_cse(reduced_exprs, symbols, opt_subs, order, ignore)\n     exprs = copy\n     for i, (sym, subtree) in enumerate(replacements):\n", "normalized_occurrence": 1}
