{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14580", "model_patch": "diff --git a/django/db/migrations/writer.py b/django/db/migrations/writer.py\nindex 36f0ec3..69dfd68 100644\n--- a/django/db/migrations/writer.py\n+++ b/django/db/migrations/writer.py\n@@ -163,9 +163,22 @@ class MigrationWriter:\n                 self.needs_manual_porting = True\n \n         # django.db.migrations is always used, but models import may not be.\n-        # If models import exists, merge it with migrations import.\n+        # Check if models import is needed - either explicitly or for base classes\n+        needs_models = False\n         if \"from django.db import models\" in imports:\n+            needs_models = True\n             imports.discard(\"from django.db import models\")\n+        else:\n+            # Check operations for any models.Model base classes\n+            for operation in self.migration.operations:\n+                if hasattr(operation, 'bases') and any(\n+                    isinstance(base, str) and 'models.Model' in base\n+                    for base in operation.bases\n+                ):\n+                    needs_models = True\n+                    break\n+\n+        if needs_models:\n             imports.add(\"from django.db import migrations, models\")\n         else:\n             imports.add(\"from django.db import migrations\")\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/writer.py b/django/db/migrations/writer.py\nindex acf3688..e51cb0f 100644\n--- a/django/db/migrations/writer.py\n+++ b/django/db/migrations/writer.py\n@@ -119,8 +119,16 @@ class MigrationWriter:\n                 migration_imports.add(line.split('import')[1].strip())\n                 imports.remove(line)\n                 self.needs_manual_porting = True\n+        needs_models = False\n         if 'from django.db import models' in imports:\n+            needs_models = True\n             imports.discard('from django.db import models')\n+        else:\n+            for operation in self.migration.operations:\n+                if hasattr(operation, 'bases') and any((isinstance(base, str) and 'models.Model' in base for base in operation.bases)):\n+                    needs_models = True\n+                    break\n+        if needs_models:\n             imports.add('from django.db import migrations, models')\n         else:\n             imports.add('from django.db import migrations')\n", "normalized_occurrence": 1}
