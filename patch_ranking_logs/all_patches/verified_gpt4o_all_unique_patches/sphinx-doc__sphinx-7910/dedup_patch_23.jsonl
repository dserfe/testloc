{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-7910", "model_patch": "diff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py\nindex f48faa1..5017706 100644\n--- a/sphinx/util/inspect.py\n+++ b/sphinx/util/inspect.py\n@@ -139,6 +139,10 @@ def unwrap_all(obj: Any, *, stop: Callable = None) -> Any:\n             obj = obj.func\n         elif inspect.isroutine(obj) and hasattr(obj, '__wrapped__'):\n             obj = obj.__wrapped__\n+            if hasattr(obj, '__globals__') and cls_path in obj.__globals__:\n+                cls = obj.__globals__[cls_path]\n+                if isinstance(cls, type) and hasattr(cls, obj.__name__):\n+                    obj = getattr(cls, obj.__name__)\n         elif isclassmethod(obj):\n             obj = obj.__func__\n         elif isstaticmethod(obj):\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py\nindex 6e5e6c6..6883f97 100644\n--- a/sphinx/util/inspect.py\n+++ b/sphinx/util/inspect.py\n@@ -77,6 +77,10 @@ def unwrap_all(obj: Any, *, stop: Callable=None) -> Any:\n             obj = obj.func\n         elif inspect.isroutine(obj) and hasattr(obj, '__wrapped__'):\n             obj = obj.__wrapped__\n+            if hasattr(obj, '__globals__') and cls_path in obj.__globals__:\n+                cls = obj.__globals__[cls_path]\n+                if isinstance(cls, type) and hasattr(cls, obj.__name__):\n+                    obj = getattr(cls, obj.__name__)\n         elif isclassmethod(obj):\n             obj = obj.__func__\n         elif isstaticmethod(obj):\n", "normalized_occurrence": 1}
