{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25332", "model_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 973eb1a..687e35f 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -3174,9 +3174,16 @@ None}, default: None\n         from matplotlib import _pylab_helpers\n         if self.canvas.manager in _pylab_helpers.Gcf.figs.values():\n             state['_restore_to_pylab'] = True\n+        # Remove weak references before pickling\n+        if '_align_label_groups' in state:\n+            state['_align_label_groups'] = {\n+                k: [ref() for ref in v if ref() is not None] \n+                for k, v in state['_align_label_groups'].items()\n+            }\n         return state\n \n     def __setstate__(self, state):\n+        import weakref\n         version = state.pop('__mpl_version__')\n         restore_to_pylab = state.pop('_restore_to_pylab', False)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 7796fb8..1c53f86 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -951,8 +951,11 @@ class Figure(FigureBase):\n         from matplotlib import _pylab_helpers\n         if self.canvas.manager in _pylab_helpers.Gcf.figs.values():\n             state['_restore_to_pylab'] = True\n+        if '_align_label_groups' in state:\n+            state['_align_label_groups'] = {k: [ref() for ref in v if ref() is not None] for k, v in state['_align_label_groups'].items()}\n         return state\n     def __setstate__(self, state):\n+        import weakref\n         version = state.pop('__mpl_version__')\n         restore_to_pylab = state.pop('_restore_to_pylab', False)\n         if version != mpl.__version__:\n", "normalized_occurrence": 1}
