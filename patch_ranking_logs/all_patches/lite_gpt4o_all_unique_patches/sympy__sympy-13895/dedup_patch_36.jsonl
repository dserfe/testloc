{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13895", "model_patch": "diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py\nindex a6ca9db..fbeaa02 100644\n--- a/sympy/simplify/simplify.py\n+++ b/sympy/simplify/simplify.py\n@@ -593,7 +593,7 @@ def simplify(expr, ratio=1.7, measure=count_ops, rational=False):\n     if expr.has(Product):\n         expr = product_simplify(expr)\n \n-    short = shorter(powsimp(expr, combine='exp', deep=True), powsimp(expr), expr)\n+    short = shorter(powsimp(expr, combine='exp', deep=True, force=True), powsimp(expr, force=True), expr)\n     short = shorter(short, cancel(short))\n     short = shorter(short, factor_terms(short), expand_power_exp(expand_mul(short)))\n     if short.has(TrigonometricFunction, HyperbolicFunction, ExpBase):\n@@ -621,7 +621,7 @@ def simplify(expr, ratio=1.7, measure=count_ops, rational=False):\n         if d != 0:\n             expr = signsimp(-n/(-d))\n \n-    if measure(expr) > ratio*measure(original_expr):\n+    if measure(expr) > ratio*measure(original_expr) and not (expr.has(Pow) and any(base.is_negative for base in expr.atoms(Pow))):\n         expr = original_expr\n \n     # restore floats\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py\nindex 52e38cb..b75ad18 100644\n--- a/sympy/simplify/simplify.py\n+++ b/sympy/simplify/simplify.py\n@@ -195,7 +195,7 @@ def simplify(expr, ratio=1.7, measure=count_ops, rational=False):\n         expr = sum_simplify(expr)\n     if expr.has(Product):\n         expr = product_simplify(expr)\n-    short = shorter(powsimp(expr, combine='exp', deep=True), powsimp(expr), expr)\n+    short = shorter(powsimp(expr, combine='exp', deep=True, force=True), powsimp(expr, force=True), expr)\n     short = shorter(short, cancel(short))\n     short = shorter(short, factor_terms(short), expand_power_exp(expand_mul(short)))\n     if short.has(TrigonometricFunction, HyperbolicFunction, ExpBase):\n@@ -211,7 +211,7 @@ def simplify(expr, ratio=1.7, measure=count_ops, rational=False):\n         n, d = fraction(expr)\n         if d != 0:\n             expr = signsimp(-n / -d)\n-    if measure(expr) > ratio * measure(original_expr):\n+    if measure(expr) > ratio * measure(original_expr) and (not (expr.has(Pow) and any((base.is_negative for base in expr.atoms(Pow))))):\n         expr = original_expr\n     if floats and rational is None:\n         expr = nfloat(expr, exponent=False)\n", "normalized_occurrence": 1}
