{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-11897", "model_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 6f6ac51..30a1bf1 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -356,10 +356,13 @@ class LatexPrinter(Printer):\n         else:\n             tex = \"\"\n \n-        from sympy.simplify import fraction\n-        numer, denom = fraction(expr, exact=True)\n+        # Don't try to split into fraction parts\n+        args = expr.args\n         separator = self._settings['mul_symbol_latex']\n         numbersep = self._settings['mul_symbol_latex_numbers']\n+        \n+        tex += self._print_seq(args, \"\", \"\", separator,\n+                           parenthesize=lambda x: x.is_Add)\n \n         def convert(expr):\n             if not expr.is_Mul:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex df1a5c2..46c2510 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -165,10 +165,10 @@ class LatexPrinter(Printer):\n                 include_parens = True\n         else:\n             tex = ''\n-        from sympy.simplify import fraction\n-        numer, denom = fraction(expr, exact=True)\n+        args = expr.args\n         separator = self._settings['mul_symbol_latex']\n         numbersep = self._settings['mul_symbol_latex_numbers']\n+        tex += self._print_seq(args, '', '', separator, parenthesize=lambda x: x.is_Add)\n         def convert(expr):\n             if not expr.is_Mul:\n                 return str(self._print(expr))\n", "normalized_occurrence": 1}
