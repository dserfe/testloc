{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-14995", "model_patch": "diff --git a/astropy/nddata/nddata_withmixins.py b/astropy/nddata/nddata_withmixins.py\nindex 496df38..02733cb 100644\n--- a/astropy/nddata/nddata_withmixins.py\n+++ b/astropy/nddata/nddata_withmixins.py\n@@ -69,4 +69,17 @@ class NDDataRef(NDArithmeticMixin, NDIOMixin, NDSlicingMixin, NDData):\n     are sliced.\n     \"\"\"\n \n-    pass\n+    # Overriding the multiply method to handle mask propagation\n+    def multiply(self, operand, handle_mask=np.bitwise_or):\n+        result = super().multiply(operand, handle_mask=handle_mask)\n+        \n+        if self.mask is None and operand.mask is None:\n+            result.mask = None\n+        elif self.mask is None:\n+            result.mask = operand.mask\n+        elif operand.mask is None:\n+            result.mask = self.mask\n+        else:\n+            result.mask = handle_mask(self.mask, operand.mask)\n+        \n+        return result\n", "occurrence": 1, "normalized_patch": "--- a/astropy/nddata/nddata_withmixins.py\n+++ b/astropy/nddata/nddata_withmixins.py\n-    pass\n+    def multiply(self, operand, handle_mask=np.bitwise_or):\n+        result = super().multiply(operand, handle_mask=handle_mask)\n+        if self.mask is None and operand.mask is None:\n+            result.mask = None\n+        elif self.mask is None:\n+            result.mask = operand.mask\n+        elif operand.mask is None:\n+            result.mask = self.mask\n+        else:\n+            result.mask = handle_mask(self.mask, operand.mask)\n+        return result", "normalized_occurrence": 1}
