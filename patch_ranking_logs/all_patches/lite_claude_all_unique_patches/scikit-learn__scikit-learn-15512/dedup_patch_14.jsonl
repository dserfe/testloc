{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-15512", "model_patch": "diff --git a/sklearn/cluster/_affinity_propagation.py b/sklearn/cluster/_affinity_propagation.py\nindex 0511594..6c350e6 100644\n--- a/sklearn/cluster/_affinity_propagation.py\n+++ b/sklearn/cluster/_affinity_propagation.py\n@@ -200,6 +200,11 @@ def affinity_propagation(S, preference=None, convergence_iter=15, max_iter=200,\n     else:\n         if verbose:\n             print(\"Did not converge\")\n+        # Return empty array for cluster centers and -1 for all labels when not converged\n+        I = np.array([], dtype=np.int64)\n+        K = 0\n+        c = np.full(n_samples, -1, dtype=np.int64)\n+        return I, c\n \n     I = np.flatnonzero(E)\n     K = I.size  # Identify exemplars\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/cluster/_affinity_propagation.py b/sklearn/cluster/_affinity_propagation.py\nindex b441de5..644f6d9 100644\n--- a/sklearn/cluster/_affinity_propagation.py\n+++ b/sklearn/cluster/_affinity_propagation.py\n@@ -71,6 +71,10 @@ def affinity_propagation(S, preference=None, convergence_iter=15, max_iter=200,\n     else:\n         if verbose:\n             print('Did not converge')\n+        I = np.array([], dtype=np.int64)\n+        K = 0\n+        c = np.full(n_samples, -1, dtype=np.int64)\n+        return (I, c)\n     I = np.flatnonzero(E)\n     K = I.size\n     if K > 0:\n", "normalized_occurrence": 1}
