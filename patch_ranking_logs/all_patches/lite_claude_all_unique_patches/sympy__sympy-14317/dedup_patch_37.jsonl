{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-14317", "model_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 408ff45..f6e3225 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1854,7 +1854,27 @@ class LatexPrinter(Printer):\n \n     def _print_Poly(self, poly):\n         cls = poly.__class__.__name__\n-        expr = self._print(poly.as_expr())\n+        terms = poly.terms()\n+        # Build the expression string term by term to maintain order\n+        expr_terms = []\n+        for monom, coeff in terms:\n+            if coeff == 0:\n+                continue\n+            term = []\n+            if coeff != 1 or sum(monom) == 0:\n+                if coeff == -1 and sum(monom) != 0:\n+                    term.append('-')\n+                else:\n+                    term.append(self._print(coeff))\n+            for x, p in zip(poly.gens, monom):\n+                if p == 0:\n+                    continue\n+                elif p == 1:\n+                    term.append(self._print(x))\n+                else:\n+                    term.append('%s^{%d}' % (self._print(x), p))\n+            expr_terms.append(''.join(term))\n+        expr = ' + '.join(expr_terms) if expr_terms else '0'\n         gens = list(map(self._print, poly.gens))\n         domain = \"domain=%s\" % self._print(poly.get_domain())\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 5a18831..cb92b84 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1241,7 +1241,26 @@ class LatexPrinter(Printer):\n         return '%s%s\\\\left[%s\\\\right]' % (inv, domain, symbols)\n     def _print_Poly(self, poly):\n         cls = poly.__class__.__name__\n-        expr = self._print(poly.as_expr())\n+        terms = poly.terms()\n+        expr_terms = []\n+        for monom, coeff in terms:\n+            if coeff == 0:\n+                continue\n+            term = []\n+            if coeff != 1 or sum(monom) == 0:\n+                if coeff == -1 and sum(monom) != 0:\n+                    term.append('-')\n+                else:\n+                    term.append(self._print(coeff))\n+            for x, p in zip(poly.gens, monom):\n+                if p == 0:\n+                    continue\n+                elif p == 1:\n+                    term.append(self._print(x))\n+                else:\n+                    term.append('%s^{%d}' % (self._print(x), p))\n+            expr_terms.append(''.join(term))\n+        expr = ' + '.join(expr_terms) if expr_terms else '0'\n         gens = list(map(self._print, poly.gens))\n         domain = 'domain=%s' % self._print(poly.get_domain())\n         args = ', '.join([expr] + gens + [domain])\n", "normalized_occurrence": 1}
