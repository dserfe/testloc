{"model_name_or_path": "agentless", "instance_id": "django__django-12908", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex a26bee7..71c4f6e 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -693,7 +693,7 @@ class SQLCompiler:\n             _, targets, alias, joins, path, _, transform_function = self._setup_joins(parts, opts, None)\n             targets, alias, _ = self.query.trim_joins(targets, joins, path)\n             for target in targets:\n-                if name in self.query.annotation_select:\n+                if name in self.query.annotation_select and not self.query.combinator:\n                     result.append(name)\n                 else:\n                     r, p = self.compile(transform_function(target, alias))\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex e6a07a3..fa21e0a 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -398,7 +398,7 @@ class SQLCompiler:\n             _, targets, alias, joins, path, _, transform_function = self._setup_joins(parts, opts, None)\n             targets, alias, _ = self.query.trim_joins(targets, joins, path)\n             for target in targets:\n-                if name in self.query.annotation_select:\n+                if name in self.query.annotation_select and (not self.query.combinator):\n                     result.append(name)\n                 else:\n                     r, p = self.compile(transform_function(target, alias))\n", "normalized_occurrence": 1}
