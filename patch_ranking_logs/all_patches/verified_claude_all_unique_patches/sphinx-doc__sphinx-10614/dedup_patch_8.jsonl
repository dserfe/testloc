{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-10614", "model_patch": "diff --git a/sphinx/ext/inheritance_diagram.py b/sphinx/ext/inheritance_diagram.py\nindex 5f0da13..e13690e 100644\n--- a/sphinx/ext/inheritance_diagram.py\n+++ b/sphinx/ext/inheritance_diagram.py\n@@ -413,12 +413,19 @@ def html_visit_inheritance_diagram(self: HTML5Translator, node: inheritance_diag\n     for child in pending_xrefs:\n         if child.get('refuri') is not None:\n             if graphviz_output_format == 'SVG':\n-                urls[child['reftitle']] = \"../\" + child.get('refuri')\n+                # For SVG, we need to ensure proper relative path from the current document\n+                refuri = child.get('refuri')\n+                if '/' in self.builder.current_docname:\n+                    # If we're in a nested directory, don't add ../\n+                    urls[child['reftitle']] = refuri\n+                else:\n+                    # If we're at root level, we need ../ to reach the target\n+                    urls[child['reftitle']] = \"../\" + refuri\n             else:\n                 urls[child['reftitle']] = child.get('refuri')\n         elif child.get('refid') is not None:\n             if graphviz_output_format == 'SVG':\n-                urls[child['reftitle']] = '../' + current_filename + '#' + child.get('refid')\n+                urls[child['reftitle']] = current_filename + '#' + child.get('refid')\n             else:\n                 urls[child['reftitle']] = '#' + child.get('refid')\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/inheritance_diagram.py b/sphinx/ext/inheritance_diagram.py\nindex f0d9745..4c31639 100644\n--- a/sphinx/ext/inheritance_diagram.py\n+++ b/sphinx/ext/inheritance_diagram.py\n@@ -199,12 +199,16 @@ def html_visit_inheritance_diagram(self: HTML5Translator, node: inheritance_diag\n     for child in pending_xrefs:\n         if child.get('refuri') is not None:\n             if graphviz_output_format == 'SVG':\n-                urls[child['reftitle']] = '../' + child.get('refuri')\n+                refuri = child.get('refuri')\n+                if '/' in self.builder.current_docname:\n+                    urls[child['reftitle']] = refuri\n+                else:\n+                    urls[child['reftitle']] = '../' + refuri\n             else:\n                 urls[child['reftitle']] = child.get('refuri')\n         elif child.get('refid') is not None:\n             if graphviz_output_format == 'SVG':\n-                urls[child['reftitle']] = '../' + current_filename + '#' + child.get('refid')\n+                urls[child['reftitle']] = current_filename + '#' + child.get('refid')\n             else:\n                 urls[child['reftitle']] = '#' + child.get('refid')\n     dotcode = graph.generate_dot(name, urls, env=self.builder.env)\n", "normalized_occurrence": 1}
