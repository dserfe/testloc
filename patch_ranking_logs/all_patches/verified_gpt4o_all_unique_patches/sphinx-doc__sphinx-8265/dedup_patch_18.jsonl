{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8265", "model_patch": "diff --git a/sphinx/util/docstrings.py b/sphinx/util/docstrings.py\nindex 5146fcb..04c880c 100644\n--- a/sphinx/util/docstrings.py\n+++ b/sphinx/util/docstrings.py\n@@ -45,7 +45,7 @@ def extract_metadata(s: str) -> Dict[str, str]:\n     return metadata\n \n \n-def prepare_docstring(s: str, ignore: int = None, tabsize: int = 8) -> List[str]:\n+def prepare_docstring(s: str, ignore: int = None, tabsize: int = 8, nested: bool = False) -> List[str]:\n     \"\"\"Convert a docstring into lines of parseable reST.  Remove common leading\n     indentation, where the indentation of a given number of lines (usually just\n     one) is ignored.\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/util/docstrings.py b/sphinx/util/docstrings.py\nindex a88ac35..28b333a 100644\n--- a/sphinx/util/docstrings.py\n+++ b/sphinx/util/docstrings.py\n@@ -23,7 +23,7 @@ def extract_metadata(s: str) -> Dict[str, str]:\n             else:\n                 in_other_element = True\n     return metadata\n-def prepare_docstring(s: str, ignore: int=None, tabsize: int=8) -> List[str]:\n+def prepare_docstring(s: str, ignore: int=None, tabsize: int=8, nested: bool=False) -> List[str]:\n     if ignore is None:\n         ignore = 1\n     else:\n", "normalized_occurrence": 1}
