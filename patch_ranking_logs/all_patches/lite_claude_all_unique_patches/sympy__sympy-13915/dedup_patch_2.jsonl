{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13915", "model_patch": "diff --git a/sympy/core/basic.py b/sympy/core/basic.py\nindex 0977e81..2ccef57 100644\n--- a/sympy/core/basic.py\n+++ b/sympy/core/basic.py\n@@ -1009,6 +1009,15 @@ class Basic(with_metaclass(ManagedProperties)):\n                     args[i] = arg\n             if hit:\n                 rv = self.func(*args)\n+                # Check if the substitution would lead to an undefined expression\n+                try:\n+                    # Basic undefined check - division by zero\n+                    if rv.has(S.NaN) or rv.has(S.ComplexInfinity):\n+                        from sympy.core.numbers import nan\n+                        return nan\n+                except:\n+                    pass\n+                    \n                 hack2 = hints.get('hack2', False)\n                 if hack2 and self.is_Mul and not rv.is_Mul:  # 2-arg hack\n                     coeff = S.One\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/basic.py b/sympy/core/basic.py\nindex 782db85..43fa41f 100644\n--- a/sympy/core/basic.py\n+++ b/sympy/core/basic.py\n@@ -344,6 +344,12 @@ class Basic(with_metaclass(ManagedProperties)):\n                     args[i] = arg\n             if hit:\n                 rv = self.func(*args)\n+                try:\n+                    if rv.has(S.NaN) or rv.has(S.ComplexInfinity):\n+                        from sympy.core.numbers import nan\n+                        return nan\n+                except:\n+                    pass\n                 hack2 = hints.get('hack2', False)\n                 if hack2 and self.is_Mul and (not rv.is_Mul):\n                     coeff = S.One\n", "normalized_occurrence": 1}
