{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-24870", "model_patch": "diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py\nindex 908a24f..b930aca 100644\n--- a/lib/matplotlib/contour.py\n+++ b/lib/matplotlib/contour.py\n@@ -1447,11 +1447,17 @@ class QuadContourSet(ContourSet):\n             fn = 'contour'\n         nargs = len(args)\n         if nargs <= 2:\n+            # Check if input is boolean array before converting to float\n+            if isinstance(args[0], np.ndarray) and args[0].dtype == bool and self.levels is None:\n+                self.levels = [0.5]\n             z = ma.asarray(args[0], dtype=np.float64)\n             x, y = self._initialize_x_y(z)\n             args = args[1:]\n         elif nargs <= 4:\n             x, y, z = self._check_xyz(args[:3], kwargs)\n+            # Check if input is boolean array before converting to float\n+            if isinstance(z, np.ndarray) and z.dtype == bool and self.levels is None:\n+                self.levels = [0.5]\n             args = args[3:]\n         else:\n             raise _api.nargs_error(fn, takes=\"from 1 to 4\", given=nargs)\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py\nindex 04dc867..f74417a 100644\n--- a/lib/matplotlib/contour.py\n+++ b/lib/matplotlib/contour.py\n@@ -663,11 +663,15 @@ class QuadContourSet(ContourSet):\n             fn = 'contour'\n         nargs = len(args)\n         if nargs <= 2:\n+            if isinstance(args[0], np.ndarray) and args[0].dtype == bool and (self.levels is None):\n+                self.levels = [0.5]\n             z = ma.asarray(args[0], dtype=np.float64)\n             x, y = self._initialize_x_y(z)\n             args = args[1:]\n         elif nargs <= 4:\n             x, y, z = self._check_xyz(args[:3], kwargs)\n+            if isinstance(z, np.ndarray) and z.dtype == bool and (self.levels is None):\n+                self.levels = [0.5]\n             args = args[3:]\n         else:\n             raise _api.nargs_error(fn, takes='from 1 to 4', given=nargs)\n", "normalized_occurrence": 1}
