{"model_name_or_path": "agentless_claude", "instance_id": "astropy__astropy-14369", "model_patch": "diff --git a/astropy/units/format/cds.py b/astropy/units/format/cds.py\nindex 761c4b8..6977f19 100644\n--- a/astropy/units/format/cds.py\n+++ b/astropy/units/format/cds.py\n@@ -187,7 +187,12 @@ class CDS(Base):\n             if len(p) == 3:\n                 p[0] = p[2] ** -1\n             else:\n-                p[0] = p[1] / p[3]\n+                # For multiple divisions, treat everything after the division sign as one denominator\n+                if isinstance(p[3], tuple):\n+                    p[0] = p[1] * p[3][0] ** -1\n+                else:\n+                    denominator = p[3]\n+                    p[0] = p[1] / denominator\n \n         def p_unit_expression(p):\n             \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/units/format/cds.py b/astropy/units/format/cds.py\nindex 829c8ad..127422a 100644\n--- a/astropy/units/format/cds.py\n+++ b/astropy/units/format/cds.py\n@@ -81,8 +81,11 @@ class CDS(Base):\n         def p_division_of_units(p):\n             if len(p) == 3:\n                 p[0] = p[2] ** (-1)\n+            elif isinstance(p[3], tuple):\n+                p[0] = p[1] * p[3][0] ** (-1)\n             else:\n-                p[0] = p[1] / p[3]\n+                denominator = p[3]\n+                p[0] = p[1] / denominator\n         def p_unit_expression(p):\n             if len(p) == 2:\n                 p[0] = p[1]\n", "normalized_occurrence": 1}
