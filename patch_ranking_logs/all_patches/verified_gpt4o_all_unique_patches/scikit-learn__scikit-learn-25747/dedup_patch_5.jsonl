{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-25747", "model_patch": "diff --git a/sklearn/utils/_set_output.py b/sklearn/utils/_set_output.py\nindex 52acc1f..5cdbd92 100644\n--- a/sklearn/utils/_set_output.py\n+++ b/sklearn/utils/_set_output.py\n@@ -1,3 +1,4 @@\n+\n from functools import wraps\n \n from scipy.sparse import issparse\n@@ -59,7 +60,15 @@ def _wrap_in_pandas_container(\n             data_to_wrap.index = index\n         return data_to_wrap\n \n-    return pd.DataFrame(data_to_wrap, index=index, columns=columns)\n+    if isinstance(data_to_wrap, pd.Series):\n+        data_to_wrap = data_to_wrap.to_frame()\n+        \n+    result_df = pd.DataFrame(data_to_wrap, index=index, columns=columns)\n+\n+    if len(result_df.columns) == 1 and isinstance(columns, list) and len(columns) == 1:\n+        result_df.columns = columns\n+\n+    return result_df\n \n \n def _get_output_config(method, estimator=None):\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/utils/_set_output.py b/sklearn/utils/_set_output.py\nindex 386f312..df180cf 100644\n--- a/sklearn/utils/_set_output.py\n+++ b/sklearn/utils/_set_output.py\n@@ -18,7 +18,12 @@ def _wrap_in_pandas_container(data_to_wrap, *, columns, index=None):\n         if index is not None:\n             data_to_wrap.index = index\n         return data_to_wrap\n-    return pd.DataFrame(data_to_wrap, index=index, columns=columns)\n+    if isinstance(data_to_wrap, pd.Series):\n+        data_to_wrap = data_to_wrap.to_frame()\n+    result_df = pd.DataFrame(data_to_wrap, index=index, columns=columns)\n+    if len(result_df.columns) == 1 and isinstance(columns, list) and (len(columns) == 1):\n+        result_df.columns = columns\n+    return result_df\n def _get_output_config(method, estimator=None):\n     est_sklearn_output_config = getattr(estimator, '_sklearn_output_config', {})\n     if method in est_sklearn_output_config:\n", "normalized_occurrence": 1}
