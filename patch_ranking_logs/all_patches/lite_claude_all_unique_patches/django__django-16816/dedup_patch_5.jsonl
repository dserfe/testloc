{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16816", "model_patch": "diff --git a/django/contrib/admin/checks.py b/django/contrib/admin/checks.py\nindex e2f5674..388208b 100644\n--- a/django/contrib/admin/checks.py\n+++ b/django/contrib/admin/checks.py\n@@ -897,6 +897,18 @@ class ModelAdminChecks(BaseModelAdminChecks):\n             return []\n         try:\n             field = obj.model._meta.get_field(item)\n+            # Validate that the field can be used for display\n+            try:\n+                _get_non_gfk_field(obj.model._meta, item)\n+            except (FieldDoesNotExist, FieldIsAForeignKeyColumnName):\n+                return [\n+                    checks.Error(\n+                        f\"The value of '{label}' refers to '{item}', which cannot be \"\n+                        f\"used as a field for display in list_display.\",\n+                        obj=obj.__class__,\n+                        id=\"admin.E108\",\n+                    )\n+                ]\n         except FieldDoesNotExist:\n             try:\n                 field = getattr(obj.model, item)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/checks.py b/django/contrib/admin/checks.py\nindex 4734fd9..26a0a88 100644\n--- a/django/contrib/admin/checks.py\n+++ b/django/contrib/admin/checks.py\n@@ -339,6 +339,10 @@ class ModelAdminChecks(BaseModelAdminChecks):\n             return []\n         try:\n             field = obj.model._meta.get_field(item)\n+            try:\n+                _get_non_gfk_field(obj.model._meta, item)\n+            except (FieldDoesNotExist, FieldIsAForeignKeyColumnName):\n+                return [checks.Error(f\"The value of '{label}' refers to '{item}', which cannot be used as a field for display in list_display.\", obj=obj.__class__, id='admin.E108')]\n         except FieldDoesNotExist:\n             try:\n                 field = getattr(obj.model, item)\n", "normalized_occurrence": 1}
