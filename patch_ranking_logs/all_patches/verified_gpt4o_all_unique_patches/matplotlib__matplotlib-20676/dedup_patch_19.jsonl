{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-20676", "model_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex a6bed3c..819b4a2 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -2184,7 +2184,14 @@ class SpanSelector(_SelectorWidget):\n             # visibility to False and extents to (v, v)\n             # update will be called when setting the extents\n             self.visible = False\n-            self.extents = v, v\n+            # Ensure the original limits are respected\n+            data_lim = self.ax.dataLim\n+            if self.direction == 'horizontal':\n+                vmin, vmax = data_lim.x0, data_lim.x1\n+            else:\n+                vmin, vmax = data_lim.y0, data_lim.y1\n+\n+            self.extents = vmin, vmax\n             # We need to set the visibility back, so the span selector will be\n             # drawn when necessary (span width > 0)\n             self.visible = True\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex b2dd641..2d55664 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -1784,7 +1784,12 @@ class SpanSelector(_SelectorWidget):\n         self._prev = self._get_data(event)\n         if self._active_handle is None:\n             self.visible = False\n-            self.extents = (v, v)\n+            data_lim = self.ax.dataLim\n+            if self.direction == 'horizontal':\n+                vmin, vmax = (data_lim.x0, data_lim.x1)\n+            else:\n+                vmin, vmax = (data_lim.y0, data_lim.y1)\n+            self.extents = (vmin, vmax)\n             self.visible = True\n         else:\n             self.set_visible(True)\n", "normalized_occurrence": 1}
