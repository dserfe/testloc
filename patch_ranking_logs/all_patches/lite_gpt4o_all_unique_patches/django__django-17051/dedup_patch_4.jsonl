{"model_name_or_path": "agentless", "instance_id": "django__django-17051", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 858b89a..7f08379 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -783,7 +783,7 @@ class QuerySet(AltersData):\n         self._prepare_for_bulk_create(objs)\n         with transaction.atomic(using=self.db, savepoint=False):\n             objs_with_pk, objs_without_pk = partition(lambda o: o.pk is None, objs)\n-            if objs_with_pk:\n+            if objs_with_pk and (on_conflict is None or connection.features.can_return_rows_from_bulk_update):\n                 returned_columns = self._batched_insert(\n                     objs_with_pk,\n                     fields,\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 0fe72c0..30cc64c 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -398,7 +398,7 @@ class QuerySet(AltersData):\n         self._prepare_for_bulk_create(objs)\n         with transaction.atomic(using=self.db, savepoint=False):\n             objs_with_pk, objs_without_pk = partition(lambda o: o.pk is None, objs)\n-            if objs_with_pk:\n+            if objs_with_pk and (on_conflict is None or connection.features.can_return_rows_from_bulk_update):\n                 returned_columns = self._batched_insert(objs_with_pk, fields, batch_size, on_conflict=on_conflict, update_fields=update_fields, unique_fields=unique_fields)\n                 for obj_with_pk, results in zip(objs_with_pk, returned_columns):\n                     for result, field in zip(results, opts.db_returning_fields):\n", "normalized_occurrence": 1}
