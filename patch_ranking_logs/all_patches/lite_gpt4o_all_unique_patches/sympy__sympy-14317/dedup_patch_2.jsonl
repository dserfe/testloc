{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-14317", "model_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 408ff45..17f011c 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1854,7 +1854,36 @@ class LatexPrinter(Printer):\n \n     def _print_Poly(self, poly):\n         cls = poly.__class__.__name__\n-        expr = self._print(poly.as_expr())\n+        terms = []\n+        for monom, coeff in poly.terms():\n+            s_monom = []\n+            for i, exp in enumerate(monom):\n+                if exp > 0:\n+                    if exp == 1:\n+                        s_monom.append(self._print(poly.gens[i]))\n+                    else:\n+                        s_monom.append(self._print(poly.gens[i]) + \"^{%d}\" % exp)\n+            s_monom = \" \".join(s_monom)\n+            if coeff.is_Add:\n+                if s_monom:\n+                    s_coeff = r\"\\left (%s \\right )\" % self._print(coeff)\n+                else:\n+                    s_coeff = self._print(coeff)\n+            else:\n+                if s_monom:\n+                    if coeff is S.One:\n+                        terms.extend([s_monom])\n+                        continue\n+                    if coeff is S.NegativeOne:\n+                        terms.extend([\"-\" + s_monom])\n+                        continue\n+                s_coeff = self._print(coeff)\n+            if not s_monom:\n+                s_term = s_coeff\n+            else:\n+                s_term = s_coeff + \" \" + s_monom\n+            terms.append(s_term)\n+        expr = \" + \".join(terms)\n         gens = list(map(self._print, poly.gens))\n         domain = \"domain=%s\" % self._print(poly.get_domain())\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 5a18831..9d85f90 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1241,7 +1241,36 @@ class LatexPrinter(Printer):\n         return '%s%s\\\\left[%s\\\\right]' % (inv, domain, symbols)\n     def _print_Poly(self, poly):\n         cls = poly.__class__.__name__\n-        expr = self._print(poly.as_expr())\n+        terms = []\n+        for monom, coeff in poly.terms():\n+            s_monom = []\n+            for i, exp in enumerate(monom):\n+                if exp > 0:\n+                    if exp == 1:\n+                        s_monom.append(self._print(poly.gens[i]))\n+                    else:\n+                        s_monom.append(self._print(poly.gens[i]) + '^{%d}' % exp)\n+            s_monom = ' '.join(s_monom)\n+            if coeff.is_Add:\n+                if s_monom:\n+                    s_coeff = '\\\\left (%s \\\\right )' % self._print(coeff)\n+                else:\n+                    s_coeff = self._print(coeff)\n+            else:\n+                if s_monom:\n+                    if coeff is S.One:\n+                        terms.extend([s_monom])\n+                        continue\n+                    if coeff is S.NegativeOne:\n+                        terms.extend(['-' + s_monom])\n+                        continue\n+                s_coeff = self._print(coeff)\n+            if not s_monom:\n+                s_term = s_coeff\n+            else:\n+                s_term = s_coeff + ' ' + s_monom\n+            terms.append(s_term)\n+        expr = ' + '.join(terms)\n         gens = list(map(self._print, poly.gens))\n         domain = 'domain=%s' % self._print(poly.get_domain())\n         args = ', '.join([expr] + gens + [domain])\n", "normalized_occurrence": 1}
