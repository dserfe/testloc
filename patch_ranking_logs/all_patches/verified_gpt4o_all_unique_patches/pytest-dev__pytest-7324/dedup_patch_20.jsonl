{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7324", "model_patch": "diff --git a/src/_pytest/debugging.py b/src/_pytest/debugging.py\nindex 6a19d2c..99e789d 100644\n--- a/src/_pytest/debugging.py\n+++ b/src/_pytest/debugging.py\n@@ -237,6 +237,7 @@ class pytestPDB:\n         if cls._config:\n             tw = _pytest.config.create_terminal_writer(cls._config)\n             tw.line()\n+            assert not any(keyword in cls._config.getini(\"python_files\") for keyword in [\"None\", \"True\", \"False\"])\n \n             if cls._recursive_debug == 0:\n                 # Handle header similar to pdb.set_trace in py37+.\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/debugging.py b/src/_pytest/debugging.py\nindex 04f3f1a..9eaf42e 100644\n--- a/src/_pytest/debugging.py\n+++ b/src/_pytest/debugging.py\n@@ -141,6 +141,7 @@ class pytestPDB:\n         if cls._config:\n             tw = _pytest.config.create_terminal_writer(cls._config)\n             tw.line()\n+            assert not any((keyword in cls._config.getini('python_files') for keyword in ['None', 'True', 'False']))\n             if cls._recursive_debug == 0:\n                 header = kwargs.pop('header', None)\n                 if header is not None:\n", "normalized_occurrence": 1}
