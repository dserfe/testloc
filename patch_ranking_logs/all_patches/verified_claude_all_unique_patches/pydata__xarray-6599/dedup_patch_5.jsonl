{"model_name_or_path": "agentless_claude", "instance_id": "pydata__xarray-6599", "model_patch": "diff --git a/xarray/core/duck_array_ops.py b/xarray/core/duck_array_ops.py\nindex 3ef7ed0..65b5b97 100644\n--- a/xarray/core/duck_array_ops.py\n+++ b/xarray/core/duck_array_ops.py\n@@ -423,8 +423,10 @@ def datetime_to_numeric(array, offset=None, datetime_unit=None, dtype=float):\n     # TODO: make this function dask-compatible?\n     # Set offset to minimum if not given\n     if offset is None:\n-        if array.dtype.kind in \"Mm\":\n+        if array.dtype.kind == \"M\":\n             offset = _datetime_nanmin(array)\n+        elif array.dtype.kind == \"m\":\n+            offset = array[~pandas_isnull(array)].min()\n         else:\n             offset = min(array)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/duck_array_ops.py b/xarray/core/duck_array_ops.py\nindex 003b4fa..2f69d9c 100644\n--- a/xarray/core/duck_array_ops.py\n+++ b/xarray/core/duck_array_ops.py\n@@ -227,8 +227,10 @@ def _datetime_nanmin(array):\n     return array.astype(dtype)\n def datetime_to_numeric(array, offset=None, datetime_unit=None, dtype=float):\n     if offset is None:\n-        if array.dtype.kind in 'Mm':\n+        if array.dtype.kind == 'M':\n             offset = _datetime_nanmin(array)\n+        elif array.dtype.kind == 'm':\n+            offset = array[~pandas_isnull(array)].min()\n         else:\n             offset = min(array)\n     array = array - offset\n", "normalized_occurrence": 1}
