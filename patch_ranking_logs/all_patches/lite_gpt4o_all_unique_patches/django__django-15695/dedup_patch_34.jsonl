{"model_name_or_path": "agentless", "instance_id": "django__django-15695", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex b086232..d92111f 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -976,7 +976,13 @@ class RenameIndex(IndexOperation):\n         )\n         self.new_name, self.old_name = self.old_name, self.new_name\n \n-        self.database_forwards(app_label, schema_editor, from_state, to_state)\n+        if self.old_name:\n+            self.database_forwards(app_label, schema_editor, from_state, to_state)\n+        else:\n+            # Restore the original auto-generated index name for unnamed indexes\n+            model = from_state.apps.get_model(app_label, self.model_name)\n+            schema_editor.remove_index(model, self.new_name)\n+            schema_editor.add_index(model, self.old_name)\n \n         self.new_name_lower, self.old_name_lower = (\n             self.old_name_lower,\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 87ad28e..0971822 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -439,7 +439,12 @@ class RenameIndex(IndexOperation):\n             return\n         self.new_name_lower, self.old_name_lower = (self.old_name_lower, self.new_name_lower)\n         self.new_name, self.old_name = (self.old_name, self.new_name)\n-        self.database_forwards(app_label, schema_editor, from_state, to_state)\n+        if self.old_name:\n+            self.database_forwards(app_label, schema_editor, from_state, to_state)\n+        else:\n+            model = from_state.apps.get_model(app_label, self.model_name)\n+            schema_editor.remove_index(model, self.new_name)\n+            schema_editor.add_index(model, self.old_name)\n         self.new_name_lower, self.old_name_lower = (self.old_name_lower, self.new_name_lower)\n         self.new_name, self.old_name = (self.old_name, self.new_name)\n     def describe(self):\n", "normalized_occurrence": 1}
