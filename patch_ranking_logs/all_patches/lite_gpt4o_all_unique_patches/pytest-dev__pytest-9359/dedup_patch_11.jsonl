{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-9359", "model_patch": "diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py\nindex 9657da0..8296bd6 100644\n--- a/src/_pytest/assertion/rewrite.py\n+++ b/src/_pytest/assertion/rewrite.py\n@@ -903,7 +903,7 @@ class AssertionRewriter(ast.NodeVisitor):\n \n             # Passed\n             fmt_pass = self.helper(\"_format_explanation\", msg)\n-            orig = _get_assertion_exprs(self.source)[assert_.lineno]\n+            orig = _get_assertion_exprs(self.source)[assert_.lineno - 1]\n             hook_call_pass = ast.Expr(\n                 self.helper(\n                     \"_call_assertion_pass\",\n", "occurrence": 9, "normalized_patch": "diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py\nindex 9f4da3b..052770c 100644\n--- a/src/_pytest/assertion/rewrite.py\n+++ b/src/_pytest/assertion/rewrite.py\n@@ -482,7 +482,7 @@ class AssertionRewriter(ast.NodeVisitor):\n             statements_fail.extend(self.expl_stmts)\n             statements_fail.append(raise_)\n             fmt_pass = self.helper('_format_explanation', msg)\n-            orig = _get_assertion_exprs(self.source)[assert_.lineno]\n+            orig = _get_assertion_exprs(self.source)[assert_.lineno - 1]\n             hook_call_pass = ast.Expr(self.helper('_call_assertion_pass', ast.Num(assert_.lineno), ast.Str(orig), fmt_pass))\n             hook_impl_test = ast.If(self.helper('_check_if_assertion_pass_impl'), self.expl_stmts + [hook_call_pass], [])\n             statements_pass = [hook_impl_test]\n", "normalized_occurrence": 9}
