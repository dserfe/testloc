{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-26291", "model_patch": "diff --git a/lib/mpl_toolkits/axes_grid1/inset_locator.py b/lib/mpl_toolkits/axes_grid1/inset_locator.py\nindex 136aaa8..321f938 100644\n--- a/lib/mpl_toolkits/axes_grid1/inset_locator.py\n+++ b/lib/mpl_toolkits/axes_grid1/inset_locator.py\n@@ -68,8 +68,10 @@ class AnchoredLocatorBase(AnchoredOffsetbox):\n     def draw(self, renderer):\n         raise RuntimeError(\"No draw method should be called\")\n \n-    def __call__(self, ax, renderer):\n+    def __call__(self, ax, renderer=None):\n         self.axes = ax\n+        if renderer is None:\n+            renderer = ax.figure._get_renderer()\n         bbox = self.get_window_extent(renderer)\n         px, py = self.get_offset(bbox.width, bbox.height, 0, 0, renderer)\n         bbox_canvas = Bbox.from_bounds(px, py, bbox.width, bbox.height)\n", "occurrence": 3, "normalized_patch": "diff --git a/lib/mpl_toolkits/axes_grid1/inset_locator.py b/lib/mpl_toolkits/axes_grid1/inset_locator.py\nindex 4445c94..bb169b3 100644\n--- a/lib/mpl_toolkits/axes_grid1/inset_locator.py\n+++ b/lib/mpl_toolkits/axes_grid1/inset_locator.py\n@@ -22,8 +22,10 @@ class AnchoredLocatorBase(AnchoredOffsetbox):\n         super().__init__(loc, pad=0.0, child=None, borderpad=borderpad, bbox_to_anchor=bbox_to_anchor, bbox_transform=bbox_transform)\n     def draw(self, renderer):\n         raise RuntimeError('No draw method should be called')\n-    def __call__(self, ax, renderer):\n+    def __call__(self, ax, renderer=None):\n         self.axes = ax\n+        if renderer is None:\n+            renderer = ax.figure._get_renderer()\n         bbox = self.get_window_extent(renderer)\n         px, py = self.get_offset(bbox.width, bbox.height, 0, 0, renderer)\n         bbox_canvas = Bbox.from_bounds(px, py, bbox.width, bbox.height)\n", "normalized_occurrence": 3}
