{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-24562", "model_patch": "diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\nindex 1c28b44..ca94653 100644\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -1616,11 +1616,8 @@ class Rational(Number):\n                         p = fractions.Fraction(p)\n                     except ValueError:\n                         pass  # error will raise below\n-                    else:\n-                        return Rational(p.numerator, p.denominator, 1)\n-\n-                if not isinstance(p, Rational):\n-                    raise TypeError('invalid input: %s' % p)\n+                    if not isinstance(p, Rational):\n+                        raise TypeError('invalid input: %s' % p)\n \n             q = 1\n             gcd = 1\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\nindex c0e7188..e4ca844 100644\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -1402,10 +1402,8 @@ class Rational(Number):\n                         p = fractions.Fraction(p)\n                     except ValueError:\n                         pass\n-                    else:\n-                        return Rational(p.numerator, p.denominator, 1)\n-                if not isinstance(p, Rational):\n-                    raise TypeError('invalid input: %s' % p)\n+                    if not isinstance(p, Rational):\n+                        raise TypeError('invalid input: %s' % p)\n             q = 1\n             gcd = 1\n         if not isinstance(p, SYMPY_INTS):\n", "normalized_occurrence": 1}
