{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-15976", "model_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 85af872..c257742 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -333,14 +333,19 @@ class MathMLContentPrinter(MathMLPrinterBase):\n         return self._print_Integral(e)\n \n     def _print_Symbol(self, sym):\n-        ci = self.dom.createElement(self.mathml_tag(sym))\n+        x = self.dom.createElement('mi')\n+\n+        if sym.is_integer or sym.is_number:\n+            x.appendChild(self.dom.createTextNode(str(sym)))\n+        else:\n+            x.appendChild(self.dom.createTextNode(sym.name))\n \n         def join(items):\n             if len(items) > 1:\n-                mrow = self.dom.createElement('mml:mrow')\n+                mrow = self.dom.createElement('mrow')\n                 for i, item in enumerate(items):\n                     if i > 0:\n-                        mo = self.dom.createElement('mml:mo')\n+                        mo = self.dom.createElement('mo')\n                         mo.appendChild(self.dom.createTextNode(\" \"))\n                         mrow.appendChild(mo)\n                     mi = self.dom.createElement('mml:mi')\n@@ -748,6 +753,11 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n         if style == 'bold':\n             x.setAttribute('mathvariant', 'bold')\n \n+        if sym.is_integer or sym.is_number:\n+            x.appendChild(self.dom.createTextNode(str(sym)))\n+        else:\n+            x.appendChild(self.dom.createTextNode(sym.name))\n+\n         def join(items):\n             if len(items) > 1:\n                 mrow = self.dom.createElement('mrow')\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 28d3e1a..88e791c 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -202,13 +202,17 @@ class MathMLContentPrinter(MathMLPrinterBase):\n     def _print_Sum(self, e):\n         return self._print_Integral(e)\n     def _print_Symbol(self, sym):\n-        ci = self.dom.createElement(self.mathml_tag(sym))\n+        x = self.dom.createElement('mi')\n+        if sym.is_integer or sym.is_number:\n+            x.appendChild(self.dom.createTextNode(str(sym)))\n+        else:\n+            x.appendChild(self.dom.createTextNode(sym.name))\n         def join(items):\n             if len(items) > 1:\n-                mrow = self.dom.createElement('mml:mrow')\n+                mrow = self.dom.createElement('mrow')\n                 for i, item in enumerate(items):\n                     if i > 0:\n-                        mo = self.dom.createElement('mml:mo')\n+                        mo = self.dom.createElement('mo')\n                         mo.appendChild(self.dom.createTextNode(' '))\n                         mrow.appendChild(mo)\n                     mi = self.dom.createElement('mml:mi')\n@@ -519,6 +523,10 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n         x = self.dom.createElement('mi')\n         if style == 'bold':\n             x.setAttribute('mathvariant', 'bold')\n+        if sym.is_integer or sym.is_number:\n+            x.appendChild(self.dom.createTextNode(str(sym)))\n+        else:\n+            x.appendChild(self.dom.createTextNode(sym.name))\n         def join(items):\n             if len(items) > 1:\n                 mrow = self.dom.createElement('mrow')\n", "normalized_occurrence": 1}
