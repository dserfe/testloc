{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-7910", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 87c3fb8..a368e7e 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -345,6 +345,8 @@ class Documenter:\n                 ret = import_object(self.modname, self.objpath, self.objtype,\n                                     attrgetter=self.get_attr,\n                                     warningiserror=self.env.config.autodoc_warningiserror)\n+                if hasattr(self.object, '__wrapped__'):\n+                    self.object = unwrap_all(self.object)\n                 self.module, self.parent, self.object_name, self.object = ret\n                 return True\n             except ImportError as exc:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 69b2ccc..1105208 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -268,6 +268,8 @@ class Documenter:\n         with mock(self.env.config.autodoc_mock_imports):\n             try:\n                 ret = import_object(self.modname, self.objpath, self.objtype, attrgetter=self.get_attr, warningiserror=self.env.config.autodoc_warningiserror)\n+                if hasattr(self.object, '__wrapped__'):\n+                    self.object = unwrap_all(self.object)\n                 self.module, self.parent, self.object_name, self.object = ret\n                 return True\n             except ImportError as exc:\n", "normalized_occurrence": 1}
