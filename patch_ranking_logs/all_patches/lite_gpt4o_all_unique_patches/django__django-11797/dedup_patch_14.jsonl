{"model_name_or_path": "agentless", "instance_id": "django__django-11797", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 946e695..831a53a 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -111,7 +111,7 @@ class SQLCompiler:\n             cols = expr.get_group_by_cols()\n             for col in cols:\n                 expressions.append(col)\n-        for expr, (sql, params, is_ref) in order_by:\n+        for expr, (sql, params, is_ref) in order_by + extra_select:\n             # Skip References to the select clause, as all expressions in the\n             # select clause are already part of the group by.\n             if not expr.contains_aggregate and not is_ref:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex a6b66a9..00eab17 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -49,7 +49,7 @@ class SQLCompiler:\n             cols = expr.get_group_by_cols()\n             for col in cols:\n                 expressions.append(col)\n-        for expr, (sql, params, is_ref) in order_by:\n+        for expr, (sql, params, is_ref) in order_by + extra_select:\n             if not expr.contains_aggregate and (not is_ref):\n                 expressions.extend(expr.get_source_expressions())\n         having_group_by = self.having.get_group_by_cols() if self.having else ()\n", "normalized_occurrence": 1}
