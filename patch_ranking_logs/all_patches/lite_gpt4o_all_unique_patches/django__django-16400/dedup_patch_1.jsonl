{"model_name_or_path": "agentless", "instance_id": "django__django-16400", "model_patch": "diff --git a/django/core/management/commands/migrate.py b/django/core/management/commands/migrate.py\nindex 485b8be..25b4ed7 100644\n--- a/django/core/management/commands/migrate.py\n+++ b/django/core/management/commands/migrate.py\n@@ -111,7 +111,8 @@ class Command(BaseCommand):\n         # Get the database we're operating from\n         connection = connections[database]\n \n-        # Hook for backends needing any database preparation\n+        # Ensure the connection respects the specified database\n+        connection = connections[database]\n         connection.prepare_database()\n         # Work out which apps have migrations and which do not\n         executor = MigrationExecutor(connection, self.migration_progress_callback)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/management/commands/migrate.py b/django/core/management/commands/migrate.py\nindex 44b7858..5d4a64d 100644\n--- a/django/core/management/commands/migrate.py\n+++ b/django/core/management/commands/migrate.py\n@@ -37,6 +37,7 @@ class Command(BaseCommand):\n             if module_has_submodule(app_config.module, 'management'):\n                 import_module('.management', app_config.name)\n         connection = connections[database]\n+        connection = connections[database]\n         connection.prepare_database()\n         executor = MigrationExecutor(connection, self.migration_progress_callback)\n         executor.loader.check_consistent_history(connection)\n", "normalized_occurrence": 1}
