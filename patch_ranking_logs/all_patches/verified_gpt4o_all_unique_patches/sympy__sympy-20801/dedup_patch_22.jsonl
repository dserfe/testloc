{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-20801", "model_patch": "diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\nindex ecd2cce..bbe260f 100644\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -1386,9 +1386,12 @@ class Float(Number):\n             other = _sympify(other)\n         except SympifyError:\n             return NotImplemented\n+        if isinstance(other, BooleanAtom):\n+            return False\n         if not self:\n             return not other\n         if isinstance(other, Boolean):\n+            return other.__eq__(self)\n             return False\n         if other.is_NumberSymbol:\n             if other.is_irrational:\n@@ -1869,6 +1872,8 @@ class Rational(Number):\n             # S(0) == S.false is False\n             # S(0) == False is True\n             return False\n+        if isinstance(other, BooleanAtom):\n+            return False\n         if not self:\n             return not other\n         if other.is_NumberSymbol:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\nindex c5d42bc..15b466e 100644\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -1191,9 +1191,12 @@ class Float(Number):\n             other = _sympify(other)\n         except SympifyError:\n             return NotImplemented\n+        if isinstance(other, BooleanAtom):\n+            return False\n         if not self:\n             return not other\n         if isinstance(other, Boolean):\n+            return other.__eq__(self)\n             return False\n         if other.is_NumberSymbol:\n             if other.is_irrational:\n@@ -1629,6 +1632,8 @@ class Rational(Number):\n             return NotImplemented\n         if not isinstance(other, Number):\n             return False\n+        if isinstance(other, BooleanAtom):\n+            return False\n         if not self:\n             return not other\n         if other.is_NumberSymbol:\n", "normalized_occurrence": 1}
