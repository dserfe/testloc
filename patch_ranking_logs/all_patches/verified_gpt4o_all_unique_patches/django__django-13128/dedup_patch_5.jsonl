{"model_name_or_path": "agentless", "instance_id": "django__django-13128", "model_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 215532d..1d483a7 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -458,7 +458,11 @@ class CombinedExpression(SQLiteNumericMixin, Expression):\n         ):\n             return DurationExpression(self.lhs, self.connector, self.rhs).as_sql(compiler, connection)\n         datetime_fields = {'DateField', 'DateTimeField', 'TimeField'}\n-        if self.connector == self.SUB and lhs_type in datetime_fields and lhs_type == rhs_type:\n+        if self.connector == self.SUB and lhs_type in datetime_fields:\n+            if lhs_type == rhs_type:\n+                return TemporalSubtraction(self.lhs, self.rhs).as_sql(compiler, connection)\n+            elif rhs_type == 'DurationField':\n+                return TemporalSubtraction(self.lhs, self.rhs, output_field=lhs_type).as_sql(compiler, connection)\n             return TemporalSubtraction(self.lhs, self.rhs).as_sql(compiler, connection)\n         expressions = []\n         expression_params = []\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex ae5c73e..326cf39 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -250,7 +250,11 @@ class CombinedExpression(SQLiteNumericMixin, Expression):\n         if not connection.features.has_native_duration_field and 'DurationField' in {lhs_type, rhs_type} and (lhs_type != rhs_type):\n             return DurationExpression(self.lhs, self.connector, self.rhs).as_sql(compiler, connection)\n         datetime_fields = {'DateField', 'DateTimeField', 'TimeField'}\n-        if self.connector == self.SUB and lhs_type in datetime_fields and (lhs_type == rhs_type):\n+        if self.connector == self.SUB and lhs_type in datetime_fields:\n+            if lhs_type == rhs_type:\n+                return TemporalSubtraction(self.lhs, self.rhs).as_sql(compiler, connection)\n+            elif rhs_type == 'DurationField':\n+                return TemporalSubtraction(self.lhs, self.rhs, output_field=lhs_type).as_sql(compiler, connection)\n             return TemporalSubtraction(self.lhs, self.rhs).as_sql(compiler, connection)\n         expressions = []\n         expression_params = []\n", "normalized_occurrence": 1}
