{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-5787", "model_patch": "diff --git a/src/_pytest/reports.py b/src/_pytest/reports.py\nindex ba95b0e..08b7680 100644\n--- a/src/_pytest/reports.py\n+++ b/src/_pytest/reports.py\n@@ -412,15 +412,21 @@ def pytest_report_to_serializable(report):\n     if isinstance(report, (TestReport, CollectReport)):\n         data = report._to_json()\n         data[\"_report_type\"] = report.__class__.__name__\n+        if isinstance(report.longrepr, ExceptionChain):  # Ensure longrepr chain is captured\n+            data[\"longrepr_chain\"] = report.longrepr.to_json()  \n         return data\n \n \n def pytest_report_from_serializable(data):\n     if \"_report_type\" in data:\n         if data[\"_report_type\"] == \"TestReport\":\n-            return TestReport._from_json(data)\n+            report = TestReport._from_json(data)\n         elif data[\"_report_type\"] == \"CollectReport\":\n-            return CollectReport._from_json(data)\n-        assert False, \"Unknown report_type unserialize data: {}\".format(\n-            data[\"_report_type\"]\n-        )\n+            report = CollectReport._from_json(data)\n+        else:\n+            assert False, \"Unknown report_type unserialize data: {}\".format(\n+                data[\"_report_type\"]\n+            )\n+        if \"longrepr_chain\" in data:  # Ensure longrepr chain is restored\n+            report.longrepr = ExceptionChain.from_json(data[\"longrepr_chain\"])\n+        return report\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/reports.py b/src/_pytest/reports.py\nindex 3292df7..81e7b48 100644\n--- a/src/_pytest/reports.py\n+++ b/src/_pytest/reports.py\n@@ -209,11 +209,17 @@ def pytest_report_to_serializable(report):\n     if isinstance(report, (TestReport, CollectReport)):\n         data = report._to_json()\n         data['_report_type'] = report.__class__.__name__\n+        if isinstance(report.longrepr, ExceptionChain):\n+            data['longrepr_chain'] = report.longrepr.to_json()\n         return data\n def pytest_report_from_serializable(data):\n     if '_report_type' in data:\n         if data['_report_type'] == 'TestReport':\n-            return TestReport._from_json(data)\n+            report = TestReport._from_json(data)\n         elif data['_report_type'] == 'CollectReport':\n-            return CollectReport._from_json(data)\n-        assert False, 'Unknown report_type unserialize data: {}'.format(data['_report_type'])\n\\ No newline at end of file\n+            report = CollectReport._from_json(data)\n+        else:\n+            assert False, 'Unknown report_type unserialize data: {}'.format(data['_report_type'])\n+        if 'longrepr_chain' in data:\n+            report.longrepr = ExceptionChain.from_json(data['longrepr_chain'])\n+        return report\n\\ No newline at end of file\n", "normalized_occurrence": 1}
