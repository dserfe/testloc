{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-25931", "model_patch": "diff --git a/sklearn/ensemble/_iforest.py b/sklearn/ensemble/_iforest.py\nindex d995c25..20e30d6 100644\n--- a/sklearn/ensemble/_iforest.py\n+++ b/sklearn/ensemble/_iforest.py\n@@ -288,7 +288,8 @@ class IsolationForest(OutlierMixin, BaseBagging):\n             Fitted estimator.\n         \"\"\"\n         self._validate_params()\n-        X = self._validate_data(X, accept_sparse=[\"csc\"], dtype=tree_dtype)\n+        X = self._validate_data(X, accept_sparse=[\"csc\"], dtype=tree_dtype, ensure_2d=True)\n+        self.feature_names_in_ = _check_feature_names_in(self, X)\n         if issparse(X):\n             # Pre-sort indices to avoid that each individual tree of the\n             # ensemble sorts the indices.\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/ensemble/_iforest.py b/sklearn/ensemble/_iforest.py\nindex f9e64b9..f7f6e83 100644\n--- a/sklearn/ensemble/_iforest.py\n+++ b/sklearn/ensemble/_iforest.py\n@@ -23,7 +23,8 @@ class IsolationForest(OutlierMixin, BaseBagging):\n         return {'prefer': 'threads'}\n     def fit(self, X, y=None, sample_weight=None):\n         self._validate_params()\n-        X = self._validate_data(X, accept_sparse=['csc'], dtype=tree_dtype)\n+        X = self._validate_data(X, accept_sparse=['csc'], dtype=tree_dtype, ensure_2d=True)\n+        self.feature_names_in_ = _check_feature_names_in(self, X)\n         if issparse(X):\n             X.sort_indices()\n         rnd = check_random_state(self.random_state)\n", "normalized_occurrence": 1}
