{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11049", "model_patch": "diff --git a/django/forms/fields.py b/django/forms/fields.py\nindex 935044e..53951be 100644\n--- a/django/forms/fields.py\n+++ b/django/forms/fields.py\n@@ -468,7 +468,7 @@ class DateTimeField(BaseTemporalField):\n \n class DurationField(Field):\n     default_error_messages = {\n-        'invalid': _('Enter a valid duration.'),\n+        'invalid': _('Enter a valid duration in the format: \"[DD] [[HH:]MM:]ss[.uuuuuu]\" (where seconds are mandatory, minutes are optional, and hours are optional if minutes are provided).'),\n         'overflow': _('The number of days must be between {min_days} and {max_days}.')\n     }\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/fields.py b/django/forms/fields.py\nindex 7cd20b7..cc9f272 100644\n--- a/django/forms/fields.py\n+++ b/django/forms/fields.py\n@@ -280,7 +280,7 @@ class DateTimeField(BaseTemporalField):\n     def strptime(self, value, format):\n         return datetime.datetime.strptime(value, format)\n class DurationField(Field):\n-    default_error_messages = {'invalid': _('Enter a valid duration.'), 'overflow': _('The number of days must be between {min_days} and {max_days}.')}\n+    default_error_messages = {'invalid': _('Enter a valid duration in the format: \"[DD] [[HH:]MM:]ss[.uuuuuu]\" (where seconds are mandatory, minutes are optional, and hours are optional if minutes are provided).'), 'overflow': _('The number of days must be between {min_days} and {max_days}.')}\n     def prepare_value(self, value):\n         if isinstance(value, datetime.timedelta):\n             return duration_string(value)\n", "normalized_occurrence": 1}
