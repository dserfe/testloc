{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13786", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 05e9a94..a621646 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -141,7 +141,7 @@ class CreateModel(ModelOperation):\n                 CreateModel(\n                     self.name,\n                     fields=self.fields,\n-                    options={**self.options, **operation.options},\n+                    options=operation.options if not self.options or not operation.options else {**self.options, **operation.options},\n                     bases=self.bases,\n                     managers=self.managers,\n                 ),\n", "occurrence": 2, "normalized_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex bf5c114..9b3773d 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -74,7 +74,7 @@ class CreateModel(ModelOperation):\n         elif isinstance(operation, RenameModel) and self.name_lower == operation.old_name_lower:\n             return [CreateModel(operation.new_name, fields=self.fields, options=self.options, bases=self.bases, managers=self.managers)]\n         elif isinstance(operation, AlterModelOptions) and self.name_lower == operation.name_lower:\n-            return [CreateModel(self.name, fields=self.fields, options={**self.options, **operation.options}, bases=self.bases, managers=self.managers)]\n+            return [CreateModel(self.name, fields=self.fields, options=operation.options if not self.options or not operation.options else {**self.options, **operation.options}, bases=self.bases, managers=self.managers)]\n         elif isinstance(operation, AlterTogetherOptionOperation) and self.name_lower == operation.name_lower:\n             return [CreateModel(self.name, fields=self.fields, options={**self.options, **{operation.option_name: operation.option_value}}, bases=self.bases, managers=self.managers)]\n         elif isinstance(operation, AlterOrderWithRespectTo) and self.name_lower == operation.name_lower:\n", "normalized_occurrence": 2}
