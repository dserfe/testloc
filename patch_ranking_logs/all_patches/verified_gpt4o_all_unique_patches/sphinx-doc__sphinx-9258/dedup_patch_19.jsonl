{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9258", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 51811ca..d71a526 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -110,6 +110,9 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str]) -> No\n \n         arg = arguments.get(name, {})\n         if not arg.get('type'):\n+            # Handle union types specified with '|'\n+            if '|' in annotation:\n+                annotation = ' or '.join(annotation.split('|'))\n             field = nodes.field()\n             field += nodes.field_name('', 'type ' + name)\n             field += nodes.field_body('', nodes.paragraph('', annotation))\n@@ -161,7 +164,11 @@ def augment_descriptions_with_types(\n         if name in has_description and name not in has_type:\n             field = nodes.field()\n             field += nodes.field_name('', 'type ' + name)\n-            field += nodes.field_body('', nodes.paragraph('', annotations[name]))\n+            # Handle union types specified with '|'\n+            annotation = annotations[name]\n+            if '|' in annotation:\n+                annotation = ' or '.join(annotation.split('|'))\n+            field += nodes.field_body('', nodes.paragraph('', annotation))\n             node += field\n \n     # Add 'rtype' if 'return' is present and 'rtype' isn't.\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 03a755b..82b24fe 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -78,6 +78,8 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str]) -> No\n             continue\n         arg = arguments.get(name, {})\n         if not arg.get('type'):\n+            if '|' in annotation:\n+                annotation = ' or '.join(annotation.split('|'))\n             field = nodes.field()\n             field += nodes.field_name('', 'type ' + name)\n             field += nodes.field_body('', nodes.paragraph('', annotation))\n@@ -119,7 +121,10 @@ def augment_descriptions_with_types(node: nodes.field_list, annotations: Dict[st\n         if name in has_description and name not in has_type:\n             field = nodes.field()\n             field += nodes.field_name('', 'type ' + name)\n-            field += nodes.field_body('', nodes.paragraph('', annotations[name]))\n+            annotation = annotations[name]\n+            if '|' in annotation:\n+                annotation = ' or '.join(annotation.split('|'))\n+            field += nodes.field_body('', nodes.paragraph('', annotation))\n             node += field\n     if 'return' in annotations:\n         if 'return' in has_description and 'return' not in has_type:\n", "normalized_occurrence": 1}
