{
  "instance_id": "sympy__sympy-18199",
  "container_id": "9119151dc2ed70d9cde3049e63e398cf853e0ade26717d8979045a7c894f338d",
  "regression": {
    "results": [
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-18199/dedup_patch_0.jsonl",
        "inst": "sympy__sympy-18199",
        "passed": 1,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-18199/dedup_patch_1.jsonl",
        "inst": "sympy__sympy-18199",
        "passed": 1,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-18199/dedup_patch_10.jsonl",
        "inst": "sympy__sympy-18199",
        "passed": 1,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-18199/dedup_patch_11.jsonl",
        "inst": "sympy__sympy-18199",
        "passed": 1,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-18199/dedup_patch_12.jsonl",
        "inst": "sympy__sympy-18199",
        "passed": 1,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-18199/dedup_patch_13.jsonl",
        "inst": "sympy__sympy-18199",
        "passed": 1,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-18199/dedup_patch_14.jsonl",
        "inst": "sympy__sympy-18199",
        "passed": 1,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-18199/dedup_patch_15.jsonl",
        "inst": "sympy__sympy-18199",
        "passed": 1,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-18199/dedup_patch_16.jsonl",
        "inst": "sympy__sympy-18199",
        "passed": 1,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-18199/dedup_patch_17.jsonl",
        "inst": "sympy__sympy-18199",
        "passed": 1,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-18199/dedup_patch_18.jsonl",
        "inst": "sympy__sympy-18199",
        "passed": 1,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-18199/dedup_patch_19.jsonl",
        "inst": "sympy__sympy-18199",
        "passed": 1,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-18199/dedup_patch_2.jsonl",
        "inst": "sympy__sympy-18199",
        "passed": 1,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-18199/dedup_patch_20.jsonl",
        "inst": "sympy__sympy-18199",
        "passed": 1,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-18199/dedup_patch_21.jsonl",
        "inst": "sympy__sympy-18199",
        "passed": 1,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-18199/dedup_patch_22.jsonl",
        "inst": "sympy__sympy-18199",
        "passed": 1,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-18199/dedup_patch_23.jsonl",
        "inst": "sympy__sympy-18199",
        "passed": 1,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-18199/dedup_patch_24.jsonl",
        "inst": "sympy__sympy-18199",
        "passed": 1,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-18199/dedup_patch_25.jsonl",
        "inst": "sympy__sympy-18199",
        "passed": 1,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-18199/dedup_patch_3.jsonl",
        "inst": "sympy__sympy-18199",
        "passed": 1,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-18199/dedup_patch_4.jsonl",
        "inst": "sympy__sympy-18199",
        "passed": 1,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-18199/dedup_patch_5.jsonl",
        "inst": "sympy__sympy-18199",
        "passed": 1,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-18199/dedup_patch_6.jsonl",
        "inst": "sympy__sympy-18199",
        "passed": 1,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-18199/dedup_patch_7.jsonl",
        "inst": "sympy__sympy-18199",
        "passed": 1,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-18199/dedup_patch_8.jsonl",
        "inst": "sympy__sympy-18199",
        "passed": 1,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-18199/dedup_patch_9.jsonl",
        "inst": "sympy__sympy-18199",
        "passed": 1,
        "failed": 0
      }
    ],
    "top_passed": 1,
    "top_subset_size": 26
  },
  "reproduction": {
    "sympy/ntheory/tests/test_residue.py::test_residue#1": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "sympy/ntheory/tests/test_residue.py::test_residue#2": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "sympy/ntheory/tests/test_residue.py::test_residue#3": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "sympy/ntheory/tests/test_residue.py::test_residue#4": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "sympy/ntheory/tests/test_residue.py::test_residue#5": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "sympy/ntheory/tests/test_residue.py::test_residue#6": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "full": {
      "repro_fails_on_clean": true,
      "outcomes": []
    }
  }
}