{"model_name_or_path": "agentless_claude", "instance_id": "psf__requests-3362", "model_patch": "diff --git a/requests/utils.py b/requests/utils.py\nindex 177dcd1..5e22272 100644\n--- a/requests/utils.py\n+++ b/requests/utils.py\n@@ -359,12 +359,8 @@ def get_encoding_from_headers(headers):\n def stream_decode_response_unicode(iterator, r):\n     \"\"\"Stream decodes a iterator.\"\"\"\n \n-    if r.encoding is None:\n-        for item in iterator:\n-            yield item\n-        return\n-\n-    decoder = codecs.getincrementaldecoder(r.encoding)(errors='replace')\n+    encoding = r.encoding or 'utf-8'  # Default to UTF-8 if no encoding is specified\n+    decoder = codecs.getincrementaldecoder(encoding)(errors='replace')\n     for chunk in iterator:\n         rv = decoder.decode(chunk)\n         if rv:\n", "occurrence": 1, "normalized_patch": "diff --git a/requests/utils.py b/requests/utils.py\nindex 9f5088a..94240e0 100644\n--- a/requests/utils.py\n+++ b/requests/utils.py\n@@ -141,11 +141,8 @@ def get_encoding_from_headers(headers):\n     if 'text' in content_type:\n         return 'ISO-8859-1'\n def stream_decode_response_unicode(iterator, r):\n-    if r.encoding is None:\n-        for item in iterator:\n-            yield item\n-        return\n-    decoder = codecs.getincrementaldecoder(r.encoding)(errors='replace')\n+    encoding = r.encoding or 'utf-8'\n+    decoder = codecs.getincrementaldecoder(encoding)(errors='replace')\n     for chunk in iterator:\n         rv = decoder.decode(chunk)\n         if rv:\n", "normalized_occurrence": 5}
