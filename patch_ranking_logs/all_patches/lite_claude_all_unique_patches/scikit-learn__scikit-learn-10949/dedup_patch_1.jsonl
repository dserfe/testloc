{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-10949", "model_patch": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex 7e2fa63..1c0f406 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -461,8 +461,12 @@ def check_array(array, accept_sparse=False, accept_large_sparse=True,\n     # store whether originally we wanted numeric dtype\n     dtype_numeric = isinstance(dtype, six.string_types) and dtype == \"numeric\"\n \n+    # Get dtype for pandas DataFrame or array\n     dtype_orig = getattr(array, \"dtype\", None)\n-    if not hasattr(dtype_orig, 'kind'):\n+    if hasattr(array, 'values'):\n+        # pandas DataFrame or Series\n+        dtype_orig = array.values.dtype\n+    elif not hasattr(dtype_orig, 'kind'):\n         # not a data type (e.g. a column named dtype in a pandas DataFrame)\n         dtype_orig = None\n \n", "occurrence": 2, "normalized_patch": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex 7db8b51..ced9475 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -126,7 +126,9 @@ def check_array(array, accept_sparse=False, accept_large_sparse=True, dtype='num\n     array_orig = array\n     dtype_numeric = isinstance(dtype, six.string_types) and dtype == 'numeric'\n     dtype_orig = getattr(array, 'dtype', None)\n-    if not hasattr(dtype_orig, 'kind'):\n+    if hasattr(array, 'values'):\n+        dtype_orig = array.values.dtype\n+    elif not hasattr(dtype_orig, 'kind'):\n         dtype_orig = None\n     if dtype_numeric:\n         if dtype_orig is not None and dtype_orig.kind == 'O':\n", "normalized_occurrence": 3}
