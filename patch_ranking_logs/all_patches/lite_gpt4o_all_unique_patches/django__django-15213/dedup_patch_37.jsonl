{"model_name_or_path": "agentless", "instance_id": "django__django-15213", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex d5af8cd..fa26a6d 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -583,7 +583,10 @@ class SQLCompiler:\n                     params.extend(s_params)\n                     out_cols.append(s_sql)\n \n-                result += [', '.join(out_cols), 'FROM', *from_]\n+                if out_cols:\n+                    result += [', '.join(out_cols), 'FROM', *from_]\n+                else:\n+                    result += ['0', 'FROM', *from_]\n                 params.extend(f_params)\n \n                 if self.query.select_for_update and self.connection.features.has_select_for_update:\n@@ -623,7 +626,7 @@ class SQLCompiler:\n                 if for_update_part and self.connection.features.for_update_after_from:\n                     result.append(for_update_part)\n \n-                if where:\n+                if where or (self.where and self.where.negated):\n                     result.append('WHERE %s' % where)\n                     params.extend(w_params)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 4c4fd00..81c737a 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -331,7 +331,10 @@ class SQLCompiler:\n                         col_idx += 1\n                     params.extend(s_params)\n                     out_cols.append(s_sql)\n-                result += [', '.join(out_cols), 'FROM', *from_]\n+                if out_cols:\n+                    result += [', '.join(out_cols), 'FROM', *from_]\n+                else:\n+                    result += ['0', 'FROM', *from_]\n                 params.extend(f_params)\n                 if self.query.select_for_update and self.connection.features.has_select_for_update:\n                     if self.connection.get_autocommit():\n@@ -353,7 +356,7 @@ class SQLCompiler:\n                     for_update_part = self.connection.ops.for_update_sql(nowait=nowait, skip_locked=skip_locked, of=self.get_select_for_update_of_arguments(), no_key=no_key)\n                 if for_update_part and self.connection.features.for_update_after_from:\n                     result.append(for_update_part)\n-                if where:\n+                if where or (self.where and self.where.negated):\n                     result.append('WHERE %s' % where)\n                     params.extend(w_params)\n                 grouping = []\n", "normalized_occurrence": 1}
