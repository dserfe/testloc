{"model_name_or_path": "agentless", "instance_id": "django__django-15554", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex b69bf1f..8b97797 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -799,9 +799,15 @@ class Query(BaseExpression):\n         \"\"\"\n         alias_list = self.table_map.get(table_name)\n         if not create and alias_list:\n-            alias = alias_list[0]\n-            self.alias_refcount[alias] += 1\n-            return alias, False\n+            if filtered_relation:\n+                for alias in alias_list:\n+                    if self._filtered_relations.get(alias) == filtered_relation:\n+                        self.alias_refcount[alias] += 1\n+                        return alias, False\n+            else:\n+                alias = alias_list[0]\n+                self.alias_refcount[alias] += 1\n+                return alias, False\n \n         # Create a new alias for this table.\n         if alias_list:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex b4ac641..f1a8484 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -427,9 +427,15 @@ class Query(BaseExpression):\n     def table_alias(self, table_name, create=False, filtered_relation=None):\n         alias_list = self.table_map.get(table_name)\n         if not create and alias_list:\n-            alias = alias_list[0]\n-            self.alias_refcount[alias] += 1\n-            return (alias, False)\n+            if filtered_relation:\n+                for alias in alias_list:\n+                    if self._filtered_relations.get(alias) == filtered_relation:\n+                        self.alias_refcount[alias] += 1\n+                        return (alias, False)\n+            else:\n+                alias = alias_list[0]\n+                self.alias_refcount[alias] += 1\n+                return (alias, False)\n         if alias_list:\n             alias = '%s%d' % (self.alias_prefix, len(self.alias_map) + 1)\n             alias_list.append(alias)\n", "normalized_occurrence": 1}
