{"model_name_or_path": "agentless", "instance_id": "psf__requests-6028", "model_patch": "diff --git a/requests/auth.py b/requests/auth.py\nindex f6990ec..9fe0d57 100644\n--- a/requests/auth.py\n+++ b/requests/auth.py\n@@ -102,6 +102,23 @@ class HTTPProxyAuth(HTTPBasicAuth):\n \n     def __call__(self, r):\n         r.headers['Proxy-Authorization'] = _basic_auth_str(self.username, self.password)\n+        r.register_hook('response', self.handle_407)\n+        return r\n+\n+    def handle_407(self, r, **kwargs):\n+        \"\"\"Handles 407 authentication required response from proxy.\"\"\"\n+        if r.status_code == 407:\n+            r.content\n+            r.raw.release_conn()\n+            # Consume content and release the original connection to allow our new request to reuse the same one.\n+            prep = r.request.copy()\n+            prep.headers['Proxy-Authorization'] = _basic_auth_str(self.username, self.password)\n+            _r = r.connection.send(prep, **kwargs)\n+            _r.history.append(r)\n+            _r.request = prep\n+\n+            return _r\n+        return r\n         return r\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/requests/auth.py b/requests/auth.py\nindex 926e90b..0da3ca1 100644\n--- a/requests/auth.py\n+++ b/requests/auth.py\n@@ -41,6 +41,19 @@ class HTTPBasicAuth(AuthBase):\n class HTTPProxyAuth(HTTPBasicAuth):\n     def __call__(self, r):\n         r.headers['Proxy-Authorization'] = _basic_auth_str(self.username, self.password)\n+        r.register_hook('response', self.handle_407)\n+        return r\n+    def handle_407(self, r, **kwargs):\n+        if r.status_code == 407:\n+            r.content\n+            r.raw.release_conn()\n+            prep = r.request.copy()\n+            prep.headers['Proxy-Authorization'] = _basic_auth_str(self.username, self.password)\n+            _r = r.connection.send(prep, **kwargs)\n+            _r.history.append(r)\n+            _r.request = prep\n+            return _r\n+        return r\n         return r\n class HTTPDigestAuth(AuthBase):\n     def __init__(self, username, password):\n", "normalized_occurrence": 1}
