{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-8474", "model_patch": "diff --git a/sphinx/builders/singlehtml.py b/sphinx/builders/singlehtml.py\nindex 9c4674f..5453a65 100644\n--- a/sphinx/builders/singlehtml.py\n+++ b/sphinx/builders/singlehtml.py\n@@ -113,12 +113,21 @@ class SingleFileHTMLBuilder(StandaloneHTMLBuilder):\n         #       HTMLTranslter#add_fignumber().\n         new_fignumbers = {}  # type: Dict[str, Dict[str, Tuple[int, ...]]]\n         # {'foo': {'figure': {'id2': (2,), 'id1': (1,)}}, 'bar': {'figure': {'id1': (3,)}}}\n+        \n+        # Initialize standard figure types to prevent \"no number assigned\" warnings\n+        standard_types = ['figure', 'table', 'code-block']\n+        \n         for docname, fignumlist in self.env.toc_fignumbers.items():\n             for figtype, fignums in fignumlist.items():\n                 alias = \"%s/%s\" % (docname, figtype)\n                 new_fignumbers.setdefault(alias, {})\n                 for id, fignum in fignums.items():\n                     new_fignumbers[alias][id] = fignum\n+            \n+            # Ensure all standard types are initialized for each document\n+            for figtype in standard_types:\n+                alias = \"%s/%s\" % (docname, figtype)\n+                new_fignumbers.setdefault(alias, {})\n \n         return {self.config.master_doc: new_fignumbers}\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/builders/singlehtml.py b/sphinx/builders/singlehtml.py\nindex 542a568..de60acd 100644\n--- a/sphinx/builders/singlehtml.py\n+++ b/sphinx/builders/singlehtml.py\n@@ -60,12 +60,16 @@ class SingleFileHTMLBuilder(StandaloneHTMLBuilder):\n         return {self.config.master_doc: new_secnumbers}\n     def assemble_toc_fignumbers(self) -> Dict[str, Dict[str, Dict[str, Tuple[int, ...]]]]:\n         new_fignumbers = {}\n+        standard_types = ['figure', 'table', 'code-block']\n         for docname, fignumlist in self.env.toc_fignumbers.items():\n             for figtype, fignums in fignumlist.items():\n                 alias = '%s/%s' % (docname, figtype)\n                 new_fignumbers.setdefault(alias, {})\n                 for id, fignum in fignums.items():\n                     new_fignumbers[alias][id] = fignum\n+            for figtype in standard_types:\n+                alias = '%s/%s' % (docname, figtype)\n+                new_fignumbers.setdefault(alias, {})\n         return {self.config.master_doc: new_fignumbers}\n     def get_doc_context(self, docname: str, body: str, metatags: str) -> Dict:\n         toctree = TocTree(self.env).get_toctree_for(self.config.master_doc, self, False)\n", "normalized_occurrence": 1}
