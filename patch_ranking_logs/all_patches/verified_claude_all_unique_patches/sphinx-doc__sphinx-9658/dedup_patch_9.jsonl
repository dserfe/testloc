{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-9658", "model_patch": "diff --git a/sphinx/ext/autodoc/mock.py b/sphinx/ext/autodoc/mock.py\nindex 281da6f..5b2b63d 100644\n--- a/sphinx/ext/autodoc/mock.py\n+++ b/sphinx/ext/autodoc/mock.py\n@@ -58,6 +58,12 @@ class _MockObject:\n         return _make_subclass(str(key), self.__display_name__, self.__class__)()\n \n     def __getattr__(self, key: str) -> \"_MockObject\":\n+        if key == '__name__':\n+            return self.__display_name__.split('.')[-1]\n+        if key == '__qualname__':\n+            return self.__display_name__\n+        if key == '__module__':\n+            return self.__display_name__.rsplit('.', 1)[0] if '.' in self.__display_name__ else ''\n         return _make_subclass(key, self.__display_name__, self.__class__)()\n \n     def __call__(self, *args: Any, **kwargs: Any) -> Any:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/mock.py b/sphinx/ext/autodoc/mock.py\nindex 8db72bb..841519e 100644\n--- a/sphinx/ext/autodoc/mock.py\n+++ b/sphinx/ext/autodoc/mock.py\n@@ -31,6 +31,12 @@ class _MockObject:\n     def __getitem__(self, key: Any) -> '_MockObject':\n         return _make_subclass(str(key), self.__display_name__, self.__class__)()\n     def __getattr__(self, key: str) -> '_MockObject':\n+        if key == '__name__':\n+            return self.__display_name__.split('.')[-1]\n+        if key == '__qualname__':\n+            return self.__display_name__\n+        if key == '__module__':\n+            return self.__display_name__.rsplit('.', 1)[0] if '.' in self.__display_name__ else ''\n         return _make_subclass(key, self.__display_name__, self.__class__)()\n     def __call__(self, *args: Any, **kwargs: Any) -> Any:\n         call = self.__class__()\n", "normalized_occurrence": 1}
