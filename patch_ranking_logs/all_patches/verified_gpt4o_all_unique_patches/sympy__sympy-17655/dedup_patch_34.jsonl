{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-17655", "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex a708f18..f2e265c 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -224,6 +224,14 @@ class Point(GeometryEntity):\n     def __contains__(self, item):\n         return item in self.args\n \n+    def __rmul__(self, other):\n+        \"\"\"Multiply the point by a scalar.\"\"\"\n+        if isinstance(other, (int, float, sympy.Basic)):\n+            other = sympy.sympify(other)\n+            coords = [simplify(other * x) for x in self.args]\n+            return Point(coords, evaluate=False)\n+        raise GeometryError(\"Can't multiply {} and a Point object\".format(other))\n+\n     def __div__(self, divisor):\n         \"\"\"Divide point's coordinates by a factor.\"\"\"\n         divisor = sympify(divisor)\n", "occurrence": 1, "normalized_patch": "--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n+    def __rmul__(self, other):\n+        if isinstance(other, (int, float, sympy.Basic)):\n+            other = sympy.sympify(other)\n+            coords = [simplify(other * x) for x in self.args]\n+            return Point(coords, evaluate=False)\n+        raise GeometryError(\"Can't multiply {} and a Point object\".format(other))", "normalized_occurrence": 1}
