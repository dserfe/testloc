{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-18869", "model_patch": "diff --git a/lib/matplotlib/__init__.py b/lib/matplotlib/__init__.py\nindex 320d1a7..e31eb8b 100644\n--- a/lib/matplotlib/__init__.py\n+++ b/lib/matplotlib/__init__.py\n@@ -536,6 +536,22 @@ def matplotlib_fname():\n     raise RuntimeError(\"Could not find matplotlibrc file; your Matplotlib \"\n                        \"install is broken\")\n \n+# Convert __version__ string to version_info tuple\n+def _parse_version():\n+    \"\"\"Parse __version__ into version_info tuple.\"\"\"\n+    v = __version__.split('.')\n+    main = v[0:3]\n+    # Handle any suffix (e.g., 'dev', 'rc1', etc.) in the last part\n+    sub = ''\n+    if len(v) > 3:\n+        sub = v[3]\n+    # Convert main version numbers to int\n+    main = [int(x.split('rc')[0].split('dev')[0].split('b')[0].split('a')[0])\n+            for x in main]\n+    return tuple(main + ([sub] if sub else []))\n+\n+version_info = _parse_version()\n+\n \n # rcParams deprecated and automatically mapped to another key.\n # Values are tuples of (version, new_name, f_old2new, f_new2old).\n", "occurrence": 1, "normalized_patch": "--- a/lib/matplotlib/__init__.py\n+++ b/lib/matplotlib/__init__.py\n+def _parse_version():\n+    v = __version__.split('.')\n+    main = v[0:3]\n+    sub = ''\n+    if len(v) > 3:\n+        sub = v[3]\n+    main = [int(x.split('rc')[0].split('dev')[0].split('b')[0].split('a')[0]) for x in main]\n+    return tuple(main + ([sub] if sub else []))\n+version_info = _parse_version()", "normalized_occurrence": 1}
