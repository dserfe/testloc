{"model_name_or_path": "agentless", "instance_id": "django__django-11583", "model_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex f44661f..84a35aa 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -136,11 +136,13 @@ def iter_modules_and_files(modules, extra_files):\n     for filename in itertools.chain(sys_file_paths, extra_files):\n         if not filename:\n             continue\n-        path = Path(filename)\n+        if '\\x00' in filename:\n+            continue\n         try:\n+            path = Path(filename)\n             resolved_path = path.resolve(strict=True).absolute()\n-        except FileNotFoundError:\n-            # The module could have been removed, don't fail loudly if this\n+        except (FileNotFoundError, ValueError):\n+            # The module could have been removed or there could be an embedded null byte, don't fail loudly if this\n             # is the case.\n             continue\n         results.add(resolved_path)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex e37abac..ef24bad 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -90,10 +90,12 @@ def iter_modules_and_files(modules, extra_files):\n     for filename in itertools.chain(sys_file_paths, extra_files):\n         if not filename:\n             continue\n-        path = Path(filename)\n+        if '\\x00' in filename:\n+            continue\n         try:\n+            path = Path(filename)\n             resolved_path = path.resolve(strict=True).absolute()\n-        except FileNotFoundError:\n+        except (FileNotFoundError, ValueError):\n             continue\n         results.add(resolved_path)\n     return frozenset(results)\n", "normalized_occurrence": 4}
