{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-25570", "model_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex 36a655a..9f28006 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -735,6 +735,9 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n \n         result = self._fit_transform(X, y, _fit_transform_one)\n \n+        # Filter out transformers that apply to 0 features\n+        result = [res for res in result if res[0].shape[1] > 0]\n+\n         if not result:\n             self._update_fitted_transformers([])\n             # All transformers are None\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex 03f51bb..e6f6e8a 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -208,6 +208,7 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n         self._validate_column_callables(X)\n         self._validate_remainder(X)\n         result = self._fit_transform(X, y, _fit_transform_one)\n+        result = [res for res in result if res[0].shape[1] > 0]\n         if not result:\n             self._update_fitted_transformers([])\n             return np.zeros((X.shape[0], 0))\n", "normalized_occurrence": 1}
