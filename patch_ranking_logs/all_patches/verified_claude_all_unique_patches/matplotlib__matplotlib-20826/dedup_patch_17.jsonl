{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-20826", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 07605b5..7f2380e 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1305,9 +1305,28 @@ class _AxesBase(martist.Artist):\n         if self._sharex is not None:\n             self.xaxis.set_visible(xaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            # Re-sync tick label visibility for shared axes\n+            for ax in self._shared_axes[\"x\"].get_siblings(self):\n+                if ax is not self:\n+                    if ax._sharex is self:\n+                        # If this is the primary shared axis, hide its labels\n+                        ax.xaxis.set_tick_params(labelbottom=False, labeltop=False)\n+                    elif self._sharex is ax:\n+                        # If sharing from the primary axis, hide our labels\n+                        self.xaxis.set_tick_params(labelbottom=False, labeltop=False)\n+\n         if self._sharey is not None:\n             self.yaxis.set_visible(yaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            # Re-sync tick label visibility for shared axes\n+            for ax in self._shared_axes[\"y\"].get_siblings(self):\n+                if ax is not self:\n+                    if ax._sharey is self:\n+                        # If this is the primary shared axis, hide its labels\n+                        ax.yaxis.set_tick_params(labelleft=False, labelright=False)\n+                    elif self._sharey is ax:\n+                        # If sharing from the primary axis, hide our labels\n+                        self.yaxis.set_tick_params(labelleft=False, labelright=False)\n \n         self.stale = True\n \n@@ -4717,4 +4736,4 @@ class _AxesBase(martist.Artist):\n \n     def get_shared_y_axes(self):\n         \"\"\"Return a reference to the shared axes Grouper object for y axes.\"\"\"\n-        return self._shared_axes[\"y\"]\n+        return self._shared_axes[\"y\"]\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 33a6de3..bd11188 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -578,9 +578,21 @@ class _AxesBase(martist.Artist):\n         if self._sharex is not None:\n             self.xaxis.set_visible(xaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            for ax in self._shared_axes['x'].get_siblings(self):\n+                if ax is not self:\n+                    if ax._sharex is self:\n+                        ax.xaxis.set_tick_params(labelbottom=False, labeltop=False)\n+                    elif self._sharex is ax:\n+                        self.xaxis.set_tick_params(labelbottom=False, labeltop=False)\n         if self._sharey is not None:\n             self.yaxis.set_visible(yaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            for ax in self._shared_axes['y'].get_siblings(self):\n+                if ax is not self:\n+                    if ax._sharey is self:\n+                        ax.yaxis.set_tick_params(labelleft=False, labelright=False)\n+                    elif self._sharey is ax:\n+                        self.yaxis.set_tick_params(labelleft=False, labelright=False)\n         self.stale = True\n     class ArtistList(MutableSequence):\n         def __init__(self, axes, prop_name, add_name, valid_types=None, invalid_types=None):\n", "normalized_occurrence": 1}
