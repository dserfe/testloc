{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-4551", "model_patch": "diff --git a/pylint/pyreverse/inspector.py b/pylint/pyreverse/inspector.py\nindex 4a79e89..5f2b76a 100644\n--- a/pylint/pyreverse/inspector.py\n+++ b/pylint/pyreverse/inspector.py\n@@ -166,7 +166,14 @@ class Linker(IdGeneratorMixIn, utils.LocalsVisitor):\n             for assignattr in assignattrs:\n                 if not isinstance(assignattr, astroid.Unknown):\n                     self.handle_assignattr_type(assignattr, node)\n-        # resolve implemented interface\n+        # resolve type hints\n+        for name, annotation in node.locals.items():\n+            if isinstance(annotation, astroid.AnnAssign):\n+                try:\n+                    inferred_type = list(annotation.value.infer())[0]\n+                    node.locals_type[name] = [inferred_type]\n+                except astroid.InferenceError:\n+                    pass\n         try:\n             node.implements = list(interfaces(node, self.inherited_interfaces))\n         except astroid.InferenceError:\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/pyreverse/inspector.py b/pylint/pyreverse/inspector.py\nindex 540b86a..e4239c7 100644\n--- a/pylint/pyreverse/inspector.py\n+++ b/pylint/pyreverse/inspector.py\n@@ -79,6 +79,13 @@ class Linker(IdGeneratorMixIn, utils.LocalsVisitor):\n             for assignattr in assignattrs:\n                 if not isinstance(assignattr, astroid.Unknown):\n                     self.handle_assignattr_type(assignattr, node)\n+        for name, annotation in node.locals.items():\n+            if isinstance(annotation, astroid.AnnAssign):\n+                try:\n+                    inferred_type = list(annotation.value.infer())[0]\n+                    node.locals_type[name] = [inferred_type]\n+                except astroid.InferenceError:\n+                    pass\n         try:\n             node.implements = list(interfaces(node, self.inherited_interfaces))\n         except astroid.InferenceError:\n", "normalized_occurrence": 1}
