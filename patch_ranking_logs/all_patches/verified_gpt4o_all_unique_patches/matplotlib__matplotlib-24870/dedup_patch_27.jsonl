{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-24870", "model_patch": "diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py\nindex 908a24f..e9bb564 100644\n--- a/lib/matplotlib/contour.py\n+++ b/lib/matplotlib/contour.py\n@@ -1128,7 +1128,9 @@ class ContourSet(cm.ScalarMappable, ContourLabeler):\n                 levels_arg = args[0]\n         else:\n             levels_arg = self.levels\n-        if isinstance(levels_arg, Integral):\n+        if isinstance(levels_arg, Integral) or (isinstance(args[0], np.ndarray) and args[0].dtype == bool):\n+            if isinstance(args[0], np.ndarray) and args[0].dtype == bool:\n+                levels_arg = [0.5]\n             self.levels = self._autolev(levels_arg)\n         else:\n             self.levels = np.asarray(levels_arg, np.float64)\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py\nindex 04dc867..8b0ca72 100644\n--- a/lib/matplotlib/contour.py\n+++ b/lib/matplotlib/contour.py\n@@ -488,7 +488,9 @@ class ContourSet(cm.ScalarMappable, ContourLabeler):\n                 levels_arg = args[0]\n         else:\n             levels_arg = self.levels\n-        if isinstance(levels_arg, Integral):\n+        if isinstance(levels_arg, Integral) or (isinstance(args[0], np.ndarray) and args[0].dtype == bool):\n+            if isinstance(args[0], np.ndarray) and args[0].dtype == bool:\n+                levels_arg = [0.5]\n             self.levels = self._autolev(levels_arg)\n         else:\n             self.levels = np.asarray(levels_arg, np.float64)\n", "normalized_occurrence": 1}
