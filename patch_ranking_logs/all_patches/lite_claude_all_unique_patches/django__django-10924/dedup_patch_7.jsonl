{"model_name_or_path": "agentless_claude", "instance_id": "django__django-10924", "model_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex f5823d9..7d9ab31 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -1707,9 +1707,15 @@ class FilePathField(Field):\n             return None\n         return str(value)\n \n+    def get_path(self):\n+        \"\"\"\n+        Returns the evaluated path if it's callable, otherwise returns the path as-is.\n+        \"\"\"\n+        return self.path() if callable(self.path) else self.path\n+\n     def formfield(self, **kwargs):\n         return super().formfield(**{\n-            'path': self.path,\n+            'path': self.get_path(),\n             'match': self.match,\n             'recursive': self.recursive,\n             'form_class': forms.FilePathField,\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex 285706a..9b03824 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -874,8 +874,10 @@ class FilePathField(Field):\n         if value is None:\n             return None\n         return str(value)\n+    def get_path(self):\n+        return self.path() if callable(self.path) else self.path\n     def formfield(self, **kwargs):\n-        return super().formfield(**{'path': self.path, 'match': self.match, 'recursive': self.recursive, 'form_class': forms.FilePathField, 'allow_files': self.allow_files, 'allow_folders': self.allow_folders, **kwargs})\n+        return super().formfield(**{'path': self.get_path(), 'match': self.match, 'recursive': self.recursive, 'form_class': forms.FilePathField, 'allow_files': self.allow_files, 'allow_folders': self.allow_folders, **kwargs})\n     def get_internal_type(self):\n         return 'FilePathField'\n class FloatField(Field):\n", "normalized_occurrence": 1}
