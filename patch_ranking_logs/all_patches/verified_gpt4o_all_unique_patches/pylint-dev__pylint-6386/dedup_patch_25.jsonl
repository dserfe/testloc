{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-6386", "model_patch": "diff --git a/pylint/config/option_manager_mixin.py b/pylint/config/option_manager_mixin.py\nindex d22ea01..afaf8e6 100644\n--- a/pylint/config/option_manager_mixin.py\n+++ b/pylint/config/option_manager_mixin.py\n@@ -150,10 +150,11 @@ class OptionsManagerMixIn:\n         \"\"\"\n         optdict = copy.copy(optdict)\n         if \"action\" in optdict:\n-            self._nocallback_options[provider] = opt\n-        else:\n-            optdict[\"action\"] = \"callback\"\n-            optdict[\"callback\"] = self.cb_set_provider_option\n+            if optdict[\"action\"] in (\"store_true\", \"store_false\"):\n+                self._nocallback_options[provider] = opt\n+            else:\n+                optdict[\"action\"] = \"callback\"\n+                optdict[\"callback\"] = self.cb_set_provider_option\n         # default is handled here and *must not* be given to optik if you\n         # want the whole machinery to work\n         if \"default\" in optdict:\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/config/option_manager_mixin.py b/pylint/config/option_manager_mixin.py\nindex 073d6af..86b5649 100644\n--- a/pylint/config/option_manager_mixin.py\n+++ b/pylint/config/option_manager_mixin.py\n@@ -90,10 +90,11 @@ class OptionsManagerMixIn:\n     def optik_option(self, provider, opt, optdict):\n         optdict = copy.copy(optdict)\n         if 'action' in optdict:\n-            self._nocallback_options[provider] = opt\n-        else:\n-            optdict['action'] = 'callback'\n-            optdict['callback'] = self.cb_set_provider_option\n+            if optdict['action'] in ('store_true', 'store_false'):\n+                self._nocallback_options[provider] = opt\n+            else:\n+                optdict['action'] = 'callback'\n+                optdict['callback'] = self.cb_set_provider_option\n         if 'default' in optdict:\n             if 'help' in optdict and optdict.get('default') is not None and (optdict['action'] not in ('store_true', 'store_false')):\n                 optdict['help'] += ' [current: %default]'\n", "normalized_occurrence": 1}
