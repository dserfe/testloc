{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-23314", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex f43c36a..cedf1e1 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -3021,8 +3021,12 @@ class _AxesBase(martist.Artist):\n             raise RuntimeError('No renderer defined')\n         if not self.get_visible():\n             return\n-        self._unstale_viewLim()\n \n+        # Ensure visibility is respected for 3D projections\n+        if hasattr(self, 'projection') and self.projection == '3d':\n+            return\n+\n+        self._unstale_viewLim()\n         renderer.open_group('axes', gid=self.get_gid())\n \n         # prevent triggering call backs during the draw process\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex d0b0d73..d6de08c 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1270,6 +1270,8 @@ class _AxesBase(martist.Artist):\n             raise RuntimeError('No renderer defined')\n         if not self.get_visible():\n             return\n+        if hasattr(self, 'projection') and self.projection == '3d':\n+            return\n         self._unstale_viewLim()\n         renderer.open_group('axes', gid=self.get_gid())\n         self._stale = True\n", "normalized_occurrence": 1}
