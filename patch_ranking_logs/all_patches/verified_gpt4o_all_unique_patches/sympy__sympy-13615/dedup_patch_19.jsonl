{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13615", "model_patch": "diff --git a/sympy/sets/sets.py b/sympy/sets/sets.py\nindex e78d679..95f39dd 100644\n--- a/sympy/sets/sets.py\n+++ b/sympy/sets/sets.py\n@@ -1001,7 +1001,7 @@ class Interval(Set, EvalfMixin):\n         if isinstance(other, FiniteSet):\n             nums = [m for m in other.args if m.is_number]\n             if nums == []:\n-                return None\n+                return other\n \n         return Set._complement(self, other)\n \n@@ -1949,7 +1949,7 @@ class FiniteSet(Set, EvalfMixin):\n                 else:\n                     return Union(intervals, evaluate=False)\n             elif nums == []:\n-                return None\n+                return other\n \n         elif isinstance(other, FiniteSet):\n             unk = []\n@@ -1965,7 +1965,7 @@ class FiniteSet(Set, EvalfMixin):\n                 c = sympify(self.contains(i))\n                 if c is not S.true:\n                     not_true.append(i)\n-            return Complement(FiniteSet(*not_true), unk)\n+            return Complement(FiniteSet(*not_true), unk, evaluate=False)\n \n         return Set._complement(self, other)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/sets/sets.py b/sympy/sets/sets.py\nindex be9090d..c985a3a 100644\n--- a/sympy/sets/sets.py\n+++ b/sympy/sets/sets.py\n@@ -344,7 +344,7 @@ class Interval(Set, EvalfMixin):\n         if isinstance(other, FiniteSet):\n             nums = [m for m in other.args if m.is_number]\n             if nums == []:\n-                return None\n+                return other\n         return Set._complement(self, other)\n     def _union(self, other):\n         if other.is_UniversalSet:\n@@ -854,7 +854,7 @@ class FiniteSet(Set, EvalfMixin):\n                 else:\n                     return Union(intervals, evaluate=False)\n             elif nums == []:\n-                return None\n+                return other\n         elif isinstance(other, FiniteSet):\n             unk = []\n             for i in self:\n@@ -869,7 +869,7 @@ class FiniteSet(Set, EvalfMixin):\n                 c = sympify(self.contains(i))\n                 if c is not S.true:\n                     not_true.append(i)\n-            return Complement(FiniteSet(*not_true), unk)\n+            return Complement(FiniteSet(*not_true), unk, evaluate=False)\n         return Set._complement(self, other)\n     def _union(self, other):\n         if other.is_FiniteSet:\n", "normalized_occurrence": 1}
