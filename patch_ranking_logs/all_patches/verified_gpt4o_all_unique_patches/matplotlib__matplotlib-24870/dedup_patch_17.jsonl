{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-24870", "model_patch": "diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py\nindex 908a24f..8e8806a 100644\n--- a/lib/matplotlib/contour.py\n+++ b/lib/matplotlib/contour.py\n@@ -766,6 +766,10 @@ class ContourSet(cm.ScalarMappable, ContourLabeler):\n             self.negative_linestyles = \\\n                 mpl.rcParams['contour.negative_linestyle']\n \n+        if len(args) > 0 and isinstance(args[0], np.ndarray) and args[0].dtype == bool:\n+            if levels is None:\n+                levels = [0.5]\n+\n         kwargs = self._process_args(*args, **kwargs)\n         self._process_levels()\n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py\nindex 04dc867..b961ddb 100644\n--- a/lib/matplotlib/contour.py\n+++ b/lib/matplotlib/contour.py\n@@ -296,6 +296,9 @@ class ContourSet(cm.ScalarMappable, ContourLabeler):\n         self.negative_linestyles = negative_linestyles\n         if self.negative_linestyles is None:\n             self.negative_linestyles = mpl.rcParams['contour.negative_linestyle']\n+        if len(args) > 0 and isinstance(args[0], np.ndarray) and (args[0].dtype == bool):\n+            if levels is None:\n+                levels = [0.5]\n         kwargs = self._process_args(*args, **kwargs)\n         self._process_levels()\n         self._extend_min = self.extend in ['min', 'both']\n", "normalized_occurrence": 1}
