{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13447", "model_patch": "diff --git a/django/contrib/admin/sites.py b/django/contrib/admin/sites.py\nindex 569677e..9b77542 100644\n--- a/django/contrib/admin/sites.py\n+++ b/django/contrib/admin/sites.py\n@@ -430,7 +430,7 @@ class AdminSite:\n                     return HttpResponsePermanentRedirect(path)\n         raise Http404\n \n-    def _build_app_dict(self, request, label=None):\n+    def build_app_dict(self, request, label=None):\n         \"\"\"\n         Build the app dictionary. The optional `label` parameter filters models\n         of a specific app.\n@@ -466,6 +466,7 @@ class AdminSite:\n                 'perms': perms,\n                 'admin_url': None,\n                 'add_url': None,\n+                'model': model,\n             }\n             if perms.get('change') or perms.get('view'):\n                 model_dict['view_only'] = not perms.get('change')\n@@ -503,7 +504,7 @@ class AdminSite:\n         Return a sorted list of all the installed apps that have been\n         registered in this site.\n         \"\"\"\n-        app_dict = self._build_app_dict(request)\n+        app_dict = self.build_app_dict(request)\n \n         # Sort the apps alphabetically.\n         app_list = sorted(app_dict.values(), key=lambda x: x['name'].lower())\n", "occurrence": 30, "normalized_patch": "diff --git a/django/contrib/admin/sites.py b/django/contrib/admin/sites.py\nindex 2bd8bbc..ed767c9 100644\n--- a/django/contrib/admin/sites.py\n+++ b/django/contrib/admin/sites.py\n@@ -193,7 +193,7 @@ class AdminSite:\n                 if getattr(match.func, 'should_append_slash', True):\n                     return HttpResponsePermanentRedirect(path)\n         raise Http404\n-    def _build_app_dict(self, request, label=None):\n+    def build_app_dict(self, request, label=None):\n         app_dict = {}\n         if label:\n             models = {m: m_a for m, m_a in self._registry.items() if m._meta.app_label == label}\n@@ -208,7 +208,7 @@ class AdminSite:\n             if True not in perms.values():\n                 continue\n             info = (app_label, model._meta.model_name)\n-            model_dict = {'name': capfirst(model._meta.verbose_name_plural), 'object_name': model._meta.object_name, 'perms': perms, 'admin_url': None, 'add_url': None}\n+            model_dict = {'name': capfirst(model._meta.verbose_name_plural), 'object_name': model._meta.object_name, 'perms': perms, 'admin_url': None, 'add_url': None, 'model': model}\n             if perms.get('change') or perms.get('view'):\n                 model_dict['view_only'] = not perms.get('change')\n                 try:\n@@ -228,7 +228,7 @@ class AdminSite:\n             return app_dict.get(label)\n         return app_dict\n     def get_app_list(self, request):\n-        app_dict = self._build_app_dict(request)\n+        app_dict = self.build_app_dict(request)\n         app_list = sorted(app_dict.values(), key=lambda x: x['name'].lower())\n         for app in app_list:\n             app['models'].sort(key=lambda x: x['name'])\n", "normalized_occurrence": 30}
