{"model_name_or_path": "agentless", "instance_id": "psf__requests-2674", "model_patch": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex 06b1117..7b14f9a 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -421,10 +421,15 @@ class HTTPAdapter(BaseAdapter):\n \n             raise ConnectionError(e, request=request)\n \n+        except TimeoutError as e:\n+            raise ReadTimeout(e, request=request)\n+\n         except _ProxyError as e:\n             raise ProxyError(e)\n \n-        except (_SSLError, _HTTPError) as e:\n+        except (DecodeError, _SSLError, _HTTPError) as e:\n+            if isinstance(e, DecodeError):\n+                raise ContentDecodingError(e)\n             if isinstance(e, _SSLError):\n                 raise SSLError(e, request=request)\n             elif isinstance(e, ReadTimeoutError):\n@@ -432,4 +437,4 @@ class HTTPAdapter(BaseAdapter):\n             else:\n                 raise\n \n-        return self.build_response(request, resp)\n+        return self.build_response(request, resp)\n", "occurrence": 1, "normalized_patch": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex 9062cd5..8a31708 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -173,9 +173,13 @@ class HTTPAdapter(BaseAdapter):\n             if isinstance(e.reason, ResponseError):\n                 raise RetryError(e, request=request)\n             raise ConnectionError(e, request=request)\n+        except TimeoutError as e:\n+            raise ReadTimeout(e, request=request)\n         except _ProxyError as e:\n             raise ProxyError(e)\n-        except (_SSLError, _HTTPError) as e:\n+        except (DecodeError, _SSLError, _HTTPError) as e:\n+            if isinstance(e, DecodeError):\n+                raise ContentDecodingError(e)\n             if isinstance(e, _SSLError):\n                 raise SSLError(e, request=request)\n             elif isinstance(e, ReadTimeoutError):\n", "normalized_occurrence": 1}
