{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-23987", "model_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 71845c8..722e4e2 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -2577,13 +2577,15 @@ class Figure(FigureBase):\n         else:\n             raise ValueError(f\"Invalid value for 'layout': {layout!r}\")\n \n-        if self._check_layout_engines_compat(self._layout_engine,\n-                                             new_layout_engine):\n-            self._layout_engine = new_layout_engine\n-        else:\n-            raise RuntimeError('Colorbar layout of new layout engine not '\n-                               'compatible with old engine, and a colorbar '\n-                               'has been created.  Engine not changed.')\n+        # Allow subplots_adjust if constrained_layout is explicitly set to False\n+        if not (self._layout_engine is not None and self._layout_engine._adjust_compatible and new_layout_engine is None):\n+            if self._check_layout_engines_compat(self._layout_engine,\n+                                                 new_layout_engine):\n+                self._layout_engine = new_layout_engine\n+            else:\n+                raise RuntimeError('Colorbar layout of new layout engine not '\n+                                   'compatible with old engine, and a colorbar '\n+                                   'has been created.  Engine not changed.')\n \n     def get_layout_engine(self):\n         return self._layout_engine\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 57abfc4..b5b0c93 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -782,10 +782,11 @@ class Figure(FigureBase):\n             new_layout_engine = layout\n         else:\n             raise ValueError(f\"Invalid value for 'layout': {layout!r}\")\n-        if self._check_layout_engines_compat(self._layout_engine, new_layout_engine):\n-            self._layout_engine = new_layout_engine\n-        else:\n-            raise RuntimeError('Colorbar layout of new layout engine not compatible with old engine, and a colorbar has been created.  Engine not changed.')\n+        if not (self._layout_engine is not None and self._layout_engine._adjust_compatible and (new_layout_engine is None)):\n+            if self._check_layout_engines_compat(self._layout_engine, new_layout_engine):\n+                self._layout_engine = new_layout_engine\n+            else:\n+                raise RuntimeError('Colorbar layout of new layout engine not compatible with old engine, and a colorbar has been created.  Engine not changed.')\n     def get_layout_engine(self):\n         return self._layout_engine\n     def _repr_html_(self):\n", "normalized_occurrence": 1}
