{"model_name_or_path": "agentless", "instance_id": "django__django-15695", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex b086232..56e9557 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -968,7 +968,20 @@ class RenameIndex(IndexOperation):\n     def database_backwards(self, app_label, schema_editor, from_state, to_state):\n         if self.old_fields:\n             # Backward operation with unnamed index is a no-op.\n-            return\n+            from_model_state = from_state.models[app_label, self.model_name_lower]\n+            index_names = {\n+                index.name for index in from_model_state.indexes\n+            }\n+            auto_index_name = '%s_%s' % (\n+                from_model_state.db_table,\n+                '_'.join(self.old_fields),\n+            )\n+            while auto_index_name in index_names:\n+                auto_index_name = '%s_%s' % (\n+                    from_model_state.db_table,\n+                    '_'.join([auto_index_name, 'uniq']),\n+                )\n+            self.old_name = auto_index_name\n \n         self.new_name_lower, self.old_name_lower = (\n             self.old_name_lower,\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 87ad28e..bf9c067 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -436,7 +436,12 @@ class RenameIndex(IndexOperation):\n         schema_editor.rename_index(model, old_index, new_index)\n     def database_backwards(self, app_label, schema_editor, from_state, to_state):\n         if self.old_fields:\n-            return\n+            from_model_state = from_state.models[app_label, self.model_name_lower]\n+            index_names = {index.name for index in from_model_state.indexes}\n+            auto_index_name = '%s_%s' % (from_model_state.db_table, '_'.join(self.old_fields))\n+            while auto_index_name in index_names:\n+                auto_index_name = '%s_%s' % (from_model_state.db_table, '_'.join([auto_index_name, 'uniq']))\n+            self.old_name = auto_index_name\n         self.new_name_lower, self.old_name_lower = (self.old_name_lower, self.new_name_lower)\n         self.new_name, self.old_name = (self.old_name, self.new_name)\n         self.database_forwards(app_label, schema_editor, from_state, to_state)\n", "normalized_occurrence": 1}
