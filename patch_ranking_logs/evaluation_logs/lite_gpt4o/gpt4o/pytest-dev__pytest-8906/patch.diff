diff --git a/src/_pytest/outcomes.py b/src/_pytest/outcomes.py
index 6515102..c2ff173 100644
--- a/src/_pytest/outcomes.py
+++ b/src/_pytest/outcomes.py
@@ -139,6 +139,53 @@ def skip(msg: str = "", *, allow_module_level: bool = False) -> "NoReturn":
         Similarly, use the ``# doctest: +SKIP`` directive (see `doctest.SKIP
         <https://docs.python.org/3/library/how-to/doctest.html#doctest.SKIP>`_)
         to skip a doctest statically.
+        
+        When skipping at module level, you can use the `allow_module_level` flag.
+        possible to declare a test to be skipped under certain conditions
+        like mismatching platforms or dependencies.
+        Similarly, use the ``# doctest: +SKIP`` directive (see `doctest.SKIP
+        <https://docs.python.org/3/library/how-to/doctest.html#doctest.SKIP>`_)
+        to skip a doctest statically.
+        
+        When skipping at module level, you can use the `allow_module_level` flag.
+    """
+    __tracebackhide__ = True
+    raise Skipped(msg=msg, allow_module_level=allow_module_level)
+
+def skip_module(msg: str) -> "NoReturn":
+    """Skip the entire module with the given message.
+
+    This function can be called at the module level for skipping the rest
+    of the module.
+
+    :param str msg:
+        The message to display upon skipping the module.
+    """
+    skip(msg, allow_module_level=True)
+    """Skip an executing test with the given message.
+
+    This function should be called only during testing (setup, call or teardown) or
+    during collection by using the ``allow_module_level`` flag.  This function can
+    be called in doctests as well.
+
+    :param bool allow_module_level:
+        Allows this function to be called at module level, skipping the rest
+        of the module. Defaults to False.
+
+    .. note::
+        It is better to use the :ref:`pytest.mark.skipif ref` marker when
+        possible to declare a test to be skipped under certain conditions
+        like mismatching platforms or dependencies.
+        Similarly, use the ``# doctest: +SKIP`` directive (see `doctest.SKIP
+        <https://docs.python.org/3/library/how-to/doctest.html#doctest.SKIP>`_)
+        to skip a doctest statically.
+        
+        When skipping at module level, you can use the `allow_module_level` flag.
+        possible to declare a test to be skipped under certain conditions
+        like mismatching platforms or dependencies.
+        Similarly, use the ``# doctest: +SKIP`` directive (see `doctest.SKIP
+        <https://docs.python.org/3/library/how-to/doctest.html#doctest.SKIP>`_)
+        to skip a doctest statically.
     """
     __tracebackhide__ = True
     raise Skipped(msg=msg, allow_module_level=allow_module_level)
