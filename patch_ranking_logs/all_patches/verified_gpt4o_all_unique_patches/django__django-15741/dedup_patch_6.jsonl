{"model_name_or_path": "agentless", "instance_id": "django__django-15741", "model_patch": "diff --git a/django/utils/formats.py b/django/utils/formats.py\nindex 82173e8..2dcd224 100644\n--- a/django/utils/formats.py\n+++ b/django/utils/formats.py\n@@ -97,6 +97,8 @@ def get_format_modules(lang=None):\n     return _format_modules_cache[lang]\n \n \n+from django.utils.functional import Promise\n+\n def get_format(format_type, lang=None, use_l10n=None):\n     \"\"\"\n     For a specific format type, return the format for the current\n@@ -106,6 +108,9 @@ def get_format(format_type, lang=None, use_l10n=None):\n     If use_l10n is provided and is not None, it forces the value to\n     be localized (or not), overriding the value of settings.USE_L10N.\n     \"\"\"\n+    if isinstance(format_type, Promise):\n+        format_type = str(format_type)\n+        \n     if use_l10n is None:\n         try:\n             use_l10n = settings._USE_L10N_INTERNAL\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/formats.py b/django/utils/formats.py\nindex fe1b781..7d9b836 100644\n--- a/django/utils/formats.py\n+++ b/django/utils/formats.py\n@@ -44,7 +44,10 @@ def get_format_modules(lang=None):\n     if lang not in _format_modules_cache:\n         _format_modules_cache[lang] = list(iter_format_modules(lang, settings.FORMAT_MODULE_PATH))\n     return _format_modules_cache[lang]\n+from django.utils.functional import Promise\n def get_format(format_type, lang=None, use_l10n=None):\n+    if isinstance(format_type, Promise):\n+        format_type = str(format_type)\n     if use_l10n is None:\n         try:\n             use_l10n = settings._USE_L10N_INTERNAL\n", "normalized_occurrence": 1}
