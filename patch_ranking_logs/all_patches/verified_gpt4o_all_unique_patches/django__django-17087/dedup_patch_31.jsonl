{"model_name_or_path": "agentless", "instance_id": "django__django-17087", "model_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex 941a5ed..cc623b0 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -104,7 +104,11 @@ class DeconstructableSerializer(BaseSerializer):\n         if module == \"django.db.models\":\n             imports = {\"from django.db import models\"}\n             name = \"models.%s\" % name\n-        else:\n+        elif module and name and len(module.split('.')) > 1:\n+            parent_module, parent_class = module.rsplit(\".\", 1)\n+            parent_imports = {\"import %s\" % parent_module}\n+            imports.update(parent_imports)\n+            name = \"%s.%s.%s\" % (parent_module, parent_class, name)\n             imports = {\"import %s\" % module}\n             name = path\n         return name, imports\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex bd46ec1..08df582 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -74,7 +74,11 @@ class DeconstructableSerializer(BaseSerializer):\n         if module == 'django.db.models':\n             imports = {'from django.db import models'}\n             name = 'models.%s' % name\n-        else:\n+        elif module and name and (len(module.split('.')) > 1):\n+            parent_module, parent_class = module.rsplit('.', 1)\n+            parent_imports = {'import %s' % parent_module}\n+            imports.update(parent_imports)\n+            name = '%s.%s.%s' % (parent_module, parent_class, name)\n             imports = {'import %s' % module}\n             name = path\n         return (name, imports)\n", "normalized_occurrence": 1}
