{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-20212", "model_patch": "diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\nindex 1e8e438..f93da94 100644\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -2625,7 +2625,9 @@ class Zero(IntegerConstant, metaclass=Singleton):\n     def _eval_power(self, expt):\n         if expt.is_positive:\n             return self\n-        if expt.is_negative:\n+        if expt is S.NegativeInfinity:\n+            return S.ComplexInfinity\n+        elif expt.is_negative:\n             return S.ComplexInfinity\n         if expt.is_extended_real is False:\n             return S.NaN\n", "occurrence": 2, "normalized_patch": "diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\nindex 4fccb81..6a577bc 100644\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -2299,7 +2299,9 @@ class Zero(IntegerConstant, metaclass=Singleton):\n     def _eval_power(self, expt):\n         if expt.is_positive:\n             return self\n-        if expt.is_negative:\n+        if expt is S.NegativeInfinity:\n+            return S.ComplexInfinity\n+        elif expt.is_negative:\n             return S.ComplexInfinity\n         if expt.is_extended_real is False:\n             return S.NaN\n", "normalized_occurrence": 2}
