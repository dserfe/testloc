{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11815", "model_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex 6957452..d55ef46 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -969,6 +969,8 @@ class CharField(Field):\n     description = _(\"String (up to %(max_length)s)\")\n \n     def __init__(self, *args, **kwargs):\n+        if 'default' in kwargs and isinstance(kwargs['default'], enum.Enum):\n+            kwargs['default'] = kwargs['default'].name\n         super().__init__(*args, **kwargs)\n         self.validators.append(validators.MaxLengthValidator(self.max_length))\n \n@@ -1014,6 +1016,8 @@ class CharField(Field):\n \n     def get_prep_value(self, value):\n         value = super().get_prep_value(value)\n+        if isinstance(value, enum.Enum):\n+            return value.name\n         return self.to_python(value)\n \n     def formfield(self, **kwargs):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex e3867cb..01ce170 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -467,6 +467,8 @@ class BooleanField(Field):\n class CharField(Field):\n     description = _('String (up to %(max_length)s)')\n     def __init__(self, *args, **kwargs):\n+        if 'default' in kwargs and isinstance(kwargs['default'], enum.Enum):\n+            kwargs['default'] = kwargs['default'].name\n         super().__init__(*args, **kwargs)\n         self.validators.append(validators.MaxLengthValidator(self.max_length))\n     def check(self, **kwargs):\n@@ -490,6 +492,8 @@ class CharField(Field):\n         return str(value)\n     def get_prep_value(self, value):\n         value = super().get_prep_value(value)\n+        if isinstance(value, enum.Enum):\n+            return value.name\n         return self.to_python(value)\n     def formfield(self, **kwargs):\n         defaults = {'max_length': self.max_length}\n", "normalized_occurrence": 1}
