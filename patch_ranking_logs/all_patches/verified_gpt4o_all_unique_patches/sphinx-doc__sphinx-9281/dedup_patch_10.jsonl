{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9281", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 7192ab0..b674021 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1291,7 +1291,7 @@ class FunctionDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # typ\n         try:\n             self.env.app.emit('autodoc-before-process-signature', self.object, False)\n             sig = inspect.signature(self.object, type_aliases=self.config.autodoc_type_aliases)\n-            args = stringify_signature(sig, **kwargs)\n+            args = stringify_signature(sig, **kwargs).replace('<', '').replace('>', '')\n         except TypeError as exc:\n             logger.warning(__(\"Failed to get a function signature for %s: %s\"),\n                            self.fullname, exc)\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 2bf2bdb..ee5a790 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -707,7 +707,7 @@ class FunctionDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):\n         try:\n             self.env.app.emit('autodoc-before-process-signature', self.object, False)\n             sig = inspect.signature(self.object, type_aliases=self.config.autodoc_type_aliases)\n-            args = stringify_signature(sig, **kwargs)\n+            args = stringify_signature(sig, **kwargs).replace('<', '').replace('>', '')\n         except TypeError as exc:\n             logger.warning(__('Failed to get a function signature for %s: %s'), self.fullname, exc)\n             return None\n", "normalized_occurrence": 1}
