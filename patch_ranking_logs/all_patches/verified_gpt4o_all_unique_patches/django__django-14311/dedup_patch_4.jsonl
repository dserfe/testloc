{"model_name_or_path": "agentless", "instance_id": "django__django-14311", "model_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex ac16894..803f5ef 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -224,7 +224,10 @@ def get_child_arguments():\n     # see https://docs.python.org/3/reference/import.html#main-spec\n     # __spec__ may not exist, e.g. when running in a Conda env.\n     if getattr(__main__, '__spec__', None) is not None and __main__.__spec__.parent:\n-        args += ['-m', __main__.__spec__.parent]\n+        if __main__.__spec__.name == __main__.__spec__.parent:\n+            args += ['-m', __main__.__spec__.name]\n+        else:\n+            args += ['-m', __main__.__spec__.name]\n         args += sys.argv[1:]\n     elif not py_script.exists():\n         # sys.argv[0] may not exist for several reasons on Windows.\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex 48818df..85a90b5 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -135,7 +135,10 @@ def get_child_arguments():\n     py_script = Path(sys.argv[0])\n     args = [sys.executable] + ['-W%s' % o for o in sys.warnoptions]\n     if getattr(__main__, '__spec__', None) is not None and __main__.__spec__.parent:\n-        args += ['-m', __main__.__spec__.parent]\n+        if __main__.__spec__.name == __main__.__spec__.parent:\n+            args += ['-m', __main__.__spec__.name]\n+        else:\n+            args += ['-m', __main__.__spec__.name]\n         args += sys.argv[1:]\n     elif not py_script.exists():\n         exe_entrypoint = py_script.with_suffix('.exe')\n", "normalized_occurrence": 1}
