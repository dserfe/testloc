{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8593", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex c412096..de5904b 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -728,15 +728,18 @@ class Documenter:\n \n             has_doc = bool(doc)\n \n-            metadata = extract_metadata(doc)\n-            if 'private' in metadata:\n-                # consider a member private if docstring has \"private\" metadata\n-                isprivate = True\n-            elif 'public' in metadata:\n-                # consider a member public if docstring has \"public\" metadata\n-                isprivate = False\n+            if membername.startswith('_'):\n+                metadata = extract_metadata(doc)\n+                if 'private' in metadata:\n+                    # consider a member private if docstring has \"private\" metadata\n+                    isprivate = True\n+                elif 'public' in metadata:\n+                    # consider a member public if docstring has \"public\" metadata\n+                    isprivate = False\n+                else:\n+                    isprivate = True\n             else:\n-                isprivate = membername.startswith('_')\n+                isprivate = False\n \n             keep = False\n             if safe_getattr(member, '__sphinx_mock__', None) is not None:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex f71844a..f55b6f0 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -378,13 +378,16 @@ class Documenter:\n             if isinstance(obj, ObjectMember) and obj.docstring:\n                 doc = obj.docstring\n             has_doc = bool(doc)\n-            metadata = extract_metadata(doc)\n-            if 'private' in metadata:\n-                isprivate = True\n-            elif 'public' in metadata:\n-                isprivate = False\n+            if membername.startswith('_'):\n+                metadata = extract_metadata(doc)\n+                if 'private' in metadata:\n+                    isprivate = True\n+                elif 'public' in metadata:\n+                    isprivate = False\n+                else:\n+                    isprivate = True\n             else:\n-                isprivate = membername.startswith('_')\n+                isprivate = False\n             keep = False\n             if safe_getattr(member, '__sphinx_mock__', None) is not None:\n                 pass\n", "normalized_occurrence": 1}
