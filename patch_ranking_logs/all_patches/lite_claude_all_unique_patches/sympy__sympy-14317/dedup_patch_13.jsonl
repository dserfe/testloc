{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-14317", "model_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 408ff45..6656781 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1854,10 +1854,46 @@ class LatexPrinter(Printer):\n \n     def _print_Poly(self, poly):\n         cls = poly.__class__.__name__\n-        expr = self._print(poly.as_expr())\n+        terms = poly.terms()\n+        \n+        # Build the expression string term by term\n+        expr_terms = []\n+        for monom, coeff in terms:\n+            if coeff == 0:\n+                continue\n+            \n+            # Handle the coefficient\n+            if coeff == 1 and sum(monom) > 0:\n+                term = \"\"\n+            elif coeff == -1 and sum(monom) > 0:\n+                term = \"-\"\n+            else:\n+                term = self._print(coeff)\n+                if term.startswith('-'):\n+                    term = term\n+                else:\n+                    term = term + \" \"\n+            \n+            # Add each variable to the term\n+            for i, exp in enumerate(monom):\n+                if exp > 0:\n+                    gen = self._print(poly.gens[i])\n+                    if exp == 1:\n+                        term += gen\n+                    else:\n+                        term += \"%s^{%d}\" % (gen, exp)\n+            \n+            if not term:\n+                term = \"1\"\n+            expr_terms.append(term)\n+        \n+        expr = \" + \".join(reversed(expr_terms)).replace(\" + -\", \" - \")\n+        if not expr:\n+            expr = \"0\"\n+        \n         gens = list(map(self._print, poly.gens))\n         domain = \"domain=%s\" % self._print(poly.get_domain())\n-\n+        \n         args = \", \".join([expr] + gens + [domain])\n         if cls in accepted_latex_functions:\n             tex = r\"\\%s {\\left (%s \\right )}\" % (cls, args)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 5a18831..60aabd4 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1241,7 +1241,34 @@ class LatexPrinter(Printer):\n         return '%s%s\\\\left[%s\\\\right]' % (inv, domain, symbols)\n     def _print_Poly(self, poly):\n         cls = poly.__class__.__name__\n-        expr = self._print(poly.as_expr())\n+        terms = poly.terms()\n+        expr_terms = []\n+        for monom, coeff in terms:\n+            if coeff == 0:\n+                continue\n+            if coeff == 1 and sum(monom) > 0:\n+                term = ''\n+            elif coeff == -1 and sum(monom) > 0:\n+                term = '-'\n+            else:\n+                term = self._print(coeff)\n+                if term.startswith('-'):\n+                    term = term\n+                else:\n+                    term = term + ' '\n+            for i, exp in enumerate(monom):\n+                if exp > 0:\n+                    gen = self._print(poly.gens[i])\n+                    if exp == 1:\n+                        term += gen\n+                    else:\n+                        term += '%s^{%d}' % (gen, exp)\n+            if not term:\n+                term = '1'\n+            expr_terms.append(term)\n+        expr = ' + '.join(reversed(expr_terms)).replace(' + -', ' - ')\n+        if not expr:\n+            expr = '0'\n         gens = list(map(self._print, poly.gens))\n         domain = 'domain=%s' % self._print(poly.get_domain())\n         args = ', '.join([expr] + gens + [domain])\n", "normalized_occurrence": 1}
