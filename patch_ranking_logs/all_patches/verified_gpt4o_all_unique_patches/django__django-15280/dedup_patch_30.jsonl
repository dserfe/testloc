{"model_name_or_path": "agentless", "instance_id": "django__django-15280", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 1013471..2549f5e 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -1353,6 +1353,11 @@ class QuerySet:\n         c._known_related_objects = self._known_related_objects\n         c._iterable_class = self._iterable_class\n         c._fields = self._fields\n+        # Ensure deferred fields specificity is maintained across cloned querysets.\n+        if self._defer_next_filter:\n+            c = c.defer(*self._defer_next_filter)\n+        elif self._only_next_filter:\n+            c = c.only(*self._only_next_filter)\n         return c\n \n     def _fetch_all(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex b23a375..9648552 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -818,6 +818,10 @@ class QuerySet:\n         c._known_related_objects = self._known_related_objects\n         c._iterable_class = self._iterable_class\n         c._fields = self._fields\n+        if self._defer_next_filter:\n+            c = c.defer(*self._defer_next_filter)\n+        elif self._only_next_filter:\n+            c = c.only(*self._only_next_filter)\n         return c\n     def _fetch_all(self):\n         if self._result_cache is None:\n", "normalized_occurrence": 1}
