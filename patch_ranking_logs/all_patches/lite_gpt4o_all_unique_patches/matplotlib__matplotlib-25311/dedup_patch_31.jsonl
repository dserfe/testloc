{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25311", "model_patch": "diff --git a/lib/matplotlib/legend.py b/lib/matplotlib/legend.py\nindex a038473..b48ecf7 100644\n--- a/lib/matplotlib/legend.py\n+++ b/lib/matplotlib/legend.py\n@@ -1202,7 +1202,7 @@ class Legend(Artist):\n             if self._draggable is not None:\n                 self._draggable.disconnect()\n             self._draggable = None\n-        return self._draggable\n+        return None  # Exclude _draggable from being pickled\n \n     def get_draggable(self):\n         \"\"\"Return ``True`` if the legend is draggable, ``False`` otherwise.\"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/legend.py b/lib/matplotlib/legend.py\nindex 8070532..642847b 100644\n--- a/lib/matplotlib/legend.py\n+++ b/lib/matplotlib/legend.py\n@@ -428,7 +428,7 @@ class Legend(Artist):\n             if self._draggable is not None:\n                 self._draggable.disconnect()\n             self._draggable = None\n-        return self._draggable\n+        return None\n     def get_draggable(self):\n         return self._draggable is not None\n def _get_legend_handles(axs, legend_handler_map=None):\n", "normalized_occurrence": 1}
