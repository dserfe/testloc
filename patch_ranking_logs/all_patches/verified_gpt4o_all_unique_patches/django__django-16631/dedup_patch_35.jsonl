{"model_name_or_path": "agentless", "instance_id": "django__django-16631", "model_patch": "diff --git a/django/contrib/sessions/backends/base.py b/django/contrib/sessions/backends/base.py\nindex 662c574..78ebe47 100644\n--- a/django/contrib/sessions/backends/base.py\n+++ b/django/contrib/sessions/backends/base.py\n@@ -100,9 +100,20 @@ class SessionBase:\n \n     def decode(self, session_data):\n         try:\n-            return signing.loads(\n-                session_data, salt=self.key_salt, serializer=self.serializer\n-            )\n+            try:\n+                return signing.loads(\n+                    session_data, salt=self.key_salt, serializer=self.serializer\n+                )\n+            except signing.BadSignature:\n+                for fallback_key in settings.SECRET_KEY_FALLBACKS:\n+                    try:\n+                        return signing.loads(\n+                            session_data, key=fallback_key, salt=self.key_salt, serializer=self.serializer\n+                        )\n+                    except signing.BadSignature:\n+                        continue\n+                logger = logging.getLogger(\"django.security.SuspiciousSession\")\n+                logger.warning(\"Session data corrupted\")\n         except signing.BadSignature:\n             logger = logging.getLogger(\"django.security.SuspiciousSession\")\n             logger.warning(\"Session data corrupted\")\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/sessions/backends/base.py b/django/contrib/sessions/backends/base.py\nindex a2da098..36743e7 100644\n--- a/django/contrib/sessions/backends/base.py\n+++ b/django/contrib/sessions/backends/base.py\n@@ -56,7 +56,16 @@ class SessionBase:\n         return signing.dumps(session_dict, salt=self.key_salt, serializer=self.serializer, compress=True)\n     def decode(self, session_data):\n         try:\n-            return signing.loads(session_data, salt=self.key_salt, serializer=self.serializer)\n+            try:\n+                return signing.loads(session_data, salt=self.key_salt, serializer=self.serializer)\n+            except signing.BadSignature:\n+                for fallback_key in settings.SECRET_KEY_FALLBACKS:\n+                    try:\n+                        return signing.loads(session_data, key=fallback_key, salt=self.key_salt, serializer=self.serializer)\n+                    except signing.BadSignature:\n+                        continue\n+                logger = logging.getLogger('django.security.SuspiciousSession')\n+                logger.warning('Session data corrupted')\n         except signing.BadSignature:\n             logger = logging.getLogger('django.security.SuspiciousSession')\n             logger.warning('Session data corrupted')\n", "normalized_occurrence": 1}
