{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-8721", "model_patch": "diff --git a/sphinx/ext/viewcode.py b/sphinx/ext/viewcode.py\nindex 27202ee..31eee13 100644\n--- a/sphinx/ext/viewcode.py\n+++ b/sphinx/ext/viewcode.py\n@@ -159,6 +159,10 @@ def get_module_filename(app: Sphinx, modname: str) -> Optional[str]:\n \n def should_generate_module_page(app: Sphinx, modname: str) -> bool:\n     \"\"\"Check generation of module page is needed.\"\"\"\n+    # Don't generate for epub builder when viewcode_enable_epub is False\n+    if app.builder.name == 'epub' and not app.config.viewcode_enable_epub:\n+        return False\n+\n     module_filename = get_module_filename(app, modname)\n     if module_filename is None:\n         # Always (re-)generate module page when module filename is not found.\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/viewcode.py b/sphinx/ext/viewcode.py\nindex 5db007b..591af29 100644\n--- a/sphinx/ext/viewcode.py\n+++ b/sphinx/ext/viewcode.py\n@@ -106,6 +106,8 @@ def get_module_filename(app: Sphinx, modname: str) -> Optional[str]:\n         except Exception:\n             return None\n def should_generate_module_page(app: Sphinx, modname: str) -> bool:\n+    if app.builder.name == 'epub' and (not app.config.viewcode_enable_epub):\n+        return False\n     module_filename = get_module_filename(app, modname)\n     if module_filename is None:\n         return True\n", "normalized_occurrence": 2}
