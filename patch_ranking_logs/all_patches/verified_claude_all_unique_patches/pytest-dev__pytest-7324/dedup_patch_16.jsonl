{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-7324", "model_patch": "diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py\nindex ec70dcc..9d333e5 100644\n--- a/src/_pytest/assertion/rewrite.py\n+++ b/src/_pytest/assertion/rewrite.py\n@@ -925,7 +925,7 @@ class AssertionRewriter(ast.NodeVisitor):\n         # Clear temporary variables by setting them to None.\n         if self.variables:\n             variables = [ast.Name(name, ast.Store()) for name in self.variables]\n-            clear = ast.Assign(variables, ast.NameConstant(None))\n+            clear = ast.Assign(variables, ast.Constant(value=None))\n             self.statements.append(clear)\n         # Fix line numbers.\n         for stmt in self.statements:\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py\nindex 824bf26..aa6378e 100644\n--- a/src/_pytest/assertion/rewrite.py\n+++ b/src/_pytest/assertion/rewrite.py\n@@ -483,7 +483,7 @@ class AssertionRewriter(ast.NodeVisitor):\n             body.append(raise_)\n         if self.variables:\n             variables = [ast.Name(name, ast.Store()) for name in self.variables]\n-            clear = ast.Assign(variables, ast.NameConstant(None))\n+            clear = ast.Assign(variables, ast.Constant(value=None))\n             self.statements.append(clear)\n         for stmt in self.statements:\n             set_location(stmt, assert_.lineno, assert_.col_offset)\n", "normalized_occurrence": 1}
