{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11333", "model_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex fa86ab6..700b001 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -63,11 +63,13 @@ class ResolverMatch:\n         )\n \n \n-@functools.lru_cache(maxsize=None)\n+def _get_resolver(urlconf):\n+    return URLResolver(RegexPattern(r'^/'), urlconf)\n+\n def get_resolver(urlconf=None):\n     if urlconf is None:\n         urlconf = settings.ROOT_URLCONF\n-    return URLResolver(RegexPattern(r'^/'), urlconf)\n+    return _get_resolver(urlconf)\n \n \n @functools.lru_cache(maxsize=None)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 3a1aa93..962283a 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -37,11 +37,12 @@ class ResolverMatch:\n         return (self.func, self.args, self.kwargs)[index]\n     def __repr__(self):\n         return 'ResolverMatch(func=%s, args=%s, kwargs=%s, url_name=%s, app_names=%s, namespaces=%s, route=%s)' % (self._func_path, self.args, self.kwargs, self.url_name, self.app_names, self.namespaces, self.route)\n-@functools.lru_cache(maxsize=None)\n+def _get_resolver(urlconf):\n+    return URLResolver(RegexPattern('^/'), urlconf)\n def get_resolver(urlconf=None):\n     if urlconf is None:\n         urlconf = settings.ROOT_URLCONF\n-    return URLResolver(RegexPattern('^/'), urlconf)\n+    return _get_resolver(urlconf)\n @functools.lru_cache(maxsize=None)\n def get_ns_resolver(ns_pattern, resolver, converters):\n     pattern = RegexPattern(ns_pattern)\n", "normalized_occurrence": 1}
