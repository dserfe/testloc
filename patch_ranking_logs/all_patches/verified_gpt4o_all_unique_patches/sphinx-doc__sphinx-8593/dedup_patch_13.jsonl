{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8593", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex c412096..6f813f0 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -729,14 +729,17 @@ class Documenter:\n             has_doc = bool(doc)\n \n             metadata = extract_metadata(doc)\n+            # Check metadata for 'private' or 'public' markers\n             if 'private' in metadata:\n-                # consider a member private if docstring has \"private\" metadata\n                 isprivate = True\n             elif 'public' in metadata:\n-                # consider a member public if docstring has \"public\" metadata\n                 isprivate = False\n             else:\n-                isprivate = membername.startswith('_')\n+                # Default behavior for determining if a member is private\n+                if isinstance(member, str) and member.startswith('_'):\n+                    isprivate = True\n+                else:\n+                    isprivate = membername.startswith('_')\n \n             keep = False\n             if safe_getattr(member, '__sphinx_mock__', None) is not None:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex f71844a..0de3635 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -383,6 +383,8 @@ class Documenter:\n                 isprivate = True\n             elif 'public' in metadata:\n                 isprivate = False\n+            elif isinstance(member, str) and member.startswith('_'):\n+                isprivate = True\n             else:\n                 isprivate = membername.startswith('_')\n             keep = False\n", "normalized_occurrence": 1}
