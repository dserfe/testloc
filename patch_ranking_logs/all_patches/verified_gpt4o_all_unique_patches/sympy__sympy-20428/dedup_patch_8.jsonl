{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-20428", "model_patch": "diff --git a/sympy/polys/polyclasses.py b/sympy/polys/polyclasses.py\nindex 3cf530f..88092f6 100644\n--- a/sympy/polys/polyclasses.py\n+++ b/sympy/polys/polyclasses.py\n@@ -586,6 +586,7 @@ class DMP(PicklableWithSlots, CantSympify):\n     def clear_denoms(f):\n         \"\"\"Clear denominators, but keep the ground domain. \"\"\"\n         coeff, F = dmp_clear_denoms(f.rep, f.lev, f.dom)\n+        F = dmp_strip(F, f.lev)\n         return coeff, f.per(F)\n \n     def integrate(f, m=1, j=0):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/polyclasses.py b/sympy/polys/polyclasses.py\nindex 3348dd4..e5ce2da 100644\n--- a/sympy/polys/polyclasses.py\n+++ b/sympy/polys/polyclasses.py\n@@ -297,6 +297,7 @@ class DMP(PicklableWithSlots, CantSympify):\n         return dmp_l1_norm(f.rep, f.lev, f.dom)\n     def clear_denoms(f):\n         coeff, F = dmp_clear_denoms(f.rep, f.lev, f.dom)\n+        F = dmp_strip(F, f.lev)\n         return (coeff, f.per(F))\n     def integrate(f, m=1, j=0):\n         if not isinstance(m, int):\n", "normalized_occurrence": 1}
