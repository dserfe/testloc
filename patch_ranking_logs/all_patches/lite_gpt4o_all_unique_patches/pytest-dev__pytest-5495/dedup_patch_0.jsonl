{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-5495", "model_patch": "diff --git a/src/_pytest/assertion/util.py b/src/_pytest/assertion/util.py\nindex c9b4ff0..0ba10ee 100644\n--- a/src/_pytest/assertion/util.py\n+++ b/src/_pytest/assertion/util.py\n@@ -181,7 +181,7 @@ def _diff_text(left, right, verbose=0):\n         This is done using repr() which then needs post-processing to fix the encompassing quotes and un-escape\n         newlines and carriage returns (#429).\n         \"\"\"\n-        r = str(repr(binary_text)[1:-1])\n+        r = repr(binary_text)[1:-1].encode().decode('unicode_escape')\n         r = r.replace(r\"\\n\", \"\\n\")\n         r = r.replace(r\"\\r\", \"\\r\")\n         return r\n@@ -280,8 +280,9 @@ def _compare_eq_sequence(left, right, verbose=0):\n             ]\n         else:\n             explanation += [\n-                \"%s contains %d more items, first extra item: %s\"\n-                % (dir_with_more, len_diff, extra)\n+                \"{} contains {} more items, first extra item: {!r}\".format(\n+                    dir_with_more, len_diff, extra\n+                )\n             ]\n     return explanation\n \n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/assertion/util.py b/src/_pytest/assertion/util.py\nindex 855efef..25fb665 100644\n--- a/src/_pytest/assertion/util.py\n+++ b/src/_pytest/assertion/util.py\n@@ -104,7 +104,7 @@ def _diff_text(left, right, verbose=0):\n     from difflib import ndiff\n     explanation = []\n     def escape_for_readable_diff(binary_text):\n-        r = str(repr(binary_text)[1:-1])\n+        r = repr(binary_text)[1:-1].encode().decode('unicode_escape')\n         r = r.replace('\\\\n', '\\n')\n         r = r.replace('\\\\r', '\\r')\n         return r\n@@ -175,7 +175,7 @@ def _compare_eq_sequence(left, right, verbose=0):\n         if len_diff == 1:\n             explanation += ['{} contains one more item: {}'.format(dir_with_more, extra)]\n         else:\n-            explanation += ['%s contains %d more items, first extra item: %s' % (dir_with_more, len_diff, extra)]\n+            explanation += ['{} contains {} more items, first extra item: {!r}'.format(dir_with_more, len_diff, extra)]\n     return explanation\n def _compare_eq_set(left, right, verbose=0):\n     explanation = []\n", "normalized_occurrence": 1}
