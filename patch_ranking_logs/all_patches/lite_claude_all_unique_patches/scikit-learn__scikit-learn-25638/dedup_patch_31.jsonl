{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-25638", "model_patch": "diff --git a/sklearn/utils/multiclass.py b/sklearn/utils/multiclass.py\nindex db3f82e..c197fc9 100644\n--- a/sklearn/utils/multiclass.py\n+++ b/sklearn/utils/multiclass.py\n@@ -340,9 +340,18 @@ def type_of_target(y, input_name=\"\"):\n             return \"binary\"  # []\n         # 2-D empty array: [[]]\n         return \"unknown\"\n-    if not issparse(y) and y.dtype == object and not isinstance(y.flat[0], str):\n-        # [obj_1] and not [\"label_1\"]\n-        return \"unknown\"\n+    if not issparse(y) and y.dtype == object:\n+        if isinstance(y.flat[0], str):\n+            return \"binary\"  # [\"label_1\"]\n+        # Handle pandas nullable dtypes\n+        import pandas as pd\n+        if (\n+            isinstance(y.flat[0], (pd.NA, bool, int, float))\n+            or (hasattr(y.flat[0], 'dtype')  # Check for pandas nullable scalar types\n+                and str(y.flat[0].dtype) in ('Int64', 'Float64', 'boolean'))\n+        ):\n+            return _determine_binary_or_multiclass(y)\n+        return \"unknown\"  # [obj_1]\n \n     # Check if multioutput\n     if y.ndim == 2 and y.shape[1] > 1:\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/utils/multiclass.py b/sklearn/utils/multiclass.py\nindex dee4b2a..0954a19 100644\n--- a/sklearn/utils/multiclass.py\n+++ b/sklearn/utils/multiclass.py\n@@ -91,7 +91,12 @@ def type_of_target(y, input_name=''):\n         if y.ndim == 1:\n             return 'binary'\n         return 'unknown'\n-    if not issparse(y) and y.dtype == object and (not isinstance(y.flat[0], str)):\n+    if not issparse(y) and y.dtype == object:\n+        if isinstance(y.flat[0], str):\n+            return 'binary'\n+        import pandas as pd\n+        if isinstance(y.flat[0], (pd.NA, bool, int, float)) or (hasattr(y.flat[0], 'dtype') and str(y.flat[0].dtype) in ('Int64', 'Float64', 'boolean')):\n+            return _determine_binary_or_multiclass(y)\n         return 'unknown'\n     if y.ndim == 2 and y.shape[1] > 1:\n         suffix = '-multioutput'\n", "normalized_occurrence": 1}
