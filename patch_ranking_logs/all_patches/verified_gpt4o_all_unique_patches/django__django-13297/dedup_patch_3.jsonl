{"model_name_or_path": "agentless", "instance_id": "django__django-13297", "model_patch": "diff --git a/django/views/generic/base.py b/django/views/generic/base.py\nindex 5b48898..2667329 100644\n--- a/django/views/generic/base.py\n+++ b/django/views/generic/base.py\n@@ -160,6 +160,8 @@ class TemplateView(TemplateResponseMixin, ContextMixin, View):\n         # RemovedInDjango40Warning: when the deprecation ends, replace with:\n         #   context = self.get_context_data()\n         context_kwargs = _wrap_url_kwargs_with_deprecation_warning(kwargs)\n+        # Ensure SimpleLazyObjects are evaluated before passing to get_context_data\n+        context_kwargs = {k: (v() if isinstance(v, SimpleLazyObject) else v) for k, v in context_kwargs.items()}\n         context = self.get_context_data(**context_kwargs)\n         return self.render_to_response(context)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/views/generic/base.py b/django/views/generic/base.py\nindex 6ce6dc7..a03b342 100644\n--- a/django/views/generic/base.py\n+++ b/django/views/generic/base.py\n@@ -77,6 +77,7 @@ class TemplateResponseMixin:\n class TemplateView(TemplateResponseMixin, ContextMixin, View):\n     def get(self, request, *args, **kwargs):\n         context_kwargs = _wrap_url_kwargs_with_deprecation_warning(kwargs)\n+        context_kwargs = {k: v() if isinstance(v, SimpleLazyObject) else v for k, v in context_kwargs.items()}\n         context = self.get_context_data(**context_kwargs)\n         return self.render_to_response(context)\n def _wrap_url_kwargs_with_deprecation_warning(url_kwargs):\n", "normalized_occurrence": 1}
