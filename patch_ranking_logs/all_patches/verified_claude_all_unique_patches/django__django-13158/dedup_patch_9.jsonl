{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13158", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex e0d8d05..cddb4aa 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -997,7 +997,13 @@ class QuerySet:\n         return clone\n \n     def union(self, *other_qs, all=False):\n-        # If the query is an EmptyQuerySet, combine all nonempty querysets.\n+        # If any query is an EmptyQuerySet from none(), return it\n+        if isinstance(self, EmptyQuerySet) and not self.query.combined_queries:\n+            return self\n+        for other in other_qs:\n+            if isinstance(other, EmptyQuerySet) and not other.query.combined_queries:\n+                return other\n+        # If the query is an EmptyQuerySet from other means, combine all nonempty querysets.\n         if isinstance(self, EmptyQuerySet):\n             qs = [q for q in other_qs if not isinstance(q, EmptyQuerySet)]\n             return qs[0]._combinator_query('union', *qs[1:], all=all) if qs else self\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex be3ebe2..34be05d 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -587,6 +587,11 @@ class QuerySet:\n         clone.query.combinator_all = all\n         return clone\n     def union(self, *other_qs, all=False):\n+        if isinstance(self, EmptyQuerySet) and (not self.query.combined_queries):\n+            return self\n+        for other in other_qs:\n+            if isinstance(other, EmptyQuerySet) and (not other.query.combined_queries):\n+                return other\n         if isinstance(self, EmptyQuerySet):\n             qs = [q for q in other_qs if not isinstance(q, EmptyQuerySet)]\n             return qs[0]._combinator_query('union', *qs[1:], all=all) if qs else self\n", "normalized_occurrence": 1}
