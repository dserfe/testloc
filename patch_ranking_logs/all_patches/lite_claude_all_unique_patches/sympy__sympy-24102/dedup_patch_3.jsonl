{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-24102", "model_patch": "diff --git a/sympy/parsing/mathematica.py b/sympy/parsing/mathematica.py\nindex 3e3bc62..2e4d729 100644\n--- a/sympy/parsing/mathematica.py\n+++ b/sympy/parsing/mathematica.py\n@@ -600,6 +600,8 @@ class MathematicaParser:\n     def _get_inv(cls, x):\n         return [\"Power\", x, \"-1\"]\n \n+    # Pattern to match Unicode letters and other valid Mathematica identifiers\n+    _literal = r'[a-zA-Z\\u0370-\\u03FF\\u0400-\\u04FF\\u0500-\\u052F][a-zA-Z0-9\\u0370-\\u03FF\\u0400-\\u04FF\\u0500-\\u052F]*'\n     _regex_tokenizer = None\n \n     def _get_tokenizer(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/parsing/mathematica.py b/sympy/parsing/mathematica.py\nindex 957d6fe..e43d07e 100644\n--- a/sympy/parsing/mathematica.py\n+++ b/sympy/parsing/mathematica.py\n@@ -228,6 +228,7 @@ class MathematicaParser:\n     @classmethod\n     def _get_inv(cls, x):\n         return ['Power', x, '-1']\n+    _literal = '[a-zA-Z\\\\u0370-\\\\u03FF\\\\u0400-\\\\u04FF\\\\u0500-\\\\u052F][a-zA-Z0-9\\\\u0370-\\\\u03FF\\\\u0400-\\\\u04FF\\\\u0500-\\\\u052F]*'\n     _regex_tokenizer = None\n     def _get_tokenizer(self):\n         if self._regex_tokenizer is not None:\n", "normalized_occurrence": 1}
