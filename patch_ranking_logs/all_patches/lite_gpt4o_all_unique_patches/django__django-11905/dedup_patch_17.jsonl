{"model_name_or_path": "agentless", "instance_id": "django__django-11905", "model_patch": "diff --git a/django/db/models/lookups.py b/django/db/models/lookups.py\nindex 6d1043b..b95b08d 100644\n--- a/django/db/models/lookups.py\n+++ b/django/db/models/lookups.py\n@@ -463,6 +463,8 @@ class IsNull(BuiltinLookup):\n     prepare_rhs = False\n \n     def as_sql(self, compiler, connection):\n+        if not isinstance(self.rhs, bool):\n+            raise ValueError(\"The value for __isnull lookup must be a boolean.\")\n         sql, params = compiler.compile(self.lhs)\n         if self.rhs:\n             return \"%s IS NULL\" % sql, params\n@@ -476,6 +478,8 @@ class Regex(BuiltinLookup):\n     prepare_rhs = False\n \n     def as_sql(self, compiler, connection):\n+        if not isinstance(self.rhs, bool):\n+            raise ValueError(\"The value for __isnull lookup must be a boolean.\")\n         if self.lookup_name in connection.operators:\n             return super().as_sql(compiler, connection)\n         else:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/lookups.py b/django/db/models/lookups.py\nindex 46fc1a1..0c57528 100644\n--- a/django/db/models/lookups.py\n+++ b/django/db/models/lookups.py\n@@ -313,6 +313,8 @@ class IsNull(BuiltinLookup):\n     lookup_name = 'isnull'\n     prepare_rhs = False\n     def as_sql(self, compiler, connection):\n+        if not isinstance(self.rhs, bool):\n+            raise ValueError('The value for __isnull lookup must be a boolean.')\n         sql, params = compiler.compile(self.lhs)\n         if self.rhs:\n             return ('%s IS NULL' % sql, params)\n@@ -323,6 +325,8 @@ class Regex(BuiltinLookup):\n     lookup_name = 'regex'\n     prepare_rhs = False\n     def as_sql(self, compiler, connection):\n+        if not isinstance(self.rhs, bool):\n+            raise ValueError('The value for __isnull lookup must be a boolean.')\n         if self.lookup_name in connection.operators:\n             return super().as_sql(compiler, connection)\n         else:\n", "normalized_occurrence": 1}
