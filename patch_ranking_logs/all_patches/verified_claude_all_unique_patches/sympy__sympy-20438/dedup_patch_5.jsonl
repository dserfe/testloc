{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-20438", "model_patch": "diff --git a/sympy/sets/handlers/issubset.py b/sympy/sets/handlers/issubset.py\nindex 90605e6..e4e3af6 100644\n--- a/sympy/sets/handlers/issubset.py\n+++ b/sympy/sets/handlers/issubset.py\n@@ -1,7 +1,7 @@\n from sympy import S, Symbol\n from sympy.core.logic import fuzzy_and, fuzzy_bool, fuzzy_not, fuzzy_or\n from sympy.core.relational import Eq\n-from sympy.sets.sets import FiniteSet, Interval, Set, Union\n+from sympy.sets.sets import FiniteSet, Interval, Set, Union, ProductSet\n from sympy.sets.fancysets import Complexes, Reals, Range, Rationals\n from sympy.multipledispatch import dispatch\n \n@@ -12,6 +12,20 @@ _inf_sets = [S.Naturals, S.Naturals0, S.Integers, S.Rationals, S.Reals, S.Comple\n def is_subset_sets(a, b): # noqa:F811\n     return None\n \n+@dispatch(ProductSet, FiniteSet)  # type: ignore # noqa:F811\n+def is_subset_sets(a, b): # noqa:F811\n+    # If both sets are finite, we can compare their elements directly\n+    if a.is_finite:\n+        return all(x in b for x in a)\n+    return None\n+\n+@dispatch(FiniteSet, ProductSet)  # type: ignore # noqa:F811\n+def is_subset_sets(a, b): # noqa:F811\n+    # If both sets are finite, we can compare their elements directly\n+    if b.is_finite:\n+        return all(x in b for x in a)\n+    return None\n+\n @dispatch(Interval, Interval)  # type: ignore # noqa:F811\n def is_subset_sets(a, b): # noqa:F811\n     # This is correct but can be made more comprehensive...\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/sets/handlers/issubset.py b/sympy/sets/handlers/issubset.py\nindex fdfc349..36bda8d 100644\n--- a/sympy/sets/handlers/issubset.py\n+++ b/sympy/sets/handlers/issubset.py\n@@ -1,13 +1,23 @@\n from sympy import S, Symbol\n from sympy.core.logic import fuzzy_and, fuzzy_bool, fuzzy_not, fuzzy_or\n from sympy.core.relational import Eq\n-from sympy.sets.sets import FiniteSet, Interval, Set, Union\n+from sympy.sets.sets import FiniteSet, Interval, Set, Union, ProductSet\n from sympy.sets.fancysets import Complexes, Reals, Range, Rationals\n from sympy.multipledispatch import dispatch\n _inf_sets = [S.Naturals, S.Naturals0, S.Integers, S.Rationals, S.Reals, S.Complexes]\n @dispatch(Set, Set)\n def is_subset_sets(a, b):\n     return None\n+@dispatch(ProductSet, FiniteSet)\n+def is_subset_sets(a, b):\n+    if a.is_finite:\n+        return all((x in b for x in a))\n+    return None\n+@dispatch(FiniteSet, ProductSet)\n+def is_subset_sets(a, b):\n+    if b.is_finite:\n+        return all((x in b for x in a))\n+    return None\n @dispatch(Interval, Interval)\n def is_subset_sets(a, b):\n     if fuzzy_bool(a.start < b.start):\n", "normalized_occurrence": 1}
