{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-25960", "model_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex eeb18de..24cbb2d 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -1581,6 +1581,12 @@ default: %(va)s\n             relative height of ``height_ratios[i] / sum(height_ratios)``.\n             If not given, all rows will have the same height.\n         \"\"\"\n+        # Scale the spacing parameters relative to figure size\n+        if wspace is not None:\n+            wspace = wspace * 2  # Scale factor for width spacing\n+        if hspace is not None:\n+            hspace = hspace * 2  # Scale factor for height spacing\n+            \n         gs = GridSpec(nrows=nrows, ncols=ncols, figure=self,\n                       wspace=wspace, hspace=hspace,\n                       width_ratios=width_ratios,\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 19ec421..2b920d7 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -410,6 +410,10 @@ class FigureBase(Artist):\n         gs = GridSpec(nrows=nrows, ncols=ncols, figure=self, **kwargs)\n         return gs\n     def subfigures(self, nrows=1, ncols=1, squeeze=True, wspace=None, hspace=None, width_ratios=None, height_ratios=None, **kwargs):\n+        if wspace is not None:\n+            wspace = wspace * 2\n+        if hspace is not None:\n+            hspace = hspace * 2\n         gs = GridSpec(nrows=nrows, ncols=ncols, figure=self, wspace=wspace, hspace=hspace, width_ratios=width_ratios, height_ratios=height_ratios)\n         sfarr = np.empty((nrows, ncols), dtype=object)\n         for i in range(ncols):\n", "normalized_occurrence": 1}
