{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11797", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 946e695..37ed5db 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -104,9 +104,10 @@ class SQLCompiler:\n                     expressions.append(self.query.resolve_ref(expr))\n                 else:\n                     expressions.append(expr)\n-        # Note that even if the group_by is set, it is only the minimal\n-        # set to group by. So, we need to add cols in select, order_by, and\n-        # having into the select in any case.\n+            # When group_by is explicitly set (not True), we should use only those\n+            # expressions to maintain the exact grouping specified\n+            return [(sql, params) for sql, params in\n+                   ((self.compile(expr)) for expr in expressions)]\n         for expr, _, _ in select:\n             cols = expr.get_group_by_cols()\n             for col in cols:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex a6b66a9..3b3140f 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -45,6 +45,7 @@ class SQLCompiler:\n                     expressions.append(self.query.resolve_ref(expr))\n                 else:\n                     expressions.append(expr)\n+            return [(sql, params) for sql, params in (self.compile(expr) for expr in expressions)]\n         for expr, _, _ in select:\n             cols = expr.get_group_by_cols()\n             for col in cols:\n", "normalized_occurrence": 1}
