{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-20212", "model_patch": "diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\nindex 1e8e438..86a4c20 100644\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -2626,7 +2626,10 @@ class Zero(IntegerConstant, metaclass=Singleton):\n         if expt.is_positive:\n             return self\n         if expt.is_negative:\n-            return S.ComplexInfinity\n+            if self.is_zero and expt.is_infinite:\n+                return S.ComplexInfinity\n+            else:\n+                return S.ComplexInfinity\n         if expt.is_extended_real is False:\n             return S.NaN\n         # infinities are already handled with pos and neg\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\nindex 4fccb81..9f6886c 100644\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -2300,7 +2300,10 @@ class Zero(IntegerConstant, metaclass=Singleton):\n         if expt.is_positive:\n             return self\n         if expt.is_negative:\n-            return S.ComplexInfinity\n+            if self.is_zero and expt.is_infinite:\n+                return S.ComplexInfinity\n+            else:\n+                return S.ComplexInfinity\n         if expt.is_extended_real is False:\n             return S.NaN\n         coeff, terms = expt.as_coeff_Mul()\n", "normalized_occurrence": 1}
