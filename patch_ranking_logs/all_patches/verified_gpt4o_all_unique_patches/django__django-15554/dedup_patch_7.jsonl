{"model_name_or_path": "agentless", "instance_id": "django__django-15554", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex b69bf1f..899bf7d 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -799,7 +799,11 @@ class Query(BaseExpression):\n         \"\"\"\n         alias_list = self.table_map.get(table_name)\n         if not create and alias_list:\n-            alias = alias_list[0]\n+            if filtered_relation is not None:\n+                alias = \"%s%d\" % (table_name, len(self.alias_map) + 1)\n+                self.table_map[table_name].append(alias)\n+            else:\n+                alias = alias_list[0]\n             self.alias_refcount[alias] += 1\n             return alias, False\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex b4ac641..d31ea53 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -427,7 +427,11 @@ class Query(BaseExpression):\n     def table_alias(self, table_name, create=False, filtered_relation=None):\n         alias_list = self.table_map.get(table_name)\n         if not create and alias_list:\n-            alias = alias_list[0]\n+            if filtered_relation is not None:\n+                alias = '%s%d' % (table_name, len(self.alias_map) + 1)\n+                self.table_map[table_name].append(alias)\n+            else:\n+                alias = alias_list[0]\n             self.alias_refcount[alias] += 1\n             return (alias, False)\n         if alias_list:\n", "normalized_occurrence": 1}
