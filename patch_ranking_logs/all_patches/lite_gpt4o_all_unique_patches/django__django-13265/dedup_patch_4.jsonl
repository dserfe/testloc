{"model_name_or_path": "agentless", "instance_id": "django__django-13265", "model_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 8c23741..32f12b7 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -1190,6 +1190,14 @@ class MigrationAutodetector:\n                 )\n \n     def generate_altered_order_with_respect_to(self):\n+        # Ensure AlterOrderWithRespectTo is generated before AddIndex\n+        self.generate_added_order_with_respect_to_before_index()\n+        \n+    def generate_added_order_with_respect_to_before_index(self):\n+        # Ensure AlterOrderWithRespectTo is generated before AddIndex\n+        self.generate_added_order_with_respect_to_before_index()\n+        \n+    def generate_added_order_with_respect_to_before_index(self):\n         for app_label, model_name in sorted(self.kept_model_keys):\n             old_model_name = self.renamed_models.get((app_label, model_name), model_name)\n             old_model_state = self.from_state.models[app_label, old_model_name]\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 48a2b0b..ffedac1 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -574,6 +574,10 @@ class MigrationAutodetector:\n             if old_options != new_options:\n                 self.add_operation(app_label, operations.AlterModelOptions(name=model_name, options=new_options))\n     def generate_altered_order_with_respect_to(self):\n+        self.generate_added_order_with_respect_to_before_index()\n+    def generate_added_order_with_respect_to_before_index(self):\n+        self.generate_added_order_with_respect_to_before_index()\n+    def generate_added_order_with_respect_to_before_index(self):\n         for app_label, model_name in sorted(self.kept_model_keys):\n             old_model_name = self.renamed_models.get((app_label, model_name), model_name)\n             old_model_state = self.from_state.models[app_label, old_model_name]\n", "normalized_occurrence": 1}
