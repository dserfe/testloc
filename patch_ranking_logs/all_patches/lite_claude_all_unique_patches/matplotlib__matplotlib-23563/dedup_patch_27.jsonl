{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-23563", "model_patch": "diff --git a/lib/mpl_toolkits/mplot3d/art3d.py b/lib/mpl_toolkits/mplot3d/art3d.py\nindex fa869c7..f2ce9e2 100644\n--- a/lib/mpl_toolkits/mplot3d/art3d.py\n+++ b/lib/mpl_toolkits/mplot3d/art3d.py\n@@ -222,6 +222,10 @@ def line_2d_to_3d(line, zs=0, zdir='z'):\n     \"\"\"Convert a 2D line to 3D.\"\"\"\n \n     line.__class__ = Line3D\n+    # Initialize _verts3d with current x, y data and the provided z values\n+    xs, ys = line.get_data()\n+    zs = np.broadcast_to(zs, len(xs))\n+    line._verts3d = (xs, ys, zs)\n     line.set_3d_properties(zs, zdir)\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/mpl_toolkits/mplot3d/art3d.py b/lib/mpl_toolkits/mplot3d/art3d.py\nindex e39ff0d..13899a4 100644\n--- a/lib/mpl_toolkits/mplot3d/art3d.py\n+++ b/lib/mpl_toolkits/mplot3d/art3d.py\n@@ -88,6 +88,9 @@ class Line3D(lines.Line2D):\n         self.stale = False\n def line_2d_to_3d(line, zs=0, zdir='z'):\n     line.__class__ = Line3D\n+    xs, ys = line.get_data()\n+    zs = np.broadcast_to(zs, len(xs))\n+    line._verts3d = (xs, ys, zs)\n     line.set_3d_properties(zs, zdir)\n def _path_to_3d_segment(path, zs=0, zdir='z'):\n     zs = np.broadcast_to(zs, len(path))\n", "normalized_occurrence": 1}
