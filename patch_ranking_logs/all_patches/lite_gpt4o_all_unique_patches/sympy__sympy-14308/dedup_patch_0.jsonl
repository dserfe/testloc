{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-14308", "model_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 81d644a..06b7ce3 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -904,22 +904,12 @@ class PrettyPrinter(Printer):\n             inneritems = list(vect.components.items())\n             inneritems.sort(key = lambda x: x[0].__str__())\n             for k, v in inneritems:\n-                #if the coef of the basis vector is 1\n-                #we skip the 1\n-                if v == 1:\n-                    o1.append(u\"\" +\n-                              k._pretty_form)\n-                #Same for -1\n-                elif v == -1:\n-                    o1.append(u\"(-1) \" +\n-                              k._pretty_form)\n-                #For a general expr\n+                arg_str = self._print(v)\n+                if v not in (-1, 1):\n+                    arg_str = arg_str.parens()[0]\n+                if v == -1:\n+                    o1.append(u\"-\" + k._pretty_form)\n                 else:\n-                    #We always wrap the measure numbers in\n-                    #parentheses\n-                    arg_str = self._print(\n-                        v).parens()[0]\n-\n                     o1.append(arg_str + ' ' + k._pretty_form)\n                 vectstrs.append(k._pretty_form)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 35c3eb3..ed79d71 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -655,12 +655,12 @@ class PrettyPrinter(Printer):\n             inneritems = list(vect.components.items())\n             inneritems.sort(key=lambda x: x[0].__str__())\n             for k, v in inneritems:\n-                if v == 1:\n-                    o1.append(u'' + k._pretty_form)\n-                elif v == -1:\n-                    o1.append(u'(-1) ' + k._pretty_form)\n+                arg_str = self._print(v)\n+                if v not in (-1, 1):\n+                    arg_str = arg_str.parens()[0]\n+                if v == -1:\n+                    o1.append(u'-' + k._pretty_form)\n                 else:\n-                    arg_str = self._print(v).parens()[0]\n                     o1.append(arg_str + ' ' + k._pretty_form)\n                 vectstrs.append(k._pretty_form)\n         if o1[0].startswith(u' + '):\n", "normalized_occurrence": 1}
