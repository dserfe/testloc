{"model_name_or_path": "agentless", "instance_id": "django__django-14017", "model_patch": "diff --git a/django/db/models/query_utils.py b/django/db/models/query_utils.py\nindex e210750..04c64d2 100644\n--- a/django/db/models/query_utils.py\n+++ b/django/db/models/query_utils.py\n@@ -64,6 +64,16 @@ class Q(tree.Node):\n     def __and__(self, other):\n         return self._combine(other, self.AND)\n \n+    def __rand__(self, other):\n+        if not isinstance(other, Q):\n+            other = Q(other)\n+        return self._combine(other, self.AND)\n+\n+    def __ror__(self, other):\n+        if not isinstance(other, Q):\n+            other = Q(other)\n+        return self._combine(other, self.OR)\n+        \n     def __invert__(self):\n         obj = type(self)()\n         obj.add(self, self.AND)\n", "occurrence": 1, "normalized_patch": "--- a/django/db/models/query_utils.py\n+++ b/django/db/models/query_utils.py\n+    def __rand__(self, other):\n+        if not isinstance(other, Q):\n+            other = Q(other)\n+        return self._combine(other, self.AND)\n+    def __ror__(self, other):\n+        if not isinstance(other, Q):\n+            other = Q(other)\n+        return self._combine(other, self.OR)", "normalized_occurrence": 1}
