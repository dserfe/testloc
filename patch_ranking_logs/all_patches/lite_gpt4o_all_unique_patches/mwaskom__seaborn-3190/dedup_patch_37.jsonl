{"model_name_or_path": "agentless", "instance_id": "mwaskom__seaborn-3190", "model_patch": "diff --git a/seaborn/_core/scales.py b/seaborn/_core/scales.py\nindex 9be3959..f8f7870 100644\n--- a/seaborn/_core/scales.py\n+++ b/seaborn/_core/scales.py\n@@ -341,6 +341,10 @@ class ContinuousBase(Scale):\n         new._matplotlib_scale = mpl_scale\n \n         normalize: Optional[Callable[[ArrayLike], ArrayLike]]\n+        # Convert boolean data to numeric\n+        if data.dtype == bool:\n+            data = data.astype(int)\n+            \n         if prop.normed:\n             if new.norm is None:\n                 vmin, vmax = data.min(), data.max()\n@@ -352,7 +356,6 @@ class ContinuousBase(Scale):\n \n             def normalize(x):\n                 return (x - a) / b\n-\n         else:\n             normalize = vmin = vmax = None\n \n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/_core/scales.py b/seaborn/_core/scales.py\nindex b2a020b..67dda81 100644\n--- a/seaborn/_core/scales.py\n+++ b/seaborn/_core/scales.py\n@@ -155,6 +155,8 @@ class ContinuousBase(Scale):\n         mpl_scale.set_default_locators_and_formatters(axis)\n         new._matplotlib_scale = mpl_scale\n         normalize: Optional[Callable[[ArrayLike], ArrayLike]]\n+        if data.dtype == bool:\n+            data = data.astype(int)\n         if prop.normed:\n             if new.norm is None:\n                 vmin, vmax = (data.min(), data.max())\n", "normalized_occurrence": 1}
