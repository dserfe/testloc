{"model_name_or_path": "agentless", "instance_id": "django__django-10097", "model_patch": "diff --git a/django/core/validators.py b/django/core/validators.py\nindex 1519f57..9d70da6 100644\n--- a/django/core/validators.py\n+++ b/django/core/validators.py\n@@ -94,7 +94,7 @@ class URLValidator(RegexValidator):\n \n     regex = _lazy_re_compile(\n         r'^(?:[a-z0-9\\.\\-\\+]*)://'  # scheme is validated separately\n-        r'(?:\\S+(?::\\S*)?@)?'  # user:pass authentication\n+        r'(?:[a-zA-Z0-9\\-\\._~%!$&\\'()*+,;=]+(?::[a-zA-Z0-9\\-\\._~%!$&\\'()*+,;=]*)?@)?'  # user:pass authentication\n         r'(?:' + ipv4_re + '|' + ipv6_re + '|' + host_re + ')'\n         r'(?::\\d{2,5})?'  # port\n         r'(?:[/?#][^\\s]*)?'  # resource path\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/validators.py b/django/core/validators.py\nindex 6e62140..a37223c 100644\n--- a/django/core/validators.py\n+++ b/django/core/validators.py\n@@ -53,7 +53,7 @@ class URLValidator(RegexValidator):\n     domain_re = '(?:\\\\.(?!-)[a-z' + ul + '0-9-]{1,63}(?<!-))*'\n     tld_re = '\\\\.(?!-)(?:[a-z' + ul + '-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\\\.?'\n     host_re = '(' + hostname_re + domain_re + tld_re + '|localhost)'\n-    regex = _lazy_re_compile('^(?:[a-z0-9\\\\.\\\\-\\\\+]*)://(?:\\\\S+(?::\\\\S*)?@)?(?:' + ipv4_re + '|' + ipv6_re + '|' + host_re + ')(?::\\\\d{2,5})?(?:[/?#][^\\\\s]*)?\\\\Z', re.IGNORECASE)\n+    regex = _lazy_re_compile(\"^(?:[a-z0-9\\\\.\\\\-\\\\+]*)://(?:[a-zA-Z0-9\\\\-\\\\._~%!$&\\\\'()*+,;=]+(?::[a-zA-Z0-9\\\\-\\\\._~%!$&\\\\'()*+,;=]*)?@)?(?:\" + ipv4_re + '|' + ipv6_re + '|' + host_re + ')(?::\\\\d{2,5})?(?:[/?#][^\\\\s]*)?\\\\Z', re.IGNORECASE)\n     message = _('Enter a valid URL.')\n     schemes = ['http', 'https', 'ftp', 'ftps']\n     def __init__(self, schemes=None, **kwargs):\n", "normalized_occurrence": 1}
