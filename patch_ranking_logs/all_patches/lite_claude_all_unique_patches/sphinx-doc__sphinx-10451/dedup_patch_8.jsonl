{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-10451", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex c6bab1b..6c25413 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -115,7 +115,14 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str],\n         if name == 'return':\n             continue\n \n-        arg = arguments.get(name, {})\n+        # Handle *args and **kwargs special cases\n+        search_name = name\n+        if name.startswith('**'):\n+            search_name = name[2:]  # Remove ** prefix\n+        elif name.startswith('*'):\n+            search_name = name[1:]  # Remove * prefix\n+\n+        arg = arguments.get(search_name, {})\n         if not arg.get('type'):\n             field = nodes.field()\n             field += nodes.field_name('', 'type ' + name)\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 5da2ea8..bd3275d 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -85,7 +85,12 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str], suppr\n     for name, annotation in annotations.items():\n         if name == 'return':\n             continue\n-        arg = arguments.get(name, {})\n+        search_name = name\n+        if name.startswith('**'):\n+            search_name = name[2:]\n+        elif name.startswith('*'):\n+            search_name = name[1:]\n+        arg = arguments.get(search_name, {})\n         if not arg.get('type'):\n             field = nodes.field()\n             field += nodes.field_name('', 'type ' + name)\n", "normalized_occurrence": 1}
