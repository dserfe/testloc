{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12858", "model_patch": "diff --git a/django/core/checks/model_checks.py b/django/core/checks/model_checks.py\nindex 8f934b7..c097dd2 100644\n--- a/django/core/checks/model_checks.py\n+++ b/django/core/checks/model_checks.py\n@@ -6,9 +6,18 @@ from itertools import chain\n from django.apps import apps\n from django.conf import settings\n from django.core.checks import Error, Tags, Warning, register\n+from django.db.models.lookups import IsNull\n \n \n @register(Tags.models)\n+def _is_valid_ordering_reference(field_name):\n+    \"\"\"\n+    Check if a field reference in ordering is valid, including handling of __isnull.\n+    \"\"\"\n+    if field_name.endswith('__isnull'):\n+        return True\n+    return not field_name.endswith('__exact') and not field_name.endswith('__iexact')\n+\n def check_all_models(app_configs=None, **kwargs):\n     db_table_models = defaultdict(list)\n     indexes = defaultdict(list)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/checks/model_checks.py b/django/core/checks/model_checks.py\nindex 50dfeb8..254ed70 100644\n--- a/django/core/checks/model_checks.py\n+++ b/django/core/checks/model_checks.py\n@@ -5,7 +5,12 @@ from itertools import chain\n from django.apps import apps\n from django.conf import settings\n from django.core.checks import Error, Tags, Warning, register\n+from django.db.models.lookups import IsNull\n @register(Tags.models)\n+def _is_valid_ordering_reference(field_name):\n+    if field_name.endswith('__isnull'):\n+        return True\n+    return not field_name.endswith('__exact') and (not field_name.endswith('__iexact'))\n def check_all_models(app_configs=None, **kwargs):\n     db_table_models = defaultdict(list)\n     indexes = defaultdict(list)\n", "normalized_occurrence": 1}
