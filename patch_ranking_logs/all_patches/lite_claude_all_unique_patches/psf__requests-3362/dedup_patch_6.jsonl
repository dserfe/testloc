{"model_name_or_path": "agentless_claude", "instance_id": "psf__requests-3362", "model_patch": "diff --git a/requests/utils.py b/requests/utils.py\nindex 177dcd1..03bfaa9 100644\n--- a/requests/utils.py\n+++ b/requests/utils.py\n@@ -357,14 +357,18 @@ def get_encoding_from_headers(headers):\n \n \n def stream_decode_response_unicode(iterator, r):\n-    \"\"\"Stream decodes a iterator.\"\"\"\n+    \"\"\"Stream decodes an iterator.\"\"\"\n \n-    if r.encoding is None:\n-        for item in iterator:\n-            yield item\n-        return\n+    encoding = r.encoding\n \n-    decoder = codecs.getincrementaldecoder(r.encoding)(errors='replace')\n+    if encoding is None:\n+        # Try to detect the encoding from the content if not explicitly set\n+        if hasattr(r, 'apparent_encoding'):\n+            encoding = r.apparent_encoding\n+        if encoding is None:\n+            encoding = 'utf-8'  # Default to UTF-8 if we can't detect encoding\n+\n+    decoder = codecs.getincrementaldecoder(encoding)(errors='replace')\n     for chunk in iterator:\n         rv = decoder.decode(chunk)\n         if rv:\n", "occurrence": 1, "normalized_patch": "diff --git a/requests/utils.py b/requests/utils.py\nindex 9f5088a..642c1d7 100644\n--- a/requests/utils.py\n+++ b/requests/utils.py\n@@ -141,11 +141,13 @@ def get_encoding_from_headers(headers):\n     if 'text' in content_type:\n         return 'ISO-8859-1'\n def stream_decode_response_unicode(iterator, r):\n-    if r.encoding is None:\n-        for item in iterator:\n-            yield item\n-        return\n-    decoder = codecs.getincrementaldecoder(r.encoding)(errors='replace')\n+    encoding = r.encoding\n+    if encoding is None:\n+        if hasattr(r, 'apparent_encoding'):\n+            encoding = r.apparent_encoding\n+        if encoding is None:\n+            encoding = 'utf-8'\n+    decoder = codecs.getincrementaldecoder(encoding)(errors='replace')\n     for chunk in iterator:\n         rv = decoder.decode(chunk)\n         if rv:\n", "normalized_occurrence": 1}
