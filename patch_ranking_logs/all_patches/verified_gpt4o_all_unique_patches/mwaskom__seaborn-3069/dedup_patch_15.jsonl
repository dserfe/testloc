{"model_name_or_path": "agentless", "instance_id": "mwaskom__seaborn-3069", "model_patch": "diff --git a/seaborn/categorical.py b/seaborn/categorical.py\nindex ec4f4c2..1ba2aed 100644\n--- a/seaborn/categorical.py\n+++ b/seaborn/categorical.py\n@@ -223,6 +223,10 @@ class _CategoricalPlotterNew(_RelationalPlotter):\n             # Note limits that correspond to previously-inverted y axis\n             ax.set_ylim(n - .5, -.5, auto=None)\n \n+        if isinstance(self.variables[axis], so.Nominal):\n+            if axis == \"y\":\n+                ax.invert_yaxis()\n+\n     @property\n     def _native_width(self):\n         \"\"\"Return unit of width separating categories on native numeric scale.\"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/categorical.py b/seaborn/categorical.py\nindex 7d6d43d..0aec226 100644\n--- a/seaborn/categorical.py\n+++ b/seaborn/categorical.py\n@@ -105,6 +105,9 @@ class _CategoricalPlotterNew(_RelationalPlotter):\n         else:\n             ax.yaxis.grid(False)\n             ax.set_ylim(n - 0.5, -0.5, auto=None)\n+        if isinstance(self.variables[axis], so.Nominal):\n+            if axis == 'y':\n+                ax.invert_yaxis()\n     @property\n     def _native_width(self):\n         unique_values = np.unique(self.comp_data[self.cat_axis])\n", "normalized_occurrence": 1}
