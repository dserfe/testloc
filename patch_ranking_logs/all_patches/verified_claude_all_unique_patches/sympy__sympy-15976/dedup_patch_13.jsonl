{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-15976", "model_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 85af872..76fefe4 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -777,16 +777,17 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n         supers = [translate(sup) for sup in supers]\n         subs = [translate(sub) for sub in subs]\n \n+        if len(supers) == 0 and len(subs) == 0:\n+            x.appendChild(self.dom.createTextNode(name))\n+            return x\n+            \n         mname = self.dom.createElement('mi')\n         mname.appendChild(self.dom.createTextNode(name))\n         if len(supers) == 0:\n-            if len(subs) == 0:\n-                x.appendChild(self.dom.createTextNode(name))\n-            else:\n-                msub = self.dom.createElement('msub')\n-                msub.appendChild(mname)\n-                msub.appendChild(join(subs))\n-                x.appendChild(msub)\n+            msub = self.dom.createElement('msub')\n+            msub.appendChild(mname)\n+            msub.appendChild(join(subs))\n+            x.appendChild(msub)\n         else:\n             if len(subs) == 0:\n                 msup = self.dom.createElement('msup')\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 28d3e1a..1465080 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -544,16 +544,16 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n         name = translate(name)\n         supers = [translate(sup) for sup in supers]\n         subs = [translate(sub) for sub in subs]\n+        if len(supers) == 0 and len(subs) == 0:\n+            x.appendChild(self.dom.createTextNode(name))\n+            return x\n         mname = self.dom.createElement('mi')\n         mname.appendChild(self.dom.createTextNode(name))\n         if len(supers) == 0:\n-            if len(subs) == 0:\n-                x.appendChild(self.dom.createTextNode(name))\n-            else:\n-                msub = self.dom.createElement('msub')\n-                msub.appendChild(mname)\n-                msub.appendChild(join(subs))\n-                x.appendChild(msub)\n+            msub = self.dom.createElement('msub')\n+            msub.appendChild(mname)\n+            msub.appendChild(join(subs))\n+            x.appendChild(msub)\n         elif len(subs) == 0:\n             msup = self.dom.createElement('msup')\n             msup.appendChild(mname)\n", "normalized_occurrence": 1}
