{"model_name_or_path": "agentless", "instance_id": "django__django-15814", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 5314293..389ad3d 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -2596,7 +2596,7 @@ class RelatedPopulator:\n             )\n \n         self.model_cls = klass_info[\"model\"]\n-        self.pk_idx = self.init_list.index(self.model_cls._meta.pk.attname)\n+        self.pk_idx = self.init_list.index(self.model_cls._meta.concrete_model._meta.pk.attname)\n         self.related_populators = get_related_populators(klass_info, select, self.db)\n         self.local_setter = klass_info[\"local_setter\"]\n         self.remote_setter = klass_info[\"remote_setter\"]\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex cb06696..1d154e9 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -1315,7 +1315,7 @@ class RelatedPopulator:\n             self.init_list = [attname for attname in model_init_attnames if attname in attname_indexes]\n             self.reorder_for_init = operator.itemgetter(*[attname_indexes[attname] for attname in self.init_list])\n         self.model_cls = klass_info['model']\n-        self.pk_idx = self.init_list.index(self.model_cls._meta.pk.attname)\n+        self.pk_idx = self.init_list.index(self.model_cls._meta.concrete_model._meta.pk.attname)\n         self.related_populators = get_related_populators(klass_info, select, self.db)\n         self.local_setter = klass_info['local_setter']\n         self.remote_setter = klass_info['remote_setter']\n", "normalized_occurrence": 1}
