{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-22714", "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex b7f7a47..ce0ce38 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -912,6 +912,7 @@ class Point2D(Point):\n     def __new__(cls, *args, _nocheck=False, **kwargs):\n         if not _nocheck:\n             kwargs['dim'] = 2\n+            kwargs['evaluate'] = kwargs.get('evaluate', global_parameters.evaluate)\n             args = Point(*args, **kwargs)\n         return GeometryEntity.__new__(cls, *args)\n \n", "occurrence": 2, "normalized_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex 4d7ea73..a1fc9f5 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -246,6 +246,7 @@ class Point2D(Point):\n     def __new__(cls, *args, _nocheck=False, **kwargs):\n         if not _nocheck:\n             kwargs['dim'] = 2\n+            kwargs['evaluate'] = kwargs.get('evaluate', global_parameters.evaluate)\n             args = Point(*args, **kwargs)\n         return GeometryEntity.__new__(cls, *args)\n     def __contains__(self, item):\n", "normalized_occurrence": 2}
