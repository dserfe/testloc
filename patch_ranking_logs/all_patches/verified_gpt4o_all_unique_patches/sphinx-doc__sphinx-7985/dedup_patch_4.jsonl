{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-7985", "model_patch": "diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py\nindex 4e6b0df..0ebaf56 100644\n--- a/sphinx/builders/linkcheck.py\n+++ b/sphinx/builders/linkcheck.py\n@@ -213,7 +213,10 @@ class CheckExternalLinksBuilder(Builder):\n             if len(uri) == 0 or uri.startswith(('#', 'mailto:', 'ftp:')):\n                 return 'unchecked', '', 0\n             elif not uri.startswith(('http:', 'https:')):\n-                return 'local', '', 0\n+                if path.isfile(path.join(self.app.srcdir, uri)):\n+                    return 'working', '', 0\n+                else:\n+                    return 'broken', 'Local file not found', 0\n             elif uri in self.good:\n                 return 'working', 'old', 0\n             elif uri in self.broken:\n@@ -271,7 +274,7 @@ class CheckExternalLinksBuilder(Builder):\n             logger.info(darkgray('-local-   ') + uri)\n             self.write_entry('local', docname, filename, lineno, uri)\n             self.write_linkstat(linkstat)\n-        elif status == 'working':\n+        elif status == 'working' or (status == 'local' and info == ''):\n             logger.info(darkgreen('ok        ') + uri + info)\n             self.write_linkstat(linkstat)\n         elif status == 'broken':\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py\nindex f6c8f65..be8ae19 100644\n--- a/sphinx/builders/linkcheck.py\n+++ b/sphinx/builders/linkcheck.py\n@@ -133,7 +133,10 @@ class CheckExternalLinksBuilder(Builder):\n             if len(uri) == 0 or uri.startswith(('#', 'mailto:', 'ftp:')):\n                 return ('unchecked', '', 0)\n             elif not uri.startswith(('http:', 'https:')):\n-                return ('local', '', 0)\n+                if path.isfile(path.join(self.app.srcdir, uri)):\n+                    return ('working', '', 0)\n+                else:\n+                    return ('broken', 'Local file not found', 0)\n             elif uri in self.good:\n                 return ('working', 'old', 0)\n             elif uri in self.broken:\n@@ -182,7 +185,7 @@ class CheckExternalLinksBuilder(Builder):\n             logger.info(darkgray('-local-   ') + uri)\n             self.write_entry('local', docname, filename, lineno, uri)\n             self.write_linkstat(linkstat)\n-        elif status == 'working':\n+        elif status == 'working' or (status == 'local' and info == ''):\n             logger.info(darkgreen('ok        ') + uri + info)\n             self.write_linkstat(linkstat)\n         elif status == 'broken':\n", "normalized_occurrence": 1}
