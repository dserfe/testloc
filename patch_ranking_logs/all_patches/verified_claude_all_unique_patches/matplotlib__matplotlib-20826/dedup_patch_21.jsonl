{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-20826", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 07605b5..a093e20 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1190,6 +1190,13 @@ class _AxesBase(martist.Artist):\n             patch_visible = True\n \n         xaxis_visible = self.xaxis.get_visible()\n+        # Store tick and label visibility states\n+        xtick_visible = self.xaxis.majorTicks[0].tick1line.get_visible()\n+        ytick_visible = self.yaxis.majorTicks[0].tick1line.get_visible()\n+        xlabel_visible = self.xaxis.label.get_visible()\n+        ylabel_visible = self.yaxis.label.get_visible()\n+        xticklabel_visible = self.xaxis.majorTicks[0].label1.get_visible()\n+        yticklabel_visible = self.yaxis.majorTicks[0].label1.get_visible()\n         yaxis_visible = self.yaxis.get_visible()\n \n         self.xaxis.clear()\n@@ -1302,12 +1309,30 @@ class _AxesBase(martist.Artist):\n \n         self._shared_axes[\"x\"].clean()\n         self._shared_axes[\"y\"].clean()\n+        \n+        # Turn off top and right spines/ticks by default\n+        self.spines['top'].set_visible(False)\n+        self.spines['right'].set_visible(False)\n+        self.xaxis.set_ticks_position('bottom')\n+        self.yaxis.set_ticks_position('left')\n+        \n         if self._sharex is not None:\n             self.xaxis.set_visible(xaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            # Restore tick and label visibility for shared x-axis\n+            for tick in self.xaxis.majorTicks:\n+                tick.tick1line.set_visible(xtick_visible)\n+                tick.label1.set_visible(xticklabel_visible)\n+            self.xaxis.label.set_visible(xlabel_visible)\n+            \n         if self._sharey is not None:\n             self.yaxis.set_visible(yaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            # Restore tick and label visibility for shared y-axis\n+            for tick in self.yaxis.majorTicks:\n+                tick.tick1line.set_visible(ytick_visible)\n+                tick.label1.set_visible(yticklabel_visible)\n+            self.yaxis.label.set_visible(ylabel_visible)\n \n         self.stale = True\n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 33a6de3..55b2fba 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -502,6 +502,12 @@ class _AxesBase(martist.Artist):\n         else:\n             patch_visible = True\n         xaxis_visible = self.xaxis.get_visible()\n+        xtick_visible = self.xaxis.majorTicks[0].tick1line.get_visible()\n+        ytick_visible = self.yaxis.majorTicks[0].tick1line.get_visible()\n+        xlabel_visible = self.xaxis.label.get_visible()\n+        ylabel_visible = self.yaxis.label.get_visible()\n+        xticklabel_visible = self.xaxis.majorTicks[0].label1.get_visible()\n+        yticklabel_visible = self.yaxis.majorTicks[0].label1.get_visible()\n         yaxis_visible = self.yaxis.get_visible()\n         self.xaxis.clear()\n         self.yaxis.clear()\n@@ -575,12 +581,24 @@ class _AxesBase(martist.Artist):\n         self.yaxis.set_clip_path(self.patch)\n         self._shared_axes['x'].clean()\n         self._shared_axes['y'].clean()\n+        self.spines['top'].set_visible(False)\n+        self.spines['right'].set_visible(False)\n+        self.xaxis.set_ticks_position('bottom')\n+        self.yaxis.set_ticks_position('left')\n         if self._sharex is not None:\n             self.xaxis.set_visible(xaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            for tick in self.xaxis.majorTicks:\n+                tick.tick1line.set_visible(xtick_visible)\n+                tick.label1.set_visible(xticklabel_visible)\n+            self.xaxis.label.set_visible(xlabel_visible)\n         if self._sharey is not None:\n             self.yaxis.set_visible(yaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            for tick in self.yaxis.majorTicks:\n+                tick.tick1line.set_visible(ytick_visible)\n+                tick.label1.set_visible(yticklabel_visible)\n+            self.yaxis.label.set_visible(ylabel_visible)\n         self.stale = True\n     class ArtistList(MutableSequence):\n         def __init__(self, axes, prop_name, add_name, valid_types=None, invalid_types=None):\n", "normalized_occurrence": 1}
