{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-14308", "model_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 81d644a..d9bb999 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -904,25 +904,26 @@ class PrettyPrinter(Printer):\n             inneritems = list(vect.components.items())\n             inneritems.sort(key = lambda x: x[0].__str__())\n             for k, v in inneritems:\n-                #if the coef of the basis vector is 1\n-                #we skip the 1\n                 if v == 1:\n-                    o1.append(u\"\" +\n-                              k._pretty_form)\n-                #Same for -1\n+                    o1.append(k._pretty_form)\n                 elif v == -1:\n-                    o1.append(u\"(-1) \" +\n-                              k._pretty_form)\n-                #For a general expr\n+                    o1.append(u\"(-1) \" + k._pretty_form)\n                 else:\n-                    #We always wrap the measure numbers in\n-                    #parentheses\n-                    arg_str = self._print(\n-                        v).parens()[0]\n-\n+                    arg_str = self._print(v).parens()[0]\n                     o1.append(arg_str + ' ' + k._pretty_form)\n                 vectstrs.append(k._pretty_form)\n \n+        lengths = [len(part.split('\\n')[0]) for part in o1]\n+        formatted_lines = ['' for _ in range(len(o1[0].split('\\n')))]\n+        for i, part in enumerate(o1):\n+            lines = part.split('\\n')\n+            for j, line in enumerate(lines):\n+                while len(formatted_lines) <= j:\n+                    formatted_lines.append(' ' * sum(lengths[:i]) + '   ' * i)\n+                formatted_lines[j] += line + ' ' * (lengths[i] - len(line) + 3)\n+\n+        return prettyForm(u'\\n'.join(line.rstrip() for line in formatted_lines))\n+\n         #outstr = u(\"\").join(o1)\n         if o1[0].startswith(u\" + \"):\n             o1[0] = o1[0][3:]\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 35c3eb3..00099d7 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -656,13 +656,22 @@ class PrettyPrinter(Printer):\n             inneritems.sort(key=lambda x: x[0].__str__())\n             for k, v in inneritems:\n                 if v == 1:\n-                    o1.append(u'' + k._pretty_form)\n+                    o1.append(k._pretty_form)\n                 elif v == -1:\n                     o1.append(u'(-1) ' + k._pretty_form)\n                 else:\n                     arg_str = self._print(v).parens()[0]\n                     o1.append(arg_str + ' ' + k._pretty_form)\n                 vectstrs.append(k._pretty_form)\n+        lengths = [len(part.split('\\n')[0]) for part in o1]\n+        formatted_lines = ['' for _ in range(len(o1[0].split('\\n')))]\n+        for i, part in enumerate(o1):\n+            lines = part.split('\\n')\n+            for j, line in enumerate(lines):\n+                while len(formatted_lines) <= j:\n+                    formatted_lines.append(' ' * sum(lengths[:i]) + '   ' * i)\n+                formatted_lines[j] += line + ' ' * (lengths[i] - len(line) + 3)\n+        return prettyForm(u'\\n'.join((line.rstrip() for line in formatted_lines)))\n         if o1[0].startswith(u' + '):\n             o1[0] = o1[0][3:]\n         elif o1[0].startswith(' '):\n", "normalized_occurrence": 1}
