{"model_name_or_path": "agentless", "instance_id": "django__django-13121", "model_patch": "diff --git a/django/db/backends/sqlite3/operations.py b/django/db/backends/sqlite3/operations.py\nindex 302ee8d..803d6dd 100644\n--- a/django/db/backends/sqlite3/operations.py\n+++ b/django/db/backends/sqlite3/operations.py\n@@ -337,12 +337,11 @@ class DatabaseOperations(BaseDatabaseOperations):\n         return super().combine_expression(connector, sub_expressions)\n \n     def combine_duration_expression(self, connector, sub_expressions):\n-        if connector not in ['+', '-']:\n+        if connector in ['+', '-']:\n+            sign = 1 if connector == '+' else -1\n+            return '(%s) %s (%s) * %d' % (sub_expressions[0], connector, sub_expressions[1], sign)\n+        else:\n             raise DatabaseError('Invalid connector for timedelta: %s.' % connector)\n-        fn_params = [\"'%s'\" % connector] + sub_expressions\n-        if len(fn_params) > 3:\n-            raise ValueError('Too many params for timedelta operations.')\n-        return \"django_format_dtdelta(%s)\" % ', '.join(fn_params)\n \n     def integer_field_range(self, internal_type):\n         # SQLite doesn't enforce any integer constraints\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/sqlite3/operations.py b/django/db/backends/sqlite3/operations.py\nindex 638444d..442aac4 100644\n--- a/django/db/backends/sqlite3/operations.py\n+++ b/django/db/backends/sqlite3/operations.py\n@@ -194,12 +194,11 @@ class DatabaseOperations(BaseDatabaseOperations):\n             return 'BITXOR(%s)' % ','.join(sub_expressions)\n         return super().combine_expression(connector, sub_expressions)\n     def combine_duration_expression(self, connector, sub_expressions):\n-        if connector not in ['+', '-']:\n+        if connector in ['+', '-']:\n+            sign = 1 if connector == '+' else -1\n+            return '(%s) %s (%s) * %d' % (sub_expressions[0], connector, sub_expressions[1], sign)\n+        else:\n             raise DatabaseError('Invalid connector for timedelta: %s.' % connector)\n-        fn_params = [\"'%s'\" % connector] + sub_expressions\n-        if len(fn_params) > 3:\n-            raise ValueError('Too many params for timedelta operations.')\n-        return 'django_format_dtdelta(%s)' % ', '.join(fn_params)\n     def integer_field_range(self, internal_type):\n         return (None, None)\n     def subtract_temporals(self, internal_type, lhs, rhs):\n", "normalized_occurrence": 1}
