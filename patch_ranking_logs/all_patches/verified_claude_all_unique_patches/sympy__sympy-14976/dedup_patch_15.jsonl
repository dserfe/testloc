{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-14976", "model_patch": "diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py\nindex 48d6783..592b6c8 100644\n--- a/sympy/utilities/lambdify.py\n+++ b/sympy/utilities/lambdify.py\n@@ -413,8 +413,11 @@ def lambdify(args, expr, modules=None, printer=None, use_imps=True,\n             if isinstance(m, dict):\n                 for k in m:\n                     user_functions[k] = k\n-        printer = Printer({'fully_qualified_modules': False, 'inline': True,\n-                           'user_functions': user_functions})\n+        settings = {'fully_qualified_modules': False, 'inline': True,\n+                   'user_functions': user_functions}\n+        if _module_present('mpmath', namespaces):\n+            settings['rational_conversion'] = 'mpmath'\n+        printer = Printer(settings)\n \n     # Get the names of the args, for creating a docstring\n     if not iterable(args):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py\nindex 9997e01..1e4b43a 100644\n--- a/sympy/utilities/lambdify.py\n+++ b/sympy/utilities/lambdify.py\n@@ -103,7 +103,10 @@ def lambdify(args, expr, modules=None, printer=None, use_imps=True, dummify=Fals\n             if isinstance(m, dict):\n                 for k in m:\n                     user_functions[k] = k\n-        printer = Printer({'fully_qualified_modules': False, 'inline': True, 'user_functions': user_functions})\n+        settings = {'fully_qualified_modules': False, 'inline': True, 'user_functions': user_functions}\n+        if _module_present('mpmath', namespaces):\n+            settings['rational_conversion'] = 'mpmath'\n+        printer = Printer(settings)\n     if not iterable(args):\n         args = (args,)\n     names = []\n", "normalized_occurrence": 1}
