{"model_name_or_path": "agentless", "instance_id": "django__django-12908", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex a26bee7..930cf0d 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -474,7 +474,14 @@ class SQLCompiler:\n         if all and combinator == 'union':\n             combinator_sql += ' ALL'\n         braces = '({})' if features.supports_slicing_ordering_in_compound else '{}'\n-        sql_parts, args_parts = zip(*((braces.format(sql), args) for sql, args in parts))\n+        sql_parts, args_parts = [], []\n+        for sql, args in parts:\n+            if self.query.distinct and self.query.distinct_fields:\n+                sql = 'SELECT DISTINCT ON ({}) * FROM ({})'.format(\n+                    ', '.join(self.query.distinct_fields), sql\n+                )\n+            sql_parts.append(braces.format(sql))\n+            args_parts.append(args)\n         result = [' {} '.format(combinator_sql).join(sql_parts)]\n         params = []\n         for part in args_parts:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex e6a07a3..22b0311 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -266,7 +266,12 @@ class SQLCompiler:\n         if all and combinator == 'union':\n             combinator_sql += ' ALL'\n         braces = '({})' if features.supports_slicing_ordering_in_compound else '{}'\n-        sql_parts, args_parts = zip(*((braces.format(sql), args) for sql, args in parts))\n+        sql_parts, args_parts = ([], [])\n+        for sql, args in parts:\n+            if self.query.distinct and self.query.distinct_fields:\n+                sql = 'SELECT DISTINCT ON ({}) * FROM ({})'.format(', '.join(self.query.distinct_fields), sql)\n+            sql_parts.append(braces.format(sql))\n+            args_parts.append(args)\n         result = [' {} '.format(combinator_sql).join(sql_parts)]\n         params = []\n         for part in args_parts:\n", "normalized_occurrence": 1}
