{"model_name_or_path": "agentless_claude", "instance_id": "astropy__astropy-14182", "model_patch": "diff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py\nindex 00bbbaf..0d33285 100644\n--- a/astropy/io/ascii/rst.py\n+++ b/astropy/io/ascii/rst.py\n@@ -57,10 +57,23 @@ class RST(FixedWidth):\n     data_class = SimpleRSTData\n     header_class = SimpleRSTHeader\n \n-    def __init__(self):\n+    def __init__(self, header_rows=None):\n         super().__init__(delimiter_pad=None, bookend=False)\n+        self.header_rows = header_rows\n \n     def write(self, lines):\n         lines = super().write(lines)\n-        lines = [lines[1]] + lines + [lines[1]]\n-        return lines\n+        header_line = lines[1]\n+        \n+        if self.header_rows:\n+            # Insert additional header rows before the main header\n+            header_lines = []\n+            for row in self.header_rows:\n+                if row == 'name':\n+                    continue  # Skip 'name' since it's already included\n+                header_lines.append(self.splitter.join(str(col.info.get(row, '')) for col in self.cols))\n+                header_lines.append(header_line)  # Add delimiter line after each header row\n+            lines = header_lines + lines[1:]  # Replace original header section\n+            \n+        lines = [header_line] + lines + [header_line]  # Add top and bottom borders\n+        return lines\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py\nindex 65d6c1d..d41cf80 100644\n--- a/astropy/io/ascii/rst.py\n+++ b/astropy/io/ascii/rst.py\n@@ -18,9 +18,19 @@ class RST(FixedWidth):\n     _description = 'reStructuredText simple table'\n     data_class = SimpleRSTData\n     header_class = SimpleRSTHeader\n-    def __init__(self):\n+    def __init__(self, header_rows=None):\n         super().__init__(delimiter_pad=None, bookend=False)\n+        self.header_rows = header_rows\n     def write(self, lines):\n         lines = super().write(lines)\n-        lines = [lines[1]] + lines + [lines[1]]\n+        header_line = lines[1]\n+        if self.header_rows:\n+            header_lines = []\n+            for row in self.header_rows:\n+                if row == 'name':\n+                    continue\n+                header_lines.append(self.splitter.join((str(col.info.get(row, '')) for col in self.cols)))\n+                header_lines.append(header_line)\n+            lines = header_lines + lines[1:]\n+        lines = [header_line] + lines + [header_line]\n         return lines\n\\ No newline at end of file\n", "normalized_occurrence": 1}
