{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-11870", "model_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex bd243c1..866358a 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -538,7 +538,10 @@ def exptrigsimp(expr):\n         if e.has(*_trigs):\n             choices.append(e.rewrite(exp))\n         choices.append(e.rewrite(cos))\n-        return min(*choices, key=count_ops)\n+        best_choice = min(*choices, key=count_ops)\n+        if best_choice.has(exp) and not best_choice.has(Sin, Cos, Tan, cot):\n+            best_choice = best_choice.rewrite(Sin)\n+        return best_choice\n     newexpr = bottom_up(expr, exp_trig)\n \n     def f(rv):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex 8c4936d..4312f0f 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -180,7 +180,10 @@ def exptrigsimp(expr):\n         if e.has(*_trigs):\n             choices.append(e.rewrite(exp))\n         choices.append(e.rewrite(cos))\n-        return min(*choices, key=count_ops)\n+        best_choice = min(*choices, key=count_ops)\n+        if best_choice.has(exp) and (not best_choice.has(Sin, Cos, Tan, cot)):\n+            best_choice = best_choice.rewrite(Sin)\n+        return best_choice\n     newexpr = bottom_up(expr, exp_trig)\n     def f(rv):\n         if not rv.is_Mul:\n", "normalized_occurrence": 1}
