{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-20676", "model_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex a6bed3c..3c593e6 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -2181,13 +2181,13 @@ class SpanSelector(_SelectorWidget):\n \n         if self._active_handle is None:\n             # when the press event outside the span, we initially set the\n-            # visibility to False and extents to (v, v)\n-            # update will be called when setting the extents\n+            # visibility to False\n             self.visible = False\n-            self.extents = v, v\n-            # We need to set the visibility back, so the span selector will be\n-            # drawn when necessary (span width > 0)\n-            self.visible = True\n+            # Store the initial position without affecting axes limits\n+            self._extents_on_press = (v, v)\n+            # Draw an invisible rectangle initially\n+            self._draw_shape(v, v)\n+            self.set_visible(False)\n         else:\n             self.set_visible(True)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex b2dd641..650b0a5 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -1784,8 +1784,9 @@ class SpanSelector(_SelectorWidget):\n         self._prev = self._get_data(event)\n         if self._active_handle is None:\n             self.visible = False\n-            self.extents = (v, v)\n-            self.visible = True\n+            self._extents_on_press = (v, v)\n+            self._draw_shape(v, v)\n+            self.set_visible(False)\n         else:\n             self.set_visible(True)\n         return False\n", "normalized_occurrence": 1}
