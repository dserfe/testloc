{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-20590", "model_patch": "diff --git a/sympy/core/basic.py b/sympy/core/basic.py\nindex 87da872..59518d2 100644\n--- a/sympy/core/basic.py\n+++ b/sympy/core/basic.py\n@@ -109,6 +109,8 @@ class Basic(Printable, metaclass=ManagedProperties):\n     def __new__(cls, *args):\n         obj = object.__new__(cls)\n         obj._assumptions = cls.default_assumptions\n+        if not hasattr(obj, '__slots__'):\n+            obj.__dict__ = {}\n         obj._mhash = None  # will be set by __hash__ method.\n \n         obj._args = args  # all items in args must be Basic objects\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/basic.py b/sympy/core/basic.py\nindex d8b6046..2b6cecf 100644\n--- a/sympy/core/basic.py\n+++ b/sympy/core/basic.py\n@@ -48,6 +48,8 @@ class Basic(Printable, metaclass=ManagedProperties):\n     def __new__(cls, *args):\n         obj = object.__new__(cls)\n         obj._assumptions = cls.default_assumptions\n+        if not hasattr(obj, '__slots__'):\n+            obj.__dict__ = {}\n         obj._mhash = None\n         obj._args = args\n         return obj\n", "normalized_occurrence": 1}
