{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-8056", "model_patch": "diff --git a/sphinx/ext/napoleon/docstring.py b/sphinx/ext/napoleon/docstring.py\nindex f955f19..514d811 100644\n--- a/sphinx/ext/napoleon/docstring.py\n+++ b/sphinx/ext/napoleon/docstring.py\n@@ -407,12 +407,24 @@ class GoogleDocstring:\n         _desc = self._strip_empty(_desc)\n         has_desc = any(_desc)\n         separator = ' -- ' if has_desc else ''\n+        \n         if _name:\n+            # Split multiple parameter names\n+            names = [n.strip() for n in _name.split(',')]\n             if _type:\n-                if '`' in _type:\n-                    field = '**%s** (%s)%s' % (_name, _type, separator)\n+                if len(names) > 1:\n+                    # Format multiple parameters with shared type\n+                    param_list = ', '.join('**%s**' % n for n in names)\n+                    if '`' in _type:\n+                        field = '%s (%s)%s' % (param_list, _type, separator)\n+                    else:\n+                        field = '%s (*%s*)%s' % (param_list, _type, separator)\n                 else:\n-                    field = '**%s** (*%s*)%s' % (_name, _type, separator)\n+                    # Single parameter format\n+                    if '`' in _type:\n+                        field = '**%s** (%s)%s' % (_name, _type, separator)\n+                    else:\n+                        field = '**%s** (*%s*)%s' % (_name, _type, separator)\n             else:\n                 field = '**%s**%s' % (_name, separator)\n         elif _type:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/napoleon/docstring.py b/sphinx/ext/napoleon/docstring.py\nindex f69cdab..cc01569 100644\n--- a/sphinx/ext/napoleon/docstring.py\n+++ b/sphinx/ext/napoleon/docstring.py\n@@ -218,8 +218,15 @@ class GoogleDocstring:\n         has_desc = any(_desc)\n         separator = ' -- ' if has_desc else ''\n         if _name:\n+            names = [n.strip() for n in _name.split(',')]\n             if _type:\n-                if '`' in _type:\n+                if len(names) > 1:\n+                    param_list = ', '.join(('**%s**' % n for n in names))\n+                    if '`' in _type:\n+                        field = '%s (%s)%s' % (param_list, _type, separator)\n+                    else:\n+                        field = '%s (*%s*)%s' % (param_list, _type, separator)\n+                elif '`' in _type:\n                     field = '**%s** (%s)%s' % (_name, _type, separator)\n                 else:\n                     field = '**%s** (*%s*)%s' % (_name, _type, separator)\n", "normalized_occurrence": 1}
