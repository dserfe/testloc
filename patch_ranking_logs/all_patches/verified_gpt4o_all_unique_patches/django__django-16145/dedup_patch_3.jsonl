{"model_name_or_path": "agentless", "instance_id": "django__django-16145", "model_patch": "diff --git a/django/core/management/commands/runserver.py b/django/core/management/commands/runserver.py\nindex c4f663b..2809b61 100644\n--- a/django/core/management/commands/runserver.py\n+++ b/django/core/management/commands/runserver.py\n@@ -96,18 +96,21 @@ class Command(BaseCommand):\n                     \"or address:port pair.\" % options[\"addrport\"]\n                 )\n             self.addr, _ipv4, _ipv6, _fqdn, self.port = m.groups()\n-            if not self.port.isdigit():\n-                raise CommandError(\"%r is not a valid port number.\" % self.port)\n-            if self.addr:\n-                if _ipv6:\n-                    self.addr = self.addr[1:-1]\n-                    self.use_ipv6 = True\n-                    self._raw_ipv6 = True\n-                elif self.use_ipv6 and not _fqdn:\n-                    raise CommandError('\"%s\" is not a valid IPv6 address.' % self.addr)\n-        if not self.addr:\n-            self.addr = self.default_addr_ipv6 if self.use_ipv6 else self.default_addr\n-            self._raw_ipv6 = self.use_ipv6\n+            if self.addr == \"0\":\n+                self.addr = \"0.0.0.0\"\n+            else:\n+                if not self.port.isdigit():\n+                    raise CommandError(\"%r is not a valid port number.\" % self.port)\n+                if self.addr:\n+                    if _ipv6:\n+                        self.addr = self.addr[1:-1]\n+                        self.use_ipv6 = True\n+                        self._raw_ipv6 = True\n+                    elif self.use_ipv6 and not _fqdn:\n+                        raise CommandError('\"%s\" is not a valid IPv6 address.' % self.addr)\n+            if not self.addr:\n+                self.addr = self.default_addr_ipv6 if self.use_ipv6 else self.default_addr\n+                self._raw_ipv6 = self.use_ipv6\n         self.run(**options)\n \n     def run(self, **options):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/management/commands/runserver.py b/django/core/management/commands/runserver.py\nindex 0e6059e..575eab5 100644\n--- a/django/core/management/commands/runserver.py\n+++ b/django/core/management/commands/runserver.py\n@@ -47,18 +47,21 @@ class Command(BaseCommand):\n             if m is None:\n                 raise CommandError('\"%s\" is not a valid port number or address:port pair.' % options['addrport'])\n             self.addr, _ipv4, _ipv6, _fqdn, self.port = m.groups()\n-            if not self.port.isdigit():\n-                raise CommandError('%r is not a valid port number.' % self.port)\n-            if self.addr:\n-                if _ipv6:\n-                    self.addr = self.addr[1:-1]\n-                    self.use_ipv6 = True\n-                    self._raw_ipv6 = True\n-                elif self.use_ipv6 and (not _fqdn):\n-                    raise CommandError('\"%s\" is not a valid IPv6 address.' % self.addr)\n-        if not self.addr:\n-            self.addr = self.default_addr_ipv6 if self.use_ipv6 else self.default_addr\n-            self._raw_ipv6 = self.use_ipv6\n+            if self.addr == '0':\n+                self.addr = '0.0.0.0'\n+            else:\n+                if not self.port.isdigit():\n+                    raise CommandError('%r is not a valid port number.' % self.port)\n+                if self.addr:\n+                    if _ipv6:\n+                        self.addr = self.addr[1:-1]\n+                        self.use_ipv6 = True\n+                        self._raw_ipv6 = True\n+                    elif self.use_ipv6 and (not _fqdn):\n+                        raise CommandError('\"%s\" is not a valid IPv6 address.' % self.addr)\n+            if not self.addr:\n+                self.addr = self.default_addr_ipv6 if self.use_ipv6 else self.default_addr\n+                self._raw_ipv6 = self.use_ipv6\n         self.run(**options)\n     def run(self, **options):\n         use_reloader = options['use_reloader']\n", "normalized_occurrence": 1}
