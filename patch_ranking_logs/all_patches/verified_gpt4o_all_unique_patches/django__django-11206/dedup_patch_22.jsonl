{"model_name_or_path": "agentless", "instance_id": "django__django-11206", "model_patch": "diff --git a/django/utils/numberformat.py b/django/utils/numberformat.py\nindex d5baf57..d9caa18 100644\n--- a/django/utils/numberformat.py\n+++ b/django/utils/numberformat.py\n@@ -31,14 +31,17 @@ def format(number, decimal_sep, decimal_pos=None, grouping=0, thousand_sep='',\n         # scientific notation to avoid high memory usage in {:f}'.format().\n         _, digits, exponent = number.as_tuple()\n         if abs(exponent) + len(digits) > 200:\n-            number = '{:e}'.format(number)\n-            coefficient, exponent = number.split('e')\n-            # Format the coefficient.\n-            coefficient = format(\n-                coefficient, decimal_sep, decimal_pos, grouping,\n-                thousand_sep, force_grouping, use_l10n,\n-            )\n-            return '{}e{}'.format(coefficient, exponent)\n+            if decimal_pos is None or abs(exponent) >= decimal_pos:\n+                number = '{:e}'.format(number)\n+                coefficient, exponent = number.split('e')\n+                # Format the coefficient.\n+                coefficient = format(\n+                    coefficient, decimal_sep, decimal_pos, grouping,\n+                    thousand_sep, force_grouping, use_l10n,\n+                )\n+                return '{}e{}'.format(coefficient, exponent)\n+            else:\n+                str_number = '0.' + '0' * (decimal_pos - 1) + '1'\n         else:\n             str_number = '{:f}'.format(number)\n     else:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/numberformat.py b/django/utils/numberformat.py\nindex 0318af1..ac8e6d3 100644\n--- a/django/utils/numberformat.py\n+++ b/django/utils/numberformat.py\n@@ -11,10 +11,13 @@ def format(number, decimal_sep, decimal_pos=None, grouping=0, thousand_sep='', f\n     if isinstance(number, Decimal):\n         _, digits, exponent = number.as_tuple()\n         if abs(exponent) + len(digits) > 200:\n-            number = '{:e}'.format(number)\n-            coefficient, exponent = number.split('e')\n-            coefficient = format(coefficient, decimal_sep, decimal_pos, grouping, thousand_sep, force_grouping, use_l10n)\n-            return '{}e{}'.format(coefficient, exponent)\n+            if decimal_pos is None or abs(exponent) >= decimal_pos:\n+                number = '{:e}'.format(number)\n+                coefficient, exponent = number.split('e')\n+                coefficient = format(coefficient, decimal_sep, decimal_pos, grouping, thousand_sep, force_grouping, use_l10n)\n+                return '{}e{}'.format(coefficient, exponent)\n+            else:\n+                str_number = '0.' + '0' * (decimal_pos - 1) + '1'\n         else:\n             str_number = '{:f}'.format(number)\n     else:\n", "normalized_occurrence": 1}
