{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-11445", "model_patch": "diff --git a/sphinx/environment/collectors/title.py b/sphinx/environment/collectors/title.py\nindex ec97f42..eab2a49 100644\n--- a/sphinx/environment/collectors/title.py\n+++ b/sphinx/environment/collectors/title.py\n@@ -38,8 +38,21 @@ class TitleCollector(EnvironmentCollector):\n             longtitlenode += nodes.Text(doctree['title'])\n         # look for first section title and use that as the title\n         for node in doctree.findall(nodes.section):\n+            # Clone the title node to avoid modifying the original\n+            title_clone = node[0].deepcopy()\n+            # Resolve all references in the title\n+            for refnode in title_clone.findall(nodes.pending_xref):\n+                if 'refdomain' in refnode:\n+                    domain = app.env.get_domain(refnode['refdomain'])\n+                    if domain:\n+                        title_elem = domain.resolve_xref(app.env, app.env.docname, app.builder,\n+                                                       refnode['reftype'], refnode['reftarget'],\n+                                                       refnode, refnode[0])\n+                        if title_elem:\n+                            refnode.replace_self(title_elem)\n+            # Now extract the text\n             visitor = SphinxContentsFilter(doctree)\n-            node[0].walkabout(visitor)\n+            title_clone.walkabout(visitor)\n             titlenode += visitor.get_entry_text()\n             break\n         else:\n@@ -56,4 +69,4 @@ def setup(app: Sphinx) -> dict[str, Any]:\n         'version': 'builtin',\n         'parallel_read_safe': True,\n         'parallel_write_safe': True,\n-    }\n+    }\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/environment/collectors/title.py b/sphinx/environment/collectors/title.py\nindex 90c3ce6..42403e1 100644\n--- a/sphinx/environment/collectors/title.py\n+++ b/sphinx/environment/collectors/title.py\n@@ -20,8 +20,16 @@ class TitleCollector(EnvironmentCollector):\n             longtitlenode = nodes.title()\n             longtitlenode += nodes.Text(doctree['title'])\n         for node in doctree.findall(nodes.section):\n+            title_clone = node[0].deepcopy()\n+            for refnode in title_clone.findall(nodes.pending_xref):\n+                if 'refdomain' in refnode:\n+                    domain = app.env.get_domain(refnode['refdomain'])\n+                    if domain:\n+                        title_elem = domain.resolve_xref(app.env, app.env.docname, app.builder, refnode['reftype'], refnode['reftarget'], refnode, refnode[0])\n+                        if title_elem:\n+                            refnode.replace_self(title_elem)\n             visitor = SphinxContentsFilter(doctree)\n-            node[0].walkabout(visitor)\n+            title_clone.walkabout(visitor)\n             titlenode += visitor.get_entry_text()\n             break\n         else:\n", "normalized_occurrence": 1}
