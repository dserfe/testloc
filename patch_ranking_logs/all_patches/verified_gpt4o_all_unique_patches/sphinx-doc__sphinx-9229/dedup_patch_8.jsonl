{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9229", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 8cd9189..5200d40 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -524,9 +524,13 @@ class Documenter:\n \n         if args is not None:\n             return args + ((' -> %s' % retann) if retann else '')\n-        else:\n+\n+        # Handle type aliases explicitly\n+        if self.objtype == 'alias':\n             return ''\n \n+        return ''\n+\n     def add_directive_header(self, sig: str) -> None:\n         \"\"\"Add the directive header and options to the generated content.\"\"\"\n         domain = getattr(self, 'domain', 'py')\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 7792226..5292428 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -267,8 +267,9 @@ class Documenter:\n             args, retann = result\n         if args is not None:\n             return args + (' -> %s' % retann if retann else '')\n-        else:\n+        if self.objtype == 'alias':\n             return ''\n+        return ''\n     def add_directive_header(self, sig: str) -> None:\n         domain = getattr(self, 'domain', 'py')\n         directive = getattr(self, 'directivetype', self.objtype)\n", "normalized_occurrence": 1}
