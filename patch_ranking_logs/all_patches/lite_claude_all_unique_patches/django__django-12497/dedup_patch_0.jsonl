{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12497", "model_patch": "diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex c57171c..76b0d71 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -1309,7 +1309,7 @@ class ManyToManyField(RelatedField):\n                              \"through_fields keyword argument.\") % (self, from_model_name),\n                             hint=(\n                                 'If you want to create a recursive relationship, '\n-                                'use ForeignKey(\"%s\", symmetrical=False, through=\"%s\").'\n+                                'use ManyToManyField(\"%s\", through=\"%s\").'\n                             ) % (\n                                 RECURSIVE_RELATIONSHIP_CONSTANT,\n                                 relationship_model_name,\n@@ -1329,7 +1329,7 @@ class ManyToManyField(RelatedField):\n                             \"through_fields keyword argument.\" % (self, to_model_name),\n                             hint=(\n                                 'If you want to create a recursive relationship, '\n-                                'use ForeignKey(\"%s\", symmetrical=False, through=\"%s\").'\n+                                'use ManyToManyField(\"%s\", through=\"%s\").'\n                             ) % (\n                                 RECURSIVE_RELATIONSHIP_CONSTANT,\n                                 relationship_model_name,\n", "occurrence": 10, "normalized_patch": "diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex d96e8dc..a37f5e0 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -565,9 +565,9 @@ class ManyToManyField(RelatedField):\n                 seen_from = sum((from_model == getattr(field.remote_field, 'model', None) for field in self.remote_field.through._meta.fields))\n                 seen_to = sum((to_model == getattr(field.remote_field, 'model', None) for field in self.remote_field.through._meta.fields))\n                 if seen_from > 1 and (not self.remote_field.through_fields):\n-                    errors.append(checks.Error(\"The model is used as an intermediate model by '%s', but it has more than one foreign key from '%s', which is ambiguous. You must specify which foreign key Django should use via the through_fields keyword argument.\" % (self, from_model_name), hint='If you want to create a recursive relationship, use ForeignKey(\"%s\", symmetrical=False, through=\"%s\").' % (RECURSIVE_RELATIONSHIP_CONSTANT, relationship_model_name), obj=self, id='fields.E334'))\n+                    errors.append(checks.Error(\"The model is used as an intermediate model by '%s', but it has more than one foreign key from '%s', which is ambiguous. You must specify which foreign key Django should use via the through_fields keyword argument.\" % (self, from_model_name), hint='If you want to create a recursive relationship, use ManyToManyField(\"%s\", through=\"%s\").' % (RECURSIVE_RELATIONSHIP_CONSTANT, relationship_model_name), obj=self, id='fields.E334'))\n                 if seen_to > 1 and (not self.remote_field.through_fields):\n-                    errors.append(checks.Error(\"The model is used as an intermediate model by '%s', but it has more than one foreign key to '%s', which is ambiguous. You must specify which foreign key Django should use via the through_fields keyword argument.\" % (self, to_model_name), hint='If you want to create a recursive relationship, use ForeignKey(\"%s\", symmetrical=False, through=\"%s\").' % (RECURSIVE_RELATIONSHIP_CONSTANT, relationship_model_name), obj=self, id='fields.E335'))\n+                    errors.append(checks.Error(\"The model is used as an intermediate model by '%s', but it has more than one foreign key to '%s', which is ambiguous. You must specify which foreign key Django should use via the through_fields keyword argument.\" % (self, to_model_name), hint='If you want to create a recursive relationship, use ManyToManyField(\"%s\", through=\"%s\").' % (RECURSIVE_RELATIONSHIP_CONSTANT, relationship_model_name), obj=self, id='fields.E335'))\n                 if seen_from == 0 or seen_to == 0:\n                     errors.append(checks.Error(\"The model is used as an intermediate model by '%s', but it does not have a foreign key to '%s' or '%s'.\" % (self, from_model_name, to_model_name), obj=self.remote_field.through, id='fields.E336'))\n         if self.remote_field.through_fields is not None:\n", "normalized_occurrence": 10}
