{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-12907", "model_patch": "diff --git a/astropy/modeling/separable.py b/astropy/modeling/separable.py\nindex d6e9246..82fe8ba 100644\n--- a/astropy/modeling/separable.py\n+++ b/astropy/modeling/separable.py\n@@ -236,13 +236,13 @@ def _cstack(left, right):\n     if isinstance(left, Model):\n         cleft = _coord_matrix(left, 'left', noutp)\n     else:\n-        cleft = np.zeros((noutp, left.shape[1]))\n-        cleft[: left.shape[0], : left.shape[1]] = left\n+        cleft = np.zeros((noutp, left.shape[1] if isinstance(left, np.ndarray) else left.n_inputs))\n+        cleft[: left.shape[0], : left.shape[1]] = left if isinstance(left, np.ndarray) else _coord_matrix(left, 'left', noutp)\n     if isinstance(right, Model):\n         cright = _coord_matrix(right, 'right', noutp)\n     else:\n-        cright = np.zeros((noutp, right.shape[1]))\n-        cright[-right.shape[0]:, -right.shape[1]:] = 1\n+        cright = np.zeros((noutp, right.shape[1] if isinstance(right, np.ndarray) else right.n_inputs))\n+        cright[-right.shape[0]:, -right.shape[1]:] = right if isinstance(right, np.ndarray) else _coord_matrix(right, 'right', noutp)\n \n     return np.hstack([cleft, cright])\n \n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/modeling/separable.py b/astropy/modeling/separable.py\nindex 198a838..3e78f8b 100644\n--- a/astropy/modeling/separable.py\n+++ b/astropy/modeling/separable.py\n@@ -72,13 +72,13 @@ def _cstack(left, right):\n     if isinstance(left, Model):\n         cleft = _coord_matrix(left, 'left', noutp)\n     else:\n-        cleft = np.zeros((noutp, left.shape[1]))\n-        cleft[:left.shape[0], :left.shape[1]] = left\n+        cleft = np.zeros((noutp, left.shape[1] if isinstance(left, np.ndarray) else left.n_inputs))\n+        cleft[:left.shape[0], :left.shape[1]] = left if isinstance(left, np.ndarray) else _coord_matrix(left, 'left', noutp)\n     if isinstance(right, Model):\n         cright = _coord_matrix(right, 'right', noutp)\n     else:\n-        cright = np.zeros((noutp, right.shape[1]))\n-        cright[-right.shape[0]:, -right.shape[1]:] = 1\n+        cright = np.zeros((noutp, right.shape[1] if isinstance(right, np.ndarray) else right.n_inputs))\n+        cright[-right.shape[0]:, -right.shape[1]:] = right if isinstance(right, np.ndarray) else _coord_matrix(right, 'right', noutp)\n     return np.hstack([cleft, cright])\n def _cdot(left, right):\n     left, right = (right, left)\n", "normalized_occurrence": 1}
