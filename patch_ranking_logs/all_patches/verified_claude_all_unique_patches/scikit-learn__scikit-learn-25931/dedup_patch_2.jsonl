{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-25931", "model_patch": "diff --git a/sklearn/base.py b/sklearn/base.py\nindex e503bfe..251ca37 100644\n--- a/sklearn/base.py\n+++ b/sklearn/base.py\n@@ -456,7 +456,7 @@ class BaseEstimator:\n \n         # validate the feature names against the `feature_names_in_` attribute\n         if len(fitted_feature_names) != len(X_feature_names) or np.any(\n-            fitted_feature_names != X_feature_names\n+            [a != b for a, b in zip(fitted_feature_names, X_feature_names)]\n         ):\n             message = (\n                 \"The feature names should match those that were passed during fit.\\n\"\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/base.py b/sklearn/base.py\nindex f53342c..21903a3 100644\n--- a/sklearn/base.py\n+++ b/sklearn/base.py\n@@ -175,7 +175,7 @@ class BaseEstimator:\n         if X_feature_names is None and fitted_feature_names is not None:\n             warnings.warn(f'X does not have valid feature names, but {self.__class__.__name__} was fitted with feature names')\n             return\n-        if len(fitted_feature_names) != len(X_feature_names) or np.any(fitted_feature_names != X_feature_names):\n+        if len(fitted_feature_names) != len(X_feature_names) or np.any([a != b for a, b in zip(fitted_feature_names, X_feature_names)]):\n             message = 'The feature names should match those that were passed during fit.\\n'\n             fitted_feature_names_set = set(fitted_feature_names)\n             X_feature_names_set = set(X_feature_names)\n", "normalized_occurrence": 1}
