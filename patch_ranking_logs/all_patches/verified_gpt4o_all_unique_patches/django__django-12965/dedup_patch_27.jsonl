{"model_name_or_path": "agentless", "instance_id": "django__django-12965", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex e0d8d05..6044854 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -742,9 +742,15 @@ class QuerySet:\n         del_query.query.select_related = False\n         del_query.query.clear_ordering(force_empty=True)\n \n-        collector = Collector(using=del_query.db)\n-        collector.collect(del_query)\n-        deleted, _rows_count = collector.delete()\n+        if connections[self.db].vendor == 'mysql':\n+            with connections[self.db].cursor() as cursor:\n+                cursor.execute('DELETE FROM %s' % self.model._meta.db_table)\n+                deleted = cursor.rowcount\n+                _rows_count = 0\n+        else:\n+            collector = Collector(using=del_query.db)\n+            collector.collect(del_query)\n+            deleted, _rows_count = collector.delete()\n \n         # Clear the result cache, in case this QuerySet gets reused.\n         self._result_cache = None\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex be3ebe2..649bab7 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -443,9 +443,15 @@ class QuerySet:\n         del_query.query.select_for_update = False\n         del_query.query.select_related = False\n         del_query.query.clear_ordering(force_empty=True)\n-        collector = Collector(using=del_query.db)\n-        collector.collect(del_query)\n-        deleted, _rows_count = collector.delete()\n+        if connections[self.db].vendor == 'mysql':\n+            with connections[self.db].cursor() as cursor:\n+                cursor.execute('DELETE FROM %s' % self.model._meta.db_table)\n+                deleted = cursor.rowcount\n+                _rows_count = 0\n+        else:\n+            collector = Collector(using=del_query.db)\n+            collector.collect(del_query)\n+            deleted, _rows_count = collector.delete()\n         self._result_cache = None\n         return (deleted, _rows_count)\n     delete.alters_data = True\n", "normalized_occurrence": 1}
