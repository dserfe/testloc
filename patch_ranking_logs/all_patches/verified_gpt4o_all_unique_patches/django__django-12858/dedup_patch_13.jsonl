{"model_name_or_path": "agentless", "instance_id": "django__django-12858", "model_patch": "diff --git a/django/db/models/options.py b/django/db/models/options.py\nindex 1540a78..80ab228 100644\n--- a/django/db/models/options.py\n+++ b/django/db/models/options.py\n@@ -190,8 +190,9 @@ class Options:\n             if self.verbose_name_plural is None:\n                 self.verbose_name_plural = format_lazy('{}s', self.verbose_name)\n \n-            # order_with_respect_and ordering are mutually exclusive.\n+            # Register lookups for ordering\n             self._ordering_clash = bool(self.ordering and self.order_with_respect_to)\n+            self.register_ordering_lookups()\n \n             # Any leftover attributes must be invalid.\n             if meta_attrs != {}:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/options.py b/django/db/models/options.py\nindex 63c14d2..3ea3b32 100644\n--- a/django/db/models/options.py\n+++ b/django/db/models/options.py\n@@ -118,6 +118,7 @@ class Options:\n             if self.verbose_name_plural is None:\n                 self.verbose_name_plural = format_lazy('{}s', self.verbose_name)\n             self._ordering_clash = bool(self.ordering and self.order_with_respect_to)\n+            self.register_ordering_lookups()\n             if meta_attrs != {}:\n                 raise TypeError(\"'class Meta' got invalid attribute(s): %s\" % ','.join(meta_attrs))\n         else:\n", "normalized_occurrence": 1}
