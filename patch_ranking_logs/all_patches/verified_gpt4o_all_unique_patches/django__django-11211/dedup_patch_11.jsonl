{"model_name_or_path": "agentless", "instance_id": "django__django-11211", "model_patch": "diff --git a/django/contrib/contenttypes/fields.py b/django/contrib/contenttypes/fields.py\nindex 3bf5851..4f1ec25 100644\n--- a/django/contrib/contenttypes/fields.py\n+++ b/django/contrib/contenttypes/fields.py\n@@ -184,7 +184,11 @@ class GenericForeignKey(FieldCacheMixin):\n             if ct_id is not None:\n                 fk_val = getattr(instance, self.fk_field)\n                 if fk_val is not None:\n-                    fk_dict[ct_id].add(fk_val)\n+                    model_class = self.get_content_type(id=ct_id, using=instance._state.db).model_class()\n+                    if model_class is not None:\n+                        fk_field = model_class._meta.pk\n+                        fk_val = fk_field.to_python(fk_val)\n+                        fk_dict[ct_id].add(fk_val)\n                     instance_dict[ct_id] = instance\n \n         ret_val = []\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/contenttypes/fields.py b/django/contrib/contenttypes/fields.py\nindex 8e99ea7..42b9ad1 100644\n--- a/django/contrib/contenttypes/fields.py\n+++ b/django/contrib/contenttypes/fields.py\n@@ -87,7 +87,11 @@ class GenericForeignKey(FieldCacheMixin):\n             if ct_id is not None:\n                 fk_val = getattr(instance, self.fk_field)\n                 if fk_val is not None:\n-                    fk_dict[ct_id].add(fk_val)\n+                    model_class = self.get_content_type(id=ct_id, using=instance._state.db).model_class()\n+                    if model_class is not None:\n+                        fk_field = model_class._meta.pk\n+                        fk_val = fk_field.to_python(fk_val)\n+                        fk_dict[ct_id].add(fk_val)\n                     instance_dict[ct_id] = instance\n         ret_val = []\n         for ct_id, fkeys in fk_dict.items():\n", "normalized_occurrence": 1}
