{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11422", "model_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex 2510c51..3e9b8a3 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -103,7 +103,9 @@ def iter_all_python_module_files():\n     # aren't loaded on the fly.\n     keys = sorted(sys.modules)\n     modules = tuple(m for m in map(sys.modules.__getitem__, keys) if not isinstance(m, weakref.ProxyTypes))\n-    return iter_modules_and_files(modules, frozenset(_error_files))\n+    # Add the main module file (usually manage.py) to the watch list\n+    extra_files = {sys.argv[0]} if sys.argv else set()\n+    return iter_modules_and_files(modules, frozenset(_error_files | extra_files))\n \n \n @functools.lru_cache(maxsize=1)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex bb4b189..78a15aa 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -70,7 +70,8 @@ def ensure_echo_on():\n def iter_all_python_module_files():\n     keys = sorted(sys.modules)\n     modules = tuple((m for m in map(sys.modules.__getitem__, keys) if not isinstance(m, weakref.ProxyTypes)))\n-    return iter_modules_and_files(modules, frozenset(_error_files))\n+    extra_files = {sys.argv[0]} if sys.argv else set()\n+    return iter_modules_and_files(modules, frozenset(_error_files | extra_files))\n @functools.lru_cache(maxsize=1)\n def iter_modules_and_files(modules, extra_files):\n     sys_file_paths = []\n", "normalized_occurrence": 3}
