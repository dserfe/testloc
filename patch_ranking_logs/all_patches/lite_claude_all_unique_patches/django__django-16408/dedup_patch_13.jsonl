{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16408", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 83f3a12..7eee022 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1841,6 +1841,11 @@ class Query(BaseExpression):\n             joins.append(alias)\n             if filtered_relation:\n                 filtered_relation.path = joins[:]\n+                # Ensure proper relationship chain is maintained for nested filtered relations\n+                if len(path) > 1:\n+                    for prev_join in path[:-1]:\n+                        if prev_join.filtered_relation:\n+                            filtered_relation.path = prev_join.filtered_relation.path + filtered_relation.path[1:]\n         return JoinInfo(final_field, targets, opts, joins, path, final_transformer)\n \n     def trim_joins(self, targets, joins, path):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 0b42199..c737e8c 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -910,6 +910,10 @@ class Query(BaseExpression):\n             joins.append(alias)\n             if filtered_relation:\n                 filtered_relation.path = joins[:]\n+                if len(path) > 1:\n+                    for prev_join in path[:-1]:\n+                        if prev_join.filtered_relation:\n+                            filtered_relation.path = prev_join.filtered_relation.path + filtered_relation.path[1:]\n         return JoinInfo(final_field, targets, opts, joins, path, final_transformer)\n     def trim_joins(self, targets, joins, path):\n         joins = joins[:]\n", "normalized_occurrence": 1}
