{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14539", "model_patch": "diff --git a/django/utils/html.py b/django/utils/html.py\nindex 809fc0f..0996228 100644\n--- a/django/utils/html.py\n+++ b/django/utils/html.py\n@@ -283,8 +283,18 @@ def urlize(text, trim_url_limit=None, nofollow=False, autoescape=False):\n             middle_unescaped = html.unescape(middle)\n             stripped = middle_unescaped.rstrip(TRAILING_PUNCTUATION_CHARS)\n             if middle_unescaped != stripped:\n-                trail = middle[len(stripped):] + trail\n-                middle = middle[:len(stripped) - len(middle_unescaped)]\n+                # Count the trailing punctuation chars in the unescaped string\n+                trailing_chars = len(middle_unescaped) - len(stripped)\n+                # Work backwards from the end of the escaped string to find the\n+                # punctuation chars\n+                curr_trail = ''\n+                for i in range(len(middle) - 1, -1, -1):\n+                    if len(html.unescape(curr_trail)) < trailing_chars:\n+                        curr_trail = middle[i] + curr_trail\n+                    else:\n+                        break\n+                middle = middle[:-len(curr_trail)]\n+                trail = curr_trail + trail\n                 trimmed_something = True\n         return lead, middle, trail\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/html.py b/django/utils/html.py\nindex ed1e228..e6a9181 100644\n--- a/django/utils/html.py\n+++ b/django/utils/html.py\n@@ -121,8 +121,15 @@ def urlize(text, trim_url_limit=None, nofollow=False, autoescape=False):\n             middle_unescaped = html.unescape(middle)\n             stripped = middle_unescaped.rstrip(TRAILING_PUNCTUATION_CHARS)\n             if middle_unescaped != stripped:\n-                trail = middle[len(stripped):] + trail\n-                middle = middle[:len(stripped) - len(middle_unescaped)]\n+                trailing_chars = len(middle_unescaped) - len(stripped)\n+                curr_trail = ''\n+                for i in range(len(middle) - 1, -1, -1):\n+                    if len(html.unescape(curr_trail)) < trailing_chars:\n+                        curr_trail = middle[i] + curr_trail\n+                    else:\n+                        break\n+                middle = middle[:-len(curr_trail)]\n+                trail = curr_trail + trail\n                 trimmed_something = True\n         return (lead, middle, trail)\n     def is_email_simple(value):\n", "normalized_occurrence": 1}
