{"model_name_or_path": "agentless", "instance_id": "django__django-10880", "model_patch": "diff --git a/django/db/models/aggregates.py b/django/db/models/aggregates.py\nindex f03a228..59a6ee7 100644\n--- a/django/db/models/aggregates.py\n+++ b/django/db/models/aggregates.py\n@@ -102,6 +102,12 @@ class Avg(FixDurationInputMixin, NumericOutputFieldMixin, Aggregate):\n \n \n class Count(Aggregate):\n+    def as_sql(self, compiler, connection):\n+        if self.distinct and isinstance(self.source_expressions[0], Case):\n+            self.function = 'COUNT(DISTINCT '\n+            sql, params = self.source_expressions[0].as_sql(compiler, connection)\n+            return f\"{self.function}{sql})\", params\n+        return super().as_sql(compiler, connection)\n     function = 'COUNT'\n     name = 'Count'\n     output_field = IntegerField()\n", "occurrence": 1, "normalized_patch": "--- a/django/db/models/aggregates.py\n+++ b/django/db/models/aggregates.py\n+    def as_sql(self, compiler, connection):\n+        if self.distinct and isinstance(self.source_expressions[0], Case):\n+            self.function = 'COUNT(DISTINCT '\n+            sql, params = self.source_expressions[0].as_sql(compiler, connection)\n+            return (f'{self.function}{sql})', params)\n+        return super().as_sql(compiler, connection)", "normalized_occurrence": 1}
