{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-7910", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 87c3fb8..c9d13cd 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1310,8 +1310,11 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type:\n             if inspect.is_builtin_class_method(obj, attr):\n                 return None\n             attr = self.get_attr(obj, attr, None)\n-            if not (inspect.ismethod(attr) or inspect.isfunction(attr)):\n-                return None\n+            if attr:\n+                # Unwrap the attribute to handle decorated methods\n+                attr = inspect.unwrap(attr)\n+                if not (inspect.ismethod(attr) or inspect.isfunction(attr)):\n+                    return None\n             return attr\n \n         # This sequence is copied from inspect._signature_from_callable.\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 69b2ccc..13097ea 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -958,8 +958,10 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):\n             if inspect.is_builtin_class_method(obj, attr):\n                 return None\n             attr = self.get_attr(obj, attr, None)\n-            if not (inspect.ismethod(attr) or inspect.isfunction(attr)):\n-                return None\n+            if attr:\n+                attr = inspect.unwrap(attr)\n+                if not (inspect.ismethod(attr) or inspect.isfunction(attr)):\n+                    return None\n             return attr\n         call = get_user_defined_function_or_method(type(self.object), '__call__')\n         if call is not None:\n", "normalized_occurrence": 1}
