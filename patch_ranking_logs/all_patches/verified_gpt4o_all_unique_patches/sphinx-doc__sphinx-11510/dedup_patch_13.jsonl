{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-11510", "model_patch": "diff --git a/sphinx/environment/__init__.py b/sphinx/environment/__init__.py\nindex 96f4a03..46811ce 100644\n--- a/sphinx/environment/__init__.py\n+++ b/sphinx/environment/__init__.py\n@@ -660,8 +660,10 @@ class BuildEnvironment:\n         If *collapse* is True, all branches not containing docname will\n         be collapsed.\n         \"\"\"\n-        return _resolve_toctree(self, docname, builder, toctree, prune,\n-                                maxdepth, titles_only, collapse, includehidden)\n+        result = _resolve_toctree(self, docname, builder, toctree, prune,\n+                                  maxdepth, titles_only, collapse, includehidden)\n+        self.events.emit('doctree-read', result, docname)\n+        return result\n \n     def resolve_references(self, doctree: nodes.document, fromdocname: str,\n                            builder: Builder) -> None:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/environment/__init__.py b/sphinx/environment/__init__.py\nindex 3c422c4..d9b5027 100644\n--- a/sphinx/environment/__init__.py\n+++ b/sphinx/environment/__init__.py\n@@ -369,7 +369,9 @@ class BuildEnvironment:\n                 toctreenode.replace_self(result)\n         return doctree\n     def resolve_toctree(self, docname: str, builder: Builder, toctree: addnodes.toctree, prune: bool=True, maxdepth: int=0, titles_only: bool=False, collapse: bool=False, includehidden: bool=False) -> Node | None:\n-        return _resolve_toctree(self, docname, builder, toctree, prune, maxdepth, titles_only, collapse, includehidden)\n+        result = _resolve_toctree(self, docname, builder, toctree, prune, maxdepth, titles_only, collapse, includehidden)\n+        self.events.emit('doctree-read', result, docname)\n+        return result\n     def resolve_references(self, doctree: nodes.document, fromdocname: str, builder: Builder) -> None:\n         self.apply_post_transforms(doctree, fromdocname)\n     def apply_post_transforms(self, doctree: nodes.document, docname: str) -> None:\n", "normalized_occurrence": 1}
