{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-23314", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex f43c36a..c73a369 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -3023,6 +3023,9 @@ class _AxesBase(martist.Artist):\n             return\n         self._unstale_viewLim()\n \n+        if not self.get_visible():\n+            return\n+\n         renderer.open_group('axes', gid=self.get_gid())\n \n         # prevent triggering call backs during the draw process\n@@ -4608,4 +4611,4 @@ class _AxesBase(martist.Artist):\n \n     def get_shared_y_axes(self):\n         \"\"\"Return an immutable view on the shared y-axes Grouper.\"\"\"\n-        return cbook.GrouperView(self._shared_axes[\"y\"])\n+        return cbook.GrouperView(self._shared_axes[\"y\"])\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex d0b0d73..f0851f4 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1271,6 +1271,8 @@ class _AxesBase(martist.Artist):\n         if not self.get_visible():\n             return\n         self._unstale_viewLim()\n+        if not self.get_visible():\n+            return\n         renderer.open_group('axes', gid=self.get_gid())\n         self._stale = True\n         locator = self.get_axes_locator()\n", "normalized_occurrence": 1}
