{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8459", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 6f90bd7..612d074 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -103,7 +103,10 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str]) -> No\n         elif parts[0] == 'rtype':\n             arguments['return'] = {'type': True}\n \n+    type_aliases = app.config.autodoc_type_aliases or {}\n     for name, annotation in annotations.items():\n+        if annotation in type_aliases:\n+            annotation = type_aliases[annotation]\n         if name == 'return':\n             continue\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 377d0c5..7d5e676 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -72,7 +72,10 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str]) -> No\n             arg['type'] = True\n         elif parts[0] == 'rtype':\n             arguments['return'] = {'type': True}\n+    type_aliases = app.config.autodoc_type_aliases or {}\n     for name, annotation in annotations.items():\n+        if annotation in type_aliases:\n+            annotation = type_aliases[annotation]\n         if name == 'return':\n             continue\n         arg = arguments.get(name, {})\n", "normalized_occurrence": 1}
