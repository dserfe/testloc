{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11815", "model_patch": "diff --git a/django/db/migrations/writer.py b/django/db/migrations/writer.py\nindex 36f0ec3..2350354 100644\n--- a/django/db/migrations/writer.py\n+++ b/django/db/migrations/writer.py\n@@ -268,6 +268,10 @@ class MigrationWriter:\n \n     @classmethod\n     def serialize(cls, value):\n+        # Special handling for Enum members\n+        if value is not None and isinstance(value, Enum):\n+            # Return the Enum class name and member name instead of the value\n+            return \"%s['%s']\" % (value.__class__.__name__, value.name), set([\"from enum import Enum\"])\n         return serializer_factory(value).serialize()\n \n     @classmethod\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/writer.py b/django/db/migrations/writer.py\nindex acf3688..fd29db6 100644\n--- a/django/db/migrations/writer.py\n+++ b/django/db/migrations/writer.py\n@@ -186,6 +186,8 @@ class MigrationWriter:\n         return os.path.join(self.basedir, self.filename)\n     @classmethod\n     def serialize(cls, value):\n+        if value is not None and isinstance(value, Enum):\n+            return (\"%s['%s']\" % (value.__class__.__name__, value.name), set(['from enum import Enum']))\n         return serializer_factory(value).serialize()\n     @classmethod\n     def register_serializer(cls, type_, serializer):\n", "normalized_occurrence": 1}
