{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8621", "model_patch": "diff --git a/sphinx/roles.py b/sphinx/roles.py\nindex 307975f..629f606 100644\n--- a/sphinx/roles.py\n+++ b/sphinx/roles.py\n@@ -32,10 +32,32 @@ if False:\n     from sphinx.environment import BuildEnvironment\n \n \n+import re\n+from docutils import nodes\n+from docutils.parsers.rst import roles\n+from sphinx import addnodes\n+\n+def kbd_role(name, rawtext, text, lineno, inliner, options={}, content=[]):\n+    keys = re.split(r'(?<!\\\\)[-+^]', text)\n+    separator = re.search(r'[-+^]', text)\n+\n+    if separator:\n+        separator = separator.group(0)\n+    else:\n+        separator = ''\n+\n+    node = nodes.inline(rawtext, '', classes=['kbd'])\n+    for i, key in enumerate(keys):\n+        if i > 0:\n+            node += nodes.Text(separator)\n+        node += nodes.inline(key.strip(), key.strip(), classes=['kbd'])\n+\n+    return [node], []\n+\n generic_docroles = {\n     'command': addnodes.literal_strong,\n     'dfn': nodes.emphasis,\n-    'kbd': nodes.literal,\n+    'kbd': kbd_role,\n     'mailheader': addnodes.literal_emphasis,\n     'makevar': addnodes.literal_strong,\n     'manpage': addnodes.manpage,\n", "occurrence": 1, "normalized_patch": "--- a/sphinx/roles.py\n+++ b/sphinx/roles.py\n-generic_docroles = {'command': addnodes.literal_strong, 'dfn': nodes.emphasis, 'kbd': nodes.literal, 'mailheader': addnodes.literal_emphasis, 'makevar': addnodes.literal_strong, 'manpage': addnodes.manpage, 'mimetype': addnodes.literal_emphasis, 'newsgroup': addnodes.literal_emphasis, 'program': addnodes.literal_strong, 'regexp': nodes.literal}\n+import re\n+from docutils import nodes\n+from docutils.parsers.rst import roles\n+from sphinx import addnodes\n+def kbd_role(name, rawtext, text, lineno, inliner, options={}, content=[]):\n+    keys = re.split('(?<!\\\\\\\\)[-+^]', text)\n+    separator = re.search('[-+^]', text)\n+    if separator:\n+        separator = separator.group(0)\n+    else:\n+        separator = ''\n+    node = nodes.inline(rawtext, '', classes=['kbd'])\n+    for i, key in enumerate(keys):\n+        if i > 0:\n+            node += nodes.Text(separator)\n+        node += nodes.inline(key.strip(), key.strip(), classes=['kbd'])\n+    return ([node], [])\n+generic_docroles = {'command': addnodes.literal_strong, 'dfn': nodes.emphasis, 'kbd': kbd_role, 'mailheader': addnodes.literal_emphasis, 'makevar': addnodes.literal_strong, 'manpage': addnodes.manpage, 'mimetype': addnodes.literal_emphasis, 'newsgroup': addnodes.literal_emphasis, 'program': addnodes.literal_strong, 'regexp': nodes.literal}", "normalized_occurrence": 1}
