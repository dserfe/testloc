{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-10908", "model_patch": "diff --git a/sklearn/feature_extraction/text.py b/sklearn/feature_extraction/text.py\nindex 7e240fc..dc85951 100644\n--- a/sklearn/feature_extraction/text.py\n+++ b/sklearn/feature_extraction/text.py\n@@ -293,15 +293,16 @@ class VectorizerMixin(object):\n                         raise ValueError(msg)\n             if not vocabulary:\n                 raise ValueError(\"empty vocabulary passed to fit\")\n-            self.fixed_vocabulary_ = True\n-            self.vocabulary_ = dict(vocabulary)\n+            self.fixed_vocabulary_ = bool(vocabulary)\n+            self.vocabulary_ = dict(vocabulary) if vocabulary else None\n         else:\n             self.fixed_vocabulary_ = False\n \n     def _check_vocabulary(self):\n         \"\"\"Check if vocabulary is empty or missing (not fit-ed)\"\"\"\n-        msg = \"%(name)s - Vocabulary wasn't fitted.\"\n-        check_is_fitted(self, 'vocabulary_', msg=msg),\n+        if not hasattr(self, 'vocabulary_') and not setattr(self, 'fixed_vocabulary_', False):\n+            msg = \"%(name)s - Vocabulary wasn't fitted.\"\n+            check_is_fitted(self, 'vocabulary_', msg=msg)\n \n         if len(self.vocabulary_) == 0:\n             raise ValueError(\"Vocabulary is empty\")\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/feature_extraction/text.py b/sklearn/feature_extraction/text.py\nindex 583049b..5b04a6a 100644\n--- a/sklearn/feature_extraction/text.py\n+++ b/sklearn/feature_extraction/text.py\n@@ -159,13 +159,14 @@ class VectorizerMixin(object):\n                         raise ValueError(msg)\n             if not vocabulary:\n                 raise ValueError('empty vocabulary passed to fit')\n-            self.fixed_vocabulary_ = True\n-            self.vocabulary_ = dict(vocabulary)\n+            self.fixed_vocabulary_ = bool(vocabulary)\n+            self.vocabulary_ = dict(vocabulary) if vocabulary else None\n         else:\n             self.fixed_vocabulary_ = False\n     def _check_vocabulary(self):\n-        msg = \"%(name)s - Vocabulary wasn't fitted.\"\n-        (check_is_fitted(self, 'vocabulary_', msg=msg),)\n+        if not hasattr(self, 'vocabulary_') and (not setattr(self, 'fixed_vocabulary_', False)):\n+            msg = \"%(name)s - Vocabulary wasn't fitted.\"\n+            check_is_fitted(self, 'vocabulary_', msg=msg)\n         if len(self.vocabulary_) == 0:\n             raise ValueError('Vocabulary is empty')\n     def _validate_params(self):\n", "normalized_occurrence": 1}
