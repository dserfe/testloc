{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-6599", "model_patch": "diff --git a/xarray/core/computation.py b/xarray/core/computation.py\nindex 5a38507..ca551a6 100644\n--- a/xarray/core/computation.py\n+++ b/xarray/core/computation.py\n@@ -1867,7 +1867,7 @@ def polyval(coord: Dataset, coeffs: Dataset, degree_dim: Hashable) -> Dataset:\n \n \n def polyval(\n-    coord: Dataset | DataArray,\n+    coord: DataArray,\n     coeffs: Dataset | DataArray,\n     degree_dim: Hashable = \"degree\",\n ) -> Dataset | DataArray:\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/computation.py b/xarray/core/computation.py\nindex 2633eea..03530ab 100644\n--- a/xarray/core/computation.py\n+++ b/xarray/core/computation.py\n@@ -542,7 +542,7 @@ def polyval(coord: Dataset, coeffs: DataArray, degree_dim: Hashable) -> Dataset:\n @overload\n def polyval(coord: Dataset, coeffs: Dataset, degree_dim: Hashable) -> Dataset:\n     ...\n-def polyval(coord: Dataset | DataArray, coeffs: Dataset | DataArray, degree_dim: Hashable='degree') -> Dataset | DataArray:\n+def polyval(coord: DataArray, coeffs: Dataset | DataArray, degree_dim: Hashable='degree') -> Dataset | DataArray:\n     if degree_dim not in coeffs._indexes:\n         raise ValueError(f'Dimension `{degree_dim}` should be a coordinate variable with labels.')\n     if not np.issubdtype(coeffs[degree_dim].dtype, int):\n", "normalized_occurrence": 1}
