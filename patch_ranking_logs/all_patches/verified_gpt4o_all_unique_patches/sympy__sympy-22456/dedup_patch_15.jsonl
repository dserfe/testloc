{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-22456", "model_patch": "diff --git a/sympy/codegen/ast.py b/sympy/codegen/ast.py\nindex 7a7d795..72f7a29 100644\n--- a/sympy/codegen/ast.py\n+++ b/sympy/codegen/ast.py\n@@ -895,7 +895,7 @@ class String(Token):\n \n     \"\"\"\n     __slots__ = ('text',)\n-    not_in_args = ['text']\n+    not_in_args = []\n     is_Atom = True\n \n     @classmethod\n@@ -904,6 +904,11 @@ class String(Token):\n             raise TypeError(\"Argument text is not a string type.\")\n         return text\n \n+    def __new__(cls, text, **kwargs):\n+        obj = Token.__new__(cls, text, **kwargs)\n+        obj.text = cls._construct_text(text)\n+        return obj\n+\n     def _sympystr(self, printer, *args, **kwargs):\n         return self.text\n \n", "occurrence": 1, "normalized_patch": "--- a/sympy/codegen/ast.py\n+++ b/sympy/codegen/ast.py\n-    not_in_args = ['text']\n+    not_in_args = []\n+    def __new__(cls, text, **kwargs):\n+        obj = Token.__new__(cls, text, **kwargs)\n+        obj.text = cls._construct_text(text)\n+        return obj\n+", "normalized_occurrence": 1}
