{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7168", "model_patch": "diff --git a/src/_pytest/_io/saferepr.py b/src/_pytest/_io/saferepr.py\nindex adc421d..f340965 100644\n--- a/src/_pytest/_io/saferepr.py\n+++ b/src/_pytest/_io/saferepr.py\n@@ -43,20 +43,18 @@ class SafeRepr(reprlib.Repr):\n         self.maxsize = maxsize\n \n     def repr(self, x: Any) -> str:\n+        # safeguard to ensure that repr doesn't fail (issue #364)\n         try:\n             s = super().repr(x)\n-        except (KeyboardInterrupt, SystemExit):\n-            raise\n-        except BaseException as exc:\n+        except Exception as exc:\n             s = _format_repr_exception(exc, x)\n         return _ellipsize(s, self.maxsize)\n \n     def repr_instance(self, x: Any, level: int) -> str:\n+        # safeguard to ensure that repr doesn't fail (issue #364)\n         try:\n             s = repr(x)\n-        except (KeyboardInterrupt, SystemExit):\n-            raise\n-        except BaseException as exc:\n+        except Exception as exc:\n             s = _format_repr_exception(exc, x)\n         return _ellipsize(s, self.maxsize)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/_io/saferepr.py b/src/_pytest/_io/saferepr.py\nindex 789deb9..83d454f 100644\n--- a/src/_pytest/_io/saferepr.py\n+++ b/src/_pytest/_io/saferepr.py\n@@ -30,17 +30,13 @@ class SafeRepr(reprlib.Repr):\n     def repr(self, x: Any) -> str:\n         try:\n             s = super().repr(x)\n-        except (KeyboardInterrupt, SystemExit):\n-            raise\n-        except BaseException as exc:\n+        except Exception as exc:\n             s = _format_repr_exception(exc, x)\n         return _ellipsize(s, self.maxsize)\n     def repr_instance(self, x: Any, level: int) -> str:\n         try:\n             s = repr(x)\n-        except (KeyboardInterrupt, SystemExit):\n-            raise\n-        except BaseException as exc:\n+        except Exception as exc:\n             s = _format_repr_exception(exc, x)\n         return _ellipsize(s, self.maxsize)\n def safeformat(obj: Any) -> str:\n", "normalized_occurrence": 1}
