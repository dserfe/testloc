{"model_name_or_path": "agentless", "instance_id": "django__django-14122", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 325a36c..66caf23 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -2035,6 +2035,12 @@ class Query(BaseExpression):\n                     alias = None\n                 group_by_cols = annotation.get_group_by_cols(alias=alias)\n                 group_by.extend(group_by_cols)\n+        # Exclude Meta.ordering fields from group_by\n+        ordering = self.order_by if self.order_by else self.get_meta().ordering\n+        if ordering:\n+            ordering = {expr for expr in ordering if isinstance(expr, str)}\n+            group_by = [expr for expr in group_by if str(expr) not in ordering]\n+        \n         self.group_by = tuple(group_by)\n \n     def add_select_related(self, fields):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 9216162..371911a 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1102,6 +1102,10 @@ class Query(BaseExpression):\n                     alias = None\n                 group_by_cols = annotation.get_group_by_cols(alias=alias)\n                 group_by.extend(group_by_cols)\n+        ordering = self.order_by if self.order_by else self.get_meta().ordering\n+        if ordering:\n+            ordering = {expr for expr in ordering if isinstance(expr, str)}\n+            group_by = [expr for expr in group_by if str(expr) not in ordering]\n         self.group_by = tuple(group_by)\n     def add_select_related(self, fields):\n         if isinstance(self.select_related, bool):\n", "normalized_occurrence": 1}
