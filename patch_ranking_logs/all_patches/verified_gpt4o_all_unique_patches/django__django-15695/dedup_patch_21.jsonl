{"model_name_or_path": "agentless", "instance_id": "django__django-15695", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex b086232..6ef59f7 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -976,6 +976,12 @@ class RenameIndex(IndexOperation):\n         )\n         self.new_name, self.old_name = self.old_name, self.new_name\n \n+        if not self.old_name:\n+            # Restore the old auto-generated name for unnamed index before moving backwards\n+            to_model_state = to_state.models[app_label, self.model_name_lower]\n+            old_index = to_model_state.get_index_by_name(self.new_name)\n+            old_index.name = self.old_name\n+        \n         self.database_forwards(app_label, schema_editor, from_state, to_state)\n \n         self.new_name_lower, self.old_name_lower = (\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 87ad28e..c4c0803 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -439,6 +439,10 @@ class RenameIndex(IndexOperation):\n             return\n         self.new_name_lower, self.old_name_lower = (self.old_name_lower, self.new_name_lower)\n         self.new_name, self.old_name = (self.old_name, self.new_name)\n+        if not self.old_name:\n+            to_model_state = to_state.models[app_label, self.model_name_lower]\n+            old_index = to_model_state.get_index_by_name(self.new_name)\n+            old_index.name = self.old_name\n         self.database_forwards(app_label, schema_editor, from_state, to_state)\n         self.new_name_lower, self.old_name_lower = (self.old_name_lower, self.new_name_lower)\n         self.new_name, self.old_name = (self.old_name, self.new_name)\n", "normalized_occurrence": 1}
