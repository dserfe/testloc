{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-14096", "model_patch": "diff --git a/astropy/coordinates/sky_coordinate.py b/astropy/coordinates/sky_coordinate.py\nindex f158027..4f472bb 100644\n--- a/astropy/coordinates/sky_coordinate.py\n+++ b/astropy/coordinates/sky_coordinate.py\n@@ -895,9 +895,14 @@ class SkyCoord(ShapedLikeNDArray):\n                 return self.transform_to(attr)\n \n         # Fail\n-        raise AttributeError(\n-            f\"'{self.__class__.__name__}' object has no attribute '{attr}'\"\n-        )\n+        if attr in self.__dict__ and isinstance(self.__dict__[attr], property):\n+            raise AttributeError(\n+                f\"'{self.__class__.__name__}' object has no attribute '{attr}' attribute, but it has a property with that name. Please check the property for bugs.\"\n+            )\n+        else:\n+            raise AttributeError(\n+                f\"'{self.__class__.__name__}' object has no attribute '{attr}'\"\n+            )\n \n     def __setattr__(self, attr, val):\n         # This is to make anything available through __getattr__ immutable\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/coordinates/sky_coordinate.py b/astropy/coordinates/sky_coordinate.py\nindex 7fb9e10..dff3b85 100644\n--- a/astropy/coordinates/sky_coordinate.py\n+++ b/astropy/coordinates/sky_coordinate.py\n@@ -275,7 +275,10 @@ class SkyCoord(ShapedLikeNDArray):\n             frame_cls = frame_transform_graph.lookup_name(attr)\n             if frame_cls is not None and self.frame.is_transformable_to(frame_cls):\n                 return self.transform_to(attr)\n-        raise AttributeError(f\"'{self.__class__.__name__}' object has no attribute '{attr}'\")\n+        if attr in self.__dict__ and isinstance(self.__dict__[attr], property):\n+            raise AttributeError(f\"'{self.__class__.__name__}' object has no attribute '{attr}' attribute, but it has a property with that name. Please check the property for bugs.\")\n+        else:\n+            raise AttributeError(f\"'{self.__class__.__name__}' object has no attribute '{attr}'\")\n     def __setattr__(self, attr, val):\n         if '_sky_coord_frame' in self.__dict__:\n             if self._is_name(attr):\n", "normalized_occurrence": 1}
