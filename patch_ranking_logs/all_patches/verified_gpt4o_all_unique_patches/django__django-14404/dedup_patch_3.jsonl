{"model_name_or_path": "agentless", "instance_id": "django__django-14404", "model_patch": "diff --git a/django/http/request.py b/django/http/request.py\nindex 90884ef..9ca48fc 100644\n--- a/django/http/request.py\n+++ b/django/http/request.py\n@@ -146,7 +146,8 @@ class HttpRequest:\n         return self._get_full_path(self.path, force_append_slash)\n \n     def get_full_path_info(self, force_append_slash=False):\n-        return self._get_full_path(self.path_info, force_append_slash)\n+        script_name = settings.FORCE_SCRIPT_NAME or ''\n+        return self._get_full_path(script_name + self.path_info, force_append_slash)\n \n     def _get_full_path(self, path, force_append_slash):\n         # RFC 3986 requires query string arguments to be in the ASCII range.\n", "occurrence": 3, "normalized_patch": "diff --git a/django/http/request.py b/django/http/request.py\nindex 38fde6b..fc80756 100644\n--- a/django/http/request.py\n+++ b/django/http/request.py\n@@ -92,7 +92,8 @@ class HttpRequest:\n     def get_full_path(self, force_append_slash=False):\n         return self._get_full_path(self.path, force_append_slash)\n     def get_full_path_info(self, force_append_slash=False):\n-        return self._get_full_path(self.path_info, force_append_slash)\n+        script_name = settings.FORCE_SCRIPT_NAME or ''\n+        return self._get_full_path(script_name + self.path_info, force_append_slash)\n     def _get_full_path(self, path, force_append_slash):\n         return '%s%s%s' % (escape_uri_path(path), '/' if force_append_slash and (not path.endswith('/')) else '', '?' + iri_to_uri(self.META.get('QUERY_STRING', '')) if self.META.get('QUERY_STRING', '') else '')\n     def get_signed_cookie(self, key, default=RAISE_ERROR, salt='', max_age=None):\n", "normalized_occurrence": 3}
