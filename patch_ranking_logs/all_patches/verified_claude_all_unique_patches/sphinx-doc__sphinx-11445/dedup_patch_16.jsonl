{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-11445", "model_patch": "diff --git a/sphinx/environment/collectors/title.py b/sphinx/environment/collectors/title.py\nindex ec97f42..773ab91 100644\n--- a/sphinx/environment/collectors/title.py\n+++ b/sphinx/environment/collectors/title.py\n@@ -38,8 +38,22 @@ class TitleCollector(EnvironmentCollector):\n             longtitlenode += nodes.Text(doctree['title'])\n         # look for first section title and use that as the title\n         for node in doctree.findall(nodes.section):\n+            title = node[0]\n+            # Create a deep copy to avoid modifying the original node\n+            title_copy = title.deepcopy()\n+            # Resolve all pending_xref nodes (including domain directives)\n+            for pending in title_copy.findall(addnodes.pending_xref):\n+                if pending.get('refdomain'):\n+                    domain = app.env.get_domain(pending.get('refdomain'))\n+                    if domain:\n+                        contnode = pending[0].deepcopy()\n+                        newnode = domain.resolve_xref(app.env, app.env.docname, app.builder,\n+                                                    pending.get('reftype', ''), pending.get('reftarget', ''),\n+                                                    pending, contnode)\n+                        if newnode:\n+                            pending.replace_self(newnode)\n             visitor = SphinxContentsFilter(doctree)\n-            node[0].walkabout(visitor)\n+            title_copy.walkabout(visitor)\n             titlenode += visitor.get_entry_text()\n             break\n         else:\n@@ -56,4 +70,4 @@ def setup(app: Sphinx) -> dict[str, Any]:\n         'version': 'builtin',\n         'parallel_read_safe': True,\n         'parallel_write_safe': True,\n-    }\n+    }\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/environment/collectors/title.py b/sphinx/environment/collectors/title.py\nindex 90c3ce6..5d4c25f 100644\n--- a/sphinx/environment/collectors/title.py\n+++ b/sphinx/environment/collectors/title.py\n@@ -20,8 +20,18 @@ class TitleCollector(EnvironmentCollector):\n             longtitlenode = nodes.title()\n             longtitlenode += nodes.Text(doctree['title'])\n         for node in doctree.findall(nodes.section):\n+            title = node[0]\n+            title_copy = title.deepcopy()\n+            for pending in title_copy.findall(addnodes.pending_xref):\n+                if pending.get('refdomain'):\n+                    domain = app.env.get_domain(pending.get('refdomain'))\n+                    if domain:\n+                        contnode = pending[0].deepcopy()\n+                        newnode = domain.resolve_xref(app.env, app.env.docname, app.builder, pending.get('reftype', ''), pending.get('reftarget', ''), pending, contnode)\n+                        if newnode:\n+                            pending.replace_self(newnode)\n             visitor = SphinxContentsFilter(doctree)\n-            node[0].walkabout(visitor)\n+            title_copy.walkabout(visitor)\n             titlenode += visitor.get_entry_text()\n             break\n         else:\n", "normalized_occurrence": 1}
