{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-26208", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex f9613d3..a1cc4b0 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -4410,6 +4410,8 @@ class _AxesBase(martist.Artist):\n                     [0, 0, 1, 1], self.transAxes))\n         self.set_adjustable('datalim')\n         twin.set_adjustable('datalim')\n+        # Initialize twin's dataLim independently\n+        twin.dataLim = mtransforms.Bbox.null()\n         self._twinned_axes.join(self, twin)\n         return twin\n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex eb9da84..935a47b 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1690,6 +1690,7 @@ class _AxesBase(martist.Artist):\n             twin = self.figure.add_axes(self.get_position(True), *args, **kwargs, axes_locator=_TransformedBoundsLocator([0, 0, 1, 1], self.transAxes))\n         self.set_adjustable('datalim')\n         twin.set_adjustable('datalim')\n+        twin.dataLim = mtransforms.Bbox.null()\n         self._twinned_axes.join(self, twin)\n         return twin\n     def twinx(self):\n", "normalized_occurrence": 1}
