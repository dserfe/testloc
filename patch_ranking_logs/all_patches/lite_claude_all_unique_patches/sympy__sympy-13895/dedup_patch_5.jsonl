{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13895", "model_patch": "diff --git a/sympy/core/power.py b/sympy/core/power.py\nindex 53e26ca..307c552 100644\n--- a/sympy/core/power.py\n+++ b/sympy/core/power.py\n@@ -266,6 +266,8 @@ class Pow(Expr):\n             s = 1\n         elif b.is_polar:  # e.g. exp_polar, besselj, var('p', polar=True)...\n             s = 1\n+        elif b.is_negative and not other.is_integer:\n+            return exp(other * e * (log(abs(b)) + S.Pi*S.ImaginaryUnit))\n         elif e.is_real is not None:\n             # helper functions ===========================\n             def _half(e):\n@@ -1581,4 +1583,4 @@ class Pow(Expr):\n from .add import Add\n from .numbers import Integer\n from .mul import Mul, _keep_coeff\n-from .symbol import Symbol, Dummy, symbols\n+from .symbol import Symbol, Dummy, symbols\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/power.py b/sympy/core/power.py\nindex 7698f23..8f2932a 100644\n--- a/sympy/core/power.py\n+++ b/sympy/core/power.py\n@@ -130,6 +130,8 @@ class Pow(Expr):\n             s = 1\n         elif b.is_polar:\n             s = 1\n+        elif b.is_negative and (not other.is_integer):\n+            return exp(other * e * (log(abs(b)) + S.Pi * S.ImaginaryUnit))\n         elif e.is_real is not None:\n             def _half(e):\n                 if getattr(e, 'q', None) == 2:\n", "normalized_occurrence": 1}
