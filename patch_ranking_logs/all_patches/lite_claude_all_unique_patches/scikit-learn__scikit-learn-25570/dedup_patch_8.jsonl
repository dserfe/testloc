{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-25570", "model_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex 36a655a..3433f50 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -597,7 +597,8 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n                 # so it can be used during transform for set_output.\n                 self._name_to_fitted_passthrough[name] = func_transformer\n             elif _is_empty_column_selection(column):\n-                trans = old\n+                # Handle empty column selection as a fitted transformer\n+                trans = next(fitted_transformers)\n             else:\n                 trans = next(fitted_transformers)\n             transformers_.append((name, trans, column))\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex 03f51bb..929e925 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -160,7 +160,7 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n                 trans = 'passthrough'\n                 self._name_to_fitted_passthrough[name] = func_transformer\n             elif _is_empty_column_selection(column):\n-                trans = old\n+                trans = next(fitted_transformers)\n             else:\n                 trans = next(fitted_transformers)\n             transformers_.append((name, trans, column))\n", "normalized_occurrence": 1}
