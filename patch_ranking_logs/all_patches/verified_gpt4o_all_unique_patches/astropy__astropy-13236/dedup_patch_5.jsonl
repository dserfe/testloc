{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-13236", "model_patch": "diff --git a/astropy/table/table.py b/astropy/table/table.py\nindex 39b0202..2898603 100644\n--- a/astropy/table/table.py\n+++ b/astropy/table/table.py\n@@ -1243,6 +1243,11 @@ class Table:\n         # mixin class\n         if (not isinstance(data, Column) and not data_is_mixin\n                 and isinstance(data, np.ndarray) and len(data.dtype) > 1):\n+            warnings.warn(\n+                \"In future (5.2), structured array will be added as a Column. \"\n+                \"Wrap data in Column to avoid this warning.\",\n+                FutureWarning\n+            )\n             data = data.view(NdarrayMixin)\n             data_is_mixin = True\n \n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/table/table.py b/astropy/table/table.py\nindex c25424c..702d625 100644\n--- a/astropy/table/table.py\n+++ b/astropy/table/table.py\n@@ -892,6 +892,7 @@ class Table:\n                 fully_qualified_name = original_data.__class__.__module__ + '.' + original_data.__class__.__name__\n                 raise TypeError(f'Mixin handler for object of type {fully_qualified_name} did not return a valid mixin column')\n         if not isinstance(data, Column) and (not data_is_mixin) and isinstance(data, np.ndarray) and (len(data.dtype) > 1):\n+            warnings.warn('In future (5.2), structured array will be added as a Column. Wrap data in Column to avoid this warning.', FutureWarning)\n             data = data.view(NdarrayMixin)\n             data_is_mixin = True\n         if not name:\n", "normalized_occurrence": 1}
