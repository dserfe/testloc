{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-25638", "model_patch": "diff --git a/sklearn/utils/multiclass.py b/sklearn/utils/multiclass.py\nindex db3f82e..66f93fc 100644\n--- a/sklearn/utils/multiclass.py\n+++ b/sklearn/utils/multiclass.py\n@@ -340,6 +340,23 @@ def type_of_target(y, input_name=\"\"):\n             return \"binary\"  # []\n         # 2-D empty array: [[]]\n         return \"unknown\"\n+    # Handle pandas nullable dtypes\n+    if hasattr(y, \"dtype\") and hasattr(y.dtype, \"name\"):\n+        try:\n+            from pandas.api.types import is_bool_dtype, is_float_dtype, is_integer_dtype\n+            pd_dtype = y.dtype\n+            if (is_bool_dtype(pd_dtype) or is_float_dtype(pd_dtype) or \n+                is_integer_dtype(pd_dtype)):\n+                # Convert to numpy array with appropriate dtype\n+                if is_bool_dtype(pd_dtype):\n+                    y = xp.asarray(y, dtype=bool)\n+                elif is_float_dtype(pd_dtype):\n+                    y = xp.asarray(y, dtype=float)\n+                elif is_integer_dtype(pd_dtype):\n+                    y = xp.asarray(y, dtype=int)\n+        except ImportError:\n+            pass\n+\n     if not issparse(y) and y.dtype == object and not isinstance(y.flat[0], str):\n         # [obj_1] and not [\"label_1\"]\n         return \"unknown\"\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/utils/multiclass.py b/sklearn/utils/multiclass.py\nindex dee4b2a..bfba73a 100644\n--- a/sklearn/utils/multiclass.py\n+++ b/sklearn/utils/multiclass.py\n@@ -91,6 +91,19 @@ def type_of_target(y, input_name=''):\n         if y.ndim == 1:\n             return 'binary'\n         return 'unknown'\n+    if hasattr(y, 'dtype') and hasattr(y.dtype, 'name'):\n+        try:\n+            from pandas.api.types import is_bool_dtype, is_float_dtype, is_integer_dtype\n+            pd_dtype = y.dtype\n+            if is_bool_dtype(pd_dtype) or is_float_dtype(pd_dtype) or is_integer_dtype(pd_dtype):\n+                if is_bool_dtype(pd_dtype):\n+                    y = xp.asarray(y, dtype=bool)\n+                elif is_float_dtype(pd_dtype):\n+                    y = xp.asarray(y, dtype=float)\n+                elif is_integer_dtype(pd_dtype):\n+                    y = xp.asarray(y, dtype=int)\n+        except ImportError:\n+            pass\n     if not issparse(y) and y.dtype == object and (not isinstance(y.flat[0], str)):\n         return 'unknown'\n     if y.ndim == 2 and y.shape[1] > 1:\n", "normalized_occurrence": 1}
