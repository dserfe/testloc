{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-11445", "model_patch": "diff --git a/sphinx/util/rst.py b/sphinx/util/rst.py\nindex 83e696f..84d3f2a 100644\n--- a/sphinx/util/rst.py\n+++ b/sphinx/util/rst.py\n@@ -74,6 +74,10 @@ def default_role(docname: str, name: str) -> Generator[None, None, None]:\n \n     docutils.unregister_role('')\n \n+    # Ensure proper processing of domain directives in headings\n+    from sphinx.roles import XRefRole\n+    docutils.register_role('mod', XRefRole(nodeclass=nodes.strong))\n+\n \n def prepend_prolog(content: StringList, prolog: str) -> None:\n     \"\"\"Prepend a string to content body as prolog.\"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/util/rst.py b/sphinx/util/rst.py\nindex 911aea2..777b5b6 100644\n--- a/sphinx/util/rst.py\n+++ b/sphinx/util/rst.py\n@@ -49,6 +49,8 @@ def default_role(docname: str, name: str) -> Generator[None, None, None]:\n             logger.warning(__('default role %s not found'), name, location=docname)\n     yield\n     docutils.unregister_role('')\n+    from sphinx.roles import XRefRole\n+    docutils.register_role('mod', XRefRole(nodeclass=nodes.strong))\n def prepend_prolog(content: StringList, prolog: str) -> None:\n     if prolog:\n         pos = 0\n", "normalized_occurrence": 1}
