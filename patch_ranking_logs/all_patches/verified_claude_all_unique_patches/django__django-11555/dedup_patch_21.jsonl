{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11555", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 291f673..b8e5e34 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -269,6 +269,8 @@ class SQLCompiler:\n         elif self.query.get_meta().ordering:\n             ordering = self.query.get_meta().ordering\n             self._meta_ordering = ordering\n+            # Convert ordering to list as Meta.ordering might be a tuple\n+            ordering = list(ordering)\n         else:\n             ordering = []\n         if self.query.standard_ordering:\n@@ -278,7 +280,8 @@ class SQLCompiler:\n \n         order_by = []\n         for field in ordering:\n-            if hasattr(field, 'resolve_expression'):\n+            # Handle both direct expression objects and descriptors with resolve_expression\n+            if hasattr(field, 'resolve_expression') or hasattr(field, 'asc'):\n                 if isinstance(field, Value):\n                     # output_field must be resolved for constants.\n                     field = Cast(field, field.output_field)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 541feee..19b4e01 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -135,6 +135,7 @@ class SQLCompiler:\n         elif self.query.get_meta().ordering:\n             ordering = self.query.get_meta().ordering\n             self._meta_ordering = ordering\n+            ordering = list(ordering)\n         else:\n             ordering = []\n         if self.query.standard_ordering:\n@@ -143,7 +144,7 @@ class SQLCompiler:\n             asc, desc = ORDER_DIR['DESC']\n         order_by = []\n         for field in ordering:\n-            if hasattr(field, 'resolve_expression'):\n+            if hasattr(field, 'resolve_expression') or hasattr(field, 'asc'):\n                 if isinstance(field, Value):\n                     field = Cast(field, field.output_field)\n                 if not isinstance(field, OrderBy):\n", "normalized_occurrence": 1}
