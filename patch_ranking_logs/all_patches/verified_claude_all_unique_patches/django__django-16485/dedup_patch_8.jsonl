{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16485", "model_patch": "diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py\nindex edd25c0..5e456b3 100644\n--- a/django/template/defaultfilters.py\n+++ b/django/template/defaultfilters.py\n@@ -181,9 +181,13 @@ def floatformat(text, arg=-1):\n     exp = Decimal(1).scaleb(-abs(p))\n     # Set the precision high enough to avoid an exception (#15789).\n     tupl = d.as_tuple()\n-    units = len(tupl[1])\n-    units += -tupl[2] if m else tupl[2]\n-    prec = abs(p) + units + 1\n+    if not d and p >= 0:\n+        # Handle zero special case\n+        prec = abs(p) + 1\n+    else:\n+        units = len(tupl[1])\n+        units += -tupl[2] if m else tupl[2]\n+        prec = abs(p) + units + 1\n \n     # Avoid conversion to scientific notation by accessing `sign`, `digits`,\n     # and `exponent` from Decimal.as_tuple() directly.\n", "occurrence": 1, "normalized_patch": "diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py\nindex 7f9a709..66ba9d9 100644\n--- a/django/template/defaultfilters.py\n+++ b/django/template/defaultfilters.py\n@@ -85,9 +85,12 @@ def floatformat(text, arg=-1):\n         return mark_safe(formats.number_format('%d' % int(d), 0, use_l10n=use_l10n, force_grouping=force_grouping))\n     exp = Decimal(1).scaleb(-abs(p))\n     tupl = d.as_tuple()\n-    units = len(tupl[1])\n-    units += -tupl[2] if m else tupl[2]\n-    prec = abs(p) + units + 1\n+    if not d and p >= 0:\n+        prec = abs(p) + 1\n+    else:\n+        units = len(tupl[1])\n+        units += -tupl[2] if m else tupl[2]\n+        prec = abs(p) + units + 1\n     rounded_d = d.quantize(exp, ROUND_HALF_UP, Context(prec=prec))\n     sign, digits, exponent = rounded_d.as_tuple()\n     digits = [str(digit) for digit in reversed(digits)]\n", "normalized_occurrence": 1}
