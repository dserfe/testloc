{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13031", "model_patch": "diff --git a/sympy/matrices/dense.py b/sympy/matrices/dense.py\nindex 7b0ad01..4fcebab 100644\n--- a/sympy/matrices/dense.py\n+++ b/sympy/matrices/dense.py\n@@ -157,8 +157,11 @@ class DenseMatrix(MatrixBase):\n         mat = self._mat\n         cols = self.cols\n         indices = (i * cols + j for i in rowsList for j in colsList)\n-        return self._new(len(rowsList), len(colsList),\n-                         list(mat[i] for i in indices), copy=False)\n+        if len(rowsList) == 0 or len(colsList) == 0:\n+            return self._new(len(rowsList), len(colsList), [], copy=False)\n+        else:\n+            return self._new(len(rowsList), len(colsList),\n+                             list(mat[i] for i in indices), copy=False)\n \n     def _eval_matrix_mul(self, other):\n         from sympy import Add\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/dense.py b/sympy/matrices/dense.py\nindex edd691e..e0540cd 100644\n--- a/sympy/matrices/dense.py\n+++ b/sympy/matrices/dense.py\n@@ -83,7 +83,10 @@ class DenseMatrix(MatrixBase):\n         mat = self._mat\n         cols = self.cols\n         indices = (i * cols + j for i in rowsList for j in colsList)\n-        return self._new(len(rowsList), len(colsList), list((mat[i] for i in indices)), copy=False)\n+        if len(rowsList) == 0 or len(colsList) == 0:\n+            return self._new(len(rowsList), len(colsList), [], copy=False)\n+        else:\n+            return self._new(len(rowsList), len(colsList), list((mat[i] for i in indices)), copy=False)\n     def _eval_matrix_mul(self, other):\n         from sympy import Add\n         self_rows, self_cols = (self.rows, self.cols)\n", "normalized_occurrence": 1}
