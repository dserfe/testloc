{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-12419", "model_patch": "diff --git a/sympy/concrete/summations.py b/sympy/concrete/summations.py\nindex b4a2caa..354e4f9 100644\n--- a/sympy/concrete/summations.py\n+++ b/sympy/concrete/summations.py\n@@ -846,6 +846,7 @@ def telescopic(L, R, limits):\n def eval_sum(f, limits):\n     from sympy.concrete.delta import deltasummation, _has_simple_delta\n     from sympy.functions import KroneckerDelta\n+    from sympy.matrices.expressions.matexpr import MatrixElement\n \n     (i, a, b) = limits\n     if f is S.Zero:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/concrete/summations.py b/sympy/concrete/summations.py\nindex 3200d91..4d3f593 100644\n--- a/sympy/concrete/summations.py\n+++ b/sympy/concrete/summations.py\n@@ -325,6 +325,7 @@ def telescopic(L, R, limits):\n def eval_sum(f, limits):\n     from sympy.concrete.delta import deltasummation, _has_simple_delta\n     from sympy.functions import KroneckerDelta\n+    from sympy.matrices.expressions.matexpr import MatrixElement\n     i, a, b = limits\n     if f is S.Zero:\n         return S.Zero\n", "normalized_occurrence": 1}
