{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-17655", "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex a708f18..30d65c7 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -224,7 +224,18 @@ class Point(GeometryEntity):\n     def __contains__(self, item):\n         return item in self.args\n \n-    def __div__(self, divisor):\n+    def __rmul__(self, other):\n+        \"\"\"Right multiplication by a scalar.\"\"\"\n+        try:\n+            other = sympify(other)\n+        except SympifyError:\n+            return NotImplemented\n+\n+        if not isinstance(other, (Rational, Integer, Float, Number)):\n+            return NotImplemented\n+\n+        coords = [simplify(other * coord) for coord in self.args]\n+        return Point(coords, evaluate=False)\n         \"\"\"Divide point's coordinates by a factor.\"\"\"\n         divisor = sympify(divisor)\n         coords = [simplify(x/divisor) for x in self.args]\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex e45d95f..56b0068 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -70,7 +70,15 @@ class Point(GeometryEntity):\n         return Point(coords, evaluate=False)\n     def __contains__(self, item):\n         return item in self.args\n-    def __div__(self, divisor):\n+    def __rmul__(self, other):\n+        try:\n+            other = sympify(other)\n+        except SympifyError:\n+            return NotImplemented\n+        if not isinstance(other, (Rational, Integer, Float, Number)):\n+            return NotImplemented\n+        coords = [simplify(other * coord) for coord in self.args]\n+        return Point(coords, evaluate=False)\n         divisor = sympify(divisor)\n         coords = [simplify(x / divisor) for x in self.args]\n         return Point(coords, evaluate=False)\n", "normalized_occurrence": 1}
