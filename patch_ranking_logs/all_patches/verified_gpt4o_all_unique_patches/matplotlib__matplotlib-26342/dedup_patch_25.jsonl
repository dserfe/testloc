{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-26342", "model_patch": "diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py\nindex db3f45f..bfffc1e 100644\n--- a/lib/matplotlib/contour.py\n+++ b/lib/matplotlib/contour.py\n@@ -1329,7 +1329,16 @@ class ContourSet(ContourLabeler, mcoll.Collection):\n                 raise ValueError(\"Unrecognized type for linestyles kwarg\")\n         return tlinestyles\n \n-    def _find_nearest_contour(self, xy, indices=None):\n+    def set_paths(self, paths):\n+        \"\"\"\n+        Set the paths for the ContourSet.\n+\n+        Parameters\n+        ----------\n+        paths : list of `Path` objects\n+            The paths to set for the ContourSet.\n+        \"\"\"\n+        self._paths = paths\n         \"\"\"\n         Find the point in the unfilled contour plot that is closest (in screen\n         space) to point *xy*.\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py\nindex 992f0d3..bd322b9 100644\n--- a/lib/matplotlib/contour.py\n+++ b/lib/matplotlib/contour.py\n@@ -611,7 +611,8 @@ class ContourSet(ContourLabeler, mcoll.Collection):\n         else:\n             raise ValueError('Unrecognized type for linestyles kwarg')\n         return tlinestyles\n-    def _find_nearest_contour(self, xy, indices=None):\n+    def set_paths(self, paths):\n+        self._paths = paths\n         if self.filled:\n             raise ValueError('Method does not support filled contours')\n         if indices is None:\n", "normalized_occurrence": 1}
