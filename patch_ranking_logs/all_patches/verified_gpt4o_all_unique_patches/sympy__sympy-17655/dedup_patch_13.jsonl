{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-17655", "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex a708f18..534e251 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -278,7 +278,23 @@ class Point(GeometryEntity):\n         coords = [simplify(x*factor) for x in self.args]\n         return Point(coords, evaluate=False)\n \n-    def __neg__(self):\n+    def __rmul__(self, factor):\n+        \"\"\"Multiply point's coordinates by a factor (reverse).\n+\n+        This method is called when the left operand does not support\n+        the multiplication operation, and the right operand is a Point.\n+\n+        Examples\n+        ========\n+\n+        >>> from sympy.geometry.point import Point\n+        >>> from sympy import sympify\n+        >>> p = Point(1, 2)\n+        >>> sympify(2.0) * p\n+        Point2D(2.0, 4.0)\n+\n+        \"\"\"\n+        return self.__mul__(factor)\n         \"\"\"Negate the point.\"\"\"\n         coords = [-x for x in self.args]\n         return Point(coords, evaluate=False)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex e45d95f..6c0290a 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -90,7 +90,8 @@ class Point(GeometryEntity):\n         factor = sympify(factor)\n         coords = [simplify(x * factor) for x in self.args]\n         return Point(coords, evaluate=False)\n-    def __neg__(self):\n+    def __rmul__(self, factor):\n+        return self.__mul__(factor)\n         coords = [-x for x in self.args]\n         return Point(coords, evaluate=False)\n     def __sub__(self, other):\n", "normalized_occurrence": 1}
