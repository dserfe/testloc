{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-18835", "model_patch": "diff --git a/sympy/utilities/iterables.py b/sympy/utilities/iterables.py\nindex 57371bf..3e8fdc7 100644\n--- a/sympy/utilities/iterables.py\n+++ b/sympy/utilities/iterables.py\n@@ -2106,10 +2106,13 @@ def uniq(seq, result=None):\n     >>> list(uniq([[1], [2, 1], [1]]))\n     [[1], [2, 1]]\n     \"\"\"\n+    initial_size = len(seq)\n     try:\n         seen = set()\n         result = result or []\n         for i, s in enumerate(seq):\n+            if len(seq) != initial_size:\n+                raise RuntimeError(\"dictionary changed size during iteration\")\n             if not (s in seen or seen.add(s)):\n                 yield s\n     except TypeError:\n", "occurrence": 3, "normalized_patch": "diff --git a/sympy/utilities/iterables.py b/sympy/utilities/iterables.py\nindex 032766e..e4ebb54 100644\n--- a/sympy/utilities/iterables.py\n+++ b/sympy/utilities/iterables.py\n@@ -730,10 +730,13 @@ def has_variety(seq):\n             return True\n     return False\n def uniq(seq, result=None):\n+    initial_size = len(seq)\n     try:\n         seen = set()\n         result = result or []\n         for i, s in enumerate(seq):\n+            if len(seq) != initial_size:\n+                raise RuntimeError('dictionary changed size during iteration')\n             if not (s in seen or seen.add(s)):\n                 yield s\n     except TypeError:\n", "normalized_occurrence": 5}
