{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12754", "model_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 12ebcde..9ae3037 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -394,6 +394,12 @@ class MigrationAutodetector:\n                     isinstance(operation, operations.AddField) and\n                     operation.model_name_lower == dependency[1].lower() and\n                     operation.name_lower == dependency[2].lower()\n+                ) or\n+                (\n+                    isinstance(operation, operations.CreateModel) and\n+                    any(base for base in getattr(operation, 'bases', [])\n+                        if isinstance(base, str) and\n+                        dependency[1].lower() in base.lower())\n                 )\n             )\n         # Removed field\n@@ -1326,4 +1332,4 @@ class MigrationAutodetector:\n         match = re.match(r'^\\d+', name)\n         if match:\n             return int(match[0])\n-        return None\n+        return None\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex f799cd9..105af74 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -211,7 +211,7 @@ class MigrationAutodetector:\n         if dependency[2] is None and dependency[3] is True:\n             return isinstance(operation, operations.CreateModel) and operation.name_lower == dependency[1].lower()\n         elif dependency[2] is not None and dependency[3] is True:\n-            return isinstance(operation, operations.CreateModel) and operation.name_lower == dependency[1].lower() and any((dependency[2] == x for x, y in operation.fields)) or (isinstance(operation, operations.AddField) and operation.model_name_lower == dependency[1].lower() and (operation.name_lower == dependency[2].lower()))\n+            return isinstance(operation, operations.CreateModel) and operation.name_lower == dependency[1].lower() and any((dependency[2] == x for x, y in operation.fields)) or (isinstance(operation, operations.AddField) and operation.model_name_lower == dependency[1].lower() and (operation.name_lower == dependency[2].lower())) or (isinstance(operation, operations.CreateModel) and any((base for base in getattr(operation, 'bases', []) if isinstance(base, str) and dependency[1].lower() in base.lower())))\n         elif dependency[2] is not None and dependency[3] is False:\n             return isinstance(operation, operations.RemoveField) and operation.model_name_lower == dependency[1].lower() and (operation.name_lower == dependency[2].lower())\n         elif dependency[2] is None and dependency[3] is False:\n", "normalized_occurrence": 1}
