{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-8898", "model_patch": "diff --git a/pylint/config/argument.py b/pylint/config/argument.py\nindex 58062ab..422af3a 100644\n--- a/pylint/config/argument.py\n+++ b/pylint/config/argument.py\n@@ -112,6 +112,11 @@ def _regex_transformer(value: str) -> Pattern[str]:\n \n \n def _regexp_csv_transfomer(value: str) -> Sequence[Pattern[str]]:\n+    \"\"\"Transforms a comma-separated list of regular expressions, handling commas within regexes.\"\"\"\n+    import csv\n+    patterns: list[Pattern[str]] = []\n+    for pattern in csv.reader([value], delimiter=\",\", quotechar='\"', skipinitialspace=True):\n+        patterns.append(_regex_transformer(pattern[0]))\n     \"\"\"Transforms a comma separated list of regular expressions.\"\"\"\n     patterns: list[Pattern[str]] = []\n     for pattern in _csv_transformer(value):\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/config/argument.py b/pylint/config/argument.py\nindex 61d66ca..8afb9be 100644\n--- a/pylint/config/argument.py\n+++ b/pylint/config/argument.py\n@@ -54,6 +54,11 @@ def _regex_transformer(value: str) -> Pattern[str]:\n         msg = f'Error in provided regular expression: {value} beginning at index {e.pos}: {e.msg}'\n         raise argparse.ArgumentTypeError(msg) from e\n def _regexp_csv_transfomer(value: str) -> Sequence[Pattern[str]]:\n+    import csv\n+    patterns: list[Pattern[str]] = []\n+    for pattern in csv.reader([value], delimiter=',', quotechar='\"', skipinitialspace=True):\n+        patterns.append(_regex_transformer(pattern[0]))\n+    'Transforms a comma separated list of regular expressions.'\n     patterns: list[Pattern[str]] = []\n     for pattern in _csv_transformer(value):\n         patterns.append(_regex_transformer(pattern))\n", "normalized_occurrence": 1}
