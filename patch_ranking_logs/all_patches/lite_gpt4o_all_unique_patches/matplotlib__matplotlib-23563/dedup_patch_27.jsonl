{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-23563", "model_patch": "diff --git a/lib/mpl_toolkits/mplot3d/art3d.py b/lib/mpl_toolkits/mplot3d/art3d.py\nindex fa869c7..ca076ad 100644\n--- a/lib/mpl_toolkits/mplot3d/art3d.py\n+++ b/lib/mpl_toolkits/mplot3d/art3d.py\n@@ -211,6 +211,8 @@ class Line3D(lines.Line2D):\n \n     @artist.allow_rasterization\n     def draw(self, renderer):\n+        if not hasattr(self, '_verts3d'):\n+            self._verts3d = (np.array([]), np.array([]), np.array([]))\n         xs3d, ys3d, zs3d = self._verts3d\n         xs, ys, zs = proj3d.proj_transform(xs3d, ys3d, zs3d, self.axes.M)\n         self.set_data(xs, ys)\n@@ -222,6 +224,7 @@ def line_2d_to_3d(line, zs=0, zdir='z'):\n     \"\"\"Convert a 2D line to 3D.\"\"\"\n \n     line.__class__ = Line3D\n+    line._verts3d = (np.array([]), np.array([]), np.array([]))\n     line.set_3d_properties(zs, zdir)\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/mpl_toolkits/mplot3d/art3d.py b/lib/mpl_toolkits/mplot3d/art3d.py\nindex e39ff0d..6611319 100644\n--- a/lib/mpl_toolkits/mplot3d/art3d.py\n+++ b/lib/mpl_toolkits/mplot3d/art3d.py\n@@ -81,6 +81,8 @@ class Line3D(lines.Line2D):\n         return self._verts3d\n     @artist.allow_rasterization\n     def draw(self, renderer):\n+        if not hasattr(self, '_verts3d'):\n+            self._verts3d = (np.array([]), np.array([]), np.array([]))\n         xs3d, ys3d, zs3d = self._verts3d\n         xs, ys, zs = proj3d.proj_transform(xs3d, ys3d, zs3d, self.axes.M)\n         self.set_data(xs, ys)\n@@ -88,6 +90,7 @@ class Line3D(lines.Line2D):\n         self.stale = False\n def line_2d_to_3d(line, zs=0, zdir='z'):\n     line.__class__ = Line3D\n+    line._verts3d = (np.array([]), np.array([]), np.array([]))\n     line.set_3d_properties(zs, zdir)\n def _path_to_3d_segment(path, zs=0, zdir='z'):\n     zs = np.broadcast_to(zs, len(path))\n", "normalized_occurrence": 1}
