{"model_name_or_path": "agentless_claude", "instance_id": "astropy__astropy-14369", "model_patch": "diff --git a/astropy/units/format/cds.py b/astropy/units/format/cds.py\nindex 761c4b8..4cb654a 100644\n--- a/astropy/units/format/cds.py\n+++ b/astropy/units/format/cds.py\n@@ -187,7 +187,12 @@ class CDS(Base):\n             if len(p) == 3:\n                 p[0] = p[2] ** -1\n             else:\n-                p[0] = p[1] / p[3]\n+                # For consecutive divisions in CDS format, we need to maintain the order\n+                # by inverting the denominator and multiplying\n+                if hasattr(p[3], 'is_inverse'):\n+                    p[0] = p[1] * (p[3] ** -1)\n+                else:\n+                    p[0] = p[1] / p[3]\n \n         def p_unit_expression(p):\n             \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/units/format/cds.py b/astropy/units/format/cds.py\nindex 829c8ad..fc4c1e2 100644\n--- a/astropy/units/format/cds.py\n+++ b/astropy/units/format/cds.py\n@@ -81,6 +81,8 @@ class CDS(Base):\n         def p_division_of_units(p):\n             if len(p) == 3:\n                 p[0] = p[2] ** (-1)\n+            elif hasattr(p[3], 'is_inverse'):\n+                p[0] = p[1] * p[3] ** (-1)\n             else:\n                 p[0] = p[1] / p[3]\n         def p_unit_expression(p):\n", "normalized_occurrence": 1}
