{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-15011", "model_patch": "diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py\nindex 48d6783..3d539ec 100644\n--- a/sympy/utilities/lambdify.py\n+++ b/sympy/utilities/lambdify.py\n@@ -631,6 +631,12 @@ class _EvaluatorPrinter(object):\n         #XXX: This has to be done here because of circular imports\n         from sympy.printing.lambdarepr import LambdaPrinter\n \n+        if dummify or not self._is_safe_ident(argrep):\n+            dummy = Dummy()\n+            argstrs.append(self._argrepr(dummy))\n+            expr = self._subexpr(expr, {arg: dummy})\n+        else:\n+            argstrs.append(argrep)\n         if printer is None:\n             printer = LambdaPrinter()\n \n@@ -731,7 +737,7 @@ class _EvaluatorPrinter(object):\n                 if dummify or not self._is_safe_ident(argrep):\n                     dummy = Dummy()\n                     argstrs.append(self._argrepr(dummy))\n-                    expr = self._subexpr(expr, {arg: dummy})\n+                    expr = self._subexpr(expr, {arg: dummy if not str(arg).startswith('{') else arg})\n                 else:\n                     argstrs.append(argrep)\n             elif isinstance(arg, Function):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py\nindex 9997e01..1697157 100644\n--- a/sympy/utilities/lambdify.py\n+++ b/sympy/utilities/lambdify.py\n@@ -238,6 +238,12 @@ class _EvaluatorPrinter(object):\n     def __init__(self, printer=None, dummify=False):\n         self._dummify = dummify\n         from sympy.printing.lambdarepr import LambdaPrinter\n+        if dummify or not self._is_safe_ident(argrep):\n+            dummy = Dummy()\n+            argstrs.append(self._argrepr(dummy))\n+            expr = self._subexpr(expr, {arg: dummy})\n+        else:\n+            argstrs.append(argrep)\n         if printer is None:\n             printer = LambdaPrinter()\n         if inspect.isfunction(printer):\n@@ -299,7 +305,7 @@ class _EvaluatorPrinter(object):\n                 if dummify or not self._is_safe_ident(argrep):\n                     dummy = Dummy()\n                     argstrs.append(self._argrepr(dummy))\n-                    expr = self._subexpr(expr, {arg: dummy})\n+                    expr = self._subexpr(expr, {arg: dummy if not str(arg).startswith('{') else arg})\n                 else:\n                     argstrs.append(argrep)\n             elif isinstance(arg, Function):\n", "normalized_occurrence": 1}
