{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-14983", "model_patch": "diff --git a/sklearn/model_selection/_split.py b/sklearn/model_selection/_split.py\nindex 8743303..90f19eb 100644\n--- a/sklearn/model_selection/_split.py\n+++ b/sklearn/model_selection/_split.py\n@@ -1216,6 +1216,14 @@ class RepeatedKFold(_RepeatedSplits):\n         super().__init__(\n             KFold, n_repeats, random_state, n_splits=n_splits)\n \n+    def __repr__(self):\n+        return ('{name}(n_splits={n_splits}, n_repeats={n_repeats}, '\n+                'random_state={random_state})').format(\n+                    name=self.__class__.__name__,\n+                    n_splits=self.cvargs['n_splits'],\n+                    n_repeats=self.n_repeats,\n+                    random_state=self.random_state)\n+\n \n class RepeatedStratifiedKFold(_RepeatedSplits):\n     \"\"\"Repeated Stratified K-Fold cross validator.\n@@ -1269,6 +1277,14 @@ class RepeatedStratifiedKFold(_RepeatedSplits):\n         super().__init__(\n             StratifiedKFold, n_repeats, random_state, n_splits=n_splits)\n \n+    def __repr__(self):\n+        return ('{name}(n_splits={n_splits}, n_repeats={n_repeats}, '\n+                'random_state={random_state})').format(\n+                    name=self.__class__.__name__,\n+                    n_splits=self.cvargs['n_splits'],\n+                    n_repeats=self.n_repeats,\n+                    random_state=self.random_state)\n+\n \n class BaseShuffleSplit(metaclass=ABCMeta):\n     \"\"\"Base class for ShuffleSplit and StratifiedShuffleSplit\"\"\"\n", "occurrence": 1, "normalized_patch": "--- a/sklearn/model_selection/_split.py\n+++ b/sklearn/model_selection/_split.py\n+    def __repr__(self):\n+        return '{name}(n_splits={n_splits}, n_repeats={n_repeats}, random_state={random_state})'.format(name=self.__class__.__name__, n_splits=self.cvargs['n_splits'], n_repeats=self.n_repeats, random_state=self.random_state)\n+\n+    def __repr__(self):\n+        return '{name}(n_splits={n_splits}, n_repeats={n_repeats}, random_state={random_state})'.format(name=self.__class__.__name__, n_splits=self.cvargs['n_splits'], n_repeats=self.n_repeats, random_state=self.random_state)\n+", "normalized_occurrence": 2}
