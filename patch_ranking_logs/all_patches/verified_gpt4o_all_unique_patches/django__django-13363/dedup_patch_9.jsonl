{"model_name_or_path": "agentless", "instance_id": "django__django-13363", "model_patch": "diff --git a/django/db/models/functions/datetime.py b/django/db/models/functions/datetime.py\nindex 68c26c6..d1101ab 100644\n--- a/django/db/models/functions/datetime.py\n+++ b/django/db/models/functions/datetime.py\n@@ -289,10 +289,10 @@ class TruncDate(TruncBase):\n     lookup_name = 'date'\n     output_field = DateField()\n \n-    def as_sql(self, compiler, connection):\n+    def as_sql(self, compiler, connection, **extra_context):\n         # Cast to date rather than truncate to date.\n         lhs, lhs_params = compiler.compile(self.lhs)\n-        tzname = timezone.get_current_timezone_name() if settings.USE_TZ else None\n+        tzname = self.tzinfo.tzname(None) if self.tzinfo else (timezone.get_current_timezone_name() if settings.USE_TZ else None)\n         sql = connection.ops.datetime_cast_date_sql(lhs, tzname)\n         return sql, lhs_params\n \n@@ -302,10 +302,10 @@ class TruncTime(TruncBase):\n     lookup_name = 'time'\n     output_field = TimeField()\n \n-    def as_sql(self, compiler, connection):\n+    def as_sql(self, compiler, connection, **extra_context):\n         # Cast to time rather than truncate to time.\n         lhs, lhs_params = compiler.compile(self.lhs)\n-        tzname = timezone.get_current_timezone_name() if settings.USE_TZ else None\n+        tzname = self.tzinfo.tzname(None) if self.tzinfo else (timezone.get_current_timezone_name() if settings.USE_TZ else None)\n         sql = connection.ops.datetime_cast_time_sql(lhs, tzname)\n         return sql, lhs_params\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/functions/datetime.py b/django/db/models/functions/datetime.py\nindex d4c9c7a..dc21f2a 100644\n--- a/django/db/models/functions/datetime.py\n+++ b/django/db/models/functions/datetime.py\n@@ -170,18 +170,18 @@ class TruncDate(TruncBase):\n     kind = 'date'\n     lookup_name = 'date'\n     output_field = DateField()\n-    def as_sql(self, compiler, connection):\n+    def as_sql(self, compiler, connection, **extra_context):\n         lhs, lhs_params = compiler.compile(self.lhs)\n-        tzname = timezone.get_current_timezone_name() if settings.USE_TZ else None\n+        tzname = self.tzinfo.tzname(None) if self.tzinfo else timezone.get_current_timezone_name() if settings.USE_TZ else None\n         sql = connection.ops.datetime_cast_date_sql(lhs, tzname)\n         return (sql, lhs_params)\n class TruncTime(TruncBase):\n     kind = 'time'\n     lookup_name = 'time'\n     output_field = TimeField()\n-    def as_sql(self, compiler, connection):\n+    def as_sql(self, compiler, connection, **extra_context):\n         lhs, lhs_params = compiler.compile(self.lhs)\n-        tzname = timezone.get_current_timezone_name() if settings.USE_TZ else None\n+        tzname = self.tzinfo.tzname(None) if self.tzinfo else timezone.get_current_timezone_name() if settings.USE_TZ else None\n         sql = connection.ops.datetime_cast_time_sql(lhs, tzname)\n         return (sql, lhs_params)\n class TruncHour(TruncBase):\n", "normalized_occurrence": 1}
