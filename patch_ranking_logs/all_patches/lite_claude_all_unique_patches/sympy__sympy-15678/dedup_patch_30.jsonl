{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-15678", "model_patch": "diff --git a/sympy/geometry/util.py b/sympy/geometry/util.py\nindex 52a1560..c70f137 100644\n--- a/sympy/geometry/util.py\n+++ b/sympy/geometry/util.py\n@@ -570,9 +570,15 @@ def idiff(eq, y, x, n=1):\n         y = y[0]\n     elif isinstance(y, Symbol):\n         dep = {y}\n+    elif y.is_Function:\n+        dep = {y}\n     else:\n         raise ValueError(\"expecting x-dependent symbol(s) but got: %s\" % y)\n \n+    # Convert Eq(lhs, rhs) to lhs - rhs\n+    if eq.is_Equality:\n+        eq = eq.lhs - eq.rhs\n+\n     f = dict([(s, Function(\n         s.name)(x)) for s in eq.free_symbols if s != x and s in dep])\n     dydx = Function(y.name)(x).diff(x)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/geometry/util.py b/sympy/geometry/util.py\nindex 8c03173..6548c56 100644\n--- a/sympy/geometry/util.py\n+++ b/sympy/geometry/util.py\n@@ -227,8 +227,12 @@ def idiff(eq, y, x, n=1):\n         y = y[0]\n     elif isinstance(y, Symbol):\n         dep = {y}\n+    elif y.is_Function:\n+        dep = {y}\n     else:\n         raise ValueError('expecting x-dependent symbol(s) but got: %s' % y)\n+    if eq.is_Equality:\n+        eq = eq.lhs - eq.rhs\n     f = dict([(s, Function(s.name)(x)) for s in eq.free_symbols if s != x and s in dep])\n     dydx = Function(y.name)(x).diff(x)\n     eq = eq.subs(f)\n", "normalized_occurrence": 1}
