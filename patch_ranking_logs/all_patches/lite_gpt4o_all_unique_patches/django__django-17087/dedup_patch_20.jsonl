{"model_name_or_path": "agentless", "instance_id": "django__django-17087", "model_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 5a40118..d5a96c1 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -72,7 +72,14 @@ class MigrationAutodetector:\n         elif isinstance(obj, type):\n             # If this is a type that implements 'deconstruct' as an instance method,\n             # avoid treating this as being deconstructible itself - see #22951\n-            return obj\n+            # If this is a nested class, get the correct path\n+            module = obj.__module__\n+            qualname = obj.__qualname__\n+            if \".\" in qualname:\n+                parent_class_name = qualname.split(\".\")[0]\n+                if parent_class_name in module:\n+                    module = module.replace(parent_class_name, \"\")\n+            return type(obj.__name__, (obj,), {\"__module__\": module})\n         elif hasattr(obj, \"deconstruct\"):\n             deconstructed = obj.deconstruct()\n             if isinstance(obj, models.Field):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 74bfa63..84defe1 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -35,7 +35,13 @@ class MigrationAutodetector:\n         elif isinstance(obj, COMPILED_REGEX_TYPE):\n             return RegexObject(obj)\n         elif isinstance(obj, type):\n-            return obj\n+            module = obj.__module__\n+            qualname = obj.__qualname__\n+            if '.' in qualname:\n+                parent_class_name = qualname.split('.')[0]\n+                if parent_class_name in module:\n+                    module = module.replace(parent_class_name, '')\n+            return type(obj.__name__, (obj,), {'__module__': module})\n         elif hasattr(obj, 'deconstruct'):\n             deconstructed = obj.deconstruct()\n             if isinstance(obj, models.Field):\n", "normalized_occurrence": 1}
