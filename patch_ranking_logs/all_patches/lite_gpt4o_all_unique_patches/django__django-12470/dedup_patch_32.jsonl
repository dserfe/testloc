{"model_name_or_path": "agentless", "instance_id": "django__django-12470", "model_patch": "diff --git a/django/db/models/options.py b/django/db/models/options.py\nindex 69e5965..dafecba 100644\n--- a/django/db/models/options.py\n+++ b/django/db/models/options.py\n@@ -159,7 +159,9 @@ class Options:\n         # for use when serializing the model definition\n         self.original_attrs = {}\n \n-        # Next, apply any overridden values from 'class Meta'.\n+        # Next, apply any overridden values from 'class Meta' on the parent class.\n+        if hasattr(cls, '_meta') and cls._meta and hasattr(cls._meta, 'ordering'):\n+            self.ordering = cls._meta.ordering\n         if self.meta:\n             meta_attrs = self.meta.__dict__.copy()\n             for name in self.meta.__dict__:\n@@ -191,6 +193,12 @@ class Options:\n                 self.verbose_name_plural = format_lazy('{}s', self.verbose_name)\n \n             # order_with_respect_and ordering are mutually exclusive.\n+            if self.ordering:\n+                # Check if the ordering is specified as [\"-pk\"] and adjust accordingly\n+                self.ordering = [\n+                    '-%s' % order[1:] if order.startswith('-') else order\n+                    for order in self.ordering\n+                ]\n             self._ordering_clash = bool(self.ordering and self.order_with_respect_to)\n \n             # Any leftover attributes must be invalid.\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/options.py b/django/db/models/options.py\nindex 0edba5f..12dca15 100644\n--- a/django/db/models/options.py\n+++ b/django/db/models/options.py\n@@ -97,6 +97,8 @@ class Options:\n         self.model_name = self.object_name.lower()\n         self.verbose_name = camel_case_to_spaces(self.object_name)\n         self.original_attrs = {}\n+        if hasattr(cls, '_meta') and cls._meta and hasattr(cls._meta, 'ordering'):\n+            self.ordering = cls._meta.ordering\n         if self.meta:\n             meta_attrs = self.meta.__dict__.copy()\n             for name in self.meta.__dict__:\n@@ -117,6 +119,8 @@ class Options:\n                     setattr(self, attr_name, self._format_names_with_class(cls, objs))\n             if self.verbose_name_plural is None:\n                 self.verbose_name_plural = format_lazy('{}s', self.verbose_name)\n+            if self.ordering:\n+                self.ordering = ['-%s' % order[1:] if order.startswith('-') else order for order in self.ordering]\n             self._ordering_clash = bool(self.ordering and self.order_with_respect_to)\n             if meta_attrs != {}:\n                 raise TypeError(\"'class Meta' got invalid attribute(s): %s\" % ','.join(meta_attrs))\n", "normalized_occurrence": 1}
