{"model_name_or_path": "agentless", "instance_id": "django__django-15781", "model_patch": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex 778cb1c..d846a0d 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -125,8 +125,15 @@ class DjangoHelpFormatter(HelpFormatter):\n         )\n \n     def add_usage(self, usage, actions, *args, **kwargs):\n+        if usage is not None:\n+            usage = usage.replace('\\n', '\\n  ')\n         super().add_usage(usage, self._reordered_actions(actions), *args, **kwargs)\n \n+    def add_text(self, text):\n+        if text is not None:\n+            text = text.replace('\\n', '\\n  ')\n+        super().add_text(text)\n+\n     def add_arguments(self, actions):\n         super().add_arguments(self._reordered_actions(actions))\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex 2883dc3..314cb09 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -51,7 +51,13 @@ class DjangoHelpFormatter(HelpFormatter):\n     def _reordered_actions(self, actions):\n         return sorted(actions, key=lambda a: set(a.option_strings) & self.show_last != set())\n     def add_usage(self, usage, actions, *args, **kwargs):\n+        if usage is not None:\n+            usage = usage.replace('\\n', '\\n  ')\n         super().add_usage(usage, self._reordered_actions(actions), *args, **kwargs)\n+    def add_text(self, text):\n+        if text is not None:\n+            text = text.replace('\\n', '\\n  ')\n+        super().add_text(text)\n     def add_arguments(self, actions):\n         super().add_arguments(self._reordered_actions(actions))\n class OutputWrapper(TextIOBase):\n", "normalized_occurrence": 1}
