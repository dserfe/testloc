{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-23299", "model_patch": "diff --git a/lib/matplotlib/pyplot.py b/lib/matplotlib/pyplot.py\nindex 9ba243c..8e2a31e 100644\n--- a/lib/matplotlib/pyplot.py\n+++ b/lib/matplotlib/pyplot.py\n@@ -202,17 +202,21 @@ def _get_backend_mod():\n         # Use __getitem__ here to avoid going through the fallback logic (which\n         # will (re)import pyplot and then call switch_backend if we need to\n         # resolve the auto sentinel)\n-        switch_backend(dict.__getitem__(rcParams, \"backend\"))\n+        current_backend = dict.__getitem__(rcParams, \"backend\")\n+        switch_backend(current_backend)\n     return _backend_mod\n \n \n def switch_backend(newbackend):\n     \"\"\"\n-    Close all open figures and set the Matplotlib backend.\n+    Set the Matplotlib backend.\n \n     The argument is case-insensitive.  Switching to an interactive backend is\n     possible only if no event loop for another interactive backend has started.\n     Switching to and from non-interactive backends is always possible.\n+    \n+    If the backend is the same as the current backend, no changes are made to \n+    avoid losing figure state.\n \n     Parameters\n     ----------\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/pyplot.py b/lib/matplotlib/pyplot.py\nindex a3f363f..fe29c23 100644\n--- a/lib/matplotlib/pyplot.py\n+++ b/lib/matplotlib/pyplot.py\n@@ -97,7 +97,8 @@ def _get_required_interactive_framework(backend_mod):\n _backend_mod = None\n def _get_backend_mod():\n     if _backend_mod is None:\n-        switch_backend(dict.__getitem__(rcParams, 'backend'))\n+        current_backend = dict.__getitem__(rcParams, 'backend')\n+        switch_backend(current_backend)\n     return _backend_mod\n def switch_backend(newbackend):\n     global _backend_mod\n", "normalized_occurrence": 1}
