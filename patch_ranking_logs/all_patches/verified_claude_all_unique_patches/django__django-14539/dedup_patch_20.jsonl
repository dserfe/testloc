{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14539", "model_patch": "diff --git a/django/utils/html.py b/django/utils/html.py\nindex 809fc0f..7ae7eca 100644\n--- a/django/utils/html.py\n+++ b/django/utils/html.py\n@@ -283,8 +283,14 @@ def urlize(text, trim_url_limit=None, nofollow=False, autoescape=False):\n             middle_unescaped = html.unescape(middle)\n             stripped = middle_unescaped.rstrip(TRAILING_PUNCTUATION_CHARS)\n             if middle_unescaped != stripped:\n-                trail = middle[len(stripped):] + trail\n-                middle = middle[:len(stripped) - len(middle_unescaped)]\n+                # Convert stripped length back to length in original string\n+                stripped_len = len(stripped)\n+                middle_len = len(middle)\n+                unescaped_len = len(middle_unescaped)\n+                # Calculate the equivalent length in the original escaped string\n+                equiv_len = middle_len - (unescaped_len - stripped_len)\n+                trail = middle[equiv_len:] + trail\n+                middle = middle[:equiv_len]\n                 trimmed_something = True\n         return lead, middle, trail\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/html.py b/django/utils/html.py\nindex ed1e228..f9fae2b 100644\n--- a/django/utils/html.py\n+++ b/django/utils/html.py\n@@ -121,8 +121,12 @@ def urlize(text, trim_url_limit=None, nofollow=False, autoescape=False):\n             middle_unescaped = html.unescape(middle)\n             stripped = middle_unescaped.rstrip(TRAILING_PUNCTUATION_CHARS)\n             if middle_unescaped != stripped:\n-                trail = middle[len(stripped):] + trail\n-                middle = middle[:len(stripped) - len(middle_unescaped)]\n+                stripped_len = len(stripped)\n+                middle_len = len(middle)\n+                unescaped_len = len(middle_unescaped)\n+                equiv_len = middle_len - (unescaped_len - stripped_len)\n+                trail = middle[equiv_len:] + trail\n+                middle = middle[:equiv_len]\n                 trimmed_something = True\n         return (lead, middle, trail)\n     def is_email_simple(value):\n", "normalized_occurrence": 1}
