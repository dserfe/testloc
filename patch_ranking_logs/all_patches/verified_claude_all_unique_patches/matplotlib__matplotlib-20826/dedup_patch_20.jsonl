{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-20826", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 07605b5..a00c634 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1189,8 +1189,23 @@ class _AxesBase(martist.Artist):\n         else:\n             patch_visible = True\n \n+        # Save full axis visibility state\n         xaxis_visible = self.xaxis.get_visible()\n         yaxis_visible = self.yaxis.get_visible()\n+        \n+        # Save detailed tick visibility state\n+        x_tick_params = {\n+            'top': self.xaxis.get_ticks_position() in ['top', 'both'],\n+            'bottom': self.xaxis.get_ticks_position() in ['bottom', 'both'],\n+            'labeltop': self.xaxis.get_tick_labels()[0].get_visible() if self.xaxis.get_tick_labels() else False,\n+            'labelbottom': self.xaxis.get_tick_labels()[-1].get_visible() if self.xaxis.get_tick_labels() else True\n+        }\n+        y_tick_params = {\n+            'left': self.yaxis.get_ticks_position() in ['left', 'both'],\n+            'right': self.yaxis.get_ticks_position() in ['right', 'both'],\n+            'labelleft': self.yaxis.get_tick_labels()[0].get_visible() if self.yaxis.get_tick_labels() else True,\n+            'labelright': self.yaxis.get_tick_labels()[-1].get_visible() if self.yaxis.get_tick_labels() else False\n+        }\n \n         self.xaxis.clear()\n         self.yaxis.clear()\n@@ -1305,9 +1320,13 @@ class _AxesBase(martist.Artist):\n         if self._sharex is not None:\n             self.xaxis.set_visible(xaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            # Restore x-axis tick visibility state\n+            self.tick_params(axis='x', **x_tick_params)\n         if self._sharey is not None:\n             self.yaxis.set_visible(yaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            # Restore y-axis tick visibility state\n+            self.tick_params(axis='y', **y_tick_params)\n \n         self.stale = True\n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 33a6de3..d1bfc50 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -503,6 +503,8 @@ class _AxesBase(martist.Artist):\n             patch_visible = True\n         xaxis_visible = self.xaxis.get_visible()\n         yaxis_visible = self.yaxis.get_visible()\n+        x_tick_params = {'top': self.xaxis.get_ticks_position() in ['top', 'both'], 'bottom': self.xaxis.get_ticks_position() in ['bottom', 'both'], 'labeltop': self.xaxis.get_tick_labels()[0].get_visible() if self.xaxis.get_tick_labels() else False, 'labelbottom': self.xaxis.get_tick_labels()[-1].get_visible() if self.xaxis.get_tick_labels() else True}\n+        y_tick_params = {'left': self.yaxis.get_ticks_position() in ['left', 'both'], 'right': self.yaxis.get_ticks_position() in ['right', 'both'], 'labelleft': self.yaxis.get_tick_labels()[0].get_visible() if self.yaxis.get_tick_labels() else True, 'labelright': self.yaxis.get_tick_labels()[-1].get_visible() if self.yaxis.get_tick_labels() else False}\n         self.xaxis.clear()\n         self.yaxis.clear()\n         for name, spine in self.spines.items():\n@@ -578,9 +580,11 @@ class _AxesBase(martist.Artist):\n         if self._sharex is not None:\n             self.xaxis.set_visible(xaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            self.tick_params(axis='x', **x_tick_params)\n         if self._sharey is not None:\n             self.yaxis.set_visible(yaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            self.tick_params(axis='y', **y_tick_params)\n         self.stale = True\n     class ArtistList(MutableSequence):\n         def __init__(self, axes, prop_name, add_name, valid_types=None, invalid_types=None):\n", "normalized_occurrence": 1}
