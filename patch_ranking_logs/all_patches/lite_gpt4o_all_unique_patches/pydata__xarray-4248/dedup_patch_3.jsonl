{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-4248", "model_patch": "diff --git a/xarray/core/formatting.py b/xarray/core/formatting.py\nindex 91a7f67..23ffe36 100644\n--- a/xarray/core/formatting.py\n+++ b/xarray/core/formatting.py\n@@ -269,8 +269,13 @@ def inline_variable_array_repr(var, max_width):\n \n \n def summarize_variable(\n-    name: Hashable, var, col_width: int, marker: str = \" \", max_width: int = None\n+    name: Hashable, var, col_width: int, marker: str = \" \", max_width: int = None, ds=None\n ):\n+    unit_str = \"\"\n+    if ds and name in ds.data_vars:\n+        unit_str = f\", in {ds.data_vars[name].attrs.get('units', '')}\"\n+    elif ds and name in ds.coords:\n+        unit_str = f\", in {ds.coords[name].attrs.get('units', '')}\"\n     \"\"\"Summarize a variable in one line, e.g., for the Dataset.__repr__.\"\"\"\n     if max_width is None:\n         max_width_options = OPTIONS[\"display_width\"]\n@@ -283,7 +288,7 @@ def summarize_variable(\n         dims_str = \"({}) \".format(\", \".join(map(str, var.dims)))\n     else:\n         dims_str = \"\"\n-    front_str = f\"{first_col}{dims_str}{var.dtype} \"\n+    front_str = f\"{first_col}{dims_str}{var.dtype}{unit_str} \"\n \n     values_width = max_width - len(front_str)\n     values_str = inline_variable_array_repr(var, values_width)\n@@ -305,11 +310,11 @@ def _summarize_coord_levels(coord, col_width, marker=\"-\"):\n     )\n \n \n-def summarize_datavar(name, var, col_width):\n-    return summarize_variable(name, var.variable, col_width)\n+def summarize_datavar(name, var, col_width, ds=None):\n+    return summarize_variable(name, var.variable, col_width, ds=ds)\n \n \n-def summarize_coord(name: Hashable, var, col_width: int):\n+def summarize_coord(name: Hashable, var, col_width: int, ds=None):\n     is_index = name in var.dims\n     marker = \"*\" if is_index else \" \"\n     if is_index:\n@@ -507,7 +512,7 @@ def dataset_repr(ds):\n     if unindexed_dims_str:\n         summary.append(unindexed_dims_str)\n \n-    summary.append(data_vars_repr(ds.data_vars, col_width=col_width))\n+    summary.append(data_vars_repr(ds.data_vars, col_width=col_width, ds=ds))\n \n     if ds.attrs:\n         summary.append(attrs_repr(ds.attrs))\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/formatting.py b/xarray/core/formatting.py\nindex 6d31a74..643653b 100644\n--- a/xarray/core/formatting.py\n+++ b/xarray/core/formatting.py\n@@ -151,7 +151,13 @@ def inline_variable_array_repr(var, max_width):\n         return maybe_truncate(repr(var._data).replace('\\n', ' '), max_width)\n     else:\n         return '...'\n-def summarize_variable(name: Hashable, var, col_width: int, marker: str=' ', max_width: int=None):\n+def summarize_variable(name: Hashable, var, col_width: int, marker: str=' ', max_width: int=None, ds=None):\n+    unit_str = ''\n+    if ds and name in ds.data_vars:\n+        unit_str = f\", in {ds.data_vars[name].attrs.get('units', '')}\"\n+    elif ds and name in ds.coords:\n+        unit_str = f\", in {ds.coords[name].attrs.get('units', '')}\"\n+    'Summarize a variable in one line, e.g., for the Dataset.__repr__.'\n     if max_width is None:\n         max_width_options = OPTIONS['display_width']\n         if not isinstance(max_width_options, int):\n@@ -163,7 +169,7 @@ def summarize_variable(name: Hashable, var, col_width: int, marker: str=' ', max\n         dims_str = '({}) '.format(', '.join(map(str, var.dims)))\n     else:\n         dims_str = ''\n-    front_str = f'{first_col}{dims_str}{var.dtype} '\n+    front_str = f'{first_col}{dims_str}{var.dtype}{unit_str} '\n     values_width = max_width - len(front_str)\n     values_str = inline_variable_array_repr(var, values_width)\n     return front_str + values_str\n@@ -172,9 +178,9 @@ def _summarize_coord_multiindex(coord, col_width, marker):\n     return '{}({}) MultiIndex'.format(first_col, str(coord.dims[0]))\n def _summarize_coord_levels(coord, col_width, marker='-'):\n     return '\\n'.join((summarize_variable(lname, coord.get_level_variable(lname), col_width, marker=marker) for lname in coord.level_names))\n-def summarize_datavar(name, var, col_width):\n-    return summarize_variable(name, var.variable, col_width)\n-def summarize_coord(name: Hashable, var, col_width: int):\n+def summarize_datavar(name, var, col_width, ds=None):\n+    return summarize_variable(name, var.variable, col_width, ds=ds)\n+def summarize_coord(name: Hashable, var, col_width: int, ds=None):\n     is_index = name in var.dims\n     marker = '*' if is_index else ' '\n     if is_index:\n@@ -294,7 +300,7 @@ def dataset_repr(ds):\n     unindexed_dims_str = unindexed_dims_repr(ds.dims, ds.coords)\n     if unindexed_dims_str:\n         summary.append(unindexed_dims_str)\n-    summary.append(data_vars_repr(ds.data_vars, col_width=col_width))\n+    summary.append(data_vars_repr(ds.data_vars, col_width=col_width, ds=ds))\n     if ds.attrs:\n         summary.append(attrs_repr(ds.attrs))\n     return '\\n'.join(summary)\n", "normalized_occurrence": 1}
