{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-11870", "model_patch": "diff --git a/sympy/functions/elementary/exponential.py b/sympy/functions/elementary/exponential.py\nindex 67a8b07..8030a4e 100644\n--- a/sympy/functions/elementary/exponential.py\n+++ b/sympy/functions/elementary/exponential.py\n@@ -452,6 +452,14 @@ class exp(ExpBase):\n         from sympy import tanh\n         return (1 + tanh(arg/2))/(1 - tanh(arg/2))\n \n+    def _eval_rewrite_as_sincos(self, arg):\n+        from sympy import sin, cos, I\n+        if I*arg in arg.free_symbols:\n+            # If the argument already contains I, try to write in terms of sin/cos\n+            x = -I*arg\n+            return cos(x) + I*sin(x)\n+        return None\n+\n \n class log(Function):\n     r\"\"\"\n", "occurrence": 1, "normalized_patch": "--- a/sympy/functions/elementary/exponential.py\n+++ b/sympy/functions/elementary/exponential.py\n+    def _eval_rewrite_as_sincos(self, arg):\n+        from sympy import sin, cos, I\n+        if I * arg in arg.free_symbols:\n+            x = -I * arg\n+            return cos(x) + I * sin(x)\n+        return None", "normalized_occurrence": 1}
