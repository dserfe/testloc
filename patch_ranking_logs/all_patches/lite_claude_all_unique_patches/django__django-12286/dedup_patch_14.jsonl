{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12286", "model_patch": "diff --git a/django/core/checks/translation.py b/django/core/checks/translation.py\nindex e886d8e..cf024ed 100644\n--- a/django/core/checks/translation.py\n+++ b/django/core/checks/translation.py\n@@ -55,7 +55,8 @@ def check_setting_languages_bidi(app_configs, **kwargs):\n @register(Tags.translation)\n def check_language_settings_consistent(app_configs, **kwargs):\n     \"\"\"Error if language settings are not consistent with each other.\"\"\"\n-    available_tags = {i for i, _ in settings.LANGUAGES} | {'en-us'}\n-    if settings.LANGUAGE_CODE not in available_tags:\n+    try:\n+        get_supported_language_variant(settings.LANGUAGE_CODE)\n+    except LookupError:\n         return [E004]\n-    return []\n+    return []\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/checks/translation.py b/django/core/checks/translation.py\nindex 0ac596d..8b35210 100644\n--- a/django/core/checks/translation.py\n+++ b/django/core/checks/translation.py\n@@ -19,7 +19,8 @@ def check_setting_languages_bidi(app_configs, **kwargs):\n     return [Error(E003.msg.format(tag), id=E003.id) for tag in settings.LANGUAGES_BIDI if not isinstance(tag, str) or not language_code_re.match(tag)]\n @register(Tags.translation)\n def check_language_settings_consistent(app_configs, **kwargs):\n-    available_tags = {i for i, _ in settings.LANGUAGES} | {'en-us'}\n-    if settings.LANGUAGE_CODE not in available_tags:\n+    try:\n+        get_supported_language_variant(settings.LANGUAGE_CODE)\n+    except LookupError:\n         return [E004]\n     return []\n\\ No newline at end of file\n", "normalized_occurrence": 1}
