{"model_name_or_path": "agentless", "instance_id": "mwaskom__seaborn-2848", "model_patch": "diff --git a/seaborn/relational.py b/seaborn/relational.py\nindex f571efb..029de6f 100644\n--- a/seaborn/relational.py\n+++ b/seaborn/relational.py\n@@ -748,7 +748,10 @@ def scatterplot(\n         alpha=alpha, x_jitter=x_jitter, y_jitter=y_jitter, legend=legend,\n     )\n \n-    p.map_hue(palette=palette, order=hue_order, norm=hue_norm)\n+    if isinstance(hue, (list, np.ndarray, pd.Series)):\n+        p.map_hue(palette=palette, order=hue_order, norm=None)  # Ensure norm is None for direct array input\n+    else:\n+        p.map_hue(palette=palette, order=hue_order, norm=hue_norm)\n     p.map_size(sizes=sizes, order=size_order, norm=size_norm)\n     p.map_style(markers=markers, order=style_order)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/relational.py b/seaborn/relational.py\nindex 8fdb7aa..923a5e6 100644\n--- a/seaborn/relational.py\n+++ b/seaborn/relational.py\n@@ -246,7 +246,10 @@ lineplot.__doc__ = 'Draw a line plot with possibility of several semantic groupi\n def scatterplot(data=None, *, x=None, y=None, hue=None, size=None, style=None, palette=None, hue_order=None, hue_norm=None, sizes=None, size_order=None, size_norm=None, markers=True, style_order=None, x_bins=None, y_bins=None, units=None, estimator=None, ci=95, n_boot=1000, alpha=None, x_jitter=None, y_jitter=None, legend='auto', ax=None, **kwargs):\n     variables = _ScatterPlotter.get_semantics(locals())\n     p = _ScatterPlotter(data=data, variables=variables, x_bins=x_bins, y_bins=y_bins, estimator=estimator, ci=ci, n_boot=n_boot, alpha=alpha, x_jitter=x_jitter, y_jitter=y_jitter, legend=legend)\n-    p.map_hue(palette=palette, order=hue_order, norm=hue_norm)\n+    if isinstance(hue, (list, np.ndarray, pd.Series)):\n+        p.map_hue(palette=palette, order=hue_order, norm=None)\n+    else:\n+        p.map_hue(palette=palette, order=hue_order, norm=hue_norm)\n     p.map_size(sizes=sizes, order=size_order, norm=size_norm)\n     p.map_style(markers=markers, order=style_order)\n     if ax is None:\n", "normalized_occurrence": 1}
