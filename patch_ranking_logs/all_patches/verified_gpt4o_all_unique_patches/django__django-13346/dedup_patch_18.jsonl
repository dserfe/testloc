{"model_name_or_path": "agentless", "instance_id": "django__django-13346", "model_patch": "diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py\nindex a0dea96..b2f954b 100644\n--- a/django/db/models/fields/json.py\n+++ b/django/db/models/fields/json.py\n@@ -455,6 +455,17 @@ class KeyTransformIRegex(CaseInsensitiveMixin, KeyTransformTextLookupMixin, look\n     pass\n \n \n+class KeyTransformIn(lookups.In):\n+    def get_prep_lookup(self):\n+        prepared_values = []\n+        for value in self.rhs:\n+            if isinstance(value, KeyTransform):\n+                prepared_values.append(value)\n+            else:\n+                prepared_values.append(json.dumps(value))\n+        self.rhs = prepared_values\n+        return super().get_prep_lookup()\n+\n class KeyTransformNumericLookupMixin:\n     def process_rhs(self, compiler, connection):\n         rhs, rhs_params = super().process_rhs(compiler, connection)\n", "occurrence": 1, "normalized_patch": "--- a/django/db/models/fields/json.py\n+++ b/django/db/models/fields/json.py\n+class KeyTransformIn(lookups.In):\n+    def get_prep_lookup(self):\n+        prepared_values = []\n+        for value in self.rhs:\n+            if isinstance(value, KeyTransform):\n+                prepared_values.append(value)\n+            else:\n+                prepared_values.append(json.dumps(value))\n+        self.rhs = prepared_values\n+        return super().get_prep_lookup()", "normalized_occurrence": 1}
