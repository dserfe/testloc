{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13315", "model_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex e59da5c..5a14f63 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -1149,7 +1149,12 @@ class ModelChoiceIteratorValue:\n class ModelChoiceIterator:\n     def __init__(self, field):\n         self.field = field\n-        self.queryset = field.queryset\n+        queryset = field.queryset\n+        if hasattr(field, 'get_limit_choices_to'):\n+            limit_choices = field.get_limit_choices_to()\n+            if limit_choices is not None:\n+                queryset = queryset.filter(limit_choices).distinct()\n+        self.queryset = queryset\n \n     def __iter__(self):\n         if self.field.empty_label is not None:\n", "normalized_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex bdd2237..6e01fd1 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -596,7 +596,12 @@ class ModelChoiceIteratorValue:\n class ModelChoiceIterator:\n     def __init__(self, field):\n         self.field = field\n-        self.queryset = field.queryset\n+        queryset = field.queryset\n+        if hasattr(field, 'get_limit_choices_to'):\n+            limit_choices = field.get_limit_choices_to()\n+            if limit_choices is not None:\n+                queryset = queryset.filter(limit_choices).distinct()\n+        self.queryset = queryset\n     def __iter__(self):\n         if self.field.empty_label is not None:\n             yield ('', self.field.empty_label)\n", "normalized_occurrence": 2}
