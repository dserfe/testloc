{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-20916", "model_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 7d0c468..401406a 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -77,8 +77,12 @@ class PrettyPrinter(Printer):\n         return pform\n \n     def _print_Symbol(self, e, bold_name=False):\n-        symb = pretty_symbol(e.name, bold_name)\n-        return prettyForm(symb)\n+        if any(greek_letter in e.name for greek_letter in ['alpha', 'beta', 'gamma', 'delta', 'epsilon', 'zeta', 'eta', 'theta', 'iota', 'kappa', 'lambda', 'mu', 'nu', 'xi', 'omicron', 'pi', 'rho', 'sigma', 'tau', 'upsilon', 'phi', 'chi', 'psi', 'omega']):\n+            subscripted_symbols = ''.join(GSUB(char) if char.isdigit() else char for char in e.name)\n+            return prettyForm(subscripted_symbols)\n+        else:\n+            symb = pretty_symbol(e.name, bold_name)\n+            return prettyForm(symb)\n     _print_RandomSymbol = _print_Symbol\n     def _print_MatrixSymbol(self, e):\n         return self._print_Symbol(e, self._settings['mat_symbol_style'] == \"bold\")\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex f2c3eb4..3e04ee4 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -46,8 +46,12 @@ class PrettyPrinter(Printer):\n         pform = prettyForm(*pform.left('atan2'))\n         return pform\n     def _print_Symbol(self, e, bold_name=False):\n-        symb = pretty_symbol(e.name, bold_name)\n-        return prettyForm(symb)\n+        if any((greek_letter in e.name for greek_letter in ['alpha', 'beta', 'gamma', 'delta', 'epsilon', 'zeta', 'eta', 'theta', 'iota', 'kappa', 'lambda', 'mu', 'nu', 'xi', 'omicron', 'pi', 'rho', 'sigma', 'tau', 'upsilon', 'phi', 'chi', 'psi', 'omega'])):\n+            subscripted_symbols = ''.join((GSUB(char) if char.isdigit() else char for char in e.name))\n+            return prettyForm(subscripted_symbols)\n+        else:\n+            symb = pretty_symbol(e.name, bold_name)\n+            return prettyForm(symb)\n     _print_RandomSymbol = _print_Symbol\n     def _print_MatrixSymbol(self, e):\n         return self._print_Symbol(e, self._settings['mat_symbol_style'] == 'bold')\n", "normalized_occurrence": 1}
