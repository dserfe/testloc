{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9258", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 51811ca..b11d365 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -85,7 +85,7 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str]) -> No\n     fields = cast(Iterable[nodes.field], node)\n     for field in fields:\n         field_name = field[0].astext()\n-        parts = re.split(' +', field_name)\n+        parts = re.split(r' +| *\\| *', field_name)\n         if parts[0] == 'param':\n             if len(parts) == 2:\n                 # :param xxx:\n@@ -136,7 +136,7 @@ def augment_descriptions_with_types(\n     has_type = set()  # type: Set[str]\n     for field in fields:\n         field_name = field[0].astext()\n-        parts = re.split(' +', field_name)\n+        parts = re.split(r' +| *\\| *', field_name)\n         if parts[0] == 'param':\n             if len(parts) == 2:\n                 # :param xxx:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 03a755b..b647d86 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -57,7 +57,7 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str]) -> No\n     fields = cast(Iterable[nodes.field], node)\n     for field in fields:\n         field_name = field[0].astext()\n-        parts = re.split(' +', field_name)\n+        parts = re.split(' +| *\\\\| *', field_name)\n         if parts[0] == 'param':\n             if len(parts) == 2:\n                 arg = arguments.setdefault(parts[1], {})\n@@ -98,7 +98,7 @@ def augment_descriptions_with_types(node: nodes.field_list, annotations: Dict[st\n     has_type = set()\n     for field in fields:\n         field_name = field[0].astext()\n-        parts = re.split(' +', field_name)\n+        parts = re.split(' +| *\\\\| *', field_name)\n         if parts[0] == 'param':\n             if len(parts) == 2:\n                 has_description.add(parts[1])\n", "normalized_occurrence": 1}
