{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13033", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex f5fd96c..a3ce4b8 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1928,7 +1928,23 @@ class Query(BaseExpression):\n         if errors:\n             raise FieldError('Invalid order_by arguments: %s' % errors)\n         if ordering:\n-            self.order_by += ordering\n+            # Clear any existing model default ordering when explicit ordering is provided\n+            self.clear_ordering(force_empty=True)\n+            processed_ordering = []\n+            for item in ordering:\n+                if isinstance(item, str):\n+                    # Handle _id suffix specially for foreign keys\n+                    if item.endswith('_id') and not item.endswith('__id'):\n+                        base = item[:-3]\n+                        if base.startswith('-'):\n+                            processed_ordering.append('-' + base + '__id')\n+                        else:\n+                            processed_ordering.append(base + '__id')\n+                    else:\n+                        processed_ordering.append(item)\n+                else:\n+                    processed_ordering.append(item)\n+            self.order_by = tuple(processed_ordering)\n         else:\n             self.default_ordering = False\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 5d74201..7a586f0 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1029,7 +1029,21 @@ class Query(BaseExpression):\n         if errors:\n             raise FieldError('Invalid order_by arguments: %s' % errors)\n         if ordering:\n-            self.order_by += ordering\n+            self.clear_ordering(force_empty=True)\n+            processed_ordering = []\n+            for item in ordering:\n+                if isinstance(item, str):\n+                    if item.endswith('_id') and (not item.endswith('__id')):\n+                        base = item[:-3]\n+                        if base.startswith('-'):\n+                            processed_ordering.append('-' + base + '__id')\n+                        else:\n+                            processed_ordering.append(base + '__id')\n+                    else:\n+                        processed_ordering.append(item)\n+                else:\n+                    processed_ordering.append(item)\n+            self.order_by = tuple(processed_ordering)\n         else:\n             self.default_ordering = False\n     def clear_ordering(self, force_empty):\n", "normalized_occurrence": 1}
