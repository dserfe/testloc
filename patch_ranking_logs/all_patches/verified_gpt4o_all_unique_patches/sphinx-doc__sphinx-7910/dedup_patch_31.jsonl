{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-7910", "model_patch": "diff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py\nindex f48faa1..c9b0fd2 100644\n--- a/sphinx/util/inspect.py\n+++ b/sphinx/util/inspect.py\n@@ -143,6 +143,8 @@ def unwrap_all(obj: Any, *, stop: Callable = None) -> Any:\n             obj = obj.__func__\n         elif isstaticmethod(obj):\n             obj = obj.__func__\n+        elif hasattr(obj, '__globals__') and '__class__' in obj.__globals__:\n+            obj = obj.__globals__['__class__']\n         else:\n             return obj\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py\nindex 6e5e6c6..94f8daa 100644\n--- a/sphinx/util/inspect.py\n+++ b/sphinx/util/inspect.py\n@@ -81,6 +81,8 @@ def unwrap_all(obj: Any, *, stop: Callable=None) -> Any:\n             obj = obj.__func__\n         elif isstaticmethod(obj):\n             obj = obj.__func__\n+        elif hasattr(obj, '__globals__') and '__class__' in obj.__globals__:\n+            obj = obj.__globals__['__class__']\n         else:\n             return obj\n def isenumclass(x: Any) -> bool:\n", "normalized_occurrence": 1}
