{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11964", "model_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex 6957452..68b0824 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -1008,7 +1008,11 @@ class CharField(Field):\n         return \"CharField\"\n \n     def to_python(self, value):\n-        if isinstance(value, str) or value is None:\n+        if value is None:\n+            return value\n+        if isinstance(value, Choices):\n+            return value.value\n+        if isinstance(value, str):\n             return value\n         return str(value)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex e3867cb..668ee99 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -485,7 +485,11 @@ class CharField(Field):\n     def get_internal_type(self):\n         return 'CharField'\n     def to_python(self, value):\n-        if isinstance(value, str) or value is None:\n+        if value is None:\n+            return value\n+        if isinstance(value, Choices):\n+            return value.value\n+        if isinstance(value, str):\n             return value\n         return str(value)\n     def get_prep_value(self, value):\n", "normalized_occurrence": 1}
