{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-24265", "model_patch": "diff --git a/lib/matplotlib/style/core.py b/lib/matplotlib/style/core.py\nindex 6520b77..78d23bb 100644\n--- a/lib/matplotlib/style/core.py\n+++ b/lib/matplotlib/style/core.py\n@@ -223,8 +223,11 @@ def read_style_directory(style_dir):\n     styles = dict()\n     for path in Path(style_dir).glob(f\"*.{STYLE_EXTENSION}\"):\n         with warnings.catch_warnings(record=True) as warns:\n-            styles[path.stem] = rc_params_from_file(\n-                path, use_default_template=False)\n+            style_params = rc_params_from_file(path, use_default_template=False)\n+            styles[path.stem] = style_params\n+            # Add backwards compatibility aliases for seaborn styles\n+            if path.stem.startswith('seaborn_'):\n+                styles[path.stem.replace('_', '-')] = style_params\n         for w in warns:\n             _log.warning('In %s: %s', path, w.message)\n     return styles\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/style/core.py b/lib/matplotlib/style/core.py\nindex 6263e52..c66fb04 100644\n--- a/lib/matplotlib/style/core.py\n+++ b/lib/matplotlib/style/core.py\n@@ -80,7 +80,10 @@ def read_style_directory(style_dir):\n     styles = dict()\n     for path in Path(style_dir).glob(f'*.{STYLE_EXTENSION}'):\n         with warnings.catch_warnings(record=True) as warns:\n-            styles[path.stem] = rc_params_from_file(path, use_default_template=False)\n+            style_params = rc_params_from_file(path, use_default_template=False)\n+            styles[path.stem] = style_params\n+            if path.stem.startswith('seaborn_'):\n+                styles[path.stem.replace('_', '-')] = style_params\n         for w in warns:\n             _log.warning('In %s: %s', path, w.message)\n     return styles\n", "normalized_occurrence": 1}
