{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-14182", "model_patch": "diff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py\nindex 00bbbaf..7e383b1 100644\n--- a/astropy/io/ascii/rst.py\n+++ b/astropy/io/ascii/rst.py\n@@ -57,10 +57,22 @@ class RST(FixedWidth):\n     data_class = SimpleRSTData\n     header_class = SimpleRSTHeader\n \n-    def __init__(self):\n+    def __init__(self, header_rows=None):\n+        self.header_rows = header_rows if header_rows is not None else [\"name\"]\n         super().__init__(delimiter_pad=None, bookend=False)\n \n     def write(self, lines):\n+        if \"unit\" in self.header_rows:\n+            units = [str(col.unit) if col.unit else \"\" for col in self.table.columns.values()]\n+            unit_line = \" \".join(units)\n+            lines.insert(1, unit_line)\n+        if \"name\" in self.header_rows:\n+            name_line = \" \".join(self.table.colnames)\n+            lines.insert(1, name_line)\n         lines = super().write(lines)\n+        if \"unit\" in self.header_rows:\n+            lines = [lines[1], lines[2]] + lines[4:]\n+        else:\n+            lines = [lines[1]] + lines[3:]\n         lines = [lines[1]] + lines + [lines[1]]\n-        return lines\n+        return lines\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py\nindex 65d6c1d..525fcb6 100644\n--- a/astropy/io/ascii/rst.py\n+++ b/astropy/io/ascii/rst.py\n@@ -18,9 +18,21 @@ class RST(FixedWidth):\n     _description = 'reStructuredText simple table'\n     data_class = SimpleRSTData\n     header_class = SimpleRSTHeader\n-    def __init__(self):\n+    def __init__(self, header_rows=None):\n+        self.header_rows = header_rows if header_rows is not None else ['name']\n         super().__init__(delimiter_pad=None, bookend=False)\n     def write(self, lines):\n+        if 'unit' in self.header_rows:\n+            units = [str(col.unit) if col.unit else '' for col in self.table.columns.values()]\n+            unit_line = ' '.join(units)\n+            lines.insert(1, unit_line)\n+        if 'name' in self.header_rows:\n+            name_line = ' '.join(self.table.colnames)\n+            lines.insert(1, name_line)\n         lines = super().write(lines)\n+        if 'unit' in self.header_rows:\n+            lines = [lines[1], lines[2]] + lines[4:]\n+        else:\n+            lines = [lines[1]] + lines[3:]\n         lines = [lines[1]] + lines + [lines[1]]\n         return lines\n\\ No newline at end of file\n", "normalized_occurrence": 1}
