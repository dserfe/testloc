{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-6197", "model_patch": "diff --git a/src/_pytest/main.py b/src/_pytest/main.py\nindex 56dcb06..901d503 100644\n--- a/src/_pytest/main.py\n+++ b/src/_pytest/main.py\n@@ -305,6 +305,16 @@ def pytest_ignore_collect(path, config):\n     if not allow_in_venv and _in_venv(path):\n         return True\n \n+    # Ignore __init__.py files by default unless they match test file patterns\n+    if path.basename == \"__init__.py\" and not any(\n+        (\n+            path.basename.startswith(\"test_\"),\n+            path.basename.endswith(\"_test.py\"),\n+            path.purebasename == \"conftest\",\n+        )\n+    ):\n+        return True\n+\n     return False\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/main.py b/src/_pytest/main.py\nindex 694cf6b..210414d 100644\n--- a/src/_pytest/main.py\n+++ b/src/_pytest/main.py\n@@ -151,6 +151,8 @@ def pytest_ignore_collect(path, config):\n     allow_in_venv = config.getoption('collect_in_virtualenv')\n     if not allow_in_venv and _in_venv(path):\n         return True\n+    if path.basename == '__init__.py' and (not any((path.basename.startswith('test_'), path.basename.endswith('_test.py'), path.purebasename == 'conftest'))):\n+        return True\n     return False\n \n def pytest_collection_modifyitems(items, config):\n", "normalized_occurrence": 1}
