{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-7393", "model_patch": "diff --git a/xarray/core/variable.py b/xarray/core/variable.py\nindex f056c40..617c0ad 100644\n--- a/xarray/core/variable.py\n+++ b/xarray/core/variable.py\n@@ -1693,7 +1693,7 @@ class Variable(AbstractArray, NdimSizeLenMixin, VariableArithmetic):\n         reordered = self.transpose(*dim_order)\n \n         new_shape = reordered.shape[: len(other_dims)] + (-1,)\n-        new_data = duck_array_ops.reshape(reordered.data, new_shape)\n+        new_data = duck_array_ops.reshape(reordered.data, new_shape).astype(reordered.data.dtype)\n         new_dims = reordered.dims[: len(other_dims)] + (new_dim,)\n \n         return Variable(new_dims, new_data, self._attrs, self._encoding, fastpath=True)\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/variable.py b/xarray/core/variable.py\nindex 53977f0..4e6314a 100644\n--- a/xarray/core/variable.py\n+++ b/xarray/core/variable.py\n@@ -1270,7 +1270,7 @@ class Variable(AbstractArray, NdimSizeLenMixin, VariableArithmetic):\n         dim_order = other_dims + list(dims)\n         reordered = self.transpose(*dim_order)\n         new_shape = reordered.shape[:len(other_dims)] + (-1,)\n-        new_data = duck_array_ops.reshape(reordered.data, new_shape)\n+        new_data = duck_array_ops.reshape(reordered.data, new_shape).astype(reordered.data.dtype)\n         new_dims = reordered.dims[:len(other_dims)] + (new_dim,)\n         return Variable(new_dims, new_data, self._attrs, self._encoding, fastpath=True)\n \n", "normalized_occurrence": 1}
