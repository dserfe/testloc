{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-12907", "model_patch": "diff --git a/astropy/modeling/separable.py b/astropy/modeling/separable.py\nindex d6e9246..384905d 100644\n--- a/astropy/modeling/separable.py\n+++ b/astropy/modeling/separable.py\n@@ -304,9 +304,17 @@ def _separable(transform):\n     if (transform_matrix := transform._calculate_separability_matrix()) is not NotImplemented:\n         return transform_matrix\n     elif isinstance(transform, CompoundModel):\n-        sepleft = _separable(transform.left)\n-        sepright = _separable(transform.right)\n-        return _operators[transform.op](sepleft, sepright)\n+        left_sep_matrix = _separable(transform.left)\n+        right_sep_matrix = _separable(transform.right)\n+        combined_sep_matrix = _operators[transform.op](left_sep_matrix, right_sep_matrix)\n+        \n+        # Handling nested compound models\n+        if isinstance(transform.left, CompoundModel):\n+            left_sep_matrix = _expand_nested_separable_matrix(left_sep_matrix, transform.left)\n+        if isinstance(transform.right, CompoundModel):\n+            right_sep_matrix = _expand_nested_separable_matrix(right_sep_matrix, transform.right)\n+            \n+        return combined_sep_matrix\n     elif isinstance(transform, Model):\n         return _coord_matrix(transform, 'left', transform.n_outputs)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/modeling/separable.py b/astropy/modeling/separable.py\nindex 198a838..917cd81 100644\n--- a/astropy/modeling/separable.py\n+++ b/astropy/modeling/separable.py\n@@ -99,9 +99,14 @@ def _separable(transform):\n     if (transform_matrix := transform._calculate_separability_matrix()) is not NotImplemented:\n         return transform_matrix\n     elif isinstance(transform, CompoundModel):\n-        sepleft = _separable(transform.left)\n-        sepright = _separable(transform.right)\n-        return _operators[transform.op](sepleft, sepright)\n+        left_sep_matrix = _separable(transform.left)\n+        right_sep_matrix = _separable(transform.right)\n+        combined_sep_matrix = _operators[transform.op](left_sep_matrix, right_sep_matrix)\n+        if isinstance(transform.left, CompoundModel):\n+            left_sep_matrix = _expand_nested_separable_matrix(left_sep_matrix, transform.left)\n+        if isinstance(transform.right, CompoundModel):\n+            right_sep_matrix = _expand_nested_separable_matrix(right_sep_matrix, transform.right)\n+        return combined_sep_matrix\n     elif isinstance(transform, Model):\n         return _coord_matrix(transform, 'left', transform.n_outputs)\n _operators = {'&': _cstack, '|': _cdot, '+': _arith_oper, '-': _arith_oper, '*': _arith_oper, '/': _arith_oper, '**': _arith_oper}\n\\ No newline at end of file\n", "normalized_occurrence": 1}
