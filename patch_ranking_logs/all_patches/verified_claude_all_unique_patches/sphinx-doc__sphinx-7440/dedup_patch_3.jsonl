{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-7440", "model_patch": "diff --git a/sphinx/domains/std.py b/sphinx/domains/std.py\nindex c7bf7da..90077d6 100644\n--- a/sphinx/domains/std.py\n+++ b/sphinx/domains/std.py\n@@ -652,11 +652,13 @@ class StandardDomain(Domain):\n \n         .. versionadded:: 3.0\n         \"\"\"\n-        if (objtype, name) in self.objects:\n-            docname = self.objects[objtype, name][0]\n+        # For glossary terms, use case-insensitive comparison\n+        key = (objtype, name.lower() if objtype == 'term' else name)\n+        if key in self.objects:\n+            docname = self.objects[key][0]\n             logger.warning(__('duplicate %s description of %s, other instance in %s'),\n                            objtype, name, docname, location=location)\n-        self.objects[objtype, name] = (self.env.docname, labelid)\n+        self.objects[key] = (self.env.docname, labelid)\n \n     def add_object(self, objtype: str, name: str, docname: str, labelid: str) -> None:\n         warnings.warn('StandardDomain.add_object() is deprecated.',\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/domains/std.py b/sphinx/domains/std.py\nindex 985476e..8cad3df 100644\n--- a/sphinx/domains/std.py\n+++ b/sphinx/domains/std.py\n@@ -366,10 +366,11 @@ class StandardDomain(Domain):\n     def objects(self) -> Dict[Tuple[str, str], Tuple[str, str]]:\n         return self.data.setdefault('objects', {})\n     def note_object(self, objtype: str, name: str, labelid: str, location: Any=None) -> None:\n-        if (objtype, name) in self.objects:\n-            docname = self.objects[objtype, name][0]\n+        key = (objtype, name.lower() if objtype == 'term' else name)\n+        if key in self.objects:\n+            docname = self.objects[key][0]\n             logger.warning(__('duplicate %s description of %s, other instance in %s'), objtype, name, docname, location=location)\n-        self.objects[objtype, name] = (self.env.docname, labelid)\n+        self.objects[key] = (self.env.docname, labelid)\n     def add_object(self, objtype: str, name: str, docname: str, labelid: str) -> None:\n         warnings.warn('StandardDomain.add_object() is deprecated.', RemovedInSphinx50Warning)\n         self.objects[objtype, name] = (docname, labelid)\n", "normalized_occurrence": 3}
