{"model_name_or_path": "agentless", "instance_id": "django__django-11728", "model_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 5b145cc..38d2561 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -239,6 +239,9 @@ def _route_to_regex(route, is_endpoint=False):\n         parts.append('(?P<' + parameter + '>' + converter.regex + ')')\n     if is_endpoint:\n         parts.append('$')\n+    # Add a trailing slash if the route is not empty to ensure trailing named groups are processed correctly\n+    if route:\n+        parts.append(re.escape(route))\n     return ''.join(parts), converters\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex ac39a99..67bd4a6 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -142,6 +142,8 @@ def _route_to_regex(route, is_endpoint=False):\n         parts.append('(?P<' + parameter + '>' + converter.regex + ')')\n     if is_endpoint:\n         parts.append('$')\n+    if route:\n+        parts.append(re.escape(route))\n     return (''.join(parts), converters)\n class RoutePattern(CheckURLMixin):\n     regex = LocaleRegexDescriptor('_route')\n", "normalized_occurrence": 1}
