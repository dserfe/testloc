{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-15512", "model_patch": "diff --git a/sklearn/cluster/_affinity_propagation.py b/sklearn/cluster/_affinity_propagation.py\nindex 0511594..1274f7c 100644\n--- a/sklearn/cluster/_affinity_propagation.py\n+++ b/sklearn/cluster/_affinity_propagation.py\n@@ -200,7 +200,10 @@ def affinity_propagation(S, preference=None, convergence_iter=15, max_iter=200,\n     else:\n         if verbose:\n             print(\"Did not converge\")\n+        # Return empty array for cluster centers and -1 for labels when convergence fails\n+        return np.array([]), np.full(n_samples, -1)\n \n+    # Only process results if convergence was achieved\n     I = np.flatnonzero(E)\n     K = I.size  # Identify exemplars\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/cluster/_affinity_propagation.py b/sklearn/cluster/_affinity_propagation.py\nindex b441de5..27583ab 100644\n--- a/sklearn/cluster/_affinity_propagation.py\n+++ b/sklearn/cluster/_affinity_propagation.py\n@@ -71,6 +71,7 @@ def affinity_propagation(S, preference=None, convergence_iter=15, max_iter=200,\n     else:\n         if verbose:\n             print('Did not converge')\n+        return (np.array([]), np.full(n_samples, -1))\n     I = np.flatnonzero(E)\n     K = I.size\n     if K > 0:\n", "normalized_occurrence": 2}
