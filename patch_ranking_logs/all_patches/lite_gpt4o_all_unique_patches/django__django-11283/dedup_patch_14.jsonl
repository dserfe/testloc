{"model_name_or_path": "agentless", "instance_id": "django__django-11283", "model_patch": "diff --git a/django/contrib/auth/migrations/0011_update_proxy_permissions.py b/django/contrib/auth/migrations/0011_update_proxy_permissions.py\nindex e1e636f..b6ca046 100644\n--- a/django/contrib/auth/migrations/0011_update_proxy_permissions.py\n+++ b/django/contrib/auth/migrations/0011_update_proxy_permissions.py\n@@ -24,10 +24,14 @@ def update_proxy_model_permissions(apps, schema_editor, reverse=False):\n         proxy_content_type = ContentType.objects.get_for_model(Model, for_concrete_model=False)\n         old_content_type = proxy_content_type if reverse else concrete_content_type\n         new_content_type = concrete_content_type if reverse else proxy_content_type\n-        Permission.objects.filter(\n-            permissions_query,\n-            content_type=old_content_type,\n-        ).update(content_type=new_content_type)\n+        for permission in Permission.objects.filter(\n+                permissions_query,\n+                content_type=old_content_type):\n+            if not Permission.objects.filter(\n+                    codename=permission.codename,\n+                    content_type=new_content_type).exists():\n+                permission.content_type = new_content_type\n+                permission.save()\n \n \n def revert_proxy_model_permissions(apps, schema_editor):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/auth/migrations/0011_update_proxy_permissions.py b/django/contrib/auth/migrations/0011_update_proxy_permissions.py\nindex 15a57c8..e55f207 100644\n--- a/django/contrib/auth/migrations/0011_update_proxy_permissions.py\n+++ b/django/contrib/auth/migrations/0011_update_proxy_permissions.py\n@@ -15,7 +15,10 @@ def update_proxy_model_permissions(apps, schema_editor, reverse=False):\n         proxy_content_type = ContentType.objects.get_for_model(Model, for_concrete_model=False)\n         old_content_type = proxy_content_type if reverse else concrete_content_type\n         new_content_type = concrete_content_type if reverse else proxy_content_type\n-        Permission.objects.filter(permissions_query, content_type=old_content_type).update(content_type=new_content_type)\n+        for permission in Permission.objects.filter(permissions_query, content_type=old_content_type):\n+            if not Permission.objects.filter(codename=permission.codename, content_type=new_content_type).exists():\n+                permission.content_type = new_content_type\n+                permission.save()\n def revert_proxy_model_permissions(apps, schema_editor):\n     update_proxy_model_permissions(apps, schema_editor, reverse=True)\n class Migration(migrations.Migration):\n", "normalized_occurrence": 2}
