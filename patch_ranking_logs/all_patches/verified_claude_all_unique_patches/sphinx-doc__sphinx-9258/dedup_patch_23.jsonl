{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-9258", "model_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex b8c505d..ae02b1b 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -118,6 +118,13 @@ def _parse_annotation(annotation: str, env: BuildEnvironment = None) -> List[Nod\n             return result\n         elif isinstance(node, ast.BitOr):\n             return [nodes.Text(' '), addnodes.desc_sig_punctuation('', '|'), nodes.Text(' ')]\n+        elif hasattr(ast, 'UnionType') and isinstance(node, ast.UnionType):  # Python 3.10+\n+            result = []\n+            for i, subtype in enumerate(node.types):\n+                if i != 0:\n+                    result.extend([nodes.Text(' '), addnodes.desc_sig_punctuation('', '|'), nodes.Text(' ')])\n+                result.extend(unparse(subtype))\n+            return result\n         elif isinstance(node, ast.Constant):  # type: ignore\n             if node.value is Ellipsis:\n                 return [addnodes.desc_sig_punctuation('', \"...\")]\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex c76b6ac..5efa9a5 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -67,6 +67,13 @@ def _parse_annotation(annotation: str, env: BuildEnvironment=None) -> List[Node]\n             return result\n         elif isinstance(node, ast.BitOr):\n             return [nodes.Text(' '), addnodes.desc_sig_punctuation('', '|'), nodes.Text(' ')]\n+        elif hasattr(ast, 'UnionType') and isinstance(node, ast.UnionType):\n+            result = []\n+            for i, subtype in enumerate(node.types):\n+                if i != 0:\n+                    result.extend([nodes.Text(' '), addnodes.desc_sig_punctuation('', '|'), nodes.Text(' ')])\n+                result.extend(unparse(subtype))\n+            return result\n         elif isinstance(node, ast.Constant):\n             if node.value is Ellipsis:\n                 return [addnodes.desc_sig_punctuation('', '...')]\n", "normalized_occurrence": 1}
