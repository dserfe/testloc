{"model_name_or_path": "agentless", "instance_id": "django__django-10924", "model_patch": "diff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py\nindex 73109d9..50c0091 100644\n--- a/django/db/models/fields/files.py\n+++ b/django/db/models/fields/files.py\n@@ -266,7 +266,10 @@ class FileField(Field):\n         name, path, args, kwargs = super().deconstruct()\n         if kwargs.get(\"max_length\") == 100:\n             del kwargs[\"max_length\"]\n-        kwargs['upload_to'] = self.upload_to\n+        if callable(self.upload_to):\n+            kwargs['upload_to'] = self.upload_to.__name__\n+        else:\n+            kwargs['upload_to'] = self.upload_to\n         if self.storage is not default_storage:\n             kwargs['storage'] = self.storage\n         return name, path, args, kwargs\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py\nindex 782a310..28703fd 100644\n--- a/django/db/models/fields/files.py\n+++ b/django/db/models/fields/files.py\n@@ -141,7 +141,10 @@ class FileField(Field):\n         name, path, args, kwargs = super().deconstruct()\n         if kwargs.get('max_length') == 100:\n             del kwargs['max_length']\n-        kwargs['upload_to'] = self.upload_to\n+        if callable(self.upload_to):\n+            kwargs['upload_to'] = self.upload_to.__name__\n+        else:\n+            kwargs['upload_to'] = self.upload_to\n         if self.storage is not default_storage:\n             kwargs['storage'] = self.storage\n         return (name, path, args, kwargs)\n", "normalized_occurrence": 1}
