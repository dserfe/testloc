{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-8638", "model_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex ec7a051..ca200f3 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -1157,9 +1157,19 @@ class PythonDomain(Domain):\n                     else:\n                         # \"fuzzy\" searching mode\n                         searchname = '.' + name\n-                        matches = [(oname, self.objects[oname]) for oname in self.objects\n-                                   if oname.endswith(searchname) and\n-                                   self.objects[oname].objtype in objtypes]\n+                        matches = []\n+                        for oname in self.objects:\n+                            if oname.endswith(searchname) and self.objects[oname].objtype in objtypes:\n+                                # For attributes, only match if in the same class/module context\n+                                if self.objects[oname].objtype == 'attribute':\n+                                    # Check if the contexts match\n+                                    ref_context = oname.rsplit('.', 2)[0] if '.' in oname else ''\n+                                    current_context = (modname + '.' + classname if modname and classname\n+                                                     else (modname if modname else ''))\n+                                    if ref_context == current_context:\n+                                        matches.append((oname, self.objects[oname]))\n+                                else:\n+                                    matches.append((oname, self.objects[oname]))\n         else:\n             # NOTE: searching for exact match, object type is not considered\n             if name in self.objects:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex 06b9e34..5a1fdc1 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -684,7 +684,16 @@ class PythonDomain(Domain):\n                         newname = name\n                     else:\n                         searchname = '.' + name\n-                        matches = [(oname, self.objects[oname]) for oname in self.objects if oname.endswith(searchname) and self.objects[oname].objtype in objtypes]\n+                        matches = []\n+                        for oname in self.objects:\n+                            if oname.endswith(searchname) and self.objects[oname].objtype in objtypes:\n+                                if self.objects[oname].objtype == 'attribute':\n+                                    ref_context = oname.rsplit('.', 2)[0] if '.' in oname else ''\n+                                    current_context = modname + '.' + classname if modname and classname else modname if modname else ''\n+                                    if ref_context == current_context:\n+                                        matches.append((oname, self.objects[oname]))\n+                                else:\n+                                    matches.append((oname, self.objects[oname]))\n         elif name in self.objects:\n             newname = name\n         elif type == 'mod':\n", "normalized_occurrence": 1}
