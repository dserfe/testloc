{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-24149", "model_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 5af9d96..097302f 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -2371,7 +2371,9 @@ class Axes(_AxesBase):\n             x0 = x\n             x = np.asarray(self.convert_xunits(x))\n             width = self._convert_dx(width, x0, x, self.convert_xunits)\n-            if xerr is not None:\n+            if np.isnan(x).all():\n+                xerr = np.full_like(xerr, np.nan) if xerr is not None else None\n+            else:\n                 xerr = self._convert_dx(xerr, x0, x, self.convert_xunits)\n         if self.yaxis is not None:\n             y0 = y\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 5336f05..2c596d2 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -519,7 +519,9 @@ class Axes(_AxesBase):\n             x0 = x\n             x = np.asarray(self.convert_xunits(x))\n             width = self._convert_dx(width, x0, x, self.convert_xunits)\n-            if xerr is not None:\n+            if np.isnan(x).all():\n+                xerr = np.full_like(xerr, np.nan) if xerr is not None else None\n+            else:\n                 xerr = self._convert_dx(xerr, x0, x, self.convert_xunits)\n         if self.yaxis is not None:\n             y0 = y\n", "normalized_occurrence": 1}
