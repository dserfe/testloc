{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11206", "model_patch": "diff --git a/django/utils/numberformat.py b/django/utils/numberformat.py\nindex d5baf57..1f90423 100644\n--- a/django/utils/numberformat.py\n+++ b/django/utils/numberformat.py\n@@ -1,3 +1,4 @@\n+\n from decimal import Decimal\n \n from django.conf import settings\n@@ -31,6 +32,11 @@ def format(number, decimal_sep, decimal_pos=None, grouping=0, thousand_sep='',\n         # scientific notation to avoid high memory usage in {:f}'.format().\n         _, digits, exponent = number.as_tuple()\n         if abs(exponent) + len(digits) > 200:\n+            # If decimal_pos is specified and the number is very small,\n+            # return appropriate number of zeros after decimal point\n+            if decimal_pos is not None and exponent < 0:\n+                return '0' + decimal_sep + '0' * decimal_pos\n+            \n             number = '{:e}'.format(number)\n             coefficient, exponent = number.split('e')\n             # Format the coefficient.\n@@ -76,4 +82,4 @@ def format(number, decimal_sep, decimal_pos=None, grouping=0, thousand_sep='',\n             int_part_gd += digit\n             cnt += 1\n         int_part = int_part_gd[::-1]\n-    return sign + int_part + dec_part\n+    return sign + int_part + dec_part\n", "occurrence": 3, "normalized_patch": "diff --git a/django/utils/numberformat.py b/django/utils/numberformat.py\nindex 0318af1..52917ef 100644\n--- a/django/utils/numberformat.py\n+++ b/django/utils/numberformat.py\n@@ -11,6 +11,8 @@ def format(number, decimal_sep, decimal_pos=None, grouping=0, thousand_sep='', f\n     if isinstance(number, Decimal):\n         _, digits, exponent = number.as_tuple()\n         if abs(exponent) + len(digits) > 200:\n+            if decimal_pos is not None and exponent < 0:\n+                return '0' + decimal_sep + '0' * decimal_pos\n             number = '{:e}'.format(number)\n             coefficient, exponent = number.split('e')\n             coefficient = format(coefficient, decimal_sep, decimal_pos, grouping, thousand_sep, force_grouping, use_l10n)\n", "normalized_occurrence": 3}
