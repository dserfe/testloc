{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-11445", "model_patch": "diff --git a/sphinx/util/rst.py b/sphinx/util/rst.py\nindex 83e696f..51ae564 100644\n--- a/sphinx/util/rst.py\n+++ b/sphinx/util/rst.py\n@@ -78,14 +78,19 @@ def default_role(docname: str, name: str) -> Generator[None, None, None]:\n def prepend_prolog(content: StringList, prolog: str) -> None:\n     \"\"\"Prepend a string to content body as prolog.\"\"\"\n     if prolog:\n+        # Ensure that prolog is added after the first heading or section node\n+        in_section = False\n         pos = 0\n         for line in content:\n             if docinfo_re.match(line):\n+                continue\n+            if line.startswith('.. '):\n+                in_section = True\n                 pos += 1\n             else:\n                 break\n \n-        if pos > 0:\n+        if pos > 0 or in_section:\n             # insert a blank line after docinfo\n             content.insert(pos, '', '<generated>', 0)\n             pos += 1\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/util/rst.py b/sphinx/util/rst.py\nindex 911aea2..4275375 100644\n--- a/sphinx/util/rst.py\n+++ b/sphinx/util/rst.py\n@@ -51,13 +51,17 @@ def default_role(docname: str, name: str) -> Generator[None, None, None]:\n     docutils.unregister_role('')\n def prepend_prolog(content: StringList, prolog: str) -> None:\n     if prolog:\n+        in_section = False\n         pos = 0\n         for line in content:\n             if docinfo_re.match(line):\n+                continue\n+            if line.startswith('.. '):\n+                in_section = True\n                 pos += 1\n             else:\n                 break\n-        if pos > 0:\n+        if pos > 0 or in_section:\n             content.insert(pos, '', '<generated>', 0)\n             pos += 1\n         for lineno, line in enumerate(prolog.splitlines()):\n", "normalized_occurrence": 1}
