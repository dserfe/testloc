{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16046", "model_patch": "diff --git a/django/utils/numberformat.py b/django/utils/numberformat.py\nindex e685310..237bbae 100644\n--- a/django/utils/numberformat.py\n+++ b/django/utils/numberformat.py\n@@ -1,3 +1,4 @@\n+\n from decimal import Decimal\n \n from django.conf import settings\n@@ -25,6 +26,8 @@ def format(\n         module in locale.localeconv() LC_NUMERIC grouping (e.g. (3, 2, 0)).\n     * thousand_sep: Thousand separator symbol (for example \",\")\n     \"\"\"\n+    if number is None:\n+        return \"\"\n     use_grouping = (\n         use_l10n or (use_l10n is None and settings.USE_L10N)\n     ) and settings.USE_THOUSAND_SEPARATOR\n@@ -101,4 +104,4 @@ def format(\n             int_part_gd += digit\n             cnt += 1\n         int_part = int_part_gd[::-1]\n-    return sign + int_part + dec_part\n+    return sign + int_part + dec_part\n", "occurrence": 3, "normalized_patch": "diff --git a/django/utils/numberformat.py b/django/utils/numberformat.py\nindex 6c888ad..53a236e 100644\n--- a/django/utils/numberformat.py\n+++ b/django/utils/numberformat.py\n@@ -2,6 +2,8 @@ from decimal import Decimal\n from django.conf import settings\n from django.utils.safestring import mark_safe\n def format(number, decimal_sep, decimal_pos=None, grouping=0, thousand_sep='', force_grouping=False, use_l10n=None):\n+    if number is None:\n+        return ''\n     use_grouping = (use_l10n or (use_l10n is None and settings.USE_L10N)) and settings.USE_THOUSAND_SEPARATOR\n     use_grouping = use_grouping or force_grouping\n     use_grouping = use_grouping and grouping != 0\n", "normalized_occurrence": 3}
