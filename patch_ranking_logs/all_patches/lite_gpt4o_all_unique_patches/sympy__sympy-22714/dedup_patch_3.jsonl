{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-22714", "model_patch": "diff --git a/sympy/core/sympify.py b/sympy/core/sympify.py\nindex cba74f3..77c0290 100644\n--- a/sympy/core/sympify.py\n+++ b/sympy/core/sympify.py\n@@ -474,6 +474,8 @@ def sympify(a, locals=None, convert_xor=True, strict=False, rational=False,\n     try:\n         a = a.replace('\\n', '')\n         expr = parse_expr(a, local_dict=locals, transformations=transformations, evaluate=evaluate)\n+        if evaluate is False and isinstance(expr, Basic) and not isinstance(expr, (Add, Mul, Pow)):\n+            expr = expr.xreplace({f: nsimplify(f, rational=True) for f in expr.atoms(Float)})\n     except (TokenError, SyntaxError) as exc:\n         raise SympifyError('could not parse %r' % a, exc)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/sympify.py b/sympy/core/sympify.py\nindex 8e167eb..accbf55 100644\n--- a/sympy/core/sympify.py\n+++ b/sympy/core/sympify.py\n@@ -121,6 +121,8 @@ def sympify(a, locals=None, convert_xor=True, strict=False, rational=False, eval\n     try:\n         a = a.replace('\\n', '')\n         expr = parse_expr(a, local_dict=locals, transformations=transformations, evaluate=evaluate)\n+        if evaluate is False and isinstance(expr, Basic) and (not isinstance(expr, (Add, Mul, Pow))):\n+            expr = expr.xreplace({f: nsimplify(f, rational=True) for f in expr.atoms(Float)})\n     except (TokenError, SyntaxError) as exc:\n         raise SympifyError('could not parse %r' % a, exc)\n     return expr\n", "normalized_occurrence": 1}
