{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-7757", "model_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex 3555587..6d64940 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -150,6 +150,7 @@ def _parse_arglist(arglist: str) -> addnodes.desc_parameterlist:\n         if param.kind != param.POSITIONAL_ONLY and last_kind == param.POSITIONAL_ONLY:\n             # PEP-570: Separator for Positional Only Parameter: /\n             params += addnodes.desc_parameter('', '', addnodes.desc_sig_operator('', '/'))\n+            last_kind = None  # Reset last_kind after adding separator\n         if param.kind == param.KEYWORD_ONLY and last_kind in (param.POSITIONAL_OR_KEYWORD,\n                                                               param.POSITIONAL_ONLY,\n                                                               None):\n@@ -184,9 +185,7 @@ def _parse_arglist(arglist: str) -> addnodes.desc_parameterlist:\n         params += node\n         last_kind = param.kind\n \n-    if last_kind == Parameter.POSITIONAL_ONLY:\n-        # PEP-570: Separator for Positional Only Parameter: /\n-        params += addnodes.desc_parameter('', '', addnodes.desc_sig_operator('', '/'))\n+    # Remove trailing separator check since it's now handled inline\n \n     return params\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex 0daece2..e07f3e5 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -93,6 +93,7 @@ def _parse_arglist(arglist: str) -> addnodes.desc_parameterlist:\n     for param in sig.parameters.values():\n         if param.kind != param.POSITIONAL_ONLY and last_kind == param.POSITIONAL_ONLY:\n             params += addnodes.desc_parameter('', '', addnodes.desc_sig_operator('', '/'))\n+            last_kind = None\n         if param.kind == param.KEYWORD_ONLY and last_kind in (param.POSITIONAL_OR_KEYWORD, param.POSITIONAL_ONLY, None):\n             params += addnodes.desc_parameter('', '', addnodes.desc_sig_operator('', '*'))\n         node = addnodes.desc_parameter()\n@@ -119,8 +120,6 @@ def _parse_arglist(arglist: str) -> addnodes.desc_parameterlist:\n             node += nodes.inline('', param.default, classes=['default_value'], support_smartquotes=False)\n         params += node\n         last_kind = param.kind\n-    if last_kind == Parameter.POSITIONAL_ONLY:\n-        params += addnodes.desc_parameter('', '', addnodes.desc_sig_operator('', '/'))\n     return params\n def _pseudo_parse_arglist(signode: desc_signature, arglist: str) -> None:\n     paramlist = addnodes.desc_parameterlist()\n", "normalized_occurrence": 1}
