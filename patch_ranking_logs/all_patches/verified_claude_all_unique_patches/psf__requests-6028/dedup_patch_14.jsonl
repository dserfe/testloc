{"model_name_or_path": "agentless_claude", "instance_id": "psf__requests-6028", "model_patch": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex d47134b..7e47281 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -384,12 +384,12 @@ class HTTPAdapter(BaseAdapter):\n         :rtype: dict\n         \"\"\"\n         headers = {}\n-        username, password = get_auth_from_url(proxy)\n-\n-        if username:\n-            headers['Proxy-Authorization'] = _basic_auth_str(username,\n-                                                             password)\n-\n+        # Only add proxy auth if not already present\n+        if 'Proxy-Authorization' not in request.headers:\n+            username, password = get_auth_from_url(proxy)\n+            if username:\n+                headers['Proxy-Authorization'] = _basic_auth_str(username,\n+                                                               password)\n         return headers\n \n     def send(self, request, stream=False, timeout=None, verify=True, cert=None, proxies=None):\n", "occurrence": 1, "normalized_patch": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex 8bf110e..d19b2af 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -155,9 +155,10 @@ class HTTPAdapter(BaseAdapter):\n         pass\n     def proxy_headers(self, proxy):\n         headers = {}\n-        username, password = get_auth_from_url(proxy)\n-        if username:\n-            headers['Proxy-Authorization'] = _basic_auth_str(username, password)\n+        if 'Proxy-Authorization' not in request.headers:\n+            username, password = get_auth_from_url(proxy)\n+            if username:\n+                headers['Proxy-Authorization'] = _basic_auth_str(username, password)\n         return headers\n     def send(self, request, stream=False, timeout=None, verify=True, cert=None, proxies=None):\n         try:\n", "normalized_occurrence": 1}
