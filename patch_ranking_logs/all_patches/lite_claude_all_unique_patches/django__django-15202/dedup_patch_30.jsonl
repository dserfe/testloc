{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15202", "model_patch": "diff --git a/django/forms/fields.py b/django/forms/fields.py\nindex b31d0ed..01205a2 100644\n--- a/django/forms/fields.py\n+++ b/django/forms/fields.py\n@@ -679,34 +679,14 @@ class URLField(CharField):\n         super().__init__(strip=True, **kwargs)\n \n     def to_python(self, value):\n-\n-        def split_url(url):\n-            \"\"\"\n-            Return a list of url parts via urlparse.urlsplit(), or raise\n-            ValidationError for some malformed URLs.\n-            \"\"\"\n-            try:\n-                return list(urlsplit(url))\n-            except ValueError:\n-                # urlparse.urlsplit can raise a ValueError with some\n-                # misformatted URLs.\n-                raise ValidationError(self.error_messages['invalid'], code='invalid')\n-\n         value = super().to_python(value)\n         if value:\n-            url_fields = split_url(value)\n-            if not url_fields[0]:\n+            if not isinstance(value, str):\n+                raise ValidationError(self.error_messages['invalid'], code='invalid')\n+            # Only check for scheme presence\n+            if '://' not in value:\n                 # If no URL scheme given, assume http://\n-                url_fields[0] = 'http'\n-            if not url_fields[1]:\n-                # Assume that if no domain is provided, that the path segment\n-                # contains the domain.\n-                url_fields[1] = url_fields[2]\n-                url_fields[2] = ''\n-                # Rebuild the url_fields list, since the domain segment may now\n-                # contain the path too.\n-                url_fields = split_url(urlunsplit(url_fields))\n-            value = urlunsplit(url_fields)\n+                value = 'http://' + value\n         return value\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/fields.py b/django/forms/fields.py\nindex 8548471..c4e6dcc 100644\n--- a/django/forms/fields.py\n+++ b/django/forms/fields.py\n@@ -403,21 +403,12 @@ class URLField(CharField):\n     def __init__(self, **kwargs):\n         super().__init__(strip=True, **kwargs)\n     def to_python(self, value):\n-        def split_url(url):\n-            try:\n-                return list(urlsplit(url))\n-            except ValueError:\n-                raise ValidationError(self.error_messages['invalid'], code='invalid')\n         value = super().to_python(value)\n         if value:\n-            url_fields = split_url(value)\n-            if not url_fields[0]:\n-                url_fields[0] = 'http'\n-            if not url_fields[1]:\n-                url_fields[1] = url_fields[2]\n-                url_fields[2] = ''\n-                url_fields = split_url(urlunsplit(url_fields))\n-            value = urlunsplit(url_fields)\n+            if not isinstance(value, str):\n+                raise ValidationError(self.error_messages['invalid'], code='invalid')\n+            if '://' not in value:\n+                value = 'http://' + value\n         return value\n class BooleanField(Field):\n     widget = CheckboxInput\n", "normalized_occurrence": 1}
