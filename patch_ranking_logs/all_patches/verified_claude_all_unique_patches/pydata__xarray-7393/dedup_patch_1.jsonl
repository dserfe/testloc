{"model_name_or_path": "agentless_claude", "instance_id": "pydata__xarray-7393", "model_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex 0194550..0566dd8 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -4515,6 +4515,9 @@ class Dataset(\n                 shape = [self.dims[d] for d in vdims]\n                 exp_var = var.set_dims(vdims, shape)\n                 stacked_var = exp_var.stack(**{new_dim: dims})\n+                # Preserve original dtype for coordinates\n+                if name in self._coord_names and stacked_var.dtype != exp_var.dtype:\n+                    stacked_var = stacked_var.astype(exp_var.dtype)\n                 new_variables[name] = stacked_var\n                 stacked_var_names.append(name)\n             else:\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex b7eb26f..6e50795 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -1431,6 +1431,8 @@ class Dataset(DataWithCoords, DatasetAggregations, DatasetArithmetic, Mapping[Ha\n                 shape = [self.dims[d] for d in vdims]\n                 exp_var = var.set_dims(vdims, shape)\n                 stacked_var = exp_var.stack(**{new_dim: dims})\n+                if name in self._coord_names and stacked_var.dtype != exp_var.dtype:\n+                    stacked_var = stacked_var.astype(exp_var.dtype)\n                 new_variables[name] = stacked_var\n                 stacked_var_names.append(name)\n             else:\n", "normalized_occurrence": 1}
