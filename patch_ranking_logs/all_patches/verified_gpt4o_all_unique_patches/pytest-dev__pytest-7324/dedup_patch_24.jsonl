{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7324", "model_patch": "diff --git a/src/_pytest/debugging.py b/src/_pytest/debugging.py\nindex 6a19d2c..b5cf07f 100644\n--- a/src/_pytest/debugging.py\n+++ b/src/_pytest/debugging.py\n@@ -58,7 +58,7 @@ def pytest_addoption(parser: Parser) -> None:\n \n \n def pytest_configure(config: Config) -> None:\n-    import pdb\n+    import pdb as real_pdb\n \n     if config.getvalue(\"trace\"):\n         config.pluginmanager.register(PdbTrace(), \"pdbtrace\")\n@@ -66,9 +66,9 @@ def pytest_configure(config: Config) -> None:\n         config.pluginmanager.register(PdbInvoke(), \"pdbinvoke\")\n \n     pytestPDB._saved.append(\n-        (pdb.set_trace, pytestPDB._pluginmanager, pytestPDB._config)\n+        (real_pdb.set_trace, pytestPDB._pluginmanager, pytestPDB._config)\n     )\n-    pdb.set_trace = pytestPDB.set_trace\n+    real_pdb.set_trace = pytestPDB.set_trace\n     pytestPDB._pluginmanager = config.pluginmanager\n     pytestPDB._config = config\n \n@@ -102,7 +102,7 @@ class pytestPDB:\n     @classmethod\n     def _import_pdb_cls(cls, capman: \"CaptureManager\"):\n         if not cls._config:\n-            import pdb\n+            import pdb as real_pdb\n \n             # Happens when using pytest.set_trace outside of a test.\n             return pdb.Pdb\n@@ -130,9 +130,9 @@ class pytestPDB:\n                     \"--pdbcls: could not import {!r}: {}\".format(value, exc)\n                 )\n         else:\n-            import pdb\n+            import pdb as real_pdb\n \n-            pdb_cls = pdb.Pdb\n+            pdb_cls = real_pdb.Pdb\n \n         wrapped_cls = cls._get_pdb_wrapper_class(pdb_cls, capman)\n         cls._wrapped_pdb_cls = (usepdb_cls, wrapped_cls)\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/debugging.py b/src/_pytest/debugging.py\nindex 04f3f1a..368189f 100644\n--- a/src/_pytest/debugging.py\n+++ b/src/_pytest/debugging.py\n@@ -29,13 +29,13 @@ def pytest_addoption(parser: Parser) -> None:\n     group._addoption('--pdbcls', dest='usepdb_cls', metavar='modulename:classname', type=_validate_usepdb_cls, help='start a custom interactive Python debugger on errors. For example: --pdbcls=IPython.terminal.debugger:TerminalPdb')\n     group._addoption('--trace', dest='trace', action='store_true', help='Immediately break when running each test.')\n def pytest_configure(config: Config) -> None:\n-    import pdb\n+    import pdb as real_pdb\n     if config.getvalue('trace'):\n         config.pluginmanager.register(PdbTrace(), 'pdbtrace')\n     if config.getvalue('usepdb'):\n         config.pluginmanager.register(PdbInvoke(), 'pdbinvoke')\n-    pytestPDB._saved.append((pdb.set_trace, pytestPDB._pluginmanager, pytestPDB._config))\n-    pdb.set_trace = pytestPDB.set_trace\n+    pytestPDB._saved.append((real_pdb.set_trace, pytestPDB._pluginmanager, pytestPDB._config))\n+    real_pdb.set_trace = pytestPDB.set_trace\n     pytestPDB._pluginmanager = config.pluginmanager\n     pytestPDB._config = config\n     def fin() -> None:\n@@ -55,7 +55,7 @@ class pytestPDB:\n     @classmethod\n     def _import_pdb_cls(cls, capman: 'CaptureManager'):\n         if not cls._config:\n-            import pdb\n+            import pdb as real_pdb\n             return pdb.Pdb\n         usepdb_cls = cls._config.getvalue('usepdb_cls')\n         if cls._wrapped_pdb_cls and cls._wrapped_pdb_cls[0] == usepdb_cls:\n@@ -73,8 +73,8 @@ class pytestPDB:\n                 value = ':'.join((modname, classname))\n                 raise UsageError('--pdbcls: could not import {!r}: {}'.format(value, exc))\n         else:\n-            import pdb\n-            pdb_cls = pdb.Pdb\n+            import pdb as real_pdb\n+            pdb_cls = real_pdb.Pdb\n         wrapped_cls = cls._get_pdb_wrapper_class(pdb_cls, capman)\n         cls._wrapped_pdb_cls = (usepdb_cls, wrapped_cls)\n         return wrapped_cls\n", "normalized_occurrence": 1}
