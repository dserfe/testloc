{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-25638", "model_patch": "diff --git a/sklearn/utils/multiclass.py b/sklearn/utils/multiclass.py\nindex db3f82e..54f6065 100644\n--- a/sklearn/utils/multiclass.py\n+++ b/sklearn/utils/multiclass.py\n@@ -340,9 +340,17 @@ def type_of_target(y, input_name=\"\"):\n             return \"binary\"  # []\n         # 2-D empty array: [[]]\n         return \"unknown\"\n-    if not issparse(y) and y.dtype == object and not isinstance(y.flat[0], str):\n-        # [obj_1] and not [\"label_1\"]\n-        return \"unknown\"\n+    if not issparse(y):\n+        if y.dtype == object and not isinstance(y.flat[0], str):\n+            # [obj_1] and not [\"label_1\"]\n+            return \"unknown\"\n+        elif isinstance(y, pd.Series) and pd.api.types.is_extension_array_dtype(y.dtype):\n+            if pd.api.types.is_integer_dtype(y.dtype):\n+                return \"multiclass\"\n+            elif pd.api.types.is_bool_dtype(y.dtype):\n+                return \"binary\"\n+            elif pd.api.types.is_float_dtype(y.dtype):\n+                return \"multiclass\"\n \n     # Check if multioutput\n     if y.ndim == 2 and y.shape[1] > 1:\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/utils/multiclass.py b/sklearn/utils/multiclass.py\nindex dee4b2a..92526b3 100644\n--- a/sklearn/utils/multiclass.py\n+++ b/sklearn/utils/multiclass.py\n@@ -91,8 +91,16 @@ def type_of_target(y, input_name=''):\n         if y.ndim == 1:\n             return 'binary'\n         return 'unknown'\n-    if not issparse(y) and y.dtype == object and (not isinstance(y.flat[0], str)):\n-        return 'unknown'\n+    if not issparse(y):\n+        if y.dtype == object and (not isinstance(y.flat[0], str)):\n+            return 'unknown'\n+        elif isinstance(y, pd.Series) and pd.api.types.is_extension_array_dtype(y.dtype):\n+            if pd.api.types.is_integer_dtype(y.dtype):\n+                return 'multiclass'\n+            elif pd.api.types.is_bool_dtype(y.dtype):\n+                return 'binary'\n+            elif pd.api.types.is_float_dtype(y.dtype):\n+                return 'multiclass'\n     if y.ndim == 2 and y.shape[1] > 1:\n         suffix = '-multioutput'\n     else:\n", "normalized_occurrence": 1}
