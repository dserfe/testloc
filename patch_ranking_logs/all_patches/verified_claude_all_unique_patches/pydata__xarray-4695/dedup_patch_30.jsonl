{"model_name_or_path": "agentless_claude", "instance_id": "pydata__xarray-4695", "model_patch": "diff --git a/xarray/core/indexing.py b/xarray/core/indexing.py\nindex 4b06bfd..cc383d6 100644\n--- a/xarray/core/indexing.py\n+++ b/xarray/core/indexing.py\n@@ -197,7 +197,12 @@ def convert_label_indexer(index, label, index_name=\"\", method=None, tolerance=No\n                     \"Vectorized selection is not available along \"\n                     \"MultiIndex variable: \" + index_name\n                 )\n-            indexer = get_indexer_nd(index, label, method, tolerance)\n+            # Don't pass method/tolerance if the index_name is 'method' or 'tolerance'\n+            # to avoid conflict with dimension names\n+            if index_name in ['method', 'tolerance']:\n+                indexer = get_indexer_nd(index, label)\n+            else:\n+                indexer = get_indexer_nd(index, label, method, tolerance)\n             if np.any(indexer < 0):\n                 raise KeyError(f\"not all values found in index {index_name!r}\")\n     return indexer, new_index\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/indexing.py b/xarray/core/indexing.py\nindex 27ac399..c06a1cf 100644\n--- a/xarray/core/indexing.py\n+++ b/xarray/core/indexing.py\n@@ -104,7 +104,10 @@ def convert_label_indexer(index, label, index_name='', method=None, tolerance=No\n         else:\n             if isinstance(index, pd.MultiIndex) and label.ndim > 1:\n                 raise ValueError('Vectorized selection is not available along MultiIndex variable: ' + index_name)\n-            indexer = get_indexer_nd(index, label, method, tolerance)\n+            if index_name in ['method', 'tolerance']:\n+                indexer = get_indexer_nd(index, label)\n+            else:\n+                indexer = get_indexer_nd(index, label, method, tolerance)\n             if np.any(indexer < 0):\n                 raise KeyError(f'not all values found in index {index_name!r}')\n     return (indexer, new_index)\n", "normalized_occurrence": 1}
