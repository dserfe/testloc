{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13773", "model_patch": "diff --git a/sympy/matrices/expressions/matmul.py b/sympy/matrices/expressions/matmul.py\nindex 13b44f5..ecbb0f6 100644\n--- a/sympy/matrices/expressions/matmul.py\n+++ b/sympy/matrices/expressions/matmul.py\n@@ -31,7 +31,10 @@ class MatMul(MatrixExpr):\n     def __new__(cls, *args, **kwargs):\n         check = kwargs.get('check', True)\n \n-        args = list(map(sympify, args))\n+        from sympy.matrices.matrices import MatrixBase\n+        args = [sympify(arg) for arg in args]\n+        if not all(isinstance(arg, MatrixBase) for arg in args):\n+            raise ValueError(\"All operands to MatMul must be matrices\")\n         obj = Basic.__new__(cls, *args)\n         factor, matrices = obj.as_coeff_matrices()\n         if check:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/expressions/matmul.py b/sympy/matrices/expressions/matmul.py\nindex c9124f3..d86644b 100644\n--- a/sympy/matrices/expressions/matmul.py\n+++ b/sympy/matrices/expressions/matmul.py\n@@ -11,7 +11,10 @@ class MatMul(MatrixExpr):\n     is_MatMul = True\n     def __new__(cls, *args, **kwargs):\n         check = kwargs.get('check', True)\n-        args = list(map(sympify, args))\n+        from sympy.matrices.matrices import MatrixBase\n+        args = [sympify(arg) for arg in args]\n+        if not all((isinstance(arg, MatrixBase) for arg in args)):\n+            raise ValueError('All operands to MatMul must be matrices')\n         obj = Basic.__new__(cls, *args)\n         factor, matrices = obj.as_coeff_matrices()\n         if check:\n", "normalized_occurrence": 1}
