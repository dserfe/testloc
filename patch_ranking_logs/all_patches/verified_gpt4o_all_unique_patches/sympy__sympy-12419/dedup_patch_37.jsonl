{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-12419", "model_patch": "diff --git a/sympy/matrices/expressions/matmul.py b/sympy/matrices/expressions/matmul.py\nindex 639ff43..fe18790 100644\n--- a/sympy/matrices/expressions/matmul.py\n+++ b/sympy/matrices/expressions/matmul.py\n@@ -63,7 +63,7 @@ class MatMul(MatrixExpr):\n         k = Dummy('k', integer=True)\n         if X.has(ImmutableMatrix) or Y.has(ImmutableMatrix):\n             return coeff*Add(*[X[i, k]*Y[k, j] for k in range(X.cols)])\n-        result = Sum(coeff*X[i, k]*Y[k, j], (k, 0, X.cols - 1))\n+        result = coeff * Sum(X[i, k]*Y[k, j], (k, 0, X.cols - 1))\n         if not X.cols.is_number:\n             # Don't waste time in result.doit() if the sum bounds are symbolic\n             expand = False\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/expressions/matmul.py b/sympy/matrices/expressions/matmul.py\nindex 5b270b9..3565d40 100644\n--- a/sympy/matrices/expressions/matmul.py\n+++ b/sympy/matrices/expressions/matmul.py\n@@ -38,7 +38,7 @@ class MatMul(MatrixExpr):\n         k = Dummy('k', integer=True)\n         if X.has(ImmutableMatrix) or Y.has(ImmutableMatrix):\n             return coeff * Add(*[X[i, k] * Y[k, j] for k in range(X.cols)])\n-        result = Sum(coeff * X[i, k] * Y[k, j], (k, 0, X.cols - 1))\n+        result = coeff * Sum(X[i, k] * Y[k, j], (k, 0, X.cols - 1))\n         if not X.cols.is_number:\n             expand = False\n         return result.doit() if expand else result\n", "normalized_occurrence": 1}
