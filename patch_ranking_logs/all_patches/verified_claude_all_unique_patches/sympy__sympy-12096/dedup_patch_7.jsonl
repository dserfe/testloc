{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-12096", "model_patch": "diff --git a/sympy/core/function.py b/sympy/core/function.py\nindex 654774e..54a6b05 100644\n--- a/sympy/core/function.py\n+++ b/sympy/core/function.py\n@@ -507,7 +507,11 @@ class Function(Application, Expr):\n             func = getattr(mpmath, fname)\n         except (AttributeError, KeyError):\n             try:\n-                return Float(self._imp_(*self.args), prec)\n+                result = self._imp_(*self.args)\n+                # Handle the case where _imp_ returns a sympifiable expression\n+                from sympy import sympify\n+                result = sympify(result)\n+                return result.evalf(prec)\n             except (AttributeError, TypeError, ValueError):\n                 return\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/function.py b/sympy/core/function.py\nindex c09e75a..1418497 100644\n--- a/sympy/core/function.py\n+++ b/sympy/core/function.py\n@@ -181,7 +181,10 @@ class Function(Application, Expr):\n             func = getattr(mpmath, fname)\n         except (AttributeError, KeyError):\n             try:\n-                return Float(self._imp_(*self.args), prec)\n+                result = self._imp_(*self.args)\n+                from sympy import sympify\n+                result = sympify(result)\n+                return result.evalf(prec)\n             except (AttributeError, TypeError, ValueError):\n                 return\n         try:\n", "normalized_occurrence": 4}
