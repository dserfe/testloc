{"model_name_or_path": "agentless", "instance_id": "django__django-10924", "model_patch": "diff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py\nindex 73109d9..f42b757 100644\n--- a/django/db/models/fields/files.py\n+++ b/django/db/models/fields/files.py\n@@ -224,7 +224,10 @@ class FileField(Field):\n         self._primary_key_set_explicitly = 'primary_key' in kwargs\n \n         self.storage = storage or default_storage\n-        self.upload_to = upload_to\n+        if callable(upload_to):\n+            self.upload_to = upload_to()\n+        else:\n+            self.upload_to = upload_to\n \n         kwargs.setdefault('max_length', 100)\n         super().__init__(verbose_name, name, **kwargs)\n@@ -266,7 +269,10 @@ class FileField(Field):\n         name, path, args, kwargs = super().deconstruct()\n         if kwargs.get(\"max_length\") == 100:\n             del kwargs[\"max_length\"]\n-        kwargs['upload_to'] = self.upload_to\n+        if callable(self.upload_to):\n+            kwargs['upload_to'] = self.upload_to.__code__\n+        else:\n+            kwargs['upload_to'] = self.upload_to\n         if self.storage is not default_storage:\n             kwargs['storage'] = self.storage\n         return name, path, args, kwargs\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py\nindex 782a310..f1f90ed 100644\n--- a/django/db/models/fields/files.py\n+++ b/django/db/models/fields/files.py\n@@ -122,7 +122,10 @@ class FileField(Field):\n     def __init__(self, verbose_name=None, name=None, upload_to='', storage=None, **kwargs):\n         self._primary_key_set_explicitly = 'primary_key' in kwargs\n         self.storage = storage or default_storage\n-        self.upload_to = upload_to\n+        if callable(upload_to):\n+            self.upload_to = upload_to()\n+        else:\n+            self.upload_to = upload_to\n         kwargs.setdefault('max_length', 100)\n         super().__init__(verbose_name, name, **kwargs)\n     def check(self, **kwargs):\n@@ -141,7 +144,10 @@ class FileField(Field):\n         name, path, args, kwargs = super().deconstruct()\n         if kwargs.get('max_length') == 100:\n             del kwargs['max_length']\n-        kwargs['upload_to'] = self.upload_to\n+        if callable(self.upload_to):\n+            kwargs['upload_to'] = self.upload_to.__code__\n+        else:\n+            kwargs['upload_to'] = self.upload_to\n         if self.storage is not default_storage:\n             kwargs['storage'] = self.storage\n         return (name, path, args, kwargs)\n", "normalized_occurrence": 1}
