{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13915", "model_patch": "diff --git a/sympy/core/basic.py b/sympy/core/basic.py\nindex 0977e81..bc64f84 100644\n--- a/sympy/core/basic.py\n+++ b/sympy/core/basic.py\n@@ -920,6 +920,13 @@ class Basic(with_metaclass(ManagedProperties)):\n                 rv = rv._subs(old, new, **kwargs)\n                 if not isinstance(rv, Basic):\n                     break\n+            # Check if the resulting expression becomes undefined\n+            # If r.subs(b, a) results in an undefined expression, compute the limit instead\n+            if rv.has(S.NaN) or rv.has(oo) or rv.has(-oo):\n+                for old, new in sequence:\n+                    if rv.subs(old, new).has(S.NaN) or rv.subs(old, new).has(oo) or rv.subs(old, new).has(-oo):\n+                        rv = rv.limit(old, new)\n+                        break\n             return rv\n \n     @cacheit\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/basic.py b/sympy/core/basic.py\nindex 782db85..877b694 100644\n--- a/sympy/core/basic.py\n+++ b/sympy/core/basic.py\n@@ -329,6 +329,11 @@ class Basic(with_metaclass(ManagedProperties)):\n                 rv = rv._subs(old, new, **kwargs)\n                 if not isinstance(rv, Basic):\n                     break\n+            if rv.has(S.NaN) or rv.has(oo) or rv.has(-oo):\n+                for old, new in sequence:\n+                    if rv.subs(old, new).has(S.NaN) or rv.subs(old, new).has(oo) or rv.subs(old, new).has(-oo):\n+                        rv = rv.limit(old, new)\n+                        break\n             return rv\n     @cacheit\n     def _subs(self, old, new, **hints):\n", "normalized_occurrence": 1}
