+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\''
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmf-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmpy-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/gdal-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/geotiff-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libarrow_activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/proj4-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/udunits2-activate.sh"'
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\''
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmf-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmpy-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/gdal-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/geotiff-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libarrow_activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/proj4-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/udunits2-activate.sh"'
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/esmf-activate.sh
+++ '[' -n '' ']'
+++ '[' -f /opt/miniconda3/envs/testbed/lib/esmf.mk ']'
+++ export ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/esmpy-activate.sh
+++ '[' -n /opt/miniconda3/envs/testbed/lib/esmf.mk ']'
+++ export _CONDA_SET_ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ _CONDA_SET_ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ '[' -f /opt/miniconda3/envs/testbed/lib/esmf.mk ']'
+++ export ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/gdal-activate.sh
+++ '[' -n '' ']'
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/gdal ']'
+++ export GDAL_DATA=/opt/miniconda3/envs/testbed/share/gdal
+++ GDAL_DATA=/opt/miniconda3/envs/testbed/share/gdal
+++ export GDAL_DRIVER_PATH=/opt/miniconda3/envs/testbed/lib/gdalplugins
+++ GDAL_DRIVER_PATH=/opt/miniconda3/envs/testbed/lib/gdalplugins
+++ '[' '!' -d /opt/miniconda3/envs/testbed/lib/gdalplugins ']'
+++ export CPL_ZIP_ENCODING=UTF-8
+++ CPL_ZIP_ENCODING=UTF-8
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/geotiff-activate.sh
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/epsg_csv ']'
+++ '[' -d /opt/miniconda3/envs/testbed/Library/share/epsg_csv ']'
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/libarrow_activate.sh
+++ _la_log 'Beginning libarrow activation.'
+++ '[' '' = 1 ']'
+++ _la_gdb_prefix=/opt/miniconda3/envs/testbed/share/gdb/auto-load
+++ '[' '!' -w /opt/miniconda3/envs/testbed/share/gdb/auto-load ']'
+++ _la_placeholder=replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX
+++ _la_symlink_dir=/opt/miniconda3/envs/testbed/share/gdb/auto-load//opt/miniconda3/envs/testbed/lib
+++ _la_orig_install_dir=/opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib
+++ _la_log '          _la_gdb_prefix: /opt/miniconda3/envs/testbed/share/gdb/auto-load'
+++ '[' '' = 1 ']'
+++ _la_log '         _la_placeholder: replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX'
+++ '[' '' = 1 ']'
+++ _la_log '         _la_symlink_dir: /opt/miniconda3/envs/testbed/share/gdb/auto-load//opt/miniconda3/envs/testbed/lib'
+++ '[' '' = 1 ']'
+++ _la_log '    _la_orig_install_dir: /opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib'
+++ '[' '' = 1 ']'
+++ _la_log '  content of that folder:'
+++ '[' '' = 1 ']'
++++ ls -al /opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib
++++ sed 's/^/      /'
+++ _la_log '      total 12
      drwxr-xr-x 2 root root 4096 Oct  9  2024 .
      drwxr-xr-x 3 root root 4096 Oct  9  2024 ..
      -rw-r--r-- 1 root root  971 Oct  9  2024 libarrow.so.1700.0.0-gdb.py'
+++ '[' '' = 1 ']'
+++ for _la_target in "$_la_orig_install_dir/"*.py
+++ '[' '!' -e /opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib/libarrow.so.1700.0.0-gdb.py ']'
++++ basename /opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib/libarrow.so.1700.0.0-gdb.py
+++ _la_symlink=/opt/miniconda3/envs/testbed/share/gdb/auto-load//opt/miniconda3/envs/testbed/lib/libarrow.so.1700.0.0-gdb.py
+++ _la_log '   _la_target: /opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib/libarrow.so.1700.0.0-gdb.py'
+++ '[' '' = 1 ']'
+++ _la_log '  _la_symlink: /opt/miniconda3/envs/testbed/share/gdb/auto-load//opt/miniconda3/envs/testbed/lib/libarrow.so.1700.0.0-gdb.py'
+++ '[' '' = 1 ']'
+++ '[' -L /opt/miniconda3/envs/testbed/share/gdb/auto-load//opt/miniconda3/envs/testbed/lib/libarrow.so.1700.0.0-gdb.py ']'
++++ readlink /opt/miniconda3/envs/testbed/share/gdb/auto-load//opt/miniconda3/envs/testbed/lib/libarrow.so.1700.0.0-gdb.py
+++ '[' /opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib/libarrow.so.1700.0.0-gdb.py = /opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib/libarrow.so.1700.0.0-gdb.py ']'
+++ _la_log 'symlink $_la_symlink already exists and points to $_la_target, skipping.'
+++ '[' '' = 1 ']'
+++ continue
+++ _la_log 'Libarrow activation complete.'
+++ '[' '' = 1 ']'
+++ unset _la_gdb_prefix
+++ unset _la_log
+++ unset _la_orig_install_dir
+++ unset _la_placeholder
+++ unset _la_symlink
+++ unset _la_symlink_dir
+++ unset _la_target
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh
+++ test -n ''
+++ xml_catalog_files_libxml2=
+++ XML_CATALOG_FILES=
+++ conda_catalog_files=
+++ ifs_libxml2=' 	
'
+++ IFS=' '
+++ rem=/opt/miniconda3/envs/testbed
+++ for pre in ${rem}
+++ test '' = /opt/miniconda3/envs/testbed
+++ conda_catalog_files=/opt/miniconda3/envs/testbed
+++ rem=
+++ IFS=' 	
'
+++ conda_catalog_files='file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ export 'XML_CATALOG_FILES=file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ XML_CATALOG_FILES='file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ unset conda_catalog_files ifs_libxml2 rem
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/proj4-activate.sh
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/proj ']'
+++ export PROJ_DATA=/opt/miniconda3/envs/testbed/share/proj
+++ PROJ_DATA=/opt/miniconda3/envs/testbed/share/proj
+++ '[' -f /opt/miniconda3/envs/testbed/share/proj/copyright_and_licenses.csv ']'
+++ export PROJ_NETWORK=ON
+++ PROJ_NETWORK=ON
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/udunits2-activate.sh
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/udunits ']'
+++ export UDUNITS2_XML_PATH=/opt/miniconda3/envs/testbed/share/udunits/udunits2.xml
+++ UDUNITS2_XML_PATH=/opt/miniconda3/envs/testbed/share/udunits/udunits2.xml
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   xarray/core/formatting.py

no changes added to commit (use "git add" and/or "git commit -a")
+ git show
commit e56905889c836c736152b11a7e6117a229715975
Author: Alessandro Amici <a.amici@bopen.eu>
Date:   Wed Apr 7 19:34:15 2021 +0200

    Do not write an empty "coordinates" attribute to a netCDF file (#5121)
    
    Co-authored-by: keewis <keewis@users.noreply.github.com>

diff --git a/xarray/conventions.py b/xarray/conventions.py
index f7be60c3..aece572f 100644
--- a/xarray/conventions.py
+++ b/xarray/conventions.py
@@ -756,11 +756,13 @@ def _encode_coordinates(variables, attributes, non_dim_coord_names):
         # we get support for attrs["coordinates"] for free.
         coords_str = pop_to(encoding, attrs, "coordinates")
         if not coords_str and variable_coordinates[name]:
-            attrs["coordinates"] = " ".join(
+            coordinates_text = " ".join(
                 str(coord_name)
                 for coord_name in variable_coordinates[name]
                 if coord_name not in not_technically_coordinates
             )
+            if coordinates_text:
+                attrs["coordinates"] = coordinates_text
         if "coordinates" in attrs:
             written_coords.update(attrs["coordinates"].split())
 
diff --git a/xarray/tests/test_backends.py b/xarray/tests/test_backends.py
index 33de0a98..8cdd21b9 100644
--- a/xarray/tests/test_backends.py
+++ b/xarray/tests/test_backends.py
@@ -920,7 +920,7 @@ class CFEncodedBase(DatasetIOBase):
             with open_dataset(tmp_file, decode_coords=False) as ds:
                 assert ds.coords["latitude"].attrs["bounds"] == "latitude_bnds"
                 assert ds.coords["longitude"].attrs["bounds"] == "longitude_bnds"
-                assert "latlon" not in ds["variable"].attrs["coordinates"]
+                assert "coordinates" not in ds["variable"].attrs
                 assert "coordinates" not in ds.attrs
 
     def test_coordinate_variables_after_dataset_roundtrip(self):
+ git -c core.fileMode=false diff e56905889c836c736152b11a7e6117a229715975
diff --git a/xarray/core/formatting.py b/xarray/core/formatting.py
index 13f38820..b46cb72b 100644
--- a/xarray/core/formatting.py
+++ b/xarray/core/formatting.py
@@ -532,7 +532,7 @@ def dataset_repr(ds):
     if ds.attrs:
         summary.append(attrs_repr(ds.attrs))
 
-    return "\n".join(summary)
+    return "\n".join(line.rstrip() for line in summary)
 
 
 def diff_dim_summary(a, b):
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/udunits2-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/proj4-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/libxml2_deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/geotiff-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/gdal-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/esmpy-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/esmf-deactivate.sh"
PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval '. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/udunits2-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/proj4-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/libxml2_deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/geotiff-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/gdal-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/esmpy-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/esmf-deactivate.sh"
PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/udunits2-deactivate.sh
++++ unset UDUNITS2_XML_PATH
++++ '[' -n '' ']'
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/proj4-deactivate.sh
++++ unset PROJ_DATA
++++ unset PROJ_NETWORK
++++ '[' -n '' ']'
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/libxml2_deactivate.sh
++++ test -n ''
++++ unset XML_CATALOG_FILES
++++ unset xml_catalog_files_libxml2
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/geotiff-deactivate.sh
++++ unset GEOTIFF_CSV
++++ '[' -n '' ']'
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/gdal-deactivate.sh
++++ unset GDAL_DATA
++++ '[' -n '' ']'
++++ unset GDAL_DRIVER_PATH
++++ '[' -n '' ']'
++++ unset CPL_ZIP_ENCODING
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/esmpy-deactivate.sh
++++ unset ESMFMKFILE
++++ '[' -n /opt/miniconda3/envs/testbed/lib/esmf.mk ']'
++++ export ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
++++ ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
++++ unset _CONDA_SET_ESMFMKFILE
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/esmf-deactivate.sh
++++ unset ESMFMKFILE
++++ '[' -n '' ']'
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\''
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmf-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmpy-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/gdal-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/geotiff-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libarrow_activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/proj4-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/udunits2-activate.sh"'
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\''
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmf-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmpy-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/gdal-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/geotiff-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libarrow_activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/proj4-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/udunits2-activate.sh"'
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/esmf-activate.sh
+++ '[' -n '' ']'
+++ '[' -f /opt/miniconda3/envs/testbed/lib/esmf.mk ']'
+++ export ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/esmpy-activate.sh
+++ '[' -n /opt/miniconda3/envs/testbed/lib/esmf.mk ']'
+++ export _CONDA_SET_ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ _CONDA_SET_ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ '[' -f /opt/miniconda3/envs/testbed/lib/esmf.mk ']'
+++ export ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/gdal-activate.sh
+++ '[' -n '' ']'
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/gdal ']'
+++ export GDAL_DATA=/opt/miniconda3/envs/testbed/share/gdal
+++ GDAL_DATA=/opt/miniconda3/envs/testbed/share/gdal
+++ export GDAL_DRIVER_PATH=/opt/miniconda3/envs/testbed/lib/gdalplugins
+++ GDAL_DRIVER_PATH=/opt/miniconda3/envs/testbed/lib/gdalplugins
+++ '[' '!' -d /opt/miniconda3/envs/testbed/lib/gdalplugins ']'
+++ export CPL_ZIP_ENCODING=UTF-8
+++ CPL_ZIP_ENCODING=UTF-8
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/geotiff-activate.sh
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/epsg_csv ']'
+++ '[' -d /opt/miniconda3/envs/testbed/Library/share/epsg_csv ']'
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/libarrow_activate.sh
+++ _la_log 'Beginning libarrow activation.'
+++ '[' '' = 1 ']'
+++ _la_gdb_prefix=/opt/miniconda3/envs/testbed/share/gdb/auto-load
+++ '[' '!' -w /opt/miniconda3/envs/testbed/share/gdb/auto-load ']'
+++ _la_placeholder=replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX
+++ _la_symlink_dir=/opt/miniconda3/envs/testbed/share/gdb/auto-load//opt/miniconda3/envs/testbed/lib
+++ _la_orig_install_dir=/opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib
+++ _la_log '          _la_gdb_prefix: /opt/miniconda3/envs/testbed/share/gdb/auto-load'
+++ '[' '' = 1 ']'
+++ _la_log '         _la_placeholder: replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX'
+++ '[' '' = 1 ']'
+++ _la_log '         _la_symlink_dir: /opt/miniconda3/envs/testbed/share/gdb/auto-load//opt/miniconda3/envs/testbed/lib'
+++ '[' '' = 1 ']'
+++ _la_log '    _la_orig_install_dir: /opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib'
+++ '[' '' = 1 ']'
+++ _la_log '  content of that folder:'
+++ '[' '' = 1 ']'
++++ ls -al /opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib
++++ sed 's/^/      /'
+++ _la_log '      total 12
      drwxr-xr-x 2 root root 4096 Oct  9  2024 .
      drwxr-xr-x 3 root root 4096 Oct  9  2024 ..
      -rw-r--r-- 1 root root  971 Oct  9  2024 libarrow.so.1700.0.0-gdb.py'
+++ '[' '' = 1 ']'
+++ for _la_target in "$_la_orig_install_dir/"*.py
+++ '[' '!' -e /opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib/libarrow.so.1700.0.0-gdb.py ']'
++++ basename /opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib/libarrow.so.1700.0.0-gdb.py
+++ _la_symlink=/opt/miniconda3/envs/testbed/share/gdb/auto-load//opt/miniconda3/envs/testbed/lib/libarrow.so.1700.0.0-gdb.py
+++ _la_log '   _la_target: /opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib/libarrow.so.1700.0.0-gdb.py'
+++ '[' '' = 1 ']'
+++ _la_log '  _la_symlink: /opt/miniconda3/envs/testbed/share/gdb/auto-load//opt/miniconda3/envs/testbed/lib/libarrow.so.1700.0.0-gdb.py'
+++ '[' '' = 1 ']'
+++ '[' -L /opt/miniconda3/envs/testbed/share/gdb/auto-load//opt/miniconda3/envs/testbed/lib/libarrow.so.1700.0.0-gdb.py ']'
++++ readlink /opt/miniconda3/envs/testbed/share/gdb/auto-load//opt/miniconda3/envs/testbed/lib/libarrow.so.1700.0.0-gdb.py
+++ '[' /opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib/libarrow.so.1700.0.0-gdb.py = /opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib/libarrow.so.1700.0.0-gdb.py ']'
+++ _la_log 'symlink $_la_symlink already exists and points to $_la_target, skipping.'
+++ '[' '' = 1 ']'
+++ continue
+++ _la_log 'Libarrow activation complete.'
+++ '[' '' = 1 ']'
+++ unset _la_gdb_prefix
+++ unset _la_log
+++ unset _la_orig_install_dir
+++ unset _la_placeholder
+++ unset _la_symlink
+++ unset _la_symlink_dir
+++ unset _la_target
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh
+++ test -n ''
+++ xml_catalog_files_libxml2=
+++ XML_CATALOG_FILES=
+++ conda_catalog_files=
+++ ifs_libxml2=' 	
'
+++ IFS=' '
+++ rem=/opt/miniconda3/envs/testbed
+++ for pre in ${rem}
+++ test '' = /opt/miniconda3/envs/testbed
+++ conda_catalog_files=/opt/miniconda3/envs/testbed
+++ rem=
+++ IFS=' 	
'
+++ conda_catalog_files='file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ export 'XML_CATALOG_FILES=file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ XML_CATALOG_FILES='file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ unset conda_catalog_files ifs_libxml2 rem
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/proj4-activate.sh
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/proj ']'
+++ export PROJ_DATA=/opt/miniconda3/envs/testbed/share/proj
+++ PROJ_DATA=/opt/miniconda3/envs/testbed/share/proj
+++ '[' -f /opt/miniconda3/envs/testbed/share/proj/copyright_and_licenses.csv ']'
+++ export PROJ_NETWORK=ON
+++ PROJ_NETWORK=ON
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/udunits2-activate.sh
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/udunits ']'
+++ export UDUNITS2_XML_PATH=/opt/miniconda3/envs/testbed/share/udunits/udunits2.xml
+++ UDUNITS2_XML_PATH=/opt/miniconda3/envs/testbed/share/udunits/udunits2.xml
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Installing build dependencies: started
  Installing build dependencies: finished with status 'done'
  Checking if build backend supports build_editable: started
  Checking if build backend supports build_editable: finished with status 'done'
  Getting requirements to build editable: started
  Getting requirements to build editable: finished with status 'done'
  Preparing editable metadata (pyproject.toml): started
  Preparing editable metadata (pyproject.toml): finished with status 'done'
Requirement already satisfied: numpy>=1.17 in /opt/miniconda3/envs/testbed/lib/python3.10/site-packages (from xarray==0.17.1.dev52+ge56905889.d20250922) (1.23.0)
Requirement already satisfied: pandas>=1.0 in /opt/miniconda3/envs/testbed/lib/python3.10/site-packages (from xarray==0.17.1.dev52+ge56905889.d20250922) (1.5.3)
Requirement already satisfied: setuptools>=40.4 in /opt/miniconda3/envs/testbed/lib/python3.10/site-packages (from xarray==0.17.1.dev52+ge56905889.d20250922) (68.0.0)
Requirement already satisfied: python-dateutil>=2.8.1 in /opt/miniconda3/envs/testbed/lib/python3.10/site-packages (from pandas>=1.0->xarray==0.17.1.dev52+ge56905889.d20250922) (2.8.2)
Requirement already satisfied: pytz>=2020.1 in /opt/miniconda3/envs/testbed/lib/python3.10/site-packages (from pandas>=1.0->xarray==0.17.1.dev52+ge56905889.d20250922) (2023.3)
Requirement already satisfied: six>=1.5 in /opt/miniconda3/envs/testbed/lib/python3.10/site-packages (from python-dateutil>=2.8.1->pandas>=1.0->xarray==0.17.1.dev52+ge56905889.d20250922) (1.16.0)
Building wheels for collected packages: xarray
  Building editable for xarray (pyproject.toml): started
  Building editable for xarray (pyproject.toml): finished with status 'done'
  Created wheel for xarray: filename=xarray-0.17.1.dev52+ge56905889.d20250922-0.editable-py3-none-any.whl size=9131 sha256=977289ed150b5083eb1ef56d93e44b14c6bf44f785db582934a2f6bec4a4d92a
  Stored in directory: /tmp/pip-ephem-wheel-cache-31ngys02/wheels/0d/a6/cb/465a7b303d624cc531250fa27c75d038ddc29430bdb6ba7c9f
Successfully built xarray
Installing collected packages: xarray
  Attempting uninstall: xarray
    Found existing installation: xarray 0.17.1.dev52+ge5690588
    Uninstalling xarray-0.17.1.dev52+ge5690588:
      Successfully uninstalled xarray-0.17.1.dev52+ge5690588
Successfully installed xarray-0.17.1.dev52+ge56905889.d20250922
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git checkout e56905889c836c736152b11a7e6117a229715975 xarray/tests/test_groupby.py
Updated 0 paths from 1c2ce001
+ git apply -v -
Checking patch xarray/tests/test_groupby.py...
Applied patch xarray/tests/test_groupby.py cleanly.
+ : '>>>>> Start Test Output'
+ pytest -rA xarray/tests/test_groupby.py
============================= test session starts ==============================
platform linux -- Python 3.10.15, pytest-7.4.0, pluggy-1.5.0
rootdir: /testbed
configfile: setup.cfg
plugins: xdist-3.6.1, hypothesis-6.114.0, env-1.1.5, cov-5.0.0
collected 34 items

xarray/tests/test_groupby.py .................FFFFFFFFFF.......          [100%]

=================================== FAILURES ===================================
__________________________ test_groupby_repr[obj0-x] ___________________________

obj = <xarray.DataArray (x: 10, y: 20, z: 6, t: 24)>
array([[[[-1.05332945e+00, -1.30845648e+00, -3.20922373e-01, ...,
     ...02-12-31
    month    (t) int64 1 2 3 4 5 6 7 8 9 10 11 12 1 2 3 4 5 6 7 8 9 10 11 12
Dimensions without coordinates: y
dim = 'x'

    @pytest.mark.parametrize("dim", ["x", "y", "z", "month"])
    @pytest.mark.parametrize("obj", [repr_da, repr_da.to_dataset(name="a")])
    def test_groupby_repr(obj, dim):
        actual = repr(obj.groupby(dim))
        expected = "%sGroupBy" % obj.__class__.__name__
        expected += ", grouped over %r" % dim
        expected += "\n%r groups with labels " % (len(np.unique(obj[dim])))
        if dim == "x":
            expected += "1, 2, 3, 4, 5."
        elif dim == "y":
            expected += "0, 1, 2, 3, 4, 5, ..., 15, 16, 17, 18, 19."
        elif dim == "z":
            expected += "'a', 'b', 'c'."
        elif dim == "month":
            expected += "1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12."
>       assert actual == expected
E       AssertionError: assert 'DataArrayGro..., 2, 3, 4, 5.' == 'DataArrayGro..., 2, 3, 4, 5.'
E         - DataArrayGroupBy, grouped over 'x'
E         + DataArrayGroupBy, grouped over 'x' 
E         ?                                   +
E           5 groups with labels 1, 2, 3, 4, 5.

/testbed/xarray/tests/test_groupby.py:401: AssertionError
__________________________ test_groupby_repr[obj0-y] ___________________________

obj = <xarray.DataArray (x: 10, y: 20, z: 6, t: 24)>
array([[[[-1.05332945e+00, -1.30845648e+00, -3.20922373e-01, ...,
     ...02-12-31
    month    (t) int64 1 2 3 4 5 6 7 8 9 10 11 12 1 2 3 4 5 6 7 8 9 10 11 12
Dimensions without coordinates: y
dim = 'y'

    @pytest.mark.parametrize("dim", ["x", "y", "z", "month"])
    @pytest.mark.parametrize("obj", [repr_da, repr_da.to_dataset(name="a")])
    def test_groupby_repr(obj, dim):
        actual = repr(obj.groupby(dim))
        expected = "%sGroupBy" % obj.__class__.__name__
        expected += ", grouped over %r" % dim
        expected += "\n%r groups with labels " % (len(np.unique(obj[dim])))
        if dim == "x":
            expected += "1, 2, 3, 4, 5."
        elif dim == "y":
            expected += "0, 1, 2, 3, 4, 5, ..., 15, 16, 17, 18, 19."
        elif dim == "z":
            expected += "'a', 'b', 'c'."
        elif dim == "month":
            expected += "1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12."
>       assert actual == expected
E       AssertionError: assert 'DataArrayGro..., 17, 18, 19.' == 'DataArrayGro..., 17, 18, 19.'
E         - DataArrayGroupBy, grouped over 'y'
E         + DataArrayGroupBy, grouped over 'y' 
E         ?                                   +
E           20 groups with labels 0, 1, 2, 3, 4, 5, ..., 15, 16, 17, 18, 19.

/testbed/xarray/tests/test_groupby.py:401: AssertionError
__________________________ test_groupby_repr[obj0-z] ___________________________

obj = <xarray.DataArray (x: 10, y: 20, z: 6, t: 24)>
array([[[[-1.05332945e+00, -1.30845648e+00, -3.20922373e-01, ...,
     ...02-12-31
    month    (t) int64 1 2 3 4 5 6 7 8 9 10 11 12 1 2 3 4 5 6 7 8 9 10 11 12
Dimensions without coordinates: y
dim = 'z'

    @pytest.mark.parametrize("dim", ["x", "y", "z", "month"])
    @pytest.mark.parametrize("obj", [repr_da, repr_da.to_dataset(name="a")])
    def test_groupby_repr(obj, dim):
        actual = repr(obj.groupby(dim))
        expected = "%sGroupBy" % obj.__class__.__name__
        expected += ", grouped over %r" % dim
        expected += "\n%r groups with labels " % (len(np.unique(obj[dim])))
        if dim == "x":
            expected += "1, 2, 3, 4, 5."
        elif dim == "y":
            expected += "0, 1, 2, 3, 4, 5, ..., 15, 16, 17, 18, 19."
        elif dim == "z":
            expected += "'a', 'b', 'c'."
        elif dim == "month":
            expected += "1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12."
>       assert actual == expected
E       assert "DataArrayGro...a', 'b', 'c'." == "DataArrayGro...a', 'b', 'c'."
E         - DataArrayGroupBy, grouped over 'z'
E         + DataArrayGroupBy, grouped over 'z' 
E         ?                                   +
E           3 groups with labels 'a', 'b', 'c'.

/testbed/xarray/tests/test_groupby.py:401: AssertionError
________________________ test_groupby_repr[obj0-month] _________________________

obj = <xarray.DataArray (x: 10, y: 20, z: 6, t: 24)>
array([[[[-1.05332945e+00, -1.30845648e+00, -3.20922373e-01, ...,
     ...02-12-31
    month    (t) int64 1 2 3 4 5 6 7 8 9 10 11 12 1 2 3 4 5 6 7 8 9 10 11 12
Dimensions without coordinates: y
dim = 'month'

    @pytest.mark.parametrize("dim", ["x", "y", "z", "month"])
    @pytest.mark.parametrize("obj", [repr_da, repr_da.to_dataset(name="a")])
    def test_groupby_repr(obj, dim):
        actual = repr(obj.groupby(dim))
        expected = "%sGroupBy" % obj.__class__.__name__
        expected += ", grouped over %r" % dim
        expected += "\n%r groups with labels " % (len(np.unique(obj[dim])))
        if dim == "x":
            expected += "1, 2, 3, 4, 5."
        elif dim == "y":
            expected += "0, 1, 2, 3, 4, 5, ..., 15, 16, 17, 18, 19."
        elif dim == "z":
            expected += "'a', 'b', 'c'."
        elif dim == "month":
            expected += "1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12."
>       assert actual == expected
E       AssertionError: assert 'DataArrayGro..., 10, 11, 12.' == 'DataArrayGro..., 10, 11, 12.'
E         - DataArrayGroupBy, grouped over 'month'
E         + DataArrayGroupBy, grouped over 'month' 
E         ?                                       +
E           12 groups with labels 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12.

/testbed/xarray/tests/test_groupby.py:401: AssertionError
__________________________ test_groupby_repr[obj1-x] ___________________________

obj = <xarray.Dataset>
Dimensions:  (t: 24, x: 10, y: 20, z: 6)
Coordinates:
  * z        (z) <U1 'a' 'b' 'c' 'a' 'b' 'c'
  ...sions without coordinates: y
Data variables:
    a        (x, y, z, t) float64 -1.053 -1.308 -0.3209 ... 0.2329 -0.4166
dim = 'x'

    @pytest.mark.parametrize("dim", ["x", "y", "z", "month"])
    @pytest.mark.parametrize("obj", [repr_da, repr_da.to_dataset(name="a")])
    def test_groupby_repr(obj, dim):
        actual = repr(obj.groupby(dim))
        expected = "%sGroupBy" % obj.__class__.__name__
        expected += ", grouped over %r" % dim
        expected += "\n%r groups with labels " % (len(np.unique(obj[dim])))
        if dim == "x":
            expected += "1, 2, 3, 4, 5."
        elif dim == "y":
            expected += "0, 1, 2, 3, 4, 5, ..., 15, 16, 17, 18, 19."
        elif dim == "z":
            expected += "'a', 'b', 'c'."
        elif dim == "month":
            expected += "1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12."
>       assert actual == expected
E       AssertionError: assert 'DatasetGroup..., 2, 3, 4, 5.' == 'DatasetGroup..., 2, 3, 4, 5.'
E         - DatasetGroupBy, grouped over 'x'
E         + DatasetGroupBy, grouped over 'x' 
E         ?                                 +
E           5 groups with labels 1, 2, 3, 4, 5.

/testbed/xarray/tests/test_groupby.py:401: AssertionError
__________________________ test_groupby_repr[obj1-y] ___________________________

obj = <xarray.Dataset>
Dimensions:  (t: 24, x: 10, y: 20, z: 6)
Coordinates:
  * z        (z) <U1 'a' 'b' 'c' 'a' 'b' 'c'
  ...sions without coordinates: y
Data variables:
    a        (x, y, z, t) float64 -1.053 -1.308 -0.3209 ... 0.2329 -0.4166
dim = 'y'

    @pytest.mark.parametrize("dim", ["x", "y", "z", "month"])
    @pytest.mark.parametrize("obj", [repr_da, repr_da.to_dataset(name="a")])
    def test_groupby_repr(obj, dim):
        actual = repr(obj.groupby(dim))
        expected = "%sGroupBy" % obj.__class__.__name__
        expected += ", grouped over %r" % dim
        expected += "\n%r groups with labels " % (len(np.unique(obj[dim])))
        if dim == "x":
            expected += "1, 2, 3, 4, 5."
        elif dim == "y":
            expected += "0, 1, 2, 3, 4, 5, ..., 15, 16, 17, 18, 19."
        elif dim == "z":
            expected += "'a', 'b', 'c'."
        elif dim == "month":
            expected += "1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12."
>       assert actual == expected
E       AssertionError: assert 'DatasetGroup..., 17, 18, 19.' == 'DatasetGroup..., 17, 18, 19.'
E         - DatasetGroupBy, grouped over 'y'
E         + DatasetGroupBy, grouped over 'y' 
E         ?                                 +
E           20 groups with labels 0, 1, 2, 3, 4, 5, ..., 15, 16, 17, 18, 19.

/testbed/xarray/tests/test_groupby.py:401: AssertionError
__________________________ test_groupby_repr[obj1-z] ___________________________

obj = <xarray.Dataset>
Dimensions:  (t: 24, x: 10, y: 20, z: 6)
Coordinates:
  * z        (z) <U1 'a' 'b' 'c' 'a' 'b' 'c'
  ...sions without coordinates: y
Data variables:
    a        (x, y, z, t) float64 -1.053 -1.308 -0.3209 ... 0.2329 -0.4166
dim = 'z'

    @pytest.mark.parametrize("dim", ["x", "y", "z", "month"])
    @pytest.mark.parametrize("obj", [repr_da, repr_da.to_dataset(name="a")])
    def test_groupby_repr(obj, dim):
        actual = repr(obj.groupby(dim))
        expected = "%sGroupBy" % obj.__class__.__name__
        expected += ", grouped over %r" % dim
        expected += "\n%r groups with labels " % (len(np.unique(obj[dim])))
        if dim == "x":
            expected += "1, 2, 3, 4, 5."
        elif dim == "y":
            expected += "0, 1, 2, 3, 4, 5, ..., 15, 16, 17, 18, 19."
        elif dim == "z":
            expected += "'a', 'b', 'c'."
        elif dim == "month":
            expected += "1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12."
>       assert actual == expected
E       assert "DatasetGroup...a', 'b', 'c'." == "DatasetGroup...a', 'b', 'c'."
E         - DatasetGroupBy, grouped over 'z'
E         + DatasetGroupBy, grouped over 'z' 
E         ?                                 +
E           3 groups with labels 'a', 'b', 'c'.

/testbed/xarray/tests/test_groupby.py:401: AssertionError
________________________ test_groupby_repr[obj1-month] _________________________

obj = <xarray.Dataset>
Dimensions:  (t: 24, x: 10, y: 20, z: 6)
Coordinates:
  * z        (z) <U1 'a' 'b' 'c' 'a' 'b' 'c'
  ...sions without coordinates: y
Data variables:
    a        (x, y, z, t) float64 -1.053 -1.308 -0.3209 ... 0.2329 -0.4166
dim = 'month'

    @pytest.mark.parametrize("dim", ["x", "y", "z", "month"])
    @pytest.mark.parametrize("obj", [repr_da, repr_da.to_dataset(name="a")])
    def test_groupby_repr(obj, dim):
        actual = repr(obj.groupby(dim))
        expected = "%sGroupBy" % obj.__class__.__name__
        expected += ", grouped over %r" % dim
        expected += "\n%r groups with labels " % (len(np.unique(obj[dim])))
        if dim == "x":
            expected += "1, 2, 3, 4, 5."
        elif dim == "y":
            expected += "0, 1, 2, 3, 4, 5, ..., 15, 16, 17, 18, 19."
        elif dim == "z":
            expected += "'a', 'b', 'c'."
        elif dim == "month":
            expected += "1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12."
>       assert actual == expected
E       AssertionError: assert 'DatasetGroup..., 10, 11, 12.' == 'DatasetGroup..., 10, 11, 12.'
E         - DatasetGroupBy, grouped over 'month'
E         + DatasetGroupBy, grouped over 'month' 
E         ?                                     +
E           12 groups with labels 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12.

/testbed/xarray/tests/test_groupby.py:401: AssertionError
_______________________ test_groupby_repr_datetime[obj0] _______________________

obj = <xarray.DataArray (x: 10, y: 20, z: 6, t: 24)>
array([[[[-1.05332945e+00, -1.30845648e+00, -3.20922373e-01, ...,
     ...02-12-31
    month    (t) int64 1 2 3 4 5 6 7 8 9 10 11 12 1 2 3 4 5 6 7 8 9 10 11 12
Dimensions without coordinates: y

    @pytest.mark.parametrize("obj", [repr_da, repr_da.to_dataset(name="a")])
    def test_groupby_repr_datetime(obj):
        actual = repr(obj.groupby("t.month"))
        expected = "%sGroupBy" % obj.__class__.__name__
        expected += ", grouped over 'month'"
        expected += "\n%r groups with labels " % (len(np.unique(obj.t.dt.month)))
        expected += "1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12."
>       assert actual == expected
E       AssertionError: assert 'DataArrayGro..., 10, 11, 12.' == 'DataArrayGro..., 10, 11, 12.'
E         - DataArrayGroupBy, grouped over 'month'
E         + DataArrayGroupBy, grouped over 'month' 
E         ?                                       +
E           12 groups with labels 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12.

/testbed/xarray/tests/test_groupby.py:411: AssertionError
_______________________ test_groupby_repr_datetime[obj1] _______________________

obj = <xarray.Dataset>
Dimensions:  (t: 24, x: 10, y: 20, z: 6)
Coordinates:
  * z        (z) <U1 'a' 'b' 'c' 'a' 'b' 'c'
  ...sions without coordinates: y
Data variables:
    a        (x, y, z, t) float64 -1.053 -1.308 -0.3209 ... 0.2329 -0.4166

    @pytest.mark.parametrize("obj", [repr_da, repr_da.to_dataset(name="a")])
    def test_groupby_repr_datetime(obj):
        actual = repr(obj.groupby("t.month"))
        expected = "%sGroupBy" % obj.__class__.__name__
        expected += ", grouped over 'month'"
        expected += "\n%r groups with labels " % (len(np.unique(obj.t.dt.month)))
        expected += "1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12."
>       assert actual == expected
E       AssertionError: assert 'DatasetGroup..., 10, 11, 12.' == 'DatasetGroup..., 10, 11, 12.'
E         - DatasetGroupBy, grouped over 'month'
E         + DatasetGroupBy, grouped over 'month' 
E         ?                                     +
E           12 groups with labels 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12.

/testbed/xarray/tests/test_groupby.py:411: AssertionError
=============================== warnings summary ===============================
xarray/__init__.py:1
  /testbed/xarray/__init__.py:1: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
    import pkg_resources

xarray/core/dask_array_compat.py:61
xarray/core/dask_array_compat.py:61
  /testbed/xarray/core/dask_array_compat.py:61: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    if LooseVersion(dask_version) > LooseVersion("2.9.0"):

xarray/core/dask_array_compat.py:98
xarray/core/dask_array_compat.py:98
  /testbed/xarray/core/dask_array_compat.py:98: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    if LooseVersion(dask_version) > LooseVersion("2.30.0"):

xarray/core/dask_array_compat.py:155
xarray/core/dask_array_compat.py:155
  /testbed/xarray/core/dask_array_compat.py:155: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    if LooseVersion(dask_version) > LooseVersion("2021.03.0"):

xarray/core/npcompat.py:87
  /testbed/xarray/core/npcompat.py:87: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    if LooseVersion(np.__version__) >= "1.20.0":

../opt/miniconda3/envs/testbed/lib/python3.10/site-packages/setuptools/_distutils/version.py:345
../opt/miniconda3/envs/testbed/lib/python3.10/site-packages/setuptools/_distutils/version.py:345
  /opt/miniconda3/envs/testbed/lib/python3.10/site-packages/setuptools/_distutils/version.py:345: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    other = LooseVersion(other)

xarray/core/pdcompat.py:45
  /testbed/xarray/core/pdcompat.py:45: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    if LooseVersion(pd.__version__) < "0.25.0":

xarray/coding/cftimeindex.py:62
xarray/coding/cftimeindex.py:62
  /testbed/xarray/coding/cftimeindex.py:62: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    if LooseVersion(pd.__version__) > LooseVersion("1.2.3"):

xarray/tests/__init__.py:59
xarray/tests/__init__.py:59
xarray/tests/__init__.py:59
xarray/tests/__init__.py:59
xarray/tests/__init__.py:59
xarray/tests/__init__.py:59
  /testbed/xarray/tests/__init__.py:59: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    return version.LooseVersion(vstring)

xarray/tests/test_groupby.py: 12 warnings
  /testbed/xarray/core/groupby.py:207: FutureWarning: is_monotonic is deprecated and will be removed in a future version. Use is_monotonic_increasing instead.
    return index.is_unique and index.is_monotonic

xarray/tests/test_groupby.py: 10 warnings
  /testbed/xarray/core/dataset.py:3915: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    or LooseVersion(np.__version__) < LooseVersion("1.17")

xarray/tests/test_groupby.py: 72 warnings
  /testbed/xarray/core/variable.py:1933: DeprecationWarning: the `interpolation=` argument to nanquantile was renamed to `method=`, which has additional options.
  Users of the modes 'nearest', 'lower', 'higher', or 'midpoint' are encouraged to review the method they used. (Deprecated NumPy 1.22)
    return np.moveaxis(_quantile_func(npa, **kwargs), 0, -1)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
==================================== PASSES ====================================
=========================== short test summary info ============================
PASSED xarray/tests/test_groupby.py::test_consolidate_slices
PASSED xarray/tests/test_groupby.py::test_groupby_dims_property
PASSED xarray/tests/test_groupby.py::test_multi_index_groupby_map
PASSED xarray/tests/test_groupby.py::test_multi_index_groupby_sum
PASSED xarray/tests/test_groupby.py::test_groupby_da_datetime
PASSED xarray/tests/test_groupby.py::test_groupby_duplicate_coordinate_labels
PASSED xarray/tests/test_groupby.py::test_groupby_input_mutation
PASSED xarray/tests/test_groupby.py::test_groupby_map_shrink_groups[obj0]
PASSED xarray/tests/test_groupby.py::test_groupby_map_shrink_groups[obj1]
PASSED xarray/tests/test_groupby.py::test_groupby_map_change_group_size[obj0]
PASSED xarray/tests/test_groupby.py::test_groupby_map_change_group_size[obj1]
PASSED xarray/tests/test_groupby.py::test_da_groupby_map_func_args
PASSED xarray/tests/test_groupby.py::test_ds_groupby_map_func_args
PASSED xarray/tests/test_groupby.py::test_da_groupby_empty
PASSED xarray/tests/test_groupby.py::test_da_groupby_quantile
PASSED xarray/tests/test_groupby.py::test_ds_groupby_quantile
PASSED xarray/tests/test_groupby.py::test_da_groupby_assign_coords
PASSED xarray/tests/test_groupby.py::test_groupby_drops_nans
PASSED xarray/tests/test_groupby.py::test_groupby_grouping_errors
PASSED xarray/tests/test_groupby.py::test_groupby_reduce_dimension_error
PASSED xarray/tests/test_groupby.py::test_groupby_multiple_string_args
PASSED xarray/tests/test_groupby.py::test_groupby_bins_timeseries
PASSED xarray/tests/test_groupby.py::test_groupby_none_group_name
PASSED xarray/tests/test_groupby.py::test_groupby_getitem
FAILED xarray/tests/test_groupby.py::test_groupby_repr[obj0-x] - AssertionErr...
FAILED xarray/tests/test_groupby.py::test_groupby_repr[obj0-y] - AssertionErr...
FAILED xarray/tests/test_groupby.py::test_groupby_repr[obj0-z] - assert "Data...
FAILED xarray/tests/test_groupby.py::test_groupby_repr[obj0-month] - Assertio...
FAILED xarray/tests/test_groupby.py::test_groupby_repr[obj1-x] - AssertionErr...
FAILED xarray/tests/test_groupby.py::test_groupby_repr[obj1-y] - AssertionErr...
FAILED xarray/tests/test_groupby.py::test_groupby_repr[obj1-z] - assert "Data...
FAILED xarray/tests/test_groupby.py::test_groupby_repr[obj1-month] - Assertio...
FAILED xarray/tests/test_groupby.py::test_groupby_repr_datetime[obj0] - Asser...
FAILED xarray/tests/test_groupby.py::test_groupby_repr_datetime[obj1] - Asser...
================= 10 failed, 24 passed, 113 warnings in 7.10s ==================
+ : '>>>>> End Test Output'
+ git checkout e56905889c836c736152b11a7e6117a229715975 xarray/tests/test_groupby.py
Updated 1 path from 1c2ce001
