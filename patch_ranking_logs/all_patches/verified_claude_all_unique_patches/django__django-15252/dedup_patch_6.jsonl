{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15252", "model_patch": "diff --git a/django/db/migrations/recorder.py b/django/db/migrations/recorder.py\nindex cf1aec2..8c91c5c 100644\n--- a/django/db/migrations/recorder.py\n+++ b/django/db/migrations/recorder.py\n@@ -43,6 +43,8 @@ class MigrationRecorder:\n             cls._migration_class = Migration\n         return cls._migration_class\n \n+    from django.db.migrations.router import router\n+\n     def __init__(self, connection):\n         self.connection = connection\n \n@@ -62,6 +64,9 @@ class MigrationRecorder:\n         # in the codebase.\n         if self.has_table():\n             return\n+        # Check if we're allowed to create the table on this database\n+        if not router.allow_migrate(self.connection.alias, self.Migration._meta.app_label):\n+            return\n         # Make the table\n         try:\n             with self.connection.schema_editor() as editor:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/recorder.py b/django/db/migrations/recorder.py\nindex c1743b4..3fc33c5 100644\n--- a/django/db/migrations/recorder.py\n+++ b/django/db/migrations/recorder.py\n@@ -20,6 +20,7 @@ class MigrationRecorder:\n                     return 'Migration %s for %s' % (self.name, self.app)\n             cls._migration_class = Migration\n         return cls._migration_class\n+    from django.db.migrations.router import router\n     def __init__(self, connection):\n         self.connection = connection\n     @property\n@@ -32,6 +33,8 @@ class MigrationRecorder:\n     def ensure_schema(self):\n         if self.has_table():\n             return\n+        if not router.allow_migrate(self.connection.alias, self.Migration._meta.app_label):\n+            return\n         try:\n             with self.connection.schema_editor() as editor:\n                 editor.create_model(self.Migration)\n", "normalized_occurrence": 1}
