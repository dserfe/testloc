{"model_name_or_path": "agentless", "instance_id": "django__django-16229", "model_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 5264b71..2292567 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -362,6 +362,11 @@ class BaseModelForm(BaseForm, AltersData):\n         # It is False by default so overriding self.clean() and failing to call\n         # super will stop validate_unique from being called.\n         self._validate_unique = False\n+        if self.initial is None:\n+            self.initial = {}\n+        for field_name, field in self.fields.items():\n+            if callable(field.initial):\n+                self.initial[field_name] = field.initial()\n         super().__init__(\n             data,\n             files,\n@@ -375,6 +380,8 @@ class BaseModelForm(BaseForm, AltersData):\n             renderer=renderer,\n         )\n         for formfield in self.fields.values():\n+            if callable(formfield.initial):\n+                formfield.show_hidden_initial = False\n             apply_limit_choices_to_to_formfield(formfield)\n \n     def _get_validation_exclusions(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex a9413ca..801f294 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -151,8 +151,15 @@ class BaseModelForm(BaseForm, AltersData):\n         if initial is not None:\n             object_data.update(initial)\n         self._validate_unique = False\n+        if self.initial is None:\n+            self.initial = {}\n+        for field_name, field in self.fields.items():\n+            if callable(field.initial):\n+                self.initial[field_name] = field.initial()\n         super().__init__(data, files, auto_id, prefix, object_data, error_class, label_suffix, empty_permitted, use_required_attribute=use_required_attribute, renderer=renderer)\n         for formfield in self.fields.values():\n+            if callable(formfield.initial):\n+                formfield.show_hidden_initial = False\n             apply_limit_choices_to_to_formfield(formfield)\n     def _get_validation_exclusions(self):\n         exclude = set()\n", "normalized_occurrence": 1}
