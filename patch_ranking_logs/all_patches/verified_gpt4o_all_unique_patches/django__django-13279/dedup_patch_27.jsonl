{"model_name_or_path": "agentless", "instance_id": "django__django-13279", "model_patch": "diff --git a/django/contrib/sessions/backends/base.py b/django/contrib/sessions/backends/base.py\nindex 5b06482..d71e885 100644\n--- a/django/contrib/sessions/backends/base.py\n+++ b/django/contrib/sessions/backends/base.py\n@@ -114,10 +114,13 @@ class SessionBase:\n         )\n \n     def decode(self, session_data):\n+        from django.conf import settings\n+\n+        if settings.DEFAULT_HASHING_ALGORITHM == 'sha1':\n+            return self._legacy_decode(session_data)\n+        \n         try:\n             return signing.loads(session_data, salt=self.key_salt, serializer=self.serializer)\n-        # RemovedInDjango40Warning: when the deprecation ends, handle here\n-        # exceptions similar to what _legacy_decode() does now.\n         except Exception:\n             return self._legacy_decode(session_data)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/sessions/backends/base.py b/django/contrib/sessions/backends/base.py\nindex 25789fc..5dd6ea3 100644\n--- a/django/contrib/sessions/backends/base.py\n+++ b/django/contrib/sessions/backends/base.py\n@@ -66,6 +66,9 @@ class SessionBase:\n     def encode(self, session_dict):\n         return signing.dumps(session_dict, salt=self.key_salt, serializer=self.serializer, compress=True)\n     def decode(self, session_data):\n+        from django.conf import settings\n+        if settings.DEFAULT_HASHING_ALGORITHM == 'sha1':\n+            return self._legacy_decode(session_data)\n         try:\n             return signing.loads(session_data, salt=self.key_salt, serializer=self.serializer)\n         except Exception:\n", "normalized_occurrence": 1}
