{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-6386", "model_patch": "diff --git a/pylint/config/option_manager_mixin.py b/pylint/config/option_manager_mixin.py\nindex d22ea01..5682a1e 100644\n--- a/pylint/config/option_manager_mixin.py\n+++ b/pylint/config/option_manager_mixin.py\n@@ -166,8 +166,13 @@ class OptionsManagerMixIn:\n             del optdict[\"default\"]\n         args = [\"--\" + str(opt)]\n         if \"short\" in optdict:\n-            self._short_options[optdict[\"short\"]] = opt\n-            args.append(\"-\" + optdict[\"short\"])\n+            short_opt = optdict[\"short\"]\n+            self._short_options[short_opt] = opt\n+            if \"action\" in optdict and optdict[\"action\"] in (\"store_true\", \"store_false\"):\n+                # For store_true/store_false, short option should not expect an argument\n+                optikcontainer.add_option(\"-\" + short_opt, action=optdict[\"action\"], dest=opt)\n+            else:\n+                args.append(\"-\" + short_opt)\n             del optdict[\"short\"]\n         # cleanup option definition dict before giving it to optik\n         for key in list(optdict.keys()):\n@@ -343,4 +348,4 @@ class OptionsManagerMixIn:\n         \"\"\"Return the usage string for available options.\"\"\"\n         self.cmdline_parser.formatter.output_level = level\n         with _patch_optparse():\n-            return self.cmdline_parser.format_help()\n+            return self.cmdline_parser.format_help()\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/config/option_manager_mixin.py b/pylint/config/option_manager_mixin.py\nindex 073d6af..5ba6515 100644\n--- a/pylint/config/option_manager_mixin.py\n+++ b/pylint/config/option_manager_mixin.py\n@@ -100,8 +100,12 @@ class OptionsManagerMixIn:\n             del optdict['default']\n         args = ['--' + str(opt)]\n         if 'short' in optdict:\n-            self._short_options[optdict['short']] = opt\n-            args.append('-' + optdict['short'])\n+            short_opt = optdict['short']\n+            self._short_options[short_opt] = opt\n+            if 'action' in optdict and optdict['action'] in ('store_true', 'store_false'):\n+                optikcontainer.add_option('-' + short_opt, action=optdict['action'], dest=opt)\n+            else:\n+                args.append('-' + short_opt)\n             del optdict['short']\n         for key in list(optdict.keys()):\n             if key not in self._optik_option_attrs:\n", "normalized_occurrence": 1}
