{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12184", "model_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 1a3b6f6..4e14a1c 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -354,6 +354,8 @@ class URLPattern:\n             new_path, args, kwargs = match\n             # Pass any extra_kwargs as **kwargs.\n             kwargs.update(self.default_args)\n+            # Filter out empty optional named parameters\n+            kwargs = {k: v for k, v in kwargs.items() if v != ''}\n             return ResolverMatch(self.callback, args, kwargs, self.pattern.name, route=str(self.pattern))\n \n     @cached_property\n", "occurrence": 1, "normalized_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex a06ca7c..f175b7b 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -221,6 +221,7 @@ class URLPattern:\n         if match:\n             new_path, args, kwargs = match\n             kwargs.update(self.default_args)\n+            kwargs = {k: v for k, v in kwargs.items() if v != ''}\n             return ResolverMatch(self.callback, args, kwargs, self.pattern.name, route=str(self.pattern))\n     @cached_property\n     def lookup_str(self):\n", "normalized_occurrence": 1}
