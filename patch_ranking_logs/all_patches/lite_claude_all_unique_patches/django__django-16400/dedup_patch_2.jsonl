{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16400", "model_patch": "diff --git a/django/contrib/auth/management/__init__.py b/django/contrib/auth/management/__init__.py\nindex c21d9d7..17bf459 100644\n--- a/django/contrib/auth/management/__init__.py\n+++ b/django/contrib/auth/management/__init__.py\n@@ -76,9 +76,14 @@ def create_permissions(\n     for klass in app_config.get_models():\n         # Force looking up the content types in the current database\n         # before creating foreign keys to them.\n-        ctype = ContentType.objects.db_manager(using).get_for_model(\n-            klass, for_concrete_model=False\n-        )\n+        # Ensure ContentType operations use the correct db\n+        opts = klass._meta\n+        app_label = opts.app_label\n+        model = opts.model_name\n+        ctype = ContentType.objects.using(using).get_or_create(\n+            app_label=app_label,\n+            model=model,\n+        )[0]\n \n         ctypes.add(ctype)\n         for perm in _get_all_permissions(klass._meta):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/auth/management/__init__.py b/django/contrib/auth/management/__init__.py\nindex eb43af8..0a91540 100644\n--- a/django/contrib/auth/management/__init__.py\n+++ b/django/contrib/auth/management/__init__.py\n@@ -28,7 +28,10 @@ def create_permissions(app_config, verbosity=2, interactive=True, using=DEFAULT_\n     searched_perms = []\n     ctypes = set()\n     for klass in app_config.get_models():\n-        ctype = ContentType.objects.db_manager(using).get_for_model(klass, for_concrete_model=False)\n+        opts = klass._meta\n+        app_label = opts.app_label\n+        model = opts.model_name\n+        ctype = ContentType.objects.using(using).get_or_create(app_label=app_label, model=model)[0]\n         ctypes.add(ctype)\n         for perm in _get_all_permissions(klass._meta):\n             searched_perms.append((ctype, perm))\n", "normalized_occurrence": 1}
