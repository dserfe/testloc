{"model_name_or_path": "agentless", "instance_id": "django__django-11910", "model_patch": "diff --git a/django/db/migrations/operations/fields.py b/django/db/migrations/operations/fields.py\nindex 0aa71a3..a37bc54 100644\n--- a/django/db/migrations/operations/fields.py\n+++ b/django/db/migrations/operations/fields.py\n@@ -316,6 +316,13 @@ class RenameField(FieldOperation):\n                     self.new_name if from_field_name == self.old_name else from_field_name\n                     for from_field_name in from_fields\n                 ])\n+            # Fix to_fields to refer to the new field if it's a foreign key\n+            to_fields = getattr(field, 'to_fields', None)\n+            if to_fields:\n+                field.to_fields = tuple([\n+                    self.new_name if to_field_name == self.old_name else to_field_name\n+                    for to_field_name in to_fields\n+                ])\n             # Delay rendering of relationships if it's not a relational\n             # field and not referenced by a foreign key.\n             delay = delay and (\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/operations/fields.py b/django/db/migrations/operations/fields.py\nindex b2b87fe..8c567b2 100644\n--- a/django/db/migrations/operations/fields.py\n+++ b/django/db/migrations/operations/fields.py\n@@ -183,6 +183,9 @@ class RenameField(FieldOperation):\n             from_fields = getattr(field, 'from_fields', None)\n             if from_fields:\n                 field.from_fields = tuple([self.new_name if from_field_name == self.old_name else from_field_name for from_field_name in from_fields])\n+            to_fields = getattr(field, 'to_fields', None)\n+            if to_fields:\n+                field.to_fields = tuple([self.new_name if to_field_name == self.old_name else to_field_name for to_field_name in to_fields])\n             delay = delay and (not field.is_relation and (not is_referenced_by_foreign_key(state, self.model_name_lower, field, self.name)))\n         if not found:\n             raise FieldDoesNotExist(\"%s.%s has no field named '%s'\" % (app_label, self.model_name, self.old_name))\n", "normalized_occurrence": 1}
