{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-24177", "model_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 36d6e8e..a89e351 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -6835,6 +6835,7 @@ such objects\n             y[2*len(bins)-1:] = y[1:2*len(bins)-1][::-1]\n \n             if log:\n+                self.autoscale_view(scalex=False, scaley=True)\n                 if orientation == 'horizontal':\n                     self.set_xscale('log', nonpositive='clip')\n                 else:  # orientation == 'vertical'\n@@ -6863,6 +6864,8 @@ such objects\n                 # later discarded (for step and stepfilled).\n                 y[0] = y[-1]\n \n+                self.autoscale_view(scalex=False, scaley=True)\n+                self.autoscale_view(scalex=False, scaley=True)\n                 if orientation == 'horizontal':\n                     xvals.append(y.copy())\n                     yvals.append(x.copy())\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 63bfb92..6cd774f 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -2014,6 +2014,7 @@ class Axes(_AxesBase):\n             y[1:2 * len(bins) - 1:2] = y[2:2 * len(bins):2] = bottom\n             y[2 * len(bins) - 1:] = y[1:2 * len(bins) - 1][::-1]\n             if log:\n+                self.autoscale_view(scalex=False, scaley=True)\n                 if orientation == 'horizontal':\n                     self.set_xscale('log', nonpositive='clip')\n                 else:\n@@ -2029,6 +2030,8 @@ class Axes(_AxesBase):\n                     y[2 * len(bins) - 1:] = y[1:2 * len(bins) - 1][::-1]\n                 y[1:2 * len(bins) - 1:2] = y[2:2 * len(bins):2] = m + bottom\n                 y[0] = y[-1]\n+                self.autoscale_view(scalex=False, scaley=True)\n+                self.autoscale_view(scalex=False, scaley=True)\n                 if orientation == 'horizontal':\n                     xvals.append(y.copy())\n                     yvals.append(x.copy())\n", "normalized_occurrence": 1}
