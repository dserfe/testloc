{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14787", "model_patch": "diff --git a/django/utils/decorators.py b/django/utils/decorators.py\nindex 9a57ac9..10d4913 100644\n--- a/django/utils/decorators.py\n+++ b/django/utils/decorators.py\n@@ -16,7 +16,12 @@ def _update_method_wrapper(_wrapper, decorator):\n     @decorator\n     def dummy(*args, **kwargs):\n         pass\n+    # Get the attributes from the decorator's wrapper\n+    assigned = getattr(decorator, '__wrapped__', dummy).__dict__.copy()\n+    # Update the wrapper with dummy attributes first\n     update_wrapper(_wrapper, dummy)\n+    # Then update with the original attributes\n+    _wrapper.__dict__.update(assigned)\n \n \n def _multi_decorate(decorators, method):\n", "occurrence": 2, "normalized_patch": "diff --git a/django/utils/decorators.py b/django/utils/decorators.py\nindex 7f6be4d..a73be69 100644\n--- a/django/utils/decorators.py\n+++ b/django/utils/decorators.py\n@@ -8,7 +8,9 @@ def _update_method_wrapper(_wrapper, decorator):\n     @decorator\n     def dummy(*args, **kwargs):\n         pass\n+    assigned = getattr(decorator, '__wrapped__', dummy).__dict__.copy()\n     update_wrapper(_wrapper, dummy)\n+    _wrapper.__dict__.update(assigned)\n def _multi_decorate(decorators, method):\n     if hasattr(decorators, '__iter__'):\n         decorators = decorators[::-1]\n", "normalized_occurrence": 2}
