{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14667", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 8635bf4..85a21dc 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -2085,8 +2085,9 @@ class Query(BaseExpression):\n             # Add to existing deferred names.\n             self.deferred_loading = existing.union(field_names), True\n         else:\n-            # Remove names from the set of any existing \"immediate load\" names.\n-            self.deferred_loading = existing.difference(field_names), False\n+            # When deferring fields that were part of an only() clause,\n+            # we need to remove them from the only() set.\n+            self.deferred_loading = existing.difference(field_names), defer or bool(field_names)\n \n     def add_immediate_loading(self, field_names):\n         \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex a07bc15..ceb2fad 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1140,7 +1140,7 @@ class Query(BaseExpression):\n         if defer:\n             self.deferred_loading = (existing.union(field_names), True)\n         else:\n-            self.deferred_loading = (existing.difference(field_names), False)\n+            self.deferred_loading = (existing.difference(field_names), defer or bool(field_names))\n     def add_immediate_loading(self, field_names):\n         existing, defer = self.deferred_loading\n         field_names = set(field_names)\n", "normalized_occurrence": 1}
