{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-4661", "model_patch": "diff --git a/pylint/constants.py b/pylint/constants.py\nindex 7e25096..ad0a5a8 100644\n--- a/pylint/constants.py\n+++ b/pylint/constants.py\n@@ -22,9 +22,17 @@ _MSG_ORDER = \"EWRCIF\"\n MSG_STATE_SCOPE_CONFIG = 0\n MSG_STATE_SCOPE_MODULE = 1\n \n+import os\n+from xdg import xdg_data_home\n+\n # The line/node distinction does not apply to fatal errors and reports.\n _SCOPE_EXEMPT = \"FR\"\n \n+# Path for storing data files\n+PYLINT_DATA_DIR = os.path.join(xdg_data_home(), 'pylint')\n+if not os.path.exists(PYLINT_DATA_DIR):\n+    os.makedirs(PYLINT_DATA_DIR)\n+\n MSG_TYPES = {\n     \"I\": \"info\",\n     \"C\": \"convention\",\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/constants.py b/pylint/constants.py\nindex d137825..cdf1487 100644\n--- a/pylint/constants.py\n+++ b/pylint/constants.py\n@@ -13,7 +13,12 @@ MSG_STATE_CONFIDENCE = 2\n _MSG_ORDER = 'EWRCIF'\n MSG_STATE_SCOPE_CONFIG = 0\n MSG_STATE_SCOPE_MODULE = 1\n+import os\n+from xdg import xdg_data_home\n _SCOPE_EXEMPT = 'FR'\n+PYLINT_DATA_DIR = os.path.join(xdg_data_home(), 'pylint')\n+if not os.path.exists(PYLINT_DATA_DIR):\n+    os.makedirs(PYLINT_DATA_DIR)\n MSG_TYPES = {'I': 'info', 'C': 'convention', 'R': 'refactor', 'W': 'warning', 'E': 'error', 'F': 'fatal'}\n MSG_TYPES_LONG = {v: k for k, v in MSG_TYPES.items()}\n MSG_TYPES_STATUS = {'I': 0, 'C': 16, 'R': 8, 'W': 4, 'E': 2, 'F': 1}\n", "normalized_occurrence": 1}
