{"model_name_or_path": "agentless", "instance_id": "django__django-14238", "model_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex c552973..e17edd9 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -2518,7 +2518,13 @@ class AutoFieldMeta(type):\n \n     @property\n     def _subclasses(self):\n-        return (BigAutoField, SmallAutoField)\n+        def subclasses(cls):\n+            return cls.__subclasses__() + [\n+                g for s in cls.__subclasses__() for g in subclasses(s)\n+            ]\n+        big_auto_field_subclasses = subclasses(BigAutoField)\n+        small_auto_field_subclasses = subclasses(SmallAutoField)\n+        return (BigAutoField, SmallAutoField) + tuple(big_auto_field_subclasses) + tuple(small_auto_field_subclasses)\n \n     def __instancecheck__(self, instance):\n         return isinstance(instance, self._subclasses) or super().__instancecheck__(instance)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex 607ab50..5238040 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -1309,7 +1309,11 @@ class AutoFieldMixin:\n class AutoFieldMeta(type):\n     @property\n     def _subclasses(self):\n-        return (BigAutoField, SmallAutoField)\n+        def subclasses(cls):\n+            return cls.__subclasses__() + [g for s in cls.__subclasses__() for g in subclasses(s)]\n+        big_auto_field_subclasses = subclasses(BigAutoField)\n+        small_auto_field_subclasses = subclasses(SmallAutoField)\n+        return (BigAutoField, SmallAutoField) + tuple(big_auto_field_subclasses) + tuple(small_auto_field_subclasses)\n     def __instancecheck__(self, instance):\n         return isinstance(instance, self._subclasses) or super().__instancecheck__(instance)\n     def __subclasscheck__(self, subclass):\n", "normalized_occurrence": 1}
