{"model_name_or_path": "agentless", "instance_id": "django__django-13516", "model_patch": "diff --git a/django/core/management/commands/migrate.py b/django/core/management/commands/migrate.py\nindex 7e14473..cc46507 100644\n--- a/django/core/management/commands/migrate.py\n+++ b/django/core/management/commands/migrate.py\n@@ -241,10 +241,12 @@ class Command(BaseCommand):\n         else:\n             fake = options['fake']\n             fake_initial = options['fake_initial']\n+        self.stdout.flush()\n         post_migrate_state = executor.migrate(\n             targets, plan=plan, state=pre_migrate_state.clone(), fake=fake,\n             fake_initial=fake_initial,\n         )\n+        self.stdout.flush()\n         # post_migrate signals have access to all models. Ensure that all models\n         # are reloaded in case any are delayed.\n         post_migrate_state.clear_delayed_apps_cache()\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/management/commands/migrate.py b/django/core/management/commands/migrate.py\nindex 51822d0..4e40c90 100644\n--- a/django/core/management/commands/migrate.py\n+++ b/django/core/management/commands/migrate.py\n@@ -129,7 +129,9 @@ class Command(BaseCommand):\n         else:\n             fake = options['fake']\n             fake_initial = options['fake_initial']\n+        self.stdout.flush()\n         post_migrate_state = executor.migrate(targets, plan=plan, state=pre_migrate_state.clone(), fake=fake, fake_initial=fake_initial)\n+        self.stdout.flush()\n         post_migrate_state.clear_delayed_apps_cache()\n         post_migrate_apps = post_migrate_state.apps\n         with post_migrate_apps.bulk_update():\n", "normalized_occurrence": 1}
