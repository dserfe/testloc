{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-23987", "model_patch": "diff --git a/lib/matplotlib/layout_engine.py b/lib/matplotlib/layout_engine.py\nindex 2a777f2..38c4070 100644\n--- a/lib/matplotlib/layout_engine.py\n+++ b/lib/matplotlib/layout_engine.py\n@@ -119,6 +119,10 @@ class PlaceHolderLayoutEngine(LayoutEngine):\n         self._adjust_compatible = adjust_compatible\n         self._colorbar_gridspec = colorbar_gridspec\n         super().__init__(**kwargs)\n+        \n+    @property\n+    def adjustable(self):\n+        return self._adjust_compatible\n \n     def execute(self, fig):\n         return\n@@ -196,6 +200,13 @@ class ConstrainedLayoutEngine(LayoutEngine):\n     :doc:`/tutorials/intermediate/constrainedlayout_guide` for details.\n     \"\"\"\n \n+    def __init__(self, **kwargs):\n+        # When constrained_layout=False is explicitly set, return None instead\n+        # of creating an instance\n+        if kwargs.get('constrained_layout') is False:\n+            return None\n+        super().__init__(adjust_compatible=False, colorbar_gridspec=False, **kwargs)\n+\n     _adjust_compatible = False\n     _colorbar_gridspec = False\n \n", "occurrence": 1, "normalized_patch": "--- a/lib/matplotlib/layout_engine.py\n+++ b/lib/matplotlib/layout_engine.py\n+    @property\n+    def adjustable(self):\n+        return self._adjust_compatible\n+    def __init__(self, **kwargs):\n+        if kwargs.get('constrained_layout') is False:\n+            return None\n+        super().__init__(adjust_compatible=False, colorbar_gridspec=False, **kwargs)", "normalized_occurrence": 1}
