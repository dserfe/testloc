{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13925", "model_patch": "diff --git a/django/db/models/options.py b/django/db/models/options.py\nindex c6d9d53..8bf868c 100644\n--- a/django/db/models/options.py\n+++ b/django/db/models/options.py\n@@ -321,9 +321,10 @@ class Options:\n             self._expire_cache(reverse=False)\n \n     def setup_pk(self, field):\n-        if not self.pk and field.primary_key:\n-            self.pk = field\n-            field.serialize = False\n+        if field.primary_key:\n+            if not self.pk or not isinstance(self.pk, Field):\n+                self.pk = field\n+                field.serialize = False\n \n     def setup_proxy(self, target):\n         \"\"\"\n@@ -892,4 +893,4 @@ class Options:\n         return [\n             field for field in self._get_fields(forward=True, reverse=False, include_parents=PROXY_PARENTS)\n             if getattr(field, 'db_returning', False)\n-        ]\n+        ]\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/options.py b/django/db/models/options.py\nindex dbf0b41..fa359f3 100644\n--- a/django/db/models/options.py\n+++ b/django/db/models/options.py\n@@ -195,9 +195,10 @@ class Options:\n         else:\n             self._expire_cache(reverse=False)\n     def setup_pk(self, field):\n-        if not self.pk and field.primary_key:\n-            self.pk = field\n-            field.serialize = False\n+        if field.primary_key:\n+            if not self.pk or not isinstance(self.pk, Field):\n+                self.pk = field\n+                field.serialize = False\n     def setup_proxy(self, target):\n         self.pk = target._meta.pk\n         self.proxy_for_model = target\n", "normalized_occurrence": 1}
