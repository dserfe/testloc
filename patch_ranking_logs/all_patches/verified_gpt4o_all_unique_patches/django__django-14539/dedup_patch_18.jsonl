{"model_name_or_path": "agentless", "instance_id": "django__django-14539", "model_patch": "diff --git a/django/utils/html.py b/django/utils/html.py\nindex 809fc0f..dd8130e 100644\n--- a/django/utils/html.py\n+++ b/django/utils/html.py\n@@ -284,7 +284,7 @@ def urlize(text, trim_url_limit=None, nofollow=False, autoescape=False):\n             stripped = middle_unescaped.rstrip(TRAILING_PUNCTUATION_CHARS)\n             if middle_unescaped != stripped:\n                 trail = middle[len(stripped):] + trail\n-                middle = middle[:len(stripped) - len(middle_unescaped)]\n+                middle = middle[:len(middle_unescaped) - len(stripped)]\n                 trimmed_something = True\n         return lead, middle, trail\n \n@@ -335,8 +335,12 @@ def urlize(text, trim_url_limit=None, nofollow=False, autoescape=False):\n                 if autoescape and not safe_input:\n                     lead, trail = escape(lead), escape(trail)\n                     trimmed = escape(trimmed)\n-                middle = '<a href=\"%s\"%s>%s</a>' % (escape(url), nofollow_attr, trimmed)\n-                words[i] = mark_safe('%s%s%s' % (lead, middle, trail))\n+                middle_escaped = escape(url) if autoescape and not safe_input else url\n+                trimmed_escaped = escape(trimmed) if autoescape and not safe_input else trimmed\n+                lead_escaped = escape(lead) if autoescape and not safe_input else lead\n+                trail_escaped = escape(trail) if autoescape and not safe_input else trail\n+                middle = '<a href=\"%s\"%s>%s</a>' % (middle_escaped, nofollow_attr, trimmed_escaped)\n+                words[i] = mark_safe('%s%s%s' % (lead_escaped, middle, trail_escaped))\n             else:\n                 if safe_input:\n                     words[i] = mark_safe(word)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/html.py b/django/utils/html.py\nindex ed1e228..61bce7a 100644\n--- a/django/utils/html.py\n+++ b/django/utils/html.py\n@@ -122,7 +122,7 @@ def urlize(text, trim_url_limit=None, nofollow=False, autoescape=False):\n             stripped = middle_unescaped.rstrip(TRAILING_PUNCTUATION_CHARS)\n             if middle_unescaped != stripped:\n                 trail = middle[len(stripped):] + trail\n-                middle = middle[:len(stripped) - len(middle_unescaped)]\n+                middle = middle[:len(middle_unescaped) - len(stripped)]\n                 trimmed_something = True\n         return (lead, middle, trail)\n     def is_email_simple(value):\n@@ -159,8 +159,12 @@ def urlize(text, trim_url_limit=None, nofollow=False, autoescape=False):\n                 if autoescape and (not safe_input):\n                     lead, trail = (escape(lead), escape(trail))\n                     trimmed = escape(trimmed)\n-                middle = '<a href=\"%s\"%s>%s</a>' % (escape(url), nofollow_attr, trimmed)\n-                words[i] = mark_safe('%s%s%s' % (lead, middle, trail))\n+                middle_escaped = escape(url) if autoescape and (not safe_input) else url\n+                trimmed_escaped = escape(trimmed) if autoescape and (not safe_input) else trimmed\n+                lead_escaped = escape(lead) if autoescape and (not safe_input) else lead\n+                trail_escaped = escape(trail) if autoescape and (not safe_input) else trail\n+                middle = '<a href=\"%s\"%s>%s</a>' % (middle_escaped, nofollow_attr, trimmed_escaped)\n+                words[i] = mark_safe('%s%s%s' % (lead_escaped, middle, trail_escaped))\n             elif safe_input:\n                 words[i] = mark_safe(word)\n             elif autoescape:\n", "normalized_occurrence": 1}
