{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8801", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 9e67bb6..4bb89df 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -683,9 +683,9 @@ class Documenter:\n                         # given member is a member of specified *super class*\n                         return True\n                     elif name in cls.__dict__:\n-                        return False\n+                        return True\n                     elif name in self.get_attr(cls, '__annotations__', {}):\n-                        return False\n+                        return True\n                     elif isinstance(obj, ObjectMember) and obj.class_ is cls:\n                         return False\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex e1d3d5c..54519f6 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -351,9 +351,9 @@ class Documenter:\n                     if cls.__name__ == self.options.inherited_members and cls != self.object:\n                         return True\n                     elif name in cls.__dict__:\n-                        return False\n+                        return True\n                     elif name in self.get_attr(cls, '__annotations__', {}):\n-                        return False\n+                        return True\n                     elif isinstance(obj, ObjectMember) and obj.class_ is cls:\n                         return False\n             return False\n", "normalized_occurrence": 1}
