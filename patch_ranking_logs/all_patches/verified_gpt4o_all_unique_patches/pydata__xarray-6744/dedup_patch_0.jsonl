{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-6744", "model_patch": "diff --git a/xarray/core/rolling.py b/xarray/core/rolling.py\nindex eae2351..132ffcc 100644\n--- a/xarray/core/rolling.py\n+++ b/xarray/core/rolling.py\n@@ -274,6 +274,10 @@ class DataArrayRolling(Rolling[\"DataArray\"]):\n         starts = stops - int(self.window[0])\n         starts[: int(self.window[0])] = 0\n         for (label, start, stop) in zip(self.window_labels, starts, stops):\n+            if self.center:\n+                shift = (stop - start - 1) // 2\n+                start = max(start - shift, 0)\n+                stop = min(stop + shift, len(self.window_labels))\n             window = self.obj.isel({self.dim[0]: slice(start, stop)})\n \n             counts = window.count(dim=self.dim[0])\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/rolling.py b/xarray/core/rolling.py\nindex 870b974..270a8a6 100644\n--- a/xarray/core/rolling.py\n+++ b/xarray/core/rolling.py\n@@ -110,6 +110,10 @@ class DataArrayRolling(Rolling['DataArray']):\n         starts = stops - int(self.window[0])\n         starts[:int(self.window[0])] = 0\n         for label, start, stop in zip(self.window_labels, starts, stops):\n+            if self.center:\n+                shift = (stop - start - 1) // 2\n+                start = max(start - shift, 0)\n+                stop = min(stop + shift, len(self.window_labels))\n             window = self.obj.isel({self.dim[0]: slice(start, stop)})\n             counts = window.count(dim=self.dim[0])\n             window = window.where(counts >= self.min_periods)\n", "normalized_occurrence": 1}
