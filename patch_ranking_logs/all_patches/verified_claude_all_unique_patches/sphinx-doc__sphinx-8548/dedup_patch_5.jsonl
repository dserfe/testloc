{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-8548", "model_patch": "diff --git a/sphinx/ext/autodoc/importer.py b/sphinx/ext/autodoc/importer.py\nindex 6a4748c..1940382 100644\n--- a/sphinx/ext/autodoc/importer.py\n+++ b/sphinx/ext/autodoc/importer.py\n@@ -290,10 +290,17 @@ def get_class_members(subject: Any, objpath: List[str], attrgetter: Callable,\n             value = attrgetter(subject, name)\n             unmangled = unmangle(subject, name)\n             if unmangled and unmangled not in members:\n+                # Find the class where this attribute is defined\n+                defining_class = None\n+                for cls in getmro(subject):\n+                    if hasattr(cls, name) and name in cls.__dict__:\n+                        defining_class = cls\n+                        break\n+                \n                 if name in obj_dict:\n                     members[unmangled] = ClassAttribute(subject, unmangled, value)\n                 else:\n-                    members[unmangled] = ClassAttribute(None, unmangled, value)\n+                    members[unmangled] = ClassAttribute(defining_class or subject, unmangled, value)\n         except AttributeError:\n             continue\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/importer.py b/sphinx/ext/autodoc/importer.py\nindex 65a9a3c..eda62f5 100644\n--- a/sphinx/ext/autodoc/importer.py\n+++ b/sphinx/ext/autodoc/importer.py\n@@ -188,10 +188,15 @@ def get_class_members(subject: Any, objpath: List[str], attrgetter: Callable, an\n             value = attrgetter(subject, name)\n             unmangled = unmangle(subject, name)\n             if unmangled and unmangled not in members:\n+                defining_class = None\n+                for cls in getmro(subject):\n+                    if hasattr(cls, name) and name in cls.__dict__:\n+                        defining_class = cls\n+                        break\n                 if name in obj_dict:\n                     members[unmangled] = ClassAttribute(subject, unmangled, value)\n                 else:\n-                    members[unmangled] = ClassAttribute(None, unmangled, value)\n+                    members[unmangled] = ClassAttribute(defining_class or subject, unmangled, value)\n         except AttributeError:\n             continue\n     for cls in getmro(subject):\n", "normalized_occurrence": 1}
