{"model_name_or_path": "agentless_claude", "instance_id": "mwaskom__seaborn-2848", "model_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 21c0562..017dba4 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -1569,6 +1569,9 @@ class PairGrid(Grid):\n             kwargs.update({\n                 \"hue\": hue, \"hue_order\": self._hue_order, \"palette\": self._orig_palette,\n             })\n+        elif self._hue_var is None:\n+            # If hue is passed directly to the mapping function, don't override it\n+            kwargs.update({\"hue_order\": None, \"palette\": self._orig_palette})\n         func(x=x, y=y, **kwargs)\n \n         self._update_legend_data(ax)\n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 0807052..509d858 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -749,6 +749,8 @@ class PairGrid(Grid):\n             hue = data.get(self._hue_var)\n         if 'hue' not in kwargs:\n             kwargs.update({'hue': hue, 'hue_order': self._hue_order, 'palette': self._orig_palette})\n+        elif self._hue_var is None:\n+            kwargs.update({'hue_order': None, 'palette': self._orig_palette})\n         func(x=x, y=y, **kwargs)\n         self._update_legend_data(ax)\n     def _plot_bivariate_iter_hue(self, x_var, y_var, ax, func, **kwargs):\n", "normalized_occurrence": 1}
