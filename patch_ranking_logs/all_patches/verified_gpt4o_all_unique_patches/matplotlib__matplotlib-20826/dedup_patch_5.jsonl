{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-20826", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 07605b5..17dab78 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1179,7 +1179,7 @@ class _AxesBase(martist.Artist):\n         self.set_ylim(y0, y1, emit=False, auto=other.get_autoscaley_on())\n         self.yaxis._scale = other.yaxis._scale\n \n-    def cla(self):\n+    def cla(self, restore_visibility=False):\n         \"\"\"Clear the axes.\"\"\"\n         # Note: this is called by Axes.__init__()\n \n@@ -1191,6 +1191,11 @@ class _AxesBase(martist.Artist):\n \n         xaxis_visible = self.xaxis.get_visible()\n         yaxis_visible = self.yaxis.get_visible()\n+        if restore_visibility:\n+            for ax in self._shared_axes[\"x\"].get_siblings(self):\n+                ax.xaxis.set_visible(xaxis_visible)\n+            for ax in self._shared_axes[\"y\"].get_siblings(self):\n+                ax.yaxis.set_visible(yaxis_visible)\n \n         self.xaxis.clear()\n         self.yaxis.clear()\n@@ -1470,9 +1475,9 @@ class _AxesBase(martist.Artist):\n         return self.ArtistList(self, 'texts', 'add_text',\n                                valid_types=mtext.Text)\n \n-    def clear(self):\n+    def clear(self, restore_visibility=False):\n         \"\"\"Clear the axes.\"\"\"\n-        self.cla()\n+        self.cla(restore_visibility=restore_visibility)\n \n     def get_facecolor(self):\n         \"\"\"Get the facecolor of the Axes.\"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 33a6de3..5d209e2 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -496,13 +496,18 @@ class _AxesBase(martist.Artist):\n         y0, y1 = other.get_ylim()\n         self.set_ylim(y0, y1, emit=False, auto=other.get_autoscaley_on())\n         self.yaxis._scale = other.yaxis._scale\n-    def cla(self):\n+    def cla(self, restore_visibility=False):\n         if hasattr(self, 'patch'):\n             patch_visible = self.patch.get_visible()\n         else:\n             patch_visible = True\n         xaxis_visible = self.xaxis.get_visible()\n         yaxis_visible = self.yaxis.get_visible()\n+        if restore_visibility:\n+            for ax in self._shared_axes['x'].get_siblings(self):\n+                ax.xaxis.set_visible(xaxis_visible)\n+            for ax in self._shared_axes['y'].get_siblings(self):\n+                ax.yaxis.set_visible(yaxis_visible)\n         self.xaxis.clear()\n         self.yaxis.clear()\n         for name, spine in self.spines.items():\n@@ -662,8 +667,8 @@ class _AxesBase(martist.Artist):\n     @property\n     def texts(self):\n         return self.ArtistList(self, 'texts', 'add_text', valid_types=mtext.Text)\n-    def clear(self):\n-        self.cla()\n+    def clear(self, restore_visibility=False):\n+        self.cla(restore_visibility=restore_visibility)\n     def get_facecolor(self):\n         return self.patch.get_facecolor()\n     def set_facecolor(self, color):\n", "normalized_occurrence": 1}
