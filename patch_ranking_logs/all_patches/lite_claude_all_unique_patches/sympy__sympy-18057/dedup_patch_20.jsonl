{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-18057", "model_patch": "diff --git a/sympy/core/expr.py b/sympy/core/expr.py\nindex b5265ce..6fa848c 100644\n--- a/sympy/core/expr.py\n+++ b/sympy/core/expr.py\n@@ -120,8 +120,13 @@ class Expr(Basic, EvalfMixin):\n         return self._args\n \n     def __eq__(self, other):\n+        # Fast path: if other is not a Basic instance and doesn't implement\n+        # _sympy_, it can't be equal to self\n+        if not hasattr(other, '_sympy_') and not isinstance(other, Basic):\n+            return False\n         try:\n-            other = sympify(other)\n+            # Only sympify objects we know we can safely convert\n+            other = _sympify(other)\n             if not isinstance(other, Expr):\n                 return False\n         except (SympifyError, SyntaxError):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/expr.py b/sympy/core/expr.py\nindex e14d117..44682b7 100644\n--- a/sympy/core/expr.py\n+++ b/sympy/core/expr.py\n@@ -46,8 +46,10 @@ class Expr(Basic, EvalfMixin):\n     def _hashable_content(self):\n         return self._args\n     def __eq__(self, other):\n+        if not hasattr(other, '_sympy_') and (not isinstance(other, Basic)):\n+            return False\n         try:\n-            other = sympify(other)\n+            other = _sympify(other)\n             if not isinstance(other, Expr):\n                 return False\n         except (SympifyError, SyntaxError):\n", "normalized_occurrence": 3}
