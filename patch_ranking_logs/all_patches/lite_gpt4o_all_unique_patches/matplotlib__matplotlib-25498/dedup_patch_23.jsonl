{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25498", "model_patch": "diff --git a/lib/matplotlib/colors.py b/lib/matplotlib/colors.py\nindex 61200b4..2eedc16 100644\n--- a/lib/matplotlib/colors.py\n+++ b/lib/matplotlib/colors.py\n@@ -1356,9 +1356,15 @@ class Normalize:\n \n         if np.iterable(value):\n             val = np.ma.asarray(value)\n-            return vmin + val * (vmax - vmin)\n+            if vmax != vmin:\n+                return vmin + val * (vmax - vmin)\n+            else:\n+                return vmin + val * 0\n         else:\n-            return vmin + value * (vmax - vmin)\n+            if vmax != vmin:\n+                return vmin + value * (vmax - vmin)\n+            else:\n+                return vmin\n \n     def autoscale(self, A):\n         \"\"\"Set *vmin*, *vmax* to min, max of *A*.\"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/colors.py b/lib/matplotlib/colors.py\nindex 196c069..c345b52 100644\n--- a/lib/matplotlib/colors.py\n+++ b/lib/matplotlib/colors.py\n@@ -1150,9 +1150,14 @@ class Normalize:\n         (vmax,), _ = self.process_value(self.vmax)\n         if np.iterable(value):\n             val = np.ma.asarray(value)\n-            return vmin + val * (vmax - vmin)\n-        else:\n+            if vmax != vmin:\n+                return vmin + val * (vmax - vmin)\n+            else:\n+                return vmin + val * 0\n+        elif vmax != vmin:\n             return vmin + value * (vmax - vmin)\n+        else:\n+            return vmin\n \n     def autoscale(self, A):\n         \"\"\"Set *vmin*, *vmax* to min, max of *A*.\"\"\"\n", "normalized_occurrence": 1}
