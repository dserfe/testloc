{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-6197", "model_patch": "diff --git a/src/_pytest/python.py b/src/_pytest/python.py\nindex 272731b..c87ad9b 100644\n--- a/src/_pytest/python.py\n+++ b/src/_pytest/python.py\n@@ -177,9 +177,11 @@ def pytest_collect_file(path, parent):\n     ext = path.ext\n     if ext == \".py\":\n         if not parent.session.isinitpath(path):\n-            if not path_matches_patterns(\n-                path, parent.config.getini(\"python_files\") + [\"__init__.py\"]\n-            ):\n+            patterns = parent.config.getini(\"python_files\")\n+            # Only include __init__.py in matching patterns if it's an initial path\n+            if path.basename == \"__init__.py\" and parent.session.isinitpath(path.dirpath()):\n+                patterns = patterns + [\"__init__.py\"]\n+            if not path_matches_patterns(path, patterns):\n                 return\n         ihook = parent.session.gethookproxy(path)\n         return ihook.pytest_pycollect_makemodule(path=path, parent=parent)\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/python.py b/src/_pytest/python.py\nindex 33dd083..ae3ef81 100644\n--- a/src/_pytest/python.py\n+++ b/src/_pytest/python.py\n@@ -93,7 +93,10 @@ def pytest_collect_file(path, parent):\n     ext = path.ext\n     if ext == '.py':\n         if not parent.session.isinitpath(path):\n-            if not path_matches_patterns(path, parent.config.getini('python_files') + ['__init__.py']):\n+            patterns = parent.config.getini('python_files')\n+            if path.basename == '__init__.py' and parent.session.isinitpath(path.dirpath()):\n+                patterns = patterns + ['__init__.py']\n+            if not path_matches_patterns(path, patterns):\n                 return\n         ihook = parent.session.gethookproxy(path)\n         return ihook.pytest_pycollect_makemodule(path=path, parent=parent)\n", "normalized_occurrence": 1}
