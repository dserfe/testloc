{"model_name_or_path": "agentless", "instance_id": "django__django-15973", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 42e02c2..34fb399 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -92,6 +92,8 @@ class CreateModel(ModelOperation):\n \n     def database_forwards(self, app_label, schema_editor, from_state, to_state):\n         model = to_state.apps.get_model(app_label, self.name)\n+        if isinstance(model._meta.get_field('variaveis').remote_field.through, str):\n+            model._meta.get_field('variaveis').remote_field.through = to_state.apps.get_model(model._meta.get_field('variaveis').remote_field.through)\n         if self.allow_migrate_model(schema_editor.connection.alias, model):\n             schema_editor.create_model(model)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex b786bec..2fbd16c 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -47,6 +47,8 @@ class CreateModel(ModelOperation):\n         state.add_model(ModelState(app_label, self.name, list(self.fields), dict(self.options), tuple(self.bases), list(self.managers)))\n     def database_forwards(self, app_label, schema_editor, from_state, to_state):\n         model = to_state.apps.get_model(app_label, self.name)\n+        if isinstance(model._meta.get_field('variaveis').remote_field.through, str):\n+            model._meta.get_field('variaveis').remote_field.through = to_state.apps.get_model(model._meta.get_field('variaveis').remote_field.through)\n         if self.allow_migrate_model(schema_editor.connection.alias, model):\n             schema_editor.create_model(model)\n     def database_backwards(self, app_label, schema_editor, from_state, to_state):\n", "normalized_occurrence": 1}
