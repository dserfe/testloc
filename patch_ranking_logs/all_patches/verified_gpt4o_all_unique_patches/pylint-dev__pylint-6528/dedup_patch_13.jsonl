{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-6528", "model_patch": "diff --git a/pylint/lint/expand_modules.py b/pylint/lint/expand_modules.py\nindex 94af730..f2d6567 100644\n--- a/pylint/lint/expand_modules.py\n+++ b/pylint/lint/expand_modules.py\n@@ -113,7 +113,7 @@ def expand_modules(\n                 {\n                     \"path\": filepath,\n                     \"name\": modname,\n-                    \"isarg\": True,\n+                    \"isarg\": something in files_or_modules,\n                     \"basepath\": filepath,\n                     \"basename\": modname,\n                 }\n@@ -146,4 +146,4 @@ def expand_modules(\n                         \"basename\": modname,\n                     }\n                 )\n-    return result, errors\n+    return result, errors\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/lint/expand_modules.py b/pylint/lint/expand_modules.py\nindex 37bdd47..9ae960d 100644\n--- a/pylint/lint/expand_modules.py\n+++ b/pylint/lint/expand_modules.py\n@@ -61,7 +61,7 @@ def expand_modules(files_or_modules: Sequence[str], ignore_list: list[str], igno\n             is_namespace = modutils.is_namespace(spec)\n             is_directory = modutils.is_directory(spec)\n         if not is_namespace:\n-            result.append({'path': filepath, 'name': modname, 'isarg': True, 'basepath': filepath, 'basename': modname})\n+            result.append({'path': filepath, 'name': modname, 'isarg': something in files_or_modules, 'basepath': filepath, 'basename': modname})\n         has_init = not (modname.endswith('.__init__') or modname == '__init__') and os.path.basename(filepath) == '__init__.py'\n         if has_init or is_namespace or is_directory:\n             for subfilepath in modutils.get_module_files(os.path.dirname(filepath), ignore_list, list_all=is_namespace):\n", "normalized_occurrence": 1}
