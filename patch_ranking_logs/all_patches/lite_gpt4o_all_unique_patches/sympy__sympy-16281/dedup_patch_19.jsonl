{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-16281", "model_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex b70dcf9..9ee59cf 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -481,7 +481,7 @@ class PrettyPrinter(Printer):\n         if self._use_unicode:\n             # use unicode corners\n             horizontal_chr = xobj('-', 1)\n-            corner_chr = u'\\N{BOX DRAWINGS LIGHT DOWN AND HORIZONTAL}'\n+            corner_chr = u'\\N{BOX DRAWINGS LIGHT DOWN AND RIGHT}'\n \n         func_height = pretty_func.height()\n \n@@ -490,10 +490,10 @@ class PrettyPrinter(Printer):\n         sign_height = 0\n \n         for lim in expr.limits:\n-            width = (func_height + 2) * 5 // 3 - 2\n+            width = (func_height + 2) * 4 // 3 - 2\n             sign_lines = []\n             sign_lines.append(corner_chr + (horizontal_chr*width) + corner_chr)\n-            for i in range(func_height + 1):\n+            for i in range(func_height):\n                 sign_lines.append(vertical_chr + (' '*width) + vertical_chr)\n \n             pretty_sign = stringPict('')\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 0b99bb2..11a390c 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -353,16 +353,16 @@ class PrettyPrinter(Printer):\n         vertical_chr = xobj('|', 1)\n         if self._use_unicode:\n             horizontal_chr = xobj('-', 1)\n-            corner_chr = u'┬'\n+            corner_chr = u'┌'\n         func_height = pretty_func.height()\n         first = True\n         max_upper = 0\n         sign_height = 0\n         for lim in expr.limits:\n-            width = (func_height + 2) * 5 // 3 - 2\n+            width = (func_height + 2) * 4 // 3 - 2\n             sign_lines = []\n             sign_lines.append(corner_chr + horizontal_chr * width + corner_chr)\n-            for i in range(func_height + 1):\n+            for i in range(func_height):\n                 sign_lines.append(vertical_chr + ' ' * width + vertical_chr)\n             pretty_sign = stringPict('')\n             pretty_sign = prettyForm(*pretty_sign.stack(*sign_lines))\n", "normalized_occurrence": 1}
