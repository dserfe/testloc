{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-6386", "model_patch": "diff --git a/pylint/config/option_manager_mixin.py b/pylint/config/option_manager_mixin.py\nindex d22ea01..06ea3de 100644\n--- a/pylint/config/option_manager_mixin.py\n+++ b/pylint/config/option_manager_mixin.py\n@@ -168,6 +168,8 @@ class OptionsManagerMixIn:\n         if \"short\" in optdict:\n             self._short_options[optdict[\"short\"]] = opt\n             args.append(\"-\" + optdict[\"short\"])\n+            if opt == \"verbose\":\n+                optdict[\"action\"] = \"store_true\"\n             del optdict[\"short\"]\n         # cleanup option definition dict before giving it to optik\n         for key in list(optdict.keys()):\n@@ -343,4 +345,4 @@ class OptionsManagerMixIn:\n         \"\"\"Return the usage string for available options.\"\"\"\n         self.cmdline_parser.formatter.output_level = level\n         with _patch_optparse():\n-            return self.cmdline_parser.format_help()\n+            return self.cmdline_parser.format_help()\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/config/option_manager_mixin.py b/pylint/config/option_manager_mixin.py\nindex 073d6af..38a41f4 100644\n--- a/pylint/config/option_manager_mixin.py\n+++ b/pylint/config/option_manager_mixin.py\n@@ -102,6 +102,8 @@ class OptionsManagerMixIn:\n         if 'short' in optdict:\n             self._short_options[optdict['short']] = opt\n             args.append('-' + optdict['short'])\n+            if opt == 'verbose':\n+                optdict['action'] = 'store_true'\n             del optdict['short']\n         for key in list(optdict.keys()):\n             if key not in self._optik_option_attrs:\n", "normalized_occurrence": 1}
