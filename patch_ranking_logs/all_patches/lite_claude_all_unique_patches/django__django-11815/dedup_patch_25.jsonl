{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11815", "model_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex 6957452..61dcf3a 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -1014,6 +1014,9 @@ class CharField(Field):\n \n     def get_prep_value(self, value):\n         value = super().get_prep_value(value)\n+        # Handle Enum values by using their name instead of value\n+        if value is not None and hasattr(value, '_name_'):  # Check if it's an Enum member\n+            return value._name_\n         return self.to_python(value)\n \n     def formfield(self, **kwargs):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex e3867cb..4a540e0 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -490,6 +490,8 @@ class CharField(Field):\n         return str(value)\n     def get_prep_value(self, value):\n         value = super().get_prep_value(value)\n+        if value is not None and hasattr(value, '_name_'):\n+            return value._name_\n         return self.to_python(value)\n     def formfield(self, **kwargs):\n         defaults = {'max_length': self.max_length}\n", "normalized_occurrence": 1}
