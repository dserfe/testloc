[
  {
    "instance_id": "django__django-10914",
    "file_function": {
      "tests/file_uploads/tests.py": [
        "test_large_upload",
        "test_not_a_directory"
      ],
      "tests/file_storage/tests.py": [
        "test_listdir",
        "test_delete_deletes_directories",
        "test_base_url",
        "test_makedirs_race_handling",
        "test_file_chunks_error",
        "test_file_upload_directory_permissions",
        "test_remove_race_handling",
        "test_file_get_modified_time_timezone",
        "test_file_upload_permissions",
        "test_file_get_created_time_timezone",
        "test_save_doesnt_close",
        "test_files",
        "test_race_condition",
        "test_file_get_accessed_time_timezone",
        "test_setting_changed"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-13480",
    "file_function": {
      "sympy/functions/elementary/tests/test_hyperbolic.py": [
        "test_coth",
        "test_simplifications"
      ]
    }
  },
  {
    "instance_id": "django__django-16139",
    "file_function": {
      "tests/auth_tests/test_forms.py": [
        "test_bug_17944_empty_password",
        "test_user_permission_performance",
        "test_username_field_autocapitalize_none"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-21379",
    "file_function": {
      "sympy/functions/elementary/tests/test_piecewise.py": [
        "test_identical_conds_issue",
        "test_issue_11045",
        "test_piecewise_solve",
        "test_conjugate_transpose",
        "test_issue_14240",
        "test_piecewise1",
        "test_piecewise_integrate1ca",
        "test_Piecewise_rewrite_as_ITE",
        "test_issue_6900",
        "test_eval_rewrite_as_KroneckerDelta",
        "test_as_expr_set_pairs",
        "test_unevaluated_integrals",
        "test_issue_16715",
        "test_holes",
        "test_piecewise_collapse",
        "test_piecewise_simplify",
        "test__intervals",
        "test_issue_8919",
        "test_piecewise_series",
        "test_piecewise_fold",
        "test_piecewise_as_leading_term"
      ],
      "sympy/core/tests/test_assumptions.py": [
        "test_check_assumptions",
        "test_assumptions_copy",
        "test_failing_assumptions",
        "test_common_assumptions"
      ]
    }
  },
  {
    "instance_id": "django__django-11790",
    "file_function": {
      "tests/auth_tests/test_views.py": [
        "test_user_change_password",
        "test_password_change_succeeds"
      ],
      "tests/auth_tests/test_forms.py": [
        "test_inactive_user",
        "test_inactive_user_i18n"
      ]
    }
  },
  {
    "instance_id": "django__django-16667",
    "file_function": {
      "tests/forms_tests/widget_tests/test_selectdatewidget/SelectDateWidgetTest/test_value_from_datadict.py": [
        "test_value_from_datadict"
      ]
    }
  },
  {
    "instance_id": "django__django-15569",
    "file_function": {
      "tests/schema/tests.py": [
        "test_func_index_lookups"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-7985",
    "file_function": {
      "tests/test_build_linkcheck.py": [
        "test_defaults",
        "test_defaults_json",
        "test_linkcheck_request_headers",
        "test_auth",
        "test_anchors_ignored"
      ],
      "tests/test_build.py": [
        "test_build_all"
      ]
    }
  },
  {
    "instance_id": "django__django-14855",
    "file_function": {
      "tests/admin_views/tests.py": [
        "test_view",
        "test_view_subtitle_per_object",
        "test_label_suffix_translated",
        "test_readonly_text_field",
        "test_readonly_get",
        "test_readonly_manytomany_forwards_ref"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-25747",
    "file_function": {
      "sklearn/utils/tests/test_set_output.py": [
        "test__wrap_in_pandas_container_error_validation",
        "test__wrap_in_pandas_container_column_errors"
      ],
      "sklearn/compose/tests/test_column_transformer.py": [
        "test_feature_name_validation_missing_columns_drop_passthough",
        "test_column_transformer_set_output",
        "test_column_transformer_mixed_cols_sparse",
        "test_column_transformer_special_strings",
        "test_column_transformer_empty_columns"
      ]
    }
  },
  {
    "instance_id": "django__django-14034",
    "file_function": {
      "tests/forms_tests/field_tests/test_multivaluefield.py": [
        "test_clean_disabled_multivalue"
      ],
      "tests/forms_tests/tests/test_forms.py": [
        "test_multivalue_optional_subfields"
      ]
    }
  },
  {
    "instance_id": "django__django-13925",
    "file_function": {
      "tests/model_regress/tests.py": [
        "test_model_init_too_many_args",
        "test_empty_choice",
        "test_get_next_prev_by_field_unsaved",
        "test_get_next_prev_by_field"
      ],
      "tests/model_inheritance/test_abstract_inheritance.py": [
        "test_override_one2one_relation_auto_field_clashes",
        "test_cannot_override_indirect_abstract_field",
        "test_virtual_field",
        "test_multi_inheritance_field_clashes"
      ],
      "tests/model_inheritance/tests.py": [
        "test_init_subclass",
        "test_unique_together",
        "test_eq",
        "test_inherited_ordering_pk_desc",
        "test_abstract_parent_link",
        "test_update_inherited_model",
        "test_unique",
        "test_related_objects_for_inherited_models"
      ],
      "tests/check_framework/test_model_checks.py": [
        "test_collision_in_same_model",
        "test_auto_created_pk",
        "test_no_collision_for_proxy_models",
        "test_collision_abstract_model",
        "test_collision_in_different_models"
      ],
      "tests/proxy_model_inheritance/tests.py": [
        "test_deletion_through_intermediate_proxy",
        "test_table_exists"
      ],
      "tests/model_fields/tests.py": [
        "test_overriding_inherited_FIELD_display"
      ],
      "tests/model_fields/test_integerfield.py": [
        "test_types"
      ]
    }
  },
  {
    "instance_id": "django__django-11880",
    "file_function": {
      "tests/forms_tests/field_tests/test_multivaluefield.py": [
        "test_form_as_table",
        "test_form_cleaned_data",
        "test_clean_disabled_multivalue"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-8459",
    "file_function": {
      "tests/test_ext_autodoc.py": [
        "test_autodoc_GenericAlias",
        "test_format_signature",
        "test_parse_name",
        "test_autodoc_inherited_members",
        "test_autodoc_member_order",
        "test_autodoc_decorator",
        "test_coroutine",
        "test_autodoc_inner_class",
        "test_final",
        "test_autodoc_inherited_members_Base",
        "test_autodoc_ignore_module_all",
        "test_singledispatch",
        "test_autodoc_imported_members",
        "test_autodoc_warnings",
        "test_overload",
        "test_autodoc_module_member_order",
        "test_autodoc_noindex",
        "test_py_module",
        "test_autodoc_typed_instance_variables",
        "test_autodoc_attributes",
        "test_autodoc_TypeVar"
      ],
      "tests/test_ext_autodoc_configs.py": [
        "test_autodoc_typehints_description",
        "test_autoclass_content_and_docstring_signature_both",
        "test_autodoc_default_options_with_values",
        "test_autodoc_docstring_signature",
        "test_autodoc_typehints_description_for_invalid_node",
        "test_autodoc_default_options",
        "test_autoclass_content_and_docstring_signature_init"
      ],
      "tests/test_ext_autodoc_autoclass.py": [
        "test_show_inheritance_for_subclass_of_generic_type"
      ],
      "tests/test_ext_autodoc_events.py": [
        "test_between",
        "test_process_docstring",
        "test_cut_lines",
        "test_skip_module_member"
      ],
      "tests/test_ext_autosummary.py": [
        "test_autosummary_generate_overwrite2",
        "test_autosummary_generate",
        "test_autosummary_generate_overwrite1",
        "test_autosummary_skip_member",
        "test_empty_autosummary_generate"
      ],
      "tests/test_ext_autodoc_private_members.py": [
        "test_private_members"
      ],
      "tests/test_ext_autodoc_autodata.py": [
        "test_autodata_novalue"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-14141",
    "file_function": {
      "sklearn/utils/tests/test_show_versions.py": [
        "test_show_versions_with_blas",
        "test_get_deps_info"
      ]
    }
  },
  {
    "instance_id": "django__django-15382",
    "file_function": {
      "tests/queries/tests.py": [
        "test_ticket7378",
        "test_emptyqueryset_values",
        "test_slicing_cannot_filter_queryset_once_sliced",
        "test_nested_in_subquery",
        "test_empty_nodes",
        "test_conflicting_aliases_during_combine",
        "test_ticket7235",
        "test_empty_sliced_subquery_exclude"
      ],
      "tests/expressions/tests.py": [
        "test_subquery",
        "test_aggregate_subquery_annotation",
        "test_subquery_filter_by_aggregate"
      ],
      "tests/queries/test_qs_combinators.py": [
        "test_union_with_empty_qs"
      ]
    }
  },
  {
    "instance_id": "django__django-12308",
    "file_function": {
      "tests/admin_views/tests.py": [
        "test_view",
        "test_multiple_sort_same_field",
        "test_named_group_field_choices_change_list"
      ],
      "tests/admin_utils/tests.py": [
        "test_number_formats_display_for_field",
        "test_null_display_for_field"
      ]
    }
  },
  {
    "instance_id": "psf__requests-2931",
    "file_function": {
      "tests/test_requests.py": [
        "test_prepared_request_no_cookies_copy",
        "test_long_authinfo_in_url",
        "test_data_argument_accepts_tuples",
        "test_prepared_request_complete_copy",
        "test_params_bytes_are_encoded",
        "test_basic_auth_str_is_always_native"
      ]
    }
  },
  {
    "instance_id": "django__django-11820",
    "file_function": {
      "tests/check_framework/test_model_checks.py": [
        "test_collision_across_apps",
        "test_no_collision_across_apps_interpolation",
        "test_no_collision_for_proxy_models"
      ],
      "tests/many_to_one/tests.py": [
        "test_add_after_prefetch",
        "test_related_object",
        "test_save_nullable_fk_after_parent"
      ],
      "tests/check_framework/tests.py": [
        "test_model_check_method_not_shadowed"
      ],
      "tests/one_to_one/tests.py": [
        "test_related_object"
      ],
      "tests/m2m_regress/tests.py": [
        "test_assigning_invalid_data_to_m2m_doesnt_clear_existing_relations",
        "test_add_m2m_with_base_class"
      ]
    }
  },
  {
    "instance_id": "django__django-11179",
    "file_function": {
      "tests/model_forms/tests.py": [
        "test_file_field_data",
        "test_image_field"
      ],
      "tests/delete/tests.py": [
        "test_do_nothing_qscount",
        "test_m2m"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-22719",
    "file_function": {
      "lib/matplotlib/tests/test_axes.py": [
        "test_scatter_2D",
        "test_eventplot_orientation",
        "test_pcolor_datetime_axis"
      ],
      "lib/matplotlib/tests/test_category.py": [
        "test_convert_float_array",
        "test_plot_bytes",
        "test_convert_one_number",
        "test_plot_numlike"
      ]
    }
  },
  {
    "instance_id": "django__django-14122",
    "file_function": {
      "tests/aggregation_regress/tests.py": [
        "test_more_more",
        "test_having_group_by",
        "test_more_more_more"
      ],
      "tests/aggregation/tests.py": [
        "test_annotate_ordering",
        "test_aggregate_in_order_by"
      ],
      "tests/queries/tests.py": [
        "test_distinct_ordered_sliced_subquery"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-14053",
    "file_function": {
      "sklearn/tree/tests/test_export.py": [
        "test_export_text",
        "test_export_text_errors"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-18698",
    "file_function": {
      "sympy/polys/tests/test_sqfreetools.py": [
        "test_dup_sqf",
        "test_dmp_sqf"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-19783",
    "file_function": {
      "sympy/physics/quantum/tests/test_operator.py": [
        "test_identity",
        "test_operator",
        "test_unitary",
        "test_operator_inv"
      ],
      "sympy/physics/quantum/tests/test_qapply.py": [
        "test_commutator",
        "test_anticommutator"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-15875",
    "file_function": {
      "sympy/core/tests/test_expr.py": [
        "test_is_constant"
      ],
      "sympy/core/tests/test_arit.py": [
        "test_ncmul",
        "test_Add_is_zero"
      ],
      "sympy/core/tests/test_assumptions.py": [
        "test_issue_10302"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-3151",
    "file_function": {
      "xarray/tests/test_combine.py": [
        "test_coord_monotonically_decreasing",
        "test_invalid_hypercube_input",
        "test_coord_not_monotonic",
        "test_merge_one_dim_concat_another",
        "test_combine_by_coords",
        "test_check_for_impossible_ordering",
        "test_manual_combine_but_need_auto_combine",
        "test_manual_concat"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-7748",
    "file_function": {
      "tests/test_ext_autodoc.py": [
        "test_singledispatchmethod_automethod",
        "test_autodoc_imported_members",
        "test_singledispatch",
        "test_singledispatchmethod",
        "test_autodoc_ignore_module_all"
      ],
      "tests/test_ext_autodoc_autofunction.py": [
        "test_singledispatch"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-7236",
    "file_function": {
      "testing/test_unittest.py": [
        "test_setup",
        "test_unittest_expected_failure_for_failing_test_is_xfail",
        "test_pdb_teardown_called",
        "test_unittest_skip_issue1169",
        "test_runTest_method",
        "test_testcase_custom_exception_info",
        "test_exit_outcome",
        "test_unittest_expected_failure_for_passing_test_is_fail",
        "test_async_support",
        "test_unittest_raise_skip_issue748",
        "test_testcase_totally_incompatible_exception_info",
        "test_class_method_containing_test_issue1558"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-16450",
    "file_function": {
      "sympy/core/tests/test_assumptions.py": [
        "test_sanitize_assumptions"
      ],
      "sympy/core/tests/test_expr.py": [
        "test_is_constant",
        "test_replace"
      ],
      "sympy/core/tests/test_function.py": [
        "test_undefined_function_eval",
        "test_issue_7231"
      ],
      "sympy/core/tests/test_subs.py": [
        "test_Function_subs",
        "test_subs_dict"
      ],
      "sympy/core/tests/test_symbol.py": [
        "test_unicode",
        "test_disambiguate",
        "test_Wild_properties",
        "test_symbols",
        "test__uniquely_named_symbol_and__symbol"
      ],
      "sympy/core/tests/test_basic.py": [
        "test_as_dummy"
      ]
    }
  },
  {
    "instance_id": "django__django-11815",
    "file_function": {
      "tests/migrations/test_writer.py": [
        "test_serialize_class_based_validators",
        "test_serialize_enums"
      ]
    }
  },
  {
    "instance_id": "django__django-11999",
    "file_function": {
      "tests/model_regress/tests.py": [
        "test_empty_choice"
      ],
      "tests/model_fields/tests.py": [
        "test_choices_and_field_display"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-5787",
    "file_function": {
      "testing/test_reports.py": [
        "test_test_report",
        "test_collect_report",
        "test_unserialization_failure",
        "test_invalid_report_types"
      ],
      "testing/test_pdb.py": [
        "test_raises_bdbquit_with_eoferror"
      ],
      "testing/test_runner.py": [
        "test_failure_in_teardown_function",
        "test_exact_teardown_issue1206"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-8548",
    "file_function": {
      "tests/test_ext_autodoc.py": [
        "test_format_signature",
        "test_autodoc_typed_inherited_instance_variables",
        "test_autodoc_member_order",
        "test_slots",
        "test_autodoc_inner_class",
        "test_final",
        "test_autodoc_inherited_members_Base",
        "test_autodoc_ignore_module_all",
        "test_autodoc_imported_members",
        "test_autodoc_warnings",
        "test_overload",
        "test_autodoc_noindex",
        "test_py_module"
      ],
      "tests/test_ext_autodoc_configs.py": [
        "test_autodoc_typehints_description",
        "test_autoclass_content_and_docstring_signature_both",
        "test_autodoc_default_options_with_values",
        "test_autoclass_content_both",
        "test_autoclass_content_and_docstring_signature_init"
      ],
      "tests/test_ext_autodoc_autoclass.py": [
        "test_show_inheritance_for_subclass_of_generic_type"
      ],
      "tests/test_ext_autodoc_private_members.py": [
        "test_private_field_and_private_members",
        "test_private_members"
      ],
      "tests/test_ext_autosummary.py": [
        "test_autosummary_generate",
        "test_autosummary_skip_member",
        "test_empty_autosummary_generate"
      ],
      "tests/test_ext_autodoc_events.py": [
        "test_process_docstring"
      ],
      "tests/test_ext_autodoc_autoattribute.py": [
        "test_autoattribute_typed_variable"
      ]
    }
  },
  {
    "instance_id": "django__django-11133",
    "file_function": {
      "tests/responses/tests.py": [
        "test_generator_cache",
        "test_tell",
        "test_reason_phrase",
        "test_wrap_textiowrapper",
        "test_setdefault",
        "test_repr",
        "test_invalid_status_code",
        "test_repr_no_content_type",
        "test_write"
      ],
      "tests/responses/test_cookie.py": [
        "test_delete_cookie_secure_prefix",
        "test_invalid_samesite",
        "test_httponly_cookie"
      ],
      "tests/httpwrappers/tests.py": [
        "test_iter_content",
        "test_stream_interface",
        "test_file_interface",
        "test_newlines_in_headers",
        "test_headers_type",
        "test_response"
      ],
      "tests/view_tests/tests/test_defaults.py": [
        "test_csrf_token_in_404"
      ],
      "tests/view_tests/tests/test_static.py": [
        "test_copes_with_empty_path_component"
      ]
    }
  },
  {
    "instance_id": "django__django-12774",
    "file_function": {
      "tests/queries/tests.py": [
        "test_named_values_list_expression",
        "test_common_mixed_case_foreign_keys"
      ],
      "tests/select_related/tests.py": [
        "test_reverse_relation_caching"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-12973",
    "file_function": {
      "sklearn/linear_model/tests/test_least_angle.py": [
        "test_lasso_lars_ic"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-7454",
    "file_function": {
      "tests/test_ext_autosummary.py": [
        "test_empty_autosummary_generate",
        "test_autosummary_generate",
        "test_autosummary_generate_overwrite1",
        "test_autosummary_generate_overwrite2",
        "test_autosummary_skip_member",
        "test_get_items_summary"
      ],
      "tests/test_ext_autodoc_configs.py": [
        "test_autodoc_typehints_description"
      ]
    }
  },
  {
    "instance_id": "django__django-15252",
    "file_function": {
      "tests/migrations/test_commands.py": [
        "test_migrate_backward_to_squashed_migration",
        "test_migrate_not_reflected_changes"
      ],
      "tests/migrations/test_executor.py": [
        "test_migrate_marks_replacement_unapplied"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-14598",
    "file_function": {
      "astropy/io/fits/tests/test_header.py": [
        "test_hierarch_card_creation",
        "test_specify_undefined_value",
        "test_update_field_specifier",
        "test_append_end_card",
        "test_long_commentary_card_appended_to_header",
        "test_long_string_value_via_fromstring",
        "test_update_numeric",
        "test_invalid_float_cards",
        "test_newlines_in_commentary",
        "test_hierarch_card_delete",
        "test_card_from_bytes",
        "test_fix_hierarch_with_invalid_value",
        "test_update_rvkc",
        "test_fixable_non_fsc",
        "test_assign_boolean",
        "test_card_image_constructed_too_long",
        "test_initialize_rvkc",
        "test_header_set_value_to_none",
        "test_assign_inf_nan",
        "test_long_string_value_with_multiple_long_words",
        "test_string_value_card",
        "test_raw_keyword_value",
        "test_fix_invalid_equal_sign",
        "test_long_string_value",
        "test_invalid_keyword_cards",
        "test_constructor_filter_illegal_data_structures",
        "test_assign_unicode"
      ],
      "astropy/io/fits/tests/test_core.py": [
        "test_combined_verify_options"
      ],
      "astropy/io/fits/tests/test_hdulist.py": [
        "test_hdul_fromstring"
      ]
    }
  },
  {
    "instance_id": "django__django-15851",
    "file_function": {
      "tests/dbshell/tests.py": [
        "test_command_missing"
      ]
    }
  },
  {
    "instance_id": "django__django-15930",
    "file_function": {
      "tests/expressions_case/tests.py": [
        "test_annotate_with_empty_when",
        "test_empty_q_object",
        "test_filter_with_aggregation_in_value",
        "test_aggregation_empty_cases",
        "test_in_subquery",
        "test_only_when_arguments",
        "test_invalid_when_constructor_args",
        "test_annotate_with_aggregation_in_condition",
        "test_condition_with_lookups"
      ],
      "tests/annotations/tests.py": [
        "test_annotation_aggregate_with_m2o"
      ],
      "tests/aggregation_regress/tests.py": [
        "test_conditional_aggregate"
      ],
      "tests/expressions/tests.py": [
        "test_expressions"
      ]
    }
  },
  {
    "instance_id": "django__django-14608",
    "file_function": {
      "tests/forms_tests/tests/test_formsets.py": [
        "test_no_data_error",
        "test_customize_management_form_error",
        "test_formset_total_error_count_with_non_form_errors",
        "test_absolute_max",
        "test_management_form_invalid_data",
        "test_formset_validate_min_excludes_empty_forms"
      ],
      "tests/model_formsets/tests.py": [
        "test_modelformset_validate_max_flag",
        "test_deletion",
        "test_simple_save"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-22865",
    "file_function": {
      "lib/matplotlib/tests/test_colorbar.py": [
        "test_colorbar_positioning",
        "test_colorbar_closed_patch",
        "test_colorbar_extension_shape",
        "test_colorbar_extension_inverted_axis",
        "test_contour_colorbar"
      ],
      "lib/matplotlib/tests/test_contour.py": [
        "test_given_colors_levels_and_extends"
      ]
    }
  },
  {
    "instance_id": "django__django-14500",
    "file_function": {
      "tests/migrations/test_commands.py": [
        "test_migrate_not_reflected_changes",
        "test_showmigrations_list_squashed",
        "test_migrate_fake_initial_case_insensitive"
      ],
      "tests/migrations/test_executor.py": [
        "test_alter_id_type_with_fk"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-13142",
    "file_function": {
      "sklearn/mixture/tests/test_gaussian_mixture.py": [
        "test_gaussian_mixture_fit_predict"
      ],
      "sklearn/mixture/tests/test_bayesian_mixture.py": [
        "test_bayesian_mixture_fit_predict"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-14496",
    "file_function": {
      "sklearn/cluster/tests/test_optics.py": [
        "test_dbscan_optics_parity",
        "test_min_samples_edge_case",
        "test_wrong_cluster_method",
        "test_bad_extract",
        "test_close_extract",
        "test_extract_dbscan"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-17318",
    "file_function": {
      "sympy/simplify/tests/test_sqrtdenest.py": [
        "test_sqrtdenest4",
        "test_sqrtdenest3",
        "test_sqrtdenest2"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-14087",
    "file_function": {
      "sklearn/tests/test_common.py": [
        "test_class_weight_balanced_linear_classifiers",
        "test_estimators"
      ],
      "sklearn/linear_model/tests/test_logistic.py": [
        "test_error",
        "test_logistic_regressioncv_class_weights",
        "test_LogisticRegressionCV_no_refit",
        "test_penalty_none",
        "test_l1_ratios_param",
        "test_LogisticRegressionCV_GridSearchCV_elastic_net"
      ]
    }
  },
  {
    "instance_id": "django__django-15103",
    "file_function": {
      "tests/template_tests/filter_tests/test_json_script.py": [
        "test_basic"
      ]
    }
  },
  {
    "instance_id": "django__django-14238",
    "file_function": {
      "tests/model_fields/test_autofield.py": [
        "test_isinstance_of_autofield",
        "test_issubclass_of_autofield"
      ],
      "tests/model_options/test_default_pk.py": [
        "test_default_auto_field_setting"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-23950",
    "file_function": {
      "sympy/sets/tests/test_contains.py": [
        "test_as_set"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-13878",
    "file_function": {
      "sympy/stats/tests/test_continuous_rv.py": [
        "test_logistic",
        "test_laplace",
        "test_dagum",
        "test_arcsin",
        "test_kumaraswamy",
        "test_frechet",
        "test_gamma_inverse",
        "test_nakagami",
        "test_prefab_sampling",
        "test_gamma",
        "test_studentt"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-9673",
    "file_function": {
      "tests/test_ext_autodoc.py": [
        "test_format_signature",
        "test_autodoc_exception",
        "test_autodoc"
      ],
      "tests/test_ext_napoleon_docstring.py": [
        "test_preprocess_types",
        "test_pep526_annotations",
        "test_underscore_in_attribute_strip_signature_backslash",
        "test_see_also_refs",
        "test_recombine_set_tokens_invalid",
        "test_token_type",
        "test_sphinx_admonitions",
        "test_class_data_member_inline",
        "test_code_block_in_returns_section",
        "test_list_in_parameter_description",
        "test_token_type_invalid",
        "test_docstrings",
        "test_noindex",
        "test_keywords_with_types",
        "test_section_header_formatting",
        "test_custom_generic_sections",
        "test_class_data_member",
        "test_raises_types",
        "test_class_data_member_inline_ref_in_type",
        "test_parameter_types",
        "test_parameters_with_class_reference"
      ],
      "tests/test_ext_autodoc_configs.py": [
        "test_autodoc_typehints_description_with_documented_init",
        "test_autodoc_typehints_description_no_undoc",
        "test_autodoc_typehints_description_for_invalid_node"
      ]
    }
  },
  {
    "instance_id": "django__django-16569",
    "file_function": {
      "tests/forms_tests/tests/test_formsets.py": [
        "test_formset_with_ordering_and_deletion"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-25102",
    "file_function": {
      "sklearn/compose/tests/test_column_transformer.py": [
        "test_transformers_with_pandas_out_but_not_feature_names_out"
      ],
      "sklearn/utils/tests/test_set_output.py": [
        "test__wrap_in_pandas_container_error_validation",
        "test_set_output_method",
        "test_auto_wrap_output_keys_errors_with_incorrect_input",
        "test_set_output_mro"
      ],
      "sklearn/tests/test_base.py": [
        "test_clone_pandas_dataframe",
        "test_feature_names_in"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-21847",
    "file_function": {
      "sympy/polys/tests/test_monomials.py": [
        "test_monomials"
      ]
    }
  },
  {
    "instance_id": "django__django-15277",
    "file_function": {
      "tests/annotations/tests.py": [
        "test_custom_functions"
      ],
      "tests/model_fields/test_charfield.py": [
        "test_deconstruct",
        "test_lookup_integer_in_charfield"
      ],
      "tests/expressions/tests.py": [
        "test_new_object_create"
      ],
      "tests/expressions_case/tests.py": [
        "test_update_text"
      ]
    }
  },
  {
    "instance_id": "pylint-dev__pylint-8898",
    "file_function": {
      "tests/config/test_config.py": [
        "test_csv_regex_error"
      ],
      "tests/config/pylint_config/test_run_pylint_config.py": [
        "test_invocation_of_pylint_config"
      ],
      "tests/config/pylint_config/test_pylint_config_generate.py": [
        "test_writing_minimal_file"
      ]
    }
  },
  {
    "instance_id": "psf__requests-2317",
    "file_function": {
      "tests/test_requests.py": [
        "test_DIGEST_AUTH_RETURNS_COOKIE",
        "test_DIGEST_STREAM",
        "test_cannot_send_unprepared_requests",
        "test_requests_history_is_saved",
        "test_cookie_persists_via_api",
        "test_auth_is_retained_for_redirect_on_host",
        "test_DIGESTAUTH_WRONG_HTTP_401_GET"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-23412",
    "file_function": {
      "lib/matplotlib/tests/test_patches.py": [
        "test_rotate_rect_draw",
        "test_default_linestyle",
        "test_corner_center",
        "test_patch_linestyle_none",
        "test_contains_point",
        "test_patch_str"
      ],
      "lib/matplotlib/tests/test_axes.py": [
        "test_hist_log_barstacked",
        "test_bar_uint8",
        "test_autoscale_tiny_sticky",
        "test_arc_ellipse",
        "test_box_aspect"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-16792",
    "file_function": {
      "sympy/utilities/tests/test_autowrap.py": [
        "test_cython_wrapper_scalar_function",
        "test_autowrap_args",
        "test_cython_wrapper_inoutarg",
        "test_cython_wrapper_compile_flags"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-12481",
    "file_function": {
      "sympy/combinatorics/tests/test_permutations.py": [
        "test_Permutation",
        "test_args"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-12096",
    "file_function": {
      "sympy/core/tests/test_expr.py": [
        "test_as_ordered_terms",
        "test_is_constant",
        "test_leadterm2"
      ],
      "sympy/printing/tests/test_python.py": [
        "test_python_keyword_symbol_name_escaping"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-24066",
    "file_function": {
      "sympy/physics/units/tests/test_quantities.py": [
        "test_factor_and_dimension",
        "test_issue_20288",
        "test_check_unit_consistency",
        "test_dimensional_expr_of_derivative"
      ]
    }
  },
  {
    "instance_id": "django__django-13794",
    "file_function": {
      "tests/template_tests/filter_tests/test_add.py": [
        "test_add02",
        "test_add03"
      ]
    }
  },
  {
    "instance_id": "django__django-16901",
    "file_function": {
      "tests/queries/test_q/QTests/test_deconstruct_xor.py": [
        "test_deconstruct_xor"
      ],
      "tests/queries/test_q/QTests/test_flatten.py": [
        "test_flatten"
      ],
      "tests/queries/test_q/QTests/test_deconstruct_negated.py": [
        "test_deconstruct_negated"
      ],
      "tests/queries/tests/Queries4Tests/test_ticket15316_exclude_false.py": [
        "test_ticket15316_exclude_false"
      ],
      "tests/queries/tests/Queries4Tests/test_ticket15316_one2one_exclude_true.py": [
        "test_ticket15316_one2one_exclude_true"
      ],
      "tests/queries/test_q/QTests/test_deconstruct_or.py": [
        "test_deconstruct_or"
      ],
      "tests/queries/test_q/QTests/test_combine_not_q_object.py": [
        "test_combine_not_q_object"
      ],
      "tests/queries/test_q/QTests/test_reconstruct_or.py": [
        "test_reconstruct_or"
      ],
      "tests/queries/test_q.py": [
        "test_rawsql"
      ],
      "tests/queries/tests/Queries5Tests/test_ticket5261.py": [
        "test_ticket5261"
      ],
      "tests/queries/test_q/QTests/test_reconstruct_negated.py": [
        "test_reconstruct_negated"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-4094",
    "file_function": {
      "xarray/tests/test_dataset.py": [
        "test_unstack",
        "test_to_stacked_array_to_unstacked_dataset_different_dimension",
        "test_to_stacked_array_name",
        "test_to_stacked_array_invalid_sample_dims",
        "test_unstack_errors"
      ],
      "xarray/tests/test_dataarray.py": [
        "test_stack_unstack"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-23299",
    "file_function": {
      "lib/matplotlib/tests/test_animation.py": [
        "test_animation_repr_html"
      ],
      "lib/matplotlib/tests/test_axes.py": [
        "test_pyplot_axes",
        "test_rc_tick",
        "test_normal_axes"
      ],
      "lib/matplotlib/tests/test_figure.py": [
        "test_fignum_exists",
        "test_figure_label",
        "test_iterability_axes_argument"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-10908",
    "file_function": {
      "sklearn/feature_extraction/tests/test_text.py": [
        "test_countvectorizer_vocab_sets_when_pickling",
        "test_vectorizer",
        "test_count_binary_occurrences",
        "test_count_vectorizer_max_features",
        "test_non_unique_vocab",
        "test_countvectorizer_custom_vocabulary",
        "test_vectorizer_string_object_as_input",
        "test_feature_names",
        "test_tfidfvectorizer_binary",
        "test_countvectorizer_empty_vocabulary"
      ]
    }
  },
  {
    "instance_id": "django__django-16485",
    "file_function": {
      "tests/template_tests/filter_tests/test_floatformat/FunctionTests/test_inputs.py": [
        "test_inputs"
      ],
      "tests/template_tests/filter_tests/test_floatformat/FunctionTests/test_force_grouping.py": [
        "test_force_grouping"
      ],
      "tests/template_tests/filter_tests/test_floatformat/FunctionTests/test_infinity.py": [
        "test_infinity"
      ],
      "tests/template_tests/filter_tests/test_floatformat/FunctionTests/test_unlocalize.py": [
        "test_unlocalize"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-7336",
    "file_function": {
      "astropy/units/tests/test_quantity_decorator.py": [
        "test_kwargs_extra",
        "test_args_None",
        "test_args_nonquantity",
        "test_unused_kwargs",
        "test_kwargs",
        "test_args_None_kwarg"
      ]
    }
  },
  {
    "instance_id": "django__django-13033",
    "file_function": {
      "tests/ordering/tests.py": [
        "test_order_by_f_expression_duplicates",
        "test_orders_nulls_first_on_filtered_subquery",
        "test_order_by_constant_value",
        "test_order_by_ptr_field_with_default_ordering_by_expression",
        "test_random_ordering"
      ],
      "tests/queries/tests.py": [
        "test_ordering",
        "test_ticket15316_exclude_false",
        "test_ticket7098",
        "test_slicing_cannot_reorder_queryset_once_sliced",
        "test_extra_values",
        "test_infinite_loop"
      ],
      "tests/many_to_one/tests.py": [
        "test_values_list_exception"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-9602",
    "file_function": {
      "tests/test_util_typing.py": [
        "test_restify_type_ForwardRef",
        "test_stringify_type_Literal",
        "test_restify_pep_585",
        "test_restify_type_hints_typevars",
        "test_restify_type_hints_Union",
        "test_restify",
        "test_stringify_type_hints_Union",
        "test_stringify_type_hints_containers",
        "test_stringify_type_hints_pep_585",
        "test_stringify",
        "test_stringify_type_hints_typevars",
        "test_stringify_broken_type_hints",
        "test_restify_type_hints_Callable",
        "test_stringify_Annotated",
        "test_restify_type_hints_containers",
        "test_stringify_type_hints_Callable",
        "test_stringify_type_hints_string",
        "test_restify_type_Literal"
      ],
      "tests/test_ext_autodoc_configs.py": [
        "test_autodoc_typehints_description_and_type_aliases"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-14096",
    "file_function": {
      "astropy/coordinates/tests/test_sky_coord.py": [
        "test_extra_attributes",
        "test_apply_space_motion"
      ],
      "astropy/coordinates/tests/test_sky_coord_velocities.py": [
        "test_accessors"
      ]
    }
  },
  {
    "instance_id": "django__django-13109",
    "file_function": {
      "tests/validation/tests.py": [
        "test_limited_FK_raises_error",
        "test_wrong_FK_value_raises_error"
      ]
    }
  },
  {
    "instance_id": "django__django-14580",
    "file_function": {
      "tests/migrations/test_writer.py": [
        "test_migration_path",
        "test_custom_operation",
        "test_register_serializer"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-3095",
    "file_function": {
      "xarray/tests/test_variable.py": [
        "test_equals_and_identical",
        "test_equals_all_dtypes"
      ],
      "xarray/tests/test_dataset.py": [
        "test_copy_with_data",
        "test_copy",
        "test_copy_with_data_errors"
      ],
      "xarray/tests/test_backends.py": [
        "test_dask",
        "test_cmp_local_file",
        "test_serialization"
      ],
      "xarray/tests/test_dataarray.py": [
        "test_copy_with_data"
      ]
    }
  },
  {
    "instance_id": "django__django-14315",
    "file_function": {
      "tests/dbshell/test_postgresql.py": [
        "test_crash_password_does_not_leak",
        "test_ssl_certificate",
        "test_passfile"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-24627",
    "file_function": {
      "lib/matplotlib/tests/test_axes.py": [
        "test_subclass_clear_cla"
      ]
    }
  },
  {
    "instance_id": "django__django-15315",
    "file_function": {
      "tests/model_fields/tests.py": [
        "test_overriding_inherited_FIELD_display"
      ],
      "tests/queryset_pickle/tests.py": [
        "test_pickle_prefetch_queryset_not_evaluated",
        "test_pickle_prefetch_related_idempotence",
        "test_order_by_model_with_abstract_inheritance_and_meta_ordering"
      ]
    }
  },
  {
    "instance_id": "django__django-13158",
    "file_function": {
      "tests/model_forms/tests.py": [
        "test_model_multiple_choice_required_false",
        "test_model_multiple_choice_show_hidden_initial",
        "test_initial_values",
        "test_show_hidden_initial_changed_queries_efficiently",
        "test_m2m_editing",
        "test_model_multiple_choice_field"
      ],
      "tests/model_forms/test_modelchoicefield.py": [
        "test_disabled_modelmultiplechoicefield_has_changed"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-13439",
    "file_function": {
      "sklearn/tests/test_pipeline.py": [
        "test_pipeline_slice",
        "test_pipeline_with_cache_attribute",
        "test_pipeline_methods_preprocessing_svm",
        "test_fit_predict_with_intermediate_fit_params",
        "test_classes_property",
        "test_pipeline_transform",
        "test_pipeline_sample_weight_supported",
        "test_pipeline_memory",
        "test_pipeline_sample_weight_unsupported",
        "test_pipeline_init",
        "test_pipeline_index",
        "test_set_pipeline_step_passthrough"
      ],
      "sklearn/utils/tests/test_estimator_checks.py": [
        "test_check_estimator"
      ],
      "sklearn/model_selection/tests/test_search.py": [
        "test_grid_search_allows_nans"
      ],
      "sklearn/model_selection/tests/test_validation.py": [
        "test_cross_val_score_allow_nans"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-7590",
    "file_function": {
      "tests/test_domain_cpp.py": [
        "test_templates",
        "test_expressions",
        "test_build_domain_cpp_backslash_ok"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-19495",
    "file_function": {
      "sympy/sets/tests/test_conditionset.py": [
        "test_subs_CondSet",
        "test_subs_CondSet_tebr"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-3677",
    "file_function": {
      "xarray/tests/test_merge.py": [
        "test_merge",
        "test_merge_compat"
      ],
      "xarray/tests/test_dataset.py": [
        "test_constructor_pandas_single"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-14182",
    "file_function": {
      "astropy/io/ascii/tests/test_write.py": [
        "test_write_fill_values",
        "test_roundtrip_masked",
        "test_write_table"
      ],
      "astropy/io/ascii/tests/test_c_reader.py": [
        "test_embedded_newlines"
      ]
    }
  },
  {
    "instance_id": "django__django-15916",
    "file_function": {
      "tests/model_forms/tests.py": [
        "test_extra_field_modelform_factory",
        "test_no_model_class",
        "test_model_form_refuses_arbitrary_string",
        "test_invalid_meta_model",
        "test_inherit_after_custom_callback",
        "test_exclude_fields_with_string",
        "test_limit_fields_with_string",
        "test_missing_fields_attribute"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-15017",
    "file_function": {
      "sympy/tensor/array/tests/test_immutable_ndim_array.py": [
        "test_ndim_array_initiation"
      ],
      "sympy/tensor/array/tests/test_mutable_ndim_array.py": [
        "test_slices"
      ],
      "sympy/tensor/tests/test_tensor.py": [
        "test_valued_tensor_contraction"
      ]
    }
  },
  {
    "instance_id": "django__django-13346",
    "file_function": {
      "tests/model_fields/test_jsonfield.py": [
        "test_deep_lookup_objs",
        "test_none_key",
        "test_isnull_key_or_none",
        "test_deep_lookup_mixed",
        "test_none_key_and_exact_lookup",
        "test_deep_lookup_array",
        "test_key_transform_expression",
        "test_key_transform_raw_expression",
        "test_nested_key_transform_expression"
      ]
    }
  },
  {
    "instance_id": "django__django-16950",
    "file_function": {
      "tests/admin_views/tests/AdminViewBasicTest/test_disallowed_filtering.py": [
        "test_disallowed_filtering"
      ],
      "tests/admin_views/tests/AdminViewBasicTest/test_add_with_GET_args.py": [
        "test_add_with_GET_args"
      ],
      "tests/admin_views/tests.py": [
        "test_save_as_new_with_validation_errors",
        "test_unicode_delete",
        "test_delete_view_with_no_default_permissions",
        "test_user_fk_delete_popup",
        "test_basic_edit_GET_string_PK",
        "test_edit_save_as_delete_inline",
        "test_change_view_save_as_new",
        "test_change_view",
        "test_delete_view",
        "test_popup_add_POST",
        "test_limit_choices_to_isnull_false",
        "test_popup_dismiss_related",
        "test_user_fk_change_popup",
        "test_limit_choices_to",
        "test_incorrect_lookup_parameters",
        "test_callable",
        "test_with_fk_to_field",
        "test_limit_choices_to_isnull_true",
        "test_allows_attributeerror_to_bubble_up",
        "test_add_view_form_and_formsets_run_validation",
        "test_list_editable_pagination",
        "test_change_view_with_view_and_add_inlines",
        "test_history_view",
        "test_check",
        "test_change_view_with_view_and_delete_inlines"
      ],
      "tests/admin_inlines/tests/TestInlinePermissions/test_inline_change_m2m_change_perm.py": [
        "test_inline_change_m2m_change_perm"
      ],
      "tests/admin_registration/tests/TestRegistration/test_prevent_double_registration.py": [
        "test_prevent_double_registration"
      ],
      "tests/admin_views/tests/AdminViewPermissionsTest/test_delete_view_nonexistent_obj.py": [
        "test_delete_view_nonexistent_obj"
      ],
      "tests/admin_views/test_actions.py": [
        "test_custom_function_action_with_redirect",
        "test_popup_template_response_on_add",
        "test_model_without_action",
        "test_model_admin_no_delete_permission",
        "test_user_message_on_none_selected"
      ],
      "tests/admin_views/tests/AdminViewOnSiteTests/test_custom_admin_site.py": [
        "test_custom_admin_site"
      ],
      "tests/admin_inlines/tests/TestInline/test_inline_editable_pk.py": [
        "test_inline_editable_pk"
      ],
      "tests/admin_views/test_multidb/MultiDatabaseTests/test_delete_view.py": [
        "test_delete_view"
      ],
      "tests/admin_views/tests/AdminCustomTemplateTests/test_custom_model_admin_templates.py": [
        "test_custom_model_admin_templates"
      ],
      "tests/admin_views/tests/AdminUserMessageTest/test_message_debug.py": [
        "test_message_debug"
      ],
      "tests/admin_inlines/tests/TestVerboseNameInlineForms/test_verbose_name_inline.py": [
        "test_verbose_name_inline"
      ],
      "tests/admin_views/tests/AdminSearchTest/test_pluggable_search.py": [
        "test_pluggable_search"
      ],
      "tests/admin_views/test_actions/AdminActionsTest/test_model_admin_default_delete_action.py": [
        "test_model_admin_default_delete_action"
      ],
      "tests/admin_inlines/tests/TestInline/test_custom_form_tabular_inline_extra_field_label.py": [
        "test_custom_form_tabular_inline_extra_field_label"
      ],
      "tests/admin_views/tests/AdminViewBasicTest/test_disallowed_to_field.py": [
        "test_disallowed_to_field"
      ],
      "tests/admin_inlines/tests.py": [
        "test_many_to_many_inlines",
        "test_stacked_inline_hidden_field_with_view_only_permissions",
        "test_callable_lookup"
      ],
      "tests/admin_views/tests/AdminViewDeletedObjectsTest/test_protected.py": [
        "test_protected"
      ],
      "tests/admin_views/tests/AdminKeepChangeListFiltersTests/test_add_view.py": [
        "test_add_view"
      ],
      "tests/admin_views/tests/AdminViewPermissionsTest/test_history_view_bad_url.py": [
        "test_history_view_bad_url"
      ],
      "tests/admin_inlines/tests/TestInlinePermissions/test_inline_add_fk_add_perm.py": [
        "test_inline_add_fk_add_perm"
      ],
      "tests/admin_views/tests/AdminViewBasicTest/test_sortable_by_no_column.py": [
        "test_sortable_by_no_column"
      ],
      "tests/admin_views/tests/AdminSearchTest/test_exact_matches.py": [
        "test_exact_matches"
      ],
      "tests/admin_inlines/tests/TestInlineProtectedOnDelete/test_deleting_inline_with_protected_delete_does_not_validate.py": [
        "test_deleting_inline_with_protected_delete_does_not_validate"
      ],
      "tests/admin_views/tests/AdminViewListEditable/test_post_submission.py": [
        "test_post_submission"
      ],
      "tests/admin_inlines/tests/TestInlineMedia/test_inline_media_only_inline.py": [
        "test_inline_media_only_inline"
      ],
      "tests/admin_views/tests/AdminSearchTest/test_search_with_spaces.py": [
        "test_search_with_spaces"
      ],
      "tests/admin_views/tests/AdminViewListEditable/test_list_editable_action_submit.py": [
        "test_list_editable_action_submit"
      ],
      "tests/admin_views/tests/AdminCustomQuerysetTest/test_change_view.py": [
        "test_change_view"
      ],
      "tests/admin_inlines/tests/TestInline/test_inline_primary.py": [
        "test_inline_primary"
      ],
      "tests/admin_views/test_actions/AdminActionsTest/test_popup_template_response_on_change.py": [
        "test_popup_template_response_on_change"
      ],
      "tests/admin_views/tests/AdminKeepChangeListFiltersTests/test_change_view.py": [
        "test_change_view"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-25973",
    "file_function": {
      "sklearn/model_selection/tests/test_validation.py": [
        "test_permutation_test_score_allow_nans",
        "test_fit_and_score_failing",
        "test_cross_val_predict_with_method_multilabel_rf_rare_class",
        "test_cross_val_score_predict_groups",
        "test_learning_curve",
        "test_cross_val_predict_sparse_prediction",
        "test_cross_val_predict",
        "test_cross_val_predict_with_method_multilabel_rf",
        "test_permutation_score",
        "test_validation_curve",
        "test_validation_curve_clone_estimator",
        "test_learning_curve_with_shuffle",
        "test_learning_curve_verbose",
        "test_cross_validate_return_indices",
        "test_permutation_test_score_fit_params",
        "test_learning_curve_incremental_learning_not_possible",
        "test_cross_validate",
        "test_validation_curve_cv_splits_consistency"
      ],
      "sklearn/tests/test_common.py": [
        "test_estimators",
        "test_global_output_transform_pandas",
        "test_check_n_features_in_after_fitting"
      ],
      "sklearn/model_selection/tests/test_split.py": [
        "test_cv_iterable_wrapper",
        "test_leave_one_p_group_out",
        "test_leave_one_p_group_out_error_on_fewer_number_of_groups"
      ]
    }
  },
  {
    "instance_id": "django__django-16256",
    "file_function": {
      "tests/many_to_one/tests.py": [
        "test_set_after_prefetch",
        "test_set",
        "test_relation_unsaved",
        "test_add_remove_set_by_pk_raises",
        "test_add",
        "test_clear_after_prefetch",
        "test_add_then_remove_after_prefetch",
        "test_assign"
      ],
      "tests/m2m_signals/tests.py": [
        "test_m2m_relations_signals_clearing_removing",
        "test_m2m_relations_with_self_add_friends",
        "test_m2m_relations_signals_alternative_ways",
        "test_m2m_relations_signals_remove_relation"
      ],
      "tests/get_or_create/tests.py": [
        "test_get_or_create_on_related_manager"
      ]
    }
  },
  {
    "instance_id": "django__django-13741",
    "file_function": {
      "tests/auth_tests/test_forms.py": [
        "test_readonly_field_has_changed",
        "test_bug_19349_bound_password_field"
      ],
      "tests/auth_tests/test_views.py": [
        "test_user_change_email",
        "test_user_not_change"
      ],
      "tests/admin_views/tests.py": [
        "test_change_view"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-14539",
    "file_function": {
      "astropy/io/fits/tests/test_diff.py": [
        "test_partially_identical_files1",
        "test_partially_identical_files3",
        "test_rawdatadiff_bytesdiff",
        "test_fitsdiff_hdu_name",
        "test_identical_files_basic",
        "test_ignore_hdus",
        "test_different_table_data",
        "test_different_table_field_counts",
        "test_ignore_table_fields",
        "test_diff_empty_tables",
        "test_rawdatadiff_dimsdiff",
        "test_rawdatadiff_nodiff"
      ],
      "astropy/io/fits/tests/test_convenience.py": [
        "test_printdiff"
      ]
    }
  },
  {
    "instance_id": "django__django-16315",
    "file_function": {
      "tests/bulk_create/tests.py": [
        "test_multi_table_inheritance_unsupported",
        "test_update_conflicts_two_fields_unique_fields_both",
        "test_ignore_conflicts_ignore",
        "test_invalid_batch_size_exception",
        "test_update_conflicts_unique_fields_pk",
        "test_explicit_batch_size",
        "test_update_conflicts_invalid_unique_fields",
        "test_update_conflicts_pk_in_update_fields",
        "test_update_conflicts_no_update_fields",
        "test_update_conflicts_unique_fields_required",
        "test_ignore_update_conflicts_exclusive",
        "test_update_conflicts_invalid_update_fields",
        "test_simple"
      ],
      "tests/model_inheritance/tests.py": [
        "test_custompk_m2m"
      ],
      "tests/queries/tests.py": [
        "test_ticket_22429"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-20916",
    "file_function": {
      "sympy/printing/pretty/tests/test_pretty.py": [
        "test_print_builtin_set",
        "test_Tr",
        "test_pretty_SymmetricDifference",
        "test_MatrixElement_printing",
        "test_pretty_UniversalSet",
        "test_imaginary_unit",
        "test_issue_7179",
        "test_issue_12675",
        "test_pretty_FourierSeries",
        "test_pretty_derivatives",
        "test_beta",
        "test_pretty_seq",
        "test_pretty_sets",
        "test_issue_15560",
        "test_issue_17857",
        "test_QuotientRing",
        "test_hadamard_power",
        "test_pretty_limits",
        "test_tensor_TensorProduct",
        "test_MatrixExpressions",
        "test_pretty_sequences",
        "test_issue_15583",
        "test_pretty_ComplexRootOf",
        "test_pretty_UnevaluatedExpr",
        "test_diffgeom_print_WedgeProduct",
        "test_pretty_piecewise",
        "test_GroebnerBasis",
        "test_pretty_print_tensor_partial_deriv",
        "test_pretty_misc_functions",
        "test_issue_18272",
        "test_pretty_Contains",
        "test_pretty_ComplexRegion",
        "test_pretty_KroneckerDelta",
        "test_issue_17616",
        "test_negative_fractions",
        "test_pretty_Feedback",
        "test_PrettyPoly",
        "test_pretty_primenu",
        "test_pretty_ConditionSet",
        "test_print_lerchphi",
        "test_deltas",
        "test_pretty_order",
        "test_pretty_Permutation",
        "test_issue_9877",
        "test_pretty_ndim_arrays",
        "test_elliptic_functions",
        "test_gammas",
        "test_pretty_Mod",
        "test_Homomorphism",
        "test_pretty_integrals",
        "test_pretty_FormalPowerSeries",
        "test_SingularityFunction",
        "test_pretty_sqrt",
        "test_expint",
        "test_matrixSymbolBold",
        "test_meijerg",
        "test_diffgeom",
        "test_pretty_geometry",
        "test_MatrixSlice",
        "test_pretty_sum",
        "test_hyper",
        "test_pretty_RootSum",
        "test_Assignment",
        "test_pretty_Domain",
        "test_units",
        "test_pretty_print_tensor_expr",
        "test_RandomDomain",
        "test_pretty_Subs",
        "test_GoldenRatio",
        "test_pretty_Boolean",
        "test_str_special_matrices",
        "test_Adjoint",
        "test_ProductSet_exponent",
        "test_pretty_Cycle",
        "test_degree_printing",
        "test_pretty_SetExpr",
        "test_issue_7927",
        "test_pretty_ITE",
        "test_pretty_dotproduct",
        "test_pretty_matrix",
        "test_pretty_functions",
        "test_categories",
        "test_vector_expr_pretty_printing",
        "test_pretty_special_functions",
        "test_pretty_ImageSet",
        "test_pretty_basic",
        "test_issue_6359",
        "test_pretty_primeomega"
      ]
    }
  },
  {
    "instance_id": "django__django-15572",
    "file_function": {
      "tests/template_tests/test_autoreloader.py": [
        "test_non_template_changed",
        "test_template_changed",
        "test_non_template_changed_in_template_directory"
      ]
    }
  },
  {
    "instance_id": "django__django-11206",
    "file_function": {
      "tests/utils_tests/test_numberformat.py": [
        "test_large_number",
        "test_format_number",
        "test_decimal_numbers"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-8265",
    "file_function": {
      "tests/test_ext_autodoc.py": [
        "test_overload",
        "test_singledispatchmethod_automethod",
        "test_autodoc_imported_members",
        "test_autodoc_inherited_members_None",
        "test_singledispatch",
        "test_format_signature",
        "test_singledispatchmethod"
      ],
      "tests/test_ext_autodoc_autofunction.py": [
        "test_singledispatch"
      ],
      "tests/test_ext_autodoc_configs.py": [
        "test_autodoc_typehints_none"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-15599",
    "file_function": {
      "sympy/core/tests/test_arit.py": [
        "test_Mod"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-8721",
    "file_function": {
      "tests/test_ext_viewcode.py": [
        "test_local_source_files"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-11618",
    "file_function": {
      "sympy/geometry/tests/test_line.py": [
        "test_line3d"
      ],
      "sympy/geometry/tests/test_point.py": [
        "test_point3D"
      ]
    }
  },
  {
    "instance_id": "django__django-12858",
    "file_function": {
      "tests/check_framework/test_model_checks.py": [
        "test_collision_across_apps",
        "test_no_collision_across_apps_interpolation",
        "test_no_collision_for_proxy_models"
      ],
      "tests/one_to_one/tests.py": [
        "test_create_models_m2m",
        "test_foreign_key",
        "test_related_object"
      ],
      "tests/contenttypes_tests/test_fields.py": [
        "test_value_to_string",
        "test_str"
      ],
      "tests/ordering/tests.py": [
        "test_related_ordering_duplicate_table_reference",
        "test_order_by_ptr_field_with_default_ordering_by_expression",
        "test_order_by_constant_value"
      ],
      "tests/model_fields/test_foreignkey.py": [
        "test_non_local_to_field",
        "test_warning_when_unique_true_on_fk",
        "test_empty_string_fk",
        "test_to_python",
        "test_recursive_fks_get_col"
      ],
      "tests/constraints/tests.py": [
        "test_model_validation"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-10051",
    "file_function": {
      "testing/logging/test_fixture.py": [
        "test_clear",
        "test_caplog_captures_for_all_stages"
      ]
    }
  },
  {
    "instance_id": "django__django-11400",
    "file_function": {
      "tests/admin_filters/tests.py": [
        "test_relatedonlyfieldlistfilter_manytomany",
        "test_relatedonlyfieldlistfilter_foreignkey",
        "test_relatedonlyfieldlistfilter_underscorelookup_foreignkey"
      ],
      "tests/admin_views/tests.py": [
        "test_relation_spanning_filters"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-3305",
    "file_function": {
      "xarray/tests/test_dataarray.py": [
        "test_quantile"
      ],
      "xarray/tests/test_dataset.py": [
        "test_quantile"
      ],
      "xarray/tests/test_groupby.py": [
        "test_da_groupby_quantile"
      ]
    }
  },
  {
    "instance_id": "django__django-16938",
    "file_function": {
      "tests/select_related/tests.py": [
        "test_certain_fields"
      ],
      "tests/select_related/tests/SelectRelatedValidationTests/test_invalid_field.py": [
        "test_invalid_field"
      ],
      "tests/select_related/tests/SelectRelatedTests/test_reverse_relation_caching.py": [
        "test_reverse_relation_caching"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-20488",
    "file_function": {
      "lib/matplotlib/tests/test_image.py": [
        "test_empty_imshow",
        "test_format_cursor_data",
        "test_jpeg_alpha",
        "test_respects_bbox",
        "test_composite",
        "test_imshow_float128",
        "test_mask_image_all",
        "test_imsave_fspath",
        "test_image_preserve_size2",
        "test_full_invalid"
      ],
      "lib/matplotlib/tests/test_axes.py": [
        "test_hexbin_log"
      ],
      "lib/matplotlib/tests/test_colors.py": [
        "test_ndarray_subclass_norm"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-25931",
    "file_function": {
      "sklearn/ensemble/tests/test_iforest.py": [
        "test_iforest",
        "test_iforest_error",
        "test_iforest_performance",
        "test_iforest_warm_start"
      ],
      "sklearn/tests/test_common.py": [
        "test_estimators"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-25287",
    "file_function": {
      "lib/matplotlib/tests/test_axes.py": [
        "test_reset_grid",
        "test_secondary_minorloc",
        "test_secondary_formatter",
        "test_log_scales",
        "test_title_above_offset"
      ],
      "lib/matplotlib/tests/test_ticker.py": [
        "test_offset_value"
      ],
      "lib/matplotlib/tests/test_figure.py": [
        "test_align_labels_stray_axes"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-10673",
    "file_function": {
      "tests/test_build_html.py": [
        "test_html_math_renderer_is_duplicated",
        "test_html_math_renderer_is_duplicated2",
        "test_html_style",
        "test_html_assets",
        "test_html_local_logo",
        "test_theme_options_with_override",
        "test_html_math_renderer_is_chosen",
        "test_html_math_renderer_is_imgmath",
        "test_html_baseurl",
        "test_assets_order",
        "test_html_copy_source",
        "test_html4_output",
        "test_javscript_loading_method",
        "test_html_scaled_image_link"
      ],
      "tests/test_build.py": [
        "test_numbered_circular_toctree",
        "test_build_all"
      ],
      "tests/test_environment.py": [
        "test_config_status"
      ],
      "tests/test_toctree.py": [
        "test_numbered_toctree"
      ],
      "tests/test_theming.py": [
        "test_dark_style"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-20590",
    "file_function": {
      "sympy/core/tests/test_assumptions.py": [
        "test_sanitize_assumptions"
      ],
      "sympy/core/tests/test_basic.py": [
        "test_sorted_args",
        "test_doit",
        "test_call",
        "test_matches_basic",
        "test_as_dummy",
        "test_subs",
        "test_replace_exceptions",
        "test_rewrite"
      ],
      "sympy/core/tests/test_args.py": [
        "test_sympy__stats__rv__RandomIndexedSymbol",
        "test_sympy__series__fourier__FourierSeries",
        "test_sympy__series__fourier__FiniteFourierSeries",
        "test_sympy__series__formal__FormalPowerSeriesCompose",
        "test_sympy__tensor__array__sparse_ndim_array__ImmutableSparseNDimArray"
      ],
      "sympy/core/tests/test_expr.py": [
        "test_equals",
        "test_leadterm",
        "test_find",
        "test_replace",
        "test_is_constant"
      ],
      "sympy/core/tests/test_constructor_postprocessor.py": [
        "test_constructor_postprocessors2",
        "test_constructor_postprocessors1"
      ],
      "sympy/core/tests/test_subs.py": [
        "test_subs_dict1",
        "test_dict_set",
        "test_issue_2877",
        "test_issue_8886",
        "test_issue_15234"
      ],
      "sympy/core/tests/test_numbers.py": [
        "test_tribonacci_constant_rewrite_as_sqrt",
        "test_golden_ratio_rewrite_as_sqrt"
      ],
      "sympy/core/tests/test_match.py": [
        "test_match_bound",
        "test_derivative2"
      ],
      "sympy/core/tests/test_symbol.py": [
        "test_Dummy_force_dummy_index",
        "test_unicode"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-26342",
    "file_function": {
      "lib/matplotlib/tests/test_contour.py": [
        "test_contourf_log_extension",
        "test_given_colors_levels_and_extends"
      ],
      "lib/matplotlib/tests/test_axes.py": [
        "test_contour_colorbar"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-13496",
    "file_function": {
      "sklearn/ensemble/tests/test_iforest.py": [
        "test_iforest_chunks_works2",
        "test_iforest_error",
        "test_iforest_chunks_works1",
        "test_iforest_works",
        "test_iforest_sparse",
        "test_iforest_subsampled_features"
      ]
    }
  },
  {
    "instance_id": "django__django-13786",
    "file_function": {
      "tests/migrations/test_operations.py": [
        "test_alter_model_options",
        "test_alter_model_options_emptying"
      ],
      "tests/migrations/test_optimizer.py": [
        "test_create_alter_model_options",
        "test_create_alter_owrt_delete_model",
        "test_create_alter_unique_field",
        "test_optimize_through_fields",
        "test_optimize_elidable_operation",
        "test_create_alter_index_field",
        "test_create_alter_owrt_field"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-9461",
    "file_function": {
      "tests/test_ext_autodoc.py": [
        "test_format_signature",
        "test_autodoc_member_order",
        "test_autodoc_cached_property",
        "test_singledispatchmethod",
        "test_canonical",
        "test_autodoc_inner_class",
        "test_final",
        "test_autodoc_inherited_members_Base",
        "test_autodoc_ignore_module_all",
        "test_imported_partialfunction_should_not_shown_without_imported_members",
        "test_autodoc_imported_members",
        "test_autodoc_warnings",
        "test_autodoc_inherited_members_None",
        "test_abstractmethods",
        "test_overload",
        "test_autodoc_noindex"
      ],
      "tests/test_ext_autodoc_autoclass.py": [
        "test_show_inheritance_for_subclass_of_generic_type",
        "test_autodoc_process_bases",
        "test_class_alias_having_doccomment",
        "test_class_doc_from_init",
        "test_inherited_instance_variable"
      ],
      "tests/test_ext_autodoc_private_members.py": [
        "test_private_field_and_private_members",
        "test_private_members"
      ],
      "tests/test_ext_autodoc_configs.py": [
        "test_autodoc_class_signature_separated_init",
        "test_autoclass_content_and_docstring_signature_both",
        "test_autodoc_default_options_with_values",
        "test_autodoc_typehints_description_with_documented_init",
        "test_autodoc_typehints_signature",
        "test_autodoc_typehints_none_for_overload"
      ],
      "tests/test_ext_autodoc_automodule.py": [
        "test_subclass_of_mocked_object"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-13579",
    "file_function": {
      "astropy/wcs/wcsapi/tests/test_high_level_wcs_wrapper.py": [
        "test_wrapper"
      ]
    }
  },
  {
    "instance_id": "django__django-11728",
    "file_function": {
      "tests/check_framework/test_urls.py": [
        "test_contains_re_named_group",
        "test_bad_handlers_invalid_path",
        "test_include_with_dollar",
        "test_bad_handlers",
        "test_name_with_colon",
        "test_no_warnings",
        "test_ending_with_dollar",
        "test_no_warnings_i18n"
      ],
      "tests/resolve_url/tests.py": [
        "test_lazy_reverse",
        "test_url_path",
        "test_domain",
        "test_non_view_callable_raises_no_reverse_match"
      ],
      "tests/urlpatterns/tests.py": [
        "test_path_lookup_with_double_inclusion",
        "test_two_variable_at_start_of_path_pattern",
        "test_matching_urls",
        "test_path_lookup_without_parameters",
        "test_resolve_value_error_means_no_match",
        "test_converter_reverse_with_second_layer_instance_namespace"
      ]
    }
  },
  {
    "instance_id": "django__django-16877",
    "file_function": {
      "tests/template_tests/filter_tests/test_join/FunctionTests/test_autoescape_off.py": [
        "test_autoescape_off"
      ],
      "tests/template_tests/filter_tests/test_join/JoinTests/test_join02.py": [
        "test_join02"
      ],
      "tests/template_tests/filter_tests/test_join/FunctionTests/test_autoescape.py": [
        "test_autoescape"
      ],
      "tests/template_tests/filter_tests/test_join/FunctionTests/test_noniterable_arg.py": [
        "test_noniterable_arg"
      ],
      "tests/template_tests/filter_tests/test_join/FunctionTests/test_noniterable_arg_autoescape_off.py": [
        "test_noniterable_arg_autoescape_off"
      ]
    }
  },
  {
    "instance_id": "django__django-15863",
    "file_function": {
      "tests/template_tests/filter_tests/test_floatformat.py": [
        "test_inputs",
        "test_force_grouping",
        "test_infinity",
        "test_unlocalize"
      ]
    }
  },
  {
    "instance_id": "django__django-12713",
    "file_function": {
      "tests/admin_views/tests.py": [
        "test_save_continue_editing_button",
        "test_user_permission_performance",
        "test_change_view"
      ],
      "tests/admin_widgets/tests.py": [
        "test_nonexistent_target_id",
        "test_invalid_target_id",
        "test_radio_fields_ForeignKey"
      ],
      "tests/modeladmin/tests.py": [
        "test_get_autocomplete_fields",
        "test_foreign_key_as_radio_field"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-6599",
    "file_function": {
      "xarray/tests/test_missing.py": [
        "test_interpolate_na_max_gap_time_specifier",
        "test_interpolate_na_max_gap_errors"
      ],
      "xarray/tests/test_duck_array_ops.py": [
        "test_cftime_datetime_mean",
        "test_pd_timedelta_to_float"
      ],
      "xarray/tests/test_computation.py": [
        "test_where"
      ],
      "xarray/tests/test_units.py": [
        "test_where_dataarray"
      ]
    }
  },
  {
    "instance_id": "django__django-11451",
    "file_function": {
      "tests/auth_tests/test_forms.py": [
        "test_password_whitespace_not_stripped",
        "test_invalid_username"
      ],
      "tests/auth_tests/test_auth_backends.py": [
        "test_authenticate"
      ]
    }
  },
  {
    "instance_id": "django__django-15278",
    "file_function": {
      "tests/migrations/test_operations.py": [
        "test_repoint_field_m2m"
      ],
      "tests/schema/tests.py": [
        "test_alter_not_unique_field_to_primary_key"
      ],
      "tests/migrations/test_executor.py": [
        "test_migrate_backward_to_squashed_migration"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-8707",
    "file_function": {
      "astropy/io/fits/tests/test_image.py": [
        "test_bzero_mishandled_info"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-23534",
    "file_function": {
      "sympy/core/tests/test_symbol.py": [
        "test_symbols"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-11578",
    "file_function": {
      "sklearn/linear_model/tests/test_logistic.py": [
        "test_error",
        "test_logistic_regression_sample_weights",
        "test_logistic_cv_mock_scorer",
        "test_logistic_regressioncv_class_weights",
        "test_logistic_cv_score_does_not_warn_by_default",
        "test_ovr_multinomial_iris",
        "test_logreg_predict_proba_multinomial",
        "test_warm_start_converge_LR",
        "test_lr_liblinear_warning",
        "test_n_iter"
      ],
      "sklearn/model_selection/tests/test_validation.py": [
        "test_cross_val_predict_predict_log_proba_shape",
        "test_gridsearchcv_cross_val_predict_with_method"
      ],
      "sklearn/linear_model/tests/test_sag.py": [
        "test_classifier_single_class"
      ]
    }
  },
  {
    "instance_id": "django__django-15467",
    "file_function": {
      "tests/modeladmin/tests.py": [
        "test_foreign_key_as_radio_field",
        "test_get_autocomplete_fields"
      ],
      "tests/admin_views/tests.py": [
        "test_change_view_subtitle_per_object",
        "test_change_list_column_field_classes"
      ]
    }
  },
  {
    "instance_id": "django__django-11740",
    "file_function": {
      "tests/migrations/test_autodetector.py": [
        "test_unmanaged_to_managed",
        "test_circular_dependency_swappable",
        "test_create_with_through_model",
        "test_managed_to_unmanaged",
        "test_unmanaged_delete",
        "test_proxy_to_mti_with_fk_to_proxy_proxy",
        "test_proxy_to_mti_with_fk_to_proxy",
        "test_swappable_circular_multi_mti",
        "test_circular_dependency_swappable2"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-9367",
    "file_function": {
      "tests/test_pycode_ast.py": [
        "test_unparse"
      ]
    }
  },
  {
    "instance_id": "django__django-14089",
    "file_function": {
      "tests/utils_tests/test_datastructures.py": [
        "test_discard",
        "test_remove",
        "test_bool",
        "test_contains"
      ]
    }
  },
  {
    "instance_id": "django__django-16032",
    "file_function": {
      "tests/aggregation/tests.py": [
        "test_aggregation_nested_subquery_outerref"
      ],
      "tests/annotations/tests.py": [
        "test_annotation_filter_with_subquery",
        "test_annotation_exists_aggregate_values_chaining",
        "test_alias_after_annotation",
        "test_order_by_alias"
      ],
      "tests/expressions/tests.py": [
        "test_nested_subquery"
      ],
      "tests/queries/tests.py": [
        "test_exclude_nullable_fields",
        "test_tickets_1878_2939",
        "test_ticket7096",
        "test_ticket10432",
        "test_error_raised_on_filter_with_dictionary",
        "test_tickets_5324_6704",
        "test_ticket_23605"
      ],
      "tests/queries/test_query.py": [
        "test_foreign_key",
        "test_filter_non_conditional"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-14369",
    "file_function": {
      "astropy/io/ascii/tests/test_cds.py": [
        "test_write_coord_cols",
        "test_write_mixin_and_broken_cols",
        "test_write_byte_by_byte_units",
        "test_write_byte_by_byte_wrapping",
        "test_write_empty_table",
        "test_roundtrip_mrt_table",
        "test_write_extra_skycoord_cols"
      ],
      "astropy/io/ascii/tests/test_read.py": [
        "test_read_all_files",
        "test_guess_all_files",
        "test_read_with_encoding"
      ],
      "astropy/io/ascii/tests/test_write.py": [
        "test_write_format",
        "test_roundtrip_masked"
      ],
      "astropy/io/ascii/tests/test_cds_header_from_readme.py": [
        "test_header_from_readme"
      ]
    }
  },
  {
    "instance_id": "django__django-13212",
    "file_function": {
      "tests/validators/tests.py": [
        "test_file_extension_equality",
        "test_max_length_validator_message",
        "test_basic_equality",
        "test_whitelist",
        "test_email_equality",
        "test_validators",
        "test_domain_whitelist",
        "test_decimal_equality",
        "test_regex_validator_flags",
        "test_prohibit_null_characters_validator_equality",
        "test_regex_equality"
      ]
    }
  },
  {
    "instance_id": "django__django-11299",
    "file_function": {
      "tests/schema/tests.py": [
        "test_remove_field_check_does_not_remove_meta_constraints"
      ],
      "tests/migrations/test_operations.py": [
        "test_add_constraint",
        "test_create_model_with_constraint"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-13372",
    "file_function": {
      "sympy/core/tests/test_evalf.py": [
        "test_evalf_bugs",
        "test_evalf_relational",
        "test_evalf_integer_parts",
        "test_subs",
        "test_evalf_trig_zero_detection"
      ],
      "sympy/core/tests/test_arit.py": [
        "test_pow_im"
      ],
      "sympy/core/tests/test_eval_power.py": [
        "test_issue_7638"
      ]
    }
  },
  {
    "instance_id": "django__django-15973",
    "file_function": {
      "tests/m2m_through/tests.py": [
        "test_through_fields_self_referential",
        "test_retrieval"
      ],
      "tests/model_fields/test_manytomanyfield.py": [
        "test_abstract_model_app_relative_foreign_key",
        "test_through_db_table_mutually_exclusive",
        "test_value_from_object_instance_with_pk",
        "test_invalid_to_parameter"
      ],
      "tests/m2m_regress/tests.py": [
        "test_add_m2m_with_base_class"
      ]
    }
  },
  {
    "instance_id": "django__django-11477",
    "file_function": {
      "tests/urlpatterns_reverse/tests.py": [
        "test_no_illegal_imports",
        "test_urlpattern_reverse",
        "test_resolver_reverse",
        "test_resolver_reverse_conflict",
        "test_mixing_args_and_kwargs",
        "test_reverse_inner_in_response_middleware"
      ],
      "tests/resolve_url/tests.py": [
        "test_non_view_callable_raises_no_reverse_match"
      ]
    }
  },
  {
    "instance_id": "django__django-11265",
    "file_function": {
      "tests/queries/tests.py": [
        "test_lookup_constraint_fielderror",
        "test_field_error_values_list",
        "test_ticket10432",
        "test_slicing_cannot_filter_queryset_once_sliced",
        "test_exclude_reverse_fk_field_ref",
        "test_ticket_21787",
        "test_exclude_many_to_many",
        "test_invalid_qs_list",
        "test_error_raised_on_filter_with_dictionary",
        "test_ticket_23605"
      ],
      "tests/expressions/tests.py": [
        "test_month_aggregation",
        "test_transform_in_values",
        "test_incorrect_field_in_F_expression",
        "test_update_inherited_field_value"
      ],
      "tests/filtered_relation/tests.py": [
        "test_aggregate"
      ],
      "tests/queries/test_query.py": [
        "test_foreign_key"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-25332",
    "file_function": {
      "lib/matplotlib/tests/test_pickle.py": [
        "test_shared"
      ],
      "lib/matplotlib/testing/decorators.py": [
        "test_pickle_load_from_subprocess"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-9288",
    "file_function": {
      "sklearn/cluster/tests/test_k_means.py": [
        "test_k_means_plus_plus_init_not_precomputed",
        "test_score",
        "test_mb_kmeans_verbose",
        "test_float_precision",
        "test_kmeans_results",
        "test_k_means_function",
        "test_max_iter_error",
        "test_less_centers_than_unique_points",
        "test_k_means_precompute_distances_flag",
        "test_k_means_n_init",
        "test_k_means_random_init_not_precomputed",
        "test_k_means_plus_plus_init_2_jobs",
        "test_minibatch_tol",
        "test_minibatch_sensible_reassign_partial_fit",
        "test_unit_weights_vs_no_weights",
        "test_mini_batch_k_means_random_init_partial_fit",
        "test_predict",
        "test_k_means_copyx",
        "test_fit_transform",
        "test_minibatch_kmeans_partial_fit_int_data"
      ]
    }
  },
  {
    "instance_id": "django__django-16116",
    "file_function": {
      "tests/migrations/test_commands.py": [
        "test_makemigrations_migrations_modules_nonexistent_toplevel_package",
        "test_makemigrations_app_name_specified_as_label",
        "test_makemigrations_with_invalid_custom_name",
        "test_makemigrations_update",
        "test_makemigrations_inconsistent_history_db_failure",
        "test_makemigrations_continues_number_sequence_after_squash",
        "test_makemigrations_scriptable_merge",
        "test_makemigrations_empty_connections",
        "test_makemigrations_non_interactive_unique_callable_default_addition"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-5631",
    "file_function": {
      "testing/test_unittest.py": [
        "test_error_message_with_parametrized_fixtures",
        "test_class_method_containing_test_issue1558",
        "test_module_level_pytestmark"
      ],
      "testing/test_collection.py": [
        "test_collect_invalid_signature_message"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-4075",
    "file_function": {
      "xarray/tests/test_weighted.py": [
        "test_weighted_operations_different_shapes",
        "test_weighted_operations_3D",
        "test_weighted_mean_nan"
      ]
    }
  },
  {
    "instance_id": "django__django-15380",
    "file_function": {
      "tests/migrations/test_autodetector.py": [
        "test_rename_related_field_preserved_db_column",
        "test_unmanaged_to_managed",
        "test_managed_to_unmanaged",
        "test_unmanaged_delete",
        "test_proxy_to_mti_with_fk_to_proxy_proxy",
        "test_proxy_to_mti_with_fk_to_proxy"
      ]
    }
  },
  {
    "instance_id": "django__django-16899",
    "file_function": {
      "tests/admin_checks/tests/SystemChecksTestCase/test_readonly_lambda.py": [
        "test_readonly_lambda"
      ],
      "tests/admin_checks/tests/SystemChecksTestCase/test_nonexistent_field.py": [
        "test_nonexistent_field"
      ],
      "tests/admin_checks/tests/SystemChecksTestCase/test_readonly_on_method.py": [
        "test_readonly_on_method"
      ],
      "tests/admin_checks/tests/SystemChecksTestCase/test_readonly_on_modeladmin.py": [
        "test_readonly_on_modeladmin"
      ],
      "tests/admin_checks/tests/SystemChecksTestCase/test_readonly_fields_not_list_or_tuple.py": [
        "test_readonly_fields_not_list_or_tuple"
      ],
      "tests/admin_checks/tests/SystemChecksTestCase/test_list_editable_not_a_list_or_tuple.py": [
        "test_list_editable_not_a_list_or_tuple"
      ],
      "tests/admin_checks/tests/SystemChecksTestCase/test_check_fieldset_sublists_for_duplicates.py": [
        "test_check_fieldset_sublists_for_duplicates"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-18199",
    "file_function": {
      "sympy/ntheory/tests/test_residue.py": [
        "test_residue"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-19346",
    "file_function": {
      "sympy/printing/tests/test_repr.py": [
        "test_Symbol",
        "test_Function",
        "test_Integer"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-13757",
    "file_function": {
      "sympy/polys/tests/test_polytools.py": [
        "test_Poly_mul"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-14976",
    "file_function": {
      "sympy/utilities/tests/test_lambdify.py": [
        "test_own_module",
        "test_integral",
        "test_issue_2790",
        "test_dummification",
        "test_lambdify_imps",
        "test_mpmath_precision",
        "test_matrix",
        "test_lambdify_dummy_arg",
        "test_sym_integral"
      ]
    }
  },
  {
    "instance_id": "django__django-11433",
    "file_function": {
      "tests/model_forms/tests.py": [
        "test_image_field",
        "test_empty_fields_to_construct_instance",
        "test_default_filefield",
        "test_validates_with_replaced_field_not_specified",
        "test_validates_with_replaced_field_excluded"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-10844",
    "file_function": {
      "sklearn/metrics/tests/test_score_objects.py": [
        "test_supervised_cluster_scorers"
      ],
      "sklearn/metrics/cluster/tests/test_supervised.py": [
        "test_fowlkes_mallows_score_properties",
        "test_fowlkes_mallows_score"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-17630",
    "file_function": {
      "sympy/matrices/expressions/tests/test_blockmatrix.py": [
        "test_BlockMatrix",
        "test_BlockDiagMatrix",
        "test_bc_matmul"
      ]
    }
  },
  {
    "instance_id": "django__django-14170",
    "file_function": {
      "tests/db_functions/datetime/test_extract_trunc.py": [
        "test_extract_year_lessthan_lookup",
        "test_extract_year_greaterthan_lookup"
      ]
    }
  },
  {
    "instance_id": "django__django-13569",
    "file_function": {
      "tests/aggregation/tests.py": [
        "test_group_by_exists_annotation",
        "test_group_by_subquery_annotation"
      ],
      "tests/aggregation_regress/tests.py": [
        "test_having_group_by"
      ]
    }
  },
  {
    "instance_id": "django__django-11087",
    "file_function": {
      "tests/prefetch_related/tests.py": [
        "test_foreignkey_forward",
        "test_m2m"
      ],
      "tests/delete/tests.py": [
        "test_large_delete",
        "test_delete_with_keeping_parents",
        "test_do_nothing_qscount",
        "test_fast_delete_large_batch",
        "test_large_delete_related",
        "test_setnull_from_parent",
        "test_fast_delete_instance_set_pk_none"
      ],
      "tests/delete_regress/tests.py": [
        "test_19187_values",
        "test_generic_relation_cascade"
      ],
      "tests/save_delete_hooks/tests.py": [
        "test_basic"
      ],
      "tests/m2m_signals/tests.py": [
        "test_m2m_relations_signals_reverse_relation"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-16597",
    "file_function": {
      "sympy/core/tests/test_subs.py": [
        "test_subs_noncommutative"
      ],
      "sympy/core/tests/test_assumptions.py": [
        "test_sanitize_assumptions"
      ],
      "sympy/core/tests/test_args.py": [
        "test_sympy__series__fourier__FourierSeries"
      ],
      "sympy/core/tests/test_basic.py": [
        "test_as_dummy"
      ],
      "sympy/core/tests/test_symbol.py": [
        "test_unicode"
      ],
      "sympy/core/tests/test_function.py": [
        "test_nfloat",
        "test_issue_7231"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-7910",
    "file_function": {
      "tests/test_ext_autodoc_configs.py": [
        "test_autoclass_content_and_docstring_signature_init",
        "test_autodoc_typehints_none",
        "test_autodoc_default_options_with_values",
        "test_autoclass_content_init"
      ],
      "tests/test_ext_autodoc.py": [
        "test_autodoc_inherited_members_Base",
        "test_autodoc_imported_members",
        "test_autodoc_noindex",
        "test_autodoc_warnings",
        "test_final",
        "test_singledispatchmethod",
        "test_autodoc_ignore_module_all",
        "test_coroutine",
        "test_partialfunction",
        "test_autodoc_inner_class",
        "test_singledispatch",
        "test_format_signature",
        "test_abstractmethods",
        "test_overload",
        "test_autodoc_inherited_members_None",
        "test_autodoc_member_order"
      ],
      "tests/test_ext_autodoc_private_members.py": [
        "test_private_field_and_private_members"
      ],
      "tests/test_ext_autosummary.py": [
        "test_autosummary_generate",
        "test_autosummary_skip_member",
        "test_get_items_summary"
      ]
    }
  },
  {
    "instance_id": "django__django-13590",
    "file_function": {
      "tests/queries/tests.py": [
        "test_exclude_in",
        "test_subquery_exclude_outerref",
        "test_correct_lookup"
      ]
    }
  },
  {
    "instance_id": "django__django-16662",
    "file_function": {
      "tests/migrations/test_commands/MakeMigrationsTests/test_makemigrations_migrations_modules_nonexistent_toplevel_package.py": [
        "test_makemigrations_migrations_modules_nonexistent_toplevel_package"
      ],
      "tests/migrations/test_commands.py": [
        "test_makemigrations_disabled_migrations_for_app",
        "test_makemigrations_with_custom_name"
      ],
      "tests/migrations/test_commands/OptimizeMigrationTests/test_creates_replace_migration_manual_porting.py": [
        "test_creates_replace_migration_manual_porting"
      ],
      "tests/migrations/test_commands/SquashMigrationsTests/test_squashmigrations_manual_porting.py": [
        "test_squashmigrations_manual_porting"
      ],
      "tests/migrations/test_writer/WriterTests/test_register_serializer.py": [
        "test_register_serializer"
      ],
      "tests/migrations/test_writer.py": [
        "test_migration_file_header_comments"
      ],
      "tests/migrations/test_commands/OptimizeMigrationTests/test_fails_squash_migration_manual_porting.py": [
        "test_fails_squash_migration_manual_porting"
      ],
      "tests/migrations/test_writer/WriterTests/test_migration_path.py": [
        "test_migration_path"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-14894",
    "file_function": {
      "sklearn/svm/tests/test_svm.py": [
        "test_svm_gamma_error",
        "test_oneclass",
        "test_bad_input",
        "test_svc_clone_with_callable_kernel",
        "test_n_support_oneclass_svr",
        "test_libsvm_iris",
        "test_sparse_precomputed",
        "test_svc_bad_kernel",
        "test_precomputed"
      ],
      "sklearn/svm/tests/test_sparse.py": [
        "test_sparse_oneclasssvm",
        "test_timeout",
        "test_svc"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-9229",
    "file_function": {
      "tests/test_ext_autodoc.py": [
        "test_format_signature",
        "test_parse_name",
        "test_partialmethod",
        "test_autodoc_member_order",
        "test_autodoc_inherited_members_Base",
        "test_autodoc_ignore_module_all",
        "test_cython",
        "test_autodoc_imported_members",
        "test_autodoc_warnings",
        "test_pyclass_for_ClassLevelDocumenter",
        "test_new_documenter",
        "test_autodoc_module_member_order",
        "test_autodoc_noindex",
        "test_autodoc_exclude_members",
        "test_autodoc_typed_instance_variables",
        "test_autodoc_attributes",
        "test_autodoc"
      ],
      "tests/test_ext_autodoc_private_members.py": [
        "test_private_field_and_private_members",
        "test_private_members"
      ],
      "tests/test_ext_autodoc_configs.py": [
        "test_autoclass_content_and_docstring_signature_both",
        "test_autodoc_default_options_with_values",
        "test_autodoc_typehints_description_with_documented_init",
        "test_autodoc_typehints_description_no_undoc",
        "test_autodoc_typehints_description_for_invalid_node",
        "test_autodoc_typehints_description_and_type_aliases",
        "test_autodoc_type_aliases",
        "test_autoclass_content_and_docstring_signature_init"
      ],
      "tests/test_ext_autodoc_events.py": [
        "test_between",
        "test_process_docstring",
        "test_cut_lines",
        "test_skip_module_member"
      ],
      "tests/test_ext_autodoc_autoclass.py": [
        "test_class_doc_from_both",
        "test_inherited_instance_variable"
      ],
      "tests/test_ext_autodoc_automodule.py": [
        "test_subclass_of_mocked_object"
      ]
    }
  },
  {
    "instance_id": "django__django-15128",
    "file_function": {
      "tests/queries/tests.py": [
        "test_ticket7045",
        "test_heterogeneous_qs_combination",
        "test_BAB_BAC",
        "test_slicing_cannot_combine_queries_once_sliced",
        "test_ticket_10790_combine",
        "test_exclude_subquery",
        "test_ticket2496"
      ],
      "tests/expressions/tests.py": [
        "test_annotations_within_subquery"
      ]
    }
  },
  {
    "instance_id": "django__django-14631",
    "file_function": {
      "tests/forms_tests/tests/test_forms.py": [
        "test_changed_data",
        "test_filefield_initial_callable",
        "test_forms_with_file_fields",
        "test_form_with_disabled_fields",
        "test_validating_multiple_fields"
      ],
      "tests/forms_tests/field_tests/test_multivaluefield.py": [
        "test_clean_disabled_multivalue"
      ],
      "tests/forms_tests/field_tests/test_jsonfield.py": [
        "test_formfield_disabled"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-9258",
    "file_function": {
      "tests/test_ext_autodoc.py": [
        "test_autodoc_ignore_module_all",
        "test_autodoc_imported_members",
        "test_autodoc_undoc_members_for_metadata_only",
        "test_autodoc"
      ],
      "tests/test_ext_autodoc_configs.py": [
        "test_autodoc_typehints_description_with_documented_init",
        "test_autodoc_typehints_description_no_undoc",
        "test_autodoc_typehints_description_for_invalid_node"
      ],
      "tests/test_util_docstrings.py": [
        "test_prepare_commentdoc",
        "test_separate_metadata"
      ]
    }
  },
  {
    "instance_id": "django__django-13551",
    "file_function": {
      "tests/auth_tests/test_views.py": [
        "test_invalid_link_if_going_directly_to_the_final_reset_password_url"
      ],
      "tests/auth_tests/test_tokens.py": [
        "test_token_with_different_secret",
        "test_check_token_with_nonexistent_token_and_user"
      ]
    }
  },
  {
    "instance_id": "django__django-13121",
    "file_function": {
      "tests/expressions/tests.py": [
        "test_invalid_operator",
        "test_delta_add",
        "test_delta_update",
        "test_delta_subtract"
      ]
    }
  },
  {
    "instance_id": "psf__requests-1766",
    "file_function": {
      "tests/test_requests.py": [
        "test_DIGEST_STREAM",
        "test_DIGESTAUTH_WRONG_HTTP_401_GET"
      ]
    }
  },
  {
    "instance_id": "django__django-17087",
    "file_function": {
      "tests/migrations/test_autodetector/AutodetectorTests/test_alter_regex_string_to_compiled_regex.py": [
        "test_alter_regex_string_to_compiled_regex"
      ],
      "tests/migrations/test_commands.py": [
        "test_makemigrations_interactive_not_null_alteration",
        "test_makemigrations_with_custom_name"
      ],
      "tests/migrations/test_autodetector/AutodetectorTests/test_identical_regex_doesnt_alter.py": [
        "test_identical_regex_doesnt_alter"
      ],
      "tests/migrations/test_commands/MakeMigrationsTests/test_failing_migration.py": [
        "test_failing_migration"
      ],
      "tests/migrations/test_autodetector/AutodetectorTests/test_supports_functools_partial.py": [
        "test_supports_functools_partial"
      ],
      "tests/migrations/test_autodetector.py": [
        "test_deconstruct_type"
      ],
      "tests/migrations/test_optimizer/OptimizerTests/test_add_rename_index.py": [
        "test_add_rename_index"
      ],
      "tests/migrations/test_writer.py": [
        "test_serialize_class_based_validators"
      ],
      "tests/migrations/test_autodetector/AutodetectorTests/test_different_regex_does_alter.py": [
        "test_different_regex_does_alter"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-10323",
    "file_function": {
      "tests/test_directive_code.py": [
        "test_LiteralIncludeReader_end_before",
        "test_LiteralIncludeReader_lines_and_lineno_match2",
        "test_LiteralIncludeReader_lines_and_lineno_match3",
        "test_code_block",
        "test_LiteralIncludeReader_dedent",
        "test_LiteralIncludeReader_start_at",
        "test_LiteralIncludeReader_missing_start_and_end"
      ],
      "tests/test_build_html.py": [
        "test_html4_output",
        "test_docutils17_output",
        "test_html_warnings",
        "test_html5_output"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-24149",
    "file_function": {
      "lib/matplotlib/tests/test_axes.py": [
        "test_bar_errbar_zorder",
        "test_bar_tick_label_single",
        "test_bar_ticklabel_fail",
        "test_bar_timedelta",
        "test_bar_color_none_alpha",
        "test_bar_edgecolor_none_alpha",
        "test_bar_broadcast_args",
        "test_bar_labels_length",
        "test_hist_log"
      ],
      "lib/matplotlib/tests/test_cbook.py": [
        "test_flatiter",
        "test_safe_first_element_with_none"
      ]
    }
  },
  {
    "instance_id": "django__django-10554",
    "file_function": {
      "tests/ordering/tests.py": [
        "test_order_by_f_expression_duplicates",
        "test_orders_nulls_first_on_filtered_subquery",
        "test_order_by_constant_value",
        "test_random_ordering",
        "test_order_by_nulls_last",
        "test_order_by_nulls_first"
      ],
      "tests/queries/test_qs_combinators.py": [
        "test_difference_with_empty_qs",
        "test_intersection_with_empty_qs",
        "test_union_with_empty_qs",
        "test_order_raises_on_non_selected_column",
        "test_qs_with_subcompound_qs",
        "test_unsupported_ordering_slicing_raises_db_error"
      ],
      "tests/queries/tests.py": [
        "test_ordering",
        "test_extra_values_order_twice",
        "test_exists",
        "test_ticket_18414",
        "test_extra_multiple_select_params_values_order_by",
        "test_extra_select_params_values_order_in_extra"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-15809",
    "file_function": {
      "sympy/core/tests/test_function.py": [
        "test_fdiff_argument_index_error",
        "test_Function",
        "test_undef_fcn_float_issue_6938"
      ]
    }
  },
  {
    "instance_id": "django__django-12273",
    "file_function": {
      "tests/bulk_create/tests.py": [
        "test_multi_table_inheritance_unsupported",
        "test_set_state_with_pk_specified",
        "test_simple"
      ],
      "tests/model_inheritance/tests.py": [
        "test_update_parent_filtering",
        "test_related_objects_for_inherited_models"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-7671",
    "file_function": {
      "astropy/utils/tests/test_introspection.py": [
        "test_minversion"
      ]
    }
  },
  {
    "instance_id": "django__django-10973",
    "file_function": {
      "tests/dbshell/test_postgresql.py": [
        "test_basic",
        "test_escape_characters",
        "test_accent"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-9698",
    "file_function": {
      "tests/test_domain_py.py": [
        "test_domain_py_canonical",
        "test_pymethod_options",
        "test_pydecoratormethod_signature",
        "test_pyproperty",
        "test_domain_py_xrefs"
      ],
      "tests/test_environment.py": [
        "test_images"
      ],
      "tests/test_build.py": [
        "test_build_all"
      ]
    }
  },
  {
    "instance_id": "django__django-12708",
    "file_function": {
      "tests/schema/tests.py": [
        "test_index_together",
        "test_unique_together"
      ],
      "tests/migrations/test_operations.py": [
        "test_alter_index_together"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-8621",
    "file_function": {
      "tests/test_ext_autosummary.py": [
        "test_autosummary_generate_overwrite2",
        "test_autosummary_generate_overwrite1"
      ],
      "tests/test_environment.py": [
        "test_images",
        "test_config_status"
      ],
      "tests/test_markup.py": [
        "test_inline"
      ],
      "tests/test_roles.py": [
        "test_samp"
      ]
    }
  },
  {
    "instance_id": "django__django-11555",
    "file_function": {
      "tests/ordering/tests.py": [
        "test_default_ordering",
        "test_reverse_meta_ordering_pure"
      ],
      "tests/queries/tests.py": [
        "test_order_by_tables"
      ]
    }
  },
  {
    "instance_id": "django__django-13363",
    "file_function": {
      "tests/db_functions/datetime/test_extract_trunc.py": [
        "test_trunc_func",
        "test_trunc_time_func",
        "test_trunc_time_none"
      ]
    }
  },
  {
    "instance_id": "django__django-12754",
    "file_function": {
      "tests/migrations/test_autodetector.py": [
        "test_last_dependency",
        "test_unmanaged_to_managed",
        "test_circular_dependency_swappable",
        "test_managed_to_unmanaged",
        "test_unmanaged_delete",
        "test_proxy_to_mti_with_fk_to_proxy"
      ]
    }
  },
  {
    "instance_id": "django__django-16801",
    "file_function": {
      "tests/model_fields/test_imagefield.py": [
        "test_field_save_and_delete_methods"
      ],
      "tests/model_fields/test_imagefield/TwoImageFieldTests/test_field_save_and_delete_methods.py": [
        "test_field_save_and_delete_methods"
      ]
    }
  },
  {
    "instance_id": "django__django-15563",
    "file_function": {
      "tests/many_to_one/tests.py": [
        "test_set",
        "test_assign"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-6721",
    "file_function": {
      "xarray/tests/test_dataarray.py": [
        "test_sel_dataarray_datetime_slice"
      ],
      "xarray/tests/test_dask.py": [
        "test_unify_chunks"
      ]
    }
  },
  {
    "instance_id": "django__django-14787",
    "file_function": {
      "tests/decorators/tests.py": [
        "test_argumented",
        "test_preserve_signature",
        "test_descriptors",
        "test_preserve_attributes"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-14531",
    "file_function": {
      "sympy/printing/tests/test_str.py": [
        "test_FiniteSet",
        "test_tuple",
        "test_Limit",
        "test_RootSum",
        "test_PolyElement",
        "test_Permutation_Cycle",
        "test_Float",
        "test_sstrrepr",
        "test_Quantity_str",
        "test_Poly",
        "test_FracElement",
        "test_MatrixSlice",
        "test_true_false",
        "test_Function",
        "test_RandomDomain",
        "test_Tr",
        "test_Dict",
        "test_Matrix_str",
        "test_MatrixElement_printing",
        "test_Order",
        "test_categories",
        "test_Mul",
        "test_GroebnerBasis",
        "test_Interval",
        "test_Complement",
        "test_wild_str",
        "test_empty_printer",
        "test_UnevaluatedExpr",
        "test_PolyRing",
        "test_set",
        "test_Derivative",
        "test_MatMul_MatAdd",
        "test_Lambda",
        "test_full_prec",
        "test_Geometry",
        "test_NaN",
        "test_AccumBounds",
        "test_CRootOf",
        "test_FracField",
        "test_Quaternion_str_printer",
        "test_Rational",
        "test_Integral"
      ],
      "sympy/printing/pretty/tests/test_pretty.py": [
        "test_ProductSet_paranthesis",
        "test_pretty_Contains",
        "test_pretty_Complement"
      ],
      "sympy/core/tests/test_expr.py": [
        "test_equals",
        "test_is_constant"
      ],
      "sympy/printing/tests/test_python.py": [
        "test_python_basic"
      ],
      "sympy/printing/tests/test_repr.py": [
        "test_Singletons"
      ],
      "sympy/printing/tests/test_fcode.py": [
        "test_not_fortran"
      ]
    }
  },
  {
    "instance_id": "django__django-14725",
    "file_function": {
      "tests/model_formsets/tests.py": [
        "test_validation_with_child_model_without_id",
        "test_validation_without_id",
        "test_custom_pk",
        "test_validation_with_invalid_id"
      ],
      "tests/generic_relations/test_forms.py": [
        "test_initial"
      ]
    }
  },
  {
    "instance_id": "django__django-12143",
    "file_function": {
      "tests/admin_changelist/tests.py": [
        "test_get_list_editable_queryset"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-24539",
    "file_function": {
      "sympy/polys/tests/test_fields.py": [
        "test_FracElement_as_expr"
      ]
    }
  },
  {
    "instance_id": "django__django-14434",
    "file_function": {
      "tests/queries/tests.py": [
        "test_subquery_exclude_outerref",
        "test_ordering",
        "test_error_raised_on_filter_with_dictionary",
        "test_ticket7045",
        "test_field_error_values_list",
        "test_exclude_many_to_many",
        "test_exclude_with_circular_fk_relation",
        "test_ticket7235",
        "test_exclude_nullable_fields",
        "test_ticket2496",
        "test_ticket10432",
        "test_ticket14876",
        "test_invalid_queryset_model",
        "test_ticket_23605"
      ],
      "tests/db_functions/tests.py": [
        "test_func_transform_bilateral"
      ],
      "tests/queries/test_query.py": [
        "test_foreign_key_f",
        "test_transform",
        "test_multiple_fields",
        "test_foreign_key",
        "test_filter_non_conditional"
      ],
      "tests/filtered_relation/tests.py": [
        "test_with_m2m",
        "test_aggregate",
        "test_condition_deeper_relation_name",
        "test_with_join_and_complex_condition",
        "test_relation_name_lookup",
        "test_condition_outside_relation_name"
      ],
      "tests/aggregation/tests.py": [
        "test_aggregate_in_order_by",
        "test_annotate_defer",
        "test_aggregate_join_transform",
        "test_aggregation_nested_subquery_outerref"
      ],
      "tests/expressions/tests.py": [
        "test_subquery",
        "test_nested_subquery",
        "test_annotations_within_subquery",
        "test_range_lookup_namedtuple",
        "test_negative_timedelta_update"
      ],
      "tests/many_to_one/tests.py": [
        "test_selects",
        "test_values_list_exception"
      ],
      "tests/aggregation_regress/tests.py": [
        "test_more_more_more",
        "test_f_expression_annotation",
        "test_more"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-20676",
    "file_function": {
      "lib/matplotlib/tests/test_image.py": [
        "test_empty_imshow",
        "test_nonuniform_and_pcolor"
      ],
      "lib/matplotlib/tests/test_axes.py": [
        "test_stairs",
        "test_shared_axes_autoscale",
        "test_shared_scale",
        "test_stairs_fill",
        "test_autoscale_log_shared",
        "test_log_scales_invalid"
      ],
      "lib/matplotlib/tests/test_widgets.py": [
        "test_span_selector_direction",
        "test_span_selector",
        "test_span_selector_drag"
      ],
      "lib/matplotlib/tests/test_units.py": [
        "test_empty_default_limits"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-19637",
    "file_function": {
      "sympy/core/tests/test_sympify.py": [
        "test_kernS"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-24443",
    "file_function": {
      "sympy/combinatorics/tests/test_perm_groups.py": [
        "test_sylow_subgroup"
      ],
      "sympy/combinatorics/tests/test_homomorphisms.py": [
        "test_homomorphism",
        "test_check_homomorphism"
      ]
    }
  },
  {
    "instance_id": "pylint-dev__pylint-7080",
    "file_function": {
      "tests/config/test_functional_config_loading.py": [
        "test_functional_config_loading"
      ],
      "tests/test_self.py": [
        "test_ignore_path_recursive",
        "test_stdin_syntaxerror",
        "test_nonexistent_config_file",
        "test_relative_imports",
        "test_ignore_recursive",
        "test_stdin"
      ],
      "tests/lint/unittest_lint.py": [
        "test_recursive_ignore"
      ],
      "tests/config/test_find_default_config_files.py": [
        "test_verbose_output_no_config",
        "test_verbose_abbreviation"
      ],
      "tests/lint/test_pylinter.py": [
        "test_check_deprecation"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-13852",
    "file_function": {
      "sympy/functions/special/tests/test_zeta_functions.py": [
        "test_rewriting",
        "test_polylog_expansion",
        "test_lerchphi_expansion"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-9281",
    "file_function": {
      "tests/test_ext_autodoc.py": [
        "test_autodoc_GenericAlias",
        "test_format_signature",
        "test_parse_name",
        "test_autodoc_member_order",
        "test_autodoc_decorator",
        "test_coroutine",
        "test_canonical",
        "test_autodoc_inner_class",
        "test_final",
        "test_enum_class",
        "test_autodoc_inherited_members_Base",
        "test_autodoc_ignore_module_all",
        "test_cython",
        "test_autodoc_imported_members",
        "test_autodoc_warnings",
        "test_pyclass_for_ClassLevelDocumenter",
        "test_overload",
        "test_autodoc_module_member_order",
        "test_autodoc_noindex",
        "test_autodoc_exclude_members",
        "test_autodoc_typed_instance_variables",
        "test_autodoc_attributes",
        "test_autodoc_special_members",
        "test_autodoc"
      ],
      "tests/test_ext_autodoc_autoclass.py": [
        "test_show_inheritance_for_subclass_of_generic_type",
        "test_autodoc_process_bases",
        "test_class_alias_having_doccomment",
        "test_class_doc_from_init",
        "test_inherited_instance_variable"
      ],
      "tests/test_ext_autodoc_private_members.py": [
        "test_private_field_and_private_members",
        "test_private_members"
      ],
      "tests/test_ext_autodoc_events.py": [
        "test_between",
        "test_process_docstring",
        "test_cut_lines",
        "test_skip_module_member"
      ],
      "tests/test_ext_autodoc_automodule.py": [
        "test_automodule_undoc_members",
        "test_subclass_of_mocked_object"
      ],
      "tests/test_ext_autodoc_autodata.py": [
        "test_autodata_typed_variable",
        "test_autodata_hide_value",
        "test_autodata_GenericAlias"
      ],
      "tests/test_ext_autodoc_autofunction.py": [
        "test_singledispatch"
      ]
    }
  },
  {
    "instance_id": "django__django-13279",
    "file_function": {
      "tests/sessions_tests/tests.py": [
        "test_session_get_decoded",
        "test_sessionmanager_save",
        "test_clearsessions_command"
      ]
    }
  },
  {
    "instance_id": "mwaskom__seaborn-3187",
    "file_function": {
      "tests/_core/test_scales.py": [
        "test_label_like_pattern",
        "test_label_like_function",
        "test_tick_locator",
        "test_label_unit",
        "test_label_empty_unit",
        "test_label_formatter",
        "test_label_like_string",
        "test_label_unit_with_sep",
        "test_symlog_tick_default",
        "test_label_concise"
      ],
      "tests/test_relational.py": [
        "test_scatterplot_vs_relplot",
        "test_legend_data",
        "test_scatterplot_smoke"
      ],
      "tests/_core/test_plot.py": [
        "test_single_layer_common_unnamed_variable",
        "test_single_layer_common_variable",
        "test_pair_single_coordinate_stat_orient",
        "test_inference"
      ]
    }
  },
  {
    "instance_id": "django__django-10880",
    "file_function": {
      "tests/expressions_case/tests.py": [
        "test_annotate_with_empty_when",
        "test_simple_example",
        "test_aggregate_with_expression_as_value"
      ],
      "tests/aggregation_regress/tests.py": [
        "test_conditional_aggreate"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-14629",
    "file_function": {
      "sklearn/tests/test_multioutput.py": [
        "test_base_chain_fit_and_predict_with_sparse_data_and_cv",
        "test_base_chain_crossval_fit_and_predict"
      ]
    }
  },
  {
    "instance_id": "django__django-15104",
    "file_function": {
      "tests/migrations/test_autodetector.py": [
        "test_add_model_order_with_respect_to_index_constraint",
        "test_proxy_to_mti_with_fk_to_proxy",
        "test_arrange_for_graph_with_multiple_initial"
      ]
    }
  },
  {
    "instance_id": "django__django-16819",
    "file_function": {
      "tests/migrations/test_operations/OperationTests/test_rename_index.py": [
        "test_rename_index"
      ],
      "tests/migrations/test_operations.py": [
        "test_add_index",
        "test_remove_index"
      ],
      "tests/migrations/test_optimizer/OptimizerTests/test_rename_index.py": [
        "test_rename_index"
      ],
      "tests/migrations/test_autodetector/AutodetectorIndexTogetherTests/test_rename_index_together_to_index_extra_options.py": [
        "test_rename_index_together_to_index_extra_options"
      ],
      "tests/migrations/test_optimizer.py": [
        "test_optimize_through_create"
      ],
      "tests/migrations/test_operations/OperationTests/test_rename_index_unnamed_index.py": [
        "test_rename_index_unnamed_index"
      ],
      "tests/migrations/test_operations/OperationTests/test_rename_index_arguments.py": [
        "test_rename_index_arguments"
      ],
      "tests/migrations/test_operations/OperationTests/test_remove_func_index.py": [
        "test_remove_func_index"
      ],
      "tests/migrations/test_optimizer/OptimizerTests/test_create_alter_index_delete_model.py": [
        "test_create_alter_index_delete_model"
      ],
      "tests/migrations/test_optimizer/OptimizerTests/test_none_app_label.py": [
        "test_none_app_label"
      ],
      "tests/migrations/test_operations/OperationTests/test_alter_index_together_remove_with_unique_together.py": [
        "test_alter_index_together_remove_with_unique_together"
      ],
      "tests/migrations/test_operations/OperationTests/test_add_func_index.py": [
        "test_add_func_index"
      ],
      "tests/migrations/test_operations/OperationTests/test_rename_index_unknown_unnamed_index.py": [
        "test_rename_index_unknown_unnamed_index"
      ]
    }
  },
  {
    "instance_id": "django__django-15098",
    "file_function": {
      "tests/check_framework/test_translation.py": [
        "test_valid_variant_consistent_language_settings",
        "test_inconsistent_language_settings"
      ],
      "tests/i18n/patterns/tests.py": [
        "test_en_redirect",
        "test_nl_redirect",
        "test_pl_pl_redirect"
      ],
      "tests/i18n/test_percents.py": [
        "test_translates_with_percent_symbol_using_context"
      ],
      "tests/i18n/tests.py": [
        "test_pgettext",
        "test_language_bidi",
        "test_override_decorator",
        "test_specific_language_codes",
        "test_all_format_strings",
        "test_plural_non_django_language",
        "test_check_for_language",
        "test_override",
        "test_ngettext_lazy_pickle"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-4356",
    "file_function": {
      "xarray/tests/test_weighted.py": [
        "test_weighted_operations_3D"
      ],
      "xarray/tests/test_dataarray.py": [
        "test_groupby_sum"
      ],
      "xarray/tests/test_duck_array_ops.py": [
        "test_min_count",
        "test_reduce"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-4687",
    "file_function": {
      "xarray/tests/test_computation.py": [
        "test_cov",
        "test_corr",
        "test_autocov"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-26323",
    "file_function": {
      "sklearn/compose/tests/test_column_transformer.py": [
        "test_column_transformer_reordered_column_names_remainder",
        "test_column_transformer_set_output",
        "test_feature_name_validation_missing_columns_drop_passthough",
        "test_raise_error_if_index_not_aligned",
        "test_column_transformer_mixed_cols_sparse",
        "test_column_transformer_error_msg_1D",
        "test_column_transformer_empty_columns"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-14248",
    "file_function": {
      "sympy/printing/tests/test_str.py": [
        "test_issue_3103",
        "test_MatrixElement_printing",
        "test_Mul",
        "test_MatMul_MatAdd"
      ]
    }
  },
  {
    "instance_id": "django__django-11066",
    "file_function": {
      "tests/contenttypes_tests/test_management.py": [
        "test_interactive_true_without_dependent_objects",
        "test_interactive_true_with_dependent_objects"
      ],
      "tests/migrate_signals/tests.py": [
        "test_args"
      ]
    }
  },
  {
    "instance_id": "django__django-14007",
    "file_function": {
      "tests/bulk_create/tests.py": [
        "test_bulk_insert_nullable_fields"
      ],
      "tests/queries/test_bulk_update.py": [
        "test_only_concrete_fields_allowed"
      ],
      "tests/queries/tests.py": [
        "test_single_object"
      ]
    }
  },
  {
    "instance_id": "pylint-dev__pylint-6528",
    "file_function": {
      "tests/lint/unittest_expand_modules.py": [
        "test_expand_modules_with_ignore"
      ],
      "tests/lint/test_pylinter.py": [
        "test_check_deprecation"
      ],
      "tests/test_regr.py": [
        "test_package"
      ],
      "tests/test_functional.py": [
        "test_functional"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-14995",
    "file_function": {
      "astropy/nddata/tests/test_nddata.py": [
        "test_nddata_init_data_nddata",
        "test_uncertainty_setter",
        "test_nddata_wcs_setter_with_low_level_wcs",
        "test_param_mask",
        "test_nddata_init_with_low_level_wcs",
        "test_nddata_init_data_fail",
        "test_nddata_init_data_masked_quantity",
        "test_param_unit",
        "test_collapse",
        "test_nddata_repr",
        "test_nddata_str",
        "test_nddata_wcs_setter_error_cases"
      ],
      "astropy/nddata/mixins/tests/test_ndslicing.py": [
        "test_slicing_1dmask_ndslice"
      ],
      "astropy/nddata/tests/test_nduncertainty.py": [
        "test_for_stolen_uncertainty"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-15976",
    "file_function": {
      "sympy/printing/tests/test_mathml.py": [
        "test_print_matrix_symbol",
        "test_content_mathml_greek",
        "test_presentation_mathml_greek",
        "test_presentation_symbol",
        "test_content_symbol"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-11510",
    "file_function": {
      "tests/test_build_html.py": [
        "test_html_parallel",
        "test_html_math_renderer_is_duplicated",
        "test_html5_output",
        "test_option_emphasise_placeholders",
        "test_tocdepth_singlehtml",
        "test_assets_order",
        "test_numfig_with_singlehtml",
        "test_javscript_loading_method",
        "test_numfig_without_numbered_toctree_warn",
        "test_html_warnings"
      ],
      "tests/test_events.py": [
        "test_event_pdb",
        "test_event_allowed_exceptions"
      ],
      "tests/test_application.py": [
        "test_build_specific",
        "test_events",
        "test_instantiation",
        "test_add_is_parallel_allowed"
      ],
      "tests/test_ext_autodoc.py": [
        "test_attrgetter_using",
        "test_autodoc_warnings"
      ],
      "tests/test_environment.py": [
        "test_config_status",
        "test_object_inventory",
        "test_images"
      ]
    }
  },
  {
    "instance_id": "django__django-16333",
    "file_function": {
      "tests/auth_tests/test_forms.py": [
        "test_password_verification",
        "test_unicode_username",
        "test_validates_password",
        "test_normalize_username",
        "test_success"
      ]
    }
  },
  {
    "instance_id": "django__django-13807",
    "file_function": {
      "tests/schema/tests.py": [
        "test_alter_fk_checks_deferred_constraints",
        "test_check_constraints"
      ],
      "tests/backends/sqlite/tests.py": [
        "test_constraint_checks_disabled_atomic_allowed"
      ],
      "tests/fixtures_regress/tests.py": [
        "test_loaddata_raises_error_when_fixture_has_invalid_foreign_key"
      ]
    }
  },
  {
    "instance_id": "django__django-15499",
    "file_function": {
      "tests/migrations/test_optimizer.py": [
        "test_create_alter_model_options",
        "test_create_alter_unique_field",
        "test_create_alter_owrt_delete_model",
        "test_optimize_elidable_operation",
        "test_create_alter_index_field",
        "test_create_alter_owrt_field",
        "test_create_model_and_remove_model_options"
      ],
      "tests/migrations/test_commands.py": [
        "test_makemigrations_model_rename_interactive",
        "test_makemigrations_non_interactive_unique_callable_default_addition"
      ],
      "tests/migrations/test_operations.py": [
        "test_create_model_with_partial_unique_constraint",
        "test_create_model_with_deferred_unique_constraint",
        "test_create_model_with_constraint"
      ],
      "tests/migrations/test_autodetector.py": [
        "test_bases_first_mixed_case_app_label",
        "test_proxy_to_mti_with_fk_to_proxy_proxy"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-12419",
    "file_function": {
      "sympy/matrices/expressions/tests/test_matexpr.py": [
        "test_single_indexing",
        "test_dense_conversion",
        "test_MatPow",
        "test_addition",
        "test_MatrixSymbol_determinant",
        "test_multiplication",
        "test_Identity",
        "test_matrixelement_diff",
        "test_matmul_simplify",
        "test_identity_powers"
      ],
      "sympy/matrices/expressions/tests/test_matmul.py": [
        "test_matmul_args_cnc",
        "test_doit_deep_false_still_canonical",
        "test_refine",
        "test_determinant",
        "test_matmul_no_matrices",
        "test_adjoint"
      ],
      "sympy/matrices/expressions/tests/test_determinant.py": [
        "test_eval_determinant"
      ],
      "sympy/matrices/expressions/tests/test_transpose.py": [
        "test_transpose"
      ],
      "sympy/matrices/expressions/tests/test_trace.py": [
        "test_Trace"
      ],
      "sympy/matrices/expressions/tests/test_slice.py": [
        "test_entry"
      ]
    }
  },
  {
    "instance_id": "django__django-12965",
    "file_function": {
      "tests/delete_regress/tests.py": [
        "test_meta_ordered_delete",
        "test_19187_values"
      ],
      "tests/delete/tests.py": [
        "test_queryset_delete_returns_num_rows",
        "test_large_delete"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-13236",
    "file_function": {
      "astropy/table/tests/test_table.py": [
        "test_replace_index_column",
        "test_scalar",
        "test_set_new_col_existing_table",
        "test_rows_with_mixins",
        "test_add_columns3",
        "test_add_columns6",
        "test_values_equal_part1",
        "test_fail_replace_column",
        "test_too_short",
        "test_add_duplicate_columns"
      ],
      "astropy/table/tests/test_mixin.py": [
        "test_hstack",
        "test_ndarray_mixin"
      ],
      "astropy/table/tests/test_init_table.py": [
        "test_add_none_object_column"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-20859",
    "file_function": {
      "lib/matplotlib/tests/test_legend.py": [
        "test_legend_labelcolor_rcparam_single",
        "test_warn_big_data_best_loc",
        "test_get_set_draggable",
        "test_legend_handler_map",
        "test_legend_title_fontprop_fontsize",
        "test_hatching",
        "test_legend_labelcolor_single",
        "test_legend_auto2",
        "test_legend_labelcolor_linecolor",
        "test_window_extent_cached_renderer",
        "test_shadow_framealpha",
        "test_rc",
        "test_legend_labelcolor_markerfacecolor",
        "test_legend_labelcolor_markeredgecolor",
        "test_fancy"
      ],
      "lib/matplotlib/tests/test_axes.py": [
        "test_hist_stacked_bar"
      ]
    }
  },
  {
    "instance_id": "django__django-13344",
    "file_function": {
      "tests/handlers/tests.py": [
        "test_request_signals",
        "test_suspiciousop_in_view_returns_400",
        "test_no_auto_transaction",
        "test_invalid_multipart_boundary"
      ],
      "tests/handlers/tests_custom_error_handlers.py": [
        "test_handler_renders_template_response"
      ],
      "tests/middleware/tests.py": [
        "test_middleware_calculates_etag"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-13977",
    "file_function": {
      "astropy/units/tests/test_quantity_non_ufuncs.py": [
        "test_ediff1d"
      ],
      "astropy/units/tests/test_quantity_ufuncs.py": [
        "test_ufunc_inplace_non_contiguous_data"
      ],
      "astropy/units/tests/test_quantity_array_methods.py": [
        "test_clip_inplace",
        "test_nansum_where",
        "test_sum_initial_exception",
        "test_sum_initial"
      ]
    }
  },
  {
    "instance_id": "django__django-11119",
    "file_function": {
      "tests/template_tests/syntax_tests/test_autoescape.py": [
        "test_autoescape_filters01",
        "test_autoescape_tag01"
      ],
      "tests/template_tests/test_engine.py": [
        "test_basic_context"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-6202",
    "file_function": {
      "testing/test_collection.py": [
        "test_getparent",
        "test_class_and_functions_discovery_using_glob",
        "test_collect_protocol_method"
      ]
    }
  },
  {
    "instance_id": "django__django-15732",
    "file_function": {
      "tests/migrations/test_autodetector.py": [
        "test_create_model_and_unique_together"
      ],
      "tests/migrations/test_optimizer.py": [
        "test_create_alter_unique_field"
      ],
      "tests/migrations/test_operations.py": [
        "test_alter_unique_together_remove"
      ]
    }
  },
  {
    "instance_id": "django__django-16631",
    "file_function": {
      "tests/sessions_tests/tests.py": [
        "test_decode_failure_logged_to_security",
        "test_empty_session_saved",
        "test_keys",
        "test_session_load_does_not_create_record",
        "test_decode_serializer_exception",
        "test_cycle_with_no_session_cache",
        "test_custom_expiry_seconds",
        "test_pop",
        "test_actual_expiry",
        "test_custom_expiry_reset",
        "test_update",
        "test_get_expire_at_browser_close",
        "test_setdefault"
      ],
      "tests/signing/tests.py": [
        "test_invalid_sep",
        "test_sign_unsign_multiple_keys"
      ],
      "tests/signing/tests/TestSigner/test_sign_unsign_ignore_secret_key_fallbacks.py": [
        "test_sign_unsign_ignore_secret_key_fallbacks"
      ],
      "tests/auth_tests/test_auth_backends/AllowAllUsersModelBackendTest/test_get_user.py": [
        "test_get_user"
      ],
      "tests/signing/tests/TestTimestampSigner/test_timestamp_signer.py": [
        "test_timestamp_signer"
      ],
      "tests/auth_tests/test_middleware/TestAuthenticationMiddleware/test_changed_password_invalidates_session.py": [
        "test_changed_password_invalidates_session"
      ],
      "tests/sessions_tests/tests/ClearSessionsCommandTests/test_clearsessions_unsupported.py": [
        "test_clearsessions_unsupported"
      ],
      "tests/signing/tests/SignerPositionalArgumentsDeprecationTests/test_positional_arguments.py": [
        "test_positional_arguments"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-17139",
    "file_function": {
      "sympy/simplify/tests/test_fu.py": [
        "test_TR5",
        "test__TR56",
        "test_TR6"
      ],
      "sympy/simplify/tests/test_trigsimp.py": [
        "test_trigsimp_issues"
      ]
    }
  },
  {
    "instance_id": "django__django-16612",
    "file_function": {
      "tests/admin_views/tests/AdminSiteFinalCatchAllPatternTests/test_missing_slash_append_slash_true_force_script_name.py": [
        "test_missing_slash_append_slash_true_force_script_name"
      ],
      "tests/admin_views/tests/AdminSiteFinalCatchAllPatternTests/test_single_model_no_append_slash.py": [
        "test_single_model_no_append_slash"
      ],
      "tests/admin_views/tests/AdminSiteFinalCatchAllPatternTests/test_missing_slash_append_slash_true.py": [
        "test_missing_slash_append_slash_true"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-13398",
    "file_function": {
      "astropy/coordinates/tests/test_frames.py": [
        "test_eloc_attributes"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-24562",
    "file_function": {
      "sympy/core/tests/test_numbers.py": [
        "test_seterr",
        "test_Rational_new"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-20428",
    "file_function": {
      "sympy/polys/tests/test_polytools.py": [
        "test_intervals",
        "test_Poly_homogeneous_order",
        "test_poly",
        "test_resultant",
        "test_Poly_properties",
        "test_revert",
        "test_count_roots",
        "test_Poly_all_monoms",
        "test_div",
        "test_Poly_sub_ground",
        "test_as_list",
        "test_factor",
        "test_refine_root",
        "test_Poly_is_irreducible",
        "test_transform",
        "test_Poly_slice",
        "test_Poly_lift",
        "test_Poly_integrate",
        "test_reduced",
        "test_Poly_all_coeffs",
        "test_Poly_to_exact",
        "test_Poly_homogenize",
        "test_Poly_all_terms",
        "test_sturm",
        "test_gff",
        "test_sqf",
        "test_poly_from_domain_element",
        "test_Poly_deflate",
        "test_norm",
        "test_cancel",
        "test_Poly_exclude"
      ],
      "sympy/polys/tests/test_polyroots.py": [
        "test_roots0",
        "test_roots_mixed"
      ],
      "sympy/polys/tests/test_polyclasses.py": [
        "test_DMP_arithmetics",
        "test_DMP_exclude",
        "test_DMP_functionality",
        "test_DMP___eq__"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-5840",
    "file_function": {
      "testing/test_session.py": [
        "test_minus_x_import_error"
      ],
      "testing/test_collection.py": [
        "test_collectignore_exclude_on_option",
        "test_collect_protocol_method",
        "test_collect_topdir",
        "test_collect_pkg_init_only",
        "test_global_file",
        "test_matchnodes_two_collections_same_file",
        "test_collect_init_tests"
      ],
      "testing/test_config.py": [
        "test_config_blocked_default_plugins",
        "test_pytest_plugins_in_non_top_level_conftest_unsupported_pyargs"
      ],
      "testing/test_conftest.py": [
        "test_conftest_symlink"
      ],
      "testing/test_pathlib.py": [
        "test_access_denied_during_cleanup"
      ]
    }
  },
  {
    "instance_id": "pylint-dev__pylint-6903",
    "file_function": {
      "tests/test_self.py": [
        "test_output_file_invalid_path_exits_with_code_32",
        "test_abbreviations_are_not_supported",
        "test_no_crash_with_formatting_regex_defaults",
        "test_regression_parallel_mode_without_filepath",
        "test_output_file_can_be_combined_with_output_format_option",
        "test_output_file_can_be_combined_with_custom_reporter",
        "test_error_missing_arguments",
        "test_exit_zero",
        "test_fail_on_edge_case",
        "test_output_file_valid_path",
        "test_version",
        "test_parallel_execution_missing_arguments",
        "test_fail_on_exit_code"
      ],
      "tests/test_pylint_runners.py": [
        "test_runner"
      ],
      "tests/lint/unittest_lint.py": [
        "test_init_hooks_called_before_load_plugins"
      ]
    }
  },
  {
    "instance_id": "django__django-12406",
    "file_function": {
      "tests/model_forms/test_modelchoicefield.py": [
        "test_choices",
        "test_disabled_modelchoicefield_has_changed",
        "test_disabled_modelchoicefield_initial_model_instance",
        "test_basics"
      ],
      "tests/model_forms/tests.py": [
        "test_limit_choices_to_callable_for_m2m_rel",
        "test_onetoonefield",
        "test_foreignkeys_which_use_to_field",
        "test_fields_for_model_applies_limit_choices_to",
        "test_callable_called_each_time_form_is_instantiated"
      ]
    }
  },
  {
    "instance_id": "django__django-12419",
    "file_function": {
      "tests/middleware/test_security.py": [
        "test_redirect_ssl_host",
        "test_ssl_redirect_on",
        "test_sts_subdomains_and_preload",
        "test_referrer_policy_already_present",
        "test_xss_filter_already_present",
        "test_xss_filter_on",
        "test_referrer_policy_on",
        "test_content_type_already_present"
      ]
    }
  },
  {
    "instance_id": "django__django-11141",
    "file_function": {
      "tests/migrations/test_commands.py": [
        "test_migrate_nonexistent_app_label",
        "test_makemigrations_unspecified_app_with_conflict_no_merge",
        "test_makemigrations_inconsistent_history",
        "test_makemigrations_default_merge_name",
        "test_migrate_app_name_specified_as_label",
        "test_unknown_prefix",
        "test_showmigrations_plan_squashed",
        "test_ambiguous_prefix"
      ],
      "tests/migrations/test_loader.py": [
        "test_run_before",
        "test_load_import_error",
        "test_load_module_file",
        "test_check_consistent_history_squashed",
        "test_load_empty_dir",
        "test_loading_squashed_complex_multi_apps_partially_applied",
        "test_invalid",
        "test_check_consistent_history"
      ],
      "tests/migrations/test_executor.py": [
        "test_apply_all_replaced_marks_replacement_as_applied"
      ]
    }
  },
  {
    "instance_id": "psf__requests-1142",
    "file_function": {
      "tests/test_requests.py": [
        "test_entry_points",
        "test_params_are_added_before_fragment",
        "test_basic_building",
        "test_path_is_not_double_encoded",
        "test_invalid_url"
      ]
    }
  },
  {
    "instance_id": "django__django-15161",
    "file_function": {
      "tests/aggregation_regress/tests.py": [
        "test_allow_distinct",
        "test_annotate_and_join",
        "test_more_more_more",
        "test_conditional_aggregate"
      ],
      "tests/expressions_case/tests.py": [
        "test_filter_with_aggregation_in_predicate",
        "test_condition_with_lookups",
        "test_annotate_with_empty_when",
        "test_only_when_arguments",
        "test_in_subquery",
        "test_update_binary",
        "test_empty_q_object",
        "test_aggregation_empty_cases",
        "test_invalid_when_constructor_args",
        "test_filter_with_aggregation_in_condition"
      ],
      "tests/expressions/tests.py": [
        "test_aggregates",
        "test_filtered_aggregates",
        "test_raise_empty_expressionlist",
        "test_exists_in_filter",
        "test_subquery",
        "test_empty_group_by",
        "test_nested_subquery",
        "test_aggregate_subquery_annotation",
        "test_non_empty_group_by",
        "test_resolve_output_field",
        "test_distinct_aggregates",
        "test_filter_decimal_expression",
        "test_expressions"
      ],
      "tests/aggregation/tests.py": [
        "test_coalesced_empty_result_set",
        "test_aggregation_default_unsupported_by_count",
        "test_complex_aggregations_require_kwarg",
        "test_aggregation_nested_subquery_outerref",
        "test_multi_arg_aggregate",
        "test_aggregation_default_passed_another_aggregate"
      ],
      "tests/schema/tests.py": [
        "test_func_index_nondeterministic"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-14983",
    "file_function": {
      "sklearn/model_selection/tests/test_split.py": [
        "test_2d_y",
        "test_repeated_cv_value_errors"
      ]
    }
  },
  {
    "instance_id": "django__django-13820",
    "file_function": {
      "tests/migrations/test_loader.py": [
        "test_explicit_missing_module",
        "test_load_module_file",
        "test_load_empty_dir",
        "test_invalid"
      ],
      "tests/admin_scripts/tests.py": [
        "test_no_database"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-25960",
    "file_function": {
      "lib/matplotlib/tests/test_tightlayout.py": [
        "test_tight_layout6",
        "test_tight_layout2",
        "test_tight_layout1",
        "test_tight_layout3"
      ],
      "lib/matplotlib/tests/test_constrainedlayout.py": [
        "test_constrained_layout6"
      ],
      "lib/matplotlib/tests/test_axes.py": [
        "test_contour_colorbar"
      ],
      "lib/matplotlib/tests/test_figure.py": [
        "test_nested_height_ratios"
      ]
    }
  },
  {
    "instance_id": "django__django-13023",
    "file_function": {
      "tests/model_fields/test_decimalfield.py": [
        "test_get_prep_value",
        "test_to_python"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-14623",
    "file_function": {
      "lib/matplotlib/tests/test_axes.py": [
        "test_shared_scale",
        "test_log_scales",
        "test_inverted_cla"
      ],
      "lib/matplotlib/tests/test_scale.py": [
        "test_extra_kwargs_raise",
        "test_logscale_invert_transform",
        "test_invalid_log_lims"
      ],
      "lib/matplotlib/tests/test_figure.py": [
        "test_subplots_shareax_loglabels"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-20438",
    "file_function": {
      "sympy/sets/tests/test_sets.py": [
        "test_ProductSet",
        "test_is_subset"
      ]
    }
  },
  {
    "instance_id": "django__django-15554",
    "file_function": {
      "tests/filtered_relation/tests.py": [
        "test_with_exclude",
        "test_relation_name_lookup",
        "test_condition_deeper_relation_name",
        "test_with_join_and_complex_condition",
        "test_condition_outside_relation_name"
      ],
      "tests/aggregation/tests.py": [
        "test_aggregation_nested_subquery_outerref"
      ],
      "tests/queries/tests.py": [
        "test_ticket7045"
      ],
      "tests/expressions/tests.py": [
        "test_nested_subquery_outer_ref_2",
        "test_nested_subquery",
        "test_nested_subquery_outer_ref_with_autofield",
        "test_annotation_with_nested_outerref"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-7606",
    "file_function": {
      "astropy/units/tests/test_units.py": [
        "test_unicode_policy",
        "test_initialisation",
        "test_cds_power",
        "test_unknown_unit3",
        "test_equiv_compose",
        "test_multiple_solidus",
        "test_unknown_unit",
        "test_invalid_type"
      ],
      "astropy/units/tests/test_quantity.py": [
        "test_comparison",
        "test_cgs"
      ],
      "astropy/units/tests/test_logarithmic.py": [
        "test_call_invalid_unit"
      ]
    }
  },
  {
    "instance_id": "django__django-12276",
    "file_function": {
      "tests/forms_tests/widget_tests/test_clearablefileinput.py": [
        "test_value_omitted_from_data"
      ],
      "tests/model_forms/tests.py": [
        "test_clear_and_file_contradiction",
        "test_full_clear",
        "test_default_filefield"
      ],
      "tests/forms_tests/widget_tests/test_fileinput.py": [
        "test_render"
      ],
      "tests/forms_tests/tests/test_forms.py": [
        "test_forms_with_file_fields"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-23262",
    "file_function": {
      "sympy/printing/tests/test_pycode.py": [
        "test_sqrt",
        "test_PythonCodePrinter",
        "test_frac"
      ],
      "sympy/printing/tests/test_lambdarepr.py": [
        "test_sqrt"
      ],
      "sympy/printing/tests/test_python.py": [
        "test_python_keyword_symbol_name_escaping",
        "test_python_functions"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-22714",
    "file_function": {
      "sympy/parsing/tests/test_sympy_parser.py": [
        "test_sympy_parser",
        "test_parsing_definitions",
        "test_function_evaluate_false"
      ],
      "sympy/geometry/tests/test_line.py": [
        "test_bisectors"
      ],
      "sympy/geometry/tests/test_point.py": [
        "test_arguments",
        "test_point",
        "test_unit",
        "test_transform",
        "test_Point2D",
        "test_dot",
        "test_point3D"
      ],
      "sympy/core/tests/test_sympify.py": [
        "test_sympyify_iterables",
        "test_issue_16859",
        "test_issue_6046",
        "test__sympify",
        "test_sympify_raises",
        "test_issue_4798_None"
      ]
    }
  },
  {
    "instance_id": "pylint-dev__pylint-4970",
    "file_function": {
      "tests/lint/unittest_lint.py": [
        "test_load_plugin_config_file"
      ],
      "tests/test_functional.py": [
        "test_functional"
      ],
      "tests/checkers/unittest_similar.py": [
        "test_get_map_data",
        "test_ignore_docstrings"
      ]
    }
  },
  {
    "instance_id": "django__django-13012",
    "file_function": {
      "tests/aggregation_regress/tests.py": [
        "test_aggregate_fexpr"
      ],
      "tests/aggregation/tests.py": [
        "test_group_by_exists_annotation"
      ]
    }
  },
  {
    "instance_id": "django__django-11239",
    "file_function": {
      "tests/dbshell/test_postgresql.py": [
        "test_basic",
        "test_column",
        "test_accent"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-14365",
    "file_function": {
      "astropy/io/ascii/tests/test_qdp.py": [
        "test_get_lines_from_qdp",
        "test_read_write_simple",
        "test_roundtrip",
        "test_roundtrip_example_comma",
        "test_roundtrip_example"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-6744",
    "file_function": {
      "xarray/tests/test_rolling.py": [
        "test_rolling_repr",
        "test_ndrolling_construct",
        "test_rolling_reduce",
        "test_rolling_keep_attrs",
        "test_rolling_properties",
        "test_rolling_iter",
        "test_rolling_wrapped_dask"
      ]
    }
  },
  {
    "instance_id": "django__django-11095",
    "file_function": {
      "tests/admin_inlines/tests.py": [
        "test_inline_add_m2m_view_only_perm",
        "test_inline_change_m2m_view_only_perm"
      ],
      "tests/admin_views/tests.py": [
        "test_simple_inline_permissions"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-9711",
    "file_function": {
      "tests/test_environment.py": [
        "test_config_status"
      ],
      "tests/test_config.py": [
        "test_needs_sphinx"
      ]
    }
  },
  {
    "instance_id": "django__django-17084",
    "file_function": {
      "tests/aggregation_regress/tests/AggregationTests/test_allow_distinct.py": [
        "test_allow_distinct"
      ],
      "tests/expressions_window/tests/WindowFunctionTests/test_heterogeneous_filter.py": [
        "test_heterogeneous_filter"
      ],
      "tests/expressions_window/tests/NonQueryWindowTests/test_invalid_order_by.py": [
        "test_invalid_order_by"
      ],
      "tests/expressions/tests/ReprTests/test_filtered_aggregates.py": [
        "test_filtered_aggregates"
      ],
      "tests/expressions_window/tests/WindowUnsupportedTests/test_unsupported_backend.py": [
        "test_unsupported_backend"
      ],
      "tests/expressions_case/tests/CaseExpressionTests/test_annotate_with_aggregation_in_condition.py": [
        "test_annotate_with_aggregation_in_condition"
      ],
      "tests/expressions_window/tests/WindowFunctionTests/test_dense_rank.py": [
        "test_dense_rank"
      ],
      "tests/aggregation/tests/AggregateTestCase/test_aggregation_default_after_annotation.py": [
        "test_aggregation_default_after_annotation"
      ],
      "tests/aggregation/tests/AggregateTestCase/test_aggregation_default_unsupported_by_count.py": [
        "test_aggregation_default_unsupported_by_count"
      ],
      "tests/expressions_window/tests.py": [
        "test_range_unbound",
        "test_row_range_rank",
        "test_fail_insert"
      ],
      "tests/aggregation/tests/AggregateTestCase/test_complex_aggregations_require_kwarg.py": [
        "test_complex_aggregations_require_kwarg"
      ],
      "tests/aggregation/tests/AggregateTestCase/test_aggregate_join_transform.py": [
        "test_aggregate_join_transform"
      ],
      "tests/expressions_window/tests/NonQueryWindowTests/test_invalid_source_expression.py": [
        "test_invalid_source_expression"
      ],
      "tests/expressions_case/tests/CaseExpressionTests/test_filter_with_aggregation_in_value.py": [
        "test_filter_with_aggregation_in_value"
      ],
      "tests/aggregation/tests/AggregateTestCase/test_multi_arg_aggregate.py": [
        "test_multi_arg_aggregate"
      ],
      "tests/aggregation/tests/AggregateTestCase/test_aggregate_over_aggregate.py": [
        "test_aggregate_over_aggregate"
      ],
      "tests/expressions/tests/BasicExpressionsTests/test_order_by_multiline_sql.py": [
        "test_order_by_multiline_sql"
      ],
      "tests/queries/test_query/TestQuery/test_filter_conditional.py": [
        "test_filter_conditional"
      ],
      "tests/aggregation_regress/tests/AggregationTests/test_more_more_more.py": [
        "test_more_more_more"
      ],
      "tests/aggregation/tests/AggregateTestCase/test_aggregation_default_passed_another_aggregate.py": [
        "test_aggregation_default_passed_another_aggregate"
      ],
      "tests/aggregation/tests/AggregateTestCase/test_aggregation_default_integer.py": [
        "test_aggregation_default_integer"
      ],
      "tests/expressions_case/tests/CaseExpressionTests/test_filter_with_aggregation_in_condition.py": [
        "test_filter_with_aggregation_in_condition"
      ],
      "tests/db_functions/comparison/test_coalesce/CoalesceTests/test_ordering.py": [
        "test_ordering"
      ],
      "tests/expressions_window/tests/WindowFunctionTests/test_lag_decimalfield.py": [
        "test_lag_decimalfield"
      ]
    }
  },
  {
    "instance_id": "django__django-15561",
    "file_function": {
      "tests/schema/tests.py": [
        "test_m2m",
        "test_alter_field_fk_keeps_index",
        "test_rename_referenced_field"
      ],
      "tests/migrations/test_operations.py": [
        "test_alter_field_m2m",
        "test_rename_model_with_m2m",
        "test_rename_field_case"
      ],
      "tests/migrations/test_executor.py": [
        "test_alter_id_type_with_fk"
      ]
    }
  },
  {
    "instance_id": "django__django-13406",
    "file_function": {
      "tests/get_or_create/tests.py": [
        "test_get_or_create_with_invalid_defaults",
        "test_something",
        "test_update_callable_default",
        "test_defaults_exact",
        "test_update_or_create_with_invalid_defaults",
        "test_property_attribute_without_setter_defaults",
        "test_get_or_create_method_with_get"
      ],
      "tests/queries/test_bulk_update.py": [
        "test_no_fields",
        "test_only_concrete_fields_allowed",
        "test_invalid_batch_size",
        "test_empty_objects",
        "test_batch_size",
        "test_custom_pk",
        "test_unsaved_models",
        "test_booleanfield",
        "test_update_custom_primary_key"
      ],
      "tests/queries/test_qs_combinators.py": [
        "test_union_with_extra_and_values_list",
        "test_intersection_with_empty_qs",
        "test_unsupported_operations_on_combined_qs",
        "test_count_union",
        "test_ordering_by_alias",
        "test_difference_with_empty_qs",
        "test_union_with_empty_qs"
      ],
      "tests/update/tests.py": [
        "test_nonempty_update",
        "test_update_slice_fail"
      ],
      "tests/queryset_pickle/tests.py": [
        "test_model_pickle",
        "test_missing_django_version_unpickling",
        "test_in_lookup_queryset_evaluation",
        "test_specialized_queryset",
        "test_pickle_prefetch_queryset_still_usable",
        "test_unsupported_unpickle",
        "test_pickle_prefetch_related_with_m2m_and_objects_deletion"
      ],
      "tests/queries/test_iterator.py": [
        "test_iterator_chunk_size",
        "test_iterator_invalid_chunk_size"
      ],
      "tests/custom_methods/tests.py": [
        "test_custom_methods"
      ],
      "tests/queries/test_explain.py": [
        "test_basic"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-7462",
    "file_function": {
      "tests/test_domain_py.py": [
        "test_pymethod_options",
        "test_pydata_signature_old",
        "test_pyobject_prefix",
        "test_pyfunction",
        "test_pydecorator_signature",
        "test_pydecoratormethod_signature"
      ],
      "tests/test_environment.py": [
        "test_images"
      ]
    }
  },
  {
    "instance_id": "django__django-13837",
    "file_function": {
      "tests/utils_tests/test_autoreload.py": [
        "test_warnoptions",
        "test_entrypoint_fallback",
        "test_exe_fallback",
        "test_run_as_module",
        "test_python_m_django",
        "test_manage_py",
        "test_raises_runtimeerror"
      ]
    }
  },
  {
    "instance_id": "django__django-16429",
    "file_function": {
      "tests/utils_tests/test_timesince.py": [
        "test_leap_year",
        "test_leap_year_new_years_eve",
        "test_depth_invalid"
      ],
      "tests/template_tests/filter_tests/test_timesince.py": [
        "test_timesince19",
        "test_timesince09"
      ],
      "tests/template_tests/filter_tests/test_timeuntil.py": [
        "test_timeuntil14"
      ]
    }
  },
  {
    "instance_id": "django__django-15280",
    "file_function": {
      "tests/prefetch_related/tests.py": [
        "test_custom_qs",
        "test_clear",
        "test_parent_link_prefetch",
        "test_prefetch_GFK_fk_pk",
        "test_using_is_honored_inheritance",
        "test_add_clears_prefetched_objects"
      ],
      "tests/defer/tests.py": [
        "test_only",
        "test_only_none_raises_error"
      ],
      "tests/one_to_one/tests.py": [
        "test_assign_none_reverse_relation",
        "test_assign_none_to_null_cached_reverse_relation",
        "test_setter"
      ],
      "tests/model_fields/test_foreignkey.py": [
        "test_non_local_to_field"
      ],
      "tests/many_to_one/tests.py": [
        "test_fk_assignment_and_related_object_cache",
        "test_reverse_foreign_key_instance_to_field_caching",
        "test_reverse_assignment_deprecation"
      ],
      "tests/foreign_object/tests.py": [
        "test_prefetch_foreignkey_forward_works"
      ],
      "tests/m2m_regress/tests.py": [
        "test_m2m_inheritance_symmetry"
      ],
      "tests/select_related_onetoone/tests.py": [
        "test_not_followed_by_default",
        "test_follow_inheritance"
      ]
    }
  },
  {
    "instance_id": "django__django-13315",
    "file_function": {
      "tests/get_or_create/tests.py": [
        "test_get_or_create_with_invalid_defaults",
        "test_create_with_many",
        "test_savepoint_rollback",
        "test_update"
      ],
      "tests/many_to_one/tests.py": [
        "test_add_after_prefetch",
        "test_explicit_fk",
        "test_set_after_prefetch",
        "test_deepcopy_and_circular_references"
      ],
      "tests/queries/tests.py": [
        "test_subquery_exclude_outerref",
        "test_invalid_index",
        "test_named_values_list_flat",
        "test_ticket9997",
        "test_or_with_rhs_slice",
        "test_slice_subquery_and_query",
        "test_ticket7181",
        "test_ticket_10790_combine",
        "test_ticket14729",
        "test_values_queryset_lookup",
        "test_slicing_cannot_filter_queryset_once_sliced",
        "test_can_get_items_using_index_and_slice_notation",
        "test_ticket7235",
        "test_tickets_7698_10202",
        "test_ticket24525",
        "test_ticket22023",
        "test_correct_lookup",
        "test_slicing_with_steps_can_be_used",
        "test_empty_queryset",
        "test_named_values_list_expression_with_default_alias",
        "test_slicing_cannot_reorder_queryset_once_sliced",
        "test_ticket7791"
      ],
      "tests/queries/test_qs_combinators.py": [
        "test_intersection_with_empty_qs",
        "test_unsupported_operations_on_combined_qs",
        "test_get_with_filters_unsupported_on_combined_qs",
        "test_difference_with_empty_qs",
        "test_union_with_empty_qs"
      ],
      "tests/filtered_relation/tests.py": [
        "test_only_not_supported",
        "test_with_prefetch_related"
      ],
      "tests/annotations/tests.py": [
        "test_aggregate_over_annotation",
        "test_dates_alias",
        "test_arguments_must_be_expressions"
      ],
      "tests/select_related/tests.py": [
        "test_select_related_with_extra",
        "test_select_related_after_values_list",
        "test_none_clears_list"
      ],
      "tests/ordering/tests.py": [
        "test_no_reordering_after_slicing",
        "test_orders_nulls_first_on_filtered_subquery"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-7571",
    "file_function": {
      "testing/test_fixture.py": [
        "test_clear",
        "test_caplog_can_override_global_log_level"
      ]
    }
  },
  {
    "instance_id": "django__django-15375",
    "file_function": {
      "tests/aggregation_regress/tests.py": [
        "test_allow_distinct",
        "test_annotate_and_join"
      ],
      "tests/aggregation/tests.py": [
        "test_aggregation_default_unsupported_by_count",
        "test_aggregation_default_expression",
        "test_aggregate_annotation"
      ],
      "tests/aggregation/test_filter_argument.py": [
        "test_filtered_aggregate_on_annotate",
        "test_filtered_aggregate_ref_multiple_subquery_annotation"
      ],
      "tests/expressions/tests.py": [
        "test_aggregate_subquery_annotation"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-25775",
    "file_function": {
      "lib/matplotlib/tests/test_text.py": [
        "test_nonfinite_pos",
        "test_usetex_is_copied"
      ],
      "lib/matplotlib/tests/test_axes.py": [
        "test_centered_bar_label_label_beyond_limits"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-13877",
    "file_function": {
      "sympy/matrices/tests/test_matrices.py": [
        "test_deprecated",
        "test_determinant",
        "test_errors",
        "test_rank",
        "test_det_LU_decomposition",
        "test_inverse",
        "test_jordan_form"
      ],
      "sympy/matrices/tests/test_commonmatrix.py": [
        "test_cofactor_and_minors",
        "test_det",
        "test_col_op",
        "test_echelon_form",
        "test_adjugate",
        "test_row_op"
      ],
      "sympy/matrices/tests/test_sparse.py": [
        "test_sparse_matrix"
      ],
      "sympy/matrices/expressions/tests/test_determinant.py": [
        "test_det"
      ]
    }
  },
  {
    "instance_id": "django__django-11848",
    "file_function": {
      "tests/utils_tests/test_http.py": [
        "test_parsing_year_less_than_70",
        "test_parsing_rfc850"
      ],
      "tests/conditional_processing/tests.py": [
        "test_if_unmodified_since",
        "test_if_modified_since"
      ]
    }
  },
  {
    "instance_id": "psf__requests-1724",
    "file_function": {
      "tests/test_requests.py": [
        "test_DIGEST_AUTH_RETURNS_COOKIE",
        "test_DIGEST_STREAM",
        "test_requests_in_history_are_not_overridden",
        "test_cannot_send_unprepared_requests",
        "test_cookie_persists_via_api",
        "test_DIGEST_HTTP_200_OK_GET",
        "test_HTTP_302_ALLOW_REDIRECT_GET"
      ]
    }
  },
  {
    "instance_id": "django__django-14404",
    "file_function": {
      "tests/requests/tests.py": [
        "test_httprequest_full_path_with_query_string_and_fragment",
        "test_httprequest_full_path"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-13033",
    "file_function": {
      "astropy/timeseries/tests/test_sampled.py": [
        "test_required_columns",
        "test_empty_initialization"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-7757",
    "file_function": {
      "tests/test_domain_py.py": [
        "test_pyfunction_signature_full_py38",
        "test_domain_py_xrefs",
        "test_pymethod_options",
        "test_pyfunction",
        "test_pydecorator_signature",
        "test_pyfunction_signature_full",
        "test_function_signatures",
        "test_pydecoratormethod_signature"
      ]
    }
  },
  {
    "instance_id": "django__django-15127",
    "file_function": {
      "tests/messages_tests/test_mixins.py": [
        "test_set_messages_success_on_delete"
      ]
    }
  },
  {
    "instance_id": "django__django-11211",
    "file_function": {
      "tests/contenttypes_tests/test_fields.py": [
        "test_incorrect_get_prefetch_queryset_arguments"
      ],
      "tests/prefetch_related/tests.py": [
        "test_nullable_GFK"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-4966",
    "file_function": {
      "xarray/tests/test_backends.py": [
        "test_source_encoding_always_present",
        "test_open_dataset",
        "test_variable_order"
      ]
    }
  },
  {
    "instance_id": "pylint-dev__pylint-4551",
    "file_function": {
      "tests/unittest_pyreverse_diadefs.py": [
        "test_functional_relation_extraction",
        "test_regression_dataclasses_inference"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-24870",
    "file_function": {
      "lib/matplotlib/tests/test_contour.py": [
        "test_contour_manual",
        "test_contourf_log_extension"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-13974",
    "file_function": {
      "sympy/physics/quantum/tests/test_tensorproduct.py": [
        "test_eval_trace",
        "test_tensor_product_dagger",
        "test_tensor_product_commutator"
      ]
    }
  },
  {
    "instance_id": "django__django-16100",
    "file_function": {
      "tests/admin_views/tests.py": [
        "test_disallowed_filtering",
        "test_missing_slash_append_slash_true_without_final_catch_all_view",
        "test_list_editable_action_submit",
        "test_missing_slash_append_slash_true",
        "test_post_messages"
      ],
      "tests/admin_changelist/tests.py": [
        "test_clear_all_filters_link"
      ],
      "tests/admin_views/test_actions.py": [
        "test_model_admin_default_delete_action"
      ]
    }
  },
  {
    "instance_id": "django__django-14534",
    "file_function": {
      "tests/forms_tests/tests/test_forms.py": [
        "test_changed_data",
        "test_widget_output",
        "test_error_html_required_html_classes",
        "test_boundfield_invalid_index",
        "test_boundfield_slice",
        "test_templates_with_forms",
        "test_hidden_initial_gets_id",
        "test_auto_id_on_form_and_field",
        "test_boundfield_id_for_label",
        "test_forms_with_radio",
        "test_boundfield_widget_type",
        "test_form_with_iterable_boundfield_id",
        "test_boundfield_css_classes"
      ]
    }
  },
  {
    "instance_id": "django__django-11603",
    "file_function": {
      "tests/aggregation_regress/tests.py": [
        "test_allow_distinct",
        "test_more_more_more"
      ],
      "tests/aggregation/tests.py": [
        "test_multi_arg_aggregate",
        "test_complex_aggregations_require_kwarg"
      ],
      "tests/expressions/tests.py": [
        "test_filtered_aggregates"
      ],
      "tests/aggregation/test_filter_argument.py": [
        "test_filtered_aggregate_on_annotate"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-25122",
    "file_function": {
      "lib/matplotlib/tests/test_mlab.py": [
        "test_spectral_helper_raises",
        "test_csd_padding",
        "test_psd_windowarray_scale_by_freq",
        "test_specgram"
      ]
    }
  },
  {
    "instance_id": "django__django-14765",
    "file_function": {
      "tests/migrations/test_operations.py": [
        "test_alter_field_reloads_state_on_fk_with_to_field_related_name_target_type_change"
      ],
      "tests/migrations/test_autodetector.py": [
        "test_rename_field_foreign_key_to_field",
        "test_add_model_order_with_respect_to_index_constraint"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-24026",
    "file_function": {
      "lib/matplotlib/tests/test_axes.py": [
        "test_stackplot_baseline"
      ]
    }
  },
  {
    "instance_id": "django__django-16642",
    "file_function": {
      "tests/responses/test_fileresponse/FileResponseTests/test_content_length_nonzero_starting_position_file_seekable_no_tell.py": [
        "test_content_length_nonzero_starting_position_file_seekable_no_tell"
      ],
      "tests/responses/test_fileresponse/FileResponseTests/test_content_disposition_file.py": [
        "test_content_disposition_file"
      ],
      "tests/responses/test_fileresponse/FileResponseTests/test_content_length_nonzero_starting_position_buffer.py": [
        "test_content_length_nonzero_starting_position_buffer"
      ],
      "tests/responses/test_fileresponse/FileResponseTests/test_file_from_named_pipe_response.py": [
        "test_file_from_named_pipe_response"
      ],
      "tests/responses/test_fileresponse/FileResponseTests/test_content_type_buffer_named.py": [
        "test_content_type_buffer_named"
      ],
      "tests/responses/test_fileresponse/FileResponseTests/test_response_nonzero_starting_position.py": [
        "test_response_nonzero_starting_position"
      ],
      "tests/responses/test_fileresponse/FileResponseTests/test_content_length_nonzero_starting_position_file.py": [
        "test_content_length_nonzero_starting_position_file"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-8399",
    "file_function": {
      "testing/test_unittest.py": [
        "test_runTest_method",
        "test_setup",
        "test_no_teardown_if_setupclass_failed",
        "test_do_class_cleanups_on_setupclass_failure"
      ]
    }
  },
  {
    "instance_id": "django__django-14792",
    "file_function": {
      "tests/utils_tests/test_timezone.py": [
        "test_override_string_tz"
      ],
      "tests/db_functions/datetime/test_extract_trunc.py": [
        "test_extract_func_explicit_timezone_priority"
      ],
      "tests/timezones/tests.py": [
        "test_query_convert_timezones"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-18763",
    "file_function": {
      "sympy/printing/tests/test_latex.py": [
        "test_latex_subs",
        "test_latex_commutator",
        "test_latex_basic",
        "test_latex_functions",
        "test_latex_Piecewise",
        "test_issue_7117",
        "test_issue_13651",
        "test_latex_order"
      ]
    }
  },
  {
    "instance_id": "django__django-13513",
    "file_function": {
      "tests/view_tests/tests/test_debug.py": [
        "test_request_with_items_key",
        "test_encoding_error",
        "test_template_not_found_error",
        "test_no_template_source_loaders",
        "test_reporting_frames_without_source",
        "test_template_encoding",
        "test_reporting_frames_for_cyclic_reference"
      ]
    }
  },
  {
    "instance_id": "django__django-12325",
    "file_function": {
      "tests/model_regress/tests.py": [
        "test_model_init_too_many_args",
        "test_model_with_evaluate_method",
        "test_pk_validation",
        "test_empty_choice",
        "test_get_next_prev_by_field_unsaved",
        "test_get_next_prev_by_field"
      ],
      "tests/one_to_one/tests.py": [
        "test_nullable_o2o_delete",
        "test_assign_none_reverse_relation",
        "test_unsaved_object",
        "test_update_one_to_one_pk",
        "test_save_nullable_o2o_after_parent",
        "test_set_reverse_on_unsaved_object",
        "test_foreign_key"
      ],
      "tests/many_to_one/tests.py": [
        "test_set",
        "test_delete",
        "test_add",
        "test_fk_assignment_and_related_object_cache",
        "test_deepcopy_and_circular_references"
      ],
      "tests/model_fields/tests.py": [
        "test_choices_and_field_display",
        "test_overriding_inherited_FIELD_display"
      ],
      "tests/model_inheritance/tests.py": [
        "test_init_subclass",
        "test_unique_together",
        "test_select_related_defer",
        "test_update_parent_filtering",
        "test_eq",
        "test_abstract_parent_link",
        "test_related_objects_for_inherited_models"
      ],
      "tests/model_fields/test_foreignkey.py": [
        "test_warning_when_unique_true_on_fk"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-2905",
    "file_function": {
      "xarray/tests/test_variable.py": [
        "test_setitem_fancy"
      ]
    }
  },
  {
    "instance_id": "django__django-16255",
    "file_function": {
      "tests/sitemaps_tests/test_http.py": [
        "test_x_robots_sitemap",
        "test_simple_sitemap_custom_index_warning"
      ],
      "tests/sitemaps_tests/test_generic.py": [
        "test_generic_sitemap_index"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-25311",
    "file_function": {
      "lib/matplotlib/tests/test_legend.py": [
        "test_get_set_draggable"
      ],
      "lib/matplotlib/testing/decorators.py": [
        "test_pickle_load_from_subprocess"
      ],
      "lib/matplotlib/tests/test_pickle.py": [
        "test_complete"
      ]
    }
  },
  {
    "instance_id": "django__django-11964",
    "file_function": {
      "tests/model_fields/test_promises.py": [
        "test_CharField",
        "test_SlugField"
      ],
      "tests/model_fields/test_slugfield.py": [
        "test_slugfield_max_length"
      ],
      "tests/model_fields/test_integerfield.py": [
        "test_coercing",
        "test_invalid_value",
        "test_documented_range",
        "test_integerfield_raises_error_on_empty_input",
        "test_types"
      ],
      "tests/model_fields/test_charfield.py": [
        "test_assignment_from_choice_enum"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-21930",
    "file_function": {
      "sympy/physics/tests/test_secondquant.py": [
        "test_commutation",
        "test_create"
      ],
      "sympy/printing/tests/test_latex.py": [
        "test_latex_basic",
        "test_latex_bessel",
        "test_issue_9216",
        "test_Pow"
      ]
    }
  },
  {
    "instance_id": "django__django-15268",
    "file_function": {
      "tests/migrations/test_autodetector.py": [
        "test_partly_alter_foo_together",
        "test_add_model_order_with_respect_to_index_foo_together",
        "test_bases_first_mixed_case_app_label",
        "test_create_model_and_unique_together",
        "test_set_alter_order_with_respect_to_index_constraint_foo_together",
        "test_swappable_circular_multi_mti",
        "test_add_model_order_with_respect_to_index_constraint"
      ],
      "tests/migrations/test_optimizer.py": [
        "test_swapping_fields_names",
        "test_create_alter_unique_delete_model",
        "test_none_app_label"
      ]
    }
  },
  {
    "instance_id": "django__django-11532",
    "file_function": {
      "tests/mail/tests.py": [
        "test_console_stream_kwarg",
        "test_unicode_headers",
        "test_validate_multiline_headers",
        "test_header_injection",
        "test_dont_base64_encode_message_rfc822",
        "test_safe_mime_multipart"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-17655",
    "file_function": {
      "sympy/geometry/tests/test_point.py": [
        "test_point"
      ],
      "sympy/core/tests/test_arit.py": [
        "test_polar",
        "test_Mul_is_even_odd",
        "test_Mod",
        "test_Mul_is_negative_positive",
        "test_issue_5160_6087_6089_6090",
        "test_Mul_does_not_distribute_infinity",
        "test_ncmul",
        "test_mul_zero_detection",
        "test_Pow_is_real",
        "test_issue_6611a",
        "test_Mul_does_not_cancel_infinities",
        "test_Mul_with_zero_infinite",
        "test_Mul_hermitian_antihermitian",
        "test_denest_add_mul",
        "test_pow_im",
        "test_mul_flatten_oo",
        "test_Add_Mul_is_finite"
      ],
      "sympy/core/tests/test_expr.py": [
        "test_equals",
        "test_as_coeff_Mul",
        "test_leadterm",
        "test_is_algebraic_expr",
        "test_as_independent",
        "test_issue_6325",
        "test_eval_interval",
        "test_issue_10161",
        "test_noncommutative_expand_issue_3757",
        "test_issue_11877",
        "test_as_coefficients_dict",
        "test_as_leading_term4",
        "test_is_constant"
      ],
      "sympy/core/tests/test_function.py": [
        "test_issue_5399",
        "test_nfloat",
        "test_function__eval_nseries",
        "test_subs_in_derivative"
      ],
      "sympy/core/tests/test_subs.py": [
        "test_mul",
        "test_issue_6923",
        "test_subs_constants",
        "test_subs_noncommutative",
        "test_subs_AccumBounds",
        "test_subs_Matrix",
        "test_issue_5284",
        "test_issue_5651"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-10356",
    "file_function": {
      "testing/test_nodes.py": [
        "test_node_warning_enforces_warning_types",
        "test_node_warn_is_no_longer_only_pytest_warnings",
        "test_node_from_parent_disallowed_arguments"
      ],
      "testing/test_mark.py": [
        "test_mark_with_wrong_marker",
        "test_keyword_added_for_session",
        "test_addmarker_order",
        "test_no_match_directories_outside_the_suite",
        "test_parametrized_collect_with_wrong_args",
        "test_aliases"
      ],
      "testing/test_unittest.py": [
        "test_error_message_with_parametrized_fixtures",
        "test_setup",
        "test_traceback_pruning"
      ],
      "testing/test_session.py": [
        "test_basic_testitem_events"
      ],
      "testing/test_config.py": [
        "test_config_does_not_load_blocked_plugin_from_args",
        "test_options_on_small_file_do_not_blow_up"
      ],
      "testing/test_collection.py": [
        "test_fixture_scope_sibling_conftests"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-13031",
    "file_function": {
      "sympy/matrices/tests/test_matrices.py": [
        "test_errors",
        "test_issue_5321",
        "test_creation"
      ],
      "sympy/matrices/tests/test_sparse.py": [
        "test_sparse_matrix"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-3993",
    "file_function": {
      "xarray/tests/test_dataset.py": [
        "test_integrate",
        "test_trapz_datetime"
      ],
      "xarray/tests/test_units.py": [
        "test_computation"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-10614",
    "file_function": {
      "tests/test_ext_inheritance_diagram.py": [
        "test_inheritance_diagram_svg_html",
        "test_inheritance_diagram_latex_alias",
        "test_inheritance_diagram"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-13615",
    "file_function": {
      "sympy/sets/tests/test_sets.py": [
        "test_Complement",
        "test_issue_9637",
        "test_issue_9808",
        "test_complement"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-24661",
    "file_function": {
      "sympy/parsing/tests/test_sympy_parser.py": [
        "test_sympy_parser",
        "test_local_dict_symbol_to_fcn",
        "test_issue_22822",
        "test_convert_equals_signs",
        "test_builtins",
        "test_issue_7663",
        "test_parsing_definitions"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-9320",
    "file_function": {
      "tests/test_quickstart.py": [
        "test_extensions",
        "test_quickstart_all_answers",
        "test_quickstart_and_build",
        "test_do_prompt",
        "test_quickstart_defaults",
        "test_default_filename"
      ]
    }
  },
  {
    "instance_id": "django__django-15525",
    "file_function": {
      "tests/fixtures/tests.py": [
        "test_forward_reference_fk_natural_key",
        "test_circular_reference_natural_key",
        "test_forward_reference_m2m_natural_key"
      ],
      "tests/prefetch_related/tests.py": [
        "test_prefetch_GFK_fk_pk",
        "test_using_is_honored_inheritance",
        "test_custom_qs",
        "test_parent_link_prefetch"
      ],
      "tests/multiple_database/tests.py": [
        "test_foreign_key_relation"
      ],
      "tests/many_to_one/tests.py": [
        "test_fk_assignment_and_related_object_cache"
      ]
    }
  },
  {
    "instance_id": "django__django-14999",
    "file_function": {
      "tests/migrations/test_operations.py": [
        "test_rename_model_with_self_referential_m2m",
        "test_rename_m2m_target_model",
        "test_rename_model_with_m2m"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-24637",
    "file_function": {
      "lib/matplotlib/tests/test_offsetbox.py": [
        "test_picking",
        "test_annotationbbox_extents"
      ]
    }
  },
  {
    "instance_id": "django__django-14752",
    "file_function": {
      "tests/admin_views/test_autocomplete_view.py": [
        "test_custom_to_field_permission_denied",
        "test_custom_to_field",
        "test_limit_choices_to",
        "test_success"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-6197",
    "file_function": {
      "testing/test_collection.py": [
        "test_collect_sub_with_symlinks",
        "test_collectignore_via_conftest",
        "test_collect_pkg_init_and_file_in_args",
        "test_collect_init_tests"
      ],
      "testing/test_config.py": [
        "test_pytest_plugins_in_non_top_level_conftest_unsupported_pyargs"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-22871",
    "file_function": {
      "lib/matplotlib/tests/test_dates.py": [
        "test_concise_formatter_formats",
        "test_concise_formatter",
        "test_concise_formatter_show_offset",
        "test_concise_formatter_call"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-8269",
    "file_function": {
      "tests/test_build_linkcheck.py": [
        "test_defaults",
        "test_defaults_json",
        "test_linkcheck_request_headers",
        "test_auth",
        "test_anchors_ignored"
      ],
      "tests/test_build.py": [
        "test_build_all"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-23824",
    "file_function": {
      "sympy/physics/hep/tests/test_gamma_matrices.py": [
        "test_kahane_algorithm",
        "test_gamma_matrix_class"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-13989",
    "file_function": {
      "lib/matplotlib/tests/test_axes.py": [
        "test_hist_labels",
        "test_hist_step_log_bottom",
        "test_hist_stacked_bar",
        "test_hist_stacked_weighted",
        "test_hist_density",
        "test_length_one_hist",
        "test_hist_steplog",
        "test_hist_stacked_density",
        "test_hist_normed_density"
      ],
      "lib/matplotlib/tests/test_scale.py": [
        "test_logscale_nonpos_values"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-10466",
    "file_function": {
      "tests/test_build_gettext.py": [
        "test_gettext_index_entries",
        "test_build_single_pot",
        "test_build_gettext"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-15100",
    "file_function": {
      "sklearn/feature_extraction/tests/test_text.py": [
        "test_vectorizer_max_features",
        "test_count_binary_occurrences",
        "test_vectorizer_pipeline_grid_selection",
        "test_tfidf_vectorizer_setters",
        "test_tfidf_vectorizer_setter",
        "test_tfidfvectorizer_invalid_idf_attr",
        "test_tfidf_vectorizer_type",
        "test_char_ngram_analyzer",
        "test_vectorizer_inverse_transform",
        "test_tfidf_vectorizer_deprecationwarning",
        "test_vectorizer_string_object_as_input",
        "test_tfidfvectorizer_binary",
        "test_countvectorizer_empty_vocabulary",
        "test_vectorizer_min_df"
      ]
    }
  },
  {
    "instance_id": "django__django-13449",
    "file_function": {
      "tests/expressions_window/tests.py": [
        "test_range_n_preceding_and_following",
        "test_lead",
        "test_function_list_of_values",
        "test_unsupported_backend",
        "test_lag",
        "test_row_range_rank",
        "test_subquery_row_range_rank"
      ],
      "tests/aggregation/tests.py": [
        "test_avg_decimal_field"
      ],
      "tests/aggregation_regress/tests.py": [
        "test_aggregate_annotation"
      ]
    }
  },
  {
    "instance_id": "django__django-14373",
    "file_function": {
      "tests/utils_tests/test_dateformat.py": [
        "test_time_formats",
        "test_dateformat",
        "test_futuredates"
      ]
    }
  },
  {
    "instance_id": "django__django-13821",
    "file_function": {
      "tests/backends/sqlite/tests.py": [
        "test_pathlib_name",
        "test_constraint_checks_disabled_atomic_allowed",
        "test_check_sqlite_version"
      ]
    }
  },
  {
    "instance_id": "django__django-13810",
    "file_function": {
      "tests/test_client/tests.py": [
        "test_response_resolver_match",
        "test_exception_following_nested_client_request",
        "test_force_login_with_backend",
        "test_view_with_login_when_sessions_app_is_not_installed",
        "test_logout_cookie_sessions"
      ],
      "tests/handlers/tests.py": [
        "test_unawaited_response",
        "test_middleware_returns_none",
        "test_no_response"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-5809",
    "file_function": {
      "testing/test_pastebin.py": [
        "test_create_new_paste",
        "test_non_ascii_paste_text",
        "test_all"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-4695",
    "file_function": {
      "xarray/tests/test_dataarray.py": [
        "test_sortby",
        "test_polyfit",
        "test_loc_assign_dataarray",
        "test_to_dataframe",
        "test__title_for_slice_truncate",
        "test_argmin_dim",
        "test_inplace_math_automatic_alignment",
        "test_reduce_keepdims",
        "test_to_and_from_iris_dask",
        "test_expand_dims_error",
        "test_dataset_math",
        "test_setitem_dataarray",
        "test_dropna",
        "test_dot",
        "test_upsample_interpolate",
        "test_idxminmax_dask",
        "test_pad_coords",
        "test_drop_index_labels",
        "test_to_unstacked_dataset_raises_value_error",
        "test_loc_assign",
        "test_fillna",
        "test_shift",
        "test_roll_coords",
        "test_tail",
        "test_to_masked_array",
        "test_to_pandas",
        "test_reorder_levels",
        "test_head",
        "test_inplace_math_basics",
        "test_selection_multiindex_remove_unused",
        "test_to_and_from_cdms2_classic",
        "test_equals_failures",
        "test_matmul_align_coords",
        "test_properties",
        "test_dims",
        "test_groupby_math",
        "test_selection_multiindex",
        "test_to_dataset_split",
        "test_reindex_fill_value",
        "test_thin",
        "test_to_and_from_dict",
        "test_quantile",
        "test_real_and_imag",
        "test_chunk",
        "test_to_dataset_whole",
        "test_reset_coords",
        "test_contains",
        "test_pad_constant",
        "test_to_and_from_series",
        "test_align_override",
        "test_swap_dims",
        "test_rank",
        "test_argmax_dim",
        "test_combine_first"
      ],
      "xarray/tests/test_dataset.py": [
        "test_where",
        "test_sel_dataarray_mindex",
        "test_categorical_index",
        "test_dataset_math_errors",
        "test_sel_method",
        "test_trapz_datetime",
        "test_quantile",
        "test_broadcast_like",
        "test_sel",
        "test_differentiate",
        "test_to_stacked_array_to_unstacked_dataset_different_dimension"
      ],
      "xarray/tests/test_indexing.py": [
        "test_convert_unsorted_datetime_index_raises",
        "test_convert_label_indexer"
      ],
      "xarray/tests/test_dask.py": [
        "test_optimize",
        "test_persist_DataArray",
        "test_unify_chunks_shallow_copy",
        "test_compute",
        "test_ufuncs"
      ],
      "xarray/tests/test_missing.py": [
        "test_interpolate_na_2d"
      ]
    }
  },
  {
    "instance_id": "django__django-14053",
    "file_function": {
      "tests/staticfiles_tests/test_storage.py": [
        "test_file_change_after_collectstatic",
        "test_clear_empties_manifest"
      ]
    }
  },
  {
    "instance_id": "mwaskom__seaborn-3069",
    "file_function": {
      "tests/test_categorical.py": [
        "test_wide_array_input_data",
        "test_split_error",
        "test_draw_missing_boxes",
        "test_invalid_depths",
        "test_draw_missing_bars",
        "test_boxplots",
        "test_validate_inner",
        "test_redundant_hue_backcompat",
        "test_empty",
        "test_3d_input_data",
        "test_input_error",
        "test_scale_count",
        "test_wide_df_data",
        "test_specific_color",
        "test_count_x_and_y",
        "test_input_validation",
        "test_1d_input_data",
        "test_scale_width",
        "test_list_of_array_input_data",
        "test_valid_scales",
        "test_simple_pointplots",
        "test_dict_as_palette",
        "test_hue_offsets",
        "test_draw_violinplots_no_observations",
        "test_single_observation",
        "test_2d_input_data",
        "test_bad_plot_kind_error",
        "test_single_long_direct_inputs",
        "test_draw_single_observations",
        "test_pointplot_colors",
        "test_draw_missing_points",
        "test_draw_violinplots_single_observations",
        "test_missing_data",
        "test_nested_stats_with_units",
        "test_default_palette_with_many_levels",
        "test_order",
        "test_single_layer_stats_with_units",
        "test_violinplots",
        "test_draw_to_density",
        "test_draw_cis",
        "test_draw_points",
        "test_nested_width",
        "test_bad_scale",
        "test_scale_area",
        "test_plot_elements"
      ],
      "tests/_core/test_scales.py": [
        "test_tick_upto",
        "test_tick_locator",
        "test_label_type_checks",
        "test_label_unit",
        "test_color_defaults",
        "test_tick_every_between",
        "test_log_tick_upto",
        "test_tick_at",
        "test_log_tick_count",
        "test_fill",
        "test_tick_locator_input_check",
        "test_label_like_function",
        "test_tick_count_between",
        "test_label_empty_unit",
        "test_label_like_pattern",
        "test_log_tick_every",
        "test_label_like_string",
        "test_symlog_tick_default",
        "test_interval_tuple_numeric",
        "test_label_formatter",
        "test_tick_minor",
        "test_coordinate_transform_with_parameter",
        "test_interval_with_range_norm_and_transform",
        "test_color_with_transform",
        "test_label_unit_with_sep",
        "test_label_concise",
        "test_coordinate_transform_error",
        "test_tick_every"
      ],
      "tests/_core/test_plot.py": [
        "test_limits",
        "test_non_cross_wrapping"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-7982",
    "file_function": {
      "testing/test_collection.py": [
        "test_collectignore_exclude_on_option",
        "test_ignored_virtualenvs"
      ]
    }
  },
  {
    "instance_id": "pylint-dev__pylint-7277",
    "file_function": {
      "tests/test_pylint_runners.py": [
        "test_runner",
        "test_runner_with_arguments"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-6461",
    "file_function": {
      "xarray/tests/test_missing.py": [
        "test_interpolate",
        "test_interpolate_pd_compat"
      ],
      "xarray/tests/test_computation.py": [
        "test_where_attrs",
        "test_where",
        "test_apply_exclude",
        "test_apply_dask_parallelized_two_args",
        "test_dot",
        "test_apply_input_core_dimension",
        "test_dot_align_coords"
      ],
      "xarray/tests/test_groupby.py": [
        "test_ds_groupby_quantile",
        "test_da_groupby_quantile",
        "test_resample_min_count"
      ]
    }
  },
  {
    "instance_id": "django__django-11149",
    "file_function": {
      "tests/admin_views/tests.py": [
        "test_inline_file_upload_edit_validation_error_post",
        "test_should_be_able_to_edit_related_objects_on_change_view",
        "test_change_view_without_object_change_permission"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-8551",
    "file_function": {
      "tests/test_domain_py.py": [
        "test_optional_pyfunction_signature",
        "test_pyobject_prefix",
        "test_parse_annotation",
        "test_domain_py_xrefs",
        "test_pydata_signature_old",
        "test_get_full_qualified_name"
      ],
      "tests/test_ext_autosummary.py": [
        "test_empty_autosummary_generate"
      ],
      "tests/test_build.py": [
        "test_build_all"
      ]
    }
  },
  {
    "instance_id": "django__django-13401",
    "file_function": {
      "tests/model_inheritance/test_abstract_inheritance.py": [
        "test_multiple_inheritance_cannot_shadow_concrete_inherited_field",
        "test_multi_inheritance_field_clashes"
      ],
      "tests/model_inheritance_regress/tests.py": [
        "test_issue_7276"
      ],
      "tests/many_to_one/tests.py": [
        "test_reverse_selects"
      ],
      "tests/lookup/tests.py": [
        "test_isnull_non_boolean_value"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-15349",
    "file_function": {
      "sympy/algebras/tests/test_quaternion.py": [
        "test_quaternion_conversions"
      ]
    }
  },
  {
    "instance_id": "django__django-11490",
    "file_function": {
      "tests/queries/test_qs_combinators.py": [
        "test_union_with_extra_and_values_list",
        "test_difference_with_empty_qs",
        "test_intersection_with_values",
        "test_union_with_empty_qs",
        "test_order_raises_on_non_selected_column",
        "test_intersection_with_empty_qs",
        "test_qs_with_subcompound_qs",
        "test_unsupported_ordering_slicing_raises_db_error"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-7490",
    "file_function": {
      "testing/test_skipping.py": [
        "test_imperativeskip_on_xfail_test",
        "test_mark_xfail_item",
        "test_xfail_not_run_xfail_reporting",
        "test_xfail_condition_keyword",
        "test_xfail_raises",
        "test_strict_xfail_default_from_file",
        "test_xfail_imperative",
        "test_strict_xfail",
        "test_dynamic_xfail_no_run"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-20826",
    "file_function": {
      "lib/matplotlib/tests/test_axes.py": [
        "test_reset_grid",
        "test_mollweide_inverse_forward_closure",
        "test_mollweide_grid",
        "test_minorticks_on_rcParams_both",
        "test_mollweide_forward_inverse_closure"
      ],
      "lib/mpl_toolkits/tests/test_axes_grid.py": [
        "test_imagegrid_cbar_mode_edge"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-26208",
    "file_function": {
      "lib/matplotlib/tests/test_axes.py": [
        "test_twinx_axis_scales",
        "test_twin_remove",
        "test_bar_leading_nan",
        "test_limits_empty_data",
        "test_stackplot",
        "test_stackplot_baseline",
        "test_twinx_knows_limits"
      ],
      "lib/matplotlib/tests/test_figure.py": [
        "test_savefig_locate_colorbar"
      ]
    }
  },
  {
    "instance_id": "django__django-13658",
    "file_function": {
      "tests/bash_completion/tests.py": [
        "test_completed_subcommand",
        "test_django_admin_py",
        "test_manage_py",
        "test_subcommands"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-23476",
    "file_function": {
      "lib/matplotlib/tests/test_figure.py": [
        "test_deepcopy",
        "test_subfigure_dpi"
      ],
      "lib/matplotlib/tests/test_pickle.py": [
        "test_complete",
        "test_polar"
      ],
      "lib/matplotlib/tests/test_image.py": [
        "test_imsave_fspath"
      ]
    }
  },
  {
    "instance_id": "django__django-15022",
    "file_function": {
      "tests/admin_views/tests.py": [
        "test_exact_matches",
        "test_search_with_spaces",
        "test_pluggable_search"
      ],
      "tests/admin_changelist/tests.py": [
        "test_spanning_relations_with_custom_lookup_in_search_fields",
        "test_custom_lookup_in_search_fields",
        "test_pk_in_search_fields",
        "test_custom_lookup_with_pk_shortcut"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-11310",
    "file_function": {
      "sklearn/model_selection/tests/test_search.py": [
        "test_return_train_score_warn",
        "test_unsupervised_grid_search",
        "test_no_refit",
        "test_grid_search_fit_params_deprecation",
        "test_transform_inverse_transform_round_trip",
        "test_grid_search_fit_params_two_places",
        "test_grid_search",
        "test_search_train_scores_set_to_false"
      ]
    }
  },
  {
    "instance_id": "django__django-14017",
    "file_function": {
      "tests/expressions/tests.py": [
        "test_subquery",
        "test_boolean_expression_combined",
        "test_and",
        "test_reversed_and"
      ],
      "tests/queries/test_q.py": [
        "test_combine_not_q_object",
        "test_combine_and_empty"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-14711",
    "file_function": {
      "sympy/physics/vector/tests/test_functions.py": [
        "test_operator_match"
      ],
      "sympy/physics/vector/tests/test_output.py": [
        "test_output_type"
      ]
    }
  },
  {
    "instance_id": "django__django-12193",
    "file_function": {
      "tests/forms_tests/widget_tests/test_checkboxinput.py": [
        "test_render_check_test",
        "test_render_value",
        "test_render_true"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-13328",
    "file_function": {
      "sklearn/linear_model/tests/test_huber.py": [
        "test_huber_warm_start",
        "test_huber_and_sgd_same_results",
        "test_huber_sample_weights",
        "test_huber_scaling_invariant"
      ]
    }
  },
  {
    "instance_id": "django__django-13516",
    "file_function": {
      "tests/migrations/test_commands.py": [
        "test_migrate_with_system_checks",
        "test_migrate",
        "test_migrate_app_name_specified_as_label",
        "test_migrate_not_reflected_changes",
        "test_sqlmigrate_forwards",
        "test_migrate_fake_initial",
        "test_migrate_check",
        "test_migrate_conflict_exit",
        "test_ambiguous_prefix",
        "test_migrate_nonexistent_app_label",
        "test_migrations_no_operations",
        "test_migrate_syncdb_deferred_sql_executed_with_schemaeditor",
        "test_app_without_migrations",
        "test_migrate_syncdb_app_with_migrations",
        "test_sqlmigrate_replaced_migration",
        "test_migrate_syncdb_app_label",
        "test_unknown_prefix",
        "test_migrate_check_plan",
        "test_sqlmigrate_backwards"
      ]
    }
  },
  {
    "instance_id": "django__django-9296",
    "file_function": {
      "tests/pagination/tests.py": [
        "test_first_page",
        "test_get_page",
        "test_paginating_unordered_object_list_raises_warning",
        "test_get_page_empty_object_list_and_allow_empty_first_page_false",
        "test_invalid_page_number",
        "test_paginator"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-14309",
    "file_function": {
      "astropy/io/fits/tests/test_connect.py": [
        "test_read_from_hdulist_with_hdu_0",
        "test_simple",
        "test_simple_pathlib",
        "test_unit_warnings_read_write",
        "test_read_from_hdulist",
        "test_read_with_nonstandard_units"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-21568",
    "file_function": {
      "lib/matplotlib/tests/test_dates.py": [
        "test_locator_set_formatter",
        "test_concise_formatter_show_offset",
        "test_concise_formatter_usetex",
        "test_concise_formatter_subsecond",
        "test_date_formatter_usetex",
        "test_RRuleLocator",
        "test_concise_formatter",
        "test_concise_formatter_formats",
        "test_concise_formatter_zformats",
        "test_date_formatter_callable"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-9658",
    "file_function": {
      "tests/test_ext_autodoc.py": [
        "test_format_signature",
        "test_parse_name",
        "test_autodoc_cached_property",
        "test_autodoc_member_order",
        "test_canonical",
        "test_autodoc_inner_class",
        "test_final",
        "test_autodoc_inherited_members_Base",
        "test_singledispatch",
        "test_cython",
        "test_autodoc_imported_members",
        "test_autodoc_warnings",
        "test_abstractmethods",
        "test_overload",
        "test_autodoc_module_member_order",
        "test_autodoc_noindex",
        "test_hide_value",
        "test_autodoc_attributes"
      ],
      "tests/test_ext_autodoc_configs.py": [
        "test_autodoc_class_signature_separated_new",
        "test_autodoc_class_signature_separated_init",
        "test_autoclass_content_and_docstring_signature_both",
        "test_autodoc_default_options_with_values",
        "test_autodoc_typehints_signature",
        "test_autoclass_content_both",
        "test_mocked_module_imports",
        "test_autodoc_typehints_description_and_type_aliases",
        "test_autoclass_content_and_docstring_signature_init"
      ],
      "tests/test_ext_autodoc_autoclass.py": [
        "test_properties",
        "test_uninitialized_attributes",
        "test_show_inheritance_for_subclass_of_generic_type",
        "test_autodoc_process_bases",
        "test_slots_attribute",
        "test_class_alias_having_doccomment",
        "test_inherited_instance_variable"
      ],
      "tests/test_ext_autodoc_private_members.py": [
        "test_private_field_and_private_members"
      ],
      "tests/test_ext_autodoc_mock.py": [
        "test_MockObject"
      ],
      "tests/test_ext_autodoc_events.py": [
        "test_process_docstring",
        "test_skip_module_member"
      ],
      "tests/test_ext_autodoc_autofunction.py": [
        "test_singledispatch",
        "test_coroutine"
      ],
      "tests/test_ext_autodoc_automodule.py": [
        "test_subclass_of_mocked_object"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-26291",
    "file_function": {
      "lib/matplotlib/tests/test_offsetbox.py": [
        "test_picking",
        "test_annotationbbox_extents"
      ],
      "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py": [
        "test_inset_axes_complete"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-10297",
    "file_function": {
      "sklearn/linear_model/tests/test_ridge.py": [
        "test_class_weights_cv",
        "test_ridgecv_sample_weight",
        "test_ridgecv_store_cv_values",
        "test_class_weight_vs_sample_weight"
      ]
    }
  },
  {
    "instance_id": "django__django-16595",
    "file_function": {
      "tests/migrations/test_commands.py": [
        "test_makemigrations_interactive_not_null_addition",
        "test_makemigrations_interactive_not_null_alteration"
      ],
      "tests/migrations/test_optimizer.py": [
        "test_alter_field_delete_field",
        "test_alter_field_rename_field"
      ]
    }
  },
  {
    "instance_id": "django__django-12663",
    "file_function": {
      "tests/queries/tests.py": [
        "test_subquery_exclude_outerref",
        "test_tickets_8921_9188",
        "test_correct_lookup",
        "test_exclude_many_to_many",
        "test_ticket7155",
        "test_error_raised_on_filter_with_dictionary",
        "test_tickets_6180_6203"
      ],
      "tests/queries/test_query.py": [
        "test_transform",
        "test_foreign_key",
        "test_filter_non_conditional"
      ],
      "tests/queries/test_qs_combinators.py": [
        "test_union_with_values_list_on_annotated_and_unannotated"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-14508",
    "file_function": {
      "astropy/io/fits/tests/test_diff.py": [
        "test_floating_point_atol",
        "test_ignore_blank_cards",
        "test_identical_comp_image_hdus"
      ],
      "astropy/io/fits/tests/test_core.py": [
        "test_unfixable_missing_card"
      ],
      "astropy/io/fits/tests/test_checksum.py": [
        "test_scaled_data_auto_rescale"
      ]
    }
  },
  {
    "instance_id": "django__django-11276",
    "file_function": {
      "tests/template_tests/filter_tests/test_escape.py": [
        "test_escape_lazy_string",
        "test_escape01"
      ],
      "tests/template_tests/filter_tests/test_force_escape.py": [
        "test_non_string_input"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-10435",
    "file_function": {
      "tests/test_build_latex.py": [
        "test_writer",
        "test_footnote",
        "test_latex_code_role"
      ]
    }
  },
  {
    "instance_id": "django__django-14539",
    "file_function": {
      "tests/template_tests/filter_tests/test_urlize.py": [
        "test_word_with_dot",
        "test_urlize08",
        "test_urls",
        "test_email",
        "test_trailing_multiple_punctuation",
        "test_urlize07",
        "test_autoescape",
        "test_wrapping_characters"
      ],
      "tests/template_tests/filter_tests/test_urlizetrunc.py": [
        "test_urlizetrunc02",
        "test_urlizetrunc01",
        "test_autoescape"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-22080",
    "file_function": {
      "sympy/printing/tests/test_pycode.py": [
        "test_issue_14283",
        "test_frac",
        "test_PythonCodePrinter"
      ]
    }
  },
  {
    "instance_id": "django__django-13343",
    "file_function": {
      "tests/field_deconstruction/tests.py": [
        "test_file_field",
        "test_image_field"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-21596",
    "file_function": {
      "sympy/sets/tests/test_sets.py": [
        "test_Complement",
        "test_contains",
        "test_universalset",
        "test_is_subset"
      ],
      "sympy/sets/tests/test_fancysets.py": [
        "test_ComplexRegion_union"
      ],
      "sympy/sets/tests/test_conditionset.py": [
        "test_flatten",
        "test_CondSet"
      ]
    }
  },
  {
    "instance_id": "django__django-14771",
    "file_function": {
      "tests/utils_tests/test_autoreload.py": [
        "test_entrypoint_fallback",
        "test_exe_fallback",
        "test_manage_py",
        "test_python_m_django",
        "test_raises_runtimeerror",
        "test_run_as_non_django_module_non_package",
        "test_module_no_spec"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-8638",
    "file_function": {
      "tests/test_ext_autodoc.py": [
        "test_format_signature",
        "test_parse_name",
        "test_partialmethod",
        "test_autodoc_member_order",
        "test_autodoc_inner_class",
        "test_final",
        "test_autodoc_inherited_members_Base",
        "test_cython",
        "test_autodoc_imported_members",
        "test_autodoc_warnings",
        "test_new_documenter",
        "test_overload",
        "test_autodoc_module_member_order",
        "test_autodoc_noindex",
        "test_autodoc_typed_instance_variables",
        "test_partialmethod_undoc_members",
        "test_autodoc_attributes"
      ],
      "tests/test_ext_autodoc_configs.py": [
        "test_autodoc_typehints_description",
        "test_autoclass_content_and_docstring_signature_both",
        "test_autodoc_default_options_with_values",
        "test_autoclass_content_init",
        "test_autoclass_content_both"
      ],
      "tests/test_ext_autodoc_autoclass.py": [
        "test_show_inheritance_for_subclass_of_generic_type",
        "test_slots_attribute",
        "test_inherited_instance_variable"
      ],
      "tests/test_ext_autodoc_private_members.py": [
        "test_private_field_and_private_members"
      ],
      "tests/test_ext_autodoc_events.py": [
        "test_process_docstring",
        "test_skip_module_member"
      ],
      "tests/test_ext_autodoc_autoattribute.py": [
        "test_autoattribute_hide_value"
      ],
      "tests/test_ext_autodoc_automodule.py": [
        "test_subclass_of_mocked_object"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-22456",
    "file_function": {
      "sympy/codegen/tests/test_ast.py": [
        "test_none",
        "test_ast_replace",
        "test_CodeBlock_free_symbols",
        "test_Declaration",
        "test_Variable",
        "test_CodeBlock_cse",
        "test_String",
        "test_FunctionCall"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-24177",
    "file_function": {
      "lib/matplotlib/tests/test_axes.py": [
        "test_hist_stacked_density",
        "test_hist_unequal_bins_density",
        "test_hist_stacked_bar",
        "test_hist_step_horiz",
        "test_hist_stacked_weighted",
        "test_hist_range_and_density",
        "test_hist_log_2"
      ],
      "lib/matplotlib/tests/test_contour.py": [
        "test_contour_uneven",
        "test_contourf_log_extension",
        "test_contour_addlines"
      ],
      "lib/matplotlib/tests/test_scale.py": [
        "test_logscale_nonpos_values"
      ],
      "lib/matplotlib/tests/test_units.py": [
        "test_numpy_facade"
      ]
    }
  },
  {
    "instance_id": "django__django-14351",
    "file_function": {
      "tests/expressions/tests.py": [
        "test_filter_with_join",
        "test_incorrect_joined_field_in_F_expression",
        "test_nested_subquery"
      ],
      "tests/queries/test_query.py": [
        "test_non_alias_cols_query",
        "test_negated_nullable",
        "test_filter_non_conditional",
        "test_transform",
        "test_foreign_key"
      ],
      "tests/annotations/tests.py": [
        "test_filter_alias_with_double_f",
        "test_values_alias",
        "test_update_with_alias"
      ],
      "tests/aggregation/tests.py": [
        "test_aggregation_nested_subquery_outerref",
        "test_empty_aggregate"
      ],
      "tests/aggregation_regress/tests.py": [
        "test_field_error",
        "test_empty",
        "test_annotate_and_join",
        "test_more_more_more"
      ]
    }
  },
  {
    "instance_id": "django__django-15741",
    "file_function": {
      "tests/template_tests/filter_tests/test_date.py": [
        "test_date02",
        "test_date01",
        "test_date",
        "test_date06"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-7205",
    "file_function": {
      "testing/test_setuponly.py": [
        "test_show_fixtures_with_parameters",
        "test_show_fixtures_with_parameter_ids"
      ]
    }
  },
  {
    "instance_id": "django__django-13128",
    "file_function": {
      "tests/expressions/tests.py": [
        "test_lefthand_power",
        "test_right_hand_modulo",
        "test_lefthand_modulo",
        "test_reversed_and",
        "test_righthand_power",
        "test_boolean_expression_combined",
        "test_negation",
        "test_lefthand_bitwise_xor",
        "test_date_subquery_subtraction",
        "test_right_hand_addition",
        "test_or",
        "test_delta_add",
        "test_reversed_or",
        "test_lefthand_bitwise_or",
        "test_datetime_subtraction_microseconds",
        "test_lefthand_bitwise_left_shift_operator",
        "test_lefthand_bitwise_right_shift_operator",
        "test_and",
        "test_lefthand_bitwise_xor_null",
        "test_expressions",
        "test_lefthand_bitwise_and"
      ],
      "tests/aggregation_regress/tests.py": [
        "test_aggregate_fexpr"
      ],
      "tests/annotations/tests.py": [
        "test_combined_expression_annotation_with_aggregation"
      ],
      "tests/queries/tests.py": [
        "test_ticket_23605"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-25479",
    "file_function": {
      "lib/matplotlib/tests/test_colorbar.py": [
        "test_colorbar_format",
        "test_colorbarbase",
        "test_colorbar_ticks",
        "test_colorbar_positioning",
        "test_colorbar_axes_kw",
        "test_parentless_mappable",
        "test_colorbar_single_ax_panchor_east",
        "test_remove_cb_whose_mappable_has_no_figure",
        "test_mappable_no_alpha"
      ],
      "lib/matplotlib/tests/test_image.py": [
        "test_str_norms",
        "test_jpeg_alpha",
        "test_imshow_no_warn_invalid",
        "test_imsave_color_alpha"
      ],
      "lib/matplotlib/tests/test_colors.py": [
        "test_double_register_builtin_cmap",
        "test_resampled",
        "test_colormaps_get_cmap",
        "test_colormap_reversing"
      ],
      "lib/matplotlib/tests/test_collections.py": [
        "test_color_logic",
        "test_collection_set_array"
      ],
      "lib/matplotlib/tests/test_axes.py": [
        "test_hexbin_log_clim",
        "test_contour_colorbar",
        "test_scatter_norm_vminvmax"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-11445",
    "file_function": {
      "tests/test_ext_autosummary.py": [
        "test_autosummary_generate"
      ],
      "tests/test_environment.py": [
        "test_images",
        "test_config_status"
      ],
      "tests/test_directive_other.py": [
        "test_toctree"
      ],
      "tests/test_build_html.py": [
        "test_html_warnings",
        "test_html5_output",
        "test_docutils_output"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-7393",
    "file_function": {
      "xarray/tests/test_groupby.py": [
        "test_multi_index_groupby_sum"
      ],
      "xarray/tests/test_indexes.py": [
        "test_stack"
      ],
      "xarray/tests/test_dataset.py": [
        "test_stack_multi_index",
        "test_stack"
      ],
      "xarray/tests/test_dataarray.py": [
        "test_stack_unstack"
      ],
      "xarray/tests/test_variable.py": [
        "test_stack",
        "test_stack_errors"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-9591",
    "file_function": {
      "tests/test_ext_autodoc_autoclass.py": [
        "test_properties",
        "test_class_alias_having_doccomment",
        "test_inherited_instance_variable"
      ],
      "tests/test_ext_autodoc_private_members.py": [
        "test_private_field_and_private_members",
        "test_private_members"
      ],
      "tests/test_ext_autodoc_configs.py": [
        "test_autodoc_default_options_with_values",
        "test_autodoc_typehints_description_with_documented_init",
        "test_autodoc_typehints_description_no_undoc",
        "test_autodoc_typehints_description_for_invalid_node",
        "test_autodoc_typehints_signature",
        "test_mocked_module_imports",
        "test_autodoc_type_aliases"
      ],
      "tests/test_ext_autodoc_autoproperty.py": [
        "test_cached_properties",
        "test_class_properties"
      ],
      "tests/test_ext_autodoc_events.py": [
        "test_process_docstring",
        "test_skip_module_member"
      ],
      "tests/test_ext_autodoc_autoattribute.py": [
        "test_autoattribute_hide_value",
        "test_autoattribute_slots_variable_list"
      ],
      "tests/test_ext_autodoc_automodule.py": [
        "test_subclass_of_mocked_object"
      ],
      "tests/test_ext_autodoc_autofunction.py": [
        "test_cfunction"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-8595",
    "file_function": {
      "tests/test_ext_autodoc.py": [
        "test_autodoc_module_member_order",
        "test_autodoc_ignore_module_all",
        "test_cython",
        "test_autodoc_typed_instance_variables"
      ]
    }
  },
  {
    "instance_id": "psf__requests-1921",
    "file_function": {
      "tests/test_requests.py": [
        "test_request_cookie_overrides_session_cookie",
        "test_basic_building",
        "test_HTTP_200_OK_GET_WITH_PARAMS",
        "test_DIGEST_HTTP_200_OK_GET",
        "test_can_send_nonstring_objects_with_files",
        "test_prepared_request_hook"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-13453",
    "file_function": {
      "astropy/io/ascii/tests/test_html.py": [
        "test_multicolumn_write",
        "test_multicolumn_table_html_fill_values"
      ],
      "astropy/io/ascii/tests/test_write.py": [
        "test_write_as_columns",
        "test_write_formatted_mixin",
        "test_columns_names_with_formats",
        "test_write_overwrite_ascii",
        "test_write_table",
        "test_names_with_formats"
      ]
    }
  },
  {
    "instance_id": "django__django-14311",
    "file_function": {
      "tests/utils_tests/test_autoreload.py": [
        "test_entrypoint_fallback",
        "test_exe_fallback",
        "test_calls_start_django",
        "test_manage_py",
        "test_python_m_django",
        "test_raises_runtimeerror",
        "test_calls_sys_exit",
        "test_swallows_keyboard_interrupt"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-26194",
    "file_function": {
      "sklearn/metrics/tests/test_ranking.py": [
        "test_binary_clf_curve_multiclass_error",
        "test_roc_curve_toydata",
        "test_roc_curve_multi",
        "test_roc_curve_one_label"
      ],
      "sklearn/metrics/tests/test_common.py": [
        "test_multiclass_sample_weight_invariance",
        "test_binary_sample_weight_invariance"
      ],
      "sklearn/metrics/_plot/tests/test_roc_curve_display.py": [
        "test_roc_curve_display_plotting"
      ]
    }
  },
  {
    "instance_id": "django__django-13028",
    "file_function": {
      "tests/queries/tests.py": [
        "test_subquery_exclude_outerref",
        "test_correct_lookup",
        "test_error_raised_on_filter_with_dictionary"
      ],
      "tests/expressions/tests.py": [
        "test_subquery",
        "test_exists_in_filter"
      ],
      "tests/queries/test_query.py": [
        "test_foreign_key",
        "test_filter_non_conditional"
      ]
    }
  },
  {
    "instance_id": "django__django-15731",
    "file_function": {
      "tests/bulk_create/tests.py": [
        "test_bulk_insert_nullable_fields"
      ],
      "tests/managers_regress/tests.py": [
        "test_field_can_be_called_exact",
        "test_managers"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-12682",
    "file_function": {
      "sklearn/decomposition/tests/test_dict_learning.py": [
        "test_unknown_method",
        "test_sparse_encode_shapes_omp",
        "test_sparse_coder_parallel_mmap",
        "test_dict_learning_positivity"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-13124",
    "file_function": {
      "sklearn/model_selection/tests/test_split.py": [
        "test_2d_y",
        "test_kfold_valueerrors"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-24213",
    "file_function": {
      "sympy/physics/units/tests/test_quantities.py": [
        "test_dimensional_expr_of_derivative",
        "test_check_unit_consistency",
        "test_issue_20288",
        "test_issue_24062",
        "test_factor_and_dimension"
      ]
    }
  },
  {
    "instance_id": "pylint-dev__pylint-4661",
    "file_function": {
      "tests/test_self.py": [
        "test_allow_import_of_files_found_in_modules_during_parallel_check",
        "test_error_mode_shows_no_score",
        "test_getdefaultencoding_crashes_with_lc_ctype_utf8",
        "test_relative_imports",
        "test_fail_on",
        "test_json_report_when_file_is_missing",
        "test_parallel_execution_bug_2674",
        "test_parallel_execution_missing_arguments"
      ],
      "tests/test_functional.py": [
        "test_functional"
      ],
      "tests/test_check_parallel.py": [
        "test_sequential_checkers_work"
      ],
      "tests/test_pylint_runners.py": [
        "test_runner"
      ],
      "tests/unittest_reporting.py": [
        "test_multi_format_output"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-7432",
    "file_function": {
      "testing/test_reports.py": [
        "test_itemreport_outcomes"
      ],
      "testing/test_skipping.py": [
        "test_strict_xfail_default_from_file",
        "test_xfail_run_anyway",
        "test_xfail_imperative",
        "test_strict_xfail",
        "test_xfail_raises"
      ]
    }
  },
  {
    "instance_id": "django__django-12209",
    "file_function": {
      "tests/one_to_one/tests.py": [
        "test_reverse_object_cached_when_related_is_unset",
        "test_set_reverse_on_unsaved_object",
        "test_save_nullable_o2o_after_parent",
        "test_unsaved_object"
      ],
      "tests/fixtures/tests.py": [
        "test_dumpdata_proxy_without_concrete",
        "test_dumpdata_proxy_with_concrete"
      ],
      "tests/ordering/tests.py": [
        "test_order_by_fk_attname"
      ]
    }
  },
  {
    "instance_id": "django__django-11292",
    "file_function": {
      "tests/user_commands/tests.py": [
        "test_output_transaction",
        "test_check_migrations"
      ],
      "tests/admin_scripts/tests.py": [
        "test_force_color_execute",
        "test_no_color_force_color_mutually_exclusive_execute",
        "test_run_from_argv_closes_connections",
        "test_base_run_from_argv",
        "test_custom_stderr"
      ],
      "tests/fixtures_regress/tests.py": [
        "test_loaddata_no_fixture_specified"
      ]
    }
  },
  {
    "instance_id": "django__django-11749",
    "file_function": {
      "tests/migrations/test_commands.py": [
        "test_migrate",
        "test_makemigrations_nonexistent_app_label",
        "test_makemigrations_check"
      ]
    }
  },
  {
    "instance_id": "django__django-12155",
    "file_function": {
      "tests/admin_docs/test_views.py": [
        "test_templatefilter_index",
        "test_templatetag_index"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-19040",
    "file_function": {
      "sympy/polys/tests/test_polytools.py": [
        "test_torational_factor_list",
        "test_gcd",
        "test_parallel_poly_from_expr",
        "test_factor",
        "test_issue_8695",
        "test_factor_terms",
        "test_cancel"
      ],
      "sympy/polys/tests/test_factortools.py": [
        "test_dup_ext_factor",
        "test_dup_factor_list",
        "test_dmp_factor_list",
        "test_dmp_ext_factor"
      ],
      "sympy/polys/tests/test_polyroots.py": [
        "test_issue_16589",
        "test_roots0"
      ],
      "sympy/core/tests/test_exprtools.py": [
        "test_factor_nc"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-7889",
    "file_function": {
      "tests/test_ext_autodoc_mock.py": [
        "test_MockObject",
        "test_abc_MockObject",
        "test_mock_decorator"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-4629",
    "file_function": {
      "xarray/tests/test_merge.py": [
        "test_merge_arrays_attrs"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-6938",
    "file_function": {
      "xarray/tests/test_groupby.py": [
        "test_groupby_math_nD_group",
        "test_groupby_bins",
        "test_upsample_interpolate_dask"
      ],
      "xarray/tests/test_dataset.py": [
        "test_properties",
        "test_from_sparse",
        "test_lazy_load",
        "test_isel_fancy",
        "test_query",
        "test_real_and_imag",
        "test_dataset_array_math",
        "test_unstack_sparse",
        "test_dataset_math_auto_align",
        "test_dataset_math_errors",
        "test_chunk",
        "test_copy_with_data_errors",
        "test_swap_dims",
        "test_to_and_from_dict"
      ],
      "xarray/tests/test_variable.py": [
        "test_coarsen",
        "test_repr_lazy_data",
        "test_equals_and_identical",
        "test_quantile",
        "test_dask_rolling",
        "test_getitem_1d_fancy",
        "test_rank_use_bottleneck",
        "test_reduce",
        "test_rank",
        "test_broadcast_equals",
        "test_setitem_fancy",
        "test_roll_consistency",
        "test_roll",
        "test_quantile_interpolation_deprecation",
        "test_as_variable",
        "test_unstack_errors",
        "test_stack",
        "test_from_dask",
        "test_shift",
        "test_rank_dask_raises",
        "test_coarsen_keep_attrs",
        "test_stack_errors",
        "test_set_dims",
        "test_chunk",
        "test_inplace_math",
        "test_as_sparse",
        "test_data_and_values"
      ],
      "xarray/tests/test_indexing.py": [
        "test_outer_indexer_consistency_with_broadcast_indexes_vectorized"
      ],
      "xarray/tests/test_dataarray.py": [
        "test_reduce_keepdims_bottleneck",
        "test_idxmax",
        "test_clip",
        "test_pad_reflect",
        "test_argmax_dim",
        "test_polyfit",
        "test_argmin_dim",
        "test_properties",
        "test_quantile",
        "test_fillna",
        "test_pad_linear_ramp",
        "test_pad_stat_length",
        "test_pad_constant",
        "test_to_and_from_dict",
        "test_array_interface",
        "test_isel_fancy",
        "test_rank",
        "test_from_pint",
        "test_shift"
      ],
      "xarray/tests/test_computation.py": [
        "test_cross"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-6992",
    "file_function": {
      "xarray/tests/test_dataset.py": [
        "test_reindex",
        "test_ipython_key_completion",
        "test_dataset_math_auto_align",
        "test_setitem",
        "test_constructor_with_coords",
        "test_reset_index",
        "test_data_vars_properties",
        "test_sel_drop_mindex",
        "test_coords_set"
      ],
      "xarray/tests/test_dataarray.py": [
        "test_selection_multiindex_from_level",
        "test_reset_index"
      ],
      "xarray/tests/test_groupby.py": [
        "test_groupby_dataset_math_virtual"
      ]
    }
  },
  {
    "instance_id": "django__django-14011",
    "file_function": {
      "tests/test_runner/tests.py": [
        "test_destroy_test_db_restores_db_name",
        "test_transaction_support"
      ],
      "tests/backends/tests.py": [
        "test_thread_sharing_count"
      ]
    }
  },
  {
    "instance_id": "django__django-11551",
    "file_function": {
      "tests/admin_checks/tests.py": [
        "test_readonly_and_editable",
        "test_field_name_not_in_list_display",
        "test_nonexistent_field",
        "test_editable",
        "test_fieldsets_fields_non_tuple",
        "test_graceful_m2m_fail"
      ]
    }
  },
  {
    "instance_id": "django__django-16502",
    "file_function": {
      "tests/handlers/tests.py": [
        "test_invalid_multipart_boundary",
        "test_async_view"
      ],
      "tests/servers/tests.py": [
        "test_closes_connection_without_content_length"
      ],
      "tests/builtin_server/tests.py": [
        "test_file_response_closing"
      ],
      "tests/responses/tests/HttpResponseTests/test_repr.py": [
        "test_repr"
      ],
      "tests/responses/tests/HttpResponseTests/test_wrap_textiowrapper.py": [
        "test_wrap_textiowrapper"
      ],
      "tests/responses/test_fileresponse/FileResponseTests/test_repr.py": [
        "test_repr"
      ],
      "tests/servers/tests/LiveServerViews/test_view.py": [
        "test_view"
      ],
      "tests/handlers/tests/SignalsTests/test_request_signals_streaming_response.py": [
        "test_request_signals_streaming_response"
      ],
      "tests/responses/tests/HttpResponseTests/test_repr_no_content_type.py": [
        "test_repr_no_content_type"
      ],
      "tests/responses/tests/HttpResponseTests/test_generator_cache.py": [
        "test_generator_cache"
      ],
      "tests/builtin_server/tests/WSGIFileWrapperTests/test_file_response_call_request_finished.py": [
        "test_file_response_call_request_finished"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-15345",
    "file_function": {
      "sympy/printing/tests/test_mathematica.py": [
        "test_Function"
      ]
    }
  },
  {
    "instance_id": "django__django-13195",
    "file_function": {
      "tests/responses/test_cookie.py": [
        "test_invalid_samesite"
      ],
      "tests/messages_tests/test_cookie.py": [
        "test_cookie_setings"
      ],
      "tests/auth_tests/test_views.py": [
        "test_password_change_succeeds",
        "test_session_key_flushed_on_login_after_password_change"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-13135",
    "file_function": {
      "sklearn/preprocessing/tests/test_discretization.py": [
        "test_invalid_encode_option",
        "test_inverse_transform",
        "test_invalid_n_features",
        "test_invalid_strategy_option",
        "test_same_min_max"
      ]
    }
  },
  {
    "instance_id": "django__django-13089",
    "file_function": {
      "tests/cache/tests.py": [
        "test_zero_cull"
      ]
    }
  },
  {
    "instance_id": "django__django-13964",
    "file_function": {
      "tests/one_to_one/tests.py": [
        "test_foreign_key",
        "test_save_nullable_o2o_after_parent"
      ],
      "tests/model_fields/test_foreignkey.py": [
        "test_non_local_to_field",
        "test_to_python",
        "test_warning_when_unique_true_on_fk",
        "test_recursive_fks_get_col"
      ],
      "tests/defer/tests.py": [
        "test_saving_object_with_deferred_field",
        "test_custom_refresh_on_deferred_loading"
      ],
      "tests/prefetch_related/tests.py": [
        "test_prefetch_reverse_foreign_key",
        "test_custom_qs",
        "test_bug",
        "test_using_is_honored_inheritance"
      ],
      "tests/many_to_one/tests.py": [
        "test_fk_assignment_and_related_object_cache"
      ]
    }
  },
  {
    "instance_id": "django__django-13933",
    "file_function": {
      "tests/model_forms/test_modelchoicefield.py": [
        "test_clean_model_instance",
        "test_basics",
        "test_disabled_modelchoicefield_has_changed",
        "test_choices_radio_blank",
        "test_disabled_modelmultiplechoicefield_has_changed"
      ],
      "tests/model_forms/tests.py": [
        "test_show_hidden_initial_changed_queries_efficiently",
        "test_model_multiple_choice_field",
        "test_initial_values",
        "test_callable_called_each_time_form_is_instantiated"
      ],
      "tests/forms_tests/tests/test_error_messages.py": [
        "test_modelchoicefield"
      ]
    }
  },
  {
    "instance_id": "django__django-11734",
    "file_function": {
      "tests/aggregation/tests.py": [
        "test_multi_arg_aggregate",
        "test_annotate_values",
        "test_complex_aggregations_require_kwarg"
      ],
      "tests/expressions/tests.py": [
        "test_nested_subquery_outer_ref_with_autofield",
        "test_subquery",
        "test_nested_subquery_outer_ref_2"
      ],
      "tests/filtered_relation/tests.py": [
        "test_aggregate"
      ],
      "tests/queries/test_q.py": [
        "test_combine_and_empty",
        "test_deconstruct_or",
        "test_deconstruct_and",
        "test_deconstruct_negated",
        "test_combine_not_q_object"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-9230",
    "file_function": {
      "tests/test_ext_autodoc_autofunction.py": [
        "test_cfunction"
      ],
      "tests/test_ext_autodoc.py": [
        "test_autodoc_exception",
        "test_autodoc_imported_members",
        "test_autodoc"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-13798",
    "file_function": {
      "sympy/printing/tests/test_latex.py": [
        "test_latex_Poly",
        "test_latex_sum",
        "test_latex_functions",
        "test_latex",
        "test_latex_RootSum",
        "test_latex_ConditionSet",
        "test_latex_Complexes",
        "test_latex_UnevaluatedExpr",
        "test_Modules",
        "test_MatrixElement_printing",
        "test_QuotientRing",
        "test_latex_Integers",
        "test_latex_builtins",
        "test_latex_fresnel",
        "test_latex_numbers",
        "test_latex_KroneckerDelta",
        "test_latex_limits",
        "test_boolean_args_order",
        "test_latex_bessel",
        "test_WedgeProduct_printing",
        "test_latex_LeviCivita",
        "test_latex_mul_symbol",
        "test_issue_10489",
        "test_latex_FourierSeries",
        "test_latex_commutator",
        "test_hyper_printing",
        "test_Hadamard",
        "test_latex_sequences",
        "test_issue_13651",
        "test_ZeroMatrix",
        "test_Tr",
        "test_latex_DiracDelta",
        "test_latex_euler",
        "test_latex_derivatives",
        "test_latex_Heaviside",
        "test_latex_union",
        "test_categories",
        "test_latex_subs",
        "test_latex_Matrix",
        "test_latex_ImageSet",
        "test_PolynomialRingBase",
        "test_integral_transforms",
        "test_latex_NDimArray",
        "test_latex_FormalPowerSeries",
        "test_latex_indexed",
        "test_Adjoint",
        "test_latex_MatrixSlice",
        "test_latex_FracElement",
        "test_latex_SingularityFunction",
        "test_issue_12886",
        "test_issue_7180",
        "test_Quaternion_latex_printing",
        "test_TensorProduct_printing",
        "test_latex_Contains",
        "test_latex_Range",
        "test_latex_Complement",
        "test_latex_RandomDomain",
        "test_latex_ComplexRegion",
        "test_builtin_no_args",
        "test_builtins_without_args",
        "test_latex_Lambda",
        "test_latex_basic",
        "test_latex_Piecewise",
        "test_latex_intervals",
        "test_latex_product",
        "test_latex_AccumuBounds",
        "test_latex_ComplexRootOf",
        "test_latex_vector_expressions",
        "test_latex_Naturals0",
        "test_latex_symmetric_difference",
        "test_latex_Float",
        "test_issue_7117",
        "test_latex_productset",
        "test_latex_permutation",
        "test_latex_integrals"
      ]
    }
  },
  {
    "instance_id": "django__django-15368",
    "file_function": {
      "tests/queries/test_bulk_update.py": [
        "test_update_primary_key",
        "test_invalid_batch_size",
        "test_unsaved_models",
        "test_multiple_fields",
        "test_no_fields",
        "test_custom_pk",
        "test_updated_rows_when_passing_duplicates",
        "test_only_concrete_fields_allowed",
        "test_empty_objects"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-18211",
    "file_function": {
      "sympy/solvers/tests/test_inequalities.py": [
        "test_issue_10671_12466"
      ],
      "sympy/solvers/tests/test_solveset.py": [
        "test_solveset",
        "test_garbage_input",
        "test_issue_12429",
        "test_solveset_arg",
        "test_conditionset",
        "test_solve_hyperbolic",
        "test_no_sol",
        "test_solveset_sqrt_2",
        "test_issue_10158",
        "test__solveset_multi",
        "test_issue_11064",
        "test_solve_trig",
        "test_solve_modular"
      ],
      "sympy/sets/tests/test_fancysets.py": [
        "test_halfcircle"
      ]
    }
  },
  {
    "instance_id": "django__django-12050",
    "file_function": {
      "tests/custom_lookups/tests.py": [
        "test_div3_bilateral_extract",
        "test_bilateral_inner_qs"
      ],
      "tests/expressions/tests.py": [
        "test_aggregate_subquery_annotation",
        "test_subquery_filter_by_aggregate"
      ],
      "tests/or_lookups/tests.py": [
        "test_other_arg_queries"
      ]
    }
  },
  {
    "instance_id": "django__django-12125",
    "file_function": {
      "tests/migrations/test_commands.py": [
        "test_makemigrations_non_interactive_not_null_alteration",
        "test_makemigrations_empty_connections"
      ],
      "tests/migrations/test_autodetector.py": [
        "test_add_model_order_with_respect_to",
        "test_m2m_w_through_multistep_remove",
        "test_many_to_many_removed_before_through_model_2",
        "test_unmanaged_to_managed",
        "test_remove_alter_order_with_respect_to",
        "test_trim_apps",
        "test_many_to_many_changed_to_concrete_field",
        "test_last_dependency",
        "test_rename_related_field_preserved_db_column",
        "test_alter_field_to_not_null_oneoff_default",
        "test_rename_model_with_renamed_rel_field",
        "test_create_model_and_unique_together",
        "test_supports_functools_partial",
        "test_rename_field_foreign_key_to_field",
        "test_alter_model_managers",
        "test_add_alter_order_with_respect_to",
        "test_deconstruct_type",
        "test_rename_foreign_object_fields",
        "test_unmanaged_delete",
        "test_proxy_to_mti_with_fk_to_proxy",
        "test_circular_dependency_swappable",
        "test_create_with_through_model",
        "test_add_date_fields_with_auto_now_add_asking_for_default",
        "test_alter_fk_before_model_deletion",
        "test_identical_regex_doesnt_alter",
        "test_same_app_circular_fk_dependency_with_unique_together_and_indexes",
        "test_different_regex_does_alter",
        "test_rename_m2m_through_model",
        "test_managed_to_unmanaged",
        "test_alter_db_table_with_model_change"
      ],
      "tests/migrations/test_writer.py": [
        "test_serialize_class_based_validators",
        "test_register_non_serializer",
        "test_register_serializer"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-24570",
    "file_function": {
      "lib/matplotlib/tests/test_offsetbox.py": [
        "test_expand_with_tight_layout"
      ],
      "lib/matplotlib/tests/test_axes.py": [
        "test_automatic_legend"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-25232",
    "file_function": {
      "sklearn/impute/tests/test_impute.py": [
        "test_iterative_imputer_estimators",
        "test_iterative_imputer_keep_empty_features",
        "test_iterative_imputer_additive_matrix",
        "test_iterative_imputer_all_missing",
        "test_iterative_imputer_min_max_array_like_imputation",
        "test_iterative_imputer_imputation_order"
      ]
    }
  },
  {
    "instance_id": "django__django-11885",
    "file_function": {
      "tests/delete/tests.py": [
        "test_o2o_setnull",
        "test_do_nothing",
        "test_can_defer_constraint_checks",
        "test_large_delete_related",
        "test_large_delete",
        "test_setvalue",
        "test_fast_delete_instance_set_pk_none",
        "test_only_referenced_fields_selected",
        "test_do_nothing_qscount"
      ],
      "tests/delete_regress/tests.py": [
        "test_foreign_key_delete_nullifies_correct_columns"
      ]
    }
  },
  {
    "instance_id": "django__django-13297",
    "file_function": {
      "tests/generic_views/test_base.py": [
        "test_template_params_warning",
        "test_get_generic_template",
        "test_extra_context"
      ]
    }
  },
  {
    "instance_id": "django__django-14559",
    "file_function": {
      "tests/queries/test_bulk_update.py": [
        "test_update_primary_key",
        "test_unsaved_models",
        "test_invalid_batch_size",
        "test_empty_objects",
        "test_batch_size",
        "test_set_mixed_fields_to_null",
        "test_custom_pk",
        "test_only_concrete_fields_allowed",
        "test_no_fields"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-20801",
    "file_function": {
      "sympy/core/tests/test_numbers.py": [
        "test_Infinity",
        "test_float_mpf",
        "test_invert_numbers",
        "test_Float_eq",
        "test_Number_new",
        "test_conversion_to_mpmath",
        "test_powers_Integer",
        "test_ComplexInfinity",
        "test_Float",
        "test_divmod",
        "test_Infinity_2",
        "test_Rational_gcd_lcm_cofactors",
        "test_mod",
        "test_NaN",
        "test_latex",
        "test_Infinity_floor_ceiling_power",
        "test_GoldenRatio_expand",
        "test_Float_from_tuple",
        "test_seterr",
        "test_Rational_new",
        "test_issue_10020",
        "test_powers_Rational",
        "test_int_NumberSymbols",
        "test_mod_inverse",
        "test_abc",
        "test_floordiv",
        "test_NegativeInfinity",
        "test_int",
        "test_Integer_factors",
        "test_Catalan_rewrite",
        "test_issue_7742",
        "test_golden_ratio_rewrite_as_sqrt",
        "test_issue_4611"
      ],
      "sympy/core/tests/test_expr.py": [
        "test_cooperative_operations",
        "test_basic",
        "test_as_coeff_add",
        "test_extract_branch_factor",
        "test_as_coeff_Mul",
        "test_as_coeff_mul",
        "test_leadterm",
        "test_equals"
      ],
      "sympy/core/tests/test_function.py": [
        "test_function__eval_nseries",
        "test_function_evalf",
        "test_nfloat"
      ],
      "sympy/core/tests/test_relational.py": [
        "test_issues_13081_12583_12534",
        "test_issue_10401",
        "test_univariate_relational_as_set",
        "test_inequalities_symbol_name_same",
        "test_simplify_relational"
      ],
      "sympy/core/tests/test_args.py": [
        "test_all_classes_are_tested",
        "test_sympy__functions__special__error_functions__Si"
      ],
      "sympy/core/tests/test_assumptions.py": [
        "test_Pow_is_pos_neg",
        "test_issue_6631"
      ],
      "sympy/core/tests/test_subs.py": [
        "test_issue_6158",
        "test_subbug2"
      ]
    }
  },
  {
    "instance_id": "django__django-14672",
    "file_function": {
      "tests/m2m_through/tests.py": [
        "test_choices"
      ],
      "tests/model_fields/test_manytomanyfield.py": [
        "test_abstract_model_app_relative_foreign_key"
      ],
      "tests/proxy_model_inheritance/tests.py": [
        "test_table_exists"
      ]
    }
  },
  {
    "instance_id": "django__django-14155",
    "file_function": {
      "tests/urlpatterns_reverse/tests.py": [
        "test_repr",
        "test_urlpattern_resolve"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-21612",
    "file_function": {
      "sympy/parsing/tests/test_latex_deps.py": [
        "test_no_import"
      ]
    }
  },
  {
    "instance_id": "django__django-13670",
    "file_function": {
      "tests/utils_tests/test_dateformat.py": [
        "test_time_formats"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-26466",
    "file_function": {
      "lib/matplotlib/tests/test_axes.py": [
        "test_annotate_across_transforms",
        "test_basic_annotate"
      ],
      "lib/matplotlib/tests/test_text.py": [
        "test_annotation_update"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-8056",
    "file_function": {
      "tests/test_ext_napoleon_docstring.py": [
        "test_docstrings",
        "test_raises_types",
        "test_colon_in_return_type"
      ]
    }
  },
  {
    "instance_id": "django__django-16136",
    "file_function": {
      "tests/handlers/test_exception.py": [
        "test_data_upload_max_memory_size_exceeded"
      ],
      "tests/httpwrappers/tests.py": [
        "test_not_allowed_repr_no_content_type",
        "test_not_allowed_repr"
      ],
      "tests/middleware/tests.py": [
        "test_404_error_reporting"
      ],
      "tests/view_tests/tests/test_debug.py": [
        "test_403"
      ]
    }
  },
  {
    "instance_id": "django__django-14493",
    "file_function": {
      "tests/staticfiles_tests/test_storage.py": [
        "test_clear_empties_manifest",
        "test_file_change_after_collectstatic"
      ],
      "tests/staticfiles_tests/test_management.py": [
        "test_verbosity_1_with_post_process"
      ]
    }
  },
  {
    "instance_id": "pylint-dev__pylint-4604",
    "file_function": {
      "tests/test_functional.py": [
        "test_functional"
      ]
    }
  },
  {
    "instance_id": "django__django-11333",
    "file_function": {
      "tests/urlpatterns_reverse/tests.py": [
        "test_no_handler_exception",
        "test_namespaced_view_detail",
        "test_urlpattern_reverse",
        "test_urlpattern_resolve",
        "test_namespace_pattern_with_variable_prefix",
        "test_view_detail_as_method",
        "test_special_chars_namespace",
        "test_resolver_reverse",
        "test_resolver_repr",
        "test_redirect_view_object",
        "test_mixing_args_and_kwargs"
      ],
      "tests/check_framework/test_urls.py": [
        "test_no_warnings",
        "test_bad_handlers_invalid_path",
        "test_bad_handlers"
      ],
      "tests/admin_views/tests.py": [
        "test_add_with_GET_args",
        "test_add_view"
      ],
      "tests/resolve_url/tests.py": [
        "test_non_view_callable_raises_no_reverse_match"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-7521",
    "file_function": {
      "testing/test_capture.py": [
        "test_simple_fail_second_start",
        "test_capturing_basic_api",
        "test_simple_many",
        "test_capsysbinary",
        "test_fixture_use_by_other_fixtures_teardown",
        "test_capture_is_represented_on_failure_issue128",
        "test_simple",
        "test_simple_resume_suspend",
        "test_fdcapture_invalid_fd_without_fd_reuse",
        "test_reset_twice_error"
      ],
      "testing/test_config.py": [
        "test_options_on_small_file_do_not_blow_up"
      ],
      "testing/test_main.py": [
        "test_wrap_session_notify_exception"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-13551",
    "file_function": {
      "sympy/concrete/tests/test_products.py": [
        "test_issue_9983",
        "test_special_products",
        "test__eval_product"
      ],
      "sympy/concrete/tests/test_sums_products.py": [
        "test_simple_products"
      ]
    }
  },
  {
    "instance_id": "django__django-15814",
    "file_function": {
      "tests/proxy_model_inheritance/tests.py": [
        "test_deletion_through_intermediate_proxy"
      ],
      "tests/prefetch_related/tests.py": [
        "test_m2m_to_inheriting_model",
        "test_onetoone_reverse_no_match",
        "test_custom_qs"
      ],
      "tests/defer/tests.py": [
        "test_only_none_raises_error",
        "test_only_with_select_related",
        "test_custom_refresh_on_deferred_loading",
        "test_defer_subclass"
      ],
      "tests/null_fk/tests.py": [
        "test_null_fk"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-12907",
    "file_function": {
      "astropy/modeling/tests/test_separable.py": [
        "test_separable",
        "test_cstack",
        "test_cdot"
      ],
      "astropy/modeling/tests/test_models.py": [
        "test_custom_separability_matrix"
      ]
    }
  },
  {
    "instance_id": "django__django-11951",
    "file_function": {
      "tests/bulk_create/tests.py": [
        "test_multi_table_inheritance_unsupported",
        "test_non_auto_increment_pk",
        "test_set_state_with_pk_specified",
        "test_simple",
        "test_large_batch_mixed"
      ],
      "tests/queries/test_bulk_update.py": [
        "test_invalid_batch_size",
        "test_unsaved_models",
        "test_update_primary_key",
        "test_large_batch",
        "test_no_fields",
        "test_update_custom_primary_key",
        "test_only_concrete_fields_allowed",
        "test_empty_objects"
      ]
    }
  },
  {
    "instance_id": "django__django-16560",
    "file_function": {
      "tests/constraints/tests/UniqueConstraintTests/test_validate_expression_condition.py": [
        "test_validate_expression_condition"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_invalid_defer_argument.py": [
        "test_invalid_defer_argument"
      ],
      "tests/constraints/tests/CheckConstraintTests/test_repr_with_violation_error_message.py": [
        "test_repr_with_violation_error_message"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_invalid_include_argument.py": [
        "test_invalid_include_argument"
      ],
      "tests/constraints/tests/BaseConstraintTests/test_remove_sql.py": [
        "test_remove_sql"
      ],
      "tests/constraints/tests/CheckConstraintTests/test_eq.py": [
        "test_eq"
      ],
      "tests/constraints/tests/BaseConstraintTests/test_name_required.py": [
        "test_name_required"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_invalid_opclasses_argument.py": [
        "test_invalid_opclasses_argument"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_requires_name.py": [
        "test_requires_name"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_expressions_and_fields_mutually_exclusive.py": [
        "test_expressions_and_fields_mutually_exclusive"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_model_validation_constraint_no_code_error.py": [
        "test_model_validation_constraint_no_code_error"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_validate_expression_str.py": [
        "test_validate_expression_str"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_eq.py": [
        "test_eq"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_opclasses_and_fields_same_length.py": [
        "test_opclasses_and_fields_same_length"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_validate.py": [
        "test_validate"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_deferrable_with_condition.py": [
        "test_deferrable_with_condition"
      ],
      "tests/constraints/tests/CheckConstraintTests/test_validate.py": [
        "test_validate"
      ],
      "tests/constraints/tests/BaseConstraintTests/test_contains_expressions.py": [
        "test_contains_expressions"
      ],
      "tests/constraints/tests/CheckConstraintTests/test_deconstruction.py": [
        "test_deconstruction"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_eq_with_expressions.py": [
        "test_eq_with_expressions"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_deconstruction_with_condition.py": [
        "test_deconstruction_with_condition"
      ],
      "tests/constraints/tests/BaseConstraintTests/test_validate.py": [
        "test_validate"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_deconstruction_with_include.py": [
        "test_deconstruction_with_include"
      ],
      "tests/constraints/tests/BaseConstraintTests/test_create_sql.py": [
        "test_create_sql"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_deferrable_with_include.py": [
        "test_deferrable_with_include"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_deconstruction_with_deferrable.py": [
        "test_deconstruction_with_deferrable"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_validate_ordered_expression.py": [
        "test_validate_ordered_expression"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_repr_with_violation_error_message.py": [
        "test_repr_with_violation_error_message"
      ],
      "tests/constraints/tests/BaseConstraintTests/test_deconstruction.py": [
        "test_deconstruction"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_deconstruction_with_opclasses.py": [
        "test_deconstruction_with_opclasses"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_condition_must_be_q.py": [
        "test_condition_must_be_q"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_expressions_with_opclasses.py": [
        "test_expressions_with_opclasses"
      ],
      "tests/constraints/tests/BaseConstraintTests/test_positional_arguments.py": [
        "test_positional_arguments"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_deferrable_with_opclasses.py": [
        "test_deferrable_with_opclasses"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_requires_field_or_expression.py": [
        "test_requires_field_or_expression"
      ],
      "tests/constraints/tests/BaseConstraintTests/test_constraint_sql.py": [
        "test_constraint_sql"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_deferrable_with_expressions.py": [
        "test_deferrable_with_expressions"
      ],
      "tests/constraints/tests/CheckConstraintTests/test_invalid_check_types.py": [
        "test_invalid_check_types"
      ]
    }
  },
  {
    "instance_id": "django__django-14140",
    "file_function": {
      "tests/queries/test_q.py": [
        "test_reconstruct_or",
        "test_combine_and_empty",
        "test_deconstruct_or",
        "test_combine_not_q_object",
        "test_combine_or_empty"
      ],
      "tests/expressions_case/tests.py": [
        "test_combined_q_object"
      ],
      "tests/aggregation_regress/tests.py": [
        "test_conditional_aggregate_on_complex_condition"
      ],
      "tests/queries/tests.py": [
        "test_ticket5261"
      ]
    }
  },
  {
    "instance_id": "django__django-12262",
    "file_function": {
      "tests/template_tests/test_library.py": [
        "test_inclusion_tag",
        "test_simple_tag_name_kwarg",
        "test_simple_tag",
        "test_simple_tag_wrapped",
        "test_inclusion_tag_wrapped",
        "test_simple_tag_invalid",
        "test_inclusion_tag_name"
      ],
      "tests/template_tests/test_custom.py": [
        "test_include_tag_missing_context",
        "test_inclusion_tags_from_template",
        "test_simple_tag_errors",
        "test_simple_tag_missing_context",
        "test_15070_use_l10n",
        "test_inclusion_tags",
        "test_simple_tags"
      ]
    }
  },
  {
    "instance_id": "django__django-16493",
    "file_function": {
      "tests/file_storage/tests.py": [
        "test_deconstruction"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-10449",
    "file_function": {
      "tests/test_ext_autodoc_events.py": [
        "test_cut_lines",
        "test_skip_module_member",
        "test_process_docstring",
        "test_between"
      ],
      "tests/test_ext_autodoc.py": [
        "test_singledispatch",
        "test_autodoc_attributes",
        "test_pyclass_for_ClassLevelDocumenter",
        "test_autodoc_member_order",
        "test_autodoc_exclude_members",
        "test_parse_name",
        "test_autodoc_decorator",
        "test_autodoc_module_member_order",
        "test_autodoc_noindex",
        "test_autodoc_GenericAlias",
        "test_autodoc_imported_members",
        "test_final",
        "test_cython",
        "test_format_signature",
        "test_autodoc_inherited_members_Base",
        "test_autodoc_warnings",
        "test_autodoc_ignore_module_all",
        "test_canonical",
        "test_overload"
      ],
      "tests/test_ext_autodoc_autoclass.py": [
        "test_class_alias_for_imported_object_having_doccomment",
        "test_inherited_instance_variable",
        "test_show_inheritance_for_decendants_of_generic_type",
        "test_class_doc_from_both",
        "test_autodoc_process_bases",
        "test_class_alias_having_doccomment"
      ],
      "tests/test_ext_autodoc_configs.py": [
        "test_autodoc_typehints_description_no_undoc",
        "test_autodoc_typehints_format_fully_qualified",
        "test_autodoc_typehints_description_no_undoc_doc_rtype",
        "test_autodoc_typehints_description_with_documented_init",
        "test_autodoc_typehints_format_fully_qualified_for_class_alias",
        "test_autodoc_typehints_description_for_invalid_node",
        "test_autodoc_class_signature_separated_init",
        "test_autodoc_default_options",
        "test_autodoc_typehints_format_fully_qualified_for_generic_alias",
        "test_autoclass_content_and_docstring_signature_init",
        "test_autoclass_content_and_docstring_signature_both",
        "test_autodoc_class_signature_separated_new"
      ],
      "tests/test_ext_autodoc_autofunction.py": [
        "test_singledispatch",
        "test_async_generator"
      ],
      "tests/test_ext_autodoc_private_members.py": [
        "test_private_members"
      ],
      "tests/test_ext_autodoc_autodata.py": [
        "test_autodata_GenericAlias"
      ],
      "tests/test_ext_autodoc_automodule.py": [
        "test_subclass_of_mocked_object"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-8120",
    "file_function": {
      "tests/test_build_gettext.py": [
        "test_build_gettext"
      ],
      "tests/test_util_i18n.py": [
        "test_CatalogRepository",
        "test_catalog_outdated",
        "test_catalog_write_mo"
      ],
      "tests/test_build_html.py": [
        "test_html_translator"
      ],
      "tests/test_builder.py": [
        "test_incremental_reading"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-12585",
    "file_function": {
      "sklearn/tests/test_common.py": [
        "test_parameters_default_constructible",
        "test_non_meta_estimators"
      ],
      "sklearn/preprocessing/tests/test_data.py": [
        "test_cv_pipeline_precomputed"
      ],
      "sklearn/tests/test_base.py": [
        "test_clone_buggy"
      ]
    }
  },
  {
    "instance_id": "django__django-16661",
    "file_function": {
      "tests/admin_custom_urls/tests.py": [
        "test_add_with_GET_args",
        "test_basic_add_POST"
      ],
      "tests/admin_views/tests.py": [
        "test_user_fk_change_popup",
        "test_list_editable_pagination",
        "test_change_view_save_as_new",
        "test_change_view_with_view_only_inlines",
        "test_search_on_sibling_models",
        "test_limit_choices_to_isnull_false",
        "test_allowed_filtering_15103",
        "test_delete_view",
        "test_incorrect_lookup_parameters",
        "test_user_fk_add_popup",
        "test_change_view_with_view_and_delete_inlines",
        "test_popup_add_POST",
        "test_change_view",
        "test_unicode_delete",
        "test_user_fk_delete_popup",
        "test_delete_view_with_no_default_permissions",
        "test_history_view",
        "test_basic_edit_GET_string_PK",
        "test_post_delete_protected"
      ],
      "tests/admin_views/tests/AdminViewListEditable/test_list_editable_action_choices.py": [
        "test_list_editable_action_choices"
      ],
      "tests/admin_inlines/tests/TestInlinePermissions/test_inline_add_m2m_view_only_perm.py": [
        "test_inline_add_m2m_view_only_perm"
      ],
      "tests/admin_views/tests/AdminViewListEditable/test_post_submission.py": [
        "test_post_submission"
      ],
      "tests/admin_views/tests/SaveAsTests/test_save_as_new_with_validation_errors_with_inlines.py": [
        "test_save_as_new_with_validation_errors_with_inlines"
      ],
      "tests/admin_views/tests/AdminViewListEditable/test_list_editable_action_submit.py": [
        "test_list_editable_action_submit"
      ],
      "tests/admin_views/tests/AdminViewPermissionsTest/test_change_view_with_view_only_last_inline.py": [
        "test_change_view_with_view_only_last_inline"
      ],
      "tests/admin_changelist/tests/ChangeListTests/test_custom_lookup_in_search_fields.py": [
        "test_custom_lookup_in_search_fields"
      ],
      "tests/admin_changelist/tests/ChangeListTests/test_list_editable_atomicity.py": [
        "test_list_editable_atomicity"
      ],
      "tests/admin_views/tests/AdminViewBasicTest/test_disallowed_filtering.py": [
        "test_disallowed_filtering"
      ],
      "tests/admin_views/tests/AdminViewPermissionsTest/test_history_view_bad_url.py": [
        "test_history_view_bad_url"
      ],
      "tests/admin_views/tests/AdminKeepChangeListFiltersTests/test_add_view.py": [
        "test_add_view"
      ],
      "tests/modeladmin/tests/ModelAdminPermissionTests/test_inline_has_add_permission_uses_obj.py": [
        "test_inline_has_add_permission_uses_obj"
      ],
      "tests/admin_views/tests/AdminUserMessageTest/test_message_success.py": [
        "test_message_success"
      ],
      "tests/modeladmin/tests/ModelAdminTests/test_foreign_key_as_radio_field.py": [
        "test_foreign_key_as_radio_field"
      ],
      "tests/admin_views/tests/AdminSearchTest/test_search_with_spaces.py": [
        "test_search_with_spaces"
      ],
      "tests/admin_changelist/tests/ChangeListTests/test_get_list_editable_queryset.py": [
        "test_get_list_editable_queryset"
      ],
      "tests/admin_views/tests/AdminViewPermissionsTest/test_delete_view_nonexistent_obj.py": [
        "test_delete_view_nonexistent_obj"
      ],
      "tests/admin_registration/tests/TestRegistration/test_prevent_double_registration.py": [
        "test_prevent_double_registration"
      ],
      "tests/admin_views/tests/AdminViewBasicTest/test_disallowed_to_field.py": [
        "test_disallowed_to_field"
      ],
      "tests/admin_views/tests/AdminCustomQuerysetTest/test_change_view.py": [
        "test_change_view"
      ],
      "tests/admin_changelist/tests/ChangeListTests/test_pk_in_search_fields.py": [
        "test_pk_in_search_fields"
      ],
      "tests/admin_inlines/tests/TestInline/test_inline_editable_pk.py": [
        "test_inline_editable_pk"
      ],
      "tests/admin_views/tests/AdminKeepChangeListFiltersTests/test_change_view.py": [
        "test_change_view"
      ],
      "tests/admin_views/tests/SaveAsTests/test_save_as_new_with_inlines_with_validation_errors.py": [
        "test_save_as_new_with_inlines_with_validation_errors"
      ],
      "tests/admin_views/tests/AdminCustomTemplateTests/test_custom_model_admin_templates.py": [
        "test_custom_model_admin_templates"
      ],
      "tests/admin_views/tests/AdminSearchTest/test_exact_matches.py": [
        "test_exact_matches"
      ],
      "tests/admin_views/tests/AdminUserMessageTest/test_message_error.py": [
        "test_message_error"
      ],
      "tests/admin_inlines/tests/TestInlinePermissions/test_inline_add_fk_noperm.py": [
        "test_inline_add_fk_noperm"
      ],
      "tests/admin_views/tests/AdminUserMessageTest/test_message_debug.py": [
        "test_message_debug"
      ],
      "tests/admin_inlines/tests/TestReadOnlyChangeViewInlinePermissions/test_inlines_are_rendered_as_read_only.py": [
        "test_inlines_are_rendered_as_read_only"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-7229",
    "file_function": {
      "xarray/tests/test_units.py": [
        "test_computation_objects"
      ],
      "xarray/tests/test_dataset.py": [
        "test_coords_merge",
        "test_isel_fancy"
      ],
      "xarray/tests/test_dataarray.py": [
        "test_inplace_math_automatic_alignment"
      ],
      "xarray/tests/test_merge.py": [
        "test_merge_wrong_input_error",
        "test_merge_compat",
        "test_merge_arrays_attrs_variables"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-8035",
    "file_function": {
      "tests/test_ext_autodoc.py": [
        "test_overload",
        "test_autodoc_attributes",
        "test_enum_class",
        "test_parse_name",
        "test_final",
        "test_autodoc_module_member_order",
        "test_autodoc_ignore_module_all",
        "test_autodoc_imported_members"
      ],
      "tests/test_ext_autodoc_configs.py": [
        "test_autoclass_content_both",
        "test_autodoc_default_options",
        "test_autoclass_content_init",
        "test_autodoc_typehints_description"
      ],
      "tests/test_ext_apidoc.py": [
        "test_simple",
        "test_multibyte_parameters"
      ]
    }
  },
  {
    "instance_id": "django__django-15503",
    "file_function": {
      "tests/model_fields/tests.py": [
        "test_get_choices",
        "test_get_choices_default_ordering"
      ],
      "tests/queries/tests.py": [
        "test_ticket7791",
        "test_ticket4358",
        "test_ticket8283"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-19954",
    "file_function": {
      "sympy/combinatorics/tests/test_perm_groups.py": [
        "test_sylow_subgroup",
        "test_minimal_blocks"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-8872",
    "file_function": {
      "astropy/units/tests/test_quantity_ufuncs.py": [
        "test_two_argument_two_output_ufunc_inplace",
        "test_frexp_array",
        "test_floor_divide_remainder_and_divmod",
        "test_one_argument_two_output_ufunc_inplace"
      ],
      "astropy/units/tests/test_quantity_helpers.py": [
        "test_allclose_isclose_default",
        "test_allclose_isclose"
      ],
      "astropy/units/tests/test_quantity_array_methods.py": [
        "test_clip_inplace",
        "test_squeeze",
        "test_flat"
      ],
      "astropy/units/tests/test_units.py": [
        "test_long_int",
        "test_invalid_scale"
      ]
    }
  },
  {
    "instance_id": "django__django-13417",
    "file_function": {
      "tests/ordering/tests.py": [
        "test_order_by_nulls_first",
        "test_order_by_constant_value",
        "test_random_ordering",
        "test_order_by_f_expression_duplicates",
        "test_reverse_meta_ordering_pure",
        "test_extra_ordering_with_table_name"
      ],
      "tests/queries/tests.py": [
        "test_annotated_ordering",
        "test_no_default_or_explicit_ordering",
        "test_extra_multiple_select_params_values_order_by",
        "test_ordering",
        "test_empty_queryset"
      ],
      "tests/aggregation_regress/tests.py": [
        "test_having_group_by",
        "test_more_more_more"
      ],
      "tests/aggregation/tests.py": [
        "test_group_by_exists_annotation",
        "test_expression_on_aggregation"
      ]
    }
  },
  {
    "instance_id": "django__django-10999",
    "file_function": {
      "tests/utils_tests/test_dateparse.py": [
        "test_parse_postgresql_format",
        "test_negative"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-12489",
    "file_function": {
      "sympy/combinatorics/tests/test_permutations.py": [
        "test_Permutation",
        "test_from_sequence",
        "test_mul",
        "test_printing_cyclic",
        "test_args",
        "test_printing_non_cyclic",
        "test_ranking"
      ],
      "sympy/combinatorics/tests/test_perm_groups.py": [
        "test_coset_table",
        "test_coset_transvesal"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-13091",
    "file_function": {
      "sympy/core/tests/test_subs.py": [
        "test_subs_noncommutative"
      ],
      "sympy/core/tests/test_expr.py": [
        "test_equals"
      ],
      "sympy/core/tests/test_relational.py": [
        "test_equals"
      ],
      "sympy/core/tests/test_basic.py": [
        "test_equality"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-20154",
    "file_function": {
      "sympy/utilities/tests/test_iterables.py": [
        "test_partitions"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-26113",
    "file_function": {
      "lib/matplotlib/tests/test_axes.py": [
        "test_hexbin_linear",
        "test_hexbin_pickable",
        "test_hexbin_extent",
        "test_hexbin_log"
      ]
    }
  },
  {
    "instance_id": "django__django-13568",
    "file_function": {
      "tests/auth_tests/test_checks.py": [
        "test_username_non_unique",
        "test_is_anonymous_authenticated_methods"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-7233",
    "file_function": {
      "xarray/tests/test_dataset.py": [
        "test_align"
      ],
      "xarray/tests/test_dataarray.py": [
        "test_align",
        "test_expand_dims"
      ]
    }
  },
  {
    "instance_id": "django__django-15957",
    "file_function": {
      "tests/filtered_relation/tests.py": [
        "test_with_prefetch_related"
      ],
      "tests/prefetch_related/tests.py": [
        "test_custom_qs",
        "test_parent_link_prefetch",
        "test_clear",
        "test_using_is_honored_inheritance",
        "test_detect_is_fetched_with_to_attr"
      ]
    }
  },
  {
    "instance_id": "django__django-16454",
    "file_function": {
      "tests/user_commands/tests/CommandTests/test_mutually_exclusive_group_required_options.py": [
        "test_mutually_exclusive_group_required_options"
      ],
      "tests/user_commands/tests/CommandTests/test_subparser_invalid_option.py": [
        "test_subparser_invalid_option"
      ]
    }
  },
  {
    "instance_id": "django__django-15037",
    "file_function": {
      "tests/inspectdb/tests.py": [
        "test_attribute_name_not_python_keyword"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-10081",
    "file_function": {
      "testing/test_unittest.py": [
        "test_async_support",
        "test_setup",
        "test_unittest_expected_failure_for_failing_test_is_xfail",
        "test_pdb_teardown_called",
        "test_runTest_method",
        "test_testcase_totally_incompatible_exception_info",
        "test_exit_outcome",
        "test_testcase_custom_exception_info",
        "test_class_method_containing_test_issue1558",
        "test_unittest_raise_skip_issue748",
        "test_unittest_expected_failure_for_passing_test_is_fail"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-8593",
    "file_function": {
      "tests/test_ext_autodoc.py": [
        "test_autodoc_attributes",
        "test_autodoc_member_order",
        "test_parse_name",
        "test_autodoc_module_member_order",
        "test_autodoc_noindex",
        "test_autodoc_GenericAlias",
        "test_name_mangling",
        "test_autodoc_imported_members",
        "test_format_signature",
        "test_autodoc_inherited_members_Base",
        "test_autodoc_TYPE_CHECKING",
        "test_autodoc_warnings",
        "test_autodoc_TypeVar",
        "test_autodoc_ignore_module_all"
      ],
      "tests/test_ext_autosummary.py": [
        "test_autosummary_skip_member"
      ],
      "tests/test_ext_autodoc_private_members.py": [
        "test_private_field_and_private_members",
        "test_private_members"
      ],
      "tests/test_ext_autodoc_events.py": [
        "test_process_docstring"
      ],
      "tests/test_ext_autodoc_configs.py": [
        "test_autodoc_type_aliases",
        "test_autodoc_default_options_with_values"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-16766",
    "file_function": {
      "sympy/printing/tests/test_pycode.py": [
        "test_PythonCodePrinter"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-7324",
    "file_function": {
      "testing/test_debugging.py": [
        "test_raises_bdbquit_with_eoferror"
      ]
    }
  },
  {
    "instance_id": "django__django-15695",
    "file_function": {
      "tests/migrations/test_operations.py": [
        "test_rename_index_unknown_unnamed_index",
        "test_rename_index_unnamed_index",
        "test_rename_index_arguments",
        "test_rename_index"
      ],
      "tests/migrations/test_optimizer.py": [
        "test_rename_index"
      ]
    }
  },
  {
    "instance_id": "django__django-12741",
    "file_function": {
      "tests/backends/base/test_operations.py": [
        "test_execute_sql_flush_statements"
      ],
      "tests/backends/tests.py": [
        "test_sequence_name_length_limits_flush"
      ]
    }
  },
  {
    "instance_id": "psf__requests-6028",
    "file_function": {
      "tests/test_lowlevel.py": [
        "test_digestauth_401_count_reset_on_redirect",
        "test_chunked_upload_doesnt_skip_host_header",
        "test_chunked_upload_uses_only_specified_host_header",
        "test_conflicting_content_lengths",
        "test_chunked_upload"
      ],
      "tests/test_requests.py": [
        "test_connect_timeout",
        "test_errors",
        "test_total_timeout_connect",
        "test_non_prepared_request_error",
        "test_proxy_error",
        "test_proxy_auth",
        "test_proxy_auth_empty_pass"
      ],
      "tests/test_testserver.py": [
        "test_multiple_requests"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-24970",
    "file_function": {
      "lib/matplotlib/tests/test_colors.py": [
        "test_colormap_bad_data_with_alpha",
        "test_colormap_alpha_array",
        "test_cmap_and_norm_from_levels_and_colors",
        "test_non_mutable_get_values",
        "test_colormap_endian"
      ],
      "lib/matplotlib/tests/test_image.py": [
        "test_mask_image_over_under"
      ]
    }
  },
  {
    "instance_id": "django__django-16082",
    "file_function": {
      "tests/expressions/tests.py": [
        "test_lefthand_modulo",
        "test_datetime_subtraction_microseconds",
        "test_boolean_expression_combined_with_empty_Q",
        "test_negation",
        "test_right_hand_modulo",
        "test_reversed_and",
        "test_date_subquery_subtraction",
        "test_xor",
        "test_lefthand_bitwise_and",
        "test_boolean_expression_combined",
        "test_or",
        "test_and",
        "test_lefthand_bitwise_left_shift_operator",
        "test_righthand_power",
        "test_lefthand_power",
        "test_lefthand_bitwise_xor_right_null",
        "test_lefthand_bitwise_right_shift_operator",
        "test_durationfield_multiply_divide",
        "test_reversed_xor",
        "test_reversed_or",
        "test_lefthand_bitwise_or",
        "test_right_hand_addition"
      ],
      "tests/queries/tests.py": [
        "test_xor_subquery",
        "test_ticket_23605"
      ],
      "tests/aggregation/tests.py": [
        "test_combine_different_types",
        "test_add_implementation"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-8475",
    "file_function": {
      "tests/test_build_linkcheck.py": [
        "test_defaults_json",
        "test_follows_redirects_on_HEAD",
        "test_linkcheck_request_headers",
        "test_linkcheck_request_headers_no_slash",
        "test_linkcheck_request_headers_default",
        "test_follows_redirects_on_GET",
        "test_auth_header_uses_first_match",
        "test_defaults",
        "test_anchors_ignored"
      ],
      "tests/test_build.py": [
        "test_build_all"
      ]
    }
  },
  {
    "instance_id": "django__django-15987",
    "file_function": {
      "tests/fixtures/tests.py": [
        "test_format_discovery",
        "test_forward_reference_fk_natural_key",
        "test_forward_reference_m2m_natural_key",
        "test_ambiguous_compressed_fixture",
        "test_loaddata_verbosity_three",
        "test_circular_reference_natural_key",
        "test_loaddata_app_option"
      ]
    }
  },
  {
    "instance_id": "django__django-13512",
    "file_function": {
      "tests/admin_views/test_actions.py": [
        "test_popup_template_response_on_add"
      ],
      "tests/admin_views/tests.py": [
        "test_post_submission",
        "test_user_permission_performance",
        "test_change_view_save_as_new",
        "test_readonly_text_field",
        "test_save_button",
        "test_add_view_form_and_formsets_run_validation",
        "test_add_view"
      ],
      "tests/admin_changelist/tests.py": [
        "test_multiuser_edit",
        "test_tuple_list_display"
      ]
    }
  },
  {
    "instance_id": "django__django-16263",
    "file_function": {
      "tests/prefetch_related/tests.py": [
        "test_count"
      ],
      "tests/annotations/tests.py": [
        "test_alias_annotation_expression",
        "test_aggregate_alias"
      ],
      "tests/aggregation_regress/tests.py": [
        "test_annotate_and_join",
        "test_more_more_more"
      ]
    }
  },
  {
    "instance_id": "django__django-17029",
    "file_function": {
      "tests/migrations/test_operations.py": [
        "test_create_model_with_unique_after",
        "test_rename_model",
        "test_alter_field_pk_fk"
      ]
    }
  },
  {
    "instance_id": "django__django-11163",
    "file_function": {
      "tests/model_forms/tests.py": [
        "test_to_field_name_with_initial_data",
        "test_subset_fields"
      ],
      "tests/admin_views/tests.py": [
        "test_readonly_get"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-7166",
    "file_function": {
      "astropy/utils/tests/test_misc.py": [
        "test_inherit_docstrings"
      ]
    }
  },
  {
    "instance_id": "django__django-12039",
    "file_function": {
      "tests/schema/tests.py": [
        "test_add_foreign_key_long_names",
        "test_index_together_with_fk",
        "test_alter_field_add_index_to_integerfield"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-14710",
    "file_function": {
      "sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py": [
        "test_missing_values_resilience",
        "test_early_stopping_classification"
      ],
      "sklearn/ensemble/_hist_gradient_boosting/tests/test_warm_start.py": [
        "test_random_seeds_warm_start"
      ]
    }
  },
  {
    "instance_id": "psf__requests-5414",
    "file_function": {
      "tests/test_requests.py": [
        "test_errors",
        "test_params_are_added_before_fragment",
        "test_params_bytes_are_encoded",
        "test_preparing_bad_url",
        "test_parameters_for_nonstandard_schemes",
        "test_long_authinfo_in_url",
        "test_invalid_url"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-13779",
    "file_function": {
      "sklearn/ensemble/tests/test_voting.py": [
        "test_set_params",
        "test_set_estimator_none",
        "test_estimator_init",
        "test_multilabel",
        "test_sample_weight",
        "test_weights_regressor"
      ]
    }
  },
  {
    "instance_id": "django__django-14349",
    "file_function": {
      "tests/forms_tests/tests/test_validators.py": [
        "test_value_placeholder_with_char_field",
        "test_value_placeholder_with_integer_field"
      ],
      "tests/forms_tests/field_tests/test_urlfield.py": [
        "test_url_regex_ticket11198",
        "test_urlfield_2",
        "test_urlfield_1"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-13647",
    "file_function": {
      "sympy/matrices/tests/test_sparse.py": [
        "sparse_zeros"
      ],
      "sympy/matrices/tests/test_matrices.py": [
        "test_diff"
      ]
    }
  },
  {
    "instance_id": "django__django-16527",
    "file_function": {
      "tests/admin_views/test_templatetags.py": [
        "test_submit_row",
        "test_override_show_save_and_add_another"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-23413",
    "file_function": {
      "sympy/combinatorics/tests/test_perm_groups.py": [
        "test_coset_rank",
        "test_coset_factor"
      ],
      "sympy/combinatorics/tests/test_partitions.py": [
        "test_rgs"
      ],
      "sympy/printing/tests/test_numpy.py": [
        "test_matsolve"
      ],
      "sympy/polys/matrices/tests/test_normalforms.py": [
        "test_hermite_normal"
      ],
      "sympy/matrices/tests/test_normalforms.py": [
        "test_hermite_normal"
      ],
      "sympy/geometry/tests/test_point.py": [
        "test_point"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-18189",
    "file_function": {
      "sympy/solvers/tests/test_diophantine.py": [
        "test_input_format",
        "test_univariate",
        "test_classify_diop",
        "test_linear",
        "test_quadratic_simple_hyperbolic_case",
        "test_quadratic_elliptical_case",
        "test_diop_ternary_quadratic",
        "test_diophantine",
        "test_diopcoverage",
        "test_diop_sum_of_even_powers"
      ]
    }
  },
  {
    "instance_id": "django__django-13809",
    "file_function": {
      "tests/user_commands/tests.py": [
        "test_requires_system_checks_invalid",
        "test_requires_system_checks_warning",
        "handle"
      ],
      "tests/admin_scripts/tests.py": [
        "handle"
      ]
    }
  },
  {
    "instance_id": "django__django-10097",
    "file_function": {
      "tests/validators/tests.py": [
        "create_path"
      ]
    }
  },
  {
    "instance_id": "pallets__flask-5014",
    "file_function": {
      "tests/test_async.py": [
        "_async_app",
        "index"
      ],
      "tests/test_cli.py": [
        "test_cli_blueprints",
        "test_cli_empty"
      ]
    }
  },
  {
    "instance_id": "django__django-11138",
    "file_function": {
      "tests/backends/postgresql/tests.py": [
        "test_lookup_cast"
      ]
    }
  },
  {
    "instance_id": "django__django-7530",
    "file_function": {
      "tests/admin_scripts/tests.py": [
        "monkey_run",
        "setUp",
        "handle"
      ]
    }
  },
  {
    "instance_id": "django__django-14376",
    "file_function": {
      "tests/backends/sqlite/tests.py": [
        "test_memory_db_test_name"
      ],
      "tests/backends/postgresql/tests.py": [
        "test_database_name_too_long",
        "test_database_name_empty",
        "test_service_name",
        "test_service_name_default_db"
      ]
    }
  },
  {
    "instance_id": "django__django-16145",
    "file_function": {
      "tests/user_commands/tests.py": [
        "test_requires_system_checks_invalid"
      ],
      "tests/admin_scripts/tests.py": [
        "handle"
      ]
    }
  }
]