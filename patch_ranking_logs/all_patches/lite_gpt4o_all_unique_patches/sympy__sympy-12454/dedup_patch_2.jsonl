{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-12454", "model_patch": "diff --git a/sympy/matrices/matrices.py b/sympy/matrices/matrices.py\nindex f1dbb52..6200727 100644\n--- a/sympy/matrices/matrices.py\n+++ b/sympy/matrices/matrices.py\n@@ -1110,6 +1110,9 @@ class MatrixProperties(MatrixRequired):\n         is_diagonal\n         is_upper_hessenberg\n         \"\"\"\n+        if self.rows != self.cols:\n+            raise ValueError(\"Matrix must be square to check if it is upper triangular\")\n+\n         return all(self[i, j].is_zero\n                    for i in range(1, self.rows)\n                    for j in range(i))\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/matrices.py b/sympy/matrices/matrices.py\nindex ef5ca65..7d88f5a 100644\n--- a/sympy/matrices/matrices.py\n+++ b/sympy/matrices/matrices.py\n@@ -295,6 +295,8 @@ class MatrixProperties(MatrixRequired):\n         return self._eval_is_upper_hessenberg()\n     @property\n     def is_upper(self):\n+        if self.rows != self.cols:\n+            raise ValueError('Matrix must be square to check if it is upper triangular')\n         return all((self[i, j].is_zero for i in range(1, self.rows) for j in range(i)))\n     @property\n     def is_zero(self):\n", "normalized_occurrence": 1}
