{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-7220", "model_patch": "diff --git a/src/_pytest/terminal.py b/src/_pytest/terminal.py\nindex ebc163c..c3e6854 100644\n--- a/src/_pytest/terminal.py\n+++ b/src/_pytest/terminal.py\n@@ -776,7 +776,14 @@ class TerminalReporter:\n \n     def _locationline(self, nodeid, fspath, lineno, domain):\n         def mkrel(nodeid):\n-            line = self.config.cwd_relative_nodeid(nodeid)\n+            # Use startdir for consistent path resolution regardless of cwd\n+            line = nodeid\n+            try:\n+                if fspath:\n+                    fspath = py.path.local(fspath)\n+                    line = self.startdir.bestrelpath(fspath)\n+            except OSError:\n+                pass\n             if domain and line.endswith(domain):\n                 line = line[: -len(domain)]\n                 values = domain.split(\"[\")\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/terminal.py b/src/_pytest/terminal.py\nindex 554ecf8..11f8302 100644\n--- a/src/_pytest/terminal.py\n+++ b/src/_pytest/terminal.py\n@@ -510,7 +510,13 @@ class TerminalReporter:\n                 self._tw.line('(to show a full traceback on KeyboardInterrupt use --full-trace)', yellow=True)\n     def _locationline(self, nodeid, fspath, lineno, domain):\n         def mkrel(nodeid):\n-            line = self.config.cwd_relative_nodeid(nodeid)\n+            line = nodeid\n+            try:\n+                if fspath:\n+                    fspath = py.path.local(fspath)\n+                    line = self.startdir.bestrelpath(fspath)\n+            except OSError:\n+                pass\n             if domain and line.endswith(domain):\n                 line = line[:-len(domain)]\n                 values = domain.split('[')\n", "normalized_occurrence": 1}
