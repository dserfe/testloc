{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-14182", "model_patch": "diff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py\nindex 00bbbaf..10c0fee 100644\n--- a/astropy/io/ascii/rst.py\n+++ b/astropy/io/ascii/rst.py\n@@ -57,10 +57,21 @@ class RST(FixedWidth):\n     data_class = SimpleRSTData\n     header_class = SimpleRSTHeader\n \n-    def __init__(self):\n+    def __init__(self, header_rows=None):\n+        self.header_rows = header_rows\n         super().__init__(delimiter_pad=None, bookend=False)\n \n     def write(self, lines):\n         lines = super().write(lines)\n+        if self.header_rows:\n+            header_lines = []\n+            for row_type in self.header_rows:\n+                if row_type == \"name\":\n+                    header_lines.append(\" \".join(self.header.cols))\n+                elif row_type == \"unit\":\n+                    header_lines.append(\" \".join([col.unit.name for col in self.header.cols]))\n+                else:\n+                    raise ValueError(f\"Unknown header row type: {row_type}\")\n+            lines = header_lines + lines\n         lines = [lines[1]] + lines + [lines[1]]\n-        return lines\n+        return lines\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py\nindex 65d6c1d..e8ce564 100644\n--- a/astropy/io/ascii/rst.py\n+++ b/astropy/io/ascii/rst.py\n@@ -18,9 +18,20 @@ class RST(FixedWidth):\n     _description = 'reStructuredText simple table'\n     data_class = SimpleRSTData\n     header_class = SimpleRSTHeader\n-    def __init__(self):\n+    def __init__(self, header_rows=None):\n+        self.header_rows = header_rows\n         super().__init__(delimiter_pad=None, bookend=False)\n     def write(self, lines):\n         lines = super().write(lines)\n+        if self.header_rows:\n+            header_lines = []\n+            for row_type in self.header_rows:\n+                if row_type == 'name':\n+                    header_lines.append(' '.join(self.header.cols))\n+                elif row_type == 'unit':\n+                    header_lines.append(' '.join([col.unit.name for col in self.header.cols]))\n+                else:\n+                    raise ValueError(f'Unknown header row type: {row_type}')\n+            lines = header_lines + lines\n         lines = [lines[1]] + lines + [lines[1]]\n         return lines\n\\ No newline at end of file\n", "normalized_occurrence": 1}
