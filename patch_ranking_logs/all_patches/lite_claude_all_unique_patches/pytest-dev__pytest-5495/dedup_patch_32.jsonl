{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-5495", "model_patch": "diff --git a/src/_pytest/assertion/util.py b/src/_pytest/assertion/util.py\nindex c9b4ff0..fc3e06e 100644\n--- a/src/_pytest/assertion/util.py\n+++ b/src/_pytest/assertion/util.py\n@@ -178,9 +178,12 @@ def _diff_text(left, right, verbose=0):\n     def escape_for_readable_diff(binary_text):\n         \"\"\"\n         Ensures that the internal string is always valid unicode, converting any bytes safely to valid unicode.\n-        This is done using repr() which then needs post-processing to fix the encompassing quotes and un-escape\n-        newlines and carriage returns (#429).\n+        For bytes, we want to show the actual content prefixed with 'b' to make it clear it's a byte string,\n+        while still making the diff readable.\n         \"\"\"\n+        if isinstance(binary_text, bytes):\n+            # Keep b'' notation but show actual content for better diff\n+            return \"b'\" + binary_text.decode('ascii', 'backslashreplace') + \"'\"\n         r = str(repr(binary_text)[1:-1])\n         r = r.replace(r\"\\n\", \"\\n\")\n         r = r.replace(r\"\\r\", \"\\r\")\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/assertion/util.py b/src/_pytest/assertion/util.py\nindex 855efef..a7a7c01 100644\n--- a/src/_pytest/assertion/util.py\n+++ b/src/_pytest/assertion/util.py\n@@ -104,6 +104,8 @@ def _diff_text(left, right, verbose=0):\n     from difflib import ndiff\n     explanation = []\n     def escape_for_readable_diff(binary_text):\n+        if isinstance(binary_text, bytes):\n+            return \"b'\" + binary_text.decode('ascii', 'backslashreplace') + \"'\"\n         r = str(repr(binary_text)[1:-1])\n         r = r.replace('\\\\n', '\\n')\n         r = r.replace('\\\\r', '\\r')\n", "normalized_occurrence": 2}
