{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-7220", "model_patch": "diff --git a/src/_pytest/terminal.py b/src/_pytest/terminal.py\nindex ebc163c..cf4ffd6 100644\n--- a/src/_pytest/terminal.py\n+++ b/src/_pytest/terminal.py\n@@ -774,27 +774,7 @@ class TerminalReporter:\n                     yellow=True,\n                 )\n \n-    def _locationline(self, nodeid, fspath, lineno, domain):\n-        def mkrel(nodeid):\n-            line = self.config.cwd_relative_nodeid(nodeid)\n-            if domain and line.endswith(domain):\n-                line = line[: -len(domain)]\n-                values = domain.split(\"[\")\n-                values[0] = values[0].replace(\".\", \"::\")  # don't replace '.' in params\n-                line += \"[\".join(values)\n-            return line\n-\n-        # collect_fspath comes from testid which has a \"/\"-normalized path\n-\n-        if fspath:\n-            res = mkrel(nodeid)\n-            if self.verbosity >= 2 and nodeid.split(\"::\")[0] != fspath.replace(\n-                \"\\\\\", nodes.SEP\n-            ):\n-                res += \" <- \" + self.startdir.bestrelpath(fspath)\n-        else:\n-            res = \"[location]\"\n-        return res + \" \"\n+\n \n     def _getfailureheadline(self, rep):\n         head_line = rep.head_line\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/terminal.py b/src/_pytest/terminal.py\nindex 554ecf8..a37701d 100644\n--- a/src/_pytest/terminal.py\n+++ b/src/_pytest/terminal.py\n@@ -508,22 +508,6 @@ class TerminalReporter:\n             else:\n                 excrepr.reprcrash.toterminal(self._tw)\n                 self._tw.line('(to show a full traceback on KeyboardInterrupt use --full-trace)', yellow=True)\n-    def _locationline(self, nodeid, fspath, lineno, domain):\n-        def mkrel(nodeid):\n-            line = self.config.cwd_relative_nodeid(nodeid)\n-            if domain and line.endswith(domain):\n-                line = line[:-len(domain)]\n-                values = domain.split('[')\n-                values[0] = values[0].replace('.', '::')\n-                line += '['.join(values)\n-            return line\n-        if fspath:\n-            res = mkrel(nodeid)\n-            if self.verbosity >= 2 and nodeid.split('::')[0] != fspath.replace('\\\\', nodes.SEP):\n-                res += ' <- ' + self.startdir.bestrelpath(fspath)\n-        else:\n-            res = '[location]'\n-        return res + ' '\n     def _getfailureheadline(self, rep):\n         head_line = rep.head_line\n         if head_line:\n", "normalized_occurrence": 1}
