{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-24066", "model_patch": "diff --git a/sympy/physics/units/dimensions.py b/sympy/physics/units/dimensions.py\nindex d505a16..8fdec96 100644\n--- a/sympy/physics/units/dimensions.py\n+++ b/sympy/physics/units/dimensions.py\n@@ -404,7 +404,9 @@ class DimensionSystem(Basic, _QuantityMapper):\n             if isinstance(result, Dimension):\n                 return self.get_dimensional_dependencies(result)\n             elif result.func == dimension.name.func:\n-                if isinstance(dimension.name, TrigonometricFunction):\n+                if dimension.name.func == exp:\n+                    return {}\n+                elif isinstance(dimension.name, TrigonometricFunction):\n                     if dicts[0] in ({}, {Dimension('angle'): 1}):\n                         return {}\n                     else:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/physics/units/dimensions.py b/sympy/physics/units/dimensions.py\nindex 14cb605..727562f 100644\n--- a/sympy/physics/units/dimensions.py\n+++ b/sympy/physics/units/dimensions.py\n@@ -231,7 +231,9 @@ class DimensionSystem(Basic, _QuantityMapper):\n             if isinstance(result, Dimension):\n                 return self.get_dimensional_dependencies(result)\n             elif result.func == dimension.name.func:\n-                if isinstance(dimension.name, TrigonometricFunction):\n+                if dimension.name.func == exp:\n+                    return {}\n+                elif isinstance(dimension.name, TrigonometricFunction):\n                     if dicts[0] in ({}, {Dimension('angle'): 1}):\n                         return {}\n                     else:\n", "normalized_occurrence": 1}
