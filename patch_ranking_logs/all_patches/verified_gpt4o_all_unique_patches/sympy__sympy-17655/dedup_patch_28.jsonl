{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-17655", "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex a708f18..c182501 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -274,9 +274,13 @@ class Point(GeometryEntity):\n \n         sympy.geometry.point.Point.scale\n         \"\"\"\n+        from sympy import Expr\n         factor = sympify(factor)\n-        coords = [simplify(x*factor) for x in self.args]\n-        return Point(coords, evaluate=False)\n+        if isinstance(factor, Expr):\n+            coords = [simplify(x*factor) for x in self.args]\n+            return Point(coords, evaluate=False)\n+        else:\n+            raise TypeError(\"Multiplication with type {} is not supported\".format(type(factor)))\n \n     def __neg__(self):\n         \"\"\"Negate the point.\"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex e45d95f..c83b3be 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -87,9 +87,13 @@ class Point(GeometryEntity):\n     def __len__(self):\n         return len(self.args)\n     def __mul__(self, factor):\n+        from sympy import Expr\n         factor = sympify(factor)\n-        coords = [simplify(x * factor) for x in self.args]\n-        return Point(coords, evaluate=False)\n+        if isinstance(factor, Expr):\n+            coords = [simplify(x * factor) for x in self.args]\n+            return Point(coords, evaluate=False)\n+        else:\n+            raise TypeError('Multiplication with type {} is not supported'.format(type(factor)))\n     def __neg__(self):\n         coords = [-x for x in self.args]\n         return Point(coords, evaluate=False)\n", "normalized_occurrence": 1}
