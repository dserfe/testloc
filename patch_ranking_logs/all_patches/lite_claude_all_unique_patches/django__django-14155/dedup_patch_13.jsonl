{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14155", "model_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 43e675a..3a9c76c 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -45,6 +45,19 @@ class ResolverMatch:\n         self.namespaces = [x for x in namespaces if x] if namespaces else []\n         self.namespace = ':'.join(self.namespaces)\n \n+        # Handle functools.partial\n+        if hasattr(func, 'func'):\n+            # A partial\n+            partial = func\n+            func = partial.func\n+            # Include partial args/keywords in path\n+            partial_str = []\n+            if partial.args:\n+                partial_str.append(f\"args={partial.args}\")\n+            if partial.keywords:\n+                partial_str.append(f\"kwargs={partial.keywords}\")\n+            partial_desc = f\"partial[{', '.join(partial_str)}]\" if partial_str else \"partial\"\n+\n         if not hasattr(func, '__name__'):\n             # A class-based view\n             self._func_path = func.__class__.__module__ + '.' + func.__class__.__name__\n@@ -52,6 +65,10 @@ class ResolverMatch:\n             # A function-based view\n             self._func_path = func.__module__ + '.' + func.__name__\n \n+        # Append partial description if this was a partial\n+        if hasattr(func, 'func'):\n+            self._func_path = f\"{self._func_path}({partial_desc})\"\n+\n         view_path = url_name or self._func_path\n         self.view_name = ':'.join(self.namespaces + [view_path])\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 8f64f28..cbaa006 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -29,10 +29,21 @@ class ResolverMatch:\n         self.app_name = ':'.join(self.app_names)\n         self.namespaces = [x for x in namespaces if x] if namespaces else []\n         self.namespace = ':'.join(self.namespaces)\n+        if hasattr(func, 'func'):\n+            partial = func\n+            func = partial.func\n+            partial_str = []\n+            if partial.args:\n+                partial_str.append(f'args={partial.args}')\n+            if partial.keywords:\n+                partial_str.append(f'kwargs={partial.keywords}')\n+            partial_desc = f\"partial[{', '.join(partial_str)}]\" if partial_str else 'partial'\n         if not hasattr(func, '__name__'):\n             self._func_path = func.__class__.__module__ + '.' + func.__class__.__name__\n         else:\n             self._func_path = func.__module__ + '.' + func.__name__\n+        if hasattr(func, 'func'):\n+            self._func_path = f'{self._func_path}({partial_desc})'\n         view_path = url_name or self._func_path\n         self.view_name = ':'.join(self.namespaces + [view_path])\n     def __getitem__(self, index):\n", "normalized_occurrence": 1}
