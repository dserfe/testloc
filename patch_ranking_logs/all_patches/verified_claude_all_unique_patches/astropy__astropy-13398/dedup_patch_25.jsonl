{"model_name_or_path": "agentless_claude", "instance_id": "astropy__astropy-13398", "model_patch": "diff --git a/astropy/coordinates/builtin_frames/itrs.py b/astropy/coordinates/builtin_frames/itrs.py\nindex c4e677a..e8a4926 100644\n--- a/astropy/coordinates/builtin_frames/itrs.py\n+++ b/astropy/coordinates/builtin_frames/itrs.py\n@@ -34,5 +34,14 @@ class ITRS(BaseCoordinateFrame):\n         cart = self.represent_as(CartesianRepresentation)\n         return EarthLocation(x=cart.x, y=cart.y, z=cart.z)\n \n-# Self-transform is in intermediate_rotation_transforms.py with all the other\n-# ITRS transforms\n+    @frame_transform_graph.transform(FunctionTransformWithFiniteDifference, ITRS, ITRS)\n+    def itrs_to_itrs(from_coo, to_frame):\n+        \"\"\"\n+        Transform from ITRS to ITRS.\n+        \n+        This transformation treats ITRS coordinates as time invariant within the ITRF,\n+        rather than referring them to the Solar System Barycenter.\n+        \"\"\"\n+        # Simply adopt the cartesian representation without time transforms\n+        # since ITRS positions should be treated as time invariant\n+        return to_frame.realize_frame(from_coo.cartesian)\n", "occurrence": 1, "normalized_patch": "--- a/astropy/coordinates/builtin_frames/itrs.py\n+++ b/astropy/coordinates/builtin_frames/itrs.py\n-        return EarthLocation(x=cart.x, y=cart.y, z=cart.z)\n+        return EarthLocation(x=cart.x, y=cart.y, z=cart.z)\n+    @frame_transform_graph.transform(FunctionTransformWithFiniteDifference, ITRS, ITRS)\n+    def itrs_to_itrs(from_coo, to_frame):\n+        return to_frame.realize_frame(from_coo.cartesian)", "normalized_occurrence": 1}
