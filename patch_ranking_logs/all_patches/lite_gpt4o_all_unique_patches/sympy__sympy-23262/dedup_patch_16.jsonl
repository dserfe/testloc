{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-23262", "model_patch": "diff --git a/sympy/printing/pycode.py b/sympy/printing/pycode.py\nindex 9b53255..63ab1cf 100644\n--- a/sympy/printing/pycode.py\n+++ b/sympy/printing/pycode.py\n@@ -539,7 +539,10 @@ class PythonCodePrinter(AbstractPythonCodePrinter):\n     def _print_Indexed(self, expr):\n         base = expr.args[0]\n         index = expr.args[1:]\n-        return \"{}[{}]\".format(str(base), \", \".join([self._print(ind) for ind in index]))\n+        elements = [self._print(ind) for ind in index]\n+        if len(elements) == 1:\n+            return \"{}[{},]\".format(str(base), elements[0])\n+        return \"{}[{}]\".format(str(base), \", \".join(elements))\n \n     def _print_Pow(self, expr, rational=False):\n         return self._hprint_Pow(expr, rational=rational)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/pycode.py b/sympy/printing/pycode.py\nindex d08d049..374c0a6 100644\n--- a/sympy/printing/pycode.py\n+++ b/sympy/printing/pycode.py\n@@ -268,7 +268,10 @@ class PythonCodePrinter(AbstractPythonCodePrinter):\n     def _print_Indexed(self, expr):\n         base = expr.args[0]\n         index = expr.args[1:]\n-        return '{}[{}]'.format(str(base), ', '.join([self._print(ind) for ind in index]))\n+        elements = [self._print(ind) for ind in index]\n+        if len(elements) == 1:\n+            return '{}[{},]'.format(str(base), elements[0])\n+        return '{}[{}]'.format(str(base), ', '.join(elements))\n     def _print_Pow(self, expr, rational=False):\n         return self._hprint_Pow(expr, rational=rational)\n     def _print_Rational(self, expr):\n", "normalized_occurrence": 1}
