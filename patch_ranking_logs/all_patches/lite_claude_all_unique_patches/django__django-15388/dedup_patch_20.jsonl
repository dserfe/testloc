{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15388", "model_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex dcf3cdd..8483bf6 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -297,7 +297,11 @@ class BaseReloader:\n         if include_globs:\n             for directory, patterns in self.directory_globs.items():\n                 for pattern in patterns:\n-                    yield from directory.glob(pattern)\n+                    # Skip if the directory is the project root (BASE_DIR)\n+                    if directory.name == 'templates' or not any(\n+                        p.suffix == '.py' for p in directory.iterdir()\n+                    ):\n+                        yield from directory.glob(pattern)\n \n     def wait_for_apps_ready(self, app_reg, django_main_thread):\n         \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex 4cc598a..6c6ca19 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -185,7 +185,8 @@ class BaseReloader:\n         if include_globs:\n             for directory, patterns in self.directory_globs.items():\n                 for pattern in patterns:\n-                    yield from directory.glob(pattern)\n+                    if directory.name == 'templates' or not any((p.suffix == '.py' for p in directory.iterdir())):\n+                        yield from directory.glob(pattern)\n     def wait_for_apps_ready(self, app_reg, django_main_thread):\n         while django_main_thread.is_alive():\n             if app_reg.ready_event.wait(timeout=0.1):\n", "normalized_occurrence": 1}
