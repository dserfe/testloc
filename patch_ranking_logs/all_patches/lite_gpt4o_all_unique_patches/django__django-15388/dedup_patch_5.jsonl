{"model_name_or_path": "agentless", "instance_id": "django__django-15388", "model_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex dcf3cdd..43c8698 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -259,6 +259,22 @@ def trigger_reload(filename):\n \n \n def restart_with_reloader():\n+    from django.conf import settings\n+    import os\n+    from pathlib import Path\n+\n+    def watch_dir(path):\n+        for root, _, files in os.walk(path):\n+            for filename in files:\n+                full_path = os.path.join(root, filename)\n+                if full_path.endswith(('.py', '.html')):\n+                    yield full_path\n+\n+    if hasattr(settings, 'TEMPLATES'):\n+        for conf in settings.TEMPLATES:\n+            for directory in conf.get('DIRS', []):\n+                for template_file in watch_dir(directory):\n+                    watched_files.add(template_file)\n     new_environ = {**os.environ, DJANGO_AUTORELOAD_ENV: 'true'}\n     args = get_child_arguments()\n     while True:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex 4cc598a..2d99d6f 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -159,6 +159,20 @@ def trigger_reload(filename):\n     logger.info('%s changed, reloading.', filename)\n     sys.exit(3)\n def restart_with_reloader():\n+    from django.conf import settings\n+    import os\n+    from pathlib import Path\n+    def watch_dir(path):\n+        for root, _, files in os.walk(path):\n+            for filename in files:\n+                full_path = os.path.join(root, filename)\n+                if full_path.endswith(('.py', '.html')):\n+                    yield full_path\n+    if hasattr(settings, 'TEMPLATES'):\n+        for conf in settings.TEMPLATES:\n+            for directory in conf.get('DIRS', []):\n+                for template_file in watch_dir(directory):\n+                    watched_files.add(template_file)\n     new_environ = {**os.environ, DJANGO_AUTORELOAD_ENV: 'true'}\n     args = get_child_arguments()\n     while True:\n", "normalized_occurrence": 1}
