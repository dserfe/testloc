{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12125", "model_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex 824ab10..9476b26 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -90,11 +90,23 @@ class DeconstructableSerializer(BaseSerializer):\n \n     @staticmethod\n     def _serialize_path(path):\n-        module, name = path.rsplit(\".\", 1)\n-        if module == \"django.db.models\":\n+        if path.startswith('django.db.models.'):\n+            module = 'django.db.models'\n+            name = path[len(module)+1:]\n             imports = {\"from django.db import models\"}\n             name = \"models.%s\" % name\n         else:\n+            # For other paths, find the module (up to the first class name)\n+            parts = path.split('.')\n+            # Find where the module path ends and class path begins\n+            for i in range(len(parts)-1, 0, -1):\n+                if parts[i-1][0].islower() and parts[i][0].isupper():\n+                    module = '.'.join(parts[:i])\n+                    name = '.'.join(parts[i:])\n+                    break\n+            else:\n+                # Fallback to original behavior if we can't determine the split\n+                module, name = path.rsplit(\".\", 1)\n             imports = {\"import %s\" % module}\n             name = path\n         return name, imports\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex d663baf..762b395 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -68,11 +68,20 @@ class DeconstructableSerializer(BaseSerializer):\n         return ('%s(%s)' % (name, ', '.join(strings)), imports)\n     @staticmethod\n     def _serialize_path(path):\n-        module, name = path.rsplit('.', 1)\n-        if module == 'django.db.models':\n+        if path.startswith('django.db.models.'):\n+            module = 'django.db.models'\n+            name = path[len(module) + 1:]\n             imports = {'from django.db import models'}\n             name = 'models.%s' % name\n         else:\n+            parts = path.split('.')\n+            for i in range(len(parts) - 1, 0, -1):\n+                if parts[i - 1][0].islower() and parts[i][0].isupper():\n+                    module = '.'.join(parts[:i])\n+                    name = '.'.join(parts[i:])\n+                    break\n+            else:\n+                module, name = path.rsplit('.', 1)\n             imports = {'import %s' % module}\n             name = path\n         return (name, imports)\n", "normalized_occurrence": 1}
