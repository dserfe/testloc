{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-6197", "model_patch": "diff --git a/src/_pytest/python.py b/src/_pytest/python.py\nindex 272731b..6852292 100644\n--- a/src/_pytest/python.py\n+++ b/src/_pytest/python.py\n@@ -176,11 +176,8 @@ def pytest_pyfunc_call(pyfuncitem):\n def pytest_collect_file(path, parent):\n     ext = path.ext\n     if ext == \".py\":\n-        if not parent.session.isinitpath(path):\n-            if not path_matches_patterns(\n-                path, parent.config.getini(\"python_files\") + [\"__init__.py\"]\n-            ):\n-                return\n+        if not parent.session.isinitpath(path) and not path_matches_patterns(path, parent.config.getini(\"python_files\")):\n+            return\n         ihook = parent.session.gethookproxy(path)\n         return ihook.pytest_pycollect_makemodule(path=path, parent=parent)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/python.py b/src/_pytest/python.py\nindex 33dd083..56d65f7 100644\n--- a/src/_pytest/python.py\n+++ b/src/_pytest/python.py\n@@ -92,9 +92,8 @@ def pytest_pyfunc_call(pyfuncitem):\n def pytest_collect_file(path, parent):\n     ext = path.ext\n     if ext == '.py':\n-        if not parent.session.isinitpath(path):\n-            if not path_matches_patterns(path, parent.config.getini('python_files') + ['__init__.py']):\n-                return\n+        if not parent.session.isinitpath(path) and (not path_matches_patterns(path, parent.config.getini('python_files'))):\n+            return\n         ihook = parent.session.gethookproxy(path)\n         return ihook.pytest_pycollect_makemodule(path=path, parent=parent)\n def path_matches_patterns(path, patterns):\n", "normalized_occurrence": 2}
