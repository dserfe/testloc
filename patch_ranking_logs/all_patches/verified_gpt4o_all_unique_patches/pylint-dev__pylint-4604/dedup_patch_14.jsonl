{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-4604", "model_patch": "diff --git a/pylint/checkers/imports.py b/pylint/checkers/imports.py\nindex 7e31505..8c12187 100644\n--- a/pylint/checkers/imports.py\n+++ b/pylint/checkers/imports.py\n@@ -559,7 +559,7 @@ class ImportsChecker(DeprecatedMixin, BaseChecker):\n         self._check_reimport(node, basename=basename, level=node.level)\n         self._check_toplevel(node)\n \n-        if isinstance(node.parent, astroid.Module):\n+        if isinstance(node.parent, astroid.Module) or self._is_in_type_comment(node):\n             # Allow imports nested\n             self._check_position(node)\n         if isinstance(node.scope(), astroid.Module):\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/checkers/imports.py b/pylint/checkers/imports.py\nindex 1045c62..e66cd36 100644\n--- a/pylint/checkers/imports.py\n+++ b/pylint/checkers/imports.py\n@@ -196,7 +196,7 @@ class ImportsChecker(DeprecatedMixin, BaseChecker):\n         self._check_same_line_imports(node)\n         self._check_reimport(node, basename=basename, level=node.level)\n         self._check_toplevel(node)\n-        if isinstance(node.parent, astroid.Module):\n+        if isinstance(node.parent, astroid.Module) or self._is_in_type_comment(node):\n             self._check_position(node)\n         if isinstance(node.scope(), astroid.Module):\n             self._record_import(node, imported_module)\n", "normalized_occurrence": 1}
