{"model_name_or_path": "agentless", "instance_id": "django__django-14667", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 5d0565e..8424267 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -1221,6 +1221,9 @@ class QuerySet:\n         if fields == (None,):\n             clone.query.clear_deferred_loading()\n         else:\n+            if clone.query.deferred_loading[1] is False:\n+                # If there are fields specified by `only`, clear them first\n+                clone.query.clear_deferred_loading()\n             clone.query.add_deferred_loading(fields)\n         return clone\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 0052c9e..83c264c 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -741,6 +741,8 @@ class QuerySet:\n         if fields == (None,):\n             clone.query.clear_deferred_loading()\n         else:\n+            if clone.query.deferred_loading[1] is False:\n+                clone.query.clear_deferred_loading()\n             clone.query.add_deferred_loading(fields)\n         return clone\n     def only(self, *fields):\n", "normalized_occurrence": 2}
