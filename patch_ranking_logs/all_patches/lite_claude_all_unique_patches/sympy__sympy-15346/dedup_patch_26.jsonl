{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-15346", "model_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex 9a2774b..b8c9c1c 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -428,6 +428,8 @@ _trigs = (TrigonometricFunction, HyperbolicFunction)\n def trigsimp(expr, **opts):\n     \"\"\"\n     reduces expression by using known trig identities\n+    \n+    Note: This function handles both symbolic and rational number arguments.\n \n     Notes\n     =====\n@@ -475,6 +477,15 @@ def trigsimp(expr, **opts):\n \n     expr = sympify(expr)\n \n+    # Handle expressions containing trig functions with rational arguments\n+    if expr.has(TrigonometricFunction):\n+        # Try to identify cos(a-b) patterns in dot products and similar expressions\n+        if any(isinstance(arg.args[0], Rational) for arg in expr.atoms(TrigonometricFunction)):\n+            from sympy import expand_trig\n+            expanded = expand_trig(expr)\n+            if expanded != expr:\n+                return expanded.simplify()\n+\n     try:\n         return expr._eval_trigsimp(**opts)\n     except AttributeError:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex 79862a9..16f5bbe 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -147,6 +147,12 @@ _trigs = (TrigonometricFunction, HyperbolicFunction)\n def trigsimp(expr, **opts):\n     from sympy.simplify.fu import fu\n     expr = sympify(expr)\n+    if expr.has(TrigonometricFunction):\n+        if any((isinstance(arg.args[0], Rational) for arg in expr.atoms(TrigonometricFunction))):\n+            from sympy import expand_trig\n+            expanded = expand_trig(expr)\n+            if expanded != expr:\n+                return expanded.simplify()\n     try:\n         return expr._eval_trigsimp(**opts)\n     except AttributeError:\n", "normalized_occurrence": 1}
