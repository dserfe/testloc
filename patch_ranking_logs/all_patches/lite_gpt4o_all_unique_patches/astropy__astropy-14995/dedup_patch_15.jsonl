{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-14995", "model_patch": "diff --git a/astropy/nddata/mixins/ndarithmetic.py b/astropy/nddata/mixins/ndarithmetic.py\nindex fbb2aba..6d62cfd 100644\n--- a/astropy/nddata/mixins/ndarithmetic.py\n+++ b/astropy/nddata/mixins/ndarithmetic.py\n@@ -513,9 +513,13 @@ class NDArithmeticMixin:\n             ``handle_mask`` must create (and copy) the returned mask.\n         \"\"\"\n         # If only one mask is present we need not bother about any type checks\n-        if (\n-            self.mask is None and operand is not None and operand.mask is None\n-        ) or handle_mask is None:\n+        if (self.mask is None and operand is not None and operand.mask is None) or handle_mask is None:\n+            return None\n+        elif self.mask is None and operand is not None:\n+            # Make a copy so there is no reference in the result.\n+            return deepcopy(operand.mask)\n+        elif self.mask is not None and (operand is None or operand.mask is None):\n+            return deepcopy(self.mask)\n             return None\n         elif self.mask is None and operand is not None:\n             # Make a copy so there is no reference in the result.\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/nddata/mixins/ndarithmetic.py b/astropy/nddata/mixins/ndarithmetic.py\nindex b7eb663..c444b3f 100644\n--- a/astropy/nddata/mixins/ndarithmetic.py\n+++ b/astropy/nddata/mixins/ndarithmetic.py\n@@ -116,6 +116,11 @@ class NDArithmeticMixin:\n             return None\n         elif self.mask is None and operand is not None:\n             return deepcopy(operand.mask)\n+        elif self.mask is not None and (operand is None or operand.mask is None):\n+            return deepcopy(self.mask)\n+            return None\n+        elif self.mask is None and operand is not None:\n+            return deepcopy(operand.mask)\n         elif operand is None:\n             return deepcopy(self.mask)\n         else:\n", "normalized_occurrence": 1}
