{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13449", "model_patch": "diff --git a/django/db/models/functions/window.py b/django/db/models/functions/window.py\nindex 01e5980..54020e1 100644\n--- a/django/db/models/functions/window.py\n+++ b/django/db/models/functions/window.py\n@@ -48,6 +48,18 @@ class LagLeadFunction(Func):\n         sources = self.get_source_expressions()\n         return sources[0].output_field\n \n+    def as_sqlite(self, compiler, connection, **extra_context):\n+        # For SQLite, we need to cast the whole window function\n+        template = 'CAST(%(function)s(%(expressions)s) OVER (%(window)s) AS %(cast_type)s)'\n+        extra_context['template'] = template\n+        # Get the output type for proper casting\n+        output_field = self._resolve_output_field()\n+        if hasattr(output_field, 'output_field'):\n+            output_field = output_field.output_field\n+        cast_type = compiler.connection.ops.field_cast_sql(output_field.get_internal_type())\n+        extra_context['cast_type'] = cast_type\n+        return super().as_sql(compiler, connection, **extra_context)\n+\n \n class Lag(LagLeadFunction):\n     function = 'LAG'\n", "normalized_patch": "--- a/django/db/models/functions/window.py\n+++ b/django/db/models/functions/window.py\n+    def as_sqlite(self, compiler, connection, **extra_context):\n+        template = 'CAST(%(function)s(%(expressions)s) OVER (%(window)s) AS %(cast_type)s)'\n+        extra_context['template'] = template\n+        output_field = self._resolve_output_field()\n+        if hasattr(output_field, 'output_field'):\n+            output_field = output_field.output_field\n+        cast_type = compiler.connection.ops.field_cast_sql(output_field.get_internal_type())\n+        extra_context['cast_type'] = cast_type\n+        return super().as_sql(compiler, connection, **extra_context)", "normalized_occurrence": 1}
