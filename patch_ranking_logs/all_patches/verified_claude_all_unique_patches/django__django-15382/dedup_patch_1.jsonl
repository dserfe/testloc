{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15382", "model_patch": "diff --git a/django/db/models/sql/where.py b/django/db/models/sql/where.py\nindex 7a540c9..102b396 100644\n--- a/django/db/models/sql/where.py\n+++ b/django/db/models/sql/where.py\n@@ -80,7 +80,11 @@ class WhereNode(tree.Node):\n             try:\n                 sql, params = compiler.compile(child)\n             except EmptyResultSet:\n-                empty_needed -= 1\n+                if getattr(child, 'negated', False) and hasattr(child, 'contains_aggregate'):\n+                    # Special case: negated empty EXISTS should return all rows\n+                    result.append('1=1')\n+                else:\n+                    empty_needed -= 1\n             else:\n                 if sql:\n                     result.append(sql)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/where.py b/django/db/models/sql/where.py\nindex 7f5e30d..f001427 100644\n--- a/django/db/models/sql/where.py\n+++ b/django/db/models/sql/where.py\n@@ -41,7 +41,10 @@ class WhereNode(tree.Node):\n             try:\n                 sql, params = compiler.compile(child)\n             except EmptyResultSet:\n-                empty_needed -= 1\n+                if getattr(child, 'negated', False) and hasattr(child, 'contains_aggregate'):\n+                    result.append('1=1')\n+                else:\n+                    empty_needed -= 1\n             else:\n                 if sql:\n                     result.append(sql)\n", "normalized_occurrence": 1}
