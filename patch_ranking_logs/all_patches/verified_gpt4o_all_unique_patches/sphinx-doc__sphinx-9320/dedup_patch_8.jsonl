{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9320", "model_patch": "diff --git a/sphinx/cmd/quickstart.py b/sphinx/cmd/quickstart.py\nindex 9978773..553721e 100644\n--- a/sphinx/cmd/quickstart.py\n+++ b/sphinx/cmd/quickstart.py\n@@ -215,6 +215,9 @@ def ask_user(d: Dict) -> None:\n         print(__('Enter the root path for documentation.'))\n         d['path'] = do_prompt(__('Root path for the documentation'), '.', is_path)\n \n+def is_path_or_exit(x):\n+    return x == '' or is_path(x)\n+\n     while path.isfile(path.join(d['path'], 'conf.py')) or \\\n             path.isfile(path.join(d['path'], 'source', 'conf.py')):\n         print()\n@@ -223,9 +226,7 @@ def ask_user(d: Dict) -> None:\n         print(__('sphinx-quickstart will not overwrite existing Sphinx projects.'))\n         print()\n         d['path'] = do_prompt(__('Please enter a new root path (or just Enter to exit)'),\n-                              '', is_path)\n-        if not d['path']:\n-            sys.exit(1)\n+                              '', is_path_or_exit)\n \n     if 'sep' not in d:\n         print()\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/cmd/quickstart.py b/sphinx/cmd/quickstart.py\nindex 05935f2..14669ca 100644\n--- a/sphinx/cmd/quickstart.py\n+++ b/sphinx/cmd/quickstart.py\n@@ -163,14 +163,15 @@ def ask_user(d: Dict) -> None:\n         print()\n         print(__('Enter the root path for documentation.'))\n         d['path'] = do_prompt(__('Root path for the documentation'), '.', is_path)\n+\n+def is_path_or_exit(x):\n+    return x == '' or is_path(x)\n     while path.isfile(path.join(d['path'], 'conf.py')) or path.isfile(path.join(d['path'], 'source', 'conf.py')):\n         print()\n         print(bold(__('Error: an existing conf.py has been found in the selected root path.')))\n         print(__('sphinx-quickstart will not overwrite existing Sphinx projects.'))\n         print()\n-        d['path'] = do_prompt(__('Please enter a new root path (or just Enter to exit)'), '', is_path)\n-        if not d['path']:\n-            sys.exit(1)\n+        d['path'] = do_prompt(__('Please enter a new root path (or just Enter to exit)'), '', is_path_or_exit)\n     if 'sep' not in d:\n         print()\n         print(__('You have two options for placing the build directory for Sphinx output.\\nEither, you use a directory \"_build\" within the root path, or you separate\\n\"source\" and \"build\" directories within the root path.'))\n", "normalized_occurrence": 1}
