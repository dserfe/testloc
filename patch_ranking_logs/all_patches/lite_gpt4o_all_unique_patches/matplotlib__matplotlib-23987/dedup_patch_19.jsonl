{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-23987", "model_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 71845c8..f270f2f 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -3429,20 +3429,25 @@ class Figure(FigureBase):\n         \"\"\"\n         from ._tight_layout import get_subplotspec_list\n         subplotspec_list = get_subplotspec_list(self.axes)\n-        if None in subplotspec_list:\n-            _api.warn_external(\"This figure includes Axes that are not \"\n-                               \"compatible with tight_layout, so results \"\n-                               \"might be incorrect.\")\n-        # note that here we do not permanently set the figures engine to\n-        # tight_layout but rather just perform the layout in place and remove\n-        # any previous engines.\n-        engine = TightLayoutEngine(pad=pad, h_pad=h_pad, w_pad=w_pad,\n-                                   rect=rect)\n-        try:\n-            self.set_layout_engine(engine)\n-            engine.execute(self)\n-        finally:\n-            self.set_layout_engine(None)\n+        if not isinstance(self.get_layout_engine(), ConstrainedLayoutEngine):\n+            if None in subplotspec_list:\n+                _api.warn_external(\"This figure includes Axes that are not \"\n+                                   \"compatible with tight_layout, so results \"\n+                                   \"might be incorrect.\")\n+            # note that here we do not permanently set the figures engine to\n+            # tight_layout but rather just perform the layout in place and remove\n+            # any previous engines.\n+            engine = TightLayoutEngine(pad=pad, h_pad=h_pad, w_pad=w_pad,\n+                                       rect=rect)\n+            try:\n+                self.set_layout_engine(engine)\n+                engine.execute(self)\n+            finally:\n+                self.set_layout_engine(None)\n+        else:\n+            _api.warn_external(\"This figure was using a layout engine that \"\n+                               \"is incompatible with subplots_adjust and/or \"\n+                               \"tight_layout; not calling subplots_adjust.\")\n \n \n def figaspect(arg):\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 57abfc4..06b6f22 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -1022,14 +1022,17 @@ class Figure(FigureBase):\n     def tight_layout(self, *, pad=1.08, h_pad=None, w_pad=None, rect=None):\n         from ._tight_layout import get_subplotspec_list\n         subplotspec_list = get_subplotspec_list(self.axes)\n-        if None in subplotspec_list:\n-            _api.warn_external('This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.')\n-        engine = TightLayoutEngine(pad=pad, h_pad=h_pad, w_pad=w_pad, rect=rect)\n-        try:\n-            self.set_layout_engine(engine)\n-            engine.execute(self)\n-        finally:\n-            self.set_layout_engine(None)\n+        if not isinstance(self.get_layout_engine(), ConstrainedLayoutEngine):\n+            if None in subplotspec_list:\n+                _api.warn_external('This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.')\n+            engine = TightLayoutEngine(pad=pad, h_pad=h_pad, w_pad=w_pad, rect=rect)\n+            try:\n+                self.set_layout_engine(engine)\n+                engine.execute(self)\n+            finally:\n+                self.set_layout_engine(None)\n+        else:\n+            _api.warn_external('This figure was using a layout engine that is incompatible with subplots_adjust and/or tight_layout; not calling subplots_adjust.')\n def figaspect(arg):\n     isarray = hasattr(arg, 'shape') and (not np.isscalar(arg))\n     figsize_min = np.array((4.0, 2.0))\n", "normalized_occurrence": 1}
