{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-25638", "model_patch": "diff --git a/sklearn/utils/multiclass.py b/sklearn/utils/multiclass.py\nindex db3f82e..72a9d43 100644\n--- a/sklearn/utils/multiclass.py\n+++ b/sklearn/utils/multiclass.py\n@@ -295,6 +295,12 @@ def type_of_target(y, input_name=\"\"):\n     if sparse_pandas:\n         raise ValueError(\"y cannot be class 'SparseSeries' or 'SparseArray'\")\n \n+    # Handle pandas nullable dtypes\n+    if hasattr(y, \"dtype\") and hasattr(y, \"to_numpy\"):\n+        dtype_name = str(y.dtype)\n+        if dtype_name in [\"Int64\", \"Float64\", \"boolean\"]:\n+            y = y.to_numpy(dtype=dtype_name.lower())\n+\n     if is_multilabel(y):\n         return \"multilabel-indicator\"\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/utils/multiclass.py b/sklearn/utils/multiclass.py\nindex dee4b2a..25ab725 100644\n--- a/sklearn/utils/multiclass.py\n+++ b/sklearn/utils/multiclass.py\n@@ -71,6 +71,10 @@ def type_of_target(y, input_name=''):\n     sparse_pandas = y.__class__.__name__ in ['SparseSeries', 'SparseArray']\n     if sparse_pandas:\n         raise ValueError(\"y cannot be class 'SparseSeries' or 'SparseArray'\")\n+    if hasattr(y, 'dtype') and hasattr(y, 'to_numpy'):\n+        dtype_name = str(y.dtype)\n+        if dtype_name in ['Int64', 'Float64', 'boolean']:\n+            y = y.to_numpy(dtype=dtype_name.lower())\n     if is_multilabel(y):\n         return 'multilabel-indicator'\n     with warnings.catch_warnings():\n", "normalized_occurrence": 1}
