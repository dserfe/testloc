{"model_name_or_path": "agentless", "instance_id": "django__django-16819", "model_patch": "diff --git a/django/db/migrations/optimizer.py b/django/db/migrations/optimizer.py\nindex a9ec258..829271e 100644\n--- a/django/db/migrations/optimizer.py\n+++ b/django/db/migrations/optimizer.py\n@@ -1,3 +1,4 @@\n+\n class MigrationOptimizer:\n     \"\"\"\n     Power the optimization process, where you provide a list of Operations\n@@ -41,6 +42,25 @@ class MigrationOptimizer:\n         \"\"\"Inner optimization loop.\"\"\"\n         new_operations = []\n         for i, operation in enumerate(operations):\n+            # Check for AddIndex followed by RemoveIndex on the same index\n+            if isinstance(operation, AddIndex) and isinstance(operations[i + 1], RemoveIndex):\n+                if operation.index.name == operations[i + 1].name:\n+                    # Skip both AddIndex and RemoveIndex\n+                    continue\n+\n+            # Check for RemoveIndex followed by AddIndex on the same index\n+            if isinstance(operation, RemoveIndex) and isinstance(operations[i + 1], AddIndex):\n+                if operation.name == operations[i + 1].index.name:\n+                    # Replace both operations with RenameIndex\n+                    rename_op = RenameIndex(\n+                        model_name=operation.model_name,\n+                        new_name=operations[i + 1].index.name,\n+                        old_name=operation.name\n+                    )\n+                    new_operations.append(rename_op)\n+                    # Skip the next operation as it's merged\n+                    continue\n+\n             right = True  # Should we reduce on the right or on the left.\n             # Compare it to each operation after it\n             for j, other in enumerate(operations[i + 1 :]):\n@@ -66,4 +86,4 @@ class MigrationOptimizer:\n                     right = False\n             else:\n                 new_operations.append(operation)\n-        return new_operations\n+        return new_operations\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/optimizer.py b/django/db/migrations/optimizer.py\nindex 06fbfa5..4fe34d6 100644\n--- a/django/db/migrations/optimizer.py\n+++ b/django/db/migrations/optimizer.py\n@@ -12,6 +12,14 @@ class MigrationOptimizer:\n     def optimize_inner(self, operations, app_label):\n         new_operations = []\n         for i, operation in enumerate(operations):\n+            if isinstance(operation, AddIndex) and isinstance(operations[i + 1], RemoveIndex):\n+                if operation.index.name == operations[i + 1].name:\n+                    continue\n+            if isinstance(operation, RemoveIndex) and isinstance(operations[i + 1], AddIndex):\n+                if operation.name == operations[i + 1].index.name:\n+                    rename_op = RenameIndex(model_name=operation.model_name, new_name=operations[i + 1].index.name, old_name=operation.name)\n+                    new_operations.append(rename_op)\n+                    continue\n             right = True\n             for j, other in enumerate(operations[i + 1:]):\n                 result = operation.reduce(other, app_label)\n", "normalized_occurrence": 1}
