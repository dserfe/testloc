{"model_name_or_path": "agentless", "instance_id": "django__django-12262", "model_patch": "diff --git a/django/template/library.py b/django/template/library.py\nindex e9453ed..530f92c 100644\n--- a/django/template/library.py\n+++ b/django/template/library.py\n@@ -251,10 +251,7 @@ def parse_bits(parser, bits, params, varargs, varkw, defaults,\n     args = []\n     kwargs = {}\n     unhandled_params = list(params)\n-    unhandled_kwargs = [\n-        kwarg for kwarg in kwonly\n-        if not kwonly_defaults or kwarg not in kwonly_defaults\n-    ]\n+    unhandled_kwargs = list(kwonly)\n     for bit in bits:\n         # First we try to extract a potential kwarg from the bit\n         kwarg = token_kwargs([bit], parser)\n@@ -278,9 +275,10 @@ def parse_bits(parser, bits, params, varargs, varkw, defaults,\n                     # If using the keyword syntax for a positional arg, then\n                     # consume it.\n                     unhandled_params.remove(param)\n-                elif param in unhandled_kwargs:\n-                    # Same for keyword-only arguments\n-                    unhandled_kwargs.remove(param)\n+                if param in kwonly_defaults or param in unhandled_kwargs:\n+                    # Same for keyword-only arguments, including those with defaults\n+                    if param in unhandled_kwargs:\n+                        unhandled_kwargs.remove(param)\n         else:\n             if kwargs:\n                 raise TemplateSyntaxError(\n", "occurrence": 1, "normalized_patch": "diff --git a/django/template/library.py b/django/template/library.py\nindex fb58a77..0b6fcb1 100644\n--- a/django/template/library.py\n+++ b/django/template/library.py\n@@ -146,7 +146,7 @@ def parse_bits(parser, bits, params, varargs, varkw, defaults, kwonly, kwonly_de\n     args = []\n     kwargs = {}\n     unhandled_params = list(params)\n-    unhandled_kwargs = [kwarg for kwarg in kwonly if not kwonly_defaults or kwarg not in kwonly_defaults]\n+    unhandled_kwargs = list(kwonly)\n     for bit in bits:\n         kwarg = token_kwargs([bit], parser)\n         if kwarg:\n@@ -159,8 +159,9 @@ def parse_bits(parser, bits, params, varargs, varkw, defaults, kwonly, kwonly_de\n                 kwargs[str(param)] = value\n                 if param in unhandled_params:\n                     unhandled_params.remove(param)\n-                elif param in unhandled_kwargs:\n-                    unhandled_kwargs.remove(param)\n+                if param in kwonly_defaults or param in unhandled_kwargs:\n+                    if param in unhandled_kwargs:\n+                        unhandled_kwargs.remove(param)\n         elif kwargs:\n             raise TemplateSyntaxError(\"'%s' received some positional argument(s) after some keyword argument(s)\" % name)\n         else:\n", "normalized_occurrence": 1}
