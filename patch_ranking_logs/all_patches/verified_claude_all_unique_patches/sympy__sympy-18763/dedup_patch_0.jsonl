{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-18763", "model_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 675a3c4..598c2ad 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -698,12 +698,13 @@ class LatexPrinter(Printer):\n \n     def _print_Subs(self, subs):\n         expr, old, new = subs.args\n+        latex_expr = self.parenthesize(expr, PRECEDENCE[\"Mul\"])\n         latex_expr = self._print(expr)\n         latex_old = (self._print(e) for e in old)\n         latex_new = (self._print(e) for e in new)\n         latex_subs = r'\\\\ '.join(\n             e[0] + '=' + e[1] for e in zip(latex_old, latex_new))\n-        return r'\\left. %s \\right|_{\\substack{ %s }}' % (latex_expr,\n+        return r'\\left. \\left(%s\\right) \\right|_{\\substack{ %s }}' % (latex_expr,\n                                                          latex_subs)\n \n     def _print_Integral(self, expr):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 77a2b72..8a0a181 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -396,11 +396,12 @@ class LatexPrinter(Printer):\n         return '%s %s' % (tex, self.parenthesize(expr.expr, PRECEDENCE['Mul'], strict=True))\n     def _print_Subs(self, subs):\n         expr, old, new = subs.args\n+        latex_expr = self.parenthesize(expr, PRECEDENCE['Mul'])\n         latex_expr = self._print(expr)\n         latex_old = (self._print(e) for e in old)\n         latex_new = (self._print(e) for e in new)\n         latex_subs = '\\\\\\\\ '.join((e[0] + '=' + e[1] for e in zip(latex_old, latex_new)))\n-        return '\\\\left. %s \\\\right|_{\\\\substack{ %s }}' % (latex_expr, latex_subs)\n+        return '\\\\left. \\\\left(%s\\\\right) \\\\right|_{\\\\substack{ %s }}' % (latex_expr, latex_subs)\n     def _print_Integral(self, expr):\n         tex, symbols = ('', [])\n         if len(expr.limits) <= 4 and all((len(lim) == 1 for lim in expr.limits)):\n", "normalized_occurrence": 1}
