{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-11870", "model_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex bd243c1..8dc0b26 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -514,6 +514,20 @@ def trigsimp(expr, **opts):\n \n \n def exptrigsimp(expr):\n+    from sympy import I, exp, sin\n+\n+    def exp_to_trig(expr):\n+        if expr.is_Add:\n+            return expr.func(*[exp_to_trig(term) for term in expr.args])\n+        if expr.is_Mul or expr.is_Pow:\n+            return expr.func(*(exp_to_trig(factor) for factor in expr.args))\n+        if expr.is_Exp:\n+            arg = expr.args[0]\n+            if arg.is_Mul and I in arg.args:\n+                return sin(arg.coeff(I))\n+        return expr\n+    \n+    expr = exp_to_trig(expr)\n     \"\"\"\n     Simplifies exponential / trigonometric / hyperbolic functions.\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex 8c4936d..c51b7bd 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -173,6 +173,18 @@ def trigsimp(expr, **opts):\n     trigsimpfunc = {'fu': lambda x: fu(x, **opts), 'matching': lambda x: futrig(x), 'groebner': lambda x: groebnersimp(x, **opts), 'combined': lambda x: futrig(groebnersimp(x, polynomial=True, hints=[2, tan])), 'old': lambda x: trigsimp_old(x, **opts)}[method]\n     return trigsimpfunc(expr)\n def exptrigsimp(expr):\n+    from sympy import I, exp, sin\n+    def exp_to_trig(expr):\n+        if expr.is_Add:\n+            return expr.func(*[exp_to_trig(term) for term in expr.args])\n+        if expr.is_Mul or expr.is_Pow:\n+            return expr.func(*(exp_to_trig(factor) for factor in expr.args))\n+        if expr.is_Exp:\n+            arg = expr.args[0]\n+            if arg.is_Mul and I in arg.args:\n+                return sin(arg.coeff(I))\n+        return expr\n+    expr = exp_to_trig(expr)\n     from sympy.simplify.fu import hyper_as_trig, TR2i\n     from sympy.simplify.simplify import bottom_up\n     def exp_trig(e):\n", "normalized_occurrence": 1}
