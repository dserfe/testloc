{"model_name_or_path": "agentless", "instance_id": "django__django-12262", "model_patch": "diff --git a/django/template/library.py b/django/template/library.py\nindex e9453ed..9047c05 100644\n--- a/django/template/library.py\n+++ b/django/template/library.py\n@@ -253,7 +253,6 @@ def parse_bits(parser, bits, params, varargs, varkw, defaults,\n     unhandled_params = list(params)\n     unhandled_kwargs = [\n         kwarg for kwarg in kwonly\n-        if not kwonly_defaults or kwarg not in kwonly_defaults\n     ]\n     for bit in bits:\n         # First we try to extract a potential kwarg from the bit\n@@ -297,10 +296,13 @@ def parse_bits(parser, bits, params, varargs, varkw, defaults,\n                         raise TemplateSyntaxError(\n                             \"'%s' received too many positional arguments\" %\n                             name)\n-    if defaults is not None:\n+    if defaults is not None or kwonly_defaults is not None:\n         # Consider the last n params handled, where n is the\n         # number of defaults.\n-        unhandled_params = unhandled_params[:-len(defaults)]\n+        if defaults:\n+            unhandled_params = unhandled_params[:-len(defaults)]\n+        if kwonly_defaults:\n+            unhandled_kwargs = [kwarg for kwarg in unhandled_kwargs if kwarg not in kwonly_defaults]\n     if unhandled_params or unhandled_kwargs:\n         # Some positional arguments were not supplied\n         raise TemplateSyntaxError(\n", "occurrence": 1, "normalized_patch": "diff --git a/django/template/library.py b/django/template/library.py\nindex fb58a77..422c034 100644\n--- a/django/template/library.py\n+++ b/django/template/library.py\n@@ -146,7 +146,7 @@ def parse_bits(parser, bits, params, varargs, varkw, defaults, kwonly, kwonly_de\n     args = []\n     kwargs = {}\n     unhandled_params = list(params)\n-    unhandled_kwargs = [kwarg for kwarg in kwonly if not kwonly_defaults or kwarg not in kwonly_defaults]\n+    unhandled_kwargs = [kwarg for kwarg in kwonly]\n     for bit in bits:\n         kwarg = token_kwargs([bit], parser)\n         if kwarg:\n@@ -170,8 +170,11 @@ def parse_bits(parser, bits, params, varargs, varkw, defaults, kwonly, kwonly_de\n             except IndexError:\n                 if varargs is None:\n                     raise TemplateSyntaxError(\"'%s' received too many positional arguments\" % name)\n-    if defaults is not None:\n-        unhandled_params = unhandled_params[:-len(defaults)]\n+    if defaults is not None or kwonly_defaults is not None:\n+        if defaults:\n+            unhandled_params = unhandled_params[:-len(defaults)]\n+        if kwonly_defaults:\n+            unhandled_kwargs = [kwarg for kwarg in unhandled_kwargs if kwarg not in kwonly_defaults]\n     if unhandled_params or unhandled_kwargs:\n         raise TemplateSyntaxError(\"'%s' did not receive value(s) for the argument(s): %s\" % (name, ', '.join((\"'%s'\" % p for p in unhandled_params + unhandled_kwargs))))\n     return (args, kwargs)\n", "normalized_occurrence": 1}
