{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-12419", "model_patch": "diff --git a/sympy/matrices/expressions/matexpr.py b/sympy/matrices/expressions/matexpr.py\nindex 8f30d0d..15e3815 100644\n--- a/sympy/matrices/expressions/matexpr.py\n+++ b/sympy/matrices/expressions/matexpr.py\n@@ -198,6 +198,8 @@ class MatrixExpr(Basic):\n         return Adjoint(self)\n \n     def _entry(self, i, j):\n+        if self.is_Identity:\n+            return KroneckerDelta(i, j)\n         raise NotImplementedError(\n             \"Indexing not implemented for %s\" % self.__class__.__name__)\n \n", "occurrence": 2, "normalized_patch": "diff --git a/sympy/matrices/expressions/matexpr.py b/sympy/matrices/expressions/matexpr.py\nindex 9ec3ea5..af1fe7a 100644\n--- a/sympy/matrices/expressions/matexpr.py\n+++ b/sympy/matrices/expressions/matexpr.py\n@@ -131,6 +131,8 @@ class MatrixExpr(Basic):\n         from sympy.matrices.expressions.adjoint import Adjoint\n         return Adjoint(self)\n     def _entry(self, i, j):\n+        if self.is_Identity:\n+            return KroneckerDelta(i, j)\n         raise NotImplementedError('Indexing not implemented for %s' % self.__class__.__name__)\n     def adjoint(self):\n         return adjoint(self)\n", "normalized_occurrence": 2}
