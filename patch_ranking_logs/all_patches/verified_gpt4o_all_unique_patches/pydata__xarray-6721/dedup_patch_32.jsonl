{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-6721", "model_patch": "diff --git a/xarray/core/variable.py b/xarray/core/variable.py\nindex 1775e6c..fb3063b 100644\n--- a/xarray/core/variable.py\n+++ b/xarray/core/variable.py\n@@ -512,7 +512,10 @@ class Variable(AbstractArray, NdimSizeLenMixin, VariableArithmetic):\n     @property\n     def values(self):\n         \"\"\"The variable's data as a numpy.ndarray\"\"\"\n-        return _as_array_or_item(self._data)\n+        if self._in_memory:\n+            return _as_array_or_item(self._data)\n+        else:\n+            raise RuntimeError(\"Cannot convert lazily-loaded data to a numpy array. Use .compute() to load data into memory.\")\n \n     @values.setter\n     def values(self, values):\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/variable.py b/xarray/core/variable.py\nindex 24a31db..192bf14 100644\n--- a/xarray/core/variable.py\n+++ b/xarray/core/variable.py\n@@ -387,7 +387,10 @@ class Variable(AbstractArray, NdimSizeLenMixin, VariableArithmetic):\n     @property\n     def values(self):\n         \"\"\"The variable's data as a numpy.ndarray\"\"\"\n-        return _as_array_or_item(self._data)\n+        if self._in_memory:\n+            return _as_array_or_item(self._data)\n+        else:\n+            raise RuntimeError('Cannot convert lazily-loaded data to a numpy array. Use .compute() to load data into memory.')\n \n     @values.setter\n     def values(self, values):\n", "normalized_occurrence": 1}
