{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-14317", "model_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 408ff45..9ae6ac6 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1854,11 +1854,59 @@ class LatexPrinter(Printer):\n \n     def _print_Poly(self, poly):\n         cls = poly.__class__.__name__\n-        expr = self._print(poly.as_expr())\n+        ATOM_PREC = PRECEDENCE[\"Atom\"] - 1\n+        terms, gens = [], [ self._print(s) for s in poly.gens ]\n+\n+        for monom, coeff in poly.terms():\n+            s_monom = []\n+\n+            for i, exp in enumerate(monom):\n+                if exp > 0:\n+                    if exp == 1:\n+                        s_monom.append(gens[i])\n+                    else:\n+                        s_monom.append(gens[i] + \"^{%d}\" % exp)\n+\n+            s_monom = r\" \".join(s_monom)\n+\n+            if coeff.is_Add:\n+                if s_monom:\n+                    s_coeff = r\"\\left(\" + self._print(coeff) + r\"\\right)\"\n+                else:\n+                    s_coeff = self._print(coeff)\n+            else:\n+                if s_monom:\n+                    if coeff is S.One:\n+                        terms.extend(['+', s_monom])\n+                        continue\n+\n+                    if coeff is S.NegativeOne:\n+                        terms.extend(['-', s_monom])\n+                        continue\n+\n+                s_coeff = self._print(coeff)\n+\n+            if not s_monom:\n+                s_term = s_coeff\n+            else:\n+                s_term = s_coeff + r\" \" + s_monom\n+\n+            if s_term.startswith('-'):\n+                terms.extend(['-', s_term[1:]])\n+            else:\n+                terms.extend(['+', s_term])\n+\n+        if terms[0] in ['-', '+']:\n+            modifier = terms.pop(0)\n+\n+            if modifier == '-':\n+                terms[0] = '-' + terms[0]\n+\n+        expr = ' '.join(terms)\n         gens = list(map(self._print, poly.gens))\n-        domain = \"domain=%s\" % self._print(poly.get_domain())\n+        domain = r\"domain=%s\" % self._print(poly.get_domain())\n \n-        args = \", \".join([expr] + gens + [domain])\n+        args = r\", \".join([expr] + gens + [domain])\n         if cls in accepted_latex_functions:\n             tex = r\"\\%s {\\left (%s \\right )}\" % (cls, args)\n         else:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 5a18831..26c4a5a 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1241,7 +1241,44 @@ class LatexPrinter(Printer):\n         return '%s%s\\\\left[%s\\\\right]' % (inv, domain, symbols)\n     def _print_Poly(self, poly):\n         cls = poly.__class__.__name__\n-        expr = self._print(poly.as_expr())\n+        ATOM_PREC = PRECEDENCE['Atom'] - 1\n+        terms, gens = ([], [self._print(s) for s in poly.gens])\n+        for monom, coeff in poly.terms():\n+            s_monom = []\n+            for i, exp in enumerate(monom):\n+                if exp > 0:\n+                    if exp == 1:\n+                        s_monom.append(gens[i])\n+                    else:\n+                        s_monom.append(gens[i] + '^{%d}' % exp)\n+            s_monom = ' '.join(s_monom)\n+            if coeff.is_Add:\n+                if s_monom:\n+                    s_coeff = '\\\\left(' + self._print(coeff) + '\\\\right)'\n+                else:\n+                    s_coeff = self._print(coeff)\n+            else:\n+                if s_monom:\n+                    if coeff is S.One:\n+                        terms.extend(['+', s_monom])\n+                        continue\n+                    if coeff is S.NegativeOne:\n+                        terms.extend(['-', s_monom])\n+                        continue\n+                s_coeff = self._print(coeff)\n+            if not s_monom:\n+                s_term = s_coeff\n+            else:\n+                s_term = s_coeff + ' ' + s_monom\n+            if s_term.startswith('-'):\n+                terms.extend(['-', s_term[1:]])\n+            else:\n+                terms.extend(['+', s_term])\n+        if terms[0] in ['-', '+']:\n+            modifier = terms.pop(0)\n+            if modifier == '-':\n+                terms[0] = '-' + terms[0]\n+        expr = ' '.join(terms)\n         gens = list(map(self._print, poly.gens))\n         domain = 'domain=%s' % self._print(poly.get_domain())\n         args = ', '.join([expr] + gens + [domain])\n", "normalized_occurrence": 1}
