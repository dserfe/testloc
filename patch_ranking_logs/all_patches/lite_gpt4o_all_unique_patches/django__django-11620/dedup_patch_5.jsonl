{"model_name_or_path": "agentless", "instance_id": "django__django-11620", "model_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 37e3b61..5e43e7e 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -546,6 +546,9 @@ class URLResolver:\n                         tried.extend([pattern] + t for t in sub_tried)\n                     else:\n                         tried.append([pattern])\n+                except Http404 as e:\n+                    tried.append([pattern])\n+                    raise Resolver404({'tried': tried, 'path': new_path}) from e\n                 else:\n                     if sub_match:\n                         # Merge captured arguments in match with submatch\n@@ -567,7 +570,6 @@ class URLResolver:\n                             [self.namespace] + sub_match.namespaces,\n                             self._join_route(current_route, sub_match.route),\n                         )\n-                    tried.append([pattern])\n             raise Resolver404({'tried': tried, 'path': new_path})\n         raise Resolver404({'path': path})\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 24bb34e..822af67 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -357,6 +357,9 @@ class URLResolver:\n                         tried.extend(([pattern] + t for t in sub_tried))\n                     else:\n                         tried.append([pattern])\n+                except Http404 as e:\n+                    tried.append([pattern])\n+                    raise Resolver404({'tried': tried, 'path': new_path}) from e\n                 else:\n                     if sub_match:\n                         sub_match_dict = {**kwargs, **self.default_kwargs}\n@@ -366,7 +369,6 @@ class URLResolver:\n                             sub_match_args = args + sub_match.args\n                         current_route = '' if isinstance(pattern, URLPattern) else str(pattern.pattern)\n                         return ResolverMatch(sub_match.func, sub_match_args, sub_match_dict, sub_match.url_name, [self.app_name] + sub_match.app_names, [self.namespace] + sub_match.namespaces, self._join_route(current_route, sub_match.route))\n-                    tried.append([pattern])\n             raise Resolver404({'tried': tried, 'path': new_path})\n         raise Resolver404({'path': path})\n     @cached_property\n", "normalized_occurrence": 1}
