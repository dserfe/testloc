{"model_name_or_path": "agentless", "instance_id": "django__django-13195", "model_patch": "diff --git a/django/http/response.py b/django/http/response.py\nindex 244654c..ff08ebf 100644\n--- a/django/http/response.py\n+++ b/django/http/response.py\n@@ -217,6 +217,8 @@ class HttpResponseBase:\n         self.set_cookie(\n             key, max_age=0, path=path, domain=domain, secure=secure,\n             expires='Thu, 01 Jan 1970 00:00:00 GMT',\n+            httponly=True,  # Ensuring HttpOnly is set for security reasons\n+            samesite='Lax'  # Defaulting SameSite to 'Lax' if not otherwise specified\n         )\n \n     # Common methods used by subclasses\n", "occurrence": 1, "normalized_patch": "diff --git a/django/http/response.py b/django/http/response.py\nindex c7367bd..fa5eab3 100644\n--- a/django/http/response.py\n+++ b/django/http/response.py\n@@ -139,7 +139,7 @@ class HttpResponseBase:\n         return self.set_cookie(key, value, **kwargs)\n     def delete_cookie(self, key, path='/', domain=None):\n         secure = key.startswith(('__Secure-', '__Host-'))\n-        self.set_cookie(key, max_age=0, path=path, domain=domain, secure=secure, expires='Thu, 01 Jan 1970 00:00:00 GMT')\n+        self.set_cookie(key, max_age=0, path=path, domain=domain, secure=secure, expires='Thu, 01 Jan 1970 00:00:00 GMT', httponly=True, samesite='Lax')\n     def make_bytes(self, value):\n         if isinstance(value, (bytes, memoryview)):\n             return bytes(value)\n", "normalized_occurrence": 1}
