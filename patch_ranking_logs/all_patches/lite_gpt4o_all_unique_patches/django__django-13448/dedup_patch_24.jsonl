{"model_name_or_path": "agentless", "instance_id": "django__django-13448", "model_patch": "diff --git a/django/db/backends/base/creation.py b/django/db/backends/base/creation.py\nindex d751f3a..fb8f988 100644\n--- a/django/db/backends/base/creation.py\n+++ b/django/db/backends/base/creation.py\n@@ -69,6 +69,9 @@ class BaseDatabaseCreation:\n                 database=self.connection.alias,\n                 run_syncdb=True,\n             )\n+        else:\n+            # If MIGRATE is False, don't serialize the DB state as it might be incomplete.\n+            self.connection._test_serialized_contents = None\n \n         # We then serialize the current state of the database into a string\n         # and store it on the connection. This slightly horrific process is so people\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/base/creation.py b/django/db/backends/base/creation.py\nindex 4f2d479..99a8953 100644\n--- a/django/db/backends/base/creation.py\n+++ b/django/db/backends/base/creation.py\n@@ -28,6 +28,8 @@ class BaseDatabaseCreation:\n         self.connection.settings_dict['NAME'] = test_database_name\n         if self.connection.settings_dict['TEST']['MIGRATE']:\n             call_command('migrate', verbosity=max(verbosity - 1, 0), interactive=False, database=self.connection.alias, run_syncdb=True)\n+        else:\n+            self.connection._test_serialized_contents = None\n         if serialize:\n             self.connection._test_serialized_contents = self.serialize_db_to_string()\n         call_command('createcachetable', database=self.connection.alias)\n", "normalized_occurrence": 1}
