{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-19954", "model_patch": "diff --git a/sympy/combinatorics/perm_groups.py b/sympy/combinatorics/perm_groups.py\nindex eb05c35..fc48914 100644\n--- a/sympy/combinatorics/perm_groups.py\n+++ b/sympy/combinatorics/perm_groups.py\n@@ -2198,7 +2198,9 @@ class PermutationGroup(Basic):\n                 for i, r in enumerate(rep_blocks):\n                     if len(r) > len(rep) and rep.issubset(r):\n                         # i-th block system is not minimal\n-                        del num_blocks[i], blocks[i]\n+                        # Ensure the index i is within the valid range before deleting\n+                        if i < len(num_blocks) and i < len(blocks):\n+                            del num_blocks[i], blocks[i]\n                         to_remove.append(rep_blocks[i])\n                     elif len(r) < len(rep) and r.issubset(rep):\n                         # the system being checked is not minimal\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/combinatorics/perm_groups.py b/sympy/combinatorics/perm_groups.py\nindex 19182ce..5c0d9b0 100644\n--- a/sympy/combinatorics/perm_groups.py\n+++ b/sympy/combinatorics/perm_groups.py\n@@ -840,7 +840,8 @@ class PermutationGroup(Basic):\n                 to_remove = []\n                 for i, r in enumerate(rep_blocks):\n                     if len(r) > len(rep) and rep.issubset(r):\n-                        del num_blocks[i], blocks[i]\n+                        if i < len(num_blocks) and i < len(blocks):\n+                            del num_blocks[i], blocks[i]\n                         to_remove.append(rep_blocks[i])\n                     elif len(r) < len(rep) and r.issubset(rep):\n                         minimal = False\n", "normalized_occurrence": 5}
