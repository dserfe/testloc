{"model_name_or_path": "agentless", "instance_id": "django__django-15930", "model_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 47df1a9..d8d2abd 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -1251,7 +1251,7 @@ class When(Expression):\n         if lookups:\n             if condition is None:\n                 condition, lookups = Q(**lookups), None\n-            elif getattr(condition, \"conditional\", False):\n+            elif getattr(condition, \"conditional\", False) and not (isinstance(condition, Q) and not condition.children):\n                 condition, lookups = Q(condition, **lookups), None\n         if condition is None or not getattr(condition, \"conditional\", False) or lookups:\n             raise TypeError(\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 1b947ba..ec03ee5 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -629,7 +629,7 @@ class When(Expression):\n         if lookups:\n             if condition is None:\n                 condition, lookups = (Q(**lookups), None)\n-            elif getattr(condition, 'conditional', False):\n+            elif getattr(condition, 'conditional', False) and (not (isinstance(condition, Q) and (not condition.children))):\n                 condition, lookups = (Q(condition, **lookups), None)\n         if condition is None or not getattr(condition, 'conditional', False) or lookups:\n             raise TypeError('When() supports a Q object, a boolean expression, or lookups as a condition.')\n", "normalized_occurrence": 1}
