{"model_name_or_path": "agentless", "instance_id": "django__django-11451", "model_patch": "diff --git a/django/contrib/auth/backends.py b/django/contrib/auth/backends.py\nindex ada7461..d0b9d56 100644\n--- a/django/contrib/auth/backends.py\n+++ b/django/contrib/auth/backends.py\n@@ -37,7 +37,9 @@ class ModelBackend(BaseBackend):\n     \"\"\"\n \n     def authenticate(self, request, username=None, password=None, **kwargs):\n-        if username is None:\n+        if username is None or password is None:\n+            return\n+        if username is None or password is None:\n             username = kwargs.get(UserModel.USERNAME_FIELD)\n         try:\n             user = UserModel._default_manager.get_by_natural_key(username)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/auth/backends.py b/django/contrib/auth/backends.py\nindex e52a3dd..e3803a8 100644\n--- a/django/contrib/auth/backends.py\n+++ b/django/contrib/auth/backends.py\n@@ -19,7 +19,9 @@ class BaseBackend:\n         return perm in self.get_all_permissions(user_obj, obj=obj)\n class ModelBackend(BaseBackend):\n     def authenticate(self, request, username=None, password=None, **kwargs):\n-        if username is None:\n+        if username is None or password is None:\n+            return\n+        if username is None or password is None:\n             username = kwargs.get(UserModel.USERNAME_FIELD)\n         try:\n             user = UserModel._default_manager.get_by_natural_key(username)\n", "normalized_occurrence": 1}
