{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-18698", "model_patch": "diff --git a/sympy/polys/sqfreetools.py b/sympy/polys/sqfreetools.py\nindex fbdbcb2..9ff6ba1 100644\n--- a/sympy/polys/sqfreetools.py\n+++ b/sympy/polys/sqfreetools.py\n@@ -313,6 +313,7 @@ def dup_sqf_list(f, K, all=False):\n         return coeff, []\n \n     result, i = [], 1\n+    result.append((g, 1))\n \n     h = dup_diff(f, 1, K)\n     g, p, q = dup_inner_gcd(f, h, K)\n@@ -321,7 +322,7 @@ def dup_sqf_list(f, K, all=False):\n         d = dup_diff(p, 1, K)\n         h = dup_sub(q, d, K)\n \n-        if not h:\n+        if not h or dup_degree(h) == 0:\n             result.append((p, i))\n             break\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/sqfreetools.py b/sympy/polys/sqfreetools.py\nindex 09fb2b6..02b19be 100644\n--- a/sympy/polys/sqfreetools.py\n+++ b/sympy/polys/sqfreetools.py\n@@ -105,12 +105,13 @@ def dup_sqf_list(f, K, all=False):\n     if dup_degree(f) <= 0:\n         return (coeff, [])\n     result, i = ([], 1)\n+    result.append((g, 1))\n     h = dup_diff(f, 1, K)\n     g, p, q = dup_inner_gcd(f, h, K)\n     while True:\n         d = dup_diff(p, 1, K)\n         h = dup_sub(q, d, K)\n-        if not h:\n+        if not h or dup_degree(h) == 0:\n             result.append((p, i))\n             break\n         g, p, q = dup_inner_gcd(p, h, K)\n", "normalized_occurrence": 1}
