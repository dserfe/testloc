{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12273", "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 07c5013..d5b42a4 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -779,7 +779,11 @@ class Model(metaclass=ModelBase):\n         with context_manager:\n             parent_inserted = False\n             if not raw:\n-                parent_inserted = self._save_parents(cls, using, update_fields)\n+                # Handle primary key reset for inherited models\n+                if meta.parents and getattr(self, self._meta.pk.attname) is None:\n+                    parent_inserted = True\n+                else:\n+                    parent_inserted = self._save_parents(cls, using, update_fields)\n             updated = self._save_table(\n                 raw, cls, force_insert or parent_inserted,\n                 force_update, using, update_fields,\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 9dcf0cd..55090c3 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -422,7 +422,10 @@ class Model(metaclass=ModelBase):\n         with context_manager:\n             parent_inserted = False\n             if not raw:\n-                parent_inserted = self._save_parents(cls, using, update_fields)\n+                if meta.parents and getattr(self, self._meta.pk.attname) is None:\n+                    parent_inserted = True\n+                else:\n+                    parent_inserted = self._save_parents(cls, using, update_fields)\n             updated = self._save_table(raw, cls, force_insert or parent_inserted, force_update, using, update_fields)\n         self._state.db = using\n         self._state.adding = False\n", "normalized_occurrence": 1}
