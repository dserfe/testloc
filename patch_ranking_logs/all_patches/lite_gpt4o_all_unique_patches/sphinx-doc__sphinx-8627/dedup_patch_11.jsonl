{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8627", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 5f20d3a..13d195a 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -8,9 +8,16 @@\n     :license: BSD, see LICENSE for details.\n \"\"\"\n \n+def resolve_typehints(app: Sphinx, obj: Any, name: str):\n+    type_hints = get_type_hints(obj)\n+    for arg, hint in type_hints.items():\n+        if hint == struct.Struct:\n+            type_hints[arg] = 'struct.Struct'\n+    return type_hints\n+\n import re\n from collections import OrderedDict\n-from typing import Any, Dict, Iterable, cast\n+from typing import Any, Dict, Iterable, cast, get_type_hints\n \n from docutils import nodes\n from docutils.nodes import Element\n", "occurrence": 1, "normalized_patch": "--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n+def resolve_typehints(app: Sphinx, obj: Any, name: str):\n+    type_hints = get_type_hints(obj)\n+    for arg, hint in type_hints.items():\n+        if hint == struct.Struct:\n+            type_hints[arg] = 'struct.Struct'\n+    return type_hints\n-from typing import Any, Dict, Iterable, cast\n+from typing import Any, Dict, Iterable, cast, get_type_hints", "normalized_occurrence": 1}
