{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-8365", "model_patch": "diff --git a/src/_pytest/tmpdir.py b/src/_pytest/tmpdir.py\nindex cae5caf..46b34ae 100644\n--- a/src/_pytest/tmpdir.py\n+++ b/src/_pytest/tmpdir.py\n@@ -152,9 +152,13 @@ def get_user() -> Optional[str]:\n     \"\"\"Return the current user name, or None if getuser() does not work\n     in the current environment (see #1010).\"\"\"\n     import getpass\n+    import re\n \n     try:\n-        return getpass.getuser()\n+        user = getpass.getuser()\n+        # Sanitize the username by removing illegal characters for directory names\n+        sanitized_user = re.sub(r'[<>:\"/\\\\|?*]', '_', user)\n+        return sanitized_user\n     except (ImportError, KeyError):\n         return None\n \n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/tmpdir.py b/src/_pytest/tmpdir.py\nindex 6f08c0a..8744bc6 100644\n--- a/src/_pytest/tmpdir.py\n+++ b/src/_pytest/tmpdir.py\n@@ -78,8 +78,11 @@ class TempdirFactory:\n         return py.path.local(self._tmppath_factory.getbasetemp().resolve())\n def get_user() -> Optional[str]:\n     import getpass\n+    import re\n     try:\n-        return getpass.getuser()\n+        user = getpass.getuser()\n+        sanitized_user = re.sub('[<>:\"/\\\\\\\\|?*]', '_', user)\n+        return sanitized_user\n     except (ImportError, KeyError):\n         return None\n def pytest_configure(config: Config) -> None:\n", "normalized_occurrence": 1}
