{"model_name_or_path": "agentless", "instance_id": "django__django-16116", "model_patch": "diff --git a/django/core/management/commands/makemigrations.py b/django/core/management/commands/makemigrations.py\nindex f0e76b4..77c58de 100644\n--- a/django/core/management/commands/makemigrations.py\n+++ b/django/core/management/commands/makemigrations.py\n@@ -112,6 +112,8 @@ class Command(BaseCommand):\n         self.include_header = options[\"include_header\"]\n         check_changes = options[\"check_changes\"]\n         self.scriptable = options[\"scriptable\"]\n+        if check_changes:\n+            self.dry_run = True\n         self.update = options[\"update\"]\n         # If logs and prompts are diverted to stderr, remove the ERROR style.\n         if self.scriptable:\n@@ -252,8 +254,8 @@ class Command(BaseCommand):\n                 self.write_to_last_migration_files(changes)\n             else:\n                 self.write_migration_files(changes)\n-            if check_changes:\n-                sys.exit(1)\n+        if check_changes:\n+            sys.exit(1)\n \n     def write_to_last_migration_files(self, changes):\n         loader = MigrationLoader(connections[DEFAULT_DB_ALIAS])\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/management/commands/makemigrations.py b/django/core/management/commands/makemigrations.py\nindex be2b711..f71d320 100644\n--- a/django/core/management/commands/makemigrations.py\n+++ b/django/core/management/commands/makemigrations.py\n@@ -48,6 +48,8 @@ class Command(BaseCommand):\n         self.include_header = options['include_header']\n         check_changes = options['check_changes']\n         self.scriptable = options['scriptable']\n+        if check_changes:\n+            self.dry_run = True\n         self.update = options['update']\n         if self.scriptable:\n             self.stderr.style_func = None\n@@ -104,13 +106,12 @@ class Command(BaseCommand):\n                         self.log(\"No changes detected in apps '%s'\" % \"', '\".join(app_labels))\n                 else:\n                     self.log('No changes detected')\n+        elif self.update:\n+            self.write_to_last_migration_files(changes)\n         else:\n-            if self.update:\n-                self.write_to_last_migration_files(changes)\n-            else:\n-                self.write_migration_files(changes)\n-            if check_changes:\n-                sys.exit(1)\n+            self.write_migration_files(changes)\n+        if check_changes:\n+            sys.exit(1)\n     def write_to_last_migration_files(self, changes):\n         loader = MigrationLoader(connections[DEFAULT_DB_ALIAS])\n         new_changes = {}\n", "normalized_occurrence": 1}
