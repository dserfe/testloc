{"model_name_or_path": "agentless_claude", "instance_id": "pylint-dev__pylint-7080", "model_patch": "diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py\nindex 440e6fe..1b39c06 100644\n--- a/pylint/lint/pylinter.py\n+++ b/pylint/lint/pylinter.py\n@@ -610,11 +610,17 @@ class PyLinter(\n                         skip_subtrees.append(root)\n                         yield root\n                     else:\n-                        yield from (\n-                            os.path.join(root, file)\n-                            for file in files\n-                            if file.endswith(\".py\")\n-                        )\n+                        for file in files:\n+                            if not file.endswith(\".py\"):\n+                                continue\n+                            file_path = os.path.join(root, file)\n+                            if not _is_ignored_file(\n+                                file_path,\n+                                self.config.ignore,\n+                                self.config.ignore_patterns,\n+                                self.config.ignore_paths,\n+                            ):\n+                                yield file_path\n             else:\n                 yield something\n \n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py\nindex afb1178..4b3e160 100644\n--- a/pylint/lint/pylinter.py\n+++ b/pylint/lint/pylinter.py\n@@ -237,7 +237,12 @@ class PyLinter(_ArgumentsManager, _MessageStateHandler, reporters.ReportsHandler\n                         skip_subtrees.append(root)\n                         yield root\n                     else:\n-                        yield from (os.path.join(root, file) for file in files if file.endswith('.py'))\n+                        for file in files:\n+                            if not file.endswith('.py'):\n+                                continue\n+                            file_path = os.path.join(root, file)\n+                            if not _is_ignored_file(file_path, self.config.ignore, self.config.ignore_patterns, self.config.ignore_paths):\n+                                yield file_path\n             else:\n                 yield something\n     def check(self, files_or_modules: Sequence[str] | str) -> None:\n", "normalized_occurrence": 1}
