{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-18869", "model_patch": "diff --git a/lib/matplotlib/__init__.py b/lib/matplotlib/__init__.py\nindex 320d1a7..9f194ce 100644\n--- a/lib/matplotlib/__init__.py\n+++ b/lib/matplotlib/__init__.py\n@@ -547,6 +547,23 @@ _deprecated_ignore_map = {\n     'mpl_toolkits.legacy_colorbar': ('3.4', None),\n }\n \n+# Parse the version string into a tuple for easy comparison\n+def _parse_to_version_info(version_str):\n+    \"\"\"Convert version string to version_info tuple.\"\"\"\n+    parts = version_str.split('.')\n+    # Handle dev/rc versions\n+    if 'dev' in parts[-1]:\n+        release_level = 'dev'\n+        parts[-1] = parts[-1].split('dev')[0]\n+    elif 'rc' in parts[-1]:\n+        release_level = 'candidate'\n+        parts[-1] = parts[-1].split('rc')[0]\n+    else:\n+        release_level = 'final'\n+    return tuple(int(x) for x in parts) + (release_level,)\n+\n+version_info = _parse_to_version_info(__version__)\n+\n # rcParams deprecated; can use None to suppress warnings; remain actually\n # listed in the rcParams (not included in _all_deprecated).\n # Values are tuples of (version,)\n", "occurrence": 1, "normalized_patch": "--- a/lib/matplotlib/__init__.py\n+++ b/lib/matplotlib/__init__.py\n+def _parse_to_version_info(version_str):\n+    parts = version_str.split('.')\n+    if 'dev' in parts[-1]:\n+        release_level = 'dev'\n+        parts[-1] = parts[-1].split('dev')[0]\n+    elif 'rc' in parts[-1]:\n+        release_level = 'candidate'\n+        parts[-1] = parts[-1].split('rc')[0]\n+    else:\n+        release_level = 'final'\n+    return tuple((int(x) for x in parts)) + (release_level,)\n+version_info = _parse_to_version_info(__version__)", "normalized_occurrence": 1}
