{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-7985", "model_patch": "diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py\nindex 4e6b0df..78a2d87 100644\n--- a/sphinx/builders/linkcheck.py\n+++ b/sphinx/builders/linkcheck.py\n@@ -210,9 +210,15 @@ class CheckExternalLinksBuilder(Builder):\n \n         def check() -> Tuple[str, str, int]:\n             # check for various conditions without bothering the network\n-            if len(uri) == 0 or uri.startswith(('#', 'mailto:', 'ftp:')):\n+            if len(uri) == 0 or uri.startswith(('#', 'mailto:', 'ftp:', 'file:')):\n                 return 'unchecked', '', 0\n-            elif not uri.startswith(('http:', 'https:')):\n+            elif not uri.startswith(('http:', 'https:')) and uri.startswith(('file:', '/')):\n+                # Check if it's a local link\n+                local_path = uri if uri.startswith('/') else path.join(self.app.srcdir, uri)\n+                if path.exists(local_path):\n+                    return 'working', '', 0\n+                else:\n+                    return 'broken', 'File does not exist', 0\n                 return 'local', '', 0\n             elif uri in self.good:\n                 return 'working', 'old', 0\n@@ -314,9 +320,11 @@ class CheckExternalLinksBuilder(Builder):\n \n         # reference nodes\n         for refnode in doctree.traverse(nodes.reference):\n-            if 'refuri' not in refnode:\n-                continue\n-            uri = refnode['refuri']\n+            if 'refuri' in refnode:\n+                uri = refnode['refuri']\n+            elif 'refid' in refnode:\n+                # Handle internal document anchors\n+                uri = f\"#{refnode['refid']}\"\n             lineno = get_node_line(refnode)\n             self.wqueue.put((uri, docname, lineno), False)\n             n += 1\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py\nindex f6c8f65..b7d481e 100644\n--- a/sphinx/builders/linkcheck.py\n+++ b/sphinx/builders/linkcheck.py\n@@ -130,9 +130,14 @@ class CheckExternalLinksBuilder(Builder):\n                 else:\n                     return ('redirected', new_url, 0)\n         def check() -> Tuple[str, str, int]:\n-            if len(uri) == 0 or uri.startswith(('#', 'mailto:', 'ftp:')):\n+            if len(uri) == 0 or uri.startswith(('#', 'mailto:', 'ftp:', 'file:')):\n                 return ('unchecked', '', 0)\n-            elif not uri.startswith(('http:', 'https:')):\n+            elif not uri.startswith(('http:', 'https:')) and uri.startswith(('file:', '/')):\n+                local_path = uri if uri.startswith('/') else path.join(self.app.srcdir, uri)\n+                if path.exists(local_path):\n+                    return ('working', '', 0)\n+                else:\n+                    return ('broken', 'File does not exist', 0)\n                 return ('local', '', 0)\n             elif uri in self.good:\n                 return ('working', 'old', 0)\n@@ -211,9 +216,10 @@ class CheckExternalLinksBuilder(Builder):\n         logger.info('')\n         n = 0\n         for refnode in doctree.traverse(nodes.reference):\n-            if 'refuri' not in refnode:\n-                continue\n-            uri = refnode['refuri']\n+            if 'refuri' in refnode:\n+                uri = refnode['refuri']\n+            elif 'refid' in refnode:\n+                uri = f\"#{refnode['refid']}\"\n             lineno = get_node_line(refnode)\n             self.wqueue.put((uri, docname, lineno), False)\n             n += 1\n", "normalized_occurrence": 1}
