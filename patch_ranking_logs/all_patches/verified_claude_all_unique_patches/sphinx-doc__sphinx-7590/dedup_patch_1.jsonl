{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-7590", "model_patch": "diff --git a/sphinx/domains/cpp.py b/sphinx/domains/cpp.py\nindex 71a23bd..206f31b 100644\n--- a/sphinx/domains/cpp.py\n+++ b/sphinx/domains/cpp.py\n@@ -789,6 +789,23 @@ class ASTLiteral(ASTExpression):\n     pass\n \n \n+class ASTUserDefinedLiteral(ASTLiteral):\n+    def __init__(self, literal: str, suffix: str) -> None:\n+        self.literal = literal\n+        self.suffix = suffix\n+\n+    def _stringify(self, transform: StringifyTransform) -> str:\n+        return self.literal + self.suffix\n+\n+    def get_id(self, version: int) -> str:\n+        # UDLs don't affect mangling in most cases\n+        return 'L'\n+\n+    def describe_signature(self, signode: TextElement, mode: str,\n+                         env: \"BuildEnvironment\", symbol: \"Symbol\") -> None:\n+        signode += nodes.Text(self._stringify(None))\n+\n+\n class ASTPointerLiteral(ASTLiteral):\n     def _stringify(self, transform: StringifyTransform) -> str:\n         return 'nullptr'\n", "occurrence": 1, "normalized_patch": "--- a/sphinx/domains/cpp.py\n+++ b/sphinx/domains/cpp.py\n+class ASTUserDefinedLiteral(ASTLiteral):\n+    def __init__(self, literal: str, suffix: str) -> None:\n+        self.literal = literal\n+        self.suffix = suffix\n+    def _stringify(self, transform: StringifyTransform) -> str:\n+        return self.literal + self.suffix\n+    def get_id(self, version: int) -> str:\n+        return 'L'\n+    def describe_signature(self, signode: TextElement, mode: str, env: 'BuildEnvironment', symbol: 'Symbol') -> None:\n+        signode += nodes.Text(self._stringify(None))", "normalized_occurrence": 1}
