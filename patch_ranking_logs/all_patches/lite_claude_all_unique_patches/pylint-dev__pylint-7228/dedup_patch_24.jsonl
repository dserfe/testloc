{"model_name_or_path": "agentless_claude", "instance_id": "pylint-dev__pylint-7228", "model_patch": "diff --git a/pylint/config/option.py b/pylint/config/option.py\nindex 515b944..ef8ac47 100644\n--- a/pylint/config/option.py\n+++ b/pylint/config/option.py\n@@ -23,6 +23,9 @@ def _csv_validator(_, name, value):\n def _regexp_validator(_, name, value):\n     if hasattr(value, \"pattern\"):\n         return value\n+    # Handle \\p{Han} Unicode property by converting to Unicode range\n+    if r'\\p{Han}' in value:\n+        value = value.replace(r'\\p{Han}', r'[\\u4e00-\\u9fff]')\n     return re.compile(value)\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/config/option.py b/pylint/config/option.py\nindex bdedcd7..d0805d1 100644\n--- a/pylint/config/option.py\n+++ b/pylint/config/option.py\n@@ -11,6 +11,8 @@ def _csv_validator(_, name, value):\n def _regexp_validator(_, name, value):\n     if hasattr(value, 'pattern'):\n         return value\n+    if '\\\\p{Han}' in value:\n+        value = value.replace('\\\\p{Han}', '[\\\\u4e00-\\\\u9fff]')\n     return re.compile(value)\n def _regexp_csv_validator(_, name, value):\n     return [_regexp_validator(_, name, val) for val in _csv_validator(_, name, value)]\n", "normalized_occurrence": 9}
