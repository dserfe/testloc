{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14787", "model_patch": "diff --git a/django/utils/decorators.py b/django/utils/decorators.py\nindex 9a57ac9..d1938c4 100644\n--- a/django/utils/decorators.py\n+++ b/django/utils/decorators.py\n@@ -16,7 +16,13 @@ def _update_method_wrapper(_wrapper, decorator):\n     @decorator\n     def dummy(*args, **kwargs):\n         pass\n-    update_wrapper(_wrapper, dummy)\n+    \n+    # If the decorator returns a partial, get the underlying function\n+    updated = dummy\n+    if hasattr(dummy, 'func'):\n+        updated = dummy.func\n+    \n+    update_wrapper(_wrapper, updated)\n \n \n def _multi_decorate(decorators, method):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/decorators.py b/django/utils/decorators.py\nindex 7f6be4d..656c58f 100644\n--- a/django/utils/decorators.py\n+++ b/django/utils/decorators.py\n@@ -8,7 +8,10 @@ def _update_method_wrapper(_wrapper, decorator):\n     @decorator\n     def dummy(*args, **kwargs):\n         pass\n-    update_wrapper(_wrapper, dummy)\n+    updated = dummy\n+    if hasattr(dummy, 'func'):\n+        updated = dummy.func\n+    update_wrapper(_wrapper, updated)\n def _multi_decorate(decorators, method):\n     if hasattr(decorators, '__iter__'):\n         decorators = decorators[::-1]\n", "normalized_occurrence": 1}
