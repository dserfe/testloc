{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7168", "model_patch": "diff --git a/src/_pytest/_io/saferepr.py b/src/_pytest/_io/saferepr.py\nindex adc421d..0ff52ff 100644\n--- a/src/_pytest/_io/saferepr.py\n+++ b/src/_pytest/_io/saferepr.py\n@@ -58,6 +58,8 @@ class SafeRepr(reprlib.Repr):\n             raise\n         except BaseException as exc:\n             s = _format_repr_exception(exc, x)\n+        if s is None:\n+            s = f\"<exception raised in repr: {exc}>\"\n         return _ellipsize(s, self.maxsize)\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/_io/saferepr.py b/src/_pytest/_io/saferepr.py\nindex 789deb9..59de340 100644\n--- a/src/_pytest/_io/saferepr.py\n+++ b/src/_pytest/_io/saferepr.py\n@@ -42,6 +42,8 @@ class SafeRepr(reprlib.Repr):\n             raise\n         except BaseException as exc:\n             s = _format_repr_exception(exc, x)\n+        if s is None:\n+            s = f'<exception raised in repr: {exc}>'\n         return _ellipsize(s, self.maxsize)\n def safeformat(obj: Any) -> str:\n     try:\n", "normalized_occurrence": 1}
