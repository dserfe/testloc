{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-14308", "model_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 81d644a..2f3d6b7 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -923,12 +923,16 @@ class PrettyPrinter(Printer):\n                     o1.append(arg_str + ' ' + k._pretty_form)\n                 vectstrs.append(k._pretty_form)\n \n-        #outstr = u(\"\").join(o1)\n-        if o1[0].startswith(u\" + \"):\n-            o1[0] = o1[0][3:]\n-        elif o1[0].startswith(\" \"):\n-            o1[0] = o1[0][1:]\n-        #Fixing the newlines\n+        outstr = u(\"\").join(o1)\n+        if outstr.startswith(u\" + \"):\n+            outstr = outstr[3:]\n+        elif outstr.startswith(\" \"):\n+            outstr = outstr[1:]\n+        #Fixing the newlines and centering\n+        lengths = [len(s) for s in outstr.split('\\n')]\n+        max_length = max(lengths)\n+        centered_lines = [line.center(max_length) for line in outstr.split('\\n')]\n+        outstr = '\\n'.join(centered_lines)\n         lengths = []\n         strs = ['']\n         for i, partstr in enumerate(o1):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 35c3eb3..1bf4cb1 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -663,10 +663,15 @@ class PrettyPrinter(Printer):\n                     arg_str = self._print(v).parens()[0]\n                     o1.append(arg_str + ' ' + k._pretty_form)\n                 vectstrs.append(k._pretty_form)\n-        if o1[0].startswith(u' + '):\n-            o1[0] = o1[0][3:]\n-        elif o1[0].startswith(' '):\n-            o1[0] = o1[0][1:]\n+        outstr = u('').join(o1)\n+        if outstr.startswith(u' + '):\n+            outstr = outstr[3:]\n+        elif outstr.startswith(' '):\n+            outstr = outstr[1:]\n+        lengths = [len(s) for s in outstr.split('\\n')]\n+        max_length = max(lengths)\n+        centered_lines = [line.center(max_length) for line in outstr.split('\\n')]\n+        outstr = '\\n'.join(centered_lines)\n         lengths = []\n         strs = ['']\n         for i, partstr in enumerate(o1):\n", "normalized_occurrence": 1}
