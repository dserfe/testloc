{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-13453", "model_patch": "diff --git a/astropy/io/ascii/html.py b/astropy/io/ascii/html.py\nindex 1220930..065ebe6 100644\n--- a/astropy/io/ascii/html.py\n+++ b/astropy/io/ascii/html.py\n@@ -346,7 +346,11 @@ class HTML(core.BaseReader):\n         # Check that table has only 1-d or 2-d columns. Above that fails.\n         self._check_multidim_table(table)\n \n-        cols = list(table.columns.values())\n+        formats = kwargs.get('formats', {})\n+        cols = [col.copy() if col.info.name in formats else col for col in table.columns.values()]\n+        for col in cols:\n+            if col.info.name in formats:\n+                col.format = formats[col.info.name]\n \n         self.data.header.cols = cols\n \n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/io/ascii/html.py b/astropy/io/ascii/html.py\nindex 45fa153..4d70259 100644\n--- a/astropy/io/ascii/html.py\n+++ b/astropy/io/ascii/html.py\n@@ -151,7 +151,11 @@ class HTML(core.BaseReader):\n         return super().read(table)\n     def write(self, table):\n         self._check_multidim_table(table)\n-        cols = list(table.columns.values())\n+        formats = kwargs.get('formats', {})\n+        cols = [col.copy() if col.info.name in formats else col for col in table.columns.values()]\n+        for col in cols:\n+            if col.info.name in formats:\n+                col.format = formats[col.info.name]\n         self.data.header.cols = cols\n         if isinstance(self.data.fill_values, tuple):\n             self.data.fill_values = [self.data.fill_values]\n", "normalized_occurrence": 1}
