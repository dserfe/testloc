{"model_name_or_path": "agentless", "instance_id": "django__django-11564", "model_patch": "diff --git a/django/contrib/staticfiles/storage.py b/django/contrib/staticfiles/storage.py\nindex 3fb83f0..a8d18d3 100644\n--- a/django/contrib/staticfiles/storage.py\n+++ b/django/contrib/staticfiles/storage.py\n@@ -20,7 +20,8 @@ class StaticFilesStorage(FileSystemStorage):\n     The defaults for ``location`` and ``base_url`` are\n     ``STATIC_ROOT`` and ``STATIC_URL``.\n     \"\"\"\n-    def __init__(self, location=None, base_url=None, *args, **kwargs):\n+    def __init__(self, location=None, base_url=None, request=None, *args, **kwargs):\n+        self.request = request\n         if location is None:\n             location = settings.STATIC_ROOT\n         if base_url is None:\n@@ -145,7 +146,13 @@ class HashedFilesMixin:\n         \"\"\"\n         Return the non-hashed URL in DEBUG mode.\n         \"\"\"\n-        return self._url(self.stored_name, name, force)\n+        url = self._url(self.stored_name, name, force)\n+        request = getattr(self, 'request', None)\n+        if request:\n+            script_name = request.META.get('SCRIPT_NAME', '')\n+            if script_name:\n+                url = script_name.rstrip('/') + '/' + url.lstrip('/')\n+        return url\n \n     def url_converter(self, name, hashed_files, template=None):\n         \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/staticfiles/storage.py b/django/contrib/staticfiles/storage.py\nindex 510129c..919623a 100644\n--- a/django/contrib/staticfiles/storage.py\n+++ b/django/contrib/staticfiles/storage.py\n@@ -11,7 +11,8 @@ from django.core.files.base import ContentFile\n from django.core.files.storage import FileSystemStorage, get_storage_class\n from django.utils.functional import LazyObject\n class StaticFilesStorage(FileSystemStorage):\n-    def __init__(self, location=None, base_url=None, *args, **kwargs):\n+    def __init__(self, location=None, base_url=None, request=None, *args, **kwargs):\n+        self.request = request\n         if location is None:\n             location = settings.STATIC_ROOT\n         if base_url is None:\n@@ -99,7 +100,13 @@ class HashedFilesMixin:\n             final_url = urlunsplit(urlparts)\n         return unquote(final_url)\n     def url(self, name, force=False):\n-        return self._url(self.stored_name, name, force)\n+        url = self._url(self.stored_name, name, force)\n+        request = getattr(self, 'request', None)\n+        if request:\n+            script_name = request.META.get('SCRIPT_NAME', '')\n+            if script_name:\n+                url = script_name.rstrip('/') + '/' + url.lstrip('/')\n+        return url\n     def url_converter(self, name, hashed_files, template=None):\n         if template is None:\n             template = self.default_template\n", "normalized_occurrence": 1}
