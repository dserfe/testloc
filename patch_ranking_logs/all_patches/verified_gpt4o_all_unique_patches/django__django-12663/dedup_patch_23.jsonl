{"model_name_or_path": "agentless", "instance_id": "django__django-12663", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex a371ac6..ed637e5 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1160,7 +1160,9 @@ class Query(BaseExpression):\n             if not lookup_class:\n                 return\n \n-        lookup = lookup_class(lhs, rhs)\n+        # Evaluate SimpleLazyObject if necessary\n+        rhs_value = rhs._wrapped if isinstance(rhs, SimpleLazyObject) else rhs\n+        lookup = lookup_class(lhs, rhs_value)\n         # Interpret '__exact=None' as the sql 'is NULL'; otherwise, reject all\n         # uses of None as a query value unless the lookup supports it.\n         if lookup.rhs is None and not lookup.can_use_none_as_rhs:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 68cc869..2fdd9e2 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -627,7 +627,8 @@ class Query(BaseExpression):\n             lookup_class = lhs.get_lookup(lookup_name)\n             if not lookup_class:\n                 return\n-        lookup = lookup_class(lhs, rhs)\n+        rhs_value = rhs._wrapped if isinstance(rhs, SimpleLazyObject) else rhs\n+        lookup = lookup_class(lhs, rhs_value)\n         if lookup.rhs is None and (not lookup.can_use_none_as_rhs):\n             if lookup_name not in ('exact', 'iexact'):\n                 raise ValueError('Cannot use None as a query value')\n", "normalized_occurrence": 1}
