{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15738", "model_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 95f06ff..40f40aa 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -1486,8 +1486,9 @@ class MigrationAutodetector:\n                     if value\n                     not in self.renamed_index_together_values[app_label, model_name]\n                 }\n-            removal_value = new_value.intersection(old_value)\n-            if removal_value or old_value:\n+            # When removing constraints completely, use empty set\n+            removal_value = set() if not new_value else new_value.intersection(old_value)\n+            if old_value:  # Always generate operation if there was an old value\n                 self.add_operation(\n                     app_label,\n                     operation(\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex a7b157c..0ac13e2 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -603,8 +603,8 @@ class MigrationAutodetector:\n         for old_value, new_value, app_label, model_name, dependencies in self._get_altered_foo_together_operations(operation.option_name):\n             if operation == operations.AlterIndexTogether:\n                 old_value = {value for value in old_value if value not in self.renamed_index_together_values[app_label, model_name]}\n-            removal_value = new_value.intersection(old_value)\n-            if removal_value or old_value:\n+            removal_value = set() if not new_value else new_value.intersection(old_value)\n+            if old_value:\n                 self.add_operation(app_label, operation(name=model_name, **{operation.option_name: removal_value}), dependencies=dependencies)\n     def generate_removed_altered_unique_together(self):\n         self._generate_removed_altered_foo_together(operations.AlterUniqueTogether)\n", "normalized_occurrence": 1}
