{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-8269", "model_patch": "diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py\nindex 8266583..ca88113 100644\n--- a/sphinx/builders/linkcheck.py\n+++ b/sphinx/builders/linkcheck.py\n@@ -163,9 +163,20 @@ class CheckExternalLinksBuilder(Builder):\n \n             try:\n                 if anchor and self.app.config.linkcheck_anchors:\n-                    # Read the whole document and see if #anchor exists\n+                    # First check if the URL is accessible\n+                    try:\n+                        response = requests.head(req_url, config=self.app.config,\n+                                               auth=auth_info, **kwargs)\n+                        response.raise_for_status()\n+                    except HTTPError:\n+                        # retry with GET request if HEAD fails\n+                        response = requests.get(req_url, stream=True, config=self.app.config,\n+                                             auth=auth_info, **kwargs)\n+                        response.raise_for_status()\n+\n+                    # If URL is accessible, check for anchor\n                     response = requests.get(req_url, stream=True, config=self.app.config,\n-                                            auth=auth_info, **kwargs)\n+                                         auth=auth_info, **kwargs)\n                     found = check_anchor(response, unquote(anchor))\n \n                     if not found:\n@@ -175,13 +186,13 @@ class CheckExternalLinksBuilder(Builder):\n                         # try a HEAD request first, which should be easier on\n                         # the server and the network\n                         response = requests.head(req_url, config=self.app.config,\n-                                                 auth=auth_info, **kwargs)\n+                                               auth=auth_info, **kwargs)\n                         response.raise_for_status()\n                     except HTTPError:\n                         # retry with GET request if that fails, some servers\n                         # don't like HEAD requests.\n                         response = requests.get(req_url, stream=True, config=self.app.config,\n-                                                auth=auth_info, **kwargs)\n+                                             auth=auth_info, **kwargs)\n                         response.raise_for_status()\n             except HTTPError as err:\n                 if err.response.status_code == 401:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py\nindex ace1ed3..67be1d7 100644\n--- a/sphinx/builders/linkcheck.py\n+++ b/sphinx/builders/linkcheck.py\n@@ -96,6 +96,12 @@ class CheckExternalLinksBuilder(Builder):\n             kwargs['headers'] = get_request_headers()\n             try:\n                 if anchor and self.app.config.linkcheck_anchors:\n+                    try:\n+                        response = requests.head(req_url, config=self.app.config, auth=auth_info, **kwargs)\n+                        response.raise_for_status()\n+                    except HTTPError:\n+                        response = requests.get(req_url, stream=True, config=self.app.config, auth=auth_info, **kwargs)\n+                        response.raise_for_status()\n                     response = requests.get(req_url, stream=True, config=self.app.config, auth=auth_info, **kwargs)\n                     found = check_anchor(response, unquote(anchor))\n                     if not found:\n", "normalized_occurrence": 1}
