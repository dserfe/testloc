{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-13124", "model_patch": "diff --git a/sklearn/model_selection/_split.py b/sklearn/model_selection/_split.py\nindex 1bd5697..1af1b15 100644\n--- a/sklearn/model_selection/_split.py\n+++ b/sklearn/model_selection/_split.py\n@@ -632,6 +632,8 @@ class StratifiedKFold(_BaseKFold):\n         y = column_or_1d(y)\n         n_samples = y.shape[0]\n         unique_y, y_inversed = np.unique(y, return_inverse=True)\n+        if self.shuffle:\n+            rng.shuffle(y_inversed)\n         y_counts = np.bincount(y_inversed)\n         min_groups = np.min(y_counts)\n         if np.all(self.n_splits > y_counts):\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/model_selection/_split.py b/sklearn/model_selection/_split.py\nindex a142d27..1b9a370 100644\n--- a/sklearn/model_selection/_split.py\n+++ b/sklearn/model_selection/_split.py\n@@ -556,6 +556,8 @@ class StratifiedKFold(_BaseKFold):\n         y = column_or_1d(y)\n         n_samples = y.shape[0]\n         unique_y, y_inversed = np.unique(y, return_inverse=True)\n+        if self.shuffle:\n+            rng.shuffle(y_inversed)\n         y_counts = np.bincount(y_inversed)\n         min_groups = np.min(y_counts)\n         if np.all(self.n_splits > y_counts):\n", "normalized_occurrence": 1}
