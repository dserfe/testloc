{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-8399", "model_patch": "diff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py\nindex ae115dc..07abb32 100644\n--- a/src/_pytest/unittest.py\n+++ b/src/_pytest/unittest.py\n@@ -144,7 +144,7 @@ def _make_xunit_fixture(\n         scope=scope,\n         autouse=True,\n         # Use a unique name to speed up lookup.\n-        name=f\"unittest_{setup_name}_fixture_{obj.__qualname__}\",\n+        name=f\"_unittest_{setup_name}_fixture_{obj.__qualname__}\",\n     )\n     def fixture(self, request: FixtureRequest) -> Generator[None, None, None]:\n         if _is_skipped(self):\n", "occurrence": 40, "normalized_patch": "diff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py\nindex 35257c5..99ab19d 100644\n--- a/src/_pytest/unittest.py\n+++ b/src/_pytest/unittest.py\n@@ -85,7 +85,7 @@ def _make_xunit_fixture(obj: type, setup_name: str, teardown_name: str, cleanup_\n     else:\n         def cleanup(*args):\n             pass\n-    @pytest.fixture(scope=scope, autouse=True, name=f'unittest_{setup_name}_fixture_{obj.__qualname__}')\n+    @pytest.fixture(scope=scope, autouse=True, name=f'_unittest_{setup_name}_fixture_{obj.__qualname__}')\n     def fixture(self, request: FixtureRequest) -> Generator[None, None, None]:\n         if _is_skipped(self):\n             reason = self.__unittest_skip_why__\n", "normalized_occurrence": 40}
