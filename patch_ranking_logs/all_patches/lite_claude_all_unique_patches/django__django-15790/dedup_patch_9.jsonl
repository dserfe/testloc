{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15790", "model_patch": "diff --git a/django/core/checks/templates.py b/django/core/checks/templates.py\nindex df5ecff..836e788 100644\n--- a/django/core/checks/templates.py\n+++ b/django/core/checks/templates.py\n@@ -55,13 +55,15 @@ def check_for_template_tags_with_the_same_name(app_configs, **kwargs):\n     for conf in settings.TEMPLATES:\n         custom_libraries = conf.get(\"OPTIONS\", {}).get(\"libraries\", {})\n         for module_name, module_path in custom_libraries.items():\n-            libraries[module_name].append(module_path)\n+            if module_path not in libraries[module_name]:\n+                libraries[module_name].append(module_path)\n \n     for module_name, module_path in get_template_tag_modules():\n-        libraries[module_name].append(module_path)\n+        if module_path not in libraries[module_name]:\n+            libraries[module_name].append(module_path)\n \n     for library_name, items in libraries.items():\n-        if len(items) > 1:\n+        if len(set(items)) > 1:  # Use set to ensure truly unique paths\n             errors.append(\n                 Error(\n                     E003.msg.format(\n@@ -72,4 +74,4 @@ def check_for_template_tags_with_the_same_name(app_configs, **kwargs):\n                 )\n             )\n \n-    return errors\n+    return errors\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/checks/templates.py b/django/core/checks/templates.py\nindex 768c076..455be9d 100644\n--- a/django/core/checks/templates.py\n+++ b/django/core/checks/templates.py\n@@ -26,10 +26,12 @@ def check_for_template_tags_with_the_same_name(app_configs, **kwargs):\n     for conf in settings.TEMPLATES:\n         custom_libraries = conf.get('OPTIONS', {}).get('libraries', {})\n         for module_name, module_path in custom_libraries.items():\n-            libraries[module_name].append(module_path)\n+            if module_path not in libraries[module_name]:\n+                libraries[module_name].append(module_path)\n     for module_name, module_path in get_template_tag_modules():\n-        libraries[module_name].append(module_path)\n+        if module_path not in libraries[module_name]:\n+            libraries[module_name].append(module_path)\n     for library_name, items in libraries.items():\n-        if len(items) > 1:\n+        if len(set(items)) > 1:\n             errors.append(Error(E003.msg.format(repr(library_name), ', '.join((repr(item) for item in items))), id=E003.id))\n     return errors\n\\ No newline at end of file\n", "normalized_occurrence": 3}
