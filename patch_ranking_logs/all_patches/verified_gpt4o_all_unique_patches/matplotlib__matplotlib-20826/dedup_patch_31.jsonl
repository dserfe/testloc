{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-20826", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 07605b5..e1333da 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1472,8 +1472,18 @@ class _AxesBase(martist.Artist):\n \n     def clear(self):\n         \"\"\"Clear the axes.\"\"\"\n+        if self._sharex or self._sharey:\n+            # Preserve visibility of shared axis labels and ticks\n+            xaxis_visible = self.xaxis.get_visible() if self._sharex else None\n+            yaxis_visible = self.yaxis.get_visible() if self._sharey else None\n+\n         self.cla()\n \n+        if self._sharex and xaxis_visible is not None:\n+            self.xaxis.set_visible(xaxis_visible)\n+        if self._sharey and yaxis_visible is not None:\n+            self.yaxis.set_visible(yaxis_visible)\n+\n     def get_facecolor(self):\n         \"\"\"Get the facecolor of the Axes.\"\"\"\n         return self.patch.get_facecolor()\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 33a6de3..027a572 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -663,7 +663,14 @@ class _AxesBase(martist.Artist):\n     def texts(self):\n         return self.ArtistList(self, 'texts', 'add_text', valid_types=mtext.Text)\n     def clear(self):\n+        if self._sharex or self._sharey:\n+            xaxis_visible = self.xaxis.get_visible() if self._sharex else None\n+            yaxis_visible = self.yaxis.get_visible() if self._sharey else None\n         self.cla()\n+        if self._sharex and xaxis_visible is not None:\n+            self.xaxis.set_visible(xaxis_visible)\n+        if self._sharey and yaxis_visible is not None:\n+            self.yaxis.set_visible(yaxis_visible)\n     def get_facecolor(self):\n         return self.patch.get_facecolor()\n     def set_facecolor(self, color):\n", "normalized_occurrence": 1}
