{"model_name_or_path": "agentless", "instance_id": "django__django-15916", "model_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 646bf68..7174d12 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -629,14 +629,14 @@ def modelform_factory(\n     # If parent form class already has an inner Meta, the Meta we're\n     # creating needs to inherit from the parent's inner meta.\n     bases = (form.Meta,) if hasattr(form, \"Meta\") else ()\n-    Meta = type(\"Meta\", bases, attrs)\n+    Meta = type(\"Meta\", bases, {**attrs, \"formfield_callback\": getattr(form.Meta, \"formfield_callback\", formfield_callback)})\n     if formfield_callback:\n         Meta.formfield_callback = staticmethod(formfield_callback)\n     # Give this new form class a reasonable name.\n     class_name = model.__name__ + \"Form\"\n \n     # Class attributes for the new form class.\n-    form_class_attrs = {\"Meta\": Meta, \"formfield_callback\": formfield_callback}\n+    form_class_attrs = {\"Meta\": Meta}\n \n     if getattr(Meta, \"fields\", None) is None and getattr(Meta, \"exclude\", None) is None:\n         raise ImproperlyConfigured(\n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 7070e66..b4d64d1 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -263,11 +263,11 @@ def modelform_factory(model, form=ModelForm, fields=None, exclude=None, formfiel\n     if field_classes is not None:\n         attrs['field_classes'] = field_classes\n     bases = (form.Meta,) if hasattr(form, 'Meta') else ()\n-    Meta = type('Meta', bases, attrs)\n+    Meta = type('Meta', bases, {**attrs, 'formfield_callback': getattr(form.Meta, 'formfield_callback', formfield_callback)})\n     if formfield_callback:\n         Meta.formfield_callback = staticmethod(formfield_callback)\n     class_name = model.__name__ + 'Form'\n-    form_class_attrs = {'Meta': Meta, 'formfield_callback': formfield_callback}\n+    form_class_attrs = {'Meta': Meta}\n     if getattr(Meta, 'fields', None) is None and getattr(Meta, 'exclude', None) is None:\n         raise ImproperlyConfigured(\"Calling modelform_factory without defining 'fields' or 'exclude' explicitly is prohibited.\")\n     return type(form)(class_name, (form,), form_class_attrs)\n", "normalized_occurrence": 1}
