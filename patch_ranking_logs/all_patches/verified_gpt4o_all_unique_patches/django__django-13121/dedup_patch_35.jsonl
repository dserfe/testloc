{"model_name_or_path": "agentless", "instance_id": "django__django-13121", "model_patch": "diff --git a/django/db/backends/sqlite3/operations.py b/django/db/backends/sqlite3/operations.py\nindex 302ee8d..8787a51 100644\n--- a/django/db/backends/sqlite3/operations.py\n+++ b/django/db/backends/sqlite3/operations.py\n@@ -342,7 +342,7 @@ class DatabaseOperations(BaseDatabaseOperations):\n         fn_params = [\"'%s'\" % connector] + sub_expressions\n         if len(fn_params) > 3:\n             raise ValueError('Too many params for timedelta operations.')\n-        return \"django_format_dtdelta(%s)\" % ', '.join(fn_params)\n+        return \"django_format_dtdelta(%s) * 1000000\" % ', '.join(fn_params)\n \n     def integer_field_range(self, internal_type):\n         # SQLite doesn't enforce any integer constraints\n", "occurrence": 2, "normalized_patch": "diff --git a/django/db/backends/sqlite3/operations.py b/django/db/backends/sqlite3/operations.py\nindex 638444d..a702e17 100644\n--- a/django/db/backends/sqlite3/operations.py\n+++ b/django/db/backends/sqlite3/operations.py\n@@ -199,7 +199,7 @@ class DatabaseOperations(BaseDatabaseOperations):\n         fn_params = [\"'%s'\" % connector] + sub_expressions\n         if len(fn_params) > 3:\n             raise ValueError('Too many params for timedelta operations.')\n-        return 'django_format_dtdelta(%s)' % ', '.join(fn_params)\n+        return 'django_format_dtdelta(%s) * 1000000' % ', '.join(fn_params)\n     def integer_field_range(self, internal_type):\n         return (None, None)\n     def subtract_temporals(self, internal_type, lhs, rhs):\n", "normalized_occurrence": 2}
