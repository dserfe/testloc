{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-11870", "model_patch": "diff --git a/sympy/functions/elementary/exponential.py b/sympy/functions/elementary/exponential.py\nindex 67a8b07..9479d86 100644\n--- a/sympy/functions/elementary/exponential.py\n+++ b/sympy/functions/elementary/exponential.py\n@@ -452,6 +452,15 @@ class exp(ExpBase):\n         from sympy import tanh\n         return (1 + tanh(arg/2))/(1 - tanh(arg/2))\n \n+    def _eval_rewrite_as_sincos(self, arg):\n+        from sympy import sin, cos, im, re\n+        I = S.ImaginaryUnit\n+        if I*arg == self.args[0]:\n+            return cos(arg) + I*sin(arg)\n+        elif -I*arg == self.args[0]:\n+            return cos(arg) - I*sin(arg)\n+        return exp(arg)\n+\n \n class log(Function):\n     r\"\"\"\n", "occurrence": 1, "normalized_patch": "--- a/sympy/functions/elementary/exponential.py\n+++ b/sympy/functions/elementary/exponential.py\n+    def _eval_rewrite_as_sincos(self, arg):\n+        from sympy import sin, cos, im, re\n+        I = S.ImaginaryUnit\n+        if I * arg == self.args[0]:\n+            return cos(arg) + I * sin(arg)\n+        elif -I * arg == self.args[0]:\n+            return cos(arg) - I * sin(arg)\n+        return exp(arg)", "normalized_occurrence": 1}
