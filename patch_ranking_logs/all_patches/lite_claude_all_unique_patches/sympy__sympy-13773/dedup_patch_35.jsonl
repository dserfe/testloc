{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13773", "model_patch": "diff --git a/sympy/matrices/expressions/matmul.py b/sympy/matrices/expressions/matmul.py\nindex 13b44f5..b5aff49 100644\n--- a/sympy/matrices/expressions/matmul.py\n+++ b/sympy/matrices/expressions/matmul.py\n@@ -135,6 +135,13 @@ class MatMul(MatrixExpr):\n \n def validate(*matrices):\n     \"\"\" Checks for valid shapes for args of MatMul \"\"\"\n+    if not matrices:\n+        return\n+    # Check that all arguments are matrices\n+    for mat in matrices:\n+        if not getattr(mat, 'is_Matrix', False):\n+            raise ValueError(\"Scalar operands are not allowed, use '*' instead\")\n+    # Check matrix dimensions compatibility\n     for i in range(len(matrices)-1):\n         A, B = matrices[i:i+2]\n         if A.cols != B.rows:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/expressions/matmul.py b/sympy/matrices/expressions/matmul.py\nindex c9124f3..461ee92 100644\n--- a/sympy/matrices/expressions/matmul.py\n+++ b/sympy/matrices/expressions/matmul.py\n@@ -86,6 +86,11 @@ class MatMul(MatrixExpr):\n         coeff_c, coeff_nc = coeff.args_cnc(**kwargs)\n         return (coeff_c, coeff_nc + matrices)\n def validate(*matrices):\n+    if not matrices:\n+        return\n+    for mat in matrices:\n+        if not getattr(mat, 'is_Matrix', False):\n+            raise ValueError(\"Scalar operands are not allowed, use '*' instead\")\n     for i in range(len(matrices) - 1):\n         A, B = matrices[i:i + 2]\n         if A.cols != B.rows:\n", "normalized_occurrence": 2}
