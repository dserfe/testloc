{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-15809", "model_patch": "diff --git a/sympy/functions/elementary/miscellaneous.py b/sympy/functions/elementary/miscellaneous.py\nindex 430109e..a051862 100644\n--- a/sympy/functions/elementary/miscellaneous.py\n+++ b/sympy/functions/elementary/miscellaneous.py\n@@ -339,8 +339,12 @@ def real_root(arg, n=None, evaluate=None):\n \n class MinMaxBase(Expr, LatticeOp):\n     def __new__(cls, *args, **assumptions):\n+        from sympy.core.numbers import oo\n         if not args:\n-            raise ValueError(\"The Max/Min functions must have arguments.\")\n+            if cls.__name__ == 'Max':\n+                return oo\n+            else:  # cls.__name__ == 'Min'\n+                return -oo\n \n         args = (sympify(arg) for arg in args)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/miscellaneous.py b/sympy/functions/elementary/miscellaneous.py\nindex 655fc4a..504e2fa 100644\n--- a/sympy/functions/elementary/miscellaneous.py\n+++ b/sympy/functions/elementary/miscellaneous.py\n@@ -53,8 +53,12 @@ def real_root(arg, n=None, evaluate=None):\n     return rv.xreplace(n1pow)\n class MinMaxBase(Expr, LatticeOp):\n     def __new__(cls, *args, **assumptions):\n+        from sympy.core.numbers import oo\n         if not args:\n-            raise ValueError('The Max/Min functions must have arguments.')\n+            if cls.__name__ == 'Max':\n+                return oo\n+            else:\n+                return -oo\n         args = (sympify(arg) for arg in args)\n         try:\n             args = frozenset(cls._new_args_filter(args))\n", "normalized_occurrence": 1}
