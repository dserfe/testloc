{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15973", "model_patch": "diff --git a/django/db/backends/base/schema.py b/django/db/backends/base/schema.py\nindex d437198..fd8b8a4 100644\n--- a/django/db/backends/base/schema.py\n+++ b/django/db/backends/base/schema.py\n@@ -450,6 +450,9 @@ class BaseDatabaseSchemaEditor:\n \n         # Make M2M tables\n         for field in model._meta.local_many_to_many:\n+            # Skip if through is still a string (unresolved model reference)\n+            if isinstance(field.remote_field.through, str):\n+                continue\n             if field.remote_field.through._meta.auto_created:\n                 self.create_model(field.remote_field.through)\n \n@@ -457,6 +460,9 @@ class BaseDatabaseSchemaEditor:\n         \"\"\"Delete a model from the database.\"\"\"\n         # Handle auto-created intermediary models\n         for field in model._meta.local_many_to_many:\n+            # Skip if through is still a string (unresolved model reference)\n+            if isinstance(field.remote_field.through, str):\n+                continue\n             if field.remote_field.through._meta.auto_created:\n                 self.delete_model(field.remote_field.through)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/base/schema.py b/django/db/backends/base/schema.py\nindex 199e030..95def9a 100644\n--- a/django/db/backends/base/schema.py\n+++ b/django/db/backends/base/schema.py\n@@ -203,10 +203,14 @@ class BaseDatabaseSchemaEditor:\n         self.execute(sql, params or None)\n         self.deferred_sql.extend(self._model_indexes_sql(model))\n         for field in model._meta.local_many_to_many:\n+            if isinstance(field.remote_field.through, str):\n+                continue\n             if field.remote_field.through._meta.auto_created:\n                 self.create_model(field.remote_field.through)\n     def delete_model(self, model):\n         for field in model._meta.local_many_to_many:\n+            if isinstance(field.remote_field.through, str):\n+                continue\n             if field.remote_field.through._meta.auto_created:\n                 self.delete_model(field.remote_field.through)\n         self.execute(self.sql_delete_table % {'table': self.quote_name(model._meta.db_table)})\n", "normalized_occurrence": 1}
