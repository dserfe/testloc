{"model_name_or_path": "agentless", "instance_id": "django__django-16408", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 83f3a12..2d7fb07 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -2247,7 +2247,12 @@ class Query(BaseExpression):\n         for field in fields:\n             d = field_dict\n             for part in field.split(LOOKUP_SEP):\n-                d = d.setdefault(part, {})\n+                if isinstance(d, dict) and LOOKUP_SEP in part:\n+                    split_parts = part.split(LOOKUP_SEP)\n+                    for split_part in split_parts:\n+                        d = d.setdefault(split_part, {})\n+                else:\n+                    d = d.setdefault(part, {})\n         self.select_related = field_dict\n \n     def add_extra(self, select, select_params, where, params, tables, order_by):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 0b42199..96420bd 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1126,7 +1126,12 @@ class Query(BaseExpression):\n         for field in fields:\n             d = field_dict\n             for part in field.split(LOOKUP_SEP):\n-                d = d.setdefault(part, {})\n+                if isinstance(d, dict) and LOOKUP_SEP in part:\n+                    split_parts = part.split(LOOKUP_SEP)\n+                    for split_part in split_parts:\n+                        d = d.setdefault(split_part, {})\n+                else:\n+                    d = d.setdefault(part, {})\n         self.select_related = field_dict\n     def add_extra(self, select, select_params, where, params, tables, order_by):\n         if select:\n", "normalized_occurrence": 1}
