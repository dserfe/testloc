{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-14308", "model_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 81d644a..078ee97 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -929,39 +929,16 @@ class PrettyPrinter(Printer):\n         elif o1[0].startswith(\" \"):\n             o1[0] = o1[0][1:]\n         #Fixing the newlines\n-        lengths = []\n-        strs = ['']\n-        for i, partstr in enumerate(o1):\n-            # XXX: What is this hack?\n-            if '\\n' in partstr:\n-                tempstr = partstr\n-                tempstr = tempstr.replace(vectstrs[i], '')\n-                tempstr = tempstr.replace(u'\\N{RIGHT PARENTHESIS UPPER HOOK}',\n-                                          u'\\N{RIGHT PARENTHESIS UPPER HOOK}'\n-                                          + ' ' + vectstrs[i])\n-                o1[i] = tempstr\n-        o1 = [x.split('\\n') for x in o1]\n-        n_newlines = max([len(x) for x in o1])\n-        for parts in o1:\n-            lengths.append(len(parts[0]))\n-            for j in range(n_newlines):\n-                if j+1 <= len(parts):\n-                    if j >= len(strs):\n-                        strs.append(' ' * (sum(lengths[:-1]) +\n-                                           3*(len(lengths)-1)))\n-                    if j == 0:\n-                        strs[0] += parts[0] + ' + '\n-                    else:\n-                        strs[j] += parts[j] + ' '*(lengths[-1] -\n-                                                   len(parts[j])+\n-                                                   3)\n-                else:\n-                    if j >= len(strs):\n-                        strs.append(' ' * (sum(lengths[:-1]) +\n-                                           3*(len(lengths)-1)))\n-                    strs[j] += ' '*(lengths[-1]+3)\n-\n-        return prettyForm(u'\\n'.join([s[:-3] for s in strs]))\n+        o1_strs = [s.replace(u'\\N{RIGHT PARENTHESIS UPPER HOOK}', \n+                             u'\\N{RIGHT PARENTHESIS UPPER HOOK} ' + vectstrs[i])\n+                    if '\\n' in s else s for i, s in enumerate(o1)]\n+        o1_split = [s.split('\\n') for s in o1_strs]\n+        \n+        maxlen = max(len(s) for parts in o1_split for s in parts)\n+        centered_parts = ['\\n'.join(s.center(maxlen) for s in parts) \n+                          for parts in o1_split]\n+\n+        return prettyForm(u' + '.join(centered_parts))\n \n     def _print_NDimArray(self, expr):\n         from sympy import ImmutableMatrix\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 35c3eb3..8883bad 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -667,31 +667,11 @@ class PrettyPrinter(Printer):\n             o1[0] = o1[0][3:]\n         elif o1[0].startswith(' '):\n             o1[0] = o1[0][1:]\n-        lengths = []\n-        strs = ['']\n-        for i, partstr in enumerate(o1):\n-            if '\\n' in partstr:\n-                tempstr = partstr\n-                tempstr = tempstr.replace(vectstrs[i], '')\n-                tempstr = tempstr.replace(u'⎞', u'⎞' + ' ' + vectstrs[i])\n-                o1[i] = tempstr\n-        o1 = [x.split('\\n') for x in o1]\n-        n_newlines = max([len(x) for x in o1])\n-        for parts in o1:\n-            lengths.append(len(parts[0]))\n-            for j in range(n_newlines):\n-                if j + 1 <= len(parts):\n-                    if j >= len(strs):\n-                        strs.append(' ' * (sum(lengths[:-1]) + 3 * (len(lengths) - 1)))\n-                    if j == 0:\n-                        strs[0] += parts[0] + ' + '\n-                    else:\n-                        strs[j] += parts[j] + ' ' * (lengths[-1] - len(parts[j]) + 3)\n-                else:\n-                    if j >= len(strs):\n-                        strs.append(' ' * (sum(lengths[:-1]) + 3 * (len(lengths) - 1)))\n-                    strs[j] += ' ' * (lengths[-1] + 3)\n-        return prettyForm(u'\\n'.join([s[:-3] for s in strs]))\n+        o1_strs = [s.replace(u'⎞', u'⎞ ' + vectstrs[i]) if '\\n' in s else s for i, s in enumerate(o1)]\n+        o1_split = [s.split('\\n') for s in o1_strs]\n+        maxlen = max((len(s) for parts in o1_split for s in parts))\n+        centered_parts = ['\\n'.join((s.center(maxlen) for s in parts)) for parts in o1_split]\n+        return prettyForm(u' + '.join(centered_parts))\n     def _print_NDimArray(self, expr):\n         from sympy import ImmutableMatrix\n         if expr.rank() == 0:\n", "normalized_occurrence": 1}
