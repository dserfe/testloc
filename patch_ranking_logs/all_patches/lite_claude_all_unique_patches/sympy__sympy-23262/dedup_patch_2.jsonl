{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-23262", "model_patch": "diff --git a/sympy/printing/pycode.py b/sympy/printing/pycode.py\nindex 9b53255..113ca44 100644\n--- a/sympy/printing/pycode.py\n+++ b/sympy/printing/pycode.py\n@@ -310,6 +310,13 @@ class AbstractPythonCodePrinter(CodePrinter):\n         arg, = ret.args\n         return 'return %s' % self._print(arg)\n \n+    def _print_Tuple(self, expr):\n+        if len(expr) == 1:\n+            # Special handling for single-element tuples to ensure trailing comma\n+            return \"(%s,)\" % self._print(expr[0])\n+        else:\n+            return \"(%s)\" % \", \".join(self._print(arg) for arg in expr)\n+\n     def _print_Print(self, prnt):\n         print_args = ', '.join(map(lambda arg: self._print(arg), prnt.print_args))\n         if prnt.format_string != None: # Must be '!= None', cannot be 'is not None'\n", "occurrence": 1, "normalized_patch": "--- a/sympy/printing/pycode.py\n+++ b/sympy/printing/pycode.py\n+    def _print_Tuple(self, expr):\n+        if len(expr) == 1:\n+            return '(%s,)' % self._print(expr[0])\n+        else:\n+            return '(%s)' % ', '.join((self._print(arg) for arg in expr))", "normalized_occurrence": 2}
