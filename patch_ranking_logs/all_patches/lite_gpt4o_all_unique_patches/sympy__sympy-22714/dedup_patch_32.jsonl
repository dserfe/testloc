{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-22714", "model_patch": "diff --git a/sympy/parsing/sympy_parser.py b/sympy/parsing/sympy_parser.py\nindex c16ec77..cedd283 100644\n--- a/sympy/parsing/sympy_parser.py\n+++ b/sympy/parsing/sympy_parser.py\n@@ -912,6 +912,8 @@ def eval_expr(code, local_dict, global_dict):\n     \"\"\"\n     expr = eval(\n         code, global_dict, local_dict)  # take local objects in preference\n+    if isinstance(expr, Point):\n+        expr = Point(*[sympify(arg, evaluate=True) for arg in expr.args])\n     return expr\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/parsing/sympy_parser.py b/sympy/parsing/sympy_parser.py\nindex e068f1d..910409c 100644\n--- a/sympy/parsing/sympy_parser.py\n+++ b/sympy/parsing/sympy_parser.py\n@@ -477,6 +477,8 @@ def stringify_expr(s, local_dict, global_dict, transformations):\n     return untokenize(tokens)\n def eval_expr(code, local_dict, global_dict):\n     expr = eval(code, global_dict, local_dict)\n+    if isinstance(expr, Point):\n+        expr = Point(*[sympify(arg, evaluate=True) for arg in expr.args])\n     return expr\n def parse_expr(s, local_dict=None, transformations=standard_transformations, global_dict=None, evaluate=True):\n     if local_dict is None:\n", "normalized_occurrence": 1}
