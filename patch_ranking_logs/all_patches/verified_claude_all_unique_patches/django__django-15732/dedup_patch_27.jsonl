{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15732", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 42e02c2..88eba79 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -604,7 +604,13 @@ class AlterUniqueTogether(AlterTogetherOptionOperation):\n     option_name = \"unique_together\"\n \n     def __init__(self, name, unique_together):\n-        super().__init__(name, unique_together)\n+        # Filter out single-field unique constraints as they may conflict with\n+        # existing unique constraints from primary keys or unique=True\n+        filtered_together = {\n+            tuple(constraint) for constraint in unique_together\n+            if len(constraint) > 1\n+        } if unique_together else unique_together\n+        super().__init__(name, filtered_together)\n \n \n class AlterIndexTogether(AlterTogetherOptionOperation):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex b786bec..7a71155 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -259,7 +259,8 @@ class AlterTogetherOptionOperation(ModelOptionOperation):\n class AlterUniqueTogether(AlterTogetherOptionOperation):\n     option_name = 'unique_together'\n     def __init__(self, name, unique_together):\n-        super().__init__(name, unique_together)\n+        filtered_together = {tuple(constraint) for constraint in unique_together if len(constraint) > 1} if unique_together else unique_together\n+        super().__init__(name, filtered_together)\n class AlterIndexTogether(AlterTogetherOptionOperation):\n     option_name = 'index_together'\n     def __init__(self, name, index_together):\n", "normalized_occurrence": 1}
