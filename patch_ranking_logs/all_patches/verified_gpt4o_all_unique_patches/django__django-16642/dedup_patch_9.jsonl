{"model_name_or_path": "agentless", "instance_id": "django__django-16642", "model_patch": "diff --git a/django/http/response.py b/django/http/response.py\nindex b918697..7236f3a 100644\n--- a/django/http/response.py\n+++ b/django/http/response.py\n@@ -608,7 +608,9 @@ class FileResponse(StreamingHttpResponse):\n                 content_type, encoding = mimetypes.guess_type(filename)\n                 # Encoding isn't set to prevent browsers from automatically\n                 # uncompressing files.\n-                content_type = {\n+                content_type, encoding = {\n+                    \"br\": (\"application/x-brotli\", None),\n+                    \"Z\": (\"application/x-compress\", None),\n                     \"bzip2\": \"application/x-bzip\",\n                     \"gzip\": \"application/gzip\",\n                     \"xz\": \"application/x-xz\",\n", "occurrence": 1, "normalized_patch": "diff --git a/django/http/response.py b/django/http/response.py\nindex 508a8a7..b96c448 100644\n--- a/django/http/response.py\n+++ b/django/http/response.py\n@@ -329,7 +329,7 @@ class FileResponse(StreamingHttpResponse):\n         if self._no_explicit_content_type:\n             if filename:\n                 content_type, encoding = mimetypes.guess_type(filename)\n-                content_type = {'bzip2': 'application/x-bzip', 'gzip': 'application/gzip', 'xz': 'application/x-xz'}.get(encoding, content_type)\n+                content_type, encoding = {'br': ('application/x-brotli', None), 'Z': ('application/x-compress', None), 'bzip2': 'application/x-bzip', 'gzip': 'application/gzip', 'xz': 'application/x-xz'}.get(encoding, content_type)\n                 self.headers['Content-Type'] = content_type or 'application/octet-stream'\n             else:\n                 self.headers['Content-Type'] = 'application/octet-stream'\n", "normalized_occurrence": 1}
