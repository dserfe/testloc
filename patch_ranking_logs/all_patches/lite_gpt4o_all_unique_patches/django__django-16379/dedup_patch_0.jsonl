{"model_name_or_path": "agentless", "instance_id": "django__django-16379", "model_patch": "diff --git a/django/core/cache/backends/filebased.py b/django/core/cache/backends/filebased.py\nindex 0a5d7e2..03cb471 100644\n--- a/django/core/cache/backends/filebased.py\n+++ b/django/core/cache/backends/filebased.py\n@@ -90,10 +90,13 @@ class FileBasedCache(BaseCache):\n \n     def has_key(self, key, version=None):\n         fname = self._key_to_file(key, version)\n-        if os.path.exists(fname):\n+        try:\n             with open(fname, \"rb\") as f:\n-                return not self._is_expired(f)\n-        return False\n+                if self._is_expired(f):\n+                    return False\n+                return True\n+        except FileNotFoundError:\n+            return False\n \n     def _cull(self):\n         \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/cache/backends/filebased.py b/django/core/cache/backends/filebased.py\nindex 766dc41..dca2c36 100644\n--- a/django/core/cache/backends/filebased.py\n+++ b/django/core/cache/backends/filebased.py\n@@ -76,10 +76,13 @@ class FileBasedCache(BaseCache):\n         return True\n     def has_key(self, key, version=None):\n         fname = self._key_to_file(key, version)\n-        if os.path.exists(fname):\n+        try:\n             with open(fname, 'rb') as f:\n-                return not self._is_expired(f)\n-        return False\n+                if self._is_expired(f):\n+                    return False\n+                return True\n+        except FileNotFoundError:\n+            return False\n     def _cull(self):\n         filelist = self._list_cache_files()\n         num_entries = len(filelist)\n", "normalized_occurrence": 1}
