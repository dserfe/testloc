{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-21627", "model_patch": "diff --git a/sympy/functions/elementary/hyperbolic.py b/sympy/functions/elementary/hyperbolic.py\nindex db125b2..2c16701 100644\n--- a/sympy/functions/elementary/hyperbolic.py\n+++ b/sympy/functions/elementary/hyperbolic.py\n@@ -499,6 +499,23 @@ class cosh(HyperbolicFunction):\n         arg = self.args[0]\n         return arg.is_finite\n \n+    def _eval_is_zero(self):\n+        # cosh(x) = 0 has no real solutions\n+        # For complex solutions: cosh(x) = 0 iff x = (2n+1)\u03c0i/2\n+        from sympy import I, pi\n+        arg = self.args[0]\n+        if arg.is_real:\n+            return False\n+        # Try to identify if arg = (2n+1)\u03c0i/2\n+        if arg.is_imaginary:\n+            # Get coefficient of I\n+            i_coeff = arg.as_coefficient(I)\n+            if i_coeff is not None:\n+                # Check if i_coeff = (2n+1)\u03c0/2\n+                half_pi_mod = (i_coeff - pi/2) % pi\n+                return fuzzy_not(half_pi_mod.is_zero)\n+        return None\n+\n \n class tanh(HyperbolicFunction):\n     r\"\"\"\n", "occurrence": 1, "normalized_patch": "--- a/sympy/functions/elementary/hyperbolic.py\n+++ b/sympy/functions/elementary/hyperbolic.py\n+    def _eval_is_zero(self):\n+        from sympy import I, pi\n+        arg = self.args[0]\n+        if arg.is_real:\n+            return False\n+        if arg.is_imaginary:\n+            i_coeff = arg.as_coefficient(I)\n+            if i_coeff is not None:\n+                half_pi_mod = (i_coeff - pi / 2) % pi\n+                return fuzzy_not(half_pi_mod.is_zero)\n+        return None", "normalized_occurrence": 1}
