{"model_name_or_path": "agentless_claude", "instance_id": "pylint-dev__pylint-8898", "model_patch": "diff --git a/pylint/config/argument.py b/pylint/config/argument.py\nindex 58062ab..3590bb8 100644\n--- a/pylint/config/argument.py\n+++ b/pylint/config/argument.py\n@@ -112,10 +112,15 @@ def _regex_transformer(value: str) -> Pattern[str]:\n \n \n def _regexp_csv_transfomer(value: str) -> Sequence[Pattern[str]]:\n-    \"\"\"Transforms a comma separated list of regular expressions.\"\"\"\n+    \"\"\"Transforms a comma separated list of regular expressions.\n+    Commas can be escaped with a backslash to include them in patterns.\"\"\"\n+    # Split on unescaped commas\n+    parts = re.split(r'(?<!\\\\),', value)\n     patterns: list[Pattern[str]] = []\n-    for pattern in _csv_transformer(value):\n-        patterns.append(_regex_transformer(pattern))\n+    for pattern in parts:\n+        # Remove escape character from escaped commas\n+        unescaped_pattern = pattern.replace(r'\\,', ',').strip()\n+        patterns.append(_regex_transformer(unescaped_pattern))\n     return patterns\n \n \n", "normalized_patch": "diff --git a/pylint/config/argument.py b/pylint/config/argument.py\nindex 61d66ca..5a73653 100644\n--- a/pylint/config/argument.py\n+++ b/pylint/config/argument.py\n@@ -54,9 +54,11 @@ def _regex_transformer(value: str) -> Pattern[str]:\n         msg = f'Error in provided regular expression: {value} beginning at index {e.pos}: {e.msg}'\n         raise argparse.ArgumentTypeError(msg) from e\n def _regexp_csv_transfomer(value: str) -> Sequence[Pattern[str]]:\n+    parts = re.split('(?<!\\\\\\\\),', value)\n     patterns: list[Pattern[str]] = []\n-    for pattern in _csv_transformer(value):\n-        patterns.append(_regex_transformer(pattern))\n+    for pattern in parts:\n+        unescaped_pattern = pattern.replace('\\\\,', ',').strip()\n+        patterns.append(_regex_transformer(unescaped_pattern))\n     return patterns\n def _regexp_paths_csv_transfomer(value: str) -> Sequence[Pattern[str]]:\n     patterns: list[Pattern[str]] = []\n", "normalized_occurrence": 1}
