{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-25570", "model_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex 36a655a..87564b8 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -522,8 +522,12 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n                 continue\n             transformer_with_feature_names_out.append((name, feature_names_out))\n \n-        if not transformer_with_feature_names_out:\n-            # No feature names\n+        # Even if there are no feature names from transformers with features,\n+        # we still need to handle transformers that were fitted but had no features\n+        if not any(\n+            not _is_empty_column_selection(cols)\n+            for _, _, cols, _ in self._iter(fitted=True)\n+        ):\n             return np.array([], dtype=object)\n \n         return self._add_prefix_for_feature_names_out(\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex 03f51bb..ce228c2 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -131,7 +131,7 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n             if feature_names_out is None:\n                 continue\n             transformer_with_feature_names_out.append((name, feature_names_out))\n-        if not transformer_with_feature_names_out:\n+        if not any((not _is_empty_column_selection(cols) for _, _, cols, _ in self._iter(fitted=True))):\n             return np.array([], dtype=object)\n         return self._add_prefix_for_feature_names_out(transformer_with_feature_names_out)\n     def _add_prefix_for_feature_names_out(self, transformer_with_feature_names_out):\n", "normalized_occurrence": 1}
