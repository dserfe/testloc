{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-14531", "model_patch": "diff --git a/sympy/printing/str.py b/sympy/printing/str.py\nindex 2f140fa..b2a993c 100644\n--- a/sympy/printing/str.py\n+++ b/sympy/printing/str.py\n@@ -89,6 +89,9 @@ class StrPrinter(Printer):\n         return '%s(%s)' % (expr.func, expr.arg)\n \n     def _print_Basic(self, expr):\n+        # Get the current settings dictionary\n+        settings = self._settings\n+        # Use the same settings for printing subexpressions\n         l = [self._print(o) for o in expr.args]\n         return expr.__class__.__name__ + \"(%s)\" % \", \".join(l)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/str.py b/sympy/printing/str.py\nindex b15ce89..3918cdf 100644\n--- a/sympy/printing/str.py\n+++ b/sympy/printing/str.py\n@@ -62,6 +62,7 @@ class StrPrinter(Printer):\n     def _print_AppliedPredicate(self, expr):\n         return '%s(%s)' % (expr.func, expr.arg)\n     def _print_Basic(self, expr):\n+        settings = self._settings\n         l = [self._print(o) for o in expr.args]\n         return expr.__class__.__name__ + '(%s)' % ', '.join(l)\n     def _print_BlockMatrix(self, B):\n", "normalized_occurrence": 1}
