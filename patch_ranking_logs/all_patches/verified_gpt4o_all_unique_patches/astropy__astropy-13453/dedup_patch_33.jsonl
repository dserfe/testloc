{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-13453", "model_patch": "diff --git a/astropy/io/ascii/ui.py b/astropy/io/ascii/ui.py\nindex ef49d6a..22e7200 100644\n--- a/astropy/io/ascii/ui.py\n+++ b/astropy/io/ascii/ui.py\n@@ -848,6 +848,11 @@ def write(table, output=None, format=None, Writer=None, fast_writer=True, *,\n             'The key(s) {} specified in the formats argument do not match a column name.'\n             .format(diff_format_with_names), AstropyWarning)\n \n+    if 'formats' in kwargs:\n+        for colname, formatter in kwargs['formats'].items():\n+            if colname in table.colnames:\n+                table[colname].info.format = formatter\n+\n     if table.has_mixin_columns:\n         fast_writer = False\n \n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/io/ascii/ui.py b/astropy/io/ascii/ui.py\nindex bcaf256..2000daa 100644\n--- a/astropy/io/ascii/ui.py\n+++ b/astropy/io/ascii/ui.py\n@@ -350,6 +350,10 @@ def write(table, output=None, format=None, Writer=None, fast_writer=True, *, ove\n     diff_format_with_names = set(kwargs.get('formats', [])) - set(table0.colnames)\n     if diff_format_with_names:\n         warnings.warn('The key(s) {} specified in the formats argument do not match a column name.'.format(diff_format_with_names), AstropyWarning)\n+    if 'formats' in kwargs:\n+        for colname, formatter in kwargs['formats'].items():\n+            if colname in table.colnames:\n+                table[colname].info.format = formatter\n     if table.has_mixin_columns:\n         fast_writer = False\n     Writer = _get_format_class(format, Writer, 'Writer')\n", "normalized_occurrence": 1}
