{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-15011", "model_patch": "diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py\nindex 48d6783..8d342bc 100644\n--- a/sympy/utilities/lambdify.py\n+++ b/sympy/utilities/lambdify.py\n@@ -723,7 +723,7 @@ class _EvaluatorPrinter(object):\n             if iterable(arg):\n                 nested_argstrs, expr = self._preprocess(arg, expr)\n                 argstrs.append(nested_argstrs)\n-            elif isinstance(arg, DeferredVector):\n+            elif isinstance(arg, DeferredVector) or isinstance(arg, MatrixSymbol):\n                 argstrs.append(str(arg))\n             elif isinstance(arg, Symbol):\n                 argrep = self._argrepr(arg)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py\nindex 9997e01..c348018 100644\n--- a/sympy/utilities/lambdify.py\n+++ b/sympy/utilities/lambdify.py\n@@ -292,7 +292,7 @@ class _EvaluatorPrinter(object):\n             if iterable(arg):\n                 nested_argstrs, expr = self._preprocess(arg, expr)\n                 argstrs.append(nested_argstrs)\n-            elif isinstance(arg, DeferredVector):\n+            elif isinstance(arg, DeferredVector) or isinstance(arg, MatrixSymbol):\n                 argstrs.append(str(arg))\n             elif isinstance(arg, Symbol):\n                 argrep = self._argrepr(arg)\n", "normalized_occurrence": 1}
