{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-11445", "model_patch": "diff --git a/sphinx/util/rst.py b/sphinx/util/rst.py\nindex 83e696f..42cf446 100644\n--- a/sphinx/util/rst.py\n+++ b/sphinx/util/rst.py\n@@ -90,11 +90,24 @@ def prepend_prolog(content: StringList, prolog: str) -> None:\n             content.insert(pos, '', '<generated>', 0)\n             pos += 1\n \n-        # insert prolog (after docinfo if exists)\n-        for lineno, line in enumerate(prolog.splitlines()):\n-            content.insert(pos + lineno, line, '<rst_prolog>', lineno)\n+        # check if first line is a section title underline\n+        if len(content) > 0 and all(c == '=' for c in content[0]):\n+            # find the start of the actual content after the title\n+            for idx, line in enumerate(content):\n+                if line.strip() == '':\n+                    break\n+            pos = idx + 1\n+\n+            for lineno, line in enumerate(prolog.splitlines()):\n+                content.insert(pos + lineno, line, '<rst_prolog>', lineno)\n+\n+            content.insert(pos + lineno + 1, '', '<generated>', 0)\n+        else:\n+            # insert prolog (after docinfo if exists)\n+            for lineno, line in enumerate(prolog.splitlines()):\n+                content.insert(pos + lineno, line, '<rst_prolog>', lineno)\n \n-        content.insert(pos + lineno + 1, '', '<generated>', 0)\n+            content.insert(pos + lineno + 1, '', '<generated>', 0)\n \n \n def append_epilog(content: StringList, epilog: str) -> None:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/util/rst.py b/sphinx/util/rst.py\nindex 911aea2..361f7b9 100644\n--- a/sphinx/util/rst.py\n+++ b/sphinx/util/rst.py\n@@ -60,9 +60,18 @@ def prepend_prolog(content: StringList, prolog: str) -> None:\n         if pos > 0:\n             content.insert(pos, '', '<generated>', 0)\n             pos += 1\n-        for lineno, line in enumerate(prolog.splitlines()):\n-            content.insert(pos + lineno, line, '<rst_prolog>', lineno)\n-        content.insert(pos + lineno + 1, '', '<generated>', 0)\n+        if len(content) > 0 and all((c == '=' for c in content[0])):\n+            for idx, line in enumerate(content):\n+                if line.strip() == '':\n+                    break\n+            pos = idx + 1\n+            for lineno, line in enumerate(prolog.splitlines()):\n+                content.insert(pos + lineno, line, '<rst_prolog>', lineno)\n+            content.insert(pos + lineno + 1, '', '<generated>', 0)\n+        else:\n+            for lineno, line in enumerate(prolog.splitlines()):\n+                content.insert(pos + lineno, line, '<rst_prolog>', lineno)\n+            content.insert(pos + lineno + 1, '', '<generated>', 0)\n def append_epilog(content: StringList, epilog: str) -> None:\n     if epilog:\n         if len(content) > 0:\n", "normalized_occurrence": 1}
