{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25960", "model_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex eeb18de..84c9c2b 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -1581,10 +1581,15 @@ default: %(va)s\n             relative height of ``height_ratios[i] / sum(height_ratios)``.\n             If not given, all rows will have the same height.\n         \"\"\"\n-        gs = GridSpec(nrows=nrows, ncols=ncols, figure=self,\n-                      wspace=wspace, hspace=hspace,\n-                      width_ratios=width_ratios,\n-                      height_ratios=height_ratios)\n+        gs = GridSpec(\n+            nrows=nrows, ncols=ncols, figure=self,\n+            left=self.subplotpars.left, right=self.subplotpars.right,\n+            bottom=self.subplotpars.bottom, top=self.subplotpars.top,\n+            wspace=self.subplotpars.wspace if wspace is None else wspace,\n+            hspace=self.subplotpars.hspace if hspace is None else hspace,\n+            width_ratios=width_ratios,\n+            height_ratios=height_ratios\n+        )\n \n         sfarr = np.empty((nrows, ncols), dtype=object)\n         for i in range(ncols):\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 19ec421..d75ee9f 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -410,7 +410,7 @@ class FigureBase(Artist):\n         gs = GridSpec(nrows=nrows, ncols=ncols, figure=self, **kwargs)\n         return gs\n     def subfigures(self, nrows=1, ncols=1, squeeze=True, wspace=None, hspace=None, width_ratios=None, height_ratios=None, **kwargs):\n-        gs = GridSpec(nrows=nrows, ncols=ncols, figure=self, wspace=wspace, hspace=hspace, width_ratios=width_ratios, height_ratios=height_ratios)\n+        gs = GridSpec(nrows=nrows, ncols=ncols, figure=self, left=self.subplotpars.left, right=self.subplotpars.right, bottom=self.subplotpars.bottom, top=self.subplotpars.top, wspace=self.subplotpars.wspace if wspace is None else wspace, hspace=self.subplotpars.hspace if hspace is None else hspace, width_ratios=width_ratios, height_ratios=height_ratios)\n         sfarr = np.empty((nrows, ncols), dtype=object)\n         for i in range(ncols):\n             for j in range(nrows):\n", "normalized_occurrence": 1}
