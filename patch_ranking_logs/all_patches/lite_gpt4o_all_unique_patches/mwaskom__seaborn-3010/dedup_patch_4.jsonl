{"model_name_or_path": "agentless", "instance_id": "mwaskom__seaborn-3010", "model_patch": "diff --git a/seaborn/_stats/regression.py b/seaborn/_stats/regression.py\nindex a346227..2f77a87 100644\n--- a/seaborn/_stats/regression.py\n+++ b/seaborn/_stats/regression.py\n@@ -23,7 +23,12 @@ class PolyFit(Stat):\n \n         x = data[\"x\"]\n         y = data[\"y\"]\n-        if x.nunique() <= self.order:\n+        # Filter out missing values\n+        valid = x.notnull() & y.notnull()\n+        x = x[valid]\n+        y = y[valid]\n+\n+        if len(x) <= self.order:\n             # TODO warn?\n             xx = yy = []\n         else:\n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/_stats/regression.py b/seaborn/_stats/regression.py\nindex c25e7bb..deda4aa 100644\n--- a/seaborn/_stats/regression.py\n+++ b/seaborn/_stats/regression.py\n@@ -10,7 +10,10 @@ class PolyFit(Stat):\n     def _fit_predict(self, data):\n         x = data['x']\n         y = data['y']\n-        if x.nunique() <= self.order:\n+        valid = x.notnull() & y.notnull()\n+        x = x[valid]\n+        y = y[valid]\n+        if len(x) <= self.order:\n             xx = yy = []\n         else:\n             p = np.polyfit(x, y, self.order)\n", "normalized_occurrence": 1}
