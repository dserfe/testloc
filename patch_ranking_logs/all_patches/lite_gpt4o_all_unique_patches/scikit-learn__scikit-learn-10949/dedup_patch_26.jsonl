{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-10949", "model_patch": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex 7e2fa63..c983b43 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -521,6 +521,11 @@ def check_array(array, accept_sparse=False, accept_large_sparse=True,\n         # and we need to catch and raise exception for such cases.\n         _ensure_no_complex_data(array)\n \n+        if warn_on_dtype and dtype_orig is not None and array.dtype != dtype_orig:\n+            msg = (\"Data with input dtype %s was converted to %s%s.\"\n+                   % (dtype_orig, array.dtype, context))\n+            warnings.warn(msg, DataConversionWarning)\n+\n         if ensure_2d:\n             # If input is scalar raise error\n             if array.ndim == 0:\n", "occurrence": 2, "normalized_patch": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex 7db8b51..609dce5 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -159,6 +159,9 @@ def check_array(array, accept_sparse=False, accept_large_sparse=True, dtype='num\n             except ComplexWarning:\n                 raise ValueError('Complex data not supported\\n{}\\n'.format(array))\n         _ensure_no_complex_data(array)\n+        if warn_on_dtype and dtype_orig is not None and (array.dtype != dtype_orig):\n+            msg = 'Data with input dtype %s was converted to %s%s.' % (dtype_orig, array.dtype, context)\n+            warnings.warn(msg, DataConversionWarning)\n         if ensure_2d:\n             if array.ndim == 0:\n                 raise ValueError('Expected 2D array, got scalar array instead:\\narray={}.\\nReshape your data either using array.reshape(-1, 1) if your data has a single feature or array.reshape(1, -1) if it contains a single sample.'.format(array))\n", "normalized_occurrence": 2}
