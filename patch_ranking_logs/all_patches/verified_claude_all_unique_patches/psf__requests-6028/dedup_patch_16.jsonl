{"model_name_or_path": "agentless_claude", "instance_id": "psf__requests-6028", "model_patch": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex d47134b..889647b 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -180,8 +180,10 @@ class HTTPAdapter(BaseAdapter):\n             manager = self.proxy_manager[proxy]\n         elif proxy.lower().startswith('socks'):\n             username, password = get_auth_from_url(proxy)\n+            proxy_headers = self.proxy_headers(proxy)\n             manager = self.proxy_manager[proxy] = SOCKSProxyManager(\n                 proxy,\n+                proxy_headers=proxy_headers,\n                 username=username,\n                 password=password,\n                 num_pools=self._pool_connections,\n", "occurrence": 1, "normalized_patch": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex 8bf110e..1d92280 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -72,7 +72,8 @@ class HTTPAdapter(BaseAdapter):\n             manager = self.proxy_manager[proxy]\n         elif proxy.lower().startswith('socks'):\n             username, password = get_auth_from_url(proxy)\n-            manager = self.proxy_manager[proxy] = SOCKSProxyManager(proxy, username=username, password=password, num_pools=self._pool_connections, maxsize=self._pool_maxsize, block=self._pool_block, **proxy_kwargs)\n+            proxy_headers = self.proxy_headers(proxy)\n+            manager = self.proxy_manager[proxy] = SOCKSProxyManager(proxy, proxy_headers=proxy_headers, username=username, password=password, num_pools=self._pool_connections, maxsize=self._pool_maxsize, block=self._pool_block, **proxy_kwargs)\n         else:\n             proxy_headers = self.proxy_headers(proxy)\n             manager = self.proxy_manager[proxy] = proxy_from_url(proxy, proxy_headers=proxy_headers, num_pools=self._pool_connections, maxsize=self._pool_maxsize, block=self._pool_block, **proxy_kwargs)\n", "normalized_occurrence": 1}
