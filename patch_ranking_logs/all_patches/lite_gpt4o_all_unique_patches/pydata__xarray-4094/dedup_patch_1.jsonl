{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-4094", "model_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex 1e17b93..0bf6e98 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -3509,7 +3509,10 @@ class Dataset(Mapping, ImplementsDatasetReduce, DataWithCoords):\n         for name, var in obj.variables.items():\n             if name != dim:\n                 if dim in var.dims:\n-                    new_dims = dict(zip(new_dim_names, new_dim_sizes))\n+                    if len(new_dim_names) == 1:\n+                        new_dims = {new_dim_names[0]: new_dim_sizes[0]}\n+                    else:\n+                        new_dims = dict(zip(new_dim_names, new_dim_sizes))\n                     variables[name] = var.unstack({dim: new_dims})\n                 else:\n                     variables[name] = var\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex 21ef2a4..66d7348 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -1178,7 +1178,10 @@ class Dataset(Mapping, ImplementsDatasetReduce, DataWithCoords):\n         for name, var in obj.variables.items():\n             if name != dim:\n                 if dim in var.dims:\n-                    new_dims = dict(zip(new_dim_names, new_dim_sizes))\n+                    if len(new_dim_names) == 1:\n+                        new_dims = {new_dim_names[0]: new_dim_sizes[0]}\n+                    else:\n+                        new_dims = dict(zip(new_dim_names, new_dim_sizes))\n                     variables[name] = var.unstack({dim: new_dims})\n                 else:\n                     variables[name] = var\n", "normalized_occurrence": 1}
