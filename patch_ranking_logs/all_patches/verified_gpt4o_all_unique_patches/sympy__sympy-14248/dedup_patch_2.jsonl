{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-14248", "model_patch": "diff --git a/sympy/printing/str.py b/sympy/printing/str.py\nindex 29d16bd..1900230 100644\n--- a/sympy/printing/str.py\n+++ b/sympy/printing/str.py\n@@ -54,21 +54,15 @@ class StrPrinter(Printer):\n \n         PREC = precedence(expr)\n         l = []\n-        for term in terms:\n+        for i, term in enumerate(terms):\n             t = self._print(term)\n-            if t.startswith('-'):\n-                sign = \"-\"\n-                t = t[1:]\n+            if i == 0:\n+                l.append(t)\n+            elif t.startswith('-'):\n+                l.append('- %s' % t[1:])\n             else:\n-                sign = \"+\"\n-            if precedence(term) < PREC:\n-                l.extend([sign, \"(%s)\" % t])\n-            else:\n-                l.extend([sign, t])\n-        sign = l.pop(0)\n-        if sign == '+':\n-            sign = \"\"\n-        return sign + ' '.join(l)\n+                l.append('+ %s' % t)\n+        return ' '.join(l)\n \n     def _print_BooleanTrue(self, expr):\n         return \"True\"\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/str.py b/sympy/printing/str.py\nindex a98e2a9..9f49ac5 100644\n--- a/sympy/printing/str.py\n+++ b/sympy/printing/str.py\n@@ -34,21 +34,15 @@ class StrPrinter(Printer):\n             terms = self._as_ordered_terms(expr, order=order)\n         PREC = precedence(expr)\n         l = []\n-        for term in terms:\n+        for i, term in enumerate(terms):\n             t = self._print(term)\n-            if t.startswith('-'):\n-                sign = '-'\n-                t = t[1:]\n+            if i == 0:\n+                l.append(t)\n+            elif t.startswith('-'):\n+                l.append('- %s' % t[1:])\n             else:\n-                sign = '+'\n-            if precedence(term) < PREC:\n-                l.extend([sign, '(%s)' % t])\n-            else:\n-                l.extend([sign, t])\n-        sign = l.pop(0)\n-        if sign == '+':\n-            sign = ''\n-        return sign + ' '.join(l)\n+                l.append('+ %s' % t)\n+        return ' '.join(l)\n     def _print_BooleanTrue(self, expr):\n         return 'True'\n     def _print_BooleanFalse(self, expr):\n", "normalized_occurrence": 1}
