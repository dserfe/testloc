{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-3677", "model_patch": "diff --git a/xarray/core/merge.py b/xarray/core/merge.py\nindex cad360a..d0ef093 100644\n--- a/xarray/core/merge.py\n+++ b/xarray/core/merge.py\n@@ -380,14 +380,15 @@ def coerce_pandas_values(objects: Iterable[\"CoercibleMapping\"]) -> List[\"Dataset\n     List of Dataset or dictionary objects. Any inputs or values in the inputs\n     that were pandas objects have been converted into native xarray objects.\n     \"\"\"\n-    from .dataarray import DataArray\n+    from .dataarray import DataArray, as_dataset\n     from .dataset import Dataset\n \n     out = []\n     for obj in objects:\n         if isinstance(obj, Dataset):\n             variables: \"DatasetLike\" = obj\n-        else:\n+        elif isinstance(obj, DataArray):\n+            variables = as_dataset(obj)\n             variables = {}\n             if isinstance(obj, PANDAS_TYPES):\n                 obj = dict(obj.iteritems())\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/merge.py b/xarray/core/merge.py\nindex 2140bbd..85a0186 100644\n--- a/xarray/core/merge.py\n+++ b/xarray/core/merge.py\n@@ -254,13 +254,14 @@ def coerce_pandas_values(objects: Iterable['CoercibleMapping']) -> List['Dataset\n     List of Dataset or dictionary objects. Any inputs or values in the inputs\n     that were pandas objects have been converted into native xarray objects.\n     \"\"\"\n-    from .dataarray import DataArray\n+    from .dataarray import DataArray, as_dataset\n     from .dataset import Dataset\n     out = []\n     for obj in objects:\n         if isinstance(obj, Dataset):\n             variables: 'DatasetLike' = obj\n-        else:\n+        elif isinstance(obj, DataArray):\n+            variables = as_dataset(obj)\n             variables = {}\n             if isinstance(obj, PANDAS_TYPES):\n                 obj = dict(obj.iteritems())\n", "normalized_occurrence": 1}
