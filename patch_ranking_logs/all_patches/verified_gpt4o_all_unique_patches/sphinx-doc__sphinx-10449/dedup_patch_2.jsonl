{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-10449", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex d42883b..4aa7e22 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1593,7 +1593,10 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type:\n                 parameters = list(overload.parameters.values())\n                 overload = overload.replace(parameters=parameters[1:],\n                                             return_annotation=Parameter.empty)\n-                sig = stringify_signature(overload, **kwargs)\n+                if self.objtype == \"class\" and overload.return_annotation == Parameter.empty:\n+                    sig = stringify_signature(overload.replace(return_annotation=None), **kwargs)\n+                else:\n+                    sig = stringify_signature(overload, **kwargs)\n                 sigs.append(sig)\n         else:\n             sigs.append(sig)\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 2c8c52a..5f22cc7 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -895,7 +895,10 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):\n                 overload = evaluate_signature(overload, __globals__, self.config.autodoc_type_aliases)\n                 parameters = list(overload.parameters.values())\n                 overload = overload.replace(parameters=parameters[1:], return_annotation=Parameter.empty)\n-                sig = stringify_signature(overload, **kwargs)\n+                if self.objtype == 'class' and overload.return_annotation == Parameter.empty:\n+                    sig = stringify_signature(overload.replace(return_annotation=None), **kwargs)\n+                else:\n+                    sig = stringify_signature(overload, **kwargs)\n                 sigs.append(sig)\n         else:\n             sigs.append(sig)\n", "normalized_occurrence": 1}
