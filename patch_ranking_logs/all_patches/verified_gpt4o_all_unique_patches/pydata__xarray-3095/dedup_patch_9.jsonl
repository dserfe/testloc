{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-3095", "model_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex 6942a04..45937b0 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -935,6 +935,9 @@ class Dataset(Mapping, ImplementsDatasetReduce, DataWithCoords):\n         if data is None:\n             variables = OrderedDict((k, v.copy(deep=deep))\n                                     for k, v in self._variables.items())\n+            for k, v in variables.items():\n+                if isinstance(v.data, np.ndarray) and v.data.dtype.kind == 'U':\n+                    v.data = v.data.astype(f'<U{v.data.dtype.itemsize}')\n         elif not utils.is_dict_like(data):\n             raise ValueError('Data must be dict-like')\n         else:\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex 72f0a0b..32cafe5 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -426,6 +426,9 @@ class Dataset(Mapping, ImplementsDatasetReduce, DataWithCoords):\n     def copy(self, deep: bool=False, data: Mapping=None) -> 'Dataset':\n         if data is None:\n             variables = OrderedDict(((k, v.copy(deep=deep)) for k, v in self._variables.items()))\n+            for k, v in variables.items():\n+                if isinstance(v.data, np.ndarray) and v.data.dtype.kind == 'U':\n+                    v.data = v.data.astype(f'<U{v.data.dtype.itemsize}')\n         elif not utils.is_dict_like(data):\n             raise ValueError('Data must be dict-like')\n         else:\n", "normalized_occurrence": 1}
