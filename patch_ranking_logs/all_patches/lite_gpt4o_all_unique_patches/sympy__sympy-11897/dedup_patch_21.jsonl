{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-11897", "model_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 6f6ac51..8132ff1 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -399,14 +399,7 @@ class LatexPrinter(Printer):\n             sdenom = convert(denom)\n             ldenom = len(sdenom.split())\n             ratio = self._settings['long_frac_ratio']\n-            if self._settings['fold_short_frac'] \\\n-                    and ldenom <= 2 and not \"^\" in sdenom:\n-                # handle short fractions\n-                if self._needs_mul_brackets(numer, last=False):\n-                    tex += r\"\\left(%s\\right) / %s\" % (snumer, sdenom)\n-                else:\n-                    tex += r\"%s / %s\" % (snumer, sdenom)\n-            elif len(snumer.split()) > ratio*ldenom:\n+            if len(snumer.split()) > ratio * ldenom:\n                 # handle long fractions\n                 if self._needs_mul_brackets(numer, last=True):\n                     tex += r\"\\frac{1}{%s}%s\\left(%s\\right)\" \\\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex df1a5c2..e47a5f8 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -196,12 +196,7 @@ class LatexPrinter(Printer):\n             sdenom = convert(denom)\n             ldenom = len(sdenom.split())\n             ratio = self._settings['long_frac_ratio']\n-            if self._settings['fold_short_frac'] and ldenom <= 2 and (not '^' in sdenom):\n-                if self._needs_mul_brackets(numer, last=False):\n-                    tex += '\\\\left(%s\\\\right) / %s' % (snumer, sdenom)\n-                else:\n-                    tex += '%s / %s' % (snumer, sdenom)\n-            elif len(snumer.split()) > ratio * ldenom:\n+            if len(snumer.split()) > ratio * ldenom:\n                 if self._needs_mul_brackets(numer, last=True):\n                     tex += '\\\\frac{1}{%s}%s\\\\left(%s\\\\right)' % (sdenom, separator, snumer)\n                 elif numer.is_Mul:\n", "normalized_occurrence": 2}
