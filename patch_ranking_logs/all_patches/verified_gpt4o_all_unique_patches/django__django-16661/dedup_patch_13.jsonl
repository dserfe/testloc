{"model_name_or_path": "agentless", "instance_id": "django__django-16661", "model_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 20a301b..80d6dd1 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -491,10 +491,11 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n                 valid_lookups.add(filter_item)\n \n         # Is it a valid relational lookup?\n-        return not {\n-            LOOKUP_SEP.join(relation_parts),\n-            LOOKUP_SEP.join(relation_parts + [part]),\n-        }.isdisjoint(valid_lookups)\n+        for i in range(len(relation_parts)):\n+            sub_parts = relation_parts[:i+1]\n+            if LOOKUP_SEP.join(sub_parts) in valid_lookups:\n+                return True\n+        return False\n \n     def to_field_allowed(self, request, to_field):\n         \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 061e1b9..278f62e 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -221,7 +221,11 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n                 valid_lookups.add(filter_item[0])\n             else:\n                 valid_lookups.add(filter_item)\n-        return not {LOOKUP_SEP.join(relation_parts), LOOKUP_SEP.join(relation_parts + [part])}.isdisjoint(valid_lookups)\n+        for i in range(len(relation_parts)):\n+            sub_parts = relation_parts[:i + 1]\n+            if LOOKUP_SEP.join(sub_parts) in valid_lookups:\n+                return True\n+        return False\n     def to_field_allowed(self, request, to_field):\n         try:\n             field = self.opts.get_field(to_field)\n", "normalized_occurrence": 1}
