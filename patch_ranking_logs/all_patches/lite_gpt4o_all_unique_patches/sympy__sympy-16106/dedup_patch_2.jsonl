{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-16106", "model_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 59074b8..1b4e6f1 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -436,7 +436,33 @@ class MathMLContentPrinter(MathMLPrinterBase):\n         x.appendChild(self._print(e.expr))\n         return x\n \n-    def _print_Function(self, e):\n+    def _print_Indexed(self, e):\n+        mrow = self.dom.createElement('mrow')\n+        base = self.dom.createElement('mi')\n+        base.appendChild(self.dom.createTextNode(e.base.label))\n+        mrow.appendChild(base)\n+        \n+        for index in e.indices:\n+            sub = self.dom.createElement('msub')\n+            sub.appendChild(self._print(base))\n+            sub.appendChild(self._print(index))\n+            mrow.appendChild(sub)\n+        \n+        return mrow\n+\n+    def _print_Indexed(self, e):\n+        mrow = self.dom.createElement('mrow')\n+        base = self.dom.createElement('mi')\n+        base.appendChild(self.dom.createTextNode(e.base.label))\n+        mrow.appendChild(base)\n+        \n+        for index in e.indices:\n+            sub = self.dom.createElement('msub')\n+            sub.appendChild(self._print(base))\n+            sub.appendChild(self._print(index))\n+            mrow.appendChild(sub)\n+        \n+        return mrow\n         x = self.dom.createElement(\"apply\")\n         x.appendChild(self.dom.createElement(self.mathml_tag(e)))\n         for arg in e.args:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 6d7dfb1..e609fbf 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -291,7 +291,28 @@ class MathMLContentPrinter(MathMLPrinterBase):\n         x.appendChild(x_1)\n         x.appendChild(self._print(e.expr))\n         return x\n-    def _print_Function(self, e):\n+    def _print_Indexed(self, e):\n+        mrow = self.dom.createElement('mrow')\n+        base = self.dom.createElement('mi')\n+        base.appendChild(self.dom.createTextNode(e.base.label))\n+        mrow.appendChild(base)\n+        for index in e.indices:\n+            sub = self.dom.createElement('msub')\n+            sub.appendChild(self._print(base))\n+            sub.appendChild(self._print(index))\n+            mrow.appendChild(sub)\n+        return mrow\n+    def _print_Indexed(self, e):\n+        mrow = self.dom.createElement('mrow')\n+        base = self.dom.createElement('mi')\n+        base.appendChild(self.dom.createTextNode(e.base.label))\n+        mrow.appendChild(base)\n+        for index in e.indices:\n+            sub = self.dom.createElement('msub')\n+            sub.appendChild(self._print(base))\n+            sub.appendChild(self._print(index))\n+            mrow.appendChild(sub)\n+        return mrow\n         x = self.dom.createElement('apply')\n         x.appendChild(self.dom.createElement(self.mathml_tag(e)))\n         for arg in e.args:\n", "normalized_occurrence": 1}
