{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-20826", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 07605b5..ce838e1 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1191,6 +1191,14 @@ class _AxesBase(martist.Artist):\n \n         xaxis_visible = self.xaxis.get_visible()\n         yaxis_visible = self.yaxis.get_visible()\n+        \n+        # Store tick visibility states for shared axes\n+        if self._sharex is not None:\n+            xtick_top = self.xaxis.get_tick_params()['top']\n+            xtick_labeltop = self.xaxis.get_tick_params()['labeltop']\n+        if self._sharey is not None:\n+            ytick_right = self.yaxis.get_tick_params()['right']\n+            ytick_labelright = self.yaxis.get_tick_params()['labelright']\n \n         self.xaxis.clear()\n         self.yaxis.clear()\n@@ -1305,9 +1313,13 @@ class _AxesBase(martist.Artist):\n         if self._sharex is not None:\n             self.xaxis.set_visible(xaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            # Restore tick visibility states for shared x-axis\n+            self.tick_params(top=xtick_top, labeltop=xtick_labeltop)\n         if self._sharey is not None:\n             self.yaxis.set_visible(yaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            # Restore tick visibility states for shared y-axis\n+            self.tick_params(right=ytick_right, labelright=ytick_labelright)\n \n         self.stale = True\n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 33a6de3..9db273c 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -503,6 +503,12 @@ class _AxesBase(martist.Artist):\n             patch_visible = True\n         xaxis_visible = self.xaxis.get_visible()\n         yaxis_visible = self.yaxis.get_visible()\n+        if self._sharex is not None:\n+            xtick_top = self.xaxis.get_tick_params()['top']\n+            xtick_labeltop = self.xaxis.get_tick_params()['labeltop']\n+        if self._sharey is not None:\n+            ytick_right = self.yaxis.get_tick_params()['right']\n+            ytick_labelright = self.yaxis.get_tick_params()['labelright']\n         self.xaxis.clear()\n         self.yaxis.clear()\n         for name, spine in self.spines.items():\n@@ -578,9 +584,11 @@ class _AxesBase(martist.Artist):\n         if self._sharex is not None:\n             self.xaxis.set_visible(xaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            self.tick_params(top=xtick_top, labeltop=xtick_labeltop)\n         if self._sharey is not None:\n             self.yaxis.set_visible(yaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            self.tick_params(right=ytick_right, labelright=ytick_labelright)\n         self.stale = True\n     class ArtistList(MutableSequence):\n         def __init__(self, axes, prop_name, add_name, valid_types=None, invalid_types=None):\n", "normalized_occurrence": 1}
