{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8551", "model_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex f44a82b..096a8bd 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -1265,12 +1265,17 @@ class PythonDomain(Domain):\n                         newname = modname + '.' + name\n                     elif name in self.objects and self.objects[name].objtype in objtypes:\n                         newname = name\n-                    else:\n-                        # \"fuzzy\" searching mode\n-                        searchname = '.' + name\n-                        matches = [(oname, self.objects[oname]) for oname in self.objects\n-                                   if oname.endswith(searchname) and\n-                                   self.objects[oname].objtype in objtypes]\n+                    elif searchmode == 1:\n+                        # specific searching mode: prioritize current module and parent modules\n+                        if modname and classname:\n+                            fullname = modname + '.' + classname + '.' + name\n+                            if fullname in self.objects and self.objects[fullname].objtype in objtypes:\n+                                newname = fullname\n+                        if not newname and modname and modname + '.' + name in self.objects and \\\n+                            self.objects[modname + '.' + name].objtype in objtypes:\n+                            newname = modname + '.' + name\n+                        elif not newname and name in self.objects and self.objects[name].objtype in objtypes:\n+                            newname = name\n         else:\n             # NOTE: searching for exact match, object type is not considered\n             if name in self.objects:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex 2ce105a..2b59ad4 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -763,9 +763,15 @@ class PythonDomain(Domain):\n                         newname = modname + '.' + name\n                     elif name in self.objects and self.objects[name].objtype in objtypes:\n                         newname = name\n-                    else:\n-                        searchname = '.' + name\n-                        matches = [(oname, self.objects[oname]) for oname in self.objects if oname.endswith(searchname) and self.objects[oname].objtype in objtypes]\n+                    elif searchmode == 1:\n+                        if modname and classname:\n+                            fullname = modname + '.' + classname + '.' + name\n+                            if fullname in self.objects and self.objects[fullname].objtype in objtypes:\n+                                newname = fullname\n+                        if not newname and modname and (modname + '.' + name in self.objects) and (self.objects[modname + '.' + name].objtype in objtypes):\n+                            newname = modname + '.' + name\n+                        elif not newname and name in self.objects and (self.objects[name].objtype in objtypes):\n+                            newname = name\n         elif name in self.objects:\n             newname = name\n         elif type == 'mod':\n", "normalized_occurrence": 1}
