{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11620", "model_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 37e3b61..0ab62aa 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -239,6 +239,8 @@ def _route_to_regex(route, is_endpoint=False):\n     return ''.join(parts), converters\n \n \n+from django.http import Http404\n+\n class RoutePattern(CheckURLMixin):\n     regex = LocaleRegexDescriptor('_route')\n \n@@ -258,7 +260,7 @@ class RoutePattern(CheckURLMixin):\n                 converter = self.converters[key]\n                 try:\n                     kwargs[key] = converter.to_python(value)\n-                except ValueError:\n+                except (ValueError, Http404):\n                     return None\n             return path[match.end():], (), kwargs\n         return None\n", "occurrence": 9, "normalized_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 24bb34e..49bf28f 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -140,6 +140,7 @@ def _route_to_regex(route, is_endpoint=False):\n     if is_endpoint:\n         parts.append('$')\n     return (''.join(parts), converters)\n+from django.http import Http404\n class RoutePattern(CheckURLMixin):\n     regex = LocaleRegexDescriptor('_route')\n     def __init__(self, route, name=None, is_endpoint=False):\n@@ -156,7 +157,7 @@ class RoutePattern(CheckURLMixin):\n                 converter = self.converters[key]\n                 try:\n                     kwargs[key] = converter.to_python(value)\n-                except ValueError:\n+                except (ValueError, Http404):\n                     return None\n             return (path[match.end():], (), kwargs)\n         return None\n", "normalized_occurrence": 9}
