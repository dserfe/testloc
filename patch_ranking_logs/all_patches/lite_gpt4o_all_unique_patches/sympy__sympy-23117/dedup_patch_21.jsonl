{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-23117", "model_patch": "diff --git a/sympy/tensor/array/ndim_array.py b/sympy/tensor/array/ndim_array.py\nindex 76cf2dd..ae93e93 100644\n--- a/sympy/tensor/array/ndim_array.py\n+++ b/sympy/tensor/array/ndim_array.py\n@@ -191,11 +191,14 @@ class NDimArray(Printable):\n     @classmethod\n     def _scan_iterable_shape(cls, iterable):\n         def f(pointer):\n-            if not isinstance(pointer, Iterable):\n-                return [pointer], ()\n+            if not isinstance(pointer, Iterable) or not pointer:\n+                return [pointer], () if not pointer else (1,)\n \n             result = []\n-            elems, shapes = zip(*[f(i) for i in pointer])\n+            scanned = [f(i) for i in pointer]\n+            if not scanned:\n+                return [], (0,)\n+            elems, shapes = zip(*scanned)\n             if len(set(shapes)) != 1:\n                 raise ValueError(\"could not determine shape unambiguously\")\n             for i in elems:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/tensor/array/ndim_array.py b/sympy/tensor/array/ndim_array.py\nindex b843491..d797dd0 100644\n--- a/sympy/tensor/array/ndim_array.py\n+++ b/sympy/tensor/array/ndim_array.py\n@@ -68,10 +68,13 @@ class NDimArray(Printable):\n     @classmethod\n     def _scan_iterable_shape(cls, iterable):\n         def f(pointer):\n-            if not isinstance(pointer, Iterable):\n-                return ([pointer], ())\n+            if not isinstance(pointer, Iterable) or not pointer:\n+                return ([pointer], () if not pointer else (1,))\n             result = []\n-            elems, shapes = zip(*[f(i) for i in pointer])\n+            scanned = [f(i) for i in pointer]\n+            if not scanned:\n+                return ([], (0,))\n+            elems, shapes = zip(*scanned)\n             if len(set(shapes)) != 1:\n                 raise ValueError('could not determine shape unambiguously')\n             for i in elems:\n", "normalized_occurrence": 1}
