{"model_name_or_path": "agentless", "instance_id": "django__django-15554", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex b69bf1f..b12cef8 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -804,14 +804,16 @@ class Query(BaseExpression):\n             return alias, False\n \n         # Create a new alias for this table.\n-        if alias_list:\n+        if alias_list and filtered_relation is None:\n+            alias = alias_list[0]\n+            self.alias_refcount[alias] += 1\n+            return alias, False\n+        elif alias_list and filtered_relation is not None:\n             alias = \"%s%d\" % (self.alias_prefix, len(self.alias_map) + 1)\n             alias_list.append(alias)\n         else:\n             # The first occurrence of a table uses the table name directly.\n-            alias = (\n-                filtered_relation.alias if filtered_relation is not None else table_name\n-            )\n+            alias = table_name if filtered_relation is None else \"%s%d\" % (table_name, len(self.alias_map) + 1)\n             self.table_map[table_name] = [alias]\n         self.alias_refcount[alias] = 1\n         return alias, True\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex b4ac641..9461edc 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -430,11 +430,15 @@ class Query(BaseExpression):\n             alias = alias_list[0]\n             self.alias_refcount[alias] += 1\n             return (alias, False)\n-        if alias_list:\n+        if alias_list and filtered_relation is None:\n+            alias = alias_list[0]\n+            self.alias_refcount[alias] += 1\n+            return (alias, False)\n+        elif alias_list and filtered_relation is not None:\n             alias = '%s%d' % (self.alias_prefix, len(self.alias_map) + 1)\n             alias_list.append(alias)\n         else:\n-            alias = filtered_relation.alias if filtered_relation is not None else table_name\n+            alias = table_name if filtered_relation is None else '%s%d' % (table_name, len(self.alias_map) + 1)\n             self.table_map[table_name] = [alias]\n         self.alias_refcount[alias] = 1\n         return (alias, True)\n", "normalized_occurrence": 1}
