{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-15011", "model_patch": "diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py\nindex 48d6783..8739a5e 100644\n--- a/sympy/utilities/lambdify.py\n+++ b/sympy/utilities/lambdify.py\n@@ -725,14 +725,21 @@ class _EvaluatorPrinter(object):\n                 argstrs.append(nested_argstrs)\n             elif isinstance(arg, DeferredVector):\n                 argstrs.append(str(arg))\n-            elif isinstance(arg, Symbol):\n+            elif isinstance(arg, (Symbol, MatrixSymbol)):\n                 argrep = self._argrepr(arg)\n \n                 if dummify or not self._is_safe_ident(argrep):\n                     dummy = Dummy()\n                     argstrs.append(self._argrepr(dummy))\n                     expr = self._subexpr(expr, {arg: dummy})\n-                else:\n+                elif isinstance(arg, MatrixSymbol):\n+                    argrep = self._argrepr(arg)\n+                    if dummify or not self._is_safe_ident(argrep):\n+                        dummy = Dummy()\n+                        argstrs.append(self._argrepr(dummy))\n+                        expr = self._subexpr(expr, {arg: dummy})\n+                    else:\n+                        argstrs.append(argrep)\n                     argstrs.append(argrep)\n             elif isinstance(arg, Function):\n                 dummy = Dummy()\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py\nindex 9997e01..d12bae0 100644\n--- a/sympy/utilities/lambdify.py\n+++ b/sympy/utilities/lambdify.py\n@@ -294,13 +294,20 @@ class _EvaluatorPrinter(object):\n                 argstrs.append(nested_argstrs)\n             elif isinstance(arg, DeferredVector):\n                 argstrs.append(str(arg))\n-            elif isinstance(arg, Symbol):\n+            elif isinstance(arg, (Symbol, MatrixSymbol)):\n                 argrep = self._argrepr(arg)\n                 if dummify or not self._is_safe_ident(argrep):\n                     dummy = Dummy()\n                     argstrs.append(self._argrepr(dummy))\n                     expr = self._subexpr(expr, {arg: dummy})\n-                else:\n+                elif isinstance(arg, MatrixSymbol):\n+                    argrep = self._argrepr(arg)\n+                    if dummify or not self._is_safe_ident(argrep):\n+                        dummy = Dummy()\n+                        argstrs.append(self._argrepr(dummy))\n+                        expr = self._subexpr(expr, {arg: dummy})\n+                    else:\n+                        argstrs.append(argrep)\n                     argstrs.append(argrep)\n             elif isinstance(arg, Function):\n                 dummy = Dummy()\n", "normalized_occurrence": 1}
