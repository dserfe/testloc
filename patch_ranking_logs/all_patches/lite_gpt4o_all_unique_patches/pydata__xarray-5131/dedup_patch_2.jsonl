{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-5131", "model_patch": "diff --git a/xarray/core/groupby.py b/xarray/core/groupby.py\nindex bf63803..6d1c333 100644\n--- a/xarray/core/groupby.py\n+++ b/xarray/core/groupby.py\n@@ -393,6 +393,14 @@ class GroupBy(SupportsArithmetic):\n         self._obj = obj\n         self._group = group\n         self._group_dim = group_dim\n+\n+    def __repr__(self):\n+        summary = f\"DatasetGroupBy, grouped over {self._group.name!r}\"\n+        if hasattr(self, '_bins'):\n+            summary += \" with bins\"\n+        summary += f\"\\n{len(self.groups)} groups with labels \"\n+        summary += \", \".join(repr(k) for k in self.groups)\n+        return summary\n         self._group_indices = group_indices\n         self._unique_coord = unique_coord\n         self._stacked_dim = stacked_dim\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/groupby.py b/xarray/core/groupby.py\nindex 61f6359..5ca3507 100644\n--- a/xarray/core/groupby.py\n+++ b/xarray/core/groupby.py\n@@ -165,6 +165,13 @@ class GroupBy(SupportsArithmetic):\n         self._obj = obj\n         self._group = group\n         self._group_dim = group_dim\n+    def __repr__(self):\n+        summary = f'DatasetGroupBy, grouped over {self._group.name!r}'\n+        if hasattr(self, '_bins'):\n+            summary += ' with bins'\n+        summary += f'\\n{len(self.groups)} groups with labels '\n+        summary += ', '.join((repr(k) for k in self.groups))\n+        return summary\n         self._group_indices = group_indices\n         self._unique_coord = unique_coord\n         self._stacked_dim = stacked_dim\n", "normalized_occurrence": 1}
