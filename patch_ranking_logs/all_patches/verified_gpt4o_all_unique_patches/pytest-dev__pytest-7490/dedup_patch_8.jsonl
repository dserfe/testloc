{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7490", "model_patch": "diff --git a/src/_pytest/nodes.py b/src/_pytest/nodes.py\nindex 1ea0522..ed03f81 100644\n--- a/src/_pytest/nodes.py\n+++ b/src/_pytest/nodes.py\n@@ -276,6 +276,8 @@ class Node(metaclass=NodeMeta):\n             marker_ = getattr(MARK_GEN, marker)\n         else:\n             raise ValueError(\"is not a string or pytest.mark.* Marker\")\n+        if marker_.name == \"xfail\":\n+            self._update_xfail_marker(marker_.mark)\n         self.keywords[marker_.name] = marker_\n         if append:\n             self.own_markers.append(marker_.mark)\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/nodes.py b/src/_pytest/nodes.py\nindex 8a79019..b6a1b83 100644\n--- a/src/_pytest/nodes.py\n+++ b/src/_pytest/nodes.py\n@@ -208,6 +208,8 @@ class Node(metaclass=NodeMeta):\n             marker_ = getattr(MARK_GEN, marker)\n         else:\n             raise ValueError('is not a string or pytest.mark.* Marker')\n+        if marker_.name == 'xfail':\n+            self._update_xfail_marker(marker_.mark)\n         self.keywords[marker_.name] = marker_\n         if append:\n             self.own_markers.append(marker_.mark)\n", "normalized_occurrence": 1}
