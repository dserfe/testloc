{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-9359", "model_patch": "diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py\nindex 9657da0..9442332 100644\n--- a/src/_pytest/assertion/rewrite.py\n+++ b/src/_pytest/assertion/rewrite.py\n@@ -934,6 +934,10 @@ class AssertionRewriter(ast.NodeVisitor):\n             # Create failure message.\n             body = self.expl_stmts\n             self.statements.append(ast.If(negation, body, []))\n+            \n+            # Clear format context to avoid including code after the assertion\n+            self.push_format_context()\n+            \n             if assert_.msg:\n                 assertmsg = self.helper(\"_format_assertmsg\", assert_.msg)\n                 explanation = \"\\n>assert \" + explanation\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py\nindex 9f4da3b..8e2da85 100644\n--- a/src/_pytest/assertion/rewrite.py\n+++ b/src/_pytest/assertion/rewrite.py\n@@ -495,6 +495,7 @@ class AssertionRewriter(ast.NodeVisitor):\n         else:\n             body = self.expl_stmts\n             self.statements.append(ast.If(negation, body, []))\n+            self.push_format_context()\n             if assert_.msg:\n                 assertmsg = self.helper('_format_assertmsg', assert_.msg)\n                 explanation = '\\n>assert ' + explanation\n", "normalized_occurrence": 1}
