{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-7889", "model_patch": "diff --git a/sphinx/ext/autodoc/mock.py b/sphinx/ext/autodoc/mock.py\nindex 6801938..0c09aba 100644\n--- a/sphinx/ext/autodoc/mock.py\n+++ b/sphinx/ext/autodoc/mock.py\n@@ -68,12 +68,13 @@ class _MockObject:\n         return self.__display_name__\n \n \n-def _make_subclass(name: str, module: str, superclass: Any = _MockObject,\n+def _make_subclass(name: Any, module: str, superclass: Any = _MockObject,\n                    attributes: Any = None) -> Any:\n-    attrs = {'__module__': module, '__display_name__': module + '.' + name}\n+    str_name = str(name)  # Convert name to string to handle TypeVar\n+    attrs = {'__module__': module, '__display_name__': module + '.' + str_name}\n     attrs.update(attributes or {})\n \n-    return type(name, (superclass,), attrs)\n+    return type(str_name, (superclass,), attrs)\n \n \n class _MockModule(ModuleType):\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/mock.py b/sphinx/ext/autodoc/mock.py\nindex 32d941b..6a8bf00 100644\n--- a/sphinx/ext/autodoc/mock.py\n+++ b/sphinx/ext/autodoc/mock.py\n@@ -36,10 +36,11 @@ class _MockObject:\n         return self\n     def __repr__(self) -> str:\n         return self.__display_name__\n-def _make_subclass(name: str, module: str, superclass: Any=_MockObject, attributes: Any=None) -> Any:\n-    attrs = {'__module__': module, '__display_name__': module + '.' + name}\n+def _make_subclass(name: Any, module: str, superclass: Any=_MockObject, attributes: Any=None) -> Any:\n+    str_name = str(name)\n+    attrs = {'__module__': module, '__display_name__': module + '.' + str_name}\n     attrs.update(attributes or {})\n-    return type(name, (superclass,), attrs)\n+    return type(str_name, (superclass,), attrs)\n class _MockModule(ModuleType):\n     __file__ = os.devnull\n     __sphinx_mock__ = True\n", "normalized_occurrence": 1}
