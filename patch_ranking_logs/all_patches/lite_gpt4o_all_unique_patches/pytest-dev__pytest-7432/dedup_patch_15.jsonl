{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7432", "model_patch": "diff --git a/src/_pytest/skipping.py b/src/_pytest/skipping.py\nindex 1e94c70..867ba19 100644\n--- a/src/_pytest/skipping.py\n+++ b/src/_pytest/skipping.py\n@@ -291,10 +291,14 @@ def pytest_runtest_makereport(item: Item, call: CallInfo[None]):\n             else:\n                 rep.outcome = \"passed\"\n                 rep.wasxfail = xfailed.reason\n-    elif (\n+    if (\n         item._store.get(skipped_by_mark_key, True)\n         and rep.skipped\n         and type(rep.longrepr) is tuple\n+    ) or (\n+        item.config.option.runxfail\n+        and rep.skipped\n+        and isinstance(rep.longrepr, tuple)\n     ):\n         # skipped by mark.skipif; change the location of the failure\n         # to point to the item definition, otherwise it will display\n@@ -311,4 +315,4 @@ def pytest_report_teststatus(report: BaseReport) -> Optional[Tuple[str, str, str\n             return \"xfailed\", \"x\", \"XFAIL\"\n         elif report.passed:\n             return \"xpassed\", \"X\", \"XPASS\"\n-    return None\n+    return None\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/skipping.py b/src/_pytest/skipping.py\nindex 5f70c26..946df66 100644\n--- a/src/_pytest/skipping.py\n+++ b/src/_pytest/skipping.py\n@@ -169,7 +169,7 @@ def pytest_runtest_makereport(item: Item, call: CallInfo[None]):\n             else:\n                 rep.outcome = 'passed'\n                 rep.wasxfail = xfailed.reason\n-    elif item._store.get(skipped_by_mark_key, True) and rep.skipped and (type(rep.longrepr) is tuple):\n+    if item._store.get(skipped_by_mark_key, True) and rep.skipped and (type(rep.longrepr) is tuple) or (item.config.option.runxfail and rep.skipped and isinstance(rep.longrepr, tuple)):\n         _, _, reason = rep.longrepr\n         filename, line = item.reportinfo()[:2]\n         assert line is not None\n", "normalized_occurrence": 1}
