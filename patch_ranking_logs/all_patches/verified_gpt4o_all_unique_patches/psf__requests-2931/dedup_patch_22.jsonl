{"model_name_or_path": "agentless", "instance_id": "psf__requests-2931", "model_patch": "diff --git a/requests/utils.py b/requests/utils.py\nindex 7aa8a2f..0273db5 100644\n--- a/requests/utils.py\n+++ b/requests/utils.py\n@@ -683,7 +683,7 @@ def get_auth_from_url(url):\n     return auth\n \n \n-def to_native_string(string, encoding='ascii'):\n+def to_native_string(string, encoding='utf-8'):\n     \"\"\"\n     Given a string object, regardless of type, returns a representation of that\n     string in the native string type, encoding and decoding where necessary.\n", "occurrence": 2, "normalized_patch": "diff --git a/requests/utils.py b/requests/utils.py\nindex 69197df..7d9f1b3 100644\n--- a/requests/utils.py\n+++ b/requests/utils.py\n@@ -315,7 +315,7 @@ def get_auth_from_url(url):\n     except (AttributeError, TypeError):\n         auth = ('', '')\n     return auth\n-def to_native_string(string, encoding='ascii'):\n+def to_native_string(string, encoding='utf-8'):\n     out = None\n     if isinstance(string, builtin_str):\n         out = string\n", "normalized_occurrence": 2}
