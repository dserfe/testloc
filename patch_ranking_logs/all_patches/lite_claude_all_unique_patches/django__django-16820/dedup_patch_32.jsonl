{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16820", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex cffcd20..872cc67 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -647,6 +647,22 @@ class AlterIndexTogether(AlterTogetherOptionOperation):\n     def __init__(self, name, index_together):\n         super().__init__(name, index_together)\n \n+    def reduce(self, operation, app_label):\n+        if isinstance(operation, AddIndex):\n+            # If we're followed by an AddIndex operation that covers the same fields,\n+            # we can convert this operation into a set of AddIndex operations\n+            if self.index_together:\n+                indexes = []\n+                for field_names in self.index_together:\n+                    if tuple(field_names) == tuple(operation.index.fields):\n+                        return []\n+                    indexes.append(AddIndex(\n+                        model_name=self.name,\n+                        index=models.Index(fields=list(field_names), name='_'.join(field_names + ('idx',)))\n+                    ))\n+                return indexes\n+        return super().reduce(operation, app_label)\n+\n \n class AlterOrderWithRespectTo(ModelOptionOperation):\n     \"\"\"Represent a change with the order_with_respect_to option.\"\"\"\n", "occurrence": 1, "normalized_patch": "--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n+    def reduce(self, operation, app_label):\n+        if isinstance(operation, AddIndex):\n+            if self.index_together:\n+                indexes = []\n+                for field_names in self.index_together:\n+                    if tuple(field_names) == tuple(operation.index.fields):\n+                        return []\n+                    indexes.append(AddIndex(model_name=self.name, index=models.Index(fields=list(field_names), name='_'.join(field_names + ('idx',)))))\n+                return indexes\n+        return super().reduce(operation, app_label)", "normalized_occurrence": 1}
