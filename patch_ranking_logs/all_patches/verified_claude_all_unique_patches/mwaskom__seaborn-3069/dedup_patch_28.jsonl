{"model_name_or_path": "agentless_claude", "instance_id": "mwaskom__seaborn-3069", "model_patch": "diff --git a/seaborn/_core/scales.py b/seaborn/_core/scales.py\nindex 1e10d58..b22d131 100644\n--- a/seaborn/_core/scales.py\n+++ b/seaborn/_core/scales.py\n@@ -177,23 +177,26 @@ class Nominal(Scale):\n             name = None  # To work around mpl<3.4 compat issues\n \n             def set_default_locators_and_formatters(self, axis):\n-                ...\n-                # axis.set_major_locator(major_locator)\n-                # if minor_locator is not None:\n-                #     axis.set_minor_locator(minor_locator)\n-                # axis.set_major_formatter(major_formatter)\n+                # Set locators and formatters\n+                axis.set_major_locator(mpl.category.StrCategoryLocator({}))\n+                axis.set_major_formatter(mpl.category.StrCategoryFormatter({}))\n+                \n+                # Suppress grid by default for nominal scales\n+                axis.grid(False)\n \n         mpl_scale = CatScale(data.name)\n         if axis is None:\n             axis = PseudoAxis(mpl_scale)\n \n-            # TODO Currently just used in non-Coordinate contexts, but should\n-            # we use this to (A) set the padding we want for categorial plots\n-            # and (B) allow the values parameter for a Coordinate to set xlim/ylim\n-            axis.set_view_interval(0, len(units_seed) - 1)\n+            # Set view interval with +/- 0.5 padding for categorical-style spacing\n+            axis.set_view_interval(-0.5, len(units_seed) - 0.5)\n \n         new._matplotlib_scale = mpl_scale\n \n+        # Invert y-axis for nominal scales when on y-axis\n+        if isinstance(axis, mpl.axis.YAxis):\n+            axis.set_inverted(True)\n+\n         # TODO array cast necessary to handle float/int mixture, which we need\n         # to solve in a more systematic way probably\n         # (i.e. if we have [1, 2.5], do we want [1.0, 2.5]? Unclear)\n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/_core/scales.py b/seaborn/_core/scales.py\nindex 58a2cdb..fd00a29 100644\n--- a/seaborn/_core/scales.py\n+++ b/seaborn/_core/scales.py\n@@ -90,12 +90,16 @@ class Nominal(Scale):\n         class CatScale(mpl.scale.LinearScale):\n             name = None\n             def set_default_locators_and_formatters(self, axis):\n-                ...\n+                axis.set_major_locator(mpl.category.StrCategoryLocator({}))\n+                axis.set_major_formatter(mpl.category.StrCategoryFormatter({}))\n+                axis.grid(False)\n         mpl_scale = CatScale(data.name)\n         if axis is None:\n             axis = PseudoAxis(mpl_scale)\n-            axis.set_view_interval(0, len(units_seed) - 1)\n+            axis.set_view_interval(-0.5, len(units_seed) - 0.5)\n         new._matplotlib_scale = mpl_scale\n+        if isinstance(axis, mpl.axis.YAxis):\n+            axis.set_inverted(True)\n         axis.update_units(stringify(np.array(units_seed)))\n         def convert_units(x):\n             keep = np.array([x_ in units_seed for x_ in x], bool)\n", "normalized_occurrence": 1}
