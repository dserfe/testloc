{"model_name_or_path": "agentless", "instance_id": "django__django-15347", "model_patch": "diff --git a/django/contrib/messages/storage/base.py b/django/contrib/messages/storage/base.py\nindex b6f1796..974e388 100644\n--- a/django/contrib/messages/storage/base.py\n+++ b/django/contrib/messages/storage/base.py\n@@ -22,7 +22,7 @@ class Message:\n         and ``extra_tags`` to str in case they are lazy translations.\n         \"\"\"\n         self.message = str(self.message)\n-        self.extra_tags = str(self.extra_tags) if self.extra_tags is not None else None\n+        self.extra_tags = str(self.extra_tags) if self.extra_tags is not None else \"\"\n \n     def __eq__(self, other):\n         if not isinstance(other, Message):\n", "occurrence": 5, "normalized_patch": "diff --git a/django/contrib/messages/storage/base.py b/django/contrib/messages/storage/base.py\nindex 950c0cc..d802bcc 100644\n--- a/django/contrib/messages/storage/base.py\n+++ b/django/contrib/messages/storage/base.py\n@@ -8,7 +8,7 @@ class Message:\n         self.extra_tags = extra_tags\n     def _prepare(self):\n         self.message = str(self.message)\n-        self.extra_tags = str(self.extra_tags) if self.extra_tags is not None else None\n+        self.extra_tags = str(self.extra_tags) if self.extra_tags is not None else ''\n     def __eq__(self, other):\n         if not isinstance(other, Message):\n             return NotImplemented\n", "normalized_occurrence": 9}
