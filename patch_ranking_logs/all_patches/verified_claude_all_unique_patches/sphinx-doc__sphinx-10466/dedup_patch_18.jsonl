{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-10466", "model_patch": "diff --git a/sphinx/builders/gettext.py b/sphinx/builders/gettext.py\nindex c138802..c11a782 100644\n--- a/sphinx/builders/gettext.py\n+++ b/sphinx/builders/gettext.py\n@@ -53,7 +53,11 @@ class Catalog:\n         if msg not in self.metadata:  # faster lookup in hash\n             self.messages.append(msg)\n             self.metadata[msg] = []\n-        self.metadata[msg].append((origin.source, origin.line, origin.uid))  # type: ignore\n+        \n+        # Check if this exact location is already recorded\n+        location_entry = (origin.source, origin.line, origin.uid)  # type: ignore\n+        if location_entry not in self.metadata[msg]:\n+            self.metadata[msg].append(location_entry)\n \n     def __iter__(self) -> Generator[Message, None, None]:\n         for message in self.messages:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/builders/gettext.py b/sphinx/builders/gettext.py\nindex 906ebf1..92b6399 100644\n--- a/sphinx/builders/gettext.py\n+++ b/sphinx/builders/gettext.py\n@@ -36,7 +36,9 @@ class Catalog:\n         if msg not in self.metadata:\n             self.messages.append(msg)\n             self.metadata[msg] = []\n-        self.metadata[msg].append((origin.source, origin.line, origin.uid))\n+        location_entry = (origin.source, origin.line, origin.uid)\n+        if location_entry not in self.metadata[msg]:\n+            self.metadata[msg].append(location_entry)\n     def __iter__(self) -> Generator[Message, None, None]:\n         for message in self.messages:\n             positions = [(source, line) for source, line, uuid in self.metadata[message]]\n", "normalized_occurrence": 1}
