{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-22871", "model_patch": "diff --git a/lib/matplotlib/dates.py b/lib/matplotlib/dates.py\nindex cc65fc1..6cfe38d 100644\n--- a/lib/matplotlib/dates.py\n+++ b/lib/matplotlib/dates.py\n@@ -792,6 +792,9 @@ class ConciseDateFormatter(ticker.Formatter):\n         offsetfmts = self.offset_formats\n         show_offset = self.show_offset\n \n+        # Determine if the range spans less than a year\n+        span_less_than_year = (tickdatetime[-1] - tickdatetime[0]).days < 365\n+\n         # determine the level we will label at:\n         # mostly 0: years,  1: months,  2: days,\n         # 3: hours, 4: minutes, 5: seconds, 6: microseconds\n@@ -799,6 +802,10 @@ class ConciseDateFormatter(ticker.Formatter):\n             if len(np.unique(tickdate[:, level])) > 1:\n                 if level < 2:\n                     show_offset = False\n+                if span_less_than_year and level == 1:\n+                    show_offset = True\n+                else:\n+                    show_offset = False\n                 break\n             elif level == 0:\n                 # all tickdate are the same, so only micros might be different\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/dates.py b/lib/matplotlib/dates.py\nindex 6ad34f7..24bcf44 100644\n--- a/lib/matplotlib/dates.py\n+++ b/lib/matplotlib/dates.py\n@@ -195,10 +195,15 @@ class ConciseDateFormatter(ticker.Formatter):\n         zerofmts = self.zero_formats\n         offsetfmts = self.offset_formats\n         show_offset = self.show_offset\n+        span_less_than_year = (tickdatetime[-1] - tickdatetime[0]).days < 365\n         for level in range(5, -1, -1):\n             if len(np.unique(tickdate[:, level])) > 1:\n                 if level < 2:\n                     show_offset = False\n+                if span_less_than_year and level == 1:\n+                    show_offset = True\n+                else:\n+                    show_offset = False\n                 break\n             elif level == 0:\n                 level = 5\n", "normalized_occurrence": 1}
