{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13031", "model_patch": "diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py\nindex 79b3d5e..b7b94b7 100644\n--- a/sympy/matrices/common.py\n+++ b/sympy/matrices/common.py\n@@ -240,8 +240,8 @@ class MatrixShaping(MatrixRequired):\n         row_join\n         \"\"\"\n         # A null matrix can always be stacked (see  #10770)\n-        if self.rows == 0 and self.cols != other.cols:\n-            return self._new(0, other.cols, []).col_join(other)\n+        if self.rows == 0:\n+            return self._new(0, self.cols + other.cols, [])\n \n         if self.cols != other.cols:\n             raise ShapeError(\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py\nindex 1e4e3f2..345141d 100644\n--- a/sympy/matrices/common.py\n+++ b/sympy/matrices/common.py\n@@ -128,8 +128,8 @@ class MatrixShaping(MatrixRequired):\n             raise ShapeError('self and other must have the same number of rows.')\n         return self._eval_col_insert(pos, other)\n     def col_join(self, other):\n-        if self.rows == 0 and self.cols != other.cols:\n-            return self._new(0, other.cols, []).col_join(other)\n+        if self.rows == 0:\n+            return self._new(0, self.cols + other.cols, [])\n         if self.cols != other.cols:\n             raise ShapeError('`self` and `other` must have the same number of columns.')\n         return self._eval_col_join(other)\n", "normalized_occurrence": 1}
