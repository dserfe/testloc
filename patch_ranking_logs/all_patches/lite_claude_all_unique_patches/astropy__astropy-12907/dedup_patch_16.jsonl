{"model_name_or_path": "agentless_claude", "instance_id": "astropy__astropy-12907", "model_patch": "diff --git a/astropy/modeling/separable.py b/astropy/modeling/separable.py\nindex d6e9246..78e8019 100644\n--- a/astropy/modeling/separable.py\n+++ b/astropy/modeling/separable.py\n@@ -301,6 +301,25 @@ def _separable(transform):\n         An array of shape (transform.n_outputs,) of boolean type\n         Each element represents the separablity of the corresponding output.\n     \"\"\"\n+    # If model has its own separability matrix calculation, use it\n+    if (transform_matrix := transform._calculate_separability_matrix()) is not NotImplemented:\n+        return transform_matrix\n+    elif isinstance(transform, CompoundModel):\n+        # Get separability matrices for left and right components\n+        sepleft = _separable(transform.left)\n+        sepright = _separable(transform.right)\n+        \n+        # For nested compound models, need to ensure matrices have correct shape\n+        if transform.op == '&':\n+            # For concatenation, properly size the matrices based on outputs\n+            if sepleft.shape[0] != transform.left.n_outputs:\n+                sepleft = _coord_matrix(transform.left, 'left', transform.left.n_outputs)\n+            if sepright.shape[0] != transform.right.n_outputs:\n+                sepright = _coord_matrix(transform.right, 'right', transform.right.n_outputs)\n+                \n+        return _operators[transform.op](sepleft, sepright)\n+    elif isinstance(transform, Model):\n+        return _coord_matrix(transform, 'left', transform.n_outputs)\n     if (transform_matrix := transform._calculate_separability_matrix()) is not NotImplemented:\n         return transform_matrix\n     elif isinstance(transform, CompoundModel):\n@@ -314,4 +333,4 @@ def _separable(transform):\n # Maps modeling operators to a function computing and represents the\n # relationship of axes as an array of 0-es and 1-s\n _operators = {'&': _cstack, '|': _cdot, '+': _arith_oper, '-': _arith_oper,\n-              '*': _arith_oper, '/': _arith_oper, '**': _arith_oper}\n+              '*': _arith_oper, '/': _arith_oper, '**': _arith_oper}\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/modeling/separable.py b/astropy/modeling/separable.py\nindex 198a838..9658750 100644\n--- a/astropy/modeling/separable.py\n+++ b/astropy/modeling/separable.py\n@@ -96,6 +96,19 @@ def _cdot(left, right):\n         raise ModelDefinitionError('Models cannot be combined with the \"|\" operator; left coord_matrix is {}, right coord_matrix is {}'.format(cright, cleft))\n     return result\n def _separable(transform):\n+    if (transform_matrix := transform._calculate_separability_matrix()) is not NotImplemented:\n+        return transform_matrix\n+    elif isinstance(transform, CompoundModel):\n+        sepleft = _separable(transform.left)\n+        sepright = _separable(transform.right)\n+        if transform.op == '&':\n+            if sepleft.shape[0] != transform.left.n_outputs:\n+                sepleft = _coord_matrix(transform.left, 'left', transform.left.n_outputs)\n+            if sepright.shape[0] != transform.right.n_outputs:\n+                sepright = _coord_matrix(transform.right, 'right', transform.right.n_outputs)\n+        return _operators[transform.op](sepleft, sepright)\n+    elif isinstance(transform, Model):\n+        return _coord_matrix(transform, 'left', transform.n_outputs)\n     if (transform_matrix := transform._calculate_separability_matrix()) is not NotImplemented:\n         return transform_matrix\n     elif isinstance(transform, CompoundModel):\n", "normalized_occurrence": 1}
