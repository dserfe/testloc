{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-15346", "model_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex 9a2774b..d16ecb0 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -490,7 +490,7 @@ def trigsimp(expr, **opts):\n \n     def groebnersimp(ex, **opts):\n         def traverse(e):\n-            if e.is_Atom:\n+            if e.is_Atom or e.is_Rational:\n                 return e\n             args = [traverse(x) for x in e.args]\n             if e.is_Function or e.is_Pow:\n@@ -510,6 +510,13 @@ def trigsimp(expr, **opts):\n         'old': lambda x: trigsimp_old(x, **opts),\n                    }[method]\n \n+    # Handle rational arguments specially\n+    if all(isinstance(a, Rational) for a in expr.free_symbols):\n+        result = trigsimpfunc(expr)\n+        if result == expr and method != 'combined':\n+            return trigsimp(expr, method='combined', **opts)\n+        return result\n+\n     return trigsimpfunc(expr)\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex 79862a9..5133c4c 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -160,7 +160,7 @@ def trigsimp(expr, **opts):\n         method = 'old'\n     def groebnersimp(ex, **opts):\n         def traverse(e):\n-            if e.is_Atom:\n+            if e.is_Atom or e.is_Rational:\n                 return e\n             args = [traverse(x) for x in e.args]\n             if e.is_Function or e.is_Pow:\n@@ -171,6 +171,11 @@ def trigsimp(expr, **opts):\n             return new\n         return trigsimp_groebner(new, **opts)\n     trigsimpfunc = {'fu': lambda x: fu(x, **opts), 'matching': lambda x: futrig(x), 'groebner': lambda x: groebnersimp(x, **opts), 'combined': lambda x: futrig(groebnersimp(x, polynomial=True, hints=[2, tan])), 'old': lambda x: trigsimp_old(x, **opts)}[method]\n+    if all((isinstance(a, Rational) for a in expr.free_symbols)):\n+        result = trigsimpfunc(expr)\n+        if result == expr and method != 'combined':\n+            return trigsimp(expr, method='combined', **opts)\n+        return result\n     return trigsimpfunc(expr)\n def exptrigsimp(expr):\n     from sympy.simplify.fu import hyper_as_trig, TR2i\n", "normalized_occurrence": 1}
