{"model_name_or_path": "agentless", "instance_id": "django__django-16136", "model_patch": "diff --git a/django/core/handlers/base.py b/django/core/handlers/base.py\nindex 940d12d..ecfc610 100644\n--- a/django/core/handlers/base.py\n+++ b/django/core/handlers/base.py\n@@ -200,7 +200,8 @@ class BaseHandler:\n                 if response is None:\n                     raise\n \n-        # Complain if the view returned None (a common error).\n+        if response is None and callback == HttpResponseNotAllowed:\n+            response = HttpResponseNotAllowed(permitted_methods=['POST'])\n         self.check_response(response, callback)\n \n         # If the response supports deferred rendering, apply template\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/handlers/base.py b/django/core/handlers/base.py\nindex 5df17b3..b66d756 100644\n--- a/django/core/handlers/base.py\n+++ b/django/core/handlers/base.py\n@@ -103,6 +103,8 @@ class BaseHandler:\n                 response = self.process_exception_by_middleware(e, request)\n                 if response is None:\n                     raise\n+        if response is None and callback == HttpResponseNotAllowed:\n+            response = HttpResponseNotAllowed(permitted_methods=['POST'])\n         self.check_response(response, callback)\n         if hasattr(response, 'render') and callable(response.render):\n             for middleware_method in self._template_response_middleware:\n", "normalized_occurrence": 1}
