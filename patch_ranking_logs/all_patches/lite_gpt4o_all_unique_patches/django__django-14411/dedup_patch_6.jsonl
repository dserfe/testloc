{"model_name_or_path": "agentless", "instance_id": "django__django-14411", "model_patch": "diff --git a/django/contrib/admin/utils.py b/django/contrib/admin/utils.py\nindex ab619c1..2a58d1c 100644\n--- a/django/contrib/admin/utils.py\n+++ b/django/contrib/admin/utils.py\n@@ -318,6 +318,8 @@ def label_for_field(name, model, model_admin=None, return_attr=False, form=None)\n     attr = None\n     try:\n         field = _get_non_gfk_field(model._meta, name)\n+        if hasattr(field, 'widget') and isinstance(field.widget, ReadOnlyPasswordHashWidget):\n+            return (None, None) if return_attr else None\n         try:\n             label = field.verbose_name\n         except AttributeError:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/utils.py b/django/contrib/admin/utils.py\nindex 2428fd0..3504b44 100644\n--- a/django/contrib/admin/utils.py\n+++ b/django/contrib/admin/utils.py\n@@ -182,6 +182,8 @@ def label_for_field(name, model, model_admin=None, return_attr=False, form=None)\n     attr = None\n     try:\n         field = _get_non_gfk_field(model._meta, name)\n+        if hasattr(field, 'widget') and isinstance(field.widget, ReadOnlyPasswordHashWidget):\n+            return (None, None) if return_attr else None\n         try:\n             label = field.verbose_name\n         except AttributeError:\n", "normalized_occurrence": 1}
