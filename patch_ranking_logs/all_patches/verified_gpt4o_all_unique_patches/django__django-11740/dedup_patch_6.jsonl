{"model_name_or_path": "agentless", "instance_id": "django__django-11740", "model_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 816737e..39bbc0c 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -190,6 +190,16 @@ class MigrationAutodetector:\n         self.generate_added_constraints()\n         self.generate_altered_db_table()\n         self.generate_altered_order_with_respect_to()\n+        \n+        # Add missing dependencies for ForeignKey fields if they are not present\n+        for app_label, model_name in sorted(self.kept_model_keys):\n+            old_model_state = self.from_state.models[app_label, model_name]\n+            new_model_state = self.to_state.models[app_label, model_name]\n+            for field_name, field in new_model_state.fields.items():\n+                if isinstance(field, models.ForeignKey):\n+                    dependencies = self._get_dependencies_for_foreign_key(field)\n+                    for dep in dependencies:\n+                        self.add_dependency(app_label, model_name, dep)\n \n         self._sort_migrations()\n         self._build_migration_list(graph)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 9fda64b..b0233b8 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -104,6 +104,14 @@ class MigrationAutodetector:\n         self.generate_added_constraints()\n         self.generate_altered_db_table()\n         self.generate_altered_order_with_respect_to()\n+        for app_label, model_name in sorted(self.kept_model_keys):\n+            old_model_state = self.from_state.models[app_label, model_name]\n+            new_model_state = self.to_state.models[app_label, model_name]\n+            for field_name, field in new_model_state.fields.items():\n+                if isinstance(field, models.ForeignKey):\n+                    dependencies = self._get_dependencies_for_foreign_key(field)\n+                    for dep in dependencies:\n+                        self.add_dependency(app_label, model_name, dep)\n         self._sort_migrations()\n         self._build_migration_list(graph)\n         self._optimize_migrations()\n", "normalized_occurrence": 1}
