{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-18698", "model_patch": "diff --git a/sympy/polys/sqfreetools.py b/sympy/polys/sqfreetools.py\nindex fbdbcb2..6cc59ef 100644\n--- a/sympy/polys/sqfreetools.py\n+++ b/sympy/polys/sqfreetools.py\n@@ -327,8 +327,13 @@ def dup_sqf_list(f, K, all=False):\n \n         g, p, q = dup_inner_gcd(p, h, K)\n \n-        if all or dup_degree(g) > 0:\n-            result.append((g, i))\n+        if dup_degree(p) > 0:\n+            result.append((p, i))\n+\n+        if not q:\n+            break\n+\n+        g, p, q = dup_inner_gcd(p, q, K)\n \n         i += 1\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/sqfreetools.py b/sympy/polys/sqfreetools.py\nindex 09fb2b6..64aef7b 100644\n--- a/sympy/polys/sqfreetools.py\n+++ b/sympy/polys/sqfreetools.py\n@@ -114,8 +114,11 @@ def dup_sqf_list(f, K, all=False):\n             result.append((p, i))\n             break\n         g, p, q = dup_inner_gcd(p, h, K)\n-        if all or dup_degree(g) > 0:\n-            result.append((g, i))\n+        if dup_degree(p) > 0:\n+            result.append((p, i))\n+        if not q:\n+            break\n+        g, p, q = dup_inner_gcd(p, q, K)\n         i += 1\n     return (coeff, result)\n def dup_sqf_list_include(f, K, all=False):\n", "normalized_occurrence": 1}
