{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-7440", "model_patch": "diff --git a/sphinx/domains/std.py b/sphinx/domains/std.py\nindex c7bf7da..3e1c798 100644\n--- a/sphinx/domains/std.py\n+++ b/sphinx/domains/std.py\n@@ -654,7 +654,7 @@ class StandardDomain(Domain):\n         \"\"\"\n         if (objtype, name) in self.objects:\n             docname = self.objects[objtype, name][0]\n-            logger.warning(__('duplicate %s description of %s, other instance in %s'),\n+            logger.warning(__('duplicate %s description of %s (case-insensitive), other instance in %s'),\n                            objtype, name, docname, location=location)\n         self.objects[objtype, name] = (self.env.docname, labelid)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/domains/std.py b/sphinx/domains/std.py\nindex 985476e..1878d23 100644\n--- a/sphinx/domains/std.py\n+++ b/sphinx/domains/std.py\n@@ -368,7 +368,7 @@ class StandardDomain(Domain):\n     def note_object(self, objtype: str, name: str, labelid: str, location: Any=None) -> None:\n         if (objtype, name) in self.objects:\n             docname = self.objects[objtype, name][0]\n-            logger.warning(__('duplicate %s description of %s, other instance in %s'), objtype, name, docname, location=location)\n+            logger.warning(__('duplicate %s description of %s (case-insensitive), other instance in %s'), objtype, name, docname, location=location)\n         self.objects[objtype, name] = (self.env.docname, labelid)\n     def add_object(self, objtype: str, name: str, docname: str, labelid: str) -> None:\n         warnings.warn('StandardDomain.add_object() is deprecated.', RemovedInSphinx50Warning)\n", "normalized_occurrence": 1}
