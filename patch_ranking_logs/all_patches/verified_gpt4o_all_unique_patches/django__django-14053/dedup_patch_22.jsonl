{"model_name_or_path": "agentless", "instance_id": "django__django-14053", "model_patch": "diff --git a/django/contrib/staticfiles/storage.py b/django/contrib/staticfiles/storage.py\nindex 04c866a..d1690cd 100644\n--- a/django/contrib/staticfiles/storage.py\n+++ b/django/contrib/staticfiles/storage.py\n@@ -235,8 +235,11 @@ class HashedFilesMixin:\n \n         for i in range(self.max_post_process_passes):\n             substitutions = False\n+            processed_files = set()\n             for name, hashed_name, processed, subst in self._post_process(paths, adjustable_paths, hashed_files):\n-                yield name, hashed_name, processed\n+                if name not in processed_files:\n+                    yield name, hashed_name, processed\n+                    processed_files.add(name)\n                 substitutions = substitutions or subst\n \n             if not substitutions:\n", "occurrence": 5, "normalized_patch": "diff --git a/django/contrib/staticfiles/storage.py b/django/contrib/staticfiles/storage.py\nindex 08bad89..145918f 100644\n--- a/django/contrib/staticfiles/storage.py\n+++ b/django/contrib/staticfiles/storage.py\n@@ -131,8 +131,11 @@ class HashedFilesMixin:\n         paths = {path: paths[path] for path in adjustable_paths}\n         for i in range(self.max_post_process_passes):\n             substitutions = False\n+            processed_files = set()\n             for name, hashed_name, processed, subst in self._post_process(paths, adjustable_paths, hashed_files):\n-                yield (name, hashed_name, processed)\n+                if name not in processed_files:\n+                    yield (name, hashed_name, processed)\n+                    processed_files.add(name)\n                 substitutions = substitutions or subst\n             if not substitutions:\n                 break\n", "normalized_occurrence": 5}
