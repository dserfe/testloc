{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-20590", "model_patch": "diff --git a/sympy/core/symbol.py b/sympy/core/symbol.py\nindex 3b46a26..636f415 100644\n--- a/sympy/core/symbol.py\n+++ b/sympy/core/symbol.py\n@@ -251,6 +251,8 @@ class Symbol(AtomicExpr, Boolean):\n         base.update(assumptions)\n         return base\n \n+    __slots__ = ('__weakref__',)  # Allow weak reference for Symbol instances\n+    \n     def __new__(cls, name, **assumptions):\n         \"\"\"Symbols are identified by name and assumptions::\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/symbol.py b/sympy/core/symbol.py\nindex 2506145..af23a9c 100644\n--- a/sympy/core/symbol.py\n+++ b/sympy/core/symbol.py\n@@ -93,6 +93,7 @@ class Symbol(AtomicExpr, Boolean):\n                 raise ValueError(filldedent('\\n                    non-matching assumptions for %s: existing value\\n                    is %s and new value is %s' % (k, base[k], assumptions[k])))\n         base.update(assumptions)\n         return base\n+    __slots__ = ('__weakref__',)\n     def __new__(cls, name, **assumptions):\n         cls._sanitize(assumptions, cls)\n         return Symbol.__xnew_cached_(cls, name, **assumptions)\n", "normalized_occurrence": 1}
