{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8593", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex c412096..937cfd5 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -766,7 +766,7 @@ class Documenter:\n                     # keep documented attributes\n                     keep = True\n                 isattr = True\n-            elif want_all and isprivate:\n+            elif want_all and isprivate and 'public' not in metadata:\n                 if has_doc or self.options.undoc_members:\n                     if self.options.private_members is None:\n                         keep = False\n@@ -776,7 +776,6 @@ class Documenter:\n                         keep = membername in self.options.private_members\n                 else:\n                     keep = False\n-            else:\n                 if (self.options.members is ALL and\n                         is_filtered_inherited_member(membername, obj)):\n                     keep = False\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex f71844a..1e9e7c5 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -409,7 +409,7 @@ class Documenter:\n                 else:\n                     keep = True\n                 isattr = True\n-            elif want_all and isprivate:\n+            elif want_all and isprivate and ('public' not in metadata):\n                 if has_doc or self.options.undoc_members:\n                     if self.options.private_members is None:\n                         keep = False\n@@ -419,10 +419,10 @@ class Documenter:\n                         keep = membername in self.options.private_members\n                 else:\n                     keep = False\n-            elif self.options.members is ALL and is_filtered_inherited_member(membername, obj):\n-                keep = False\n-            else:\n-                keep = has_doc or self.options.undoc_members\n+                if self.options.members is ALL and is_filtered_inherited_member(membername, obj):\n+                    keep = False\n+                else:\n+                    keep = has_doc or self.options.undoc_members\n             if isinstance(obj, ObjectMember) and obj.skipped:\n                 keep = False\n             if self.env.app:\n", "normalized_occurrence": 1}
