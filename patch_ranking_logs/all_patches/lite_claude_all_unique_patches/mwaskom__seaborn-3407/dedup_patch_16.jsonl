{"model_name_or_path": "agentless_claude", "instance_id": "mwaskom__seaborn-3407", "model_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 29c361e..67edf66 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -1664,9 +1664,13 @@ class PairGrid(Grid):\n     def _find_numeric_cols(self, data):\n         \"\"\"Find which variables in a DataFrame are numeric.\"\"\"\n         numeric_cols = []\n-        for col in data:\n-            if variable_type(data[col]) == \"numeric\":\n-                numeric_cols.append(col)\n+        for col in data.columns:\n+            try:\n+                if variable_type(data[col]) == \"numeric\":\n+                    numeric_cols.append(col)\n+            except Exception:\n+                # Skip columns that can't be evaluated\n+                continue\n         return numeric_cols\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 039b44a..5723319 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -792,9 +792,12 @@ class PairGrid(Grid):\n             ax.set_ylabel(label)\n     def _find_numeric_cols(self, data):\n         numeric_cols = []\n-        for col in data:\n-            if variable_type(data[col]) == 'numeric':\n-                numeric_cols.append(col)\n+        for col in data.columns:\n+            try:\n+                if variable_type(data[col]) == 'numeric':\n+                    numeric_cols.append(col)\n+            except Exception:\n+                continue\n         return numeric_cols\n class JointGrid(_BaseGrid):\n     def __init__(self, data=None, *, x=None, y=None, hue=None, height=6, ratio=5, space=0.2, palette=None, hue_order=None, hue_norm=None, dropna=False, xlim=None, ylim=None, marginal_ticks=False):\n", "normalized_occurrence": 1}
