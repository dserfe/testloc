{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-11510", "model_patch": "diff --git a/sphinx/environment/__init__.py b/sphinx/environment/__init__.py\nindex 96f4a03..dc302ae 100644\n--- a/sphinx/environment/__init__.py\n+++ b/sphinx/environment/__init__.py\n@@ -684,6 +684,12 @@ class BuildEnvironment:\n         # allow custom references to be resolved\n         self.events.emit('doctree-resolved', doctree, docname)\n \n+        # Reapply source-read transformations to included files\n+        for node in doctree.traverse(nodes.include):\n+            included_docname = node.get('docname')\n+            if included_docname:\n+                self.events.emit('source-read', included_docname, [node.rawsource])\n+\n     def collect_relations(self) -> dict[str, list[str | None]]:\n         traversed: set[str] = set()\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/environment/__init__.py b/sphinx/environment/__init__.py\nindex 3c422c4..0fc0378 100644\n--- a/sphinx/environment/__init__.py\n+++ b/sphinx/environment/__init__.py\n@@ -383,6 +383,10 @@ class BuildEnvironment:\n         finally:\n             self.temp_data = backup\n         self.events.emit('doctree-resolved', doctree, docname)\n+        for node in doctree.traverse(nodes.include):\n+            included_docname = node.get('docname')\n+            if included_docname:\n+                self.events.emit('source-read', included_docname, [node.rawsource])\n     def collect_relations(self) -> dict[str, list[str | None]]:\n         traversed: set[str] = set()\n         relations = {}\n", "normalized_occurrence": 1}
