{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-24334", "model_patch": "diff --git a/lib/matplotlib/axis.py b/lib/matplotlib/axis.py\nindex d63d9ca..7f681ea 100644\n--- a/lib/matplotlib/axis.py\n+++ b/lib/matplotlib/axis.py\n@@ -2020,7 +2020,23 @@ class Axis(martist.Artist):\n         choice to prevent the surprise of a non-visible tick. If you need\n         other limits, you should set the limits explicitly after setting the\n         ticks.\n+\n+        Any provided `.Text` properties in *kwargs* are validated even if\n+        *labels* is not provided, but they will only take effect if *labels*\n+        is set.\n         \"\"\"\n+        # Validate Text properties even if labels are not provided\n+        if kwargs:\n+            dummy_text = self.figure.text(0, 0, '')  # Temporary Text instance for validation\n+            try:\n+                dummy_text.update(kwargs)\n+            except (TypeError, ValueError) as e:\n+                raise ValueError(\n+                    f\"Invalid Text property in kwargs: {e}\"\n+                ) from None\n+            finally:\n+                dummy_text.remove()\n+\n         result = self._set_tick_locations(ticks, minor=minor)\n         if labels is not None:\n             self.set_ticklabels(labels, minor=minor, **kwargs)\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axis.py b/lib/matplotlib/axis.py\nindex 95f7f71..651d6fd 100644\n--- a/lib/matplotlib/axis.py\n+++ b/lib/matplotlib/axis.py\n@@ -1649,7 +1649,19 @@ class Axis(martist.Artist):\n         choice to prevent the surprise of a non-visible tick. If you need\n         other limits, you should set the limits explicitly after setting the\n         ticks.\n+\n+        Any provided `.Text` properties in *kwargs* are validated even if\n+        *labels* is not provided, but they will only take effect if *labels*\n+        is set.\n         \"\"\"\n+        if kwargs:\n+            dummy_text = self.figure.text(0, 0, '')\n+            try:\n+                dummy_text.update(kwargs)\n+            except (TypeError, ValueError) as e:\n+                raise ValueError(f'Invalid Text property in kwargs: {e}') from None\n+            finally:\n+                dummy_text.remove()\n         result = self._set_tick_locations(ticks, minor=minor)\n         if labels is not None:\n             self.set_ticklabels(labels, minor=minor, **kwargs)\n", "normalized_occurrence": 1}
