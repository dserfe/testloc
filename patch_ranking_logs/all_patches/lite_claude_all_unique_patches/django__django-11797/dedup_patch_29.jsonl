{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11797", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 0b52a54..31ce455 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1016,6 +1016,9 @@ class Query(BaseExpression):\n         # Subqueries need to use a different set of aliases than the outer query.\n         clone.bump_prefix(query)\n         clone.subquery = True\n+        # Ensure GROUP BY is preserved for subqueries\n+        if self.group_by is not None:\n+            clone.group_by = self.group_by\n         # It's safe to drop ordering if the queryset isn't using slicing,\n         # distinct(*fields) or select_for_update().\n         if (self.low_mark == 0 and self.high_mark is None and\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 881d481..cd7b7c7 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -555,6 +555,8 @@ class Query(BaseExpression):\n         clone = self.clone()\n         clone.bump_prefix(query)\n         clone.subquery = True\n+        if self.group_by is not None:\n+            clone.group_by = self.group_by\n         if self.low_mark == 0 and self.high_mark is None and (not self.distinct_fields) and (not self.select_for_update):\n             clone.clear_ordering(True)\n         clone.where.resolve_expression(query, *args, **kwargs)\n", "normalized_occurrence": 4}
