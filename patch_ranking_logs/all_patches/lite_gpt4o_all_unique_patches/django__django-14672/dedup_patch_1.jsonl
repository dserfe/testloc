{"model_name_or_path": "agentless", "instance_id": "django__django-14672", "model_patch": "diff --git a/django/db/models/fields/reverse_related.py b/django/db/models/fields/reverse_related.py\nindex 7ae0a4d..4afe085 100644\n--- a/django/db/models/fields/reverse_related.py\n+++ b/django/db/models/fields/reverse_related.py\n@@ -301,7 +301,7 @@ class ManyToManyRel(ForeignObjectRel):\n \n         if through_fields and not through:\n             raise ValueError(\"Cannot specify through_fields without a through model\")\n-        self.through_fields = through_fields\n+        self.through_fields = make_hashable(through_fields) if through_fields else through_fields\n \n         self.symmetrical = symmetrical\n         self.db_constraint = db_constraint\n@@ -327,4 +327,4 @@ class ManyToManyRel(ForeignObjectRel):\n                 rel = getattr(field, 'remote_field', None)\n                 if rel and rel.model == self.model:\n                     break\n-        return field.foreign_related_fields[0]\n+        return field.foreign_related_fields[0]\n", "occurrence": 3, "normalized_patch": "diff --git a/django/db/models/fields/reverse_related.py b/django/db/models/fields/reverse_related.py\nindex 32fd814..ee116d6 100644\n--- a/django/db/models/fields/reverse_related.py\n+++ b/django/db/models/fields/reverse_related.py\n@@ -127,7 +127,7 @@ class ManyToManyRel(ForeignObjectRel):\n         self.through = through\n         if through_fields and (not through):\n             raise ValueError('Cannot specify through_fields without a through model')\n-        self.through_fields = through_fields\n+        self.through_fields = make_hashable(through_fields) if through_fields else through_fields\n         self.symmetrical = symmetrical\n         self.db_constraint = db_constraint\n     @property\n", "normalized_occurrence": 3}
