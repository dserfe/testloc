{"model_name_or_path": "agentless", "instance_id": "django__django-16642", "model_patch": "diff --git a/django/http/response.py b/django/http/response.py\nindex b918697..3e27b93 100644\n--- a/django/http/response.py\n+++ b/django/http/response.py\n@@ -602,6 +602,9 @@ class FileResponse(StreamingHttpResponse):\n             )\n             filelike.seek(-int(self.headers[\"Content-Length\"]), io.SEEK_END)\n \n+        # Add custom MIME types for .br and .Z extensions\n+        mimetypes.add_type('application/x-bzip2', '.Z')\n+        mimetypes.add_type('application/x-brotli', '.br')\n         filename = os.path.basename(self.filename or filename)\n         if self._no_explicit_content_type:\n             if filename:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/http/response.py b/django/http/response.py\nindex 508a8a7..d7f438f 100644\n--- a/django/http/response.py\n+++ b/django/http/response.py\n@@ -325,6 +325,8 @@ class FileResponse(StreamingHttpResponse):\n         elif seekable:\n             self.headers['Content-Length'] = sum(iter(lambda: len(filelike.read(self.block_size)), 0))\n             filelike.seek(-int(self.headers['Content-Length']), io.SEEK_END)\n+        mimetypes.add_type('application/x-bzip2', '.Z')\n+        mimetypes.add_type('application/x-brotli', '.br')\n         filename = os.path.basename(self.filename or filename)\n         if self._no_explicit_content_type:\n             if filename:\n", "normalized_occurrence": 1}
