{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15503", "model_patch": "diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py\nindex 0a76a39..0e30cb8 100644\n--- a/django/db/models/fields/json.py\n+++ b/django/db/models/fields/json.py\n@@ -227,8 +227,12 @@ class HasKeyLookup(PostgresOperatorLookup):\n         return super().as_postgresql(compiler, connection)\n \n     def as_sqlite(self, compiler, connection):\n+        if hasattr(self.rhs, \"as_sql\"):\n+            sql, params = self.rhs.as_sql(compiler, connection)\n+        else:\n+            sql, params = \"'$.%s'\" % self.rhs, []\n         return self.as_sql(\n-            compiler, connection, template=\"JSON_TYPE(%s, %%s) IS NOT NULL\"\n+            compiler, connection, template=\"JSON_TYPE(%s, %s) IS NOT NULL\" % (self.lhs.as_sql(compiler, connection)[0], sql)\n         )\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py\nindex 272d7b8..18351fc 100644\n--- a/django/db/models/fields/json.py\n+++ b/django/db/models/fields/json.py\n@@ -141,7 +141,11 @@ class HasKeyLookup(PostgresOperatorLookup):\n             self.rhs = rhs_key_transforms[-1]\n         return super().as_postgresql(compiler, connection)\n     def as_sqlite(self, compiler, connection):\n-        return self.as_sql(compiler, connection, template='JSON_TYPE(%s, %%s) IS NOT NULL')\n+        if hasattr(self.rhs, 'as_sql'):\n+            sql, params = self.rhs.as_sql(compiler, connection)\n+        else:\n+            sql, params = (\"'$.%s'\" % self.rhs, [])\n+        return self.as_sql(compiler, connection, template='JSON_TYPE(%s, %s) IS NOT NULL' % (self.lhs.as_sql(compiler, connection)[0], sql))\n class HasKey(HasKeyLookup):\n     lookup_name = 'has_key'\n     postgres_operator = '?'\n", "normalized_occurrence": 1}
