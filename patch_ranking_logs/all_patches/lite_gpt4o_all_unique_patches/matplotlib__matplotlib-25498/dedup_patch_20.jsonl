{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25498", "model_patch": "diff --git a/lib/matplotlib/colorbar.py b/lib/matplotlib/colorbar.py\nindex 6151185..fb544cb 100644\n--- a/lib/matplotlib/colorbar.py\n+++ b/lib/matplotlib/colorbar.py\n@@ -1102,8 +1102,12 @@ class Colorbar:\n \n         # transform from 0-1 to vmin-vmax:\n         if not self.norm.scaled():\n-            self.norm.vmin = 0\n-            self.norm.vmax = 1\n+            if isinstance(self.norm, LogNorm):\n+                self.norm.vmin = 1e-10  # A small positive number instead of 0\n+                self.norm.vmax = 1\n+            else:\n+                self.norm.vmin = 0\n+                self.norm.vmax = 1\n         self.norm.vmin, self.norm.vmax = mtransforms.nonsingular(\n             self.norm.vmin, self.norm.vmax, expander=0.1)\n         if (not isinstance(self.norm, colors.BoundaryNorm) and\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/colorbar.py b/lib/matplotlib/colorbar.py\nindex 45aa167..b73b078 100644\n--- a/lib/matplotlib/colorbar.py\n+++ b/lib/matplotlib/colorbar.py\n@@ -491,8 +491,12 @@ class Colorbar:\n         if self._extend_upper():\n             b = np.hstack((b, b[-1] + 1))\n         if not self.norm.scaled():\n-            self.norm.vmin = 0\n-            self.norm.vmax = 1\n+            if isinstance(self.norm, LogNorm):\n+                self.norm.vmin = 1e-10\n+                self.norm.vmax = 1\n+            else:\n+                self.norm.vmin = 0\n+                self.norm.vmax = 1\n         self.norm.vmin, self.norm.vmax = mtransforms.nonsingular(self.norm.vmin, self.norm.vmax, expander=0.1)\n         if not isinstance(self.norm, colors.BoundaryNorm) and self.boundaries is None:\n             b = self.norm.inverse(b)\n", "normalized_occurrence": 1}
