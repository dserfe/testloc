{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-7571", "model_patch": "diff --git a/src/_pytest/logging.py b/src/_pytest/logging.py\nindex 16efd55..6deaa2c 100644\n--- a/src/_pytest/logging.py\n+++ b/src/_pytest/logging.py\n@@ -328,6 +328,7 @@ class LogCaptureHandler(logging.StreamHandler):\n     def reset(self) -> None:\n         self.records = []\n         self.stream = StringIO()\n+        self.setLevel(logging.NOTSET)  # Reset level to default\n \n     def handleError(self, record: logging.LogRecord) -> None:\n         if logging.raiseExceptions:\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/logging.py b/src/_pytest/logging.py\nindex 862b163..11dcf3f 100644\n--- a/src/_pytest/logging.py\n+++ b/src/_pytest/logging.py\n@@ -157,6 +157,7 @@ class LogCaptureHandler(logging.StreamHandler):\n     def reset(self) -> None:\n         self.records = []\n         self.stream = StringIO()\n+        self.setLevel(logging.NOTSET)\n     def handleError(self, record: logging.LogRecord) -> None:\n         if logging.raiseExceptions:\n             raise\n", "normalized_occurrence": 1}
