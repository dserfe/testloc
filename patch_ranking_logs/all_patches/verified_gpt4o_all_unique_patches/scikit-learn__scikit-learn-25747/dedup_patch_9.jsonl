{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-25747", "model_patch": "diff --git a/sklearn/utils/_set_output.py b/sklearn/utils/_set_output.py\nindex 52acc1f..7b1e265 100644\n--- a/sklearn/utils/_set_output.py\n+++ b/sklearn/utils/_set_output.py\n@@ -1,3 +1,4 @@\n+\n from functools import wraps\n \n from scipy.sparse import issparse\n@@ -56,7 +57,7 @@ def _wrap_in_pandas_container(\n         if columns is not None:\n             data_to_wrap.columns = columns\n         if index is not None:\n-            data_to_wrap.index = index\n+            data_to_wrap = data_to_wrap.set_index(index)\n         return data_to_wrap\n \n     return pd.DataFrame(data_to_wrap, index=index, columns=columns)\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/utils/_set_output.py b/sklearn/utils/_set_output.py\nindex 386f312..f043a67 100644\n--- a/sklearn/utils/_set_output.py\n+++ b/sklearn/utils/_set_output.py\n@@ -16,7 +16,7 @@ def _wrap_in_pandas_container(data_to_wrap, *, columns, index=None):\n         if columns is not None:\n             data_to_wrap.columns = columns\n         if index is not None:\n-            data_to_wrap.index = index\n+            data_to_wrap = data_to_wrap.set_index(index)\n         return data_to_wrap\n     return pd.DataFrame(data_to_wrap, index=index, columns=columns)\n def _get_output_config(method, estimator=None):\n", "normalized_occurrence": 1}
