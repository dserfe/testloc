{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-14308", "model_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 81d644a..4679207 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -915,12 +915,14 @@ class PrettyPrinter(Printer):\n                               k._pretty_form)\n                 #For a general expr\n                 else:\n-                    #We always wrap the measure numbers in\n-                    #parentheses\n-                    arg_str = self._print(\n-                        v).parens()[0]\n-\n-                    o1.append(arg_str + ' ' + k._pretty_form)\n+                    #Print the measure number and center it\n+                    arg_pform = self._print(v)\n+                    #Only add parentheses if needed\n+                    if v.is_Add or v.is_Mul:\n+                        arg_pform = prettyForm(*arg_pform.parens())\n+                    #Center the baseline with the vector symbol\n+                    arg_pform = prettyForm(*arg_pform.right(' ' + k._pretty_form))\n+                    o1.append(arg_pform)\n                 vectstrs.append(k._pretty_form)\n \n         #outstr = u(\"\").join(o1)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 35c3eb3..65b2970 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -660,8 +660,11 @@ class PrettyPrinter(Printer):\n                 elif v == -1:\n                     o1.append(u'(-1) ' + k._pretty_form)\n                 else:\n-                    arg_str = self._print(v).parens()[0]\n-                    o1.append(arg_str + ' ' + k._pretty_form)\n+                    arg_pform = self._print(v)\n+                    if v.is_Add or v.is_Mul:\n+                        arg_pform = prettyForm(*arg_pform.parens())\n+                    arg_pform = prettyForm(*arg_pform.right(' ' + k._pretty_form))\n+                    o1.append(arg_pform)\n                 vectstrs.append(k._pretty_form)\n         if o1[0].startswith(u' + '):\n             o1[0] = o1[0][3:]\n", "normalized_occurrence": 1}
