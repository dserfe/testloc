{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13810", "model_patch": "diff --git a/django/core/handlers/base.py b/django/core/handlers/base.py\nindex 2cbbab1..38f2d00 100644\n--- a/django/core/handlers/base.py\n+++ b/django/core/handlers/base.py\n@@ -68,6 +68,12 @@ class BaseHandler:\n                 raise ImproperlyConfigured(\n                     'Middleware factory %s returned None.' % middleware_path\n                 )\n+                \n+            # Only adapt handler after we're sure middleware is used\n+            handler = self.adapt_method_mode(\n+                middleware_is_async, handler, handler_is_async,\n+                debug=settings.DEBUG, name='middleware %s' % middleware_path,\n+            )\n \n             if hasattr(mw_instance, 'process_view'):\n                 self._view_middleware.insert(\n@@ -345,4 +351,4 @@ def reset_urlconf(sender, **kwargs):\n     set_urlconf(None)\n \n \n-request_finished.connect(reset_urlconf)\n+request_finished.connect(reset_urlconf)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/handlers/base.py b/django/core/handlers/base.py\nindex db9e015..be982d0 100644\n--- a/django/core/handlers/base.py\n+++ b/django/core/handlers/base.py\n@@ -45,6 +45,7 @@ class BaseHandler:\n                 continue\n             if mw_instance is None:\n                 raise ImproperlyConfigured('Middleware factory %s returned None.' % middleware_path)\n+            handler = self.adapt_method_mode(middleware_is_async, handler, handler_is_async, debug=settings.DEBUG, name='middleware %s' % middleware_path)\n             if hasattr(mw_instance, 'process_view'):\n                 self._view_middleware.insert(0, self.adapt_method_mode(is_async, mw_instance.process_view))\n             if hasattr(mw_instance, 'process_template_response'):\n", "normalized_occurrence": 1}
