{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-6721", "model_patch": "diff --git a/xarray/core/variable.py b/xarray/core/variable.py\nindex 1775e6c..a619881 100644\n--- a/xarray/core/variable.py\n+++ b/xarray/core/variable.py\n@@ -512,6 +512,8 @@ class Variable(AbstractArray, NdimSizeLenMixin, VariableArithmetic):\n     @property\n     def values(self):\n         \"\"\"The variable's data as a numpy.ndarray\"\"\"\n+        if isinstance(self._data, indexing.LazilyIndexedArray):\n+            return np.asarray(self._data.array)  # avoid triggering data loading\n         return _as_array_or_item(self._data)\n \n     @values.setter\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/variable.py b/xarray/core/variable.py\nindex 24a31db..525f4d3 100644\n--- a/xarray/core/variable.py\n+++ b/xarray/core/variable.py\n@@ -387,6 +387,8 @@ class Variable(AbstractArray, NdimSizeLenMixin, VariableArithmetic):\n     @property\n     def values(self):\n         \"\"\"The variable's data as a numpy.ndarray\"\"\"\n+        if isinstance(self._data, indexing.LazilyIndexedArray):\n+            return np.asarray(self._data.array)\n         return _as_array_or_item(self._data)\n \n     @values.setter\n", "normalized_occurrence": 1}
