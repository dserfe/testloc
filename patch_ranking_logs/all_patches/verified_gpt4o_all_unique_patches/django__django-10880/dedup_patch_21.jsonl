{"model_name_or_path": "agentless", "instance_id": "django__django-10880", "model_patch": "diff --git a/django/db/models/aggregates.py b/django/db/models/aggregates.py\nindex f03a228..fbfff33 100644\n--- a/django/db/models/aggregates.py\n+++ b/django/db/models/aggregates.py\n@@ -93,6 +93,8 @@ class Aggregate(Func):\n             options['distinct'] = self.distinct\n         if self.filter:\n             options['filter'] = self.filter\n+        if self.distinct:\n+            options['distinct'] = self.distinct\n         return options\n \n \n@@ -107,7 +109,8 @@ class Count(Aggregate):\n     output_field = IntegerField()\n     allow_distinct = True\n \n-    def __init__(self, expression, filter=None, **extra):\n+    def __init__(self, expression, filter=None, distinct=False, **extra):\n+        self.distinct = distinct\n         if expression == '*':\n             expression = Star()\n         if isinstance(expression, Star) and filter is not None:\n", "occurrence": 2, "normalized_patch": "diff --git a/django/db/models/aggregates.py b/django/db/models/aggregates.py\nindex f40a983..befda31 100644\n--- a/django/db/models/aggregates.py\n+++ b/django/db/models/aggregates.py\n@@ -67,6 +67,8 @@ class Aggregate(Func):\n             options['distinct'] = self.distinct\n         if self.filter:\n             options['filter'] = self.filter\n+        if self.distinct:\n+            options['distinct'] = self.distinct\n         return options\n class Avg(FixDurationInputMixin, NumericOutputFieldMixin, Aggregate):\n     function = 'AVG'\n@@ -76,7 +78,8 @@ class Count(Aggregate):\n     name = 'Count'\n     output_field = IntegerField()\n     allow_distinct = True\n-    def __init__(self, expression, filter=None, **extra):\n+    def __init__(self, expression, filter=None, distinct=False, **extra):\n+        self.distinct = distinct\n         if expression == '*':\n             expression = Star()\n         if isinstance(expression, Star) and filter is not None:\n", "normalized_occurrence": 2}
