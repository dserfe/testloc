{"model_name_or_path": "agentless", "instance_id": "django__django-15781", "model_patch": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex 778cb1c..f7c4f2f 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -125,7 +125,8 @@ class DjangoHelpFormatter(HelpFormatter):\n         )\n \n     def add_usage(self, usage, actions, *args, **kwargs):\n-        super().add_usage(usage, self._reordered_actions(actions), *args, **kwargs)\n+        formatted_usage = super()._format_usage(usage, self._reordered_actions(actions), *args, **kwargs)\n+        self._add_item(lambda: formatted_usage, [])\n \n     def add_arguments(self, actions):\n         super().add_arguments(self._reordered_actions(actions))\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex 2883dc3..4865f04 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -51,7 +51,8 @@ class DjangoHelpFormatter(HelpFormatter):\n     def _reordered_actions(self, actions):\n         return sorted(actions, key=lambda a: set(a.option_strings) & self.show_last != set())\n     def add_usage(self, usage, actions, *args, **kwargs):\n-        super().add_usage(usage, self._reordered_actions(actions), *args, **kwargs)\n+        formatted_usage = super()._format_usage(usage, self._reordered_actions(actions), *args, **kwargs)\n+        self._add_item(lambda: formatted_usage, [])\n     def add_arguments(self, actions):\n         super().add_arguments(self._reordered_actions(actions))\n class OutputWrapper(TextIOBase):\n", "normalized_occurrence": 1}
