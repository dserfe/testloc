{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13964", "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex dfd3a82..457ba32 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -936,6 +936,16 @@ class Model(metaclass=ModelBase):\n                 elif getattr(self, field.attname) is None:\n                     # Use pk from related object if it has been saved after\n                     # an assignment.\n+                    if obj.pk is None or (\n+                        isinstance(obj.pk, str) and not obj.pk\n+                    ):\n+                        # Remove the object from a related instance cache.\n+                        if not field.remote_field.multiple:\n+                            field.remote_field.delete_cached_value(obj)\n+                        raise ValueError(\n+                            \"%s() prohibited to prevent data loss due to unsaved \"\n+                            \"related object '%s'.\" % (operation_name, field.name)\n+                        )\n                     setattr(self, field.attname, obj.pk)\n                 # If the relationship's pk/to_field was changed, clear the\n                 # cached relationship.\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex e6ddd1a..161dab0 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -494,6 +494,10 @@ class Model(metaclass=ModelBase):\n                         field.remote_field.delete_cached_value(obj)\n                     raise ValueError(\"%s() prohibited to prevent data loss due to unsaved related object '%s'.\" % (operation_name, field.name))\n                 elif getattr(self, field.attname) is None:\n+                    if obj.pk is None or (isinstance(obj.pk, str) and (not obj.pk)):\n+                        if not field.remote_field.multiple:\n+                            field.remote_field.delete_cached_value(obj)\n+                        raise ValueError(\"%s() prohibited to prevent data loss due to unsaved related object '%s'.\" % (operation_name, field.name))\n                     setattr(self, field.attname, obj.pk)\n                 if getattr(obj, field.target_field.attname) != getattr(self, field.attname):\n                     field.delete_cached_value(self)\n", "normalized_occurrence": 1}
