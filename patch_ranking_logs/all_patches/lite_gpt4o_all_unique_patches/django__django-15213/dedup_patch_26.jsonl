{"model_name_or_path": "agentless", "instance_id": "django__django-15213", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex d5af8cd..bc40510 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -553,6 +553,8 @@ class SQLCompiler:\n                 try:\n                     where, w_params = self.compile(self.where) if self.where is not None else ('', [])\n                 except EmptyResultSet:\n+                    if isinstance(where, Q) and where.negated and not where.children:\n+                        where, w_params = '1 = 1', []\n                     if self.elide_empty:\n                         raise\n                     # Use a predicate that's always False.\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 4c4fd00..0b4507d 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -311,6 +311,8 @@ class SQLCompiler:\n                 try:\n                     where, w_params = self.compile(self.where) if self.where is not None else ('', [])\n                 except EmptyResultSet:\n+                    if isinstance(where, Q) and where.negated and (not where.children):\n+                        where, w_params = ('1 = 1', [])\n                     if self.elide_empty:\n                         raise\n                     where, w_params = ('0 = 1', [])\n", "normalized_occurrence": 1}
