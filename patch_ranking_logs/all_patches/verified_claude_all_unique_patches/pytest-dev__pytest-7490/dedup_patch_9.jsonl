{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-7490", "model_patch": "diff --git a/src/_pytest/skipping.py b/src/_pytest/skipping.py\nindex 1316da9..1e49c98 100644\n--- a/src/_pytest/skipping.py\n+++ b/src/_pytest/skipping.py\n@@ -284,6 +284,12 @@ def pytest_runtest_makereport(item: Item, call: CallInfo[None]):\n             else:\n                 rep.outcome = \"skipped\"\n                 rep.wasxfail = xfailed.reason\n+                # Ensure dynamically added markers are considered\n+                if hasattr(item, \"own_markers\"):\n+                    for marker in item.own_markers:\n+                        if marker.name == \"xfail\":\n+                            rep.wasxfail = marker.kwargs.get(\"reason\", xfailed.reason)\n+                            break\n         elif call.when == \"call\":\n             if xfailed.strict:\n                 rep.outcome = \"failed\"\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/skipping.py b/src/_pytest/skipping.py\nindex d85ae4c..6b777bf 100644\n--- a/src/_pytest/skipping.py\n+++ b/src/_pytest/skipping.py\n@@ -162,6 +162,11 @@ def pytest_runtest_makereport(item: Item, call: CallInfo[None]):\n             else:\n                 rep.outcome = 'skipped'\n                 rep.wasxfail = xfailed.reason\n+                if hasattr(item, 'own_markers'):\n+                    for marker in item.own_markers:\n+                        if marker.name == 'xfail':\n+                            rep.wasxfail = marker.kwargs.get('reason', xfailed.reason)\n+                            break\n         elif call.when == 'call':\n             if xfailed.strict:\n                 rep.outcome = 'failed'\n", "normalized_occurrence": 1}
