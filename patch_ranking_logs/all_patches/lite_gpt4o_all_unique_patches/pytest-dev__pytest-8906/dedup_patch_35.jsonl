{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-8906", "model_patch": "diff --git a/src/_pytest/skipping.py b/src/_pytest/skipping.py\nindex 687e2f7..fc71fdb 100644\n--- a/src/_pytest/skipping.py\n+++ b/src/_pytest/skipping.py\n@@ -235,7 +235,7 @@ xfailed_key = StoreKey[Optional[Xfail]]()\n def pytest_runtest_setup(item: Item) -> None:\n     skipped = evaluate_skip_marks(item)\n     if skipped:\n-        raise skip.Exception(skipped.reason, _use_item_location=True)\n+        raise skip.Exception(skipped.reason, _use_item_location=True, allow_module_level=True)\n \n     item._store[xfailed_key] = xfailed = evaluate_xfail_marks(item)\n     if xfailed and not item.config.option.runxfail and not xfailed.run:\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/skipping.py b/src/_pytest/skipping.py\nindex 754634b..1254fd8 100644\n--- a/src/_pytest/skipping.py\n+++ b/src/_pytest/skipping.py\n@@ -118,7 +118,7 @@ xfailed_key = StoreKey[Optional[Xfail]]()\n def pytest_runtest_setup(item: Item) -> None:\n     skipped = evaluate_skip_marks(item)\n     if skipped:\n-        raise skip.Exception(skipped.reason, _use_item_location=True)\n+        raise skip.Exception(skipped.reason, _use_item_location=True, allow_module_level=True)\n     item._store[xfailed_key] = xfailed = evaluate_xfail_marks(item)\n     if xfailed and (not item.config.option.runxfail) and (not xfailed.run):\n         xfail('[NOTRUN] ' + xfailed.reason)\n", "normalized_occurrence": 1}
