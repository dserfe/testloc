{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-5840", "model_patch": "diff --git a/src/_pytest/main.py b/src/_pytest/main.py\nindex be5f299..888a9f1 100644\n--- a/src/_pytest/main.py\n+++ b/src/_pytest/main.py\n@@ -633,7 +633,7 @@ class Session(nodes.FSCollector):\n         if self.config.option.pyargs:\n             parts[0] = self._tryconvertpyarg(parts[0])\n         relpath = parts[0].replace(\"/\", os.sep)\n-        path = self.config.invocation_dir.join(relpath, abs=True)\n+        path = self.config.invocation_dir.join(normcase(relpath), abs=True)\n         if not path.check():\n             if self.config.option.pyargs:\n                 raise UsageError(\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/main.py b/src/_pytest/main.py\nindex ea2d5dc..1434b8b 100644\n--- a/src/_pytest/main.py\n+++ b/src/_pytest/main.py\n@@ -414,7 +414,7 @@ class Session(nodes.FSCollector):\n         if self.config.option.pyargs:\n             parts[0] = self._tryconvertpyarg(parts[0])\n         relpath = parts[0].replace('/', os.sep)\n-        path = self.config.invocation_dir.join(relpath, abs=True)\n+        path = self.config.invocation_dir.join(normcase(relpath), abs=True)\n         if not path.check():\n             if self.config.option.pyargs:\n                 raise UsageError('file or package not found: ' + arg + ' (missing __init__.py?)')\n", "normalized_occurrence": 1}
