{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16661", "model_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 20a301b..703760c 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -461,13 +461,9 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n                 # Lookups on nonexistent fields are ok, since they're ignored\n                 # later.\n                 break\n-            # It is allowed to filter on values that would be found from local\n-            # model anyways. For example, if you filter on employee__department__id,\n-            # then the id value would be found already from employee__department_id.\n-            if not prev_field or (\n-                prev_field.is_relation\n-                and field not in prev_field.path_infos[-1].target_fields\n-            ):\n+            # Always include parts of the relation path when traversing foreign key\n+            # relationships, including when the foreign key is used as primary key\n+            if not prev_field or prev_field.is_relation:\n                 relation_parts.append(part)\n             if not getattr(field, \"path_infos\", None):\n                 # This is not a relational field, so further parts\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 061e1b9..dad5a66 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -205,7 +205,7 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n                 field = model._meta.get_field(part)\n             except FieldDoesNotExist:\n                 break\n-            if not prev_field or (prev_field.is_relation and field not in prev_field.path_infos[-1].target_fields):\n+            if not prev_field or prev_field.is_relation:\n                 relation_parts.append(part)\n             if not getattr(field, 'path_infos', None):\n                 break\n", "normalized_occurrence": 4}
