{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-21379", "model_patch": "diff --git a/sympy/functions/elementary/piecewise.py b/sympy/functions/elementary/piecewise.py\nindex 218f537..39e0127 100644\n--- a/sympy/functions/elementary/piecewise.py\n+++ b/sympy/functions/elementary/piecewise.py\n@@ -810,6 +810,8 @@ class Piecewise(Function):\n         # somewhat more efficient by avoiding other substitutions\n         # and avoiding invalid conditions that appear after a\n         # True condition\n+        if self == old:\n+            return new\n         args = list(self.args)\n         args_exist = False\n         for i, (e, c) in enumerate(args):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/piecewise.py b/sympy/functions/elementary/piecewise.py\nindex e1c61a2..28792a9 100644\n--- a/sympy/functions/elementary/piecewise.py\n+++ b/sympy/functions/elementary/piecewise.py\n@@ -441,6 +441,8 @@ class Piecewise(Function):\n     def _eval_power(self, s):\n         return self.func(*[(e ** s, c) for e, c in self.args])\n     def _eval_subs(self, old, new):\n+        if self == old:\n+            return new\n         args = list(self.args)\n         args_exist = False\n         for i, (e, c) in enumerate(args):\n", "normalized_occurrence": 2}
