{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12209", "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex a315aef..0cf2252 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -840,14 +840,15 @@ class Model(metaclass=ModelBase):\n                        if f.name in update_fields or f.attname in update_fields]\n \n         pk_val = self._get_pk_val(meta)\n-        if pk_val is None:\n+        pk_was_none = pk_val is None\n+        if pk_was_none:\n             pk_val = meta.pk.get_pk_value_on_save(self)\n             setattr(self, meta.pk.attname, pk_val)\n         pk_set = pk_val is not None\n         if not pk_set and (force_update or update_fields):\n             raise ValueError(\"Cannot force an update in save() with no primary key.\")\n         updated = False\n-        # Skip an UPDATE when adding an instance and primary key has a default.\n+        # Skip an UPDATE only when the instance had no PK and got a default value\n         if (\n             not force_insert and\n             self._state.adding and\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex b2bc78c..164f1da 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -450,7 +450,8 @@ class Model(metaclass=ModelBase):\n         if update_fields:\n             non_pks = [f for f in non_pks if f.name in update_fields or f.attname in update_fields]\n         pk_val = self._get_pk_val(meta)\n-        if pk_val is None:\n+        pk_was_none = pk_val is None\n+        if pk_was_none:\n             pk_val = meta.pk.get_pk_value_on_save(self)\n             setattr(self, meta.pk.attname, pk_val)\n         pk_set = pk_val is not None\n", "normalized_occurrence": 1}
