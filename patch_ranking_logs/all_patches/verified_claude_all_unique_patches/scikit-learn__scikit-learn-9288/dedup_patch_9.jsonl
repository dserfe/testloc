{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-9288", "model_patch": "diff --git a/sklearn/cluster/k_means_.py b/sklearn/cluster/k_means_.py\nindex 915d041..86409d4 100644\n--- a/sklearn/cluster/k_means_.py\n+++ b/sklearn/cluster/k_means_.py\n@@ -670,10 +670,8 @@ def _labels_inertia(X, sample_weight, x_squared_norms, centers,\n             X, sample_weight, x_squared_norms, centers, labels,\n             distances=distances)\n     else:\n-        if precompute_distances:\n-            return _labels_inertia_precompute_dense(X, sample_weight,\n-                                                    x_squared_norms, centers,\n-                                                    distances)\n+        # Always use non-precomputed distances for consistency between\n+        # serial and parallel execution\n         inertia = _k_means._assign_labels_array(\n             X, sample_weight, x_squared_norms, centers, labels,\n             distances=distances)\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/cluster/k_means_.py b/sklearn/cluster/k_means_.py\nindex abcc315..d6ac595 100644\n--- a/sklearn/cluster/k_means_.py\n+++ b/sklearn/cluster/k_means_.py\n@@ -198,8 +198,6 @@ def _labels_inertia(X, sample_weight, x_squared_norms, centers, precompute_dista\n     if sp.issparse(X):\n         inertia = _k_means._assign_labels_csr(X, sample_weight, x_squared_norms, centers, labels, distances=distances)\n     else:\n-        if precompute_distances:\n-            return _labels_inertia_precompute_dense(X, sample_weight, x_squared_norms, centers, distances)\n         inertia = _k_means._assign_labels_array(X, sample_weight, x_squared_norms, centers, labels, distances=distances)\n     return (labels, inertia)\n def _init_centroids(X, k, init, random_state=None, x_squared_norms=None, init_size=None):\n", "normalized_occurrence": 2}
