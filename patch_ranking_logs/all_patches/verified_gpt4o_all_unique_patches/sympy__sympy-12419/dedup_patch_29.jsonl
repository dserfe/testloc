{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-12419", "model_patch": "diff --git a/sympy/matrices/expressions/matmul.py b/sympy/matrices/expressions/matmul.py\nindex 639ff43..bf26f83 100644\n--- a/sympy/matrices/expressions/matmul.py\n+++ b/sympy/matrices/expressions/matmul.py\n@@ -71,7 +71,7 @@ class MatMul(MatrixExpr):\n \n     def as_coeff_matrices(self):\n         scalars = [x for x in self.args if not x.is_Matrix]\n-        matrices = [x for x in self.args if x.is_Matrix]\n+        matrices = [Identity(x.shape[0]) if x.is_Identity else x for x in self.args if x.is_Matrix]\n         coeff = Mul(*scalars)\n \n         return coeff, matrices\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/expressions/matmul.py b/sympy/matrices/expressions/matmul.py\nindex 5b270b9..a026b0f 100644\n--- a/sympy/matrices/expressions/matmul.py\n+++ b/sympy/matrices/expressions/matmul.py\n@@ -44,7 +44,7 @@ class MatMul(MatrixExpr):\n         return result.doit() if expand else result\n     def as_coeff_matrices(self):\n         scalars = [x for x in self.args if not x.is_Matrix]\n-        matrices = [x for x in self.args if x.is_Matrix]\n+        matrices = [Identity(x.shape[0]) if x.is_Identity else x for x in self.args if x.is_Matrix]\n         coeff = Mul(*scalars)\n         return (coeff, matrices)\n     def as_coeff_mmul(self):\n", "normalized_occurrence": 1}
