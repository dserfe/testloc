{"model_name_or_path": "agentless", "instance_id": "django__django-13344", "model_patch": "diff --git a/django/core/handlers/base.py b/django/core/handlers/base.py\nindex ed8f4af..f97ad0a 100644\n--- a/django/core/handlers/base.py\n+++ b/django/core/handlers/base.py\n@@ -145,7 +145,9 @@ class BaseHandler:\n         \"\"\"\n         # Setup default url resolver for this thread.\n         set_urlconf(settings.ROOT_URLCONF)\n-        response = await self._middleware_chain(request)\n+        response = self._middleware_chain(request)\n+        if inspect.iscoroutine(response):\n+            response = await response\n         response._resource_closers.append(request.close)\n         if response.status_code >= 400:\n             await sync_to_async(log_response)(\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/handlers/base.py b/django/core/handlers/base.py\nindex a097649..a2f143e 100644\n--- a/django/core/handlers/base.py\n+++ b/django/core/handlers/base.py\n@@ -79,7 +79,9 @@ class BaseHandler:\n         return response\n     async def get_response_async(self, request):\n         set_urlconf(settings.ROOT_URLCONF)\n-        response = await self._middleware_chain(request)\n+        response = self._middleware_chain(request)\n+        if inspect.iscoroutine(response):\n+            response = await response\n         response._resource_closers.append(request.close)\n         if response.status_code >= 400:\n             await sync_to_async(log_response)('%s: %s', response.reason_phrase, request.path, response=response, request=request)\n", "normalized_occurrence": 1}
