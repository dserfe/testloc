{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11532", "model_patch": "diff --git a/django/core/mail/utils.py b/django/core/mail/utils.py\nindex af5ac38..2e29949 100644\n--- a/django/core/mail/utils.py\n+++ b/django/core/mail/utils.py\n@@ -1,3 +1,4 @@\n+\n \"\"\"\n Email message and email sending related helper functions.\n \"\"\"\n@@ -9,7 +10,12 @@ import socket\n # seconds, which slows down the restart of the server.\n class CachedDnsName:\n     def __str__(self):\n-        return self.get_fqdn()\n+        fqdn = self.get_fqdn()\n+        # Convert to IDNA encoding for non-ASCII hostnames\n+        try:\n+            return fqdn.encode('idna').decode('ascii')\n+        except UnicodeError:\n+            return fqdn\n \n     def get_fqdn(self):\n         if not hasattr(self, '_fqdn'):\n@@ -17,4 +23,4 @@ class CachedDnsName:\n         return self._fqdn\n \n \n-DNS_NAME = CachedDnsName()\n+DNS_NAME = CachedDnsName()\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/mail/utils.py b/django/core/mail/utils.py\nindex f3d6156..7e472e4 100644\n--- a/django/core/mail/utils.py\n+++ b/django/core/mail/utils.py\n@@ -1,7 +1,11 @@\n import socket\n class CachedDnsName:\n     def __str__(self):\n-        return self.get_fqdn()\n+        fqdn = self.get_fqdn()\n+        try:\n+            return fqdn.encode('idna').decode('ascii')\n+        except UnicodeError:\n+            return fqdn\n     def get_fqdn(self):\n         if not hasattr(self, '_fqdn'):\n             self._fqdn = socket.getfqdn()\n", "normalized_occurrence": 1}
