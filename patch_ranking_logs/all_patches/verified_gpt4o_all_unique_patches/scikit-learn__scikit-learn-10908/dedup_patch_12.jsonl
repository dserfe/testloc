{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-10908", "model_patch": "diff --git a/sklearn/feature_extraction/text.py b/sklearn/feature_extraction/text.py\nindex 7e240fc..42d9890 100644\n--- a/sklearn/feature_extraction/text.py\n+++ b/sklearn/feature_extraction/text.py\n@@ -952,6 +952,8 @@ class CountVectorizer(BaseEstimator, VectorizerMixin):\n \n         if not hasattr(self, 'vocabulary_'):\n             self._validate_vocabulary()\n+            if not hasattr(self, 'vocabulary_'):\n+                raise NotFittedError(\"Vocabulary wasn't fitted.\")\n \n         self._check_vocabulary()\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/feature_extraction/text.py b/sklearn/feature_extraction/text.py\nindex 583049b..4cb794c 100644\n--- a/sklearn/feature_extraction/text.py\n+++ b/sklearn/feature_extraction/text.py\n@@ -347,6 +347,8 @@ class CountVectorizer(BaseEstimator, VectorizerMixin):\n             raise ValueError('Iterable over raw text documents expected, string object received.')\n         if not hasattr(self, 'vocabulary_'):\n             self._validate_vocabulary()\n+            if not hasattr(self, 'vocabulary_'):\n+                raise NotFittedError(\"Vocabulary wasn't fitted.\")\n         self._check_vocabulary()\n         _, X = self._count_vocab(raw_documents, fixed_vocab=True)\n         if self.binary:\n", "normalized_occurrence": 1}
