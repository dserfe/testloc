{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-18621", "model_patch": "diff --git a/sympy/matrices/expressions/matexpr.py b/sympy/matrices/expressions/matexpr.py\nindex 4b12c41..ae5abe3 100644\n--- a/sympy/matrices/expressions/matexpr.py\n+++ b/sympy/matrices/expressions/matexpr.py\n@@ -1072,7 +1072,11 @@ class OneMatrix(MatrixExpr):\n         return self\n \n     def _entry(self, i, j, **kwargs):\n-        return S.One\n+        if not (isinstance(i, (int, Integer)) and isinstance(j, (int, Integer))):\n+            raise ValueError(\"Expected integer indices for OneMatrix\")\n+        if 0 <= i < self.rows and 0 <= j < self.cols:\n+            return S.One\n+        raise ValueError(\"Index out of range\")\n \n \n def matrix_symbols(expr):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/expressions/matexpr.py b/sympy/matrices/expressions/matexpr.py\nindex 5cd0b3d..1522558 100644\n--- a/sympy/matrices/expressions/matexpr.py\n+++ b/sympy/matrices/expressions/matexpr.py\n@@ -671,7 +671,11 @@ class OneMatrix(MatrixExpr):\n     def conjugate(self):\n         return self\n     def _entry(self, i, j, **kwargs):\n-        return S.One\n+        if not (isinstance(i, (int, Integer)) and isinstance(j, (int, Integer))):\n+            raise ValueError('Expected integer indices for OneMatrix')\n+        if 0 <= i < self.rows and 0 <= j < self.cols:\n+            return S.One\n+        raise ValueError('Index out of range')\n def matrix_symbols(expr):\n     return [sym for sym in expr.free_symbols if sym.is_Matrix]\n class _LeftRightArgs(object):\n", "normalized_occurrence": 1}
