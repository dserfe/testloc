{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-22840", "model_patch": "diff --git a/sympy/simplify/cse_main.py b/sympy/simplify/cse_main.py\nindex fa99708..1128fc3 100644\n--- a/sympy/simplify/cse_main.py\n+++ b/sympy/simplify/cse_main.py\n@@ -795,6 +795,9 @@ def cse(exprs, symbols=None, optimizations=None, postprocess=None,\n         elif isinstance(e, (SparseMatrix, ImmutableSparseMatrix)):\n             temp.append(Tuple(*e.todok().items()))\n         else:\n+            # Don't treat MatrixSymbols as CSE candidates since we want their elements\n+            if hasattr(e, 'free_symbols'):\n+                e = e.xreplace({s: s for s in e.free_symbols if isinstance(s, MatrixSymbol)})\n             temp.append(e)\n     exprs = temp\n     del temp\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/cse_main.py b/sympy/simplify/cse_main.py\nindex d5cc8d7..283c3e1 100644\n--- a/sympy/simplify/cse_main.py\n+++ b/sympy/simplify/cse_main.py\n@@ -318,6 +318,8 @@ def cse(exprs, symbols=None, optimizations=None, postprocess=None, order='canoni\n         elif isinstance(e, (SparseMatrix, ImmutableSparseMatrix)):\n             temp.append(Tuple(*e.todok().items()))\n         else:\n+            if hasattr(e, 'free_symbols'):\n+                e = e.xreplace({s: s for s in e.free_symbols if isinstance(s, MatrixSymbol)})\n             temp.append(e)\n     exprs = temp\n     del temp\n", "normalized_occurrence": 1}
