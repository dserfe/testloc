{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-23563", "model_patch": "diff --git a/lib/mpl_toolkits/mplot3d/art3d.py b/lib/mpl_toolkits/mplot3d/art3d.py\nindex fa869c7..1408bd7 100644\n--- a/lib/mpl_toolkits/mplot3d/art3d.py\n+++ b/lib/mpl_toolkits/mplot3d/art3d.py\n@@ -166,7 +166,7 @@ class Line3D(lines.Line2D):\n         Keyword arguments are passed onto :func:`~matplotlib.lines.Line2D`.\n         \"\"\"\n         super().__init__([], [], *args, **kwargs)\n-        self._verts3d = xs, ys, zs\n+        self._verts3d = (np.array(xs), np.array(ys), np.array(zs))\n \n     def set_3d_properties(self, zs=0, zdir='z'):\n         xs = self.get_xdata()\n@@ -175,7 +175,10 @@ class Line3D(lines.Line2D):\n         self._verts3d = juggle_axes(xs, ys, zs, zdir)\n         self.stale = True\n \n-    def set_data_3d(self, *args):\n+    def set_data_3d(self, xs, ys, zs):\n+        self.set_xdata(xs)\n+        self.set_ydata(ys)\n+        self.set_3d_properties(zs)\n         \"\"\"\n         Set the x, y and z data\n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/mpl_toolkits/mplot3d/art3d.py b/lib/mpl_toolkits/mplot3d/art3d.py\nindex e39ff0d..07df866 100644\n--- a/lib/mpl_toolkits/mplot3d/art3d.py\n+++ b/lib/mpl_toolkits/mplot3d/art3d.py\n@@ -64,14 +64,17 @@ def text_2d_to_3d(obj, z=0, zdir='z'):\n class Line3D(lines.Line2D):\n     def __init__(self, xs, ys, zs, *args, **kwargs):\n         super().__init__([], [], *args, **kwargs)\n-        self._verts3d = (xs, ys, zs)\n+        self._verts3d = (np.array(xs), np.array(ys), np.array(zs))\n     def set_3d_properties(self, zs=0, zdir='z'):\n         xs = self.get_xdata()\n         ys = self.get_ydata()\n         zs = np.broadcast_to(zs, len(xs))\n         self._verts3d = juggle_axes(xs, ys, zs, zdir)\n         self.stale = True\n-    def set_data_3d(self, *args):\n+    def set_data_3d(self, xs, ys, zs):\n+        self.set_xdata(xs)\n+        self.set_ydata(ys)\n+        self.set_3d_properties(zs)\n         if len(args) == 1:\n             self._verts3d = args[0]\n         else:\n", "normalized_occurrence": 1}
