{"model_name_or_path": "agentless", "instance_id": "django__django-15902", "model_patch": "diff --git a/django/forms/renderers.py b/django/forms/renderers.py\nindex f215e38..3df2d00 100644\n--- a/django/forms/renderers.py\n+++ b/django/forms/renderers.py\n@@ -25,6 +25,10 @@ class BaseRenderer:\n         raise NotImplementedError(\"subclasses must implement get_template()\")\n \n     def render(self, template_name, context, request=None):\n+        if template_name in (settings.FORM_RENDERER.form_template_name, settings.FORM_RENDERER.formset_template_name):\n+            from django.forms.formsets import ManagementForm\n+            if isinstance(context.get('form', None), ManagementForm):\n+                return ''\n         template = self.get_template(template_name)\n         return template.render(context, request=request).strip()\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/renderers.py b/django/forms/renderers.py\nindex 6842533..9bb6cc9 100644\n--- a/django/forms/renderers.py\n+++ b/django/forms/renderers.py\n@@ -15,6 +15,10 @@ class BaseRenderer:\n     def get_template(self, template_name):\n         raise NotImplementedError('subclasses must implement get_template()')\n     def render(self, template_name, context, request=None):\n+        if template_name in (settings.FORM_RENDERER.form_template_name, settings.FORM_RENDERER.formset_template_name):\n+            from django.forms.formsets import ManagementForm\n+            if isinstance(context.get('form', None), ManagementForm):\n+                return ''\n         template = self.get_template(template_name)\n         return template.render(context, request=request).strip()\n class EngineMixin:\n", "normalized_occurrence": 1}
