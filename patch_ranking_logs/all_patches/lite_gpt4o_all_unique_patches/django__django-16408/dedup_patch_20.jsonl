{"model_name_or_path": "agentless", "instance_id": "django__django-16408", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 83f3a12..9989f8c 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -2246,8 +2246,12 @@ class Query(BaseExpression):\n             field_dict = self.select_related\n         for field in fields:\n             d = field_dict\n-            for part in field.split(LOOKUP_SEP):\n-                d = d.setdefault(part, {})\n+            parts = field.split(LOOKUP_SEP)\n+            for part in parts:\n+                if isinstance(d, dict):\n+                    d = d.setdefault(part, {})\n+                else:\n+                    raise ValueError(f\"Cannot combine FilteredRelation and select_related on the same field: {part}\")\n         self.select_related = field_dict\n \n     def add_extra(self, select, select_params, where, params, tables, order_by):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 0b42199..b05f988 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1125,8 +1125,12 @@ class Query(BaseExpression):\n             field_dict = self.select_related\n         for field in fields:\n             d = field_dict\n-            for part in field.split(LOOKUP_SEP):\n-                d = d.setdefault(part, {})\n+            parts = field.split(LOOKUP_SEP)\n+            for part in parts:\n+                if isinstance(d, dict):\n+                    d = d.setdefault(part, {})\n+                else:\n+                    raise ValueError(f'Cannot combine FilteredRelation and select_related on the same field: {part}')\n         self.select_related = field_dict\n     def add_extra(self, select, select_params, where, params, tables, order_by):\n         if select:\n", "normalized_occurrence": 1}
