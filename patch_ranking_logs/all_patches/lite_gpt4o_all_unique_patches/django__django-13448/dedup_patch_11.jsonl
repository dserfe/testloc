{"model_name_or_path": "agentless", "instance_id": "django__django-13448", "model_patch": "diff --git a/django/db/backends/base/creation.py b/django/db/backends/base/creation.py\nindex d751f3a..7e55638 100644\n--- a/django/db/backends/base/creation.py\n+++ b/django/db/backends/base/creation.py\n@@ -58,7 +58,7 @@ class BaseDatabaseCreation:\n         settings.DATABASES[self.connection.alias][\"NAME\"] = test_database_name\n         self.connection.settings_dict[\"NAME\"] = test_database_name\n \n-        if self.connection.settings_dict['TEST']['MIGRATE']:\n+        if self.connection.settings_dict['TEST'].get('MIGRATE', True):\n             # We report migrate messages at one level lower than that\n             # requested. This ensures we don't get flooded with messages during\n             # testing (unless you really ask to be flooded).\n@@ -70,6 +70,17 @@ class BaseDatabaseCreation:\n                 run_syncdb=True,\n             )\n \n+        else:\n+            # Ensure the schema is created when migrations are skipped.\n+            call_command(\n+                'migrate',\n+                verbosity=max(verbosity - 1, 0),\n+                interactive=False,\n+                database=self.connection.alias,\n+                run_syncdb=True,\n+                fake_initial=True,\n+            )\n+\n         # We then serialize the current state of the database into a string\n         # and store it on the connection. This slightly horrific process is so people\n         # who are testing on databases without transactions or who are using\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/base/creation.py b/django/db/backends/base/creation.py\nindex 4f2d479..a4f965a 100644\n--- a/django/db/backends/base/creation.py\n+++ b/django/db/backends/base/creation.py\n@@ -26,8 +26,10 @@ class BaseDatabaseCreation:\n         self.connection.close()\n         settings.DATABASES[self.connection.alias]['NAME'] = test_database_name\n         self.connection.settings_dict['NAME'] = test_database_name\n-        if self.connection.settings_dict['TEST']['MIGRATE']:\n+        if self.connection.settings_dict['TEST'].get('MIGRATE', True):\n             call_command('migrate', verbosity=max(verbosity - 1, 0), interactive=False, database=self.connection.alias, run_syncdb=True)\n+        else:\n+            call_command('migrate', verbosity=max(verbosity - 1, 0), interactive=False, database=self.connection.alias, run_syncdb=True, fake_initial=True)\n         if serialize:\n             self.connection._test_serialized_contents = self.serialize_db_to_string()\n         call_command('createcachetable', database=self.connection.alias)\n", "normalized_occurrence": 5}
