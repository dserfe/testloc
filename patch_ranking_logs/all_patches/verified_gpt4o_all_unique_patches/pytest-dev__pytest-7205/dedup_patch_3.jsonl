{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7205", "model_patch": "diff --git a/src/_pytest/setuponly.py b/src/_pytest/setuponly.py\nindex 7d5414b..c4f5f06 100644\n--- a/src/_pytest/setuponly.py\n+++ b/src/_pytest/setuponly.py\n@@ -34,6 +34,8 @@ def pytest_fixture_setup(fixturedef, request):\n         _show_fixture_action(fixturedef, \"SETUP\")\n \n \n+from _pytest._io.saferepr import saferepr\n+\n def pytest_fixture_post_finalizer(fixturedef) -> None:\n     if fixturedef.cached_result is not None:\n         config = fixturedef._fixturemanager.config\n@@ -66,7 +68,7 @@ def _show_fixture_action(fixturedef, msg):\n             tw.write(\" (fixtures used: {})\".format(\", \".join(deps)))\n \n     if hasattr(fixturedef, \"cached_param\"):\n-        tw.write(\"[{}]\".format(fixturedef.cached_param))\n+        tw.write(\"[{}]\".format(saferepr(fixturedef.cached_param)))\n \n     tw.flush()\n \n@@ -77,4 +79,4 @@ def _show_fixture_action(fixturedef, msg):\n @pytest.hookimpl(tryfirst=True)\n def pytest_cmdline_main(config):\n     if config.option.setuponly:\n-        config.option.setupshow = True\n+        config.option.setupshow = True\n", "occurrence": 2, "normalized_patch": "diff --git a/src/_pytest/setuponly.py b/src/_pytest/setuponly.py\nindex a37fde3..0d054c1 100644\n--- a/src/_pytest/setuponly.py\n+++ b/src/_pytest/setuponly.py\n@@ -16,6 +16,7 @@ def pytest_fixture_setup(fixturedef, request):\n             else:\n                 fixturedef.cached_param = request.param\n         _show_fixture_action(fixturedef, 'SETUP')\n+from _pytest._io.saferepr import saferepr\n def pytest_fixture_post_finalizer(fixturedef) -> None:\n     if fixturedef.cached_result is not None:\n         config = fixturedef._fixturemanager.config\n@@ -37,7 +38,7 @@ def _show_fixture_action(fixturedef, msg):\n         if deps:\n             tw.write(' (fixtures used: {})'.format(', '.join(deps)))\n     if hasattr(fixturedef, 'cached_param'):\n-        tw.write('[{}]'.format(fixturedef.cached_param))\n+        tw.write('[{}]'.format(saferepr(fixturedef.cached_param)))\n     tw.flush()\n     if capman:\n         capman.resume_global_capture()\n", "normalized_occurrence": 2}
