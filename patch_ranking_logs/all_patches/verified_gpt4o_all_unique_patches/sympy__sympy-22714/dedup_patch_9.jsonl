{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-22714", "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex b7f7a47..741c77d 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -162,7 +162,7 @@ class Point(GeometryEntity):\n \n         # Turn any Floats into rationals and simplify\n         # any expressions before we instantiate\n-        if evaluate:\n+        if evaluate is None or evaluate:\n             coords = coords.xreplace({\n                 f: simplify(nsimplify(f, rational=True))\n                  for f in coords.atoms(Float)})\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex 4d7ea73..b992221 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -50,7 +50,7 @@ class Point(GeometryEntity):\n         if not all((isinstance(a, Expr) for a in coords)):\n             raise TypeError('Coordinates must be valid SymPy expressions.')\n         coords = coords[:dim] + (S.Zero,) * (dim - len(coords))\n-        if evaluate:\n+        if evaluate is None or evaluate:\n             coords = coords.xreplace({f: simplify(nsimplify(f, rational=True)) for f in coords.atoms(Float)})\n         if len(coords) == 2:\n             kwargs['_nocheck'] = True\n", "normalized_occurrence": 1}
