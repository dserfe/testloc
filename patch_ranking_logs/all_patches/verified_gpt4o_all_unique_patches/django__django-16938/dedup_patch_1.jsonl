{"model_name_or_path": "agentless", "instance_id": "django__django-16938", "model_patch": "diff --git a/django/db/models/query_utils.py b/django/db/models/query_utils.py\nindex 4465765..0f11f4c 100644\n--- a/django/db/models/query_utils.py\n+++ b/django/db/models/query_utils.py\n@@ -342,12 +342,12 @@ def select_related_descend(field, restricted, requested, select_mask, reverse=Fa\n         restricted\n         and select_mask\n         and field.name in requested\n-        and field not in select_mask\n     ):\n-        raise FieldError(\n-            f\"Field {field.model._meta.object_name}.{field.name} cannot be both \"\n-            \"deferred and traversed using select_related at the same time.\"\n-        )\n+        if field not in select_mask:\n+            raise FieldError(\n+                f\"Field {field.model._meta.object_name}.{field.name} cannot be both \"\n+                \"deferred and traversed using select_related at the same time.\"\n+            )\n     return True\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query_utils.py b/django/db/models/query_utils.py\nindex 0f80339..14b7d18 100644\n--- a/django/db/models/query_utils.py\n+++ b/django/db/models/query_utils.py\n@@ -195,8 +195,9 @@ def select_related_descend(field, restricted, requested, select_mask, reverse=Fa\n             return False\n     if not restricted and field.null:\n         return False\n-    if restricted and select_mask and (field.name in requested) and (field not in select_mask):\n-        raise FieldError(f'Field {field.model._meta.object_name}.{field.name} cannot be both deferred and traversed using select_related at the same time.')\n+    if restricted and select_mask and (field.name in requested):\n+        if field not in select_mask:\n+            raise FieldError(f'Field {field.model._meta.object_name}.{field.name} cannot be both deferred and traversed using select_related at the same time.')\n     return True\n def refs_expression(lookup_parts, annotations):\n     for n in range(1, len(lookup_parts) + 1):\n", "normalized_occurrence": 1}
