{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15268", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex d7bf75e..2f89ec0 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -528,6 +528,18 @@ class AlterTogetherOptionOperation(ModelOptionOperation):\n     def migration_name_fragment(self):\n         return 'alter_%s_%s' % (self.name_lower, self.option_name)\n \n+    def reduce(self, operation, app_label=None):\n+        if (\n+            isinstance(operation, self.__class__) and\n+            self.name_lower == operation.name_lower and\n+            self.name == operation.name\n+        ):\n+            # Handle sequential AlterTogetherOptionOperations on same model\n+            return [\n+                operation,\n+            ]\n+        return super().reduce(operation, app_label)\n+\n \n class AlterUniqueTogether(AlterTogetherOptionOperation):\n     \"\"\"\n", "occurrence": 1, "normalized_patch": "--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n+    def reduce(self, operation, app_label=None):\n+        if isinstance(operation, self.__class__) and self.name_lower == operation.name_lower and (self.name == operation.name):\n+            return [operation]\n+        return super().reduce(operation, app_label)", "normalized_occurrence": 1}
