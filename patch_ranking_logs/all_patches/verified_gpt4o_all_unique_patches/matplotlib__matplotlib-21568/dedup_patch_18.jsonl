{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-21568", "model_patch": "diff --git a/lib/matplotlib/dates.py b/lib/matplotlib/dates.py\nindex f565bc8..7a96d23 100644\n--- a/lib/matplotlib/dates.py\n+++ b/lib/matplotlib/dates.py\n@@ -593,7 +593,7 @@ def drange(dstart, dend, delta):\n \n def _wrap_in_tex(text):\n     p = r'([a-zA-Z]+)'\n-    ret_text = re.sub(p, r'}$\\1$\\\\mathdefault{', text)\n+    ret_text = re.sub(p, r'\\\\mathrm{\\1}', text)\n \n     # Braces ensure dashes are not spaced like binary operators.\n     ret_text = '$\\\\mathdefault{'+ret_text.replace('-', '{-}')+'}$'\n@@ -631,7 +631,9 @@ class DateFormatter(ticker.Formatter):\n \n     def __call__(self, x, pos=0):\n         result = num2date(x, self.tz).strftime(self.fmt)\n-        return _wrap_in_tex(result) if self._usetex else result\n+        if self._usetex:\n+            result = _wrap_in_tex(result)\n+        return result\n \n     def set_tzinfo(self, tz):\n         self.tz = tz\n@@ -843,9 +845,8 @@ class ConciseDateFormatter(ticker.Formatter):\n                 self.offset_string = _wrap_in_tex(self.offset_string)\n \n         if self._usetex:\n-            return [_wrap_in_tex(l) for l in labels]\n-        else:\n-            return labels\n+            labels = [_wrap_in_tex(l) for l in labels]\n+        return labels\n \n     def get_offset(self):\n         return self.offset_string\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/dates.py b/lib/matplotlib/dates.py\nindex 71de92e..a7f563e 100644\n--- a/lib/matplotlib/dates.py\n+++ b/lib/matplotlib/dates.py\n@@ -140,7 +140,7 @@ def drange(dstart, dend, delta):\n     return np.linspace(f1, f2, num + 1)\n def _wrap_in_tex(text):\n     p = '([a-zA-Z]+)'\n-    ret_text = re.sub(p, '}$\\\\1$\\\\\\\\mathdefault{', text)\n+    ret_text = re.sub(p, '\\\\\\\\mathrm{\\\\1}', text)\n     ret_text = '$\\\\mathdefault{' + ret_text.replace('-', '{-}') + '}$'\n     ret_text = ret_text.replace('$\\\\mathdefault{}$', '')\n     return ret_text\n@@ -153,7 +153,9 @@ class DateFormatter(ticker.Formatter):\n         self._usetex = usetex if usetex is not None else mpl.rcParams['text.usetex']\n     def __call__(self, x, pos=0):\n         result = num2date(x, self.tz).strftime(self.fmt)\n-        return _wrap_in_tex(result) if self._usetex else result\n+        if self._usetex:\n+            result = _wrap_in_tex(result)\n+        return result\n     def set_tzinfo(self, tz):\n         self.tz = tz\n class ConciseDateFormatter(ticker.Formatter):\n@@ -225,9 +227,8 @@ class ConciseDateFormatter(ticker.Formatter):\n             if self._usetex:\n                 self.offset_string = _wrap_in_tex(self.offset_string)\n         if self._usetex:\n-            return [_wrap_in_tex(l) for l in labels]\n-        else:\n-            return labels\n+            labels = [_wrap_in_tex(l) for l in labels]\n+        return labels\n     def get_offset(self):\n         return self.offset_string\n     def format_data_short(self, value):\n", "normalized_occurrence": 1}
