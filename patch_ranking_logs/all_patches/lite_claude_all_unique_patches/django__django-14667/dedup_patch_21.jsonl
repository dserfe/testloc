{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14667", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 8635bf4..7fe4c20 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -2085,8 +2085,11 @@ class Query(BaseExpression):\n             # Add to existing deferred names.\n             self.deferred_loading = existing.union(field_names), True\n         else:\n-            # Remove names from the set of any existing \"immediate load\" names.\n+            # Remove the deferred names from the set of immediate load fields\n             self.deferred_loading = existing.difference(field_names), False\n+            # If all immediate load fields are removed, switch to deferred mode\n+            if not self.deferred_loading[0]:\n+                self.deferred_loading = frozenset(field_names), True\n \n     def add_immediate_loading(self, field_names):\n         \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex a07bc15..eec6706 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1141,6 +1141,8 @@ class Query(BaseExpression):\n             self.deferred_loading = (existing.union(field_names), True)\n         else:\n             self.deferred_loading = (existing.difference(field_names), False)\n+            if not self.deferred_loading[0]:\n+                self.deferred_loading = (frozenset(field_names), True)\n     def add_immediate_loading(self, field_names):\n         existing, defer = self.deferred_loading\n         field_names = set(field_names)\n", "normalized_occurrence": 2}
