{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15213", "model_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 626b8ab..f8c2312 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -979,7 +979,16 @@ class ExpressionWrapper(SQLiteNumericMixin, Expression):\n         return super().get_group_by_cols()\n \n     def as_sql(self, compiler, connection):\n-        return compiler.compile(self.expression)\n+        if hasattr(self.expression, 'resolve_expression'):\n+            return compiler.compile(self.expression)\n+        # Handle Q objects by converting to a Case expression\n+        from django.db.models import Case, When, Value\n+        case = Case(\n+            When(self.expression, then=Value(1)),\n+            default=Value(0),\n+            output_field=self.output_field,\n+        )\n+        return compiler.compile(case)\n \n     def __repr__(self):\n         return \"{}({})\".format(self.__class__.__name__, self.expression)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 7926e3e..f3f9743 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -590,7 +590,11 @@ class ExpressionWrapper(SQLiteNumericMixin, Expression):\n             return expression.get_group_by_cols(alias=alias)\n         return super().get_group_by_cols()\n     def as_sql(self, compiler, connection):\n-        return compiler.compile(self.expression)\n+        if hasattr(self.expression, 'resolve_expression'):\n+            return compiler.compile(self.expression)\n+        from django.db.models import Case, When, Value\n+        case = Case(When(self.expression, then=Value(1)), default=Value(0), output_field=self.output_field)\n+        return compiler.compile(case)\n     def __repr__(self):\n         return '{}({})'.format(self.__class__.__name__, self.expression)\n class When(Expression):\n", "normalized_occurrence": 1}
