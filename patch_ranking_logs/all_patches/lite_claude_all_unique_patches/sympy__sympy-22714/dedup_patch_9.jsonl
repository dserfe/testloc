{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-22714", "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex b7f7a47..b0bafe2 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -160,12 +160,16 @@ class Point(GeometryEntity):\n         # pad with zeros appropriately\n         coords = coords[:dim] + (S.Zero,)*(dim - len(coords))\n \n-        # Turn any Floats into rationals and simplify\n-        # any expressions before we instantiate\n+        # Always convert Floats to rationals to ensure proper number handling\n+        coords = coords.xreplace({\n+            f: nsimplify(f, rational=True)\n+            for f in coords.atoms(Float)})\n+        \n+        # Only simplify if evaluate is True\n         if evaluate:\n             coords = coords.xreplace({\n-                f: simplify(nsimplify(f, rational=True))\n-                 for f in coords.atoms(Float)})\n+                f: simplify(f)\n+                for f in coords})\n \n         # return 2D or 3D instances\n         if len(coords) == 2:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex 4d7ea73..f8d0ab7 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -50,8 +50,9 @@ class Point(GeometryEntity):\n         if not all((isinstance(a, Expr) for a in coords)):\n             raise TypeError('Coordinates must be valid SymPy expressions.')\n         coords = coords[:dim] + (S.Zero,) * (dim - len(coords))\n+        coords = coords.xreplace({f: nsimplify(f, rational=True) for f in coords.atoms(Float)})\n         if evaluate:\n-            coords = coords.xreplace({f: simplify(nsimplify(f, rational=True)) for f in coords.atoms(Float)})\n+            coords = coords.xreplace({f: simplify(f) for f in coords})\n         if len(coords) == 2:\n             kwargs['_nocheck'] = True\n             return Point2D(*coords, **kwargs)\n", "normalized_occurrence": 1}
