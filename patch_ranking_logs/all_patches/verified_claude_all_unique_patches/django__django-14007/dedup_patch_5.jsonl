{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14007", "model_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex c552973..3ce819c 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -2487,6 +2487,15 @@ class AutoFieldMixin:\n             value = connection.ops.validate_autopk_value(value)\n         return value\n \n+    def convert_returned_value(self, value, expression, connection):\n+        \"\"\"\n+        Convert the value returned from the database when the field is an auto-generated primary key.\n+        This ensures that from_db_value is called consistently for all query operations including inserts.\n+        \"\"\"\n+        if hasattr(self, 'from_db_value'):\n+            return self.from_db_value(value, expression, connection)\n+        return value\n+\n     def contribute_to_class(self, cls, name, **kwargs):\n         assert not cls._meta.auto_field, (\n             \"Model %s can't have more than one auto-generated field.\"\n", "occurrence": 1, "normalized_patch": "--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n+    def convert_returned_value(self, value, expression, connection):\n+        if hasattr(self, 'from_db_value'):\n+            return self.from_db_value(value, expression, connection)\n+        return value", "normalized_occurrence": 7}
