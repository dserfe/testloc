{"model_name_or_path": "agentless_claude", "instance_id": "psf__requests-6028", "model_patch": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex d47134b..d6ced05 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -386,9 +386,13 @@ class HTTPAdapter(BaseAdapter):\n         headers = {}\n         username, password = get_auth_from_url(proxy)\n \n-        if username:\n-            headers['Proxy-Authorization'] = _basic_auth_str(username,\n-                                                             password)\n+        if username and password:\n+            # Ensure both username and password are present before setting auth header\n+            auth = f'{username}:{password}'\n+            # Use proper encoding that works across Python versions\n+            auth_bytes = auth.encode('utf-8')\n+            auth_b64 = base64.b64encode(auth_bytes).decode('ascii')\n+            headers['Proxy-Authorization'] = f'Basic {auth_b64}'\n \n         return headers\n \n", "occurrence": 1, "normalized_patch": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex 8bf110e..e6fc476 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -156,8 +156,11 @@ class HTTPAdapter(BaseAdapter):\n     def proxy_headers(self, proxy):\n         headers = {}\n         username, password = get_auth_from_url(proxy)\n-        if username:\n-            headers['Proxy-Authorization'] = _basic_auth_str(username, password)\n+        if username and password:\n+            auth = f'{username}:{password}'\n+            auth_bytes = auth.encode('utf-8')\n+            auth_b64 = base64.b64encode(auth_bytes).decode('ascii')\n+            headers['Proxy-Authorization'] = f'Basic {auth_b64}'\n         return headers\n     def send(self, request, stream=False, timeout=None, verify=True, cert=None, proxies=None):\n         try:\n", "normalized_occurrence": 1}
