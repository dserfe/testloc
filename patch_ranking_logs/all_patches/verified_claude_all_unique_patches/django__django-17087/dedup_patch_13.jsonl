{"model_name_or_path": "agentless_claude", "instance_id": "django__django-17087", "model_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex 941a5ed..60cbe99 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -105,8 +105,14 @@ class DeconstructableSerializer(BaseSerializer):\n             imports = {\"from django.db import models\"}\n             name = \"models.%s\" % name\n         else:\n-            imports = {\"import %s\" % module}\n-            name = path\n+            # Check if we're dealing with a nested class path\n+            if '.models.' in module:\n+                # Keep the full path for nested classes\n+                imports = {\"import %s\" % module.rsplit('.models.', 1)[0]}\n+                name = path\n+            else:\n+                imports = {\"import %s\" % module}\n+                name = path\n         return name, imports\n \n     def serialize(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex bd46ec1..c48505d 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -74,6 +74,9 @@ class DeconstructableSerializer(BaseSerializer):\n         if module == 'django.db.models':\n             imports = {'from django.db import models'}\n             name = 'models.%s' % name\n+        elif '.models.' in module:\n+            imports = {'import %s' % module.rsplit('.models.', 1)[0]}\n+            name = path\n         else:\n             imports = {'import %s' % module}\n             name = path\n", "normalized_occurrence": 1}
