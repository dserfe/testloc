{"model_name_or_path": "agentless", "instance_id": "django__django-12858", "model_patch": "diff --git a/django/db/models/options.py b/django/db/models/options.py\nindex 1540a78..f7c7863 100644\n--- a/django/db/models/options.py\n+++ b/django/db/models/options.py\n@@ -218,7 +218,7 @@ class Options:\n         return new_objs\n \n     def _prepare(self, model):\n-        if self.order_with_respect_to:\n+        if self.order_with_respect_to or any('__' in field for field in self.ordering):\n             # The app registry will not be ready at this point, so we cannot\n             # use get_field().\n             query = self.order_with_respect_to\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/options.py b/django/db/models/options.py\nindex 63c14d2..9446670 100644\n--- a/django/db/models/options.py\n+++ b/django/db/models/options.py\n@@ -134,7 +134,7 @@ class Options:\n             new_objs.append(obj)\n         return new_objs\n     def _prepare(self, model):\n-        if self.order_with_respect_to:\n+        if self.order_with_respect_to or any(('__' in field for field in self.ordering)):\n             query = self.order_with_respect_to\n             try:\n                 self.order_with_respect_to = next((f for f in self._get_fields(reverse=False) if f.name == query or f.attname == query))\n", "normalized_occurrence": 1}
