{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-24562", "model_patch": "diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\nindex 1c28b44..776d6c2 100644\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -1609,9 +1609,9 @@ class Rational(Number):\n                     pq = p.rsplit('/', 1)\n                     if len(pq) == 2:\n                         p, q = pq\n-                        fp = fractions.Fraction(p)\n-                        fq = fractions.Fraction(q)\n-                        p = fp/fq\n+                        p = fractions.Fraction(p)\n+                        q = fractions.Fraction(q)\n+                        return Rational(p.numerator, q.denominator, 1)\n                     try:\n                         p = fractions.Fraction(p)\n                     except ValueError:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\nindex c0e7188..96e93b0 100644\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -1395,9 +1395,9 @@ class Rational(Number):\n                     pq = p.rsplit('/', 1)\n                     if len(pq) == 2:\n                         p, q = pq\n-                        fp = fractions.Fraction(p)\n-                        fq = fractions.Fraction(q)\n-                        p = fp / fq\n+                        p = fractions.Fraction(p)\n+                        q = fractions.Fraction(q)\n+                        return Rational(p.numerator, q.denominator, 1)\n                     try:\n                         p = fractions.Fraction(p)\n                     except ValueError:\n", "normalized_occurrence": 1}
