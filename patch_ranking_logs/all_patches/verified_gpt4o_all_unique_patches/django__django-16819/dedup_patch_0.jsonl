{"model_name_or_path": "agentless", "instance_id": "django__django-16819", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 7088737..9e41df9 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -857,6 +857,16 @@ class AddIndex(IndexOperation):\n             self.model_name,\n         )\n \n+    def reduce(self, operation, app_label):\n+        if isinstance(operation, AddIndex) and self.model_name_lower == operation.model_name_lower and self.name == operation.index.name:\n+            return []\n+        return super().reduce(operation, app_label)\n+\n+    def reduce(self, operation, app_label):\n+        if isinstance(operation, RemoveIndex) and self.model_name_lower == operation.model_name_lower and self.index.name == operation.name:\n+            return []\n+        return super().reduce(operation, app_label)\n+\n     @property\n     def migration_name_fragment(self):\n         return \"%s_%s\" % (self.model_name_lower, self.index.name.lower())\n@@ -900,6 +910,16 @@ class RemoveIndex(IndexOperation):\n     def describe(self):\n         return \"Remove index %s from %s\" % (self.name, self.model_name)\n \n+    def reduce(self, operation, app_label):\n+        if isinstance(operation, AddIndex) and self.model_name_lower == operation.model_name_lower and self.name == operation.index.name:\n+            return []\n+        return super().reduce(operation, app_label)\n+\n+    def reduce(self, operation, app_label):\n+        if isinstance(operation, RemoveIndex) and self.model_name_lower == operation.model_name_lower and self.index.name == operation.name:\n+            return []\n+        return super().reduce(operation, app_label)\n+\n     @property\n     def migration_name_fragment(self):\n         return \"remove_%s_%s\" % (self.model_name_lower, self.name.lower())\n", "occurrence": 1, "normalized_patch": "--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n+    def reduce(self, operation, app_label):\n+        if isinstance(operation, AddIndex) and self.model_name_lower == operation.model_name_lower and (self.name == operation.index.name):\n+            return []\n+        return super().reduce(operation, app_label)\n+    def reduce(self, operation, app_label):\n+        if isinstance(operation, RemoveIndex) and self.model_name_lower == operation.model_name_lower and (self.index.name == operation.name):\n+            return []\n+        return super().reduce(operation, app_label)\n+    def reduce(self, operation, app_label):\n+        if isinstance(operation, AddIndex) and self.model_name_lower == operation.model_name_lower and (self.name == operation.index.name):\n+            return []\n+        return super().reduce(operation, app_label)\n+    def reduce(self, operation, app_label):\n+        if isinstance(operation, RemoveIndex) and self.model_name_lower == operation.model_name_lower and (self.index.name == operation.name):\n+            return []\n+        return super().reduce(operation, app_label)", "normalized_occurrence": 1}
