{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-23314", "model_patch": "diff --git a/lib/mpl_toolkits/mplot3d/axes3d.py b/lib/mpl_toolkits/mplot3d/axes3d.py\nindex 392f89b..d909e56 100644\n--- a/lib/mpl_toolkits/mplot3d/axes3d.py\n+++ b/lib/mpl_toolkits/mplot3d/axes3d.py\n@@ -1145,6 +1145,24 @@ class Axes3D(Axes):\n         self._frameon = bool(b)\n         self.stale = True\n \n+    def set_visible(self, b):\n+        \"\"\"\n+        Set the artist's visibility.\n+\n+        Parameters\n+        ----------\n+        b : bool\n+        \"\"\"\n+        # Call the base class\n+        super().set_visible(b)\n+        # Make all contained artists invisible too\n+        for artist in self._children:\n+            artist.set_visible(b)\n+        # Special handling for axis visibility\n+        if hasattr(self, '_axis3don'):\n+            self._axis3don = b\n+        self.stale = True\n+\n     @_api.rename_parameter(\"3.5\", \"b\", \"visible\")\n     def grid(self, visible=True, **kwargs):\n         \"\"\"\n", "occurrence": 1, "normalized_patch": "--- a/lib/mpl_toolkits/mplot3d/axes3d.py\n+++ b/lib/mpl_toolkits/mplot3d/axes3d.py\n+    def set_visible(self, b):\n+        \"\"\"\n+        Set the artist's visibility.\n+\n+        Parameters\n+        ----------\n+        b : bool\n+        \"\"\"\n+        super().set_visible(b)\n+        for artist in self._children:\n+            artist.set_visible(b)\n+        if hasattr(self, '_axis3don'):\n+            self._axis3don = b\n+        self.stale = True\n+", "normalized_occurrence": 1}
