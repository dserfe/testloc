{"model_name_or_path": "agentless_claude", "instance_id": "mwaskom__seaborn-2848", "model_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 21c0562..2a1b00e 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -1565,10 +1565,19 @@ class PairGrid(Grid):\n         else:\n             hue = data.get(self._hue_var)\n \n+        # Only set up default hue parameters if hue is not explicitly provided\n         if \"hue\" not in kwargs:\n             kwargs.update({\n-                \"hue\": hue, \"hue_order\": self._hue_order, \"palette\": self._orig_palette,\n+                \"hue\": hue,\n+                \"hue_order\": self._hue_order,\n+                \"palette\": self._orig_palette,\n             })\n+        else:\n+            # If hue is provided via map(), ensure we don't override its values\n+            if self._hue_order is not None:\n+                kwargs.setdefault(\"hue_order\", self._hue_order)\n+            if self._orig_palette is not None:\n+                kwargs.setdefault(\"palette\", self._orig_palette)\n         func(x=x, y=y, **kwargs)\n \n         self._update_legend_data(ax)\n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 0807052..79a6ebf 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -749,6 +749,11 @@ class PairGrid(Grid):\n             hue = data.get(self._hue_var)\n         if 'hue' not in kwargs:\n             kwargs.update({'hue': hue, 'hue_order': self._hue_order, 'palette': self._orig_palette})\n+        else:\n+            if self._hue_order is not None:\n+                kwargs.setdefault('hue_order', self._hue_order)\n+            if self._orig_palette is not None:\n+                kwargs.setdefault('palette', self._orig_palette)\n         func(x=x, y=y, **kwargs)\n         self._update_legend_data(ax)\n     def _plot_bivariate_iter_hue(self, x_var, y_var, ax, func, **kwargs):\n", "normalized_occurrence": 1}
