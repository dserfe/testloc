{"model_name_or_path": "agentless", "instance_id": "django__django-10554", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex ab425fb..86fb60f 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -353,8 +353,11 @@ class SQLCompiler:\n                     elif col_alias:\n                         continue\n                     if src == sel_expr:\n-                        resolved.set_source_expressions([RawSQL('%d' % (idx + 1), ())])\n-                        break\n+                        # Ensure the order by references the correct position for UNION queries\n+                        if not self.query.combinator:\n+                            resolved.set_source_expressions([RawSQL('%d' % (idx + 1), ())])\n+                        else:\n+                            resolved.set_source_expressions([RawSQL('%s' % self.connection.ops.quote_name(col_alias), ())])\n                 else:\n                     raise DatabaseError('ORDER BY term does not match any column in the result set.')\n             sql, params = self.compile(resolved)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 0a7444d..859bc42 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -189,8 +189,10 @@ class SQLCompiler:\n                     elif col_alias:\n                         continue\n                     if src == sel_expr:\n-                        resolved.set_source_expressions([RawSQL('%d' % (idx + 1), ())])\n-                        break\n+                        if not self.query.combinator:\n+                            resolved.set_source_expressions([RawSQL('%d' % (idx + 1), ())])\n+                        else:\n+                            resolved.set_source_expressions([RawSQL('%s' % self.connection.ops.quote_name(col_alias), ())])\n                 else:\n                     raise DatabaseError('ORDER BY term does not match any column in the result set.')\n             sql, params = self.compile(resolved)\n", "normalized_occurrence": 1}
