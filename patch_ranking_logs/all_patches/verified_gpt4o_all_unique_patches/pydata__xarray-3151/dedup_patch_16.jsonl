{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-3151", "model_patch": "diff --git a/xarray/core/combine.py b/xarray/core/combine.py\nindex fe3f23b..6dd74a8 100644\n--- a/xarray/core/combine.py\n+++ b/xarray/core/combine.py\n@@ -504,11 +504,12 @@ def combine_by_coords(datasets, compat='no_conflicts', data_vars='all',\n         for dim in concatenated.dims:\n             if dim in concatenated:\n                 indexes = concatenated.indexes.get(dim)\n-                if not (indexes.is_monotonic_increasing\n-                        or indexes.is_monotonic_decreasing):\n-                    raise ValueError(\"Resulting object does not have monotonic\"\n-                                     \" global indexes along dimension {}\"\n-                                     .format(dim))\n+                if not all(index.equals(indexes[0]) for index in indexes[1:]):\n+                    if not (indexes.is_monotonic_increasing\n+                            or indexes.is_monotonic_decreasing):\n+                        raise ValueError(\"Resulting object does not have monotonic\"\n+                                         \" global indexes along dimension {}\"\n+                                         .format(dim))\n         concatenated_grouped_by_data_vars.append(concatenated)\n \n     return merge(concatenated_grouped_by_data_vars, compat=compat,\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/combine.py b/xarray/core/combine.py\nindex b8f5640..90112ed 100644\n--- a/xarray/core/combine.py\n+++ b/xarray/core/combine.py\n@@ -118,8 +118,9 @@ def combine_by_coords(datasets, compat='no_conflicts', data_vars='all', coords='\n         for dim in concatenated.dims:\n             if dim in concatenated:\n                 indexes = concatenated.indexes.get(dim)\n-                if not (indexes.is_monotonic_increasing or indexes.is_monotonic_decreasing):\n-                    raise ValueError('Resulting object does not have monotonic global indexes along dimension {}'.format(dim))\n+                if not all((index.equals(indexes[0]) for index in indexes[1:])):\n+                    if not (indexes.is_monotonic_increasing or indexes.is_monotonic_decreasing):\n+                        raise ValueError('Resulting object does not have monotonic global indexes along dimension {}'.format(dim))\n         concatenated_grouped_by_data_vars.append(concatenated)\n     return merge(concatenated_grouped_by_data_vars, compat=compat, fill_value=fill_value)\n _CONCAT_DIM_DEFAULT = '__infer_concat_dim__'\n", "normalized_occurrence": 2}
