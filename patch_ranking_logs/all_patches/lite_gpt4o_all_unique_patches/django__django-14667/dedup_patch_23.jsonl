{"model_name_or_path": "agentless", "instance_id": "django__django-14667", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 5d0565e..e578ce8 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -1242,13 +1242,16 @@ class QuerySet:\n             if field in self.query._filtered_relations:\n                 raise ValueError('only() is not supported with FilteredRelation.')\n         clone = self._chain()\n+        clone.query.clear_deferred_loading()\n         clone.query.add_immediate_loading(fields)\n+        clone.query.add_deferred_loading(fields, clear_only=True)\n         return clone\n \n     def using(self, alias):\n         \"\"\"Select which database this QuerySet should execute against.\"\"\"\n         clone = self._chain()\n         clone._db = alias\n+        clone.query.add_deferred_loading(fields, clear_only=True)\n         return clone\n \n     ###################################\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 0052c9e..ff33079 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -754,11 +754,14 @@ class QuerySet:\n             if field in self.query._filtered_relations:\n                 raise ValueError('only() is not supported with FilteredRelation.')\n         clone = self._chain()\n+        clone.query.clear_deferred_loading()\n         clone.query.add_immediate_loading(fields)\n+        clone.query.add_deferred_loading(fields, clear_only=True)\n         return clone\n     def using(self, alias):\n         clone = self._chain()\n         clone._db = alias\n+        clone.query.add_deferred_loading(fields, clear_only=True)\n         return clone\n     @property\n     def ordered(self):\n", "normalized_occurrence": 1}
