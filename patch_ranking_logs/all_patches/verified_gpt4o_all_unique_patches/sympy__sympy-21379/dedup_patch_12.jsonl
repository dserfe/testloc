{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-21379", "model_patch": "diff --git a/sympy/functions/elementary/piecewise.py b/sympy/functions/elementary/piecewise.py\nindex 218f537..2ab8cab 100644\n--- a/sympy/functions/elementary/piecewise.py\n+++ b/sympy/functions/elementary/piecewise.py\n@@ -812,11 +812,15 @@ class Piecewise(Function):\n         # True condition\n         args = list(self.args)\n         args_exist = False\n+        assumptions = old.assumptions0 if hasattr(old, 'assumptions0') else {}\n         for i, (e, c) in enumerate(args):\n             c = c._subs(old, new)\n             if c != False:\n                 args_exist = True\n                 e = e._subs(old, new)\n+                # Preserve assumptions after substitution\n+                if assumptions and hasattr(e, 'assumptions0'):\n+                    e.assumptions0.update(assumptions)\n             args[i] = (e, c)\n             if c == True:\n                 break\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/piecewise.py b/sympy/functions/elementary/piecewise.py\nindex e1c61a2..f5b79b6 100644\n--- a/sympy/functions/elementary/piecewise.py\n+++ b/sympy/functions/elementary/piecewise.py\n@@ -443,11 +443,14 @@ class Piecewise(Function):\n     def _eval_subs(self, old, new):\n         args = list(self.args)\n         args_exist = False\n+        assumptions = old.assumptions0 if hasattr(old, 'assumptions0') else {}\n         for i, (e, c) in enumerate(args):\n             c = c._subs(old, new)\n             if c != False:\n                 args_exist = True\n                 e = e._subs(old, new)\n+                if assumptions and hasattr(e, 'assumptions0'):\n+                    e.assumptions0.update(assumptions)\n             args[i] = (e, c)\n             if c == True:\n                 break\n", "normalized_occurrence": 1}
