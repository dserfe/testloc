{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-14317", "model_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 408ff45..26a734e 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1854,7 +1854,40 @@ class LatexPrinter(Printer):\n \n     def _print_Poly(self, poly):\n         cls = poly.__class__.__name__\n-        expr = self._print(poly.as_expr())\n+        terms = poly.terms()\n+        terms_tex = []\n+        for monom, coeff in terms:\n+            if coeff == 0:\n+                continue\n+            \n+            # Handle the coefficient\n+            if coeff == 1 and sum(monom) > 0:\n+                coeff_tex = ''\n+            elif coeff == -1 and sum(monom) > 0:\n+                coeff_tex = '-'\n+            else:\n+                coeff_tex = self._print(coeff)\n+                if coeff_tex.startswith('-'):\n+                    coeff_tex = coeff_tex\n+                else:\n+                    coeff_tex = '+' + coeff_tex if terms_tex else coeff_tex\n+\n+            # Handle the monomial\n+            monom_tex = []\n+            for val, gen in zip(monom, poly.gens):\n+                if val == 0:\n+                    continue\n+                elif val == 1:\n+                    monom_tex.append(self._print(gen))\n+                else:\n+                    monom_tex.append('%s^{%d}' % (self._print(gen), val))\n+            \n+            if not monom_tex:\n+                terms_tex.append(coeff_tex)\n+            else:\n+                terms_tex.append(coeff_tex + ' '.join(monom_tex))\n+\n+        expr = ' '.join(terms_tex) if terms_tex else '0'\n         gens = list(map(self._print, poly.gens))\n         domain = \"domain=%s\" % self._print(poly.get_domain())\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 5a18831..99c9f2f 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1241,7 +1241,34 @@ class LatexPrinter(Printer):\n         return '%s%s\\\\left[%s\\\\right]' % (inv, domain, symbols)\n     def _print_Poly(self, poly):\n         cls = poly.__class__.__name__\n-        expr = self._print(poly.as_expr())\n+        terms = poly.terms()\n+        terms_tex = []\n+        for monom, coeff in terms:\n+            if coeff == 0:\n+                continue\n+            if coeff == 1 and sum(monom) > 0:\n+                coeff_tex = ''\n+            elif coeff == -1 and sum(monom) > 0:\n+                coeff_tex = '-'\n+            else:\n+                coeff_tex = self._print(coeff)\n+                if coeff_tex.startswith('-'):\n+                    coeff_tex = coeff_tex\n+                else:\n+                    coeff_tex = '+' + coeff_tex if terms_tex else coeff_tex\n+            monom_tex = []\n+            for val, gen in zip(monom, poly.gens):\n+                if val == 0:\n+                    continue\n+                elif val == 1:\n+                    monom_tex.append(self._print(gen))\n+                else:\n+                    monom_tex.append('%s^{%d}' % (self._print(gen), val))\n+            if not monom_tex:\n+                terms_tex.append(coeff_tex)\n+            else:\n+                terms_tex.append(coeff_tex + ' '.join(monom_tex))\n+        expr = ' '.join(terms_tex) if terms_tex else '0'\n         gens = list(map(self._print, poly.gens))\n         domain = 'domain=%s' % self._print(poly.get_domain())\n         args = ', '.join([expr] + gens + [domain])\n", "normalized_occurrence": 1}
