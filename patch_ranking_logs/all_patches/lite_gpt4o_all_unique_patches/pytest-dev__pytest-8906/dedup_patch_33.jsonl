{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-8906", "model_patch": "diff --git a/src/_pytest/outcomes.py b/src/_pytest/outcomes.py\nindex 6515102..fbec23b 100644\n--- a/src/_pytest/outcomes.py\n+++ b/src/_pytest/outcomes.py\n@@ -139,12 +139,41 @@ def skip(msg: str = \"\", *, allow_module_level: bool = False) -> \"NoReturn\":\n         Similarly, use the ``# doctest: +SKIP`` directive (see `doctest.SKIP\n         <https://docs.python.org/3/library/how-to/doctest.html#doctest.SKIP>`_)\n         to skip a doctest statically.\n+\n+        Example:\n+        .. code-block:: python\n+\n+            import sys\n+            import pytest\n+\n+            if sys.version_info < (3, 8):\n+                pytest.skip(\"Requires Python >= 3.8\", allow_module_level=True)\n     \"\"\"\n     __tracebackhide__ = True\n     raise Skipped(msg=msg, allow_module_level=allow_module_level)\n \n \n @_with_exception(Failed)\n+def skip_module(msg: str = \"\") -> \"NoReturn\":\n+    \"\"\"Skip the entire module with the given message.\n+\n+    This function should be called at the start of a module to skip the\n+    entire module, typically based on some condition such as the Python version.\n+\n+    Example:\n+    .. code-block:: python\n+\n+        import sys\n+        import pytest\n+\n+        if sys.version_info < (3, 8):\n+            pytest.skip_module(\"Requires Python >= 3.8\")\n+\n+    :param str msg: Message to display when skipping the module.\n+    \"\"\"\n+    skip(msg, allow_module_level=True)\n+\n+\n def fail(msg: str = \"\", pytrace: bool = True) -> \"NoReturn\":\n     \"\"\"Explicitly fail an executing test with the given message.\n \n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/outcomes.py b/src/_pytest/outcomes.py\nindex 4e411e5..ebdbcfb 100644\n--- a/src/_pytest/outcomes.py\n+++ b/src/_pytest/outcomes.py\n@@ -97,11 +97,39 @@ def skip(msg: str='', *, allow_module_level: bool=False) -> 'NoReturn':\n         Similarly, use the ``# doctest: +SKIP`` directive (see `doctest.SKIP\n         <https://docs.python.org/3/library/how-to/doctest.html#doctest.SKIP>`_)\n         to skip a doctest statically.\n+\n+        Example:\n+        .. code-block:: python\n+\n+            import sys\n+            import pytest\n+\n+            if sys.version_info < (3, 8):\n+                pytest.skip(\"Requires Python >= 3.8\", allow_module_level=True)\n     \"\"\"\n     __tracebackhide__ = True\n     raise Skipped(msg=msg, allow_module_level=allow_module_level)\n \n @_with_exception(Failed)\n+def skip_module(msg: str='') -> 'NoReturn':\n+    \"\"\"Skip the entire module with the given message.\n+\n+    This function should be called at the start of a module to skip the\n+    entire module, typically based on some condition such as the Python version.\n+\n+    Example:\n+    .. code-block:: python\n+\n+        import sys\n+        import pytest\n+\n+        if sys.version_info < (3, 8):\n+            pytest.skip_module(\"Requires Python >= 3.8\")\n+\n+    :param str msg: Message to display when skipping the module.\n+    \"\"\"\n+    skip(msg, allow_module_level=True)\n+\n def fail(msg: str='', pytrace: bool=True) -> 'NoReturn':\n     \"\"\"Explicitly fail an executing test with the given message.\n \n", "normalized_occurrence": 1}
