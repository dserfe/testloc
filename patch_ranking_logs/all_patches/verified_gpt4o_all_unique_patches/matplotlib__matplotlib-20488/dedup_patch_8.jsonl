{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-20488", "model_patch": "diff --git a/lib/matplotlib/colors.py b/lib/matplotlib/colors.py\nindex bbcae54..57f86f2 100644\n--- a/lib/matplotlib/colors.py\n+++ b/lib/matplotlib/colors.py\n@@ -1467,6 +1467,11 @@ def _make_norm_from_scale(scale_cls, base_norm_cls=None, *, init=None):\n                 raise ValueError(\"vmin must be less or equal to vmax\")\n             if self.vmin == self.vmax:\n                 return np.full_like(value, 0)\n+            if isinstance(self, LogNorm):\n+                if self.vmin <= 0:\n+                    raise ValueError(\"LogNorm vmin must be positive\")\n+                if self.vmax <= 0:\n+                    raise ValueError(\"LogNorm vmax must be positive\")\n             if clip is None:\n                 clip = self.clip\n             if clip:\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/colors.py b/lib/matplotlib/colors.py\nindex 8344e52..218532b 100644\n--- a/lib/matplotlib/colors.py\n+++ b/lib/matplotlib/colors.py\n@@ -1263,6 +1263,11 @@ def _make_norm_from_scale(scale_cls, base_norm_cls=None, *, init=None):\n                 raise ValueError('vmin must be less or equal to vmax')\n             if self.vmin == self.vmax:\n                 return np.full_like(value, 0)\n+            if isinstance(self, LogNorm):\n+                if self.vmin <= 0:\n+                    raise ValueError('LogNorm vmin must be positive')\n+                if self.vmax <= 0:\n+                    raise ValueError('LogNorm vmax must be positive')\n             if clip is None:\n                 clip = self.clip\n             if clip:\n", "normalized_occurrence": 1}
