{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-26323", "model_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex eec24f1..98288e8 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -293,6 +293,7 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n             Estimator instance.\n         \"\"\"\n         super().set_output(transform=transform)\n+        # Configure regular transformers\n         transformers = (\n             trans\n             for _, trans, _ in chain(\n@@ -303,6 +304,11 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n         for trans in transformers:\n             _safe_set_output(trans, transform=transform)\n \n+        # Configure remainder transformer if it's an estimator\n+        remainder = getattr(self, \"remainder\", \"drop\")\n+        if remainder not in {\"passthrough\", \"drop\"}:\n+            _safe_set_output(remainder, transform=transform)\n+\n         return self\n \n     def get_params(self, deep=True):\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex 7a9d391..98bc1c2 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -47,6 +47,9 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n         transformers = (trans for _, trans, _ in chain(self.transformers, getattr(self, 'transformers_', [])) if trans not in {'passthrough', 'drop'})\n         for trans in transformers:\n             _safe_set_output(trans, transform=transform)\n+        remainder = getattr(self, 'remainder', 'drop')\n+        if remainder not in {'passthrough', 'drop'}:\n+            _safe_set_output(remainder, transform=transform)\n         return self\n     def get_params(self, deep=True):\n         return self._get_params('_transformers', deep=deep)\n", "normalized_occurrence": 10}
