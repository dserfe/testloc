{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-22840", "model_patch": "diff --git a/sympy/matrices/expressions/matexpr.py b/sympy/matrices/expressions/matexpr.py\nindex e84863b..2b79906 100644\n--- a/sympy/matrices/expressions/matexpr.py\n+++ b/sympy/matrices/expressions/matexpr.py\n@@ -684,7 +684,11 @@ class MatrixSymbol(MatrixExpr):\n         return self.args[0].name\n \n     def _entry(self, i, j, **kwargs):\n-        return MatrixElement(self, i, j)\n+        # Return a more CSE-friendly form for matrix element access\n+        from sympy import Symbol, sympify\n+        i, j = sympify(i), sympify(j)\n+        # Create a symbol that represents direct array access\n+        return Symbol(f\"{self.name}[{i},{j}]\") \n \n     @property\n     def free_symbols(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/expressions/matexpr.py b/sympy/matrices/expressions/matexpr.py\nindex 7f0177d..af17706 100644\n--- a/sympy/matrices/expressions/matexpr.py\n+++ b/sympy/matrices/expressions/matexpr.py\n@@ -397,7 +397,9 @@ class MatrixSymbol(MatrixExpr):\n     def name(self):\n         return self.args[0].name\n     def _entry(self, i, j, **kwargs):\n-        return MatrixElement(self, i, j)\n+        from sympy import Symbol, sympify\n+        i, j = (sympify(i), sympify(j))\n+        return Symbol(f'{self.name}[{i},{j}]')\n     @property\n     def free_symbols(self):\n         return {self}\n", "normalized_occurrence": 1}
