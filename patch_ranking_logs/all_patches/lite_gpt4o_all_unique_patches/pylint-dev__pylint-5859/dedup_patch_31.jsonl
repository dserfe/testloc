{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-5859", "model_patch": "diff --git a/pylint/utils/utils.py b/pylint/utils/utils.py\nindex 030ec92..caf46d9 100644\n--- a/pylint/utils/utils.py\n+++ b/pylint/utils/utils.py\n@@ -295,7 +295,7 @@ def _splitstrip(string, sep=\",\"):\n     :rtype: str or unicode\n     :return: the unquoted string (or the input string if it wasn't quoted)\n     \"\"\"\n-    return [word.strip() for word in string.split(sep) if word.strip()]\n+    return [word.strip() for word in string.split(sep) if word.strip() or word.strip() in string]\n \n \n def _unquote(string):\n", "occurrence": 2, "normalized_patch": "diff --git a/pylint/utils/utils.py b/pylint/utils/utils.py\nindex 0221700..bfca24e 100644\n--- a/pylint/utils/utils.py\n+++ b/pylint/utils/utils.py\n@@ -127,7 +127,7 @@ def get_global_option(checker: 'BaseChecker', option: GLOBAL_OPTION_NAMES, defau\n                 return getattr(provider.config, option.replace('-', '_'))\n     return default\n def _splitstrip(string, sep=','):\n-    return [word.strip() for word in string.split(sep) if word.strip()]\n+    return [word.strip() for word in string.split(sep) if word.strip() or word.strip() in string]\n def _unquote(string):\n     if not string:\n         return string\n", "normalized_occurrence": 2}
