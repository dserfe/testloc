{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-14539", "model_patch": "diff --git a/astropy/io/fits/diff.py b/astropy/io/fits/diff.py\nindex 0a08301..f71743d 100644\n--- a/astropy/io/fits/diff.py\n+++ b/astropy/io/fits/diff.py\n@@ -1450,15 +1450,10 @@ class TableDataDiff(_BaseDiff):\n             ):\n                 diffs = where_not_allclose(arra, arrb, rtol=self.rtol, atol=self.atol)\n             elif \"P\" in col.format:\n-                diffs = (\n-                    [\n-                        idx\n-                        for idx in range(len(arra))\n-                        if not np.allclose(\n-                            arra[idx], arrb[idx], rtol=self.rtol, atol=self.atol\n-                        )\n-                    ],\n-                )\n+                diffs = np.where([\n+                    not np.allclose(arra[idx], arrb[idx], rtol=self.rtol, atol=self.atol)\n+                    for idx in range(len(arra))\n+                ])[0]\n             else:\n                 diffs = np.where(arra != arrb)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/io/fits/diff.py b/astropy/io/fits/diff.py\nindex 0555397..ef80bc6 100644\n--- a/astropy/io/fits/diff.py\n+++ b/astropy/io/fits/diff.py\n@@ -519,7 +519,7 @@ class TableDataDiff(_BaseDiff):\n             if np.issubdtype(arra.dtype, np.floating) and np.issubdtype(arrb.dtype, np.floating):\n                 diffs = where_not_allclose(arra, arrb, rtol=self.rtol, atol=self.atol)\n             elif 'P' in col.format:\n-                diffs = ([idx for idx in range(len(arra)) if not np.allclose(arra[idx], arrb[idx], rtol=self.rtol, atol=self.atol)],)\n+                diffs = np.where([not np.allclose(arra[idx], arrb[idx], rtol=self.rtol, atol=self.atol) for idx in range(len(arra))])[0]\n             else:\n                 diffs = np.where(arra != arrb)\n             self.diff_total += len(set(diffs[0]))\n", "normalized_occurrence": 1}
