{"model_name_or_path": "agentless_claude", "instance_id": "pylint-dev__pylint-7993", "model_patch": "diff --git a/pylint/reporters/text.py b/pylint/reporters/text.py\nindex 6c414e0..e9d5188 100644\n--- a/pylint/reporters/text.py\n+++ b/pylint/reporters/text.py\n@@ -174,15 +174,21 @@ class TextReporter(BaseReporter):\n         # Set template to the currently selected template\n         self._template = template\n \n+        # Replace double braces with temporary markers\n+        template = template.replace(\"{{\", \"<<\").replace(\"}}\", \">>\")\n+        \n         # Check to see if all parameters in the template are attributes of the Message\n-        arguments = re.findall(r\"\\{(.+?)(:.*)?\\}\", template)\n+        arguments = re.findall(r\"\\{([^{}]+?)(:.*)?\\}\", template)\n         for argument in arguments:\n             if argument[0] not in MESSAGE_FIELDS:\n                 warnings.warn(\n                     f\"Don't recognize the argument '{argument[0]}' in the --msg-template. \"\n                     \"Are you sure it is supported on the current version of pylint?\"\n                 )\n-                template = re.sub(r\"\\{\" + argument[0] + r\"(:.*?)?\\}\", \"\", template)\n+                template = re.sub(r\"\\{\" + re.escape(argument[0]) + r\"(:.*?)?\\}\", \"\", template)\n+        \n+        # Restore double braces\n+        template = template.replace(\"<<\", \"{\").replace(\">>\", \"}\")\n         self._fixed_template = template\n \n     def write_message(self, msg: Message) -> None:\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/reporters/text.py b/pylint/reporters/text.py\nindex 3d6bc44..42df971 100644\n--- a/pylint/reporters/text.py\n+++ b/pylint/reporters/text.py\n@@ -66,11 +66,13 @@ class TextReporter(BaseReporter):\n         if template == self._template:\n             return\n         self._template = template\n-        arguments = re.findall('\\\\{(.+?)(:.*)?\\\\}', template)\n+        template = template.replace('{{', '<<').replace('}}', '>>')\n+        arguments = re.findall('\\\\{([^{}]+?)(:.*)?\\\\}', template)\n         for argument in arguments:\n             if argument[0] not in MESSAGE_FIELDS:\n                 warnings.warn(f\"Don't recognize the argument '{argument[0]}' in the --msg-template. Are you sure it is supported on the current version of pylint?\")\n-                template = re.sub('\\\\{' + argument[0] + '(:.*?)?\\\\}', '', template)\n+                template = re.sub('\\\\{' + re.escape(argument[0]) + '(:.*?)?\\\\}', '', template)\n+        template = template.replace('<<', '{').replace('>>', '}')\n         self._fixed_template = template\n     def write_message(self, msg: Message) -> None:\n         self_dict = asdict(msg)\n", "normalized_occurrence": 1}
