{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-20676", "model_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex a6bed3c..8e46204 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -2140,11 +2140,15 @@ class SpanSelector(_SelectorWidget):\n \n         if self.direction == 'horizontal':\n             trans = ax.get_xaxis_transform()\n-            w, h = 0, 1\n+            xmin, xmax = ax.get_xbound()\n+            self._rect = Rectangle((xmin, 0), xmax - xmin, 1,\n+                               transform=trans,\n+                               visible=False,\n+                               **self._rectprops)\n         else:\n             trans = ax.get_yaxis_transform()\n-            w, h = 1, 0\n-        self._rect = Rectangle((0, 0), w, h,\n+            ymin, ymax = ax.get_ybound()\n+            self._rect = Rectangle((0, ymin), 1, ymax - ymin,\n                                transform=trans,\n                                visible=False,\n                                **self._rectprops)\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex b2dd641..e71862f 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -1756,11 +1756,12 @@ class SpanSelector(_SelectorWidget):\n             self.connect_default_events()\n         if self.direction == 'horizontal':\n             trans = ax.get_xaxis_transform()\n-            w, h = (0, 1)\n+            xmin, xmax = ax.get_xbound()\n+            self._rect = Rectangle((xmin, 0), xmax - xmin, 1, transform=trans, visible=False, **self._rectprops)\n         else:\n             trans = ax.get_yaxis_transform()\n-            w, h = (1, 0)\n-        self._rect = Rectangle((0, 0), w, h, transform=trans, visible=False, **self._rectprops)\n+            ymin, ymax = ax.get_ybound()\n+            self._rect = Rectangle((0, ymin), 1, ymax - ymin, transform=trans, visible=False, **self._rectprops)\n         self.ax.add_patch(self._rect)\n         if len(self.artists) > 0:\n             self.artists[0] = self._rect\n", "normalized_occurrence": 1}
