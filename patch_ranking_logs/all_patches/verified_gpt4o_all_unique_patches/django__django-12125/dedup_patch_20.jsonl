{"model_name_or_path": "agentless", "instance_id": "django__django-12125", "model_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex 824ab10..96ee9d0 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -94,9 +94,14 @@ class DeconstructableSerializer(BaseSerializer):\n         if module == \"django.db.models\":\n             imports = {\"from django.db import models\"}\n             name = \"models.%s\" % name\n-        else:\n-            imports = {\"import %s\" % module}\n-            name = path\n+        elif \".\" in module:\n+            outer_module, outer_class = module.rsplit(\".\", 1)\n+            if outer_module + \".\" + outer_class in sys.modules:\n+                imports = {\"import %s\" % outer_module}\n+                name = \"%s.%s.%s\" % (outer_module, outer_class, name)\n+            else:\n+                imports = {\"import %s\" % module}\n+                name = path\n         return name, imports\n \n     def serialize(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex d663baf..121d464 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -72,9 +72,14 @@ class DeconstructableSerializer(BaseSerializer):\n         if module == 'django.db.models':\n             imports = {'from django.db import models'}\n             name = 'models.%s' % name\n-        else:\n-            imports = {'import %s' % module}\n-            name = path\n+        elif '.' in module:\n+            outer_module, outer_class = module.rsplit('.', 1)\n+            if outer_module + '.' + outer_class in sys.modules:\n+                imports = {'import %s' % outer_module}\n+                name = '%s.%s.%s' % (outer_module, outer_class, name)\n+            else:\n+                imports = {'import %s' % module}\n+                name = path\n         return (name, imports)\n     def serialize(self):\n         return self.serialize_deconstructed(*self.value.deconstruct())\n", "normalized_occurrence": 1}
