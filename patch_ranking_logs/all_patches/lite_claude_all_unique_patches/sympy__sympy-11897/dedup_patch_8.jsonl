{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-11897", "model_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 6f6ac51..5084710 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -356,11 +356,19 @@ class LatexPrinter(Printer):\n         else:\n             tex = \"\"\n \n-        from sympy.simplify import fraction\n-        numer, denom = fraction(expr, exact=True)\n         separator = self._settings['mul_symbol_latex']\n         numbersep = self._settings['mul_symbol_latex_numbers']\n \n+        # Only convert to fraction if not already in exp form\n+        if any(isinstance(arg, Pow) and arg.exp.is_negative for arg in expr.args):\n+            tex += convert(expr)\n+            if include_parens:\n+                tex += \")\"\n+            return tex\n+\n+        from sympy.simplify import fraction\n+        numer, denom = fraction(expr, exact=True)\n+\n         def convert(expr):\n             if not expr.is_Mul:\n                 return str(self._print(expr))\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex df1a5c2..efe25ea 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -165,10 +165,15 @@ class LatexPrinter(Printer):\n                 include_parens = True\n         else:\n             tex = ''\n-        from sympy.simplify import fraction\n-        numer, denom = fraction(expr, exact=True)\n         separator = self._settings['mul_symbol_latex']\n         numbersep = self._settings['mul_symbol_latex_numbers']\n+        if any((isinstance(arg, Pow) and arg.exp.is_negative for arg in expr.args)):\n+            tex += convert(expr)\n+            if include_parens:\n+                tex += ')'\n+            return tex\n+        from sympy.simplify import fraction\n+        numer, denom = fraction(expr, exact=True)\n         def convert(expr):\n             if not expr.is_Mul:\n                 return str(self._print(expr))\n", "normalized_occurrence": 1}
