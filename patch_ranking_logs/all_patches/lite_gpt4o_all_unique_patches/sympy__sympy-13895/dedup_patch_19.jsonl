{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13895", "model_patch": "diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py\nindex a6ca9db..43be0e8 100644\n--- a/sympy/simplify/simplify.py\n+++ b/sympy/simplify/simplify.py\n@@ -527,7 +527,7 @@ def simplify(expr, ratio=1.7, measure=count_ops, rational=False):\n     if not isinstance(expr, Basic) or not expr.args:  # XXX: temporary hack\n         return expr\n \n-    if not isinstance(expr, (Add, Mul, Pow, ExpBase)):\n+    if not isinstance(expr, (Add, Mul, Pow, ExpBase, Pow)):\n         if isinstance(expr, Function) and hasattr(expr, \"inverse\"):\n             if len(expr.args) == 1 and len(expr.args[0].args) == 1 and \\\n                isinstance(expr.args[0], expr.inverse(argindex=1)):\n@@ -593,7 +593,7 @@ def simplify(expr, ratio=1.7, measure=count_ops, rational=False):\n     if expr.has(Product):\n         expr = product_simplify(expr)\n \n-    short = shorter(powsimp(expr, combine='exp', deep=True), powsimp(expr), expr)\n+    short = shorter(powsimp(expr, combine='exp', deep=True), powsimp(expr), expr, expr.expand(complex=True))\n     short = shorter(short, cancel(short))\n     short = shorter(short, factor_terms(short), expand_power_exp(expand_mul(short)))\n     if short.has(TrigonometricFunction, HyperbolicFunction, ExpBase):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py\nindex 52e38cb..6333c9e 100644\n--- a/sympy/simplify/simplify.py\n+++ b/sympy/simplify/simplify.py\n@@ -156,7 +156,7 @@ def simplify(expr, ratio=1.7, measure=count_ops, rational=False):\n     from sympy import Sum, Product\n     if not isinstance(expr, Basic) or not expr.args:\n         return expr\n-    if not isinstance(expr, (Add, Mul, Pow, ExpBase)):\n+    if not isinstance(expr, (Add, Mul, Pow, ExpBase, Pow)):\n         if isinstance(expr, Function) and hasattr(expr, 'inverse'):\n             if len(expr.args) == 1 and len(expr.args[0].args) == 1 and isinstance(expr.args[0], expr.inverse(argindex=1)):\n                 return simplify(expr.args[0].args[0], ratio=ratio, measure=measure, rational=rational)\n@@ -195,7 +195,7 @@ def simplify(expr, ratio=1.7, measure=count_ops, rational=False):\n         expr = sum_simplify(expr)\n     if expr.has(Product):\n         expr = product_simplify(expr)\n-    short = shorter(powsimp(expr, combine='exp', deep=True), powsimp(expr), expr)\n+    short = shorter(powsimp(expr, combine='exp', deep=True), powsimp(expr), expr, expr.expand(complex=True))\n     short = shorter(short, cancel(short))\n     short = shorter(short, factor_terms(short), expand_power_exp(expand_mul(short)))\n     if short.has(TrigonometricFunction, HyperbolicFunction, ExpBase):\n", "normalized_occurrence": 1}
