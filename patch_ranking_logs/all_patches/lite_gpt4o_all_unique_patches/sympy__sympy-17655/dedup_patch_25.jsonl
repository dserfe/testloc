{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-17655", "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex a708f18..ac8fbee 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -278,7 +278,34 @@ class Point(GeometryEntity):\n         coords = [simplify(x*factor) for x in self.args]\n         return Point(coords, evaluate=False)\n \n-    def __neg__(self):\n+    def __rmul__(self, factor):\n+        \"\"\"Multiply point's coordinates by a factor (from right).\n+\n+        Notes\n+        =====\n+\n+        >>> from sympy.geometry.point import Point\n+\n+        When multiplying a Point by a floating point number,\n+        the coordinates of the Point will be changed to Floats:\n+\n+        >>> Point(1, 2)*0.1\n+        Point2D(0.1, 0.2)\n+\n+        If this is not desired, the `scale` method can be used or\n+        else only multiply or divide by integers:\n+\n+        >>> Point(1, 2).scale(1.1, 1.1)\n+        Point2D(11/10, 11/5)\n+        >>> Point(1, 2)*11/10\n+        Point2D(11/10, 11/5)\n+\n+        See Also\n+        ========\n+\n+        sympy.geometry.point.Point.scale\n+        \"\"\"\n+        return self.__mul__(factor)\n         \"\"\"Negate the point.\"\"\"\n         coords = [-x for x in self.args]\n         return Point(coords, evaluate=False)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex e45d95f..6c0290a 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -90,7 +90,8 @@ class Point(GeometryEntity):\n         factor = sympify(factor)\n         coords = [simplify(x * factor) for x in self.args]\n         return Point(coords, evaluate=False)\n-    def __neg__(self):\n+    def __rmul__(self, factor):\n+        return self.__mul__(factor)\n         coords = [-x for x in self.args]\n         return Point(coords, evaluate=False)\n     def __sub__(self, other):\n", "normalized_occurrence": 1}
