{"model_name_or_path": "agentless_claude", "instance_id": "mwaskom__seaborn-2848", "model_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 21c0562..5a5e928 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -1551,23 +1551,23 @@ class PairGrid(Grid):\n         else:\n             axes_vars = [x_var, y_var]\n \n-        if self._hue_var is not None and self._hue_var not in axes_vars:\n-            axes_vars.append(self._hue_var)\n-\n         data = self.data[axes_vars]\n         if self._dropna:\n             data = data.dropna()\n \n         x = data[x_var]\n         y = data[y_var]\n-        if self._hue_var is None:\n-            hue = None\n-        else:\n-            hue = data.get(self._hue_var)\n \n+        # Only set hue-related arguments if hue wasn't passed in kwargs\n         if \"hue\" not in kwargs:\n+            if self._hue_var is not None:\n+                hue = self.data[self._hue_var]\n+            else:\n+                hue = None\n             kwargs.update({\n-                \"hue\": hue, \"hue_order\": self._hue_order, \"palette\": self._orig_palette,\n+                \"hue\": hue,\n+                \"hue_order\": self._hue_order,\n+                \"palette\": self._orig_palette,\n             })\n         func(x=x, y=y, **kwargs)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 0807052..b7cc04f 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -736,18 +736,16 @@ class PairGrid(Grid):\n             axes_vars = [x_var]\n         else:\n             axes_vars = [x_var, y_var]\n-        if self._hue_var is not None and self._hue_var not in axes_vars:\n-            axes_vars.append(self._hue_var)\n         data = self.data[axes_vars]\n         if self._dropna:\n             data = data.dropna()\n         x = data[x_var]\n         y = data[y_var]\n-        if self._hue_var is None:\n-            hue = None\n-        else:\n-            hue = data.get(self._hue_var)\n         if 'hue' not in kwargs:\n+            if self._hue_var is not None:\n+                hue = self.data[self._hue_var]\n+            else:\n+                hue = None\n             kwargs.update({'hue': hue, 'hue_order': self._hue_order, 'palette': self._orig_palette})\n         func(x=x, y=y, **kwargs)\n         self._update_legend_data(ax)\n", "normalized_occurrence": 1}
