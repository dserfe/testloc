{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-20488", "model_patch": "diff --git a/lib/matplotlib/colors.py b/lib/matplotlib/colors.py\nindex bbcae54..b2b81c9 100644\n--- a/lib/matplotlib/colors.py\n+++ b/lib/matplotlib/colors.py\n@@ -1473,7 +1473,7 @@ def _make_norm_from_scale(scale_cls, base_norm_cls=None, *, init=None):\n                 value = np.clip(value, self.vmin, self.vmax)\n             t_value = self._trf.transform(value).reshape(np.shape(value))\n             t_vmin, t_vmax = self._trf.transform([self.vmin, self.vmax])\n-            if not np.isfinite([t_vmin, t_vmax]).all():\n+            if not np.isfinite(t_vmin) or not np.isfinite(t_vmax):\n                 raise ValueError(\"Invalid vmin or vmax\")\n             t_value -= t_vmin\n             t_value /= (t_vmax - t_vmin)\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/colors.py b/lib/matplotlib/colors.py\nindex 8344e52..e671fab 100644\n--- a/lib/matplotlib/colors.py\n+++ b/lib/matplotlib/colors.py\n@@ -1269,7 +1269,7 @@ def _make_norm_from_scale(scale_cls, base_norm_cls=None, *, init=None):\n                 value = np.clip(value, self.vmin, self.vmax)\n             t_value = self._trf.transform(value).reshape(np.shape(value))\n             t_vmin, t_vmax = self._trf.transform([self.vmin, self.vmax])\n-            if not np.isfinite([t_vmin, t_vmax]).all():\n+            if not np.isfinite(t_vmin) or not np.isfinite(t_vmax):\n                 raise ValueError('Invalid vmin or vmax')\n             t_value -= t_vmin\n             t_value /= t_vmax - t_vmin\n", "normalized_occurrence": 1}
