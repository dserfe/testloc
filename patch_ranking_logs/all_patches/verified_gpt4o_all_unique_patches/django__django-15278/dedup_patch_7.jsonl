{"model_name_or_path": "agentless", "instance_id": "django__django-15278", "model_patch": "diff --git a/django/db/backends/sqlite3/schema.py b/django/db/backends/sqlite3/schema.py\nindex be6e066..838c7b2 100644\n--- a/django/db/backends/sqlite3/schema.py\n+++ b/django/db/backends/sqlite3/schema.py\n@@ -139,6 +139,8 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):\n             # the sqlite_master table.\n             with self.connection.cursor() as cursor:\n                 cursor.execute('VACUUM')\n+        elif isinstance(new_field, models.OneToOneField) and new_field.null:\n+            self._remake_table(model, create_field=new_field)\n         else:\n             super().alter_field(model, old_field, new_field, strict=strict)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/sqlite3/schema.py b/django/db/backends/sqlite3/schema.py\nindex fd5121f..f857694 100644\n--- a/django/db/backends/sqlite3/schema.py\n+++ b/django/db/backends/sqlite3/schema.py\n@@ -87,6 +87,8 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):\n                     cursor.execute('PRAGMA integrity_check')\n             with self.connection.cursor() as cursor:\n                 cursor.execute('VACUUM')\n+        elif isinstance(new_field, models.OneToOneField) and new_field.null:\n+            self._remake_table(model, create_field=new_field)\n         else:\n             super().alter_field(model, old_field, new_field, strict=strict)\n     def _remake_table(self, model, create_field=None, delete_field=None, alter_field=None):\n", "normalized_occurrence": 1}
