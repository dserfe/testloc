{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8551", "model_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex f44a82b..74077b8 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -1280,11 +1280,11 @@ class PythonDomain(Domain):\n                 return []\n             elif classname and classname + '.' + name in self.objects:\n                 newname = classname + '.' + name\n-            elif modname and modname + '.' + name in self.objects:\n-                newname = modname + '.' + name\n             elif modname and classname and \\\n                     modname + '.' + classname + '.' + name in self.objects:\n                 newname = modname + '.' + classname + '.' + name\n+            elif modname and modname + '.' + name in self.objects:\n+                newname = modname + '.' + name\n         if newname is not None:\n             matches.append((newname, self.objects[newname]))\n         return matches\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex 2ce105a..86ac7c5 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -772,10 +772,10 @@ class PythonDomain(Domain):\n             return []\n         elif classname and classname + '.' + name in self.objects:\n             newname = classname + '.' + name\n-        elif modname and modname + '.' + name in self.objects:\n-            newname = modname + '.' + name\n         elif modname and classname and (modname + '.' + classname + '.' + name in self.objects):\n             newname = modname + '.' + classname + '.' + name\n+        elif modname and modname + '.' + name in self.objects:\n+            newname = modname + '.' + name\n         if newname is not None:\n             matches.append((newname, self.objects[newname]))\n         return matches\n", "normalized_occurrence": 1}
