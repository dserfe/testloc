{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25311", "model_patch": "diff --git a/lib/matplotlib/legend.py b/lib/matplotlib/legend.py\nindex a038473..714683b 100644\n--- a/lib/matplotlib/legend.py\n+++ b/lib/matplotlib/legend.py\n@@ -73,6 +73,17 @@ class DraggableLegend(DraggableOffsetBox):\n \n         super().__init__(legend, legend._legend_box, use_blit=use_blit)\n \n+    def __getstate__(self):\n+        state = self.__dict__.copy()\n+        # Exclude the canvas, as it cannot be pickled\n+        state['legend'] = None\n+        return state\n+\n+    def __setstate__(self, state):\n+        self.__dict__.update(state)\n+        # Reconnect the legend to the figure's canvas\n+        self.legend.figure.canvas.mpl_connect('draw_event', self.update_position)\n+\n     def finalize_offset(self):\n         if self._update == \"loc\":\n             self._update_loc(self.get_loc_in_canvas())\n", "occurrence": 1, "normalized_patch": "--- a/lib/matplotlib/legend.py\n+++ b/lib/matplotlib/legend.py\n+    def __getstate__(self):\n+        state = self.__dict__.copy()\n+        state['legend'] = None\n+        return state\n+    def __setstate__(self, state):\n+        self.__dict__.update(state)\n+        self.legend.figure.canvas.mpl_connect('draw_event', self.update_position)", "normalized_occurrence": 1}
