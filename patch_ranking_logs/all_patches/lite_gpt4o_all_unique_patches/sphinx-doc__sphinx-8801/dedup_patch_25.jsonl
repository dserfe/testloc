{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8801", "model_patch": "diff --git a/sphinx/ext/autodoc/importer.py b/sphinx/ext/autodoc/importer.py\nindex 16f59c0..2ffe09c 100644\n--- a/sphinx/ext/autodoc/importer.py\n+++ b/sphinx/ext/autodoc/importer.py\n@@ -295,10 +295,13 @@ def get_class_members(subject: Any, objpath: List[str], attrgetter: Callable\n     try:\n         for cls in getmro(subject):\n             # annotation only member (ex. attr: int)\n-            for name in getannotations(cls):\n-                name = unmangle(cls, name)\n-                if name and name not in members:\n-                    members[name] = ObjectMember(name, INSTANCEATTR, class_=cls)\n+            for name, annotation in getannotations(cls).items():\n+                unmangled_name = unmangle(cls, name)\n+                if unmangled_name and unmangled_name not in members:\n+                    members[unmangled_name] = ObjectMember(unmangled_name, INSTANCEATTR, class_=cls)\n+                    attr_doc = getattr(cls, '__doc__', None)\n+                    if attr_doc:\n+                        members[unmangled_name].docstring = attr_doc\n \n             # append instance attributes (cf. self.attr1) if analyzer knows\n             try:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/importer.py b/sphinx/ext/autodoc/importer.py\nindex 7792b8a..fd9cc0b 100644\n--- a/sphinx/ext/autodoc/importer.py\n+++ b/sphinx/ext/autodoc/importer.py\n@@ -189,10 +189,13 @@ def get_class_members(subject: Any, objpath: List[str], attrgetter: Callable) ->\n             continue\n     try:\n         for cls in getmro(subject):\n-            for name in getannotations(cls):\n-                name = unmangle(cls, name)\n-                if name and name not in members:\n-                    members[name] = ObjectMember(name, INSTANCEATTR, class_=cls)\n+            for name, annotation in getannotations(cls).items():\n+                unmangled_name = unmangle(cls, name)\n+                if unmangled_name and unmangled_name not in members:\n+                    members[unmangled_name] = ObjectMember(unmangled_name, INSTANCEATTR, class_=cls)\n+                    attr_doc = getattr(cls, '__doc__', None)\n+                    if attr_doc:\n+                        members[unmangled_name].docstring = attr_doc\n             try:\n                 modname = safe_getattr(cls, '__module__')\n                 qualname = safe_getattr(cls, '__qualname__')\n", "normalized_occurrence": 1}
