{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11532", "model_patch": "diff --git a/django/core/mail/utils.py b/django/core/mail/utils.py\nindex af5ac38..a6dd31c 100644\n--- a/django/core/mail/utils.py\n+++ b/django/core/mail/utils.py\n@@ -14,7 +14,10 @@ class CachedDnsName:\n     def get_fqdn(self):\n         if not hasattr(self, '_fqdn'):\n             self._fqdn = socket.getfqdn()\n+            # Convert to punycode if needed\n+            if not self._fqdn.isascii():\n+                self._fqdn = self._fqdn.encode('idna').decode('ascii')\n         return self._fqdn\n \n \n-DNS_NAME = CachedDnsName()\n+DNS_NAME = CachedDnsName()\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/mail/utils.py b/django/core/mail/utils.py\nindex f3d6156..9c5532b 100644\n--- a/django/core/mail/utils.py\n+++ b/django/core/mail/utils.py\n@@ -5,5 +5,7 @@ class CachedDnsName:\n     def get_fqdn(self):\n         if not hasattr(self, '_fqdn'):\n             self._fqdn = socket.getfqdn()\n+            if not self._fqdn.isascii():\n+                self._fqdn = self._fqdn.encode('idna').decode('ascii')\n         return self._fqdn\n DNS_NAME = CachedDnsName()\n\\ No newline at end of file\n", "normalized_occurrence": 3}
