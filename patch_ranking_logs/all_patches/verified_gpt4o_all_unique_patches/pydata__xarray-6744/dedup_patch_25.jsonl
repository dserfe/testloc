{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-6744", "model_patch": "diff --git a/xarray/core/rolling.py b/xarray/core/rolling.py\nindex eae2351..d4bbdae 100644\n--- a/xarray/core/rolling.py\n+++ b/xarray/core/rolling.py\n@@ -273,7 +273,14 @@ class DataArrayRolling(Rolling[\"DataArray\"]):\n         stops = np.arange(1, len(self.window_labels) + 1)\n         starts = stops - int(self.window[0])\n         starts[: int(self.window[0])] = 0\n+        if self.center[0]:\n+            starts = starts + (self.window[0] // 2)\n+            stops = stops + (self.window[0] // 2)\n+\n         for (label, start, stop) in zip(self.window_labels, starts, stops):\n+            if self.center[0]:\n+                start = max(start - (self.window[0] // 2), 0)\n+                stop = min(stop - (self.window[0] // 2), len(self.window_labels))\n             window = self.obj.isel({self.dim[0]: slice(start, stop)})\n \n             counts = window.count(dim=self.dim[0])\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/rolling.py b/xarray/core/rolling.py\nindex 870b974..fdb831f 100644\n--- a/xarray/core/rolling.py\n+++ b/xarray/core/rolling.py\n@@ -109,7 +109,13 @@ class DataArrayRolling(Rolling['DataArray']):\n         stops = np.arange(1, len(self.window_labels) + 1)\n         starts = stops - int(self.window[0])\n         starts[:int(self.window[0])] = 0\n+        if self.center[0]:\n+            starts = starts + self.window[0] // 2\n+            stops = stops + self.window[0] // 2\n         for label, start, stop in zip(self.window_labels, starts, stops):\n+            if self.center[0]:\n+                start = max(start - self.window[0] // 2, 0)\n+                stop = min(stop - self.window[0] // 2, len(self.window_labels))\n             window = self.obj.isel({self.dim[0]: slice(start, stop)})\n             counts = window.count(dim=self.dim[0])\n             window = window.where(counts >= self.min_periods)\n", "normalized_occurrence": 1}
