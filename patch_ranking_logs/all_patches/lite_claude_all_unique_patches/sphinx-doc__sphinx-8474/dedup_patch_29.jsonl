{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-8474", "model_patch": "diff --git a/sphinx/builders/singlehtml.py b/sphinx/builders/singlehtml.py\nindex 9c4674f..babb5eb 100644\n--- a/sphinx/builders/singlehtml.py\n+++ b/sphinx/builders/singlehtml.py\n@@ -115,10 +115,12 @@ class SingleFileHTMLBuilder(StandaloneHTMLBuilder):\n         # {'foo': {'figure': {'id2': (2,), 'id1': (1,)}}, 'bar': {'figure': {'id1': (3,)}}}\n         for docname, fignumlist in self.env.toc_fignumbers.items():\n             for figtype, fignums in fignumlist.items():\n-                alias = \"%s/%s\" % (docname, figtype)\n-                new_fignumbers.setdefault(alias, {})\n-                for id, fignum in fignums.items():\n-                    new_fignumbers[alias][id] = fignum\n+                # Initialize both figure and table types\n+                if figtype in ('figure', 'table'):\n+                    alias = \"%s/%s\" % (docname, figtype)\n+                    new_fignumbers.setdefault(alias, {})\n+                    for id, fignum in fignums.items():\n+                        new_fignumbers[alias][id] = fignum\n \n         return {self.config.master_doc: new_fignumbers}\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/builders/singlehtml.py b/sphinx/builders/singlehtml.py\nindex 542a568..dfdc7e1 100644\n--- a/sphinx/builders/singlehtml.py\n+++ b/sphinx/builders/singlehtml.py\n@@ -62,10 +62,11 @@ class SingleFileHTMLBuilder(StandaloneHTMLBuilder):\n         new_fignumbers = {}\n         for docname, fignumlist in self.env.toc_fignumbers.items():\n             for figtype, fignums in fignumlist.items():\n-                alias = '%s/%s' % (docname, figtype)\n-                new_fignumbers.setdefault(alias, {})\n-                for id, fignum in fignums.items():\n-                    new_fignumbers[alias][id] = fignum\n+                if figtype in ('figure', 'table'):\n+                    alias = '%s/%s' % (docname, figtype)\n+                    new_fignumbers.setdefault(alias, {})\n+                    for id, fignum in fignums.items():\n+                        new_fignumbers[alias][id] = fignum\n         return {self.config.master_doc: new_fignumbers}\n     def get_doc_context(self, docname: str, body: str, metatags: str) -> Dict:\n         toctree = TocTree(self.env).get_toctree_for(self.config.master_doc, self, False)\n", "normalized_occurrence": 2}
