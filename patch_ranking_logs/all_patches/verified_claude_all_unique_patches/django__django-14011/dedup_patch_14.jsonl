{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14011", "model_patch": "diff --git a/django/core/servers/basehttp.py b/django/core/servers/basehttp.py\nindex 9aa8a59..9ad9913 100644\n--- a/django/core/servers/basehttp.py\n+++ b/django/core/servers/basehttp.py\n@@ -81,6 +81,21 @@ class ThreadedWSGIServer(socketserver.ThreadingMixIn, WSGIServer):\n     \"\"\"A threaded version of the WSGIServer\"\"\"\n     daemon_threads = True\n \n+    def process_request_thread(self, request, client_address):\n+        \"\"\"Same as in BaseServer but as a thread.\n+        In addition, makes sure the database connections are closed when\n+        the thread terminates.\n+        \"\"\"\n+        try:\n+            self.finish_request(request, client_address)\n+            self.shutdown_request(request)\n+        except Exception:\n+            self.handle_error(request, client_address)\n+            self.shutdown_request(request)\n+        finally:\n+            from django.db import connections\n+            connections.close_all()\n+\n \n class ServerHandler(simple_server.ServerHandler):\n     http_version = '1.1'\n", "occurrence": 1, "normalized_patch": "--- a/django/core/servers/basehttp.py\n+++ b/django/core/servers/basehttp.py\n+    def process_request_thread(self, request, client_address):\n+        try:\n+            self.finish_request(request, client_address)\n+            self.shutdown_request(request)\n+        except Exception:\n+            self.handle_error(request, client_address)\n+            self.shutdown_request(request)\n+        finally:\n+            from django.db import connections\n+            connections.close_all()", "normalized_occurrence": 1}
