{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13043", "model_patch": "diff --git a/sympy/integrals/intpoly.py b/sympy/integrals/intpoly.py\nindex 1e4efa0..f6f56e8 100644\n--- a/sympy/integrals/intpoly.py\n+++ b/sympy/integrals/intpoly.py\n@@ -593,7 +593,8 @@ def decompose(expr, separate=False):\n         poly_dict[0] = expr\n \n     if separate:\n-        return list(poly_dict.values())\n+        # Sort by degree and then by string representation for consistent ordering\n+        return sorted(poly_dict.values(), key=lambda x: (sum(degree_list(x, *x.atoms(Symbol))), str(x)))\n     return poly_dict\n \n \n", "occurrence": 2, "normalized_patch": "diff --git a/sympy/integrals/intpoly.py b/sympy/integrals/intpoly.py\nindex 5b23da9..a0a8322 100644\n--- a/sympy/integrals/intpoly.py\n+++ b/sympy/integrals/intpoly.py\n@@ -258,7 +258,7 @@ def decompose(expr, separate=False):\n     else:\n         poly_dict[0] = expr\n     if separate:\n-        return list(poly_dict.values())\n+        return sorted(poly_dict.values(), key=lambda x: (sum(degree_list(x, *x.atoms(Symbol))), str(x)))\n     return poly_dict\n def clockwise_sort(poly):\n     n = len(poly.vertices)\n", "normalized_occurrence": 3}
