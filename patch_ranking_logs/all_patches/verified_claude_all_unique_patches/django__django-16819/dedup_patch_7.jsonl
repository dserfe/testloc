{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16819", "model_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 42f1c50..b5102f9 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -1235,13 +1235,20 @@ class MigrationAutodetector:\n             for new_index in added_indexes:\n                 new_index_dec = new_index.deconstruct()\n                 new_index_name = new_index_dec[2].pop(\"name\")\n+                new_fields = set(getattr(new_index, 'fields', []))\n+                new_expressions = getattr(new_index, 'expressions', [])\n+                \n                 for old_index in removed_indexes:\n                     old_index_dec = old_index.deconstruct()\n                     old_index_name = old_index_dec[2].pop(\"name\")\n-                    # Indexes are the same except for the names.\n+                    old_fields = set(getattr(old_index, 'fields', []))\n+                    old_expressions = getattr(old_index, 'expressions', [])\n+                    \n+                    # Consider indexes equivalent if they have the same fields and expressions\n                     if (\n-                        new_index_dec == old_index_dec\n-                        and new_index_name != old_index_name\n+                        new_fields == old_fields and\n+                        new_expressions == old_expressions and\n+                        new_index_name != old_index_name\n                     ):\n                         renamed_indexes.append((old_index_name, new_index_name, None))\n                         remove_from_added.append(new_index)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex d5d6180..d51b282 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -505,10 +505,14 @@ class MigrationAutodetector:\n             for new_index in added_indexes:\n                 new_index_dec = new_index.deconstruct()\n                 new_index_name = new_index_dec[2].pop('name')\n+                new_fields = set(getattr(new_index, 'fields', []))\n+                new_expressions = getattr(new_index, 'expressions', [])\n                 for old_index in removed_indexes:\n                     old_index_dec = old_index.deconstruct()\n                     old_index_name = old_index_dec[2].pop('name')\n-                    if new_index_dec == old_index_dec and new_index_name != old_index_name:\n+                    old_fields = set(getattr(old_index, 'fields', []))\n+                    old_expressions = getattr(old_index, 'expressions', [])\n+                    if new_fields == old_fields and new_expressions == old_expressions and (new_index_name != old_index_name):\n                         renamed_indexes.append((old_index_name, new_index_name, None))\n                         remove_from_added.append(new_index)\n                         remove_from_removed.append(old_index)\n", "normalized_occurrence": 1}
