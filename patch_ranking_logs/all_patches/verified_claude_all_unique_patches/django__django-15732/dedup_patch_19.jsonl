{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15732", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 42e02c2..33dcef0 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -606,6 +606,18 @@ class AlterUniqueTogether(AlterTogetherOptionOperation):\n     def __init__(self, name, unique_together):\n         super().__init__(name, unique_together)\n \n+    def database_forwards(self, app_label, schema_editor, from_state, to_state):\n+        new_model = to_state.apps.get_model(app_label, self.name)\n+        if self.allow_migrate_model(schema_editor.connection.alias, new_model):\n+            old_model = from_state.apps.get_model(app_label, self.name)\n+            # Remove all unique_together constraints, even if there are multiple\n+            # unique constraints on the same fields\n+            schema_editor._delete_unique_together_constraints(\n+                old_model, old_model._meta.unique_together, strict=False\n+            )\n+            if self.option_value:\n+                schema_editor.alter_unique_together(new_model, [], self.option_value)\n+\n \n class AlterIndexTogether(AlterTogetherOptionOperation):\n     \"\"\"\n", "occurrence": 1, "normalized_patch": "--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n+    def database_forwards(self, app_label, schema_editor, from_state, to_state):\n+        new_model = to_state.apps.get_model(app_label, self.name)\n+        if self.allow_migrate_model(schema_editor.connection.alias, new_model):\n+            old_model = from_state.apps.get_model(app_label, self.name)\n+            schema_editor._delete_unique_together_constraints(old_model, old_model._meta.unique_together, strict=False)\n+            if self.option_value:\n+                schema_editor.alter_unique_together(new_model, [], self.option_value)", "normalized_occurrence": 1}
