{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7490", "model_patch": "diff --git a/src/_pytest/nodes.py b/src/_pytest/nodes.py\nindex 1ea0522..d2ad551 100644\n--- a/src/_pytest/nodes.py\n+++ b/src/_pytest/nodes.py\n@@ -277,10 +277,16 @@ class Node(metaclass=NodeMeta):\n         else:\n             raise ValueError(\"is not a string or pytest.mark.* Marker\")\n         self.keywords[marker_.name] = marker_\n+        if marker_.name == \"xfail\":\n+            self._store[marker_.name] = marker_\n+            self._nodeid = f\"{self.nodeid} [xfail]\"\n         if append:\n             self.own_markers.append(marker_.mark)\n         else:\n             self.own_markers.insert(0, marker_.mark)\n+        if marker_.name == \"xfail\":\n+            self._store[marker_.name] = marker_\n+            self._nodeid = f\"{self.nodeid} [xfail]\"\n \n     def iter_markers(self, name: Optional[str] = None) -> Iterator[Mark]:\n         \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/nodes.py b/src/_pytest/nodes.py\nindex 8a79019..1667da2 100644\n--- a/src/_pytest/nodes.py\n+++ b/src/_pytest/nodes.py\n@@ -209,10 +209,16 @@ class Node(metaclass=NodeMeta):\n         else:\n             raise ValueError('is not a string or pytest.mark.* Marker')\n         self.keywords[marker_.name] = marker_\n+        if marker_.name == 'xfail':\n+            self._store[marker_.name] = marker_\n+            self._nodeid = f'{self.nodeid} [xfail]'\n         if append:\n             self.own_markers.append(marker_.mark)\n         else:\n             self.own_markers.insert(0, marker_.mark)\n+        if marker_.name == 'xfail':\n+            self._store[marker_.name] = marker_\n+            self._nodeid = f'{self.nodeid} [xfail]'\n \n     def iter_markers(self, name: Optional[str]=None) -> Iterator[Mark]:\n         \"\"\"\n", "normalized_occurrence": 1}
