{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-10673", "model_patch": "diff --git a/sphinx/builders/html/__init__.py b/sphinx/builders/html/__init__.py\nindex 516651b..de8252a 100644\n--- a/sphinx/builders/html/__init__.py\n+++ b/sphinx/builders/html/__init__.py\n@@ -713,9 +713,9 @@ class StandaloneHTMLBuilder(Builder):\n             self.handle_page(pagename, {}, template)\n \n         # the search page\n-        if self.search:\n-            logger.info('search ', nonl=True)\n-            self.handle_page('search', {}, 'search.html')\n+        # generate the search page\n+        logger.info('search ', nonl=True)\n+        self.handle_page('search', {}, 'search.html')\n \n         # the opensearch xml file\n         if self.config.html_use_opensearch and self.search:\n@@ -723,7 +723,7 @@ class StandaloneHTMLBuilder(Builder):\n             fn = path.join(self.outdir, '_static', 'opensearch.xml')\n             self.handle_page('opensearch', {}, 'opensearch.xml', outfilename=fn)\n \n-    def write_genindex(self) -> None:\n+    def write_genindex(self, docname: str = 'genindex') -> None:\n         # the total count of lines for each index letter, used to distribute\n         # the entries into two columns\n         genindex = IndexEntries(self.env).create_index(self)\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/builders/html/__init__.py b/sphinx/builders/html/__init__.py\nindex b5b9117..7582137 100644\n--- a/sphinx/builders/html/__init__.py\n+++ b/sphinx/builders/html/__init__.py\n@@ -433,14 +433,13 @@ class StandaloneHTMLBuilder(Builder):\n         for pagename, template in self.config.html_additional_pages.items():\n             logger.info(pagename + ' ', nonl=True)\n             self.handle_page(pagename, {}, template)\n-        if self.search:\n-            logger.info('search ', nonl=True)\n-            self.handle_page('search', {}, 'search.html')\n+        logger.info('search ', nonl=True)\n+        self.handle_page('search', {}, 'search.html')\n         if self.config.html_use_opensearch and self.search:\n             logger.info('opensearch ', nonl=True)\n             fn = path.join(self.outdir, '_static', 'opensearch.xml')\n             self.handle_page('opensearch', {}, 'opensearch.xml', outfilename=fn)\n-    def write_genindex(self) -> None:\n+    def write_genindex(self, docname: str='genindex') -> None:\n         genindex = IndexEntries(self.env).create_index(self)\n         indexcounts = []\n         for _k, entries in genindex:\n", "normalized_occurrence": 1}
