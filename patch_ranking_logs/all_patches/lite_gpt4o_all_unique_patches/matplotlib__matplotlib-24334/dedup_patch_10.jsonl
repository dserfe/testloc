{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-24334", "model_patch": "diff --git a/lib/matplotlib/axis.py b/lib/matplotlib/axis.py\nindex d63d9ca..49f8db1 100644\n--- a/lib/matplotlib/axis.py\n+++ b/lib/matplotlib/axis.py\n@@ -2024,6 +2024,12 @@ class Axis(martist.Artist):\n         result = self._set_tick_locations(ticks, minor=minor)\n         if labels is not None:\n             self.set_ticklabels(labels, minor=minor, **kwargs)\n+        else:\n+            # Validate kwargs even if labels are not set\n+            valid_kwargs = set(Text().properties().keys())\n+            for kw in kwargs:\n+                if kw not in valid_kwargs:\n+                    raise TypeError(f\"{kw} is not a valid Text property\")\n         return result\n \n     def _get_tick_boxes_siblings(self, renderer):\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axis.py b/lib/matplotlib/axis.py\nindex 95f7f71..dc022e0 100644\n--- a/lib/matplotlib/axis.py\n+++ b/lib/matplotlib/axis.py\n@@ -1653,6 +1653,11 @@ class Axis(martist.Artist):\n         result = self._set_tick_locations(ticks, minor=minor)\n         if labels is not None:\n             self.set_ticklabels(labels, minor=minor, **kwargs)\n+        else:\n+            valid_kwargs = set(Text().properties().keys())\n+            for kw in kwargs:\n+                if kw not in valid_kwargs:\n+                    raise TypeError(f'{kw} is not a valid Text property')\n         return result\n \n     def _get_tick_boxes_siblings(self, renderer):\n", "normalized_occurrence": 1}
