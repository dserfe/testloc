{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-20049", "model_patch": "diff --git a/sympy/physics/vector/point.py b/sympy/physics/vector/point.py\nindex b711aa3..67c572b 100644\n--- a/sympy/physics/vector/point.py\n+++ b/sympy/physics/vector/point.py\n@@ -518,9 +518,14 @@ class Point(object):\n         \"\"\"\n \n         _check_frame(frame)\n-        if not (frame in self._vel_dict):\n-            raise ValueError('Velocity of point ' + self.name + ' has not been'\n-                             ' defined in ReferenceFrame ' + frame.name)\n+        if frame not in self._vel_dict:\n+            # If velocity is not defined, calculate it as the time derivative of position\n+            otherpoint = self\n+            dist = self.pos_from(otherpoint)\n+            v = otherpoint.vel(frame)\n+            omega = frame.ang_vel_in(frame)\n+            calculated_velocity = v + (omega ^ dist)\n+            self.set_vel(frame, calculated_velocity)\n         return self._vel_dict[frame]\n \n     def partial_velocity(self, frame, *gen_speeds):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/physics/vector/point.py b/sympy/physics/vector/point.py\nindex f85c3bd..a7db4a0 100644\n--- a/sympy/physics/vector/point.py\n+++ b/sympy/physics/vector/point.py\n@@ -120,8 +120,13 @@ class Point(object):\n         return self.vel(outframe)\n     def vel(self, frame):\n         _check_frame(frame)\n-        if not frame in self._vel_dict:\n-            raise ValueError('Velocity of point ' + self.name + ' has not been defined in ReferenceFrame ' + frame.name)\n+        if frame not in self._vel_dict:\n+            otherpoint = self\n+            dist = self.pos_from(otherpoint)\n+            v = otherpoint.vel(frame)\n+            omega = frame.ang_vel_in(frame)\n+            calculated_velocity = v + (omega ^ dist)\n+            self.set_vel(frame, calculated_velocity)\n         return self._vel_dict[frame]\n     def partial_velocity(self, frame, *gen_speeds):\n         partials = [self.vel(frame).diff(speed, frame, var_in_dcm=False) for speed in gen_speeds]\n", "normalized_occurrence": 1}
