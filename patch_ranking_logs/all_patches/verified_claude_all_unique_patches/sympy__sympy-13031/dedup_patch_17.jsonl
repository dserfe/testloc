{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13031", "model_patch": "diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py\nindex 79b3d5e..a1482a5 100644\n--- a/sympy/matrices/common.py\n+++ b/sympy/matrices/common.py\n@@ -475,9 +475,9 @@ class MatrixShaping(MatrixRequired):\n         row\n         col_join\n         \"\"\"\n-        # A null matrix can always be stacked (see  #10770)\n-        if self.cols == 0 and self.rows != other.rows:\n-            return self._new(other.rows, 0, []).row_join(other)\n+        # Special case for empty matrices\n+        if self.rows == 0:\n+            return self._new(0, self.cols + other.cols, [])\n \n         if self.rows != other.rows:\n             raise ShapeError(\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py\nindex 1e4e3f2..bbe688e 100644\n--- a/sympy/matrices/common.py\n+++ b/sympy/matrices/common.py\n@@ -177,8 +177,8 @@ class MatrixShaping(MatrixRequired):\n             raise ShapeError('`self` and `other` must have the same number of columns.')\n         return self._eval_row_insert(pos, other)\n     def row_join(self, other):\n-        if self.cols == 0 and self.rows != other.rows:\n-            return self._new(other.rows, 0, []).row_join(other)\n+        if self.rows == 0:\n+            return self._new(0, self.cols + other.cols, [])\n         if self.rows != other.rows:\n             raise ShapeError('`self` and `rhs` must have the same number of rows.')\n         return self._eval_row_join(other)\n", "normalized_occurrence": 11}
