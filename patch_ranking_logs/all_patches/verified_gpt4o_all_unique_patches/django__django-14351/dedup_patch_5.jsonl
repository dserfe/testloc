{"model_name_or_path": "agentless", "instance_id": "django__django-14351", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 9591387..2d3586f 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1322,7 +1322,10 @@ class Query(BaseExpression):\n             if len(targets) == 1:\n                 col = self._get_col(targets[0], join_info.final_field, alias)\n             else:\n-                col = MultiColSource(alias, targets, join_info.targets, join_info.final_field)\n+                if len(targets) > 1 and lookups[0] == 'in':\n+                    col = self._get_col(targets[0], join_info.final_field, alias)\n+                else:\n+                    col = MultiColSource(alias, targets, join_info.targets, join_info.final_field)\n         else:\n             col = self._get_col(targets[0], join_info.final_field, alias)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex ec726d6..25bc8d9 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -716,6 +716,8 @@ class Query(BaseExpression):\n                 raise FieldError('Related Field got invalid lookup: {}'.format(lookups[0]))\n             if len(targets) == 1:\n                 col = self._get_col(targets[0], join_info.final_field, alias)\n+            elif len(targets) > 1 and lookups[0] == 'in':\n+                col = self._get_col(targets[0], join_info.final_field, alias)\n             else:\n                 col = MultiColSource(alias, targets, join_info.targets, join_info.final_field)\n         else:\n", "normalized_occurrence": 1}
