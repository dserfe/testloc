{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-12419", "model_patch": "diff --git a/sympy/matrices/expressions/matexpr.py b/sympy/matrices/expressions/matexpr.py\nindex 8f30d0d..57767c0 100644\n--- a/sympy/matrices/expressions/matexpr.py\n+++ b/sympy/matrices/expressions/matexpr.py\n@@ -198,8 +198,8 @@ class MatrixExpr(Basic):\n         return Adjoint(self)\n \n     def _entry(self, i, j):\n-        raise NotImplementedError(\n-            \"Indexing not implemented for %s\" % self.__class__.__name__)\n+        from sympy import KroneckerDelta\n+        return KroneckerDelta(i, j)\n \n     def adjoint(self):\n         return adjoint(self)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/expressions/matexpr.py b/sympy/matrices/expressions/matexpr.py\nindex 9ec3ea5..f2095f2 100644\n--- a/sympy/matrices/expressions/matexpr.py\n+++ b/sympy/matrices/expressions/matexpr.py\n@@ -131,7 +131,8 @@ class MatrixExpr(Basic):\n         from sympy.matrices.expressions.adjoint import Adjoint\n         return Adjoint(self)\n     def _entry(self, i, j):\n-        raise NotImplementedError('Indexing not implemented for %s' % self.__class__.__name__)\n+        from sympy import KroneckerDelta\n+        return KroneckerDelta(i, j)\n     def adjoint(self):\n         return adjoint(self)\n     def conjugate(self):\n", "normalized_occurrence": 1}
