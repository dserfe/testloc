{"model_name_or_path": "agentless", "instance_id": "django__django-12113", "model_patch": "diff --git a/django/db/backends/sqlite3/base.py b/django/db/backends/sqlite3/base.py\nindex 730e4b7..e615b66 100644\n--- a/django/db/backends/sqlite3/base.py\n+++ b/django/db/backends/sqlite3/base.py\n@@ -259,6 +259,9 @@ class DatabaseWrapper(BaseDatabaseWrapper):\n \n     @async_unsafe\n     def close(self):\n+        if self.connection is not None:\n+            self.connection.close()\n+            self.connection = None\n         self.validate_thread_sharing()\n         # If database is in memory, closing the connection destroys the\n         # database. To prevent accidental data loss, ignore close requests on\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/sqlite3/base.py b/django/db/backends/sqlite3/base.py\nindex f4e71e4..578a24a 100644\n--- a/django/db/backends/sqlite3/base.py\n+++ b/django/db/backends/sqlite3/base.py\n@@ -126,6 +126,9 @@ class DatabaseWrapper(BaseDatabaseWrapper):\n         return self.connection.cursor(factory=SQLiteCursorWrapper)\n     @async_unsafe\n     def close(self):\n+        if self.connection is not None:\n+            self.connection.close()\n+            self.connection = None\n         self.validate_thread_sharing()\n         if not self.is_in_memory_db():\n             BaseDatabaseWrapper.close(self)\n", "normalized_occurrence": 1}
