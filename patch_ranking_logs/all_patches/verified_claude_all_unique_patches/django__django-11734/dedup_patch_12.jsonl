{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11734", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex dbcceb5..8642f8e 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1703,7 +1703,9 @@ class Query(BaseExpression):\n         \"\"\"\n         filter_lhs, filter_rhs = filter_expr\n         if isinstance(filter_rhs, F):\n-            filter_expr = (filter_lhs, OuterRef(filter_rhs.name))\n+            # Only convert F() to OuterRef() if it's not already referencing an outer query\n+            if not any(isinstance(expr, OuterRef) for expr in filter_rhs.get_expressions()):\n+                filter_expr = (filter_lhs, OuterRef(filter_rhs.name))\n         # Generate the inner query.\n         query = Query(self.model)\n         query._filtered_relations = self._filtered_relations\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 4ed627a..0974bea 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -916,7 +916,8 @@ class Query(BaseExpression):\n     def split_exclude(self, filter_expr, can_reuse, names_with_path):\n         filter_lhs, filter_rhs = filter_expr\n         if isinstance(filter_rhs, F):\n-            filter_expr = (filter_lhs, OuterRef(filter_rhs.name))\n+            if not any((isinstance(expr, OuterRef) for expr in filter_rhs.get_expressions())):\n+                filter_expr = (filter_lhs, OuterRef(filter_rhs.name))\n         query = Query(self.model)\n         query._filtered_relations = self._filtered_relations\n         query.add_filter(filter_expr)\n", "normalized_occurrence": 1}
