{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-18698", "model_patch": "diff --git a/sympy/polys/sqfreetools.py b/sympy/polys/sqfreetools.py\nindex fbdbcb2..f595e33 100644\n--- a/sympy/polys/sqfreetools.py\n+++ b/sympy/polys/sqfreetools.py\n@@ -410,7 +410,8 @@ def dmp_sqf_list(f, u, K, all=False):\n         h = dmp_sub(q, d, u, K)\n \n         if dmp_zero_p(h, u):\n-            result.append((p, i))\n+            if all or dmp_degree(p, u) > 0:\n+                result.append((p, i))\n             break\n \n         g, p, q = dmp_inner_gcd(p, h, u, K)\n@@ -420,6 +421,17 @@ def dmp_sqf_list(f, u, K, all=False):\n \n         i += 1\n \n+    # Group factors by multiplicity\n+    grouped = {}\n+    for factor, mult in result:\n+        if mult in grouped:\n+            grouped[mult] = dmp_mul(grouped[mult], factor, u, K)\n+        else:\n+            grouped[mult] = factor\n+\n+    # Convert back to list format\n+    result = [(factor, mult) for mult, factor in sorted(grouped.items())]\n+\n     return coeff, result\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/sqfreetools.py b/sympy/polys/sqfreetools.py\nindex 09fb2b6..5691c98 100644\n--- a/sympy/polys/sqfreetools.py\n+++ b/sympy/polys/sqfreetools.py\n@@ -148,12 +148,20 @@ def dmp_sqf_list(f, u, K, all=False):\n         d = dmp_diff(p, 1, u, K)\n         h = dmp_sub(q, d, u, K)\n         if dmp_zero_p(h, u):\n-            result.append((p, i))\n+            if all or dmp_degree(p, u) > 0:\n+                result.append((p, i))\n             break\n         g, p, q = dmp_inner_gcd(p, h, u, K)\n         if all or dmp_degree(g, u) > 0:\n             result.append((g, i))\n         i += 1\n+    grouped = {}\n+    for factor, mult in result:\n+        if mult in grouped:\n+            grouped[mult] = dmp_mul(grouped[mult], factor, u, K)\n+        else:\n+            grouped[mult] = factor\n+    result = [(factor, mult) for mult, factor in sorted(grouped.items())]\n     return (coeff, result)\n def dmp_sqf_list_include(f, u, K, all=False):\n     if not u:\n", "normalized_occurrence": 1}
