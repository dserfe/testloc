{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-13439", "model_patch": "diff --git a/sklearn/pipeline.py b/sklearn/pipeline.py\nindex 4594f40..4155c13 100644\n--- a/sklearn/pipeline.py\n+++ b/sklearn/pipeline.py\n@@ -26,7 +26,9 @@ from .utils.metaestimators import _BaseComposition\n __all__ = ['Pipeline', 'FeatureUnion', 'make_pipeline', 'make_union']\n \n \n-class Pipeline(_BaseComposition):\n+from collections.abc import Sequence\n+\n+class Pipeline(_BaseComposition, Sequence):\n     \"\"\"Pipeline of transforms with a final estimator.\n \n     Sequentially apply a list of transforms and a final estimator.\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/pipeline.py b/sklearn/pipeline.py\nindex 20e70ee..be3c025 100644\n--- a/sklearn/pipeline.py\n+++ b/sklearn/pipeline.py\n@@ -9,7 +9,8 @@ from .utils import Bunch\n from .utils.validation import check_memory\n from .utils.metaestimators import _BaseComposition\n __all__ = ['Pipeline', 'FeatureUnion', 'make_pipeline', 'make_union']\n-class Pipeline(_BaseComposition):\n+from collections.abc import Sequence\n+class Pipeline(_BaseComposition, Sequence):\n     _required_parameters = ['steps']\n     def __init__(self, steps, memory=None):\n         self.steps = steps\n", "normalized_occurrence": 1}
