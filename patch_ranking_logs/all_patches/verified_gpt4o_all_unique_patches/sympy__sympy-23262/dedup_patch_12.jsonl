{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-23262", "model_patch": "diff --git a/sympy/printing/python.py b/sympy/printing/python.py\nindex 103a398..45397e5 100644\n--- a/sympy/printing/python.py\n+++ b/sympy/printing/python.py\n@@ -1,3 +1,4 @@\n+\n import keyword as kw\n import sympy\n from .repr import ReprPrinter\n@@ -9,6 +10,12 @@ STRPRINT = (\"Add\", \"Infinity\", \"Integer\", \"Mul\", \"NegativeInfinity\",\n \n \n class PythonPrinter(ReprPrinter, StrPrinter):\n+\n+    def _print_Tuple(self, expr):\n+        if len(expr) == 1:\n+            return f\"({self._print(expr[0])},)\"\n+        else:\n+            return f\"({', '.join(self._print(arg) for arg in expr)})\"\n     \"\"\"A printer which converts an expression into its Python interpretation.\"\"\"\n \n     def __init__(self, settings=None):\n", "occurrence": 2, "normalized_patch": "--- a/sympy/printing/python.py\n+++ b/sympy/printing/python.py\n+    def _print_Tuple(self, expr):\n+        if len(expr) == 1:\n+            return f'({self._print(expr[0])},)'\n+        else:\n+            return f\"({', '.join((self._print(arg) for arg in expr))})\"\n+    'A printer which converts an expression into its Python interpretation.'", "normalized_occurrence": 2}
