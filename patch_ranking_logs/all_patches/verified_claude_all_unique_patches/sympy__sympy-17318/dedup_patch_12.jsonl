{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-17318", "model_patch": "diff --git a/sympy/simplify/sqrtdenest.py b/sympy/simplify/sqrtdenest.py\nindex ea8922d..9b1e03e 100644\n--- a/sympy/simplify/sqrtdenest.py\n+++ b/sympy/simplify/sqrtdenest.py\n@@ -166,7 +166,7 @@ def _sqrt_match(p):\n         v = [(sqrt_depth(x), x, i) for i, x in enumerate(pargs)]\n         nmax = max(v, key=default_sort_key)\n         if nmax[0] == 0:\n-            res = []\n+            res = [S.Zero, b, r**2]\n         else:\n             # select r\n             depth, _, i = nmax\n@@ -211,7 +211,7 @@ def _sqrt_match(p):\n         if is_sqrt(r):\n             res = (S.Zero, b, r**2)\n         else:\n-            res = []\n+            res = [S.Zero, b, r**2]\n     return list(res)\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/sqrtdenest.py b/sympy/simplify/sqrtdenest.py\nindex d4a8177..cda3856 100644\n--- a/sympy/simplify/sqrtdenest.py\n+++ b/sympy/simplify/sqrtdenest.py\n@@ -63,7 +63,7 @@ def _sqrt_match(p):\n         v = [(sqrt_depth(x), x, i) for i, x in enumerate(pargs)]\n         nmax = max(v, key=default_sort_key)\n         if nmax[0] == 0:\n-            res = []\n+            res = [S.Zero, b, r ** 2]\n         else:\n             depth, _, i = nmax\n             r = pargs.pop(i)\n@@ -105,7 +105,7 @@ def _sqrt_match(p):\n         if is_sqrt(r):\n             res = (S.Zero, b, r ** 2)\n         else:\n-            res = []\n+            res = [S.Zero, b, r ** 2]\n     return list(res)\n class SqrtdenestStopIteration(StopIteration):\n     pass\n", "normalized_occurrence": 1}
