{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-5787", "model_patch": "diff --git a/src/_pytest/reports.py b/src/_pytest/reports.py\nindex ba95b0e..f334b7b 100644\n--- a/src/_pytest/reports.py\n+++ b/src/_pytest/reports.py\n@@ -408,7 +408,31 @@ class CollectErrorRepr(TerminalRepr):\n         out.line(self.longrepr, red=True)\n \n \n+def serialize_longrepr(longrepr):\n+    if isinstance(longrepr, Exception):\n+        return {\n+            \"reprcrash\": {\n+                \"path\": str(longrepr.__traceback__.tb_frame.f_code.co_filename),\n+                \"lineno\": longrepr.__traceback__.tb_lineno,\n+                \"message\": str(longrepr)\n+            },\n+            \"reprtraceback\": [str(longrepr)]\n+        }\n+    else:\n+        return str(longrepr)\n+\n+def deserialize_longrepr(data):\n+    if isinstance(data, dict) and \"reprcrash\" in data and \"reprtraceback\" in data:\n+        return Exception(data[\"reprcrash\"][\"message\"])\n+    else:\n+        return data\n+\n def pytest_report_to_serializable(report):\n+    if isinstance(report, (TestReport, CollectReport)):\n+        data = report._to_json()\n+        data[\"_report_type\"] = report.__class__.__name__\n+        data[\"longrepr\"] = serialize_longrepr(data[\"longrepr\"])\n+        return data\n     if isinstance(report, (TestReport, CollectReport)):\n         data = report._to_json()\n         data[\"_report_type\"] = report.__class__.__name__\n@@ -417,6 +441,10 @@ def pytest_report_to_serializable(report):\n \n def pytest_report_from_serializable(data):\n     if \"_report_type\" in data:\n+        longrepr = data.get(\"longrepr\", None)\n+        if longrepr:\n+            data[\"longrepr\"] = deserialize_longrepr(longrepr)\n+\n         if data[\"_report_type\"] == \"TestReport\":\n             return TestReport._from_json(data)\n         elif data[\"_report_type\"] == \"CollectReport\":\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/reports.py b/src/_pytest/reports.py\nindex 3292df7..4883207 100644\n--- a/src/_pytest/reports.py\n+++ b/src/_pytest/reports.py\n@@ -205,13 +205,31 @@ class CollectErrorRepr(TerminalRepr):\n         self.longrepr = msg\n     def toterminal(self, out):\n         out.line(self.longrepr, red=True)\n+def serialize_longrepr(longrepr):\n+    if isinstance(longrepr, Exception):\n+        return {'reprcrash': {'path': str(longrepr.__traceback__.tb_frame.f_code.co_filename), 'lineno': longrepr.__traceback__.tb_lineno, 'message': str(longrepr)}, 'reprtraceback': [str(longrepr)]}\n+    else:\n+        return str(longrepr)\n+def deserialize_longrepr(data):\n+    if isinstance(data, dict) and 'reprcrash' in data and ('reprtraceback' in data):\n+        return Exception(data['reprcrash']['message'])\n+    else:\n+        return data\n def pytest_report_to_serializable(report):\n+    if isinstance(report, (TestReport, CollectReport)):\n+        data = report._to_json()\n+        data['_report_type'] = report.__class__.__name__\n+        data['longrepr'] = serialize_longrepr(data['longrepr'])\n+        return data\n     if isinstance(report, (TestReport, CollectReport)):\n         data = report._to_json()\n         data['_report_type'] = report.__class__.__name__\n         return data\n def pytest_report_from_serializable(data):\n     if '_report_type' in data:\n+        longrepr = data.get('longrepr', None)\n+        if longrepr:\n+            data['longrepr'] = deserialize_longrepr(longrepr)\n         if data['_report_type'] == 'TestReport':\n             return TestReport._from_json(data)\n         elif data['_report_type'] == 'CollectReport':\n", "normalized_occurrence": 1}
