{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-4248", "model_patch": "diff --git a/xarray/core/formatting.py b/xarray/core/formatting.py\nindex 91a7f67..7947d5e 100644\n--- a/xarray/core/formatting.py\n+++ b/xarray/core/formatting.py\n@@ -278,7 +278,10 @@ def summarize_variable(\n             raise TypeError(f\"`max_width` value of `{max_width}` is not a valid int\")\n         else:\n             max_width = max_width_options\n-    first_col = pretty_print(f\"  {marker} {name} \", col_width)\n+    unit_str = \"\"\n+    if \"units\" in var.attrs:\n+        unit_str = f\", in {var.attrs['units']}\"\n+    first_col = pretty_print(f\"  {marker} {name}{unit_str} \", col_width)\n     if var.dims:\n         dims_str = \"({}) \".format(\", \".join(map(str, var.dims)))\n     else:\n@@ -292,7 +295,10 @@ def summarize_variable(\n \n \n def _summarize_coord_multiindex(coord, col_width, marker):\n-    first_col = pretty_print(f\"  {marker} {coord.name} \", col_width)\n+    unit_str = \"\"\n+    if \"units\" in coord.attrs:\n+        unit_str = f\", in {coord.attrs['units']}\"\n+    first_col = pretty_print(f\"  {marker} {coord.name}{unit_str} \", col_width)\n     return \"{}({}) MultiIndex\".format(first_col, str(coord.dims[0]))\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/formatting.py b/xarray/core/formatting.py\nindex 6d31a74..1608e65 100644\n--- a/xarray/core/formatting.py\n+++ b/xarray/core/formatting.py\n@@ -158,7 +158,10 @@ def summarize_variable(name: Hashable, var, col_width: int, marker: str=' ', max\n             raise TypeError(f'`max_width` value of `{max_width}` is not a valid int')\n         else:\n             max_width = max_width_options\n-    first_col = pretty_print(f'  {marker} {name} ', col_width)\n+    unit_str = ''\n+    if 'units' in var.attrs:\n+        unit_str = f\", in {var.attrs['units']}\"\n+    first_col = pretty_print(f'  {marker} {name}{unit_str} ', col_width)\n     if var.dims:\n         dims_str = '({}) '.format(', '.join(map(str, var.dims)))\n     else:\n@@ -168,7 +171,10 @@ def summarize_variable(name: Hashable, var, col_width: int, marker: str=' ', max\n     values_str = inline_variable_array_repr(var, values_width)\n     return front_str + values_str\n def _summarize_coord_multiindex(coord, col_width, marker):\n-    first_col = pretty_print(f'  {marker} {coord.name} ', col_width)\n+    unit_str = ''\n+    if 'units' in coord.attrs:\n+        unit_str = f\", in {coord.attrs['units']}\"\n+    first_col = pretty_print(f'  {marker} {coord.name}{unit_str} ', col_width)\n     return '{}({}) MultiIndex'.format(first_col, str(coord.dims[0]))\n def _summarize_coord_levels(coord, col_width, marker='-'):\n     return '\\n'.join((summarize_variable(lname, coord.get_level_variable(lname), col_width, marker=marker) for lname in coord.level_names))\n", "normalized_occurrence": 1}
