{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-21379", "model_patch": "diff --git a/sympy/functions/elementary/hyperbolic.py b/sympy/functions/elementary/hyperbolic.py\nindex 1f2a00b..681e330 100644\n--- a/sympy/functions/elementary/hyperbolic.py\n+++ b/sympy/functions/elementary/hyperbolic.py\n@@ -110,6 +110,10 @@ class sinh(HyperbolicFunction):\n \n         arg = sympify(arg)\n \n+        # Skip evaluation for Piecewise arguments to avoid polynomial errors\n+        if arg.has(Piecewise):\n+            return None\n+\n         if arg.is_Number:\n             if arg is S.NaN:\n                 return S.NaN\n@@ -303,6 +307,10 @@ class cosh(HyperbolicFunction):\n         from sympy import cos\n         arg = sympify(arg)\n \n+        # Skip evaluation for Piecewise arguments to avoid polynomial errors\n+        if arg.has(Piecewise):\n+            return None\n+\n         if arg.is_Number:\n             if arg is S.NaN:\n                 return S.NaN\n@@ -539,6 +547,10 @@ class tanh(HyperbolicFunction):\n         from sympy import tan\n         arg = sympify(arg)\n \n+        # Skip evaluation for Piecewise arguments to avoid polynomial errors\n+        if arg.has(Piecewise):\n+            return None\n+\n         if arg.is_Number:\n             if arg is S.NaN:\n                 return S.NaN\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/hyperbolic.py b/sympy/functions/elementary/hyperbolic.py\nindex 1fd73fe..72c4206 100644\n--- a/sympy/functions/elementary/hyperbolic.py\n+++ b/sympy/functions/elementary/hyperbolic.py\n@@ -38,6 +38,8 @@ class sinh(HyperbolicFunction):\n     def eval(cls, arg):\n         from sympy import sin\n         arg = sympify(arg)\n+        if arg.has(Piecewise):\n+            return None\n         if arg.is_Number:\n             if arg is S.NaN:\n                 return S.NaN\n@@ -171,6 +173,8 @@ class cosh(HyperbolicFunction):\n     def eval(cls, arg):\n         from sympy import cos\n         arg = sympify(arg)\n+        if arg.has(Piecewise):\n+            return None\n         if arg.is_Number:\n             if arg is S.NaN:\n                 return S.NaN\n@@ -313,6 +317,8 @@ class tanh(HyperbolicFunction):\n     def eval(cls, arg):\n         from sympy import tan\n         arg = sympify(arg)\n+        if arg.has(Piecewise):\n+            return None\n         if arg.is_Number:\n             if arg is S.NaN:\n                 return S.NaN\n", "normalized_occurrence": 1}
