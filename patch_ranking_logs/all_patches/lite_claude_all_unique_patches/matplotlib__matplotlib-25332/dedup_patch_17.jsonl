{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-25332", "model_patch": "diff --git a/lib/matplotlib/text.py b/lib/matplotlib/text.py\nindex 92db988..898f336 100644\n--- a/lib/matplotlib/text.py\n+++ b/lib/matplotlib/text.py\n@@ -234,8 +234,12 @@ class Text(Artist):\n \n     def __getstate__(self):\n         d = super().__getstate__()\n-        # remove the cached _renderer (if it exists)\n+        # remove the cached _renderer and any weak references (if they exist)\n         d['_renderer'] = None\n+        # Convert any weak references to their referred objects or None\n+        for k, v in list(d.items()):\n+            if isinstance(v, weakref.ReferenceType):\n+                d[k] = v() if v() is not None else None\n         return d\n \n     def contains(self, mouseevent):\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/text.py b/lib/matplotlib/text.py\nindex 489c66c..acbb0d0 100644\n--- a/lib/matplotlib/text.py\n+++ b/lib/matplotlib/text.py\n@@ -90,6 +90,9 @@ class Text(Artist):\n     def __getstate__(self):\n         d = super().__getstate__()\n         d['_renderer'] = None\n+        for k, v in list(d.items()):\n+            if isinstance(v, weakref.ReferenceType):\n+                d[k] = v() if v() is not None else None\n         return d\n     def contains(self, mouseevent):\n         inside, info = self._default_contains(mouseevent)\n", "normalized_occurrence": 1}
