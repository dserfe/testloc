{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-15346", "model_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex 9a2774b..5bff177 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -509,6 +509,23 @@ def trigsimp(expr, **opts):\n                                polynomial=True, hints=[2, tan]))),\n         'old': lambda x: trigsimp_old(x, **opts),\n                    }[method]\n+    \n+    # Convert any rational numbers in trigonometric functions to symbolic expressions for simplification\n+    def convert_rationals(expr):\n+        from sympy import Symbol, Wild\n+        w = Wild('w')\n+        if expr.has(TrigonometricFunction):\n+            matches = expr.find(lambda x: isinstance(x, TrigonometricFunction) and x.args[0].is_Rational)\n+            for m in matches:\n+                rat = m.args[0]\n+                sym = Symbol('_temp')\n+                expr = expr.subs(rat, sym)\n+                expr = trigsimpfunc(expr)\n+                expr = expr.subs(sym, rat)\n+            return expr\n+        return expr\n+\n+    expr = convert_rationals(expr)\n \n     return trigsimpfunc(expr)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex 79862a9..8530f0d 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -171,6 +171,20 @@ def trigsimp(expr, **opts):\n             return new\n         return trigsimp_groebner(new, **opts)\n     trigsimpfunc = {'fu': lambda x: fu(x, **opts), 'matching': lambda x: futrig(x), 'groebner': lambda x: groebnersimp(x, **opts), 'combined': lambda x: futrig(groebnersimp(x, polynomial=True, hints=[2, tan])), 'old': lambda x: trigsimp_old(x, **opts)}[method]\n+    def convert_rationals(expr):\n+        from sympy import Symbol, Wild\n+        w = Wild('w')\n+        if expr.has(TrigonometricFunction):\n+            matches = expr.find(lambda x: isinstance(x, TrigonometricFunction) and x.args[0].is_Rational)\n+            for m in matches:\n+                rat = m.args[0]\n+                sym = Symbol('_temp')\n+                expr = expr.subs(rat, sym)\n+                expr = trigsimpfunc(expr)\n+                expr = expr.subs(sym, rat)\n+            return expr\n+        return expr\n+    expr = convert_rationals(expr)\n     return trigsimpfunc(expr)\n def exptrigsimp(expr):\n     from sympy.simplify.fu import hyper_as_trig, TR2i\n", "normalized_occurrence": 1}
