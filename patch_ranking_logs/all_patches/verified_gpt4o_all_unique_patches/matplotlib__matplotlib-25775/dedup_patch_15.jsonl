{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25775", "model_patch": "diff --git a/lib/matplotlib/text.py b/lib/matplotlib/text.py\nindex c2b18d4..5f0a51c 100644\n--- a/lib/matplotlib/text.py\n+++ b/lib/matplotlib/text.py\n@@ -309,7 +309,22 @@ class Text(Artist):\n         \"\"\"Return the text rotation mode.\"\"\"\n         return self._rotation_mode\n \n-    def update_from(self, other):\n+    def get_antialiased(self):\n+        \"\"\"\n+        Return the antialiased value for the text.\n+        \"\"\"\n+        return getattr(self, '_antialiased', mpl.rcParams[\"text.antialiased\"])\n+\n+    def set_antialiased(self, b):\n+        \"\"\"\n+        Set the antialiased value for the text.\n+\n+        Parameters\n+        ----------\n+        b : bool\n+        \"\"\"\n+        self._antialiased = bool(b)\n+        self.stale = True\n         # docstring inherited\n         super().update_from(other)\n         self._color = other._color\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/text.py b/lib/matplotlib/text.py\nindex 5c973cb..10be128 100644\n--- a/lib/matplotlib/text.py\n+++ b/lib/matplotlib/text.py\n@@ -129,7 +129,11 @@ class Text(Artist):\n         self.stale = True\n     def get_rotation_mode(self):\n         return self._rotation_mode\n-    def update_from(self, other):\n+    def get_antialiased(self):\n+        return getattr(self, '_antialiased', mpl.rcParams['text.antialiased'])\n+    def set_antialiased(self, b):\n+        self._antialiased = bool(b)\n+        self.stale = True\n         super().update_from(other)\n         self._color = other._color\n         self._multialignment = other._multialignment\n", "normalized_occurrence": 1}
