{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-14396", "model_patch": "diff --git a/sympy/polys/polyoptions.py b/sympy/polys/polyoptions.py\nindex 57c950b..310ab3e 100644\n--- a/sympy/polys/polyoptions.py\n+++ b/sympy/polys/polyoptions.py\n@@ -405,8 +405,8 @@ class Domain(with_metaclass(OptionType, Option)):\n     _re_realfield = re.compile(r\"^(R|RR)(_(\\d+))?$\")\n     _re_complexfield = re.compile(r\"^(C|CC)(_(\\d+))?$\")\n     _re_finitefield = re.compile(r\"^(FF|GF)\\((\\d+)\\)$\")\n-    _re_polynomial = re.compile(r\"^(Z|ZZ|Q|QQ)\\[(.+)\\]$\")\n-    _re_fraction = re.compile(r\"^(Z|ZZ|Q|QQ)\\((.+)\\)$\")\n+    _re_polynomial = re.compile(r\"^(Z|ZZ|Q|QQ|R|RR|C|CC)\\[(.+)\\]$\")\n+    _re_fraction = re.compile(r\"^(Z|ZZ|Q|QQ|R|RR|C|CC)\\((.+)\\)$\")\n     _re_algebraic = re.compile(r\"^(Q|QQ)\\<(.+)\\>$\")\n \n     @classmethod\n@@ -480,7 +480,7 @@ class Domain(with_metaclass(OptionType, Option)):\n                 gens = list(map(sympify, r.groups()[1].split(',')))\n                 return sympy.polys.domains.QQ.algebraic_field(*gens)\n \n-        raise OptionError('expected a valid domain specification, got %s' % domain)\n+        raise OptionError(f'Invalid domain specification: {domain}. Expected a valid domain such as ZZ, QQ, RR, CC, etc.')\n \n     @classmethod\n     def postprocess(cls, options):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/polyoptions.py b/sympy/polys/polyoptions.py\nindex 904ae78..c78d127 100644\n--- a/sympy/polys/polyoptions.py\n+++ b/sympy/polys/polyoptions.py\n@@ -231,8 +231,8 @@ class Domain(with_metaclass(OptionType, Option)):\n     _re_realfield = re.compile('^(R|RR)(_(\\\\d+))?$')\n     _re_complexfield = re.compile('^(C|CC)(_(\\\\d+))?$')\n     _re_finitefield = re.compile('^(FF|GF)\\\\((\\\\d+)\\\\)$')\n-    _re_polynomial = re.compile('^(Z|ZZ|Q|QQ)\\\\[(.+)\\\\]$')\n-    _re_fraction = re.compile('^(Z|ZZ|Q|QQ)\\\\((.+)\\\\)$')\n+    _re_polynomial = re.compile('^(Z|ZZ|Q|QQ|R|RR|C|CC)\\\\[(.+)\\\\]$')\n+    _re_fraction = re.compile('^(Z|ZZ|Q|QQ|R|RR|C|CC)\\\\((.+)\\\\)$')\n     _re_algebraic = re.compile('^(Q|QQ)\\\\<(.+)\\\\>$')\n     @classmethod\n     def preprocess(cls, domain):\n@@ -284,7 +284,7 @@ class Domain(with_metaclass(OptionType, Option)):\n             if r is not None:\n                 gens = list(map(sympify, r.groups()[1].split(',')))\n                 return sympy.polys.domains.QQ.algebraic_field(*gens)\n-        raise OptionError('expected a valid domain specification, got %s' % domain)\n+        raise OptionError(f'Invalid domain specification: {domain}. Expected a valid domain such as ZZ, QQ, RR, CC, etc.')\n     @classmethod\n     def postprocess(cls, options):\n         if 'gens' in options and 'domain' in options and options['domain'].is_Composite and set(options['domain'].symbols) & set(options['gens']):\n", "normalized_occurrence": 1}
