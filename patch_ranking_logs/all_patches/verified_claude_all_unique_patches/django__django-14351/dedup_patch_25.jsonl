{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14351", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 9591387..2c01177 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1768,6 +1768,9 @@ class Query(BaseExpression):\n         # Generate the inner query.\n         query = Query(self.model)\n         query._filtered_relations = self._filtered_relations\n+        # For __in lookups, we only need the primary key field\n+        if isinstance(filter_rhs, (list, tuple, QuerySet)) and filter_lhs.endswith('__in'):\n+            query.default_cols = False\n         query.add_filter(filter_expr)\n         query.clear_ordering(True)\n         # Try to have as simple as possible subquery -> trim leading joins from\n", "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex ec726d6..8d16783 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -962,6 +962,8 @@ class Query(BaseExpression):\n             filter_expr = (filter_lhs, OuterRef(filter_rhs.name))\n         query = Query(self.model)\n         query._filtered_relations = self._filtered_relations\n+        if isinstance(filter_rhs, (list, tuple, QuerySet)) and filter_lhs.endswith('__in'):\n+            query.default_cols = False\n         query.add_filter(filter_expr)\n         query.clear_ordering(True)\n         trimmed_prefix, contains_louter = query.trim_start(names_with_path)\n", "normalized_occurrence": 1}
