{"model_name_or_path": "agentless", "instance_id": "django__django-14351", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 9591387..de0f1ea 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1267,6 +1267,9 @@ class Query(BaseExpression):\n         if not arg:\n             raise FieldError(\"Cannot parse keyword query %r\" % arg)\n         lookups, parts, reffed_expression = self.solve_lookup_type(arg)\n+        # Ensure only the primary key is selected in subquery when using `__in` lookup\n+        if 'in' in lookups and isinstance(value, QuerySet):\n+            value = value.values_list('pk', flat=True)\n \n         if check_filterable:\n             self.check_filterable(reffed_expression)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex ec726d6..fdfa649 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -681,6 +681,8 @@ class Query(BaseExpression):\n         if not arg:\n             raise FieldError('Cannot parse keyword query %r' % arg)\n         lookups, parts, reffed_expression = self.solve_lookup_type(arg)\n+        if 'in' in lookups and isinstance(value, QuerySet):\n+            value = value.values_list('pk', flat=True)\n         if check_filterable:\n             self.check_filterable(reffed_expression)\n         if not allow_joins and len(parts) > 1:\n", "normalized_occurrence": 1}
