{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-6903", "model_patch": "diff --git a/pylint/lint/run.py b/pylint/lint/run.py\nindex aabf0aa..84b5bfa 100644\n--- a/pylint/lint/run.py\n+++ b/pylint/lint/run.py\n@@ -57,7 +57,7 @@ def _query_cpu() -> int | None:\n         with open(\"/sys/fs/cgroup/cpu/cpu.shares\", encoding=\"utf-8\") as file:\n             cpu_shares = int(file.read().rstrip())\n         # For AWS, gives correct value * 1024.\n-        avail_cpu = int(cpu_shares / 1024)\n+        avail_cpu = int(cpu_shares / 1024) or 1\n     return avail_cpu\n \n \n@@ -182,7 +182,7 @@ group are mutually exclusive.\",\n                 )\n                 linter.set_option(\"jobs\", 1)\n             elif linter.config.jobs == 0:\n-                linter.config.jobs = _cpu_count()\n+                linter.config.jobs = _cpu_count() or 1\n \n         if self._output:\n             try:\n", "occurrence": 2, "normalized_patch": "diff --git a/pylint/lint/run.py b/pylint/lint/run.py\nindex 1397b08..04503e1 100644\n--- a/pylint/lint/run.py\n+++ b/pylint/lint/run.py\n@@ -31,7 +31,7 @@ def _query_cpu() -> int | None:\n     elif Path('/sys/fs/cgroup/cpu/cpu.shares').is_file():\n         with open('/sys/fs/cgroup/cpu/cpu.shares', encoding='utf-8') as file:\n             cpu_shares = int(file.read().rstrip())\n-        avail_cpu = int(cpu_shares / 1024)\n+        avail_cpu = int(cpu_shares / 1024) or 1\n     return avail_cpu\n def _cpu_count() -> int:\n     cpu_share = _query_cpu()\n@@ -93,7 +93,7 @@ class Run:\n                 print('Multiprocessing library is missing, fallback to single process', file=sys.stderr)\n                 linter.set_option('jobs', 1)\n             elif linter.config.jobs == 0:\n-                linter.config.jobs = _cpu_count()\n+                linter.config.jobs = _cpu_count() or 1\n         if self._output:\n             try:\n                 with open(self._output, 'w', encoding='utf-8') as output:\n", "normalized_occurrence": 2}
