{"model_name_or_path": "agentless", "instance_id": "django__django-15957", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 5314293..a030a05 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -1564,14 +1564,17 @@ class QuerySet:\n         if lookups == (None,):\n             clone._prefetch_related_lookups = ()\n         else:\n-            for lookup in lookups:\n-                if isinstance(lookup, Prefetch):\n-                    lookup = lookup.prefetch_to\n-                lookup = lookup.split(LOOKUP_SEP, 1)[0]\n-                if lookup in self.query._filtered_relations:\n-                    raise ValueError(\n-                        \"prefetch_related() is not supported with FilteredRelation.\"\n-                    )\n+            if self.query.low_mark == 0 and self.query.high_mark is not None:\n+                raise AssertionError(\"Cannot filter a query once a slice has been taken.\")\n+            else:\n+                for lookup in lookups:\n+                    if isinstance(lookup, Prefetch):\n+                        lookup = lookup.prefetch_to\n+                    lookup = lookup.split(LOOKUP_SEP, 1)[0]\n+                    if lookup in self.query._filtered_relations:\n+                        raise ValueError(\n+                            \"prefetch_related() is not supported with FilteredRelation.\"\n+                        )\n             clone._prefetch_related_lookups = clone._prefetch_related_lookups + lookups\n         return clone\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex cb06696..b670c2c 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -835,12 +835,15 @@ class QuerySet:\n         if lookups == (None,):\n             clone._prefetch_related_lookups = ()\n         else:\n-            for lookup in lookups:\n-                if isinstance(lookup, Prefetch):\n-                    lookup = lookup.prefetch_to\n-                lookup = lookup.split(LOOKUP_SEP, 1)[0]\n-                if lookup in self.query._filtered_relations:\n-                    raise ValueError('prefetch_related() is not supported with FilteredRelation.')\n+            if self.query.low_mark == 0 and self.query.high_mark is not None:\n+                raise AssertionError('Cannot filter a query once a slice has been taken.')\n+            else:\n+                for lookup in lookups:\n+                    if isinstance(lookup, Prefetch):\n+                        lookup = lookup.prefetch_to\n+                    lookup = lookup.split(LOOKUP_SEP, 1)[0]\n+                    if lookup in self.query._filtered_relations:\n+                        raise ValueError('prefetch_related() is not supported with FilteredRelation.')\n             clone._prefetch_related_lookups = clone._prefetch_related_lookups + lookups\n         return clone\n     def annotate(self, *args, **kwargs):\n", "normalized_occurrence": 1}
