{"model_name_or_path": "agentless", "instance_id": "django__django-16819", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 7088737..e5d27ed 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -809,6 +809,15 @@ class IndexOperation(Operation):\n \n \n class AddIndex(IndexOperation):\n+    def reduce(self, operation, app_label):\n+        if (\n+            isinstance(operation, RemoveIndex)\n+            and self.model_name_lower == operation.model_name_lower\n+            and self.index.name == operation.name\n+        ):\n+            # AddIndex followed by RemoveIndex cancels out\n+            return []\n+        return super().reduce(operation, app_label)\n     \"\"\"Add an index on a model.\"\"\"\n \n     def __init__(self, model_name, index):\n@@ -863,6 +872,19 @@ class AddIndex(IndexOperation):\n \n \n class RemoveIndex(IndexOperation):\n+    def reduce(self, operation, app_label):\n+        if (\n+            isinstance(operation, AddIndex)\n+            and self.model_name_lower == operation.model_name_lower\n+            and self.name == operation.index.name\n+        ):\n+            # RemoveIndex followed by AddIndex should be combined into RenameIndex\n+            return [RenameIndex(\n+                model_name=self.model_name,\n+                new_name=operation.index.name,\n+                old_name=self.name,\n+            )]\n+        return super().reduce(operation, app_label)\n     \"\"\"Remove an index from a model.\"\"\"\n \n     def __init__(self, model_name, name):\n", "occurrence": 1, "normalized_patch": "--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n+    def reduce(self, operation, app_label):\n+        if isinstance(operation, RemoveIndex) and self.model_name_lower == operation.model_name_lower and (self.index.name == operation.name):\n+            return []\n+        return super().reduce(operation, app_label)\n+    'Add an index on a model.'\n+    def reduce(self, operation, app_label):\n+        if isinstance(operation, AddIndex) and self.model_name_lower == operation.model_name_lower and (self.name == operation.index.name):\n+            return [RenameIndex(model_name=self.model_name, new_name=operation.index.name, old_name=self.name)]\n+        return super().reduce(operation, app_label)\n+    'Remove an index from a model.'", "normalized_occurrence": 1}
