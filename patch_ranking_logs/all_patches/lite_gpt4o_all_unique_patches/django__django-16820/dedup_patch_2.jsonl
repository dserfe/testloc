{"model_name_or_path": "agentless", "instance_id": "django__django-16820", "model_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 42f1c50..2ba32e6 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -1520,9 +1520,9 @@ class MigrationAutodetector:\n     def generate_removed_altered_unique_together(self):\n         self._generate_removed_altered_foo_together(operations.AlterUniqueTogether)\n \n-    # RemovedInDjango51Warning.\n     def generate_removed_altered_index_together(self):\n         self._generate_removed_altered_foo_together(operations.AlterIndexTogether)\n+        self._generate_removed_altered_foo_together(operations.RemoveIndex)\n \n     def _generate_altered_foo_together(self, operation):\n         for (\n@@ -1543,9 +1543,9 @@ class MigrationAutodetector:\n     def generate_altered_unique_together(self):\n         self._generate_altered_foo_together(operations.AlterUniqueTogether)\n \n-    # RemovedInDjango51Warning.\n     def generate_altered_index_together(self):\n         self._generate_altered_foo_together(operations.AlterIndexTogether)\n+        self._generate_altered_foo_together(operations.AddIndex)\n \n     def generate_altered_db_table(self):\n         models_to_check = self.kept_model_keys.union(\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex d5d6180..79a67aa 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -620,6 +620,7 @@ class MigrationAutodetector:\n         self._generate_removed_altered_foo_together(operations.AlterUniqueTogether)\n     def generate_removed_altered_index_together(self):\n         self._generate_removed_altered_foo_together(operations.AlterIndexTogether)\n+        self._generate_removed_altered_foo_together(operations.RemoveIndex)\n     def _generate_altered_foo_together(self, operation):\n         for old_value, new_value, app_label, model_name, dependencies in self._get_altered_foo_together_operations(operation.option_name):\n             removal_value = new_value.intersection(old_value)\n@@ -629,6 +630,7 @@ class MigrationAutodetector:\n         self._generate_altered_foo_together(operations.AlterUniqueTogether)\n     def generate_altered_index_together(self):\n         self._generate_altered_foo_together(operations.AlterIndexTogether)\n+        self._generate_altered_foo_together(operations.AddIndex)\n     def generate_altered_db_table(self):\n         models_to_check = self.kept_model_keys.union(self.kept_proxy_keys, self.kept_unmanaged_keys)\n         for app_label, model_name in sorted(models_to_check):\n", "normalized_occurrence": 1}
