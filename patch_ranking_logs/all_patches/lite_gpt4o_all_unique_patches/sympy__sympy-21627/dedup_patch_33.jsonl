{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-21627", "model_patch": "diff --git a/sympy/functions/elementary/hyperbolic.py b/sympy/functions/elementary/hyperbolic.py\nindex db125b2..d243a07 100644\n--- a/sympy/functions/elementary/hyperbolic.py\n+++ b/sympy/functions/elementary/hyperbolic.py\n@@ -266,8 +266,13 @@ class sinh(HyperbolicFunction):\n \n     def _eval_is_zero(self):\n         arg = self.args[0]\n+        # Prevent potential infinite recursion when checking is_zero\n+        from sympy import cosh, acosh\n         if arg.is_zero:\n             return True\n+        if isinstance(arg, acosh):\n+            return False\n+            return True\n \n \n class cosh(HyperbolicFunction):\n@@ -715,8 +720,13 @@ class tanh(HyperbolicFunction):\n \n     def _eval_is_zero(self):\n         arg = self.args[0]\n+        # Prevent potential infinite recursion when checking is_zero\n+        from sympy import cosh, acosh\n         if arg.is_zero:\n             return True\n+        if isinstance(arg, acosh):\n+            return False\n+            return True\n \n \n class coth(HyperbolicFunction):\n@@ -1213,8 +1223,13 @@ class asinh(InverseHyperbolicFunction):\n \n     def _eval_is_zero(self):\n         arg = self.args[0]\n+        # Prevent potential infinite recursion when checking is_zero\n+        from sympy import cosh, acosh\n         if arg.is_zero:\n             return True\n+        if isinstance(arg, acosh):\n+            return False\n+            return True\n \n \n class acosh(InverseHyperbolicFunction):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/hyperbolic.py b/sympy/functions/elementary/hyperbolic.py\nindex f81ffb5..9aaf2cf 100644\n--- a/sympy/functions/elementary/hyperbolic.py\n+++ b/sympy/functions/elementary/hyperbolic.py\n@@ -159,8 +159,12 @@ class sinh(HyperbolicFunction):\n         return arg.is_finite\n     def _eval_is_zero(self):\n         arg = self.args[0]\n+        from sympy import cosh, acosh\n         if arg.is_zero:\n             return True\n+        if isinstance(arg, acosh):\n+            return False\n+            return True\n class cosh(HyperbolicFunction):\n     def fdiff(self, argindex=1):\n         if argindex == 1:\n@@ -454,8 +458,12 @@ class tanh(HyperbolicFunction):\n             return True\n     def _eval_is_zero(self):\n         arg = self.args[0]\n+        from sympy import cosh, acosh\n         if arg.is_zero:\n             return True\n+        if isinstance(arg, acosh):\n+            return False\n+            return True\n class coth(HyperbolicFunction):\n     def fdiff(self, argindex=1):\n         if argindex == 1:\n@@ -766,8 +774,12 @@ class asinh(InverseHyperbolicFunction):\n         return sinh\n     def _eval_is_zero(self):\n         arg = self.args[0]\n+        from sympy import cosh, acosh\n         if arg.is_zero:\n             return True\n+        if isinstance(arg, acosh):\n+            return False\n+            return True\n class acosh(InverseHyperbolicFunction):\n     def fdiff(self, argindex=1):\n         if argindex == 1:\n", "normalized_occurrence": 1}
