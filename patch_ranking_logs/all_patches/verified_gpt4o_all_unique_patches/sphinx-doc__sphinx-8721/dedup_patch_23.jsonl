{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8721", "model_patch": "diff --git a/sphinx/ext/viewcode.py b/sphinx/ext/viewcode.py\nindex 27202ee..eba220b 100644\n--- a/sphinx/ext/viewcode.py\n+++ b/sphinx/ext/viewcode.py\n@@ -197,6 +197,10 @@ def collect_pages(app: Sphinx) -> Generator[Tuple[str, Dict[str, Any], str], Non\n         if not should_generate_module_page(app, modname):\n             continue\n \n+        # Skip generating module pages for epub if viewcode_enable_epub is False\n+        if app.builder.format == 'epub' and not app.config.viewcode_enable_epub:\n+            continue\n+\n         code, tags, used, refname = entry\n         # construct a page name for the highlighted source\n         pagename = posixpath.join(OUTPUT_DIRNAME, modname.replace('.', '/'))\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/viewcode.py b/sphinx/ext/viewcode.py\nindex 5db007b..2205dc4 100644\n--- a/sphinx/ext/viewcode.py\n+++ b/sphinx/ext/viewcode.py\n@@ -130,6 +130,8 @@ def collect_pages(app: Sphinx) -> Generator[Tuple[str, Dict[str, Any], str], Non\n             continue\n         if not should_generate_module_page(app, modname):\n             continue\n+        if app.builder.format == 'epub' and (not app.config.viewcode_enable_epub):\n+            continue\n         code, tags, used, refname = entry\n         pagename = posixpath.join(OUTPUT_DIRNAME, modname.replace('.', '/'))\n         if env.config.highlight_language in ('python3', 'default', 'none'):\n", "normalized_occurrence": 1}
