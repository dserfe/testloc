{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-14096", "model_patch": "diff --git a/astropy/coordinates/sky_coordinate.py b/astropy/coordinates/sky_coordinate.py\nindex f158027..7fea9ea 100644\n--- a/astropy/coordinates/sky_coordinate.py\n+++ b/astropy/coordinates/sky_coordinate.py\n@@ -895,6 +895,12 @@ class SkyCoord(ShapedLikeNDArray):\n                 return self.transform_to(attr)\n \n         # Fail\n+        # Before failing, check if an attribute error should be raised directly\n+        if \"_sky_coord_frame\" in self.__dict__ and \"_sky_coord_frame\" in self.__dict__:\n+            if hasattr(self.__class__, attr):\n+                raise AttributeError(\n+                    f\"'{self.__class__.__name__}' object has no attribute '{attr}'\"\n+                )\n         raise AttributeError(\n             f\"'{self.__class__.__name__}' object has no attribute '{attr}'\"\n         )\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/coordinates/sky_coordinate.py b/astropy/coordinates/sky_coordinate.py\nindex 7fb9e10..d0982da 100644\n--- a/astropy/coordinates/sky_coordinate.py\n+++ b/astropy/coordinates/sky_coordinate.py\n@@ -275,6 +275,9 @@ class SkyCoord(ShapedLikeNDArray):\n             frame_cls = frame_transform_graph.lookup_name(attr)\n             if frame_cls is not None and self.frame.is_transformable_to(frame_cls):\n                 return self.transform_to(attr)\n+        if '_sky_coord_frame' in self.__dict__ and '_sky_coord_frame' in self.__dict__:\n+            if hasattr(self.__class__, attr):\n+                raise AttributeError(f\"'{self.__class__.__name__}' object has no attribute '{attr}'\")\n         raise AttributeError(f\"'{self.__class__.__name__}' object has no attribute '{attr}'\")\n     def __setattr__(self, attr, val):\n         if '_sky_coord_frame' in self.__dict__:\n", "normalized_occurrence": 1}
