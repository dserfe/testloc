{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8120", "model_patch": "diff --git a/sphinx/util/i18n.py b/sphinx/util/i18n.py\nindex e138044..c672ae3 100644\n--- a/sphinx/util/i18n.py\n+++ b/sphinx/util/i18n.py\n@@ -90,7 +90,7 @@ class CatalogRepository:\n         if not self.language:\n             return\n \n-        for locale_dir in self._locale_dirs:\n+        for locale_dir in [self.basedir] + self._locale_dirs:\n             locale_dir = path.join(self.basedir, locale_dir)\n             if path.exists(path.join(locale_dir, self.language, 'LC_MESSAGES')):\n                 yield locale_dir\n@@ -112,8 +112,11 @@ class CatalogRepository:\n \n     @property\n     def catalogs(self) -> Generator[CatalogInfo, None, None]:\n+        seen_files = set()\n         for basedir, filename in self.pofiles:\n             domain = canon_path(path.splitext(filename)[0])\n+            if filename not in seen_files:\n+                seen_files.add(filename)\n             yield CatalogInfo(basedir, domain, self.encoding)\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/util/i18n.py b/sphinx/util/i18n.py\nindex 49cd7a8..3c73628 100644\n--- a/sphinx/util/i18n.py\n+++ b/sphinx/util/i18n.py\n@@ -56,7 +56,7 @@ class CatalogRepository:\n     def locale_dirs(self) -> Generator[str, None, None]:\n         if not self.language:\n             return\n-        for locale_dir in self._locale_dirs:\n+        for locale_dir in [self.basedir] + self._locale_dirs:\n             locale_dir = path.join(self.basedir, locale_dir)\n             if path.exists(path.join(locale_dir, self.language, 'LC_MESSAGES')):\n                 yield locale_dir\n@@ -74,8 +74,11 @@ class CatalogRepository:\n                         yield (basedir, relpath(fullpath, basedir))\n     @property\n     def catalogs(self) -> Generator[CatalogInfo, None, None]:\n+        seen_files = set()\n         for basedir, filename in self.pofiles:\n             domain = canon_path(path.splitext(filename)[0])\n+            if filename not in seen_files:\n+                seen_files.add(filename)\n             yield CatalogInfo(basedir, domain, self.encoding)\n def find_catalog(docname: str, compaction: bool) -> str:\n     warnings.warn('find_catalog() is deprecated.', RemovedInSphinx40Warning, stacklevel=2)\n", "normalized_occurrence": 1}
