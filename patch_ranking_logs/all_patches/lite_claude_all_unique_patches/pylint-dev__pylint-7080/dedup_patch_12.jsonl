{"model_name_or_path": "agentless_claude", "instance_id": "pylint-dev__pylint-7080", "model_patch": "diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py\nindex 440e6fe..329df5d 100644\n--- a/pylint/lint/pylinter.py\n+++ b/pylint/lint/pylinter.py\n@@ -632,7 +632,7 @@ class PyLinter(\n             )\n             files_or_modules = (files_or_modules,)  # type: ignore[assignment]\n         if self.config.recursive:\n-            files_or_modules = tuple(self._discover_files(files_or_modules))\n+            files_or_modules = tuple(self._discover_files(files_or_modules, ignore_list_paths_re=self._ignore_paths_re))\n         if self.config.from_stdin:\n             if len(files_or_modules) != 1:\n                 raise exceptions.InvalidArgsError(\n", "occurrence": 2, "normalized_patch": "diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py\nindex afb1178..d794aed 100644\n--- a/pylint/lint/pylinter.py\n+++ b/pylint/lint/pylinter.py\n@@ -246,7 +246,7 @@ class PyLinter(_ArgumentsManager, _MessageStateHandler, reporters.ReportsHandler\n             warnings.warn('In pylint 3.0, the checkers check function will only accept sequence of string', DeprecationWarning)\n             files_or_modules = (files_or_modules,)\n         if self.config.recursive:\n-            files_or_modules = tuple(self._discover_files(files_or_modules))\n+            files_or_modules = tuple(self._discover_files(files_or_modules, ignore_list_paths_re=self._ignore_paths_re))\n         if self.config.from_stdin:\n             if len(files_or_modules) != 1:\n                 raise exceptions.InvalidArgsError('Missing filename required for --from-stdin')\n", "normalized_occurrence": 2}
