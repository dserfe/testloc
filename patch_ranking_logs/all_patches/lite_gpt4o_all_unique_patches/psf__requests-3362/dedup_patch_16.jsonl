{"model_name_or_path": "agentless", "instance_id": "psf__requests-3362", "model_patch": "diff --git a/requests/models.py b/requests/models.py\nindex 58593f5..84d58de 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -695,7 +695,7 @@ class Response(object):\n         chunks = reused_chunks if self._content_consumed else stream_chunks\n \n         if decode_unicode:\n-            chunks = stream_decode_response_unicode(chunks, self)\n+            chunks = (chunk.decode(self.encoding) for chunk in stream_decode_response_unicode(chunks, self))\n \n         return chunks\n \n", "occurrence": 1, "normalized_patch": "diff --git a/requests/models.py b/requests/models.py\nindex d66e2b7..e112100 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -360,7 +360,7 @@ class Response(object):\n         stream_chunks = generate()\n         chunks = reused_chunks if self._content_consumed else stream_chunks\n         if decode_unicode:\n-            chunks = stream_decode_response_unicode(chunks, self)\n+            chunks = (chunk.decode(self.encoding) for chunk in stream_decode_response_unicode(chunks, self))\n         return chunks\n     def iter_lines(self, chunk_size=ITER_CHUNK_SIZE, decode_unicode=None, delimiter=None):\n         pending = None\n", "normalized_occurrence": 1}
