{"model_name_or_path": "agentless", "instance_id": "django__django-15098", "model_patch": "diff --git a/django/utils/translation/trans_real.py b/django/utils/translation/trans_real.py\nindex 488a2d8..d26ee4e 100644\n--- a/django/utils/translation/trans_real.py\n+++ b/django/utils/translation/trans_real.py\n@@ -491,7 +491,10 @@ def get_supported_language_variant(lang_code, strict=False):\n             if code in supported_lang_codes and check_for_language(code):\n                 return code\n         if not strict:\n-            # if fr-fr is not supported, try fr-ca.\n+            # if fr-fr is not supported, try fr-Latn-FR or fr-ca.\n+            for supported_code in supported_lang_codes:\n+                if supported_code.startswith(generic_lang_code + '-'):\n+                    return supported_code\n             for supported_code in supported_lang_codes:\n                 if supported_code.startswith(generic_lang_code + '-'):\n                     return supported_code\n@@ -502,8 +505,9 @@ def get_language_from_path(path, strict=False):\n     \"\"\"\n     Return the language code if there's a valid language code found in `path`.\n \n-    If `strict` is False (the default), look for a country-specific variant\n-    when neither the language code nor its generic variant is found.\n+    If `strict` is False (the default), look for a script-specific or\n+    country-specific variant when neither the language code nor its generic \n+    variant is found.\n     \"\"\"\n     regex_match = language_code_prefix_re.match(path)\n     if not regex_match:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/translation/trans_real.py b/django/utils/translation/trans_real.py\nindex 05d14a5..d95ad0e 100644\n--- a/django/utils/translation/trans_real.py\n+++ b/django/utils/translation/trans_real.py\n@@ -266,6 +266,9 @@ def get_supported_language_variant(lang_code, strict=False):\n             for supported_code in supported_lang_codes:\n                 if supported_code.startswith(generic_lang_code + '-'):\n                     return supported_code\n+            for supported_code in supported_lang_codes:\n+                if supported_code.startswith(generic_lang_code + '-'):\n+                    return supported_code\n     raise LookupError(lang_code)\n def get_language_from_path(path, strict=False):\n     regex_match = language_code_prefix_re.match(path)\n", "normalized_occurrence": 1}
