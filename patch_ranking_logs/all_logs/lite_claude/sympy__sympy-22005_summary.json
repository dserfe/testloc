{
  "instance_id": "sympy__sympy-22005",
  "container_id": "98f991672db2386e19d8720d3c957aaa191bf1eb438d47f58d256a9cb4026dec",
  "regression": {
    "results": [
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-22005/dedup_patch_0.jsonl",
        "inst": "sympy__sympy-22005",
        "passed": 1,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-22005/dedup_patch_2.jsonl",
        "inst": "sympy__sympy-22005",
        "passed": 1,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-22005/dedup_patch_1.jsonl",
        "inst": "sympy__sympy-22005",
        "passed": 0,
        "failed": 1
      }
    ],
    "top_passed": 1,
    "top_subset_size": 2
  },
  "reproduction": {
    "sympy/solvers/tests/test_polysys.py::test_solve_issue_3686#1": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "sympy/solvers/tests/test_polysys.py::test_solve_issue_3686#2": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "sympy/solvers/tests/test_polysys.py::test_solve_issue_3686#3": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "sympy/solvers/tests/test_polysys.py::test_solve_issue_3686#4": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "sympy/solvers/tests/test_polysys.py::test_solve_issue_3686#5": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "reproduce_bug_new_agentless.py": {
      "repro_fails_on_clean": true,
      "outcomes": [
        {
          "patch_file": "all_patches/lite_claude_all_unique_patches/sympy__sympy-22005/dedup_patch_1.jsonl",
          "inst": "sympy__sympy-22005",
          "passed": true
        }
      ]
    },
    "full": {
      "repro_fails_on_clean": true,
      "outcomes": []
    },
    "planner": {
      "repro_fails_on_clean": true,
      "outcomes": []
    },
    "testLoc": {
      "repro_fails_on_clean": true,
      "outcomes": []
    },
    "regression": {
      "repro_fails_on_clean": true,
      "outcomes": []
    }
  }
}