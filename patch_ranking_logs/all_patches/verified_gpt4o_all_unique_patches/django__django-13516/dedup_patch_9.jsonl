{"model_name_or_path": "agentless", "instance_id": "django__django-13516", "model_patch": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex c1c76e0..cac4bb0 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -138,7 +138,15 @@ class OutputWrapper(TextIOBase):\n         self.ending = ending\n \n     def __getattr__(self, name):\n-        return getattr(self._out, name)\n+        attr = getattr(self._out, name)\n+        if callable(attr):\n+            def wrapped(*args, **kwargs):\n+                result = attr(*args, **kwargs)\n+                if name == 'write':\n+                    self._out.flush()\n+                return result\n+            return wrapped\n+        return attr\n \n     def isatty(self):\n         return hasattr(self._out, 'isatty') and self._out.isatty()\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex 55da94e..69eeede 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -70,7 +70,15 @@ class OutputWrapper(TextIOBase):\n         self.style_func = None\n         self.ending = ending\n     def __getattr__(self, name):\n-        return getattr(self._out, name)\n+        attr = getattr(self._out, name)\n+        if callable(attr):\n+            def wrapped(*args, **kwargs):\n+                result = attr(*args, **kwargs)\n+                if name == 'write':\n+                    self._out.flush()\n+                return result\n+            return wrapped\n+        return attr\n     def isatty(self):\n         return hasattr(self._out, 'isatty') and self._out.isatty()\n     def write(self, msg='', style_func=None, ending=None):\n", "normalized_occurrence": 1}
