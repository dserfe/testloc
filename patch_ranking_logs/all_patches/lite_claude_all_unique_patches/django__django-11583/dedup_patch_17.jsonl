{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11583", "model_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex f44661f..9bec9aa 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -139,9 +139,15 @@ def iter_modules_and_files(modules, extra_files):\n         path = Path(filename)\n         try:\n             resolved_path = path.resolve(strict=True).absolute()\n-        except FileNotFoundError:\n-            # The module could have been removed, don't fail loudly if this\n-            # is the case.\n+        except (FileNotFoundError, ValueError):\n+            # The module could have been removed or the path contains invalid\n+            # characters (like null bytes). Don't fail loudly in these cases.\n+            try:\n+                # Fallback to simple absolute path without full resolution\n+                resolved_path = path.absolute()\n+                results.add(resolved_path)\n+            except ValueError:\n+                continue\n             continue\n         results.add(resolved_path)\n     return frozenset(results)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex e37abac..ed6af2c 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -93,7 +93,12 @@ def iter_modules_and_files(modules, extra_files):\n         path = Path(filename)\n         try:\n             resolved_path = path.resolve(strict=True).absolute()\n-        except FileNotFoundError:\n+        except (FileNotFoundError, ValueError):\n+            try:\n+                resolved_path = path.absolute()\n+                results.add(resolved_path)\n+            except ValueError:\n+                continue\n             continue\n         results.add(resolved_path)\n     return frozenset(results)\n", "normalized_occurrence": 1}
