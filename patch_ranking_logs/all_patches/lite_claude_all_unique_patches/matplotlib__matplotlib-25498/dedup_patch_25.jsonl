{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-25498", "model_patch": "diff --git a/lib/matplotlib/colorbar.py b/lib/matplotlib/colorbar.py\nindex 6151185..9d76138 100644\n--- a/lib/matplotlib/colorbar.py\n+++ b/lib/matplotlib/colorbar.py\n@@ -490,33 +490,7 @@ class Colorbar:\n \n     filled = _api.deprecate_privatize_attribute(\"3.6\")\n \n-    def update_normal(self, mappable):\n-        \"\"\"\n-        Update solid patches, lines, etc.\n-\n-        This is meant to be called when the norm of the image or contour plot\n-        to which this colorbar belongs changes.\n \n-        If the norm on the mappable is different than before, this resets the\n-        locator and formatter for the axis, so if these have been customized,\n-        they will need to be customized again.  However, if the norm only\n-        changes values of *vmin*, *vmax* or *cmap* then the old formatter\n-        and locator will be preserved.\n-        \"\"\"\n-        _log.debug('colorbar update normal %r %r', mappable.norm, self.norm)\n-        self.mappable = mappable\n-        self.set_alpha(mappable.get_alpha())\n-        self.cmap = mappable.cmap\n-        if mappable.norm != self.norm:\n-            self.norm = mappable.norm\n-            self._reset_locator_formatter_scale()\n-\n-        self._draw_all()\n-        if isinstance(self.mappable, contour.ContourSet):\n-            CS = self.mappable\n-            if not CS.filled:\n-                self.add_lines(CS)\n-        self.stale = True\n \n     @_api.deprecated(\"3.6\", alternative=\"fig.draw_without_rendering()\")\n     def draw_all(self):\n", "normalized_patch": "diff --git a/lib/matplotlib/colorbar.py b/lib/matplotlib/colorbar.py\nindex 45aa167..61dcf31 100644\n--- a/lib/matplotlib/colorbar.py\n+++ b/lib/matplotlib/colorbar.py\n@@ -194,20 +194,6 @@ class Colorbar:\n         del self.ax.cla\n         self.ax.cla()\n     filled = _api.deprecate_privatize_attribute('3.6')\n-    def update_normal(self, mappable):\n-        _log.debug('colorbar update normal %r %r', mappable.norm, self.norm)\n-        self.mappable = mappable\n-        self.set_alpha(mappable.get_alpha())\n-        self.cmap = mappable.cmap\n-        if mappable.norm != self.norm:\n-            self.norm = mappable.norm\n-            self._reset_locator_formatter_scale()\n-        self._draw_all()\n-        if isinstance(self.mappable, contour.ContourSet):\n-            CS = self.mappable\n-            if not CS.filled:\n-                self.add_lines(CS)\n-        self.stale = True\n     @_api.deprecated('3.6', alternative='fig.draw_without_rendering()')\n     def draw_all(self):\n         self._draw_all()\n", "normalized_occurrence": 1}
