{"model_name_or_path": "agentless", "instance_id": "django__django-15498", "model_patch": "diff --git a/django/middleware/http.py b/django/middleware/http.py\nindex 2ea6e03..b1c0773 100644\n--- a/django/middleware/http.py\n+++ b/django/middleware/http.py\n@@ -22,7 +22,10 @@ class ConditionalGetMiddleware(MiddlewareMixin):\n \n         etag = response.get(\"ETag\")\n         last_modified = response.get(\"Last-Modified\")\n-        last_modified = last_modified and parse_http_date_safe(last_modified)\n+        if last_modified:\n+            last_modified = parse_http_date_safe(last_modified)\n+        else:\n+            last_modified = None\n \n         if etag or last_modified:\n             return get_conditional_response(\n@@ -37,4 +40,4 @@ class ConditionalGetMiddleware(MiddlewareMixin):\n     def needs_etag(self, response):\n         \"\"\"Return True if an ETag header should be added to response.\"\"\"\n         cache_control_headers = cc_delim_re.split(response.get(\"Cache-Control\", \"\"))\n-        return all(header.lower() != \"no-store\" for header in cache_control_headers)\n+        return all(header.lower() != \"no-store\" for header in cache_control_headers)\n", "occurrence": 14, "normalized_patch": "diff --git a/django/middleware/http.py b/django/middleware/http.py\nindex c9afcfa..4d5e0dd 100644\n--- a/django/middleware/http.py\n+++ b/django/middleware/http.py\n@@ -9,7 +9,10 @@ class ConditionalGetMiddleware(MiddlewareMixin):\n             set_response_etag(response)\n         etag = response.get('ETag')\n         last_modified = response.get('Last-Modified')\n-        last_modified = last_modified and parse_http_date_safe(last_modified)\n+        if last_modified:\n+            last_modified = parse_http_date_safe(last_modified)\n+        else:\n+            last_modified = None\n         if etag or last_modified:\n             return get_conditional_response(request, etag=etag, last_modified=last_modified, response=response)\n         return response\n", "normalized_occurrence": 14}
