{"model_name_or_path": "agentless_claude", "instance_id": "pylint-dev__pylint-4604", "model_patch": "diff --git a/pylint/checkers/variables.py b/pylint/checkers/variables.py\nindex 8c0035f..30d6898 100644\n--- a/pylint/checkers/variables.py\n+++ b/pylint/checkers/variables.py\n@@ -2048,6 +2048,11 @@ class VariablesChecker(BaseChecker):\n                         # Most likely a typing import if it wasn't used so far.\n                         continue\n \n+                    # Check if the import is used in type comments\n+                    if any(real_name in comment.value\n+                          for comment in stmt.parent.type_comments):\n+                        continue\n+\n                     if as_name == \"_\":\n                         continue\n                     if as_name is None:\n@@ -2071,6 +2076,11 @@ class VariablesChecker(BaseChecker):\n                         # Most likely a typing import if it wasn't used so far.\n                         continue\n \n+                    # Check if the import is used in type comments\n+                    if any(real_name in comment.value\n+                          for comment in stmt.parent.type_comments):\n+                        continue\n+\n                     if imported_name == \"*\":\n                         self.add_message(\"unused-wildcard-import\", args=name, node=stmt)\n                     else:\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/checkers/variables.py b/pylint/checkers/variables.py\nindex c661a56..482f844 100644\n--- a/pylint/checkers/variables.py\n+++ b/pylint/checkers/variables.py\n@@ -811,6 +811,8 @@ class VariablesChecker(BaseChecker):\n                         continue\n                     if is_type_annotation_import:\n                         continue\n+                    if any((real_name in comment.value for comment in stmt.parent.type_comments)):\n+                        continue\n                     if as_name == '_':\n                         continue\n                     if as_name is None:\n@@ -826,6 +828,8 @@ class VariablesChecker(BaseChecker):\n                         continue\n                     if is_type_annotation_import:\n                         continue\n+                    if any((real_name in comment.value for comment in stmt.parent.type_comments)):\n+                        continue\n                     if imported_name == '*':\n                         self.add_message('unused-wildcard-import', args=name, node=stmt)\n                     else:\n", "normalized_occurrence": 1}
