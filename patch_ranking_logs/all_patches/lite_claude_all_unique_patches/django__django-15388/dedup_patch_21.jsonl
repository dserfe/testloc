{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15388", "model_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex dcf3cdd..85c797b 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -294,6 +294,19 @@ class BaseReloader:\n         \"\"\"\n         yield from iter_all_python_module_files()\n         yield from self.extra_files\n+        # Ensure template dirs are included in watched paths\n+        from django.conf import settings\n+        if hasattr(settings, 'TEMPLATES'):\n+            for template_config in settings.TEMPLATES:\n+                if 'DIRS' in template_config:\n+                    for template_dir in template_config['DIRS']:\n+                        if template_dir:\n+                            try:\n+                                template_dir = Path(template_dir)\n+                                if template_dir.exists():\n+                                    yield from template_dir.rglob('*')\n+                            except Exception:\n+                                continue\n         if include_globs:\n             for directory, patterns in self.directory_globs.items():\n                 for pattern in patterns:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex 4cc598a..ce1b331 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -182,6 +182,18 @@ class BaseReloader:\n     def watched_files(self, include_globs=True):\n         yield from iter_all_python_module_files()\n         yield from self.extra_files\n+        from django.conf import settings\n+        if hasattr(settings, 'TEMPLATES'):\n+            for template_config in settings.TEMPLATES:\n+                if 'DIRS' in template_config:\n+                    for template_dir in template_config['DIRS']:\n+                        if template_dir:\n+                            try:\n+                                template_dir = Path(template_dir)\n+                                if template_dir.exists():\n+                                    yield from template_dir.rglob('*')\n+                            except Exception:\n+                                continue\n         if include_globs:\n             for directory, patterns in self.directory_globs.items():\n                 for pattern in patterns:\n", "normalized_occurrence": 1}
