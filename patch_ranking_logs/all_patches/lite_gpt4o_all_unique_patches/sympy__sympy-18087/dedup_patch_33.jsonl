{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-18087", "model_patch": "diff --git a/sympy/functions/elementary/trigonometric.py b/sympy/functions/elementary/trigonometric.py\nindex 5205b6e..f4bc4d8 100644\n--- a/sympy/functions/elementary/trigonometric.py\n+++ b/sympy/functions/elementary/trigonometric.py\n@@ -370,6 +370,9 @@ class sin(TrigonometricFunction):\n         if isinstance(arg, asec):\n             x = arg.args[0]\n             return sqrt(1 - 1 / x**2)\n+            \n+        if isinstance(arg, sin):\n+            return Abs(arg.args[0])\n \n     @staticmethod\n     @cacheit\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/trigonometric.py b/sympy/functions/elementary/trigonometric.py\nindex bfdabb3..c9f8600 100644\n--- a/sympy/functions/elementary/trigonometric.py\n+++ b/sympy/functions/elementary/trigonometric.py\n@@ -213,6 +213,8 @@ class sin(TrigonometricFunction):\n         if isinstance(arg, asec):\n             x = arg.args[0]\n             return sqrt(1 - 1 / x ** 2)\n+        if isinstance(arg, sin):\n+            return Abs(arg.args[0])\n     @staticmethod\n     @cacheit\n     def taylor_term(n, x, *previous_terms):\n", "normalized_occurrence": 1}
