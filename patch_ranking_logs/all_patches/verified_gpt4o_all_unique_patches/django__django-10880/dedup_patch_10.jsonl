{"model_name_or_path": "agentless", "instance_id": "django__django-10880", "model_patch": "diff --git a/django/db/models/aggregates.py b/django/db/models/aggregates.py\nindex f03a228..5bf5185 100644\n--- a/django/db/models/aggregates.py\n+++ b/django/db/models/aggregates.py\n@@ -103,11 +103,13 @@ class Avg(FixDurationInputMixin, NumericOutputFieldMixin, Aggregate):\n \n class Count(Aggregate):\n     function = 'COUNT'\n+    template = '%(function)s(DISTINCT %(distinct_fields)s%(expressions)s)'\n     name = 'Count'\n     output_field = IntegerField()\n     allow_distinct = True\n \n-    def __init__(self, expression, filter=None, **extra):\n+    def __init__(self, expression, filter=None, distinct=False, **extra):\n+        self.distinct = distinct\n         if expression == '*':\n             expression = Star()\n         if isinstance(expression, Star) and filter is not None:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/aggregates.py b/django/db/models/aggregates.py\nindex f40a983..509929b 100644\n--- a/django/db/models/aggregates.py\n+++ b/django/db/models/aggregates.py\n@@ -73,10 +73,12 @@ class Avg(FixDurationInputMixin, NumericOutputFieldMixin, Aggregate):\n     name = 'Avg'\n class Count(Aggregate):\n     function = 'COUNT'\n+    template = '%(function)s(DISTINCT %(distinct_fields)s%(expressions)s)'\n     name = 'Count'\n     output_field = IntegerField()\n     allow_distinct = True\n-    def __init__(self, expression, filter=None, **extra):\n+    def __init__(self, expression, filter=None, distinct=False, **extra):\n+        self.distinct = distinct\n         if expression == '*':\n             expression = Star()\n         if isinstance(expression, Star) and filter is not None:\n", "normalized_occurrence": 1}
