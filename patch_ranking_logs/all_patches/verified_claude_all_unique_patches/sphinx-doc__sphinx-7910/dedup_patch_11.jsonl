{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-7910", "model_patch": "diff --git a/sphinx/ext/napoleon/__init__.py b/sphinx/ext/napoleon/__init__.py\nindex 38d35d1..1dc0544 100644\n--- a/sphinx/ext/napoleon/__init__.py\n+++ b/sphinx/ext/napoleon/__init__.py\n@@ -378,6 +378,8 @@ def _process_docstring(app: Sphinx, what: str, name: str, obj: Any,\n     lines[:] = result_lines[:]\n \n \n+from sphinx.util.inspect import unwrap\n+\n def _skip_member(app: Sphinx, what: str, name: str, obj: Any,\n                  skip: bool, options: Any) -> bool:\n     \"\"\"Determine if private and special class members are included in docs.\n@@ -438,7 +440,8 @@ def _skip_member(app: Sphinx, what: str, name: str, obj: Any,\n                         mod_path = cls_path.split('.')\n                         cls = functools.reduce(getattr, mod_path, mod)\n                     else:\n-                        cls = obj.__globals__[cls_path]\n+                        unwrapped_obj = unwrap(obj)\n+                        cls = unwrapped_obj.__globals__[cls_path]\n                 except Exception:\n                     cls_is_owner = False\n                 else:\n@@ -460,4 +463,4 @@ def _skip_member(app: Sphinx, what: str, name: str, obj: Any,\n                     (is_private and inc_private) or\n                     (is_init and inc_init)):\n                 return False\n-    return None\n+    return None\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/napoleon/__init__.py b/sphinx/ext/napoleon/__init__.py\nindex 97482cf..de7f1dd 100644\n--- a/sphinx/ext/napoleon/__init__.py\n+++ b/sphinx/ext/napoleon/__init__.py\n@@ -42,6 +42,7 @@ def _process_docstring(app: Sphinx, what: str, name: str, obj: Any, options: Any\n         docstring = GoogleDocstring(result_lines, app.config, app, what, name, obj, options)\n         result_lines = docstring.lines()\n     lines[:] = result_lines[:]\n+from sphinx.util.inspect import unwrap\n def _skip_member(app: Sphinx, what: str, name: str, obj: Any, skip: bool, options: Any) -> bool:\n     has_doc = getattr(obj, '__doc__', False)\n     is_member = what == 'class' or what == 'exception' or what == 'module'\n@@ -59,7 +60,8 @@ def _skip_member(app: Sphinx, what: str, name: str, obj: Any, skip: bool, option\n                         mod_path = cls_path.split('.')\n                         cls = functools.reduce(getattr, mod_path, mod)\n                     else:\n-                        cls = obj.__globals__[cls_path]\n+                        unwrapped_obj = unwrap(obj)\n+                        cls = unwrapped_obj.__globals__[cls_path]\n                 except Exception:\n                     cls_is_owner = False\n                 else:\n", "normalized_occurrence": 1}
