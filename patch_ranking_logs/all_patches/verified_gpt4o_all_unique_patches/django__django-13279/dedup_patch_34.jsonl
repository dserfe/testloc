{"model_name_or_path": "agentless", "instance_id": "django__django-13279", "model_patch": "diff --git a/django/contrib/sessions/backends/base.py b/django/contrib/sessions/backends/base.py\nindex 5b06482..f85d062 100644\n--- a/django/contrib/sessions/backends/base.py\n+++ b/django/contrib/sessions/backends/base.py\n@@ -115,7 +115,12 @@ class SessionBase:\n \n     def decode(self, session_data):\n         try:\n-            return signing.loads(session_data, salt=self.key_salt, serializer=self.serializer)\n+            try:\n+                return signing.loads(session_data, salt=self.key_salt, serializer=self.serializer)\n+            except Exception:\n+                if settings.DEFAULT_HASHING_ALGORITHM == 'sha1':\n+                    return self._legacy_decode(session_data)\n+                raise\n         # RemovedInDjango40Warning: when the deprecation ends, handle here\n         # exceptions similar to what _legacy_decode() does now.\n         except Exception:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/sessions/backends/base.py b/django/contrib/sessions/backends/base.py\nindex 25789fc..9af6dec 100644\n--- a/django/contrib/sessions/backends/base.py\n+++ b/django/contrib/sessions/backends/base.py\n@@ -67,7 +67,12 @@ class SessionBase:\n         return signing.dumps(session_dict, salt=self.key_salt, serializer=self.serializer, compress=True)\n     def decode(self, session_data):\n         try:\n-            return signing.loads(session_data, salt=self.key_salt, serializer=self.serializer)\n+            try:\n+                return signing.loads(session_data, salt=self.key_salt, serializer=self.serializer)\n+            except Exception:\n+                if settings.DEFAULT_HASHING_ALGORITHM == 'sha1':\n+                    return self._legacy_decode(session_data)\n+                raise\n         except Exception:\n             return self._legacy_decode(session_data)\n     def _legacy_decode(self, session_data):\n", "normalized_occurrence": 1}
