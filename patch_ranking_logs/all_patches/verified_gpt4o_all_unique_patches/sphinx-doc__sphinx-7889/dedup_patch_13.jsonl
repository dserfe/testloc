{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-7889", "model_patch": "diff --git a/sphinx/ext/autodoc/mock.py b/sphinx/ext/autodoc/mock.py\nindex 6801938..a99cbf5 100644\n--- a/sphinx/ext/autodoc/mock.py\n+++ b/sphinx/ext/autodoc/mock.py\n@@ -70,7 +70,8 @@ class _MockObject:\n \n def _make_subclass(name: str, module: str, superclass: Any = _MockObject,\n                    attributes: Any = None) -> Any:\n-    attrs = {'__module__': module, '__display_name__': module + '.' + name}\n+    display_name = module + '.' + name\n+    attrs = {'__module__': module, '__display_name__': str(display_name)}\n     attrs.update(attributes or {})\n \n     return type(name, (superclass,), attrs)\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/mock.py b/sphinx/ext/autodoc/mock.py\nindex 32d941b..ea09a2b 100644\n--- a/sphinx/ext/autodoc/mock.py\n+++ b/sphinx/ext/autodoc/mock.py\n@@ -37,7 +37,8 @@ class _MockObject:\n     def __repr__(self) -> str:\n         return self.__display_name__\n def _make_subclass(name: str, module: str, superclass: Any=_MockObject, attributes: Any=None) -> Any:\n-    attrs = {'__module__': module, '__display_name__': module + '.' + name}\n+    display_name = module + '.' + name\n+    attrs = {'__module__': module, '__display_name__': str(display_name)}\n     attrs.update(attributes or {})\n     return type(name, (superclass,), attrs)\n class _MockModule(ModuleType):\n", "normalized_occurrence": 1}
