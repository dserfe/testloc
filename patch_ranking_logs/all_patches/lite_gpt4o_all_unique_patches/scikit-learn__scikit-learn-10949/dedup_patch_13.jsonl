{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-10949", "model_patch": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex 7e2fa63..514f49a 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -537,6 +537,8 @@ def check_array(array, accept_sparse=False, accept_large_sparse=True,\n                     \"your data has a single feature or array.reshape(1, -1) \"\n                     \"if it contains a single sample.\".format(array))\n \n+        if isinstance(array_orig, pd.DataFrame) and dtype_numeric:\n+            array = array.astype(np.float64)\n         # in the future np.flexible dtypes will be handled like object dtypes\n         if dtype_numeric and np.issubdtype(array.dtype, np.flexible):\n             warnings.warn(\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex 7db8b51..e0c3c5c 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -164,6 +164,8 @@ def check_array(array, accept_sparse=False, accept_large_sparse=True, dtype='num\n                 raise ValueError('Expected 2D array, got scalar array instead:\\narray={}.\\nReshape your data either using array.reshape(-1, 1) if your data has a single feature or array.reshape(1, -1) if it contains a single sample.'.format(array))\n             if array.ndim == 1:\n                 raise ValueError('Expected 2D array, got 1D array instead:\\narray={}.\\nReshape your data either using array.reshape(-1, 1) if your data has a single feature or array.reshape(1, -1) if it contains a single sample.'.format(array))\n+        if isinstance(array_orig, pd.DataFrame) and dtype_numeric:\n+            array = array.astype(np.float64)\n         if dtype_numeric and np.issubdtype(array.dtype, np.flexible):\n             warnings.warn(\"Beginning in version 0.22, arrays of strings will be interpreted as decimal numbers if parameter 'dtype' is 'numeric'. It is recommended that you convert the array to type np.float64 before passing it to check_array.\", FutureWarning)\n         if dtype_numeric and array.dtype.kind == 'O':\n", "normalized_occurrence": 1}
