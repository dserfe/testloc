{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-9281", "model_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex da040b3..64e7840 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -122,6 +122,12 @@ def _parse_annotation(annotation: str, env: BuildEnvironment = None) -> List[Nod\n             if node.value is Ellipsis:\n                 return [addnodes.desc_sig_punctuation('', \"...\")]\n             else:\n+                # Handle Enum values specially\n+                if isinstance(node.value, str) and node.value.startswith('<') and node.value.endswith('>'):\n+                    # Check if this looks like an Enum repr\n+                    enum_match = re.match(r'<([^:]+):\\s*[^>]+>', node.value)\n+                    if enum_match:\n+                        return [nodes.Text(enum_match.group(1))]\n                 return [nodes.Text(node.value)]\n         elif isinstance(node, ast.Expr):\n             return unparse(node.value)\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex 5b8a917..0c5f24c 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -71,6 +71,10 @@ def _parse_annotation(annotation: str, env: BuildEnvironment=None) -> List[Node]\n             if node.value is Ellipsis:\n                 return [addnodes.desc_sig_punctuation('', '...')]\n             else:\n+                if isinstance(node.value, str) and node.value.startswith('<') and node.value.endswith('>'):\n+                    enum_match = re.match('<([^:]+):\\\\s*[^>]+>', node.value)\n+                    if enum_match:\n+                        return [nodes.Text(enum_match.group(1))]\n                 return [nodes.Text(node.value)]\n         elif isinstance(node, ast.Expr):\n             return unparse(node.value)\n", "normalized_occurrence": 1}
