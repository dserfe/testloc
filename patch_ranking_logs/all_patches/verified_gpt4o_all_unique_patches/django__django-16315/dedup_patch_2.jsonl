{"model_name_or_path": "agentless", "instance_id": "django__django-16315", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 9211371..31c6cb1 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -720,7 +720,7 @@ class QuerySet(AltersData):\n                     \"Unique fields that can trigger the upsert must be provided.\"\n                 )\n             # Updating primary keys and non-concrete fields is forbidden.\n-            update_fields = [self.model._meta.get_field(name) for name in update_fields]\n+            update_fields = [self.model._meta.get_field(name).column for name in update_fields]\n             if any(not f.concrete or f.many_to_many for f in update_fields):\n                 raise ValueError(\n                     \"bulk_create() can only be used with concrete fields in \"\n@@ -732,9 +732,7 @@ class QuerySet(AltersData):\n                     \"update_fields.\"\n                 )\n             if unique_fields:\n-                unique_fields = [\n-                    self.model._meta.get_field(name) for name in unique_fields\n-                ]\n+                unique_fields = [self.model._meta.get_field(name).column for name in unique_fields]\n                 if any(not f.concrete or f.many_to_many for f in unique_fields):\n                     raise ValueError(\n                         \"bulk_create() can only be used with concrete fields \"\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 6f2160b..4840ec8 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -373,13 +373,13 @@ class QuerySet(AltersData):\n                 raise NotSupportedError('This database backend does not support updating conflicts with specifying unique fields that can trigger the upsert.')\n             if not unique_fields and db_features.supports_update_conflicts_with_target:\n                 raise ValueError('Unique fields that can trigger the upsert must be provided.')\n-            update_fields = [self.model._meta.get_field(name) for name in update_fields]\n+            update_fields = [self.model._meta.get_field(name).column for name in update_fields]\n             if any((not f.concrete or f.many_to_many for f in update_fields)):\n                 raise ValueError('bulk_create() can only be used with concrete fields in update_fields.')\n             if any((f.primary_key for f in update_fields)):\n                 raise ValueError('bulk_create() cannot be used with primary keys in update_fields.')\n             if unique_fields:\n-                unique_fields = [self.model._meta.get_field(name) for name in unique_fields]\n+                unique_fields = [self.model._meta.get_field(name).column for name in unique_fields]\n                 if any((not f.concrete or f.many_to_many for f in unique_fields)):\n                     raise ValueError('bulk_create() can only be used with concrete fields in unique_fields.')\n             return OnConflict.UPDATE\n", "normalized_occurrence": 1}
