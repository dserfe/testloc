{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8435", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 77fd48c..c91293a 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1469,6 +1469,10 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type:\n             try:\n                 sig = inspect.signature(new, bound_method=True,\n                                         type_aliases=self.config.autodoc_type_aliases)\n+                if hasattr(sig, 'parameters'):\n+                    for param in sig.parameters.values():\n+                        if param.annotation in self.config.autodoc_type_aliases:\n+                            param._annotation = self.config.autodoc_type_aliases[param.annotation]\n                 return self.object, '__new__', sig\n             except ValueError:\n                 pass\n@@ -1480,6 +1484,10 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type:\n             try:\n                 sig = inspect.signature(init, bound_method=True,\n                                         type_aliases=self.config.autodoc_type_aliases)\n+                if hasattr(sig, 'parameters'):\n+                    for param in sig.parameters.values():\n+                        if param.annotation in self.config.autodoc_type_aliases:\n+                            param._annotation = self.config.autodoc_type_aliases[param.annotation]\n                 return self.object, '__init__', sig\n             except ValueError:\n                 pass\n@@ -1492,6 +1500,10 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type:\n         try:\n             sig = inspect.signature(self.object, bound_method=False,\n                                     type_aliases=self.config.autodoc_type_aliases)\n+            if hasattr(sig, 'parameters'):\n+                for param in sig.parameters.values():\n+                    if param.annotation in self.config.autodoc_type_aliases:\n+                        param._annotation = self.config.autodoc_type_aliases[param.annotation]\n             return None, None, sig\n         except ValueError:\n             pass\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 2484638..c671534 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -809,6 +809,10 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):\n             self.env.app.emit('autodoc-before-process-signature', new, True)\n             try:\n                 sig = inspect.signature(new, bound_method=True, type_aliases=self.config.autodoc_type_aliases)\n+                if hasattr(sig, 'parameters'):\n+                    for param in sig.parameters.values():\n+                        if param.annotation in self.config.autodoc_type_aliases:\n+                            param._annotation = self.config.autodoc_type_aliases[param.annotation]\n                 return (self.object, '__new__', sig)\n             except ValueError:\n                 pass\n@@ -817,12 +821,20 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):\n             self.env.app.emit('autodoc-before-process-signature', init, True)\n             try:\n                 sig = inspect.signature(init, bound_method=True, type_aliases=self.config.autodoc_type_aliases)\n+                if hasattr(sig, 'parameters'):\n+                    for param in sig.parameters.values():\n+                        if param.annotation in self.config.autodoc_type_aliases:\n+                            param._annotation = self.config.autodoc_type_aliases[param.annotation]\n                 return (self.object, '__init__', sig)\n             except ValueError:\n                 pass\n         self.env.app.emit('autodoc-before-process-signature', self.object, False)\n         try:\n             sig = inspect.signature(self.object, bound_method=False, type_aliases=self.config.autodoc_type_aliases)\n+            if hasattr(sig, 'parameters'):\n+                for param in sig.parameters.values():\n+                    if param.annotation in self.config.autodoc_type_aliases:\n+                        param._annotation = self.config.autodoc_type_aliases[param.annotation]\n             return (None, None, sig)\n         except ValueError:\n             pass\n", "normalized_occurrence": 1}
