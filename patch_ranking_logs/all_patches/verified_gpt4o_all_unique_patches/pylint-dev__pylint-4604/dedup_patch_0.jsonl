{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-4604", "model_patch": "diff --git a/pylint/checkers/imports.py b/pylint/checkers/imports.py\nindex 7e31505..280ee96 100644\n--- a/pylint/checkers/imports.py\n+++ b/pylint/checkers/imports.py\n@@ -542,6 +542,10 @@ class ImportsChecker(DeprecatedMixin, BaseChecker):\n             if imported_module is None:\n                 continue\n \n+            # Check for usage in type comments\n+            if any(f\"# type: {name}\" in comment.value for comment in node.root().get_comments()):\n+                continue\n+\n             self._add_imported_module(node, imported_module.name)\n \n     @check_messages(*MSGS)\n@@ -568,6 +572,9 @@ class ImportsChecker(DeprecatedMixin, BaseChecker):\n             return\n         for name, _ in node.names:\n             if name != \"*\":\n+                # Check for usage in type comments\n+                if any(f\"# type: {name}\" in comment.value for comment in node.root().get_comments()):\n+                    continue\n                 self._add_imported_module(node, f\"{imported_module.name}.{name}\")\n             else:\n                 self._add_imported_module(node, imported_module.name)\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/checkers/imports.py b/pylint/checkers/imports.py\nindex 1045c62..06785a3 100644\n--- a/pylint/checkers/imports.py\n+++ b/pylint/checkers/imports.py\n@@ -183,6 +183,8 @@ class ImportsChecker(DeprecatedMixin, BaseChecker):\n                 self._record_import(node, imported_module)\n             if imported_module is None:\n                 continue\n+            if any((f'# type: {name}' in comment.value for comment in node.root().get_comments())):\n+                continue\n             self._add_imported_module(node, imported_module.name)\n     @check_messages(*MSGS)\n     def visit_importfrom(self, node):\n@@ -204,6 +206,8 @@ class ImportsChecker(DeprecatedMixin, BaseChecker):\n             return\n         for name, _ in node.names:\n             if name != '*':\n+                if any((f'# type: {name}' in comment.value for comment in node.root().get_comments())):\n+                    continue\n                 self._add_imported_module(node, f'{imported_module.name}.{name}')\n             else:\n                 self._add_imported_module(node, imported_module.name)\n", "normalized_occurrence": 1}
