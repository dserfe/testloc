{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11999", "model_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex 26d79f0..63c8321 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -763,8 +763,11 @@ class Field(RegisterLookupMixin):\n             if not getattr(cls, self.attname, None):\n                 setattr(cls, self.attname, self.descriptor_class(self))\n         if self.choices is not None:\n-            setattr(cls, 'get_%s_display' % self.name,\n-                    partialmethod(cls._get_FIELD_display, field=self))\n+            def make_display_method(field):\n+                def get_display(obj):\n+                    return obj._get_FIELD_display(field)\n+                return get_display\n+            setattr(cls, 'get_%s_display' % self.name, make_display_method(self))\n \n     def get_filter_kwargs_for_object(self, obj):\n         \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex 1bf9915..9480086 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -342,7 +342,11 @@ class Field(RegisterLookupMixin):\n             if not getattr(cls, self.attname, None):\n                 setattr(cls, self.attname, self.descriptor_class(self))\n         if self.choices is not None:\n-            setattr(cls, 'get_%s_display' % self.name, partialmethod(cls._get_FIELD_display, field=self))\n+            def make_display_method(field):\n+                def get_display(obj):\n+                    return obj._get_FIELD_display(field)\n+                return get_display\n+            setattr(cls, 'get_%s_display' % self.name, make_display_method(self))\n     def get_filter_kwargs_for_object(self, obj):\n         return {self.name: getattr(obj, self.attname)}\n     def get_attname(self):\n", "normalized_occurrence": 1}
