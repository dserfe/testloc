{"model_name_or_path": "agentless", "instance_id": "django__django-12125", "model_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex 824ab10..cec4387 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -90,13 +90,22 @@ class DeconstructableSerializer(BaseSerializer):\n \n     @staticmethod\n     def _serialize_path(path):\n-        module, name = path.rsplit(\".\", 1)\n+        if '.' in path:\n+            module, name = path.rsplit(\".\", 1)\n+        else:\n+            module = path\n+            name = path\n         if module == \"django.db.models\":\n             imports = {\"from django.db import models\"}\n             name = \"models.%s\" % name\n         else:\n-            imports = {\"import %s\" % module}\n-            name = path\n+            module_path = module.split('.')\n+            if len(module_path) > 1:\n+                imports = {\"import %s\" % module_path[0]}\n+                name = \"%s.%s\" % (module_path[0], '.'.join(module_path[1:]))\n+            else:\n+                imports = {\"import %s\" % module}\n+                name = path\n         return name, imports\n \n     def serialize(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex d663baf..31696d9 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -68,13 +68,22 @@ class DeconstructableSerializer(BaseSerializer):\n         return ('%s(%s)' % (name, ', '.join(strings)), imports)\n     @staticmethod\n     def _serialize_path(path):\n-        module, name = path.rsplit('.', 1)\n+        if '.' in path:\n+            module, name = path.rsplit('.', 1)\n+        else:\n+            module = path\n+            name = path\n         if module == 'django.db.models':\n             imports = {'from django.db import models'}\n             name = 'models.%s' % name\n         else:\n-            imports = {'import %s' % module}\n-            name = path\n+            module_path = module.split('.')\n+            if len(module_path) > 1:\n+                imports = {'import %s' % module_path[0]}\n+                name = '%s.%s' % (module_path[0], '.'.join(module_path[1:]))\n+            else:\n+                imports = {'import %s' % module}\n+                name = path\n         return (name, imports)\n     def serialize(self):\n         return self.serialize_deconstructed(*self.value.deconstruct())\n", "normalized_occurrence": 1}
