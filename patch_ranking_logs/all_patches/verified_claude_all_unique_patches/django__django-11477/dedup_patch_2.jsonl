{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11477", "model_patch": "diff --git a/django/urls/base.py b/django/urls/base.py\nindex e420dc6..6b6a710 100644\n--- a/django/urls/base.py\n+++ b/django/urls/base.py\n@@ -172,9 +172,18 @@ def translate_url(url, lang_code):\n         to_be_reversed = \"%s:%s\" % (match.namespace, match.url_name) if match.namespace else match.url_name\n         with override(lang_code):\n             try:\n-                url = reverse(to_be_reversed, args=match.args, kwargs=match.kwargs)\n+                # Initialize missing kwargs to None for optional parameters\n+                pattern = match.resolver.pattern\n+                if hasattr(pattern, 'regex'):\n+                    # Support both new-style and old-style patterns\n+                    named_groups = pattern.regex.groupindex.keys()\n+                else:\n+                    named_groups = pattern.groupindex.keys()\n+                kwargs = {k: None for k in named_groups}\n+                kwargs.update(match.kwargs)\n+                url = reverse(to_be_reversed, args=match.args, kwargs=kwargs)\n             except NoReverseMatch:\n                 pass\n             else:\n                 url = urlunsplit((parsed.scheme, parsed.netloc, url, parsed.query, parsed.fragment))\n-    return url\n+    return url\n", "occurrence": 1, "normalized_patch": "diff --git a/django/urls/base.py b/django/urls/base.py\nindex 4be4b1d..494b6d5 100644\n--- a/django/urls/base.py\n+++ b/django/urls/base.py\n@@ -95,7 +95,14 @@ def translate_url(url, lang_code):\n         to_be_reversed = '%s:%s' % (match.namespace, match.url_name) if match.namespace else match.url_name\n         with override(lang_code):\n             try:\n-                url = reverse(to_be_reversed, args=match.args, kwargs=match.kwargs)\n+                pattern = match.resolver.pattern\n+                if hasattr(pattern, 'regex'):\n+                    named_groups = pattern.regex.groupindex.keys()\n+                else:\n+                    named_groups = pattern.groupindex.keys()\n+                kwargs = {k: None for k in named_groups}\n+                kwargs.update(match.kwargs)\n+                url = reverse(to_be_reversed, args=match.args, kwargs=kwargs)\n             except NoReverseMatch:\n                 pass\n             else:\n", "normalized_occurrence": 1}
