{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-21627", "model_patch": "diff --git a/sympy/functions/elementary/hyperbolic.py b/sympy/functions/elementary/hyperbolic.py\nindex db125b2..e0a14b8 100644\n--- a/sympy/functions/elementary/hyperbolic.py\n+++ b/sympy/functions/elementary/hyperbolic.py\n@@ -266,7 +266,9 @@ class sinh(HyperbolicFunction):\n \n     def _eval_is_zero(self):\n         arg = self.args[0]\n-        if arg.is_zero:\n+        if isinstance(arg, HyperbolicFunction):\n+            return False\n+        elif arg.is_zero:\n             return True\n \n \n@@ -715,7 +717,9 @@ class tanh(HyperbolicFunction):\n \n     def _eval_is_zero(self):\n         arg = self.args[0]\n-        if arg.is_zero:\n+        if isinstance(arg, HyperbolicFunction):\n+            return False\n+        elif arg.is_zero:\n             return True\n \n \n@@ -1213,7 +1217,9 @@ class asinh(InverseHyperbolicFunction):\n \n     def _eval_is_zero(self):\n         arg = self.args[0]\n-        if arg.is_zero:\n+        if isinstance(arg, HyperbolicFunction):\n+            return False\n+        elif arg.is_zero:\n             return True\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/hyperbolic.py b/sympy/functions/elementary/hyperbolic.py\nindex f81ffb5..edec1b3 100644\n--- a/sympy/functions/elementary/hyperbolic.py\n+++ b/sympy/functions/elementary/hyperbolic.py\n@@ -159,7 +159,9 @@ class sinh(HyperbolicFunction):\n         return arg.is_finite\n     def _eval_is_zero(self):\n         arg = self.args[0]\n-        if arg.is_zero:\n+        if isinstance(arg, HyperbolicFunction):\n+            return False\n+        elif arg.is_zero:\n             return True\n class cosh(HyperbolicFunction):\n     def fdiff(self, argindex=1):\n@@ -454,7 +456,9 @@ class tanh(HyperbolicFunction):\n             return True\n     def _eval_is_zero(self):\n         arg = self.args[0]\n-        if arg.is_zero:\n+        if isinstance(arg, HyperbolicFunction):\n+            return False\n+        elif arg.is_zero:\n             return True\n class coth(HyperbolicFunction):\n     def fdiff(self, argindex=1):\n@@ -766,7 +770,9 @@ class asinh(InverseHyperbolicFunction):\n         return sinh\n     def _eval_is_zero(self):\n         arg = self.args[0]\n-        if arg.is_zero:\n+        if isinstance(arg, HyperbolicFunction):\n+            return False\n+        elif arg.is_zero:\n             return True\n class acosh(InverseHyperbolicFunction):\n     def fdiff(self, argindex=1):\n", "normalized_occurrence": 1}
