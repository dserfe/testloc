{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-12481", "model_patch": "diff --git a/sympy/combinatorics/permutations.py b/sympy/combinatorics/permutations.py\nindex 4042fdb..1f040ff 100644\n--- a/sympy/combinatorics/permutations.py\n+++ b/sympy/combinatorics/permutations.py\n@@ -897,8 +897,15 @@ class Permutation(Basic):\n         temp = flatten(args)\n         if has_dups(temp):\n             if is_cycle:\n-                raise ValueError('there were repeated elements; to resolve '\n-                'cycles use Cycle%s.' % ''.join([str(tuple(c)) for c in args]))\n+                # If there are non-disjoint cycles, we need to merge them\n+                merged_cycle = []\n+                seen = set()\n+                for cycle in args:\n+                    for element in cycle:\n+                        if element not in seen:\n+                            seen.add(element)\n+                            merged_cycle.append(element)\n+                args = [merged_cycle]\n             else:\n                 raise ValueError('there were repeated elements.')\n         temp = set(temp)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/combinatorics/permutations.py b/sympy/combinatorics/permutations.py\nindex 93057a0..ab6ee29 100644\n--- a/sympy/combinatorics/permutations.py\n+++ b/sympy/combinatorics/permutations.py\n@@ -196,7 +196,14 @@ class Permutation(Basic):\n         temp = flatten(args)\n         if has_dups(temp):\n             if is_cycle:\n-                raise ValueError('there were repeated elements; to resolve cycles use Cycle%s.' % ''.join([str(tuple(c)) for c in args]))\n+                merged_cycle = []\n+                seen = set()\n+                for cycle in args:\n+                    for element in cycle:\n+                        if element not in seen:\n+                            seen.add(element)\n+                            merged_cycle.append(element)\n+                args = [merged_cycle]\n             else:\n                 raise ValueError('there were repeated elements.')\n         temp = set(temp)\n", "normalized_occurrence": 1}
