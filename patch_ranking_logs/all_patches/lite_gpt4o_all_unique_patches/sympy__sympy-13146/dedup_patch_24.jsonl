{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13146", "model_patch": "diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py\nindex 1ed5a09..9e481b1 100644\n--- a/sympy/simplify/simplify.py\n+++ b/sympy/simplify/simplify.py\n@@ -376,7 +376,10 @@ def signsimp(expr, evaluate=None):\n     if not isinstance(e, Expr) or e.is_Atom:\n         return e\n     if e.is_Add:\n-        return e.func(*[signsimp(a) for a in e.args])\n+        simplified_args = [signsimp(a) for a in e.args]\n+        if all(isinstance(arg, Mul) for arg in simplified_args):\n+            return Add(*simplified_args).simplify()\n+        return e.func(*simplified_args)\n     if evaluate:\n         e = e.xreplace({m: -(-m) for m in e.atoms(Mul) if -(-m) != m})\n     return e\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py\nindex 6ee9e94..722a78f 100644\n--- a/sympy/simplify/simplify.py\n+++ b/sympy/simplify/simplify.py\n@@ -140,7 +140,10 @@ def signsimp(expr, evaluate=None):\n     if not isinstance(e, Expr) or e.is_Atom:\n         return e\n     if e.is_Add:\n-        return e.func(*[signsimp(a) for a in e.args])\n+        simplified_args = [signsimp(a) for a in e.args]\n+        if all((isinstance(arg, Mul) for arg in simplified_args)):\n+            return Add(*simplified_args).simplify()\n+        return e.func(*simplified_args)\n     if evaluate:\n         e = e.xreplace({m: --m for m in e.atoms(Mul) if --m != m})\n     return e\n", "normalized_occurrence": 1}
