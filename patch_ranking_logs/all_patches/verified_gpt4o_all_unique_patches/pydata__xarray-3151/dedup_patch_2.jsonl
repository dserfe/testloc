{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-3151", "model_patch": "diff --git a/xarray/core/combine.py b/xarray/core/combine.py\nindex fe3f23b..352e523 100644\n--- a/xarray/core/combine.py\n+++ b/xarray/core/combine.py\n@@ -504,6 +504,9 @@ def combine_by_coords(datasets, compat='no_conflicts', data_vars='all',\n         for dim in concatenated.dims:\n             if dim in concatenated:\n                 indexes = concatenated.indexes.get(dim)\n+                # Check if the coordinate is identical across all datasets\n+                if all(index.equals(indexes[0]) for index in indexes[1:]):\n+                    continue\n                 if not (indexes.is_monotonic_increasing\n                         or indexes.is_monotonic_decreasing):\n                     raise ValueError(\"Resulting object does not have monotonic\"\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/combine.py b/xarray/core/combine.py\nindex b8f5640..2116267 100644\n--- a/xarray/core/combine.py\n+++ b/xarray/core/combine.py\n@@ -118,6 +118,8 @@ def combine_by_coords(datasets, compat='no_conflicts', data_vars='all', coords='\n         for dim in concatenated.dims:\n             if dim in concatenated:\n                 indexes = concatenated.indexes.get(dim)\n+                if all((index.equals(indexes[0]) for index in indexes[1:])):\n+                    continue\n                 if not (indexes.is_monotonic_increasing or indexes.is_monotonic_decreasing):\n                     raise ValueError('Resulting object does not have monotonic global indexes along dimension {}'.format(dim))\n         concatenated_grouped_by_data_vars.append(concatenated)\n", "normalized_occurrence": 1}
