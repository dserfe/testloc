{"model_name_or_path": "agentless", "instance_id": "django__django-11490", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 78e67cd..ffed33a 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -425,7 +425,9 @@ class SQLCompiler:\n                 # If the columns list is limited, then all combined queries\n                 # must have the same columns list. Set the selects defined on\n                 # the query on all combined queries, if not already set.\n-                if not compiler.query.values_select and self.query.values_select:\n+                if (not compiler.query.values_select and self.query.values_select) or \\\n+                   (compiler.query.values_select and self.query.values_select and \\\n+                    compiler.query.values_select != self.query.values_select):\n                     compiler.query.set_values((\n                         *self.query.extra_select,\n                         *self.query.values_select,\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex c7af2ab..d87b259 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -240,7 +240,7 @@ class SQLCompiler:\n         parts = ()\n         for compiler in compilers:\n             try:\n-                if not compiler.query.values_select and self.query.values_select:\n+                if not compiler.query.values_select and self.query.values_select or (compiler.query.values_select and self.query.values_select and (compiler.query.values_select != self.query.values_select)):\n                     compiler.query.set_values((*self.query.extra_select, *self.query.values_select, *self.query.annotation_select))\n                 part_sql, part_args = compiler.as_sql()\n                 if compiler.query.combinator:\n", "normalized_occurrence": 1}
