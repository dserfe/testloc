{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-15535", "model_patch": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex be26d08..e26f378 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -458,9 +458,13 @@ def check_array(array, accept_sparse=False, accept_large_sparse=True,\n             dtype_orig = np.result_type(*array.dtypes)\n \n     if dtype_numeric:\n-        if dtype_orig is not None and dtype_orig.kind == \"O\":\n-            # if input is object, convert to float.\n-            dtype = np.float64\n+        if dtype_orig is not None and dtype_orig.kind == \"O\" and dtype_numeric:\n+            # if input is object and dtype is numeric, convert to float.\n+            try:\n+                array = array.astype(np.float64)\n+            except ValueError as e:\n+                raise ValueError(f\"Unable to convert array of bytes/strings to float. \"\n+                                 f\"Error message: {e}\")\n         else:\n             dtype = None\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex 8ce0584..3c4573a 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -136,8 +136,11 @@ def check_array(array, accept_sparse=False, accept_large_sparse=True, dtype='num\n         if all((isinstance(dtype, np.dtype) for dtype in dtypes_orig)):\n             dtype_orig = np.result_type(*array.dtypes)\n     if dtype_numeric:\n-        if dtype_orig is not None and dtype_orig.kind == 'O':\n-            dtype = np.float64\n+        if dtype_orig is not None and dtype_orig.kind == 'O' and dtype_numeric:\n+            try:\n+                array = array.astype(np.float64)\n+            except ValueError as e:\n+                raise ValueError(f'Unable to convert array of bytes/strings to float. Error message: {e}')\n         else:\n             dtype = None\n     if isinstance(dtype, (list, tuple)):\n", "normalized_occurrence": 1}
