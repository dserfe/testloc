{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-3095", "model_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex 6942a04..147e48d 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -933,8 +933,12 @@ class Dataset(Mapping, ImplementsDatasetReduce, DataWithCoords):\n         pandas.DataFrame.copy\n         \"\"\"  # noqa\n         if data is None:\n-            variables = OrderedDict((k, v.copy(deep=deep))\n-                                    for k, v in self._variables.items())\n+            variables = OrderedDict()\n+            for k, v in self._variables.items():\n+                if isinstance(v, IndexVariable):\n+                    variables[k] = v.copy(deep=deep)\n+                else:\n+                    variables[k] = v.copy(deep=deep)\n         elif not utils.is_dict_like(data):\n             raise ValueError('Data must be dict-like')\n         else:\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex 72f0a0b..71e9fef 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -425,7 +425,12 @@ class Dataset(Mapping, ImplementsDatasetReduce, DataWithCoords):\n         return obj\n     def copy(self, deep: bool=False, data: Mapping=None) -> 'Dataset':\n         if data is None:\n-            variables = OrderedDict(((k, v.copy(deep=deep)) for k, v in self._variables.items()))\n+            variables = OrderedDict()\n+            for k, v in self._variables.items():\n+                if isinstance(v, IndexVariable):\n+                    variables[k] = v.copy(deep=deep)\n+                else:\n+                    variables[k] = v.copy(deep=deep)\n         elif not utils.is_dict_like(data):\n             raise ValueError('Data must be dict-like')\n         else:\n", "normalized_occurrence": 1}
