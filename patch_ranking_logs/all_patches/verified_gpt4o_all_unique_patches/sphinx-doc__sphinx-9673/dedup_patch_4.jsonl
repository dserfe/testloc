{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9673", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 51811ca..3c50e2d 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -56,15 +56,15 @@ def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element\n     annotations = app.env.temp_data.get('annotations', {})\n     if annotations.get(fullname, {}):\n         field_lists = [n for n in contentnode if isinstance(n, nodes.field_list)]\n-        if field_lists == []:\n+        if not field_lists:\n             field_list = insert_field_list(contentnode)\n             field_lists.append(field_list)\n \n         for field_list in field_lists:\n             if app.config.autodoc_typehints_description_target == \"all\":\n                 modify_field_list(field_list, annotations[fullname])\n-            else:\n-                augment_descriptions_with_types(field_list, annotations[fullname])\n+            elif app.config.autodoc_typehints_description_target == \"documented\":\n+                augment_descriptions_with_types(field_list, annotations[fullname], include_return=True)\n \n \n def insert_field_list(node: Element) -> nodes.field_list:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 03a755b..3f58b4a 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -35,14 +35,14 @@ def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element\n     annotations = app.env.temp_data.get('annotations', {})\n     if annotations.get(fullname, {}):\n         field_lists = [n for n in contentnode if isinstance(n, nodes.field_list)]\n-        if field_lists == []:\n+        if not field_lists:\n             field_list = insert_field_list(contentnode)\n             field_lists.append(field_list)\n         for field_list in field_lists:\n             if app.config.autodoc_typehints_description_target == 'all':\n                 modify_field_list(field_list, annotations[fullname])\n-            else:\n-                augment_descriptions_with_types(field_list, annotations[fullname])\n+            elif app.config.autodoc_typehints_description_target == 'documented':\n+                augment_descriptions_with_types(field_list, annotations[fullname], include_return=True)\n def insert_field_list(node: Element) -> nodes.field_list:\n     field_list = nodes.field_list()\n     desc = [n for n in node if isinstance(n, addnodes.desc)]\n", "normalized_occurrence": 1}
