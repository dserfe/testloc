{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9591", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 08b07d9..fe8c1a0 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -2729,13 +2729,13 @@ class PropertyDocumenter(DocstringStripSignatureMixin, ClassLevelDocumenter):  #\n                                               type_aliases=self.config.autodoc_type_aliases)\n                 if signature.return_annotation is not Parameter.empty:\n                     objrepr = stringify_typehint(signature.return_annotation)\n+                    # Add cross-reference\n+                    objrepr = restify(signature.return_annotation)\n                     self.add_line('   :type: ' + objrepr, sourcename)\n-            except TypeError as exc:\n+            except (TypeError, ValueError) as exc:\n                 logger.warning(__(\"Failed to get a function signature for %s: %s\"),\n                                self.fullname, exc)\n-                return None\n-            except ValueError:\n-                return None\n+                return\n \n \n class NewTypeAttributeDocumenter(AttributeDocumenter):\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 3c49975..ca0791c 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1647,12 +1647,11 @@ class PropertyDocumenter(DocstringStripSignatureMixin, ClassLevelDocumenter):\n                 signature = inspect.signature(func, type_aliases=self.config.autodoc_type_aliases)\n                 if signature.return_annotation is not Parameter.empty:\n                     objrepr = stringify_typehint(signature.return_annotation)\n+                    objrepr = restify(signature.return_annotation)\n                     self.add_line('   :type: ' + objrepr, sourcename)\n-            except TypeError as exc:\n+            except (TypeError, ValueError) as exc:\n                 logger.warning(__('Failed to get a function signature for %s: %s'), self.fullname, exc)\n-                return None\n-            except ValueError:\n-                return None\n+                return\n class NewTypeAttributeDocumenter(AttributeDocumenter):\n     objtype = 'newvarattribute'\n     directivetype = 'attribute'\n", "normalized_occurrence": 1}
