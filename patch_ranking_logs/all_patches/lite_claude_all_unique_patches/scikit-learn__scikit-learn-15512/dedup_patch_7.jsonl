{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-15512", "model_patch": "diff --git a/sklearn/cluster/_affinity_propagation.py b/sklearn/cluster/_affinity_propagation.py\nindex 0511594..3a3ce72 100644\n--- a/sklearn/cluster/_affinity_propagation.py\n+++ b/sklearn/cluster/_affinity_propagation.py\n@@ -200,7 +200,13 @@ def affinity_propagation(S, preference=None, convergence_iter=15, max_iter=200,\n     else:\n         if verbose:\n             print(\"Did not converge\")\n+        # Handle non-convergence case as per documentation\n+        I = np.array([], dtype=int)\n+        c = np.full(n_samples, -1, dtype=int)\n+        K = 0\n+        return I, c, K\n \n+    # Only process clusters if convergence was achieved\n     I = np.flatnonzero(E)\n     K = I.size  # Identify exemplars\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/cluster/_affinity_propagation.py b/sklearn/cluster/_affinity_propagation.py\nindex b441de5..7b85fe8 100644\n--- a/sklearn/cluster/_affinity_propagation.py\n+++ b/sklearn/cluster/_affinity_propagation.py\n@@ -71,6 +71,10 @@ def affinity_propagation(S, preference=None, convergence_iter=15, max_iter=200,\n     else:\n         if verbose:\n             print('Did not converge')\n+        I = np.array([], dtype=int)\n+        c = np.full(n_samples, -1, dtype=int)\n+        K = 0\n+        return (I, c, K)\n     I = np.flatnonzero(E)\n     K = I.size\n     if K > 0:\n", "normalized_occurrence": 1}
