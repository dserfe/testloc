{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-14248", "model_patch": "diff --git a/sympy/printing/str.py b/sympy/printing/str.py\nindex 29d16bd..f574b31 100644\n--- a/sympy/printing/str.py\n+++ b/sympy/printing/str.py\n@@ -312,8 +312,20 @@ class StrPrinter(Printer):\n             for arg in expr.args])\n \n     def _print_MatAdd(self, expr):\n-        return ' + '.join([self.parenthesize(arg, precedence(expr))\n-            for arg in expr.args])\n+        terms = [self.parenthesize(arg, precedence(expr))\n+                for arg in expr.args]\n+        l = []\n+        for term in terms:\n+            if term.startswith('-'):\n+                sign = \"-\"\n+                term = term[1:]\n+            else:\n+                sign = \"+\"\n+            l.extend([sign, term])\n+        sign = l.pop(0)\n+        if sign == '+':\n+            sign = \"\"\n+        return sign + ' '.join(l)\n \n     def _print_NaN(self, expr):\n         return 'nan'\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/str.py b/sympy/printing/str.py\nindex a98e2a9..c300edd 100644\n--- a/sympy/printing/str.py\n+++ b/sympy/printing/str.py\n@@ -224,7 +224,19 @@ class StrPrinter(Printer):\n     def _print_HadamardProduct(self, expr):\n         return '.*'.join([self.parenthesize(arg, precedence(expr)) for arg in expr.args])\n     def _print_MatAdd(self, expr):\n-        return ' + '.join([self.parenthesize(arg, precedence(expr)) for arg in expr.args])\n+        terms = [self.parenthesize(arg, precedence(expr)) for arg in expr.args]\n+        l = []\n+        for term in terms:\n+            if term.startswith('-'):\n+                sign = '-'\n+                term = term[1:]\n+            else:\n+                sign = '+'\n+            l.extend([sign, term])\n+        sign = l.pop(0)\n+        if sign == '+':\n+            sign = ''\n+        return sign + ' '.join(l)\n     def _print_NaN(self, expr):\n         return 'nan'\n     def _print_NegativeInfinity(self, expr):\n", "normalized_occurrence": 1}
