{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-5495", "model_patch": "diff --git a/src/_pytest/assertion/util.py b/src/_pytest/assertion/util.py\nindex c9b4ff0..31a58c8 100644\n--- a/src/_pytest/assertion/util.py\n+++ b/src/_pytest/assertion/util.py\n@@ -257,22 +257,34 @@ def _compare_eq_sequence(left, right, verbose=0):\n     explanation = []\n     len_left = len(left)\n     len_right = len(right)\n-    for i in range(min(len_left, len_right)):\n-        if left[i] != right[i]:\n-            explanation += [\n-                \"At index {} diff: {!r} != {!r}\".format(i, left[i], right[i])\n-            ]\n-            break\n+    if isinstance(left, bytes) and isinstance(right, bytes):\n+        # Special handling for byte strings to show them as-is\n+        for i in range(min(len_left, len_right)):\n+            if left[i] != right[i]:\n+                explanation += [\n+                    \"At index {} diff: {!r} != {!r}\".format(\n+                        i, bytes([left[i]]), bytes([right[i]])\n+                    )\n+                ]\n+                break\n+    else:\n+        for i in range(min(len_left, len_right)):\n+            if left[i] != right[i]:\n+                explanation += [\n+                    \"At index {} diff: {!r} != {!r}\".format(i, left[i], right[i])\n+                ]\n+                break\n+                \n     len_diff = len_left - len_right\n \n     if len_diff:\n         if len_diff > 0:\n             dir_with_more = \"Left\"\n-            extra = saferepr(left[len_right])\n+            extra = saferepr(left[len_right:len_right + 1])\n         else:\n             len_diff = 0 - len_diff\n             dir_with_more = \"Right\"\n-            extra = saferepr(right[len_left])\n+            extra = saferepr(right[len_left:len_left + 1])\n \n         if len_diff == 1:\n             explanation += [\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/assertion/util.py b/src/_pytest/assertion/util.py\nindex 855efef..1b47b37 100644\n--- a/src/_pytest/assertion/util.py\n+++ b/src/_pytest/assertion/util.py\n@@ -159,19 +159,25 @@ def _compare_eq_sequence(left, right, verbose=0):\n     explanation = []\n     len_left = len(left)\n     len_right = len(right)\n-    for i in range(min(len_left, len_right)):\n-        if left[i] != right[i]:\n-            explanation += ['At index {} diff: {!r} != {!r}'.format(i, left[i], right[i])]\n-            break\n+    if isinstance(left, bytes) and isinstance(right, bytes):\n+        for i in range(min(len_left, len_right)):\n+            if left[i] != right[i]:\n+                explanation += ['At index {} diff: {!r} != {!r}'.format(i, bytes([left[i]]), bytes([right[i]]))]\n+                break\n+    else:\n+        for i in range(min(len_left, len_right)):\n+            if left[i] != right[i]:\n+                explanation += ['At index {} diff: {!r} != {!r}'.format(i, left[i], right[i])]\n+                break\n     len_diff = len_left - len_right\n     if len_diff:\n         if len_diff > 0:\n             dir_with_more = 'Left'\n-            extra = saferepr(left[len_right])\n+            extra = saferepr(left[len_right:len_right + 1])\n         else:\n             len_diff = 0 - len_diff\n             dir_with_more = 'Right'\n-            extra = saferepr(right[len_left])\n+            extra = saferepr(right[len_left:len_left + 1])\n         if len_diff == 1:\n             explanation += ['{} contains one more item: {}'.format(dir_with_more, extra)]\n         else:\n", "normalized_occurrence": 1}
