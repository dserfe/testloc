{"model_name_or_path": "agentless", "instance_id": "mwaskom__seaborn-3187", "model_patch": "diff --git a/seaborn/relational.py b/seaborn/relational.py\nindex a94a471..5715620 100644\n--- a/seaborn/relational.py\n+++ b/seaborn/relational.py\n@@ -275,9 +275,11 @@ class _RelationalPlotter(VectorPlotter):\n                 locator = mpl.ticker.MaxNLocator(nbins=brief_ticks)\n             # Define the min/max data values\n             limits = min(self._size_map.levels), max(self._size_map.levels)\n-            size_levels, size_formatted_levels = locator_to_legend_entries(\n+            size_levels, size_formatted_levels, offset = locator_to_legend_entries(\n                 locator, limits, self.plot_data[\"size\"].infer_objects().dtype\n             )\n+            if offset:\n+                size_formatted_levels = [f\"{l} + {offset}\" for l in size_formatted_levels]\n         elif self._size_map.levels is None:\n             size_levels = size_formatted_levels = []\n         else:\n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/relational.py b/seaborn/relational.py\nindex 1613149..5c6c3bd 100644\n--- a/seaborn/relational.py\n+++ b/seaborn/relational.py\n@@ -63,7 +63,9 @@ class _RelationalPlotter(VectorPlotter):\n             else:\n                 locator = mpl.ticker.MaxNLocator(nbins=brief_ticks)\n             limits = (min(self._size_map.levels), max(self._size_map.levels))\n-            size_levels, size_formatted_levels = locator_to_legend_entries(locator, limits, self.plot_data['size'].infer_objects().dtype)\n+            size_levels, size_formatted_levels, offset = locator_to_legend_entries(locator, limits, self.plot_data['size'].infer_objects().dtype)\n+            if offset:\n+                size_formatted_levels = [f'{l} + {offset}' for l in size_formatted_levels]\n         elif self._size_map.levels is None:\n             size_levels = size_formatted_levels = []\n         else:\n", "normalized_occurrence": 1}
