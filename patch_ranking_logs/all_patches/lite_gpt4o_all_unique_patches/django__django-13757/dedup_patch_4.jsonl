{"model_name_or_path": "agentless", "instance_id": "django__django-13757", "model_patch": "diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py\nindex e95085e..34e26fd 100644\n--- a/django/db/models/fields/json.py\n+++ b/django/db/models/fields/json.py\n@@ -369,11 +369,23 @@ class KeyTransformIsNull(lookups.IsNull):\n         if not self.rhs:\n             return HasKey(self.lhs.lhs, self.lhs.key_name).as_oracle(compiler, connection)\n         return super().as_sql(compiler, connection)\n+        \n+    def as_sql(self, compiler, connection):\n+        sql, params = super().as_sql(compiler, connection)\n+        if self.rhs:\n+            return \"JSON_TYPE(%s, '$.%s') IS NULL\" % (self.lhs.lhs, self.lhs.key_name), params\n+        return sql, params\n \n     def as_sqlite(self, compiler, connection):\n         if not self.rhs:\n             return HasKey(self.lhs.lhs, self.lhs.key_name).as_sqlite(compiler, connection)\n         return super().as_sql(compiler, connection)\n+        \n+    def as_sql(self, compiler, connection):\n+        sql, params = super().as_sql(compiler, connection)\n+        if self.rhs:\n+            return \"JSON_TYPE(%s, '$.%s') IS NULL\" % (self.lhs.lhs, self.lhs.key_name), params\n+        return sql, params\n \n \n class KeyTransformIn(lookups.In):\n", "occurrence": 1, "normalized_patch": "--- a/django/db/models/fields/json.py\n+++ b/django/db/models/fields/json.py\n+    def as_sql(self, compiler, connection):\n+        sql, params = super().as_sql(compiler, connection)\n+        if self.rhs:\n+            return (\"JSON_TYPE(%s, '$.%s') IS NULL\" % (self.lhs.lhs, self.lhs.key_name), params)\n+        return (sql, params)\n+    def as_sql(self, compiler, connection):\n+        sql, params = super().as_sql(compiler, connection)\n+        if self.rhs:\n+            return (\"JSON_TYPE(%s, '$.%s') IS NULL\" % (self.lhs.lhs, self.lhs.key_name), params)\n+        return (sql, params)", "normalized_occurrence": 1}
