{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-12907", "model_patch": "diff --git a/astropy/modeling/separable.py b/astropy/modeling/separable.py\nindex d6e9246..be04184 100644\n--- a/astropy/modeling/separable.py\n+++ b/astropy/modeling/separable.py\n@@ -304,9 +304,17 @@ def _separable(transform):\n     if (transform_matrix := transform._calculate_separability_matrix()) is not NotImplemented:\n         return transform_matrix\n     elif isinstance(transform, CompoundModel):\n-        sepleft = _separable(transform.left)\n-        sepright = _separable(transform.right)\n-        return _operators[transform.op](sepleft, sepright)\n+        if transform.op == '&':\n+            sepleft = _separable(transform.left)\n+            sepright = _separable(transform.right)\n+            return np.block([\n+                [sepleft, np.zeros((sepleft.shape[0], sepright.shape[1]), dtype=bool)],\n+                [np.zeros((sepright.shape[0], sepleft.shape[1]), dtype=bool), sepright]\n+            ])\n+        else:\n+            sepleft = _separable(transform.left)\n+            sepright = _separable(transform.right)\n+            return _operators[transform.op](sepleft, sepright)\n     elif isinstance(transform, Model):\n         return _coord_matrix(transform, 'left', transform.n_outputs)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/modeling/separable.py b/astropy/modeling/separable.py\nindex 198a838..cc0ab9c 100644\n--- a/astropy/modeling/separable.py\n+++ b/astropy/modeling/separable.py\n@@ -99,9 +99,14 @@ def _separable(transform):\n     if (transform_matrix := transform._calculate_separability_matrix()) is not NotImplemented:\n         return transform_matrix\n     elif isinstance(transform, CompoundModel):\n-        sepleft = _separable(transform.left)\n-        sepright = _separable(transform.right)\n-        return _operators[transform.op](sepleft, sepright)\n+        if transform.op == '&':\n+            sepleft = _separable(transform.left)\n+            sepright = _separable(transform.right)\n+            return np.block([[sepleft, np.zeros((sepleft.shape[0], sepright.shape[1]), dtype=bool)], [np.zeros((sepright.shape[0], sepleft.shape[1]), dtype=bool), sepright]])\n+        else:\n+            sepleft = _separable(transform.left)\n+            sepright = _separable(transform.right)\n+            return _operators[transform.op](sepleft, sepright)\n     elif isinstance(transform, Model):\n         return _coord_matrix(transform, 'left', transform.n_outputs)\n _operators = {'&': _cstack, '|': _cdot, '+': _arith_oper, '-': _arith_oper, '*': _arith_oper, '/': _arith_oper, '**': _arith_oper}\n\\ No newline at end of file\n", "normalized_occurrence": 1}
