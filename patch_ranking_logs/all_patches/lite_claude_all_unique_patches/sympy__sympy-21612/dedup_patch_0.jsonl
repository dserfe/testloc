{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-21612", "model_patch": "diff --git a/sympy/parsing/latex/_parse_latex_antlr.py b/sympy/parsing/latex/_parse_latex_antlr.py\nindex 67c729c..5e6f317 100644\n--- a/sympy/parsing/latex/_parse_latex_antlr.py\n+++ b/sympy/parsing/latex/_parse_latex_antlr.py\n@@ -382,11 +382,12 @@ def convert_frac(frac):\n \n     expr_top = convert_expr(frac.upper)\n     expr_bot = convert_expr(frac.lower)\n-    inverse_denom = sympy.Pow(expr_bot, -1, evaluate=False)\n+    # Create a proper fraction using sympy.Mul and sympy.Pow\n     if expr_top == 1:\n-        return inverse_denom\n+        return sympy.Pow(expr_bot, -1, evaluate=False)\n     else:\n-        return sympy.Mul(expr_top, inverse_denom, evaluate=False)\n+        # Use division to maintain proper precedence\n+        return sympy.Mul(expr_top, 1, evaluate=False) / expr_bot\n \n def convert_binom(binom):\n     expr_n = convert_expr(binom.n)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/parsing/latex/_parse_latex_antlr.py b/sympy/parsing/latex/_parse_latex_antlr.py\nindex 1aed77a..744f543 100644\n--- a/sympy/parsing/latex/_parse_latex_antlr.py\n+++ b/sympy/parsing/latex/_parse_latex_antlr.py\n@@ -288,11 +288,10 @@ def convert_frac(frac):\n             return sympy.Derivative(expr_top, wrt)\n     expr_top = convert_expr(frac.upper)\n     expr_bot = convert_expr(frac.lower)\n-    inverse_denom = sympy.Pow(expr_bot, -1, evaluate=False)\n     if expr_top == 1:\n-        return inverse_denom\n+        return sympy.Pow(expr_bot, -1, evaluate=False)\n     else:\n-        return sympy.Mul(expr_top, inverse_denom, evaluate=False)\n+        return sympy.Mul(expr_top, 1, evaluate=False) / expr_bot\n def convert_binom(binom):\n     expr_n = convert_expr(binom.n)\n     expr_k = convert_expr(binom.k)\n", "normalized_occurrence": 1}
