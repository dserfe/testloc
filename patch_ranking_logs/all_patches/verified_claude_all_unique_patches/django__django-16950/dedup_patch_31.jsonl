{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16950", "model_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 71f23cb..fe5b4d3 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -55,6 +55,9 @@ def construct_instance(form, instance, fields=None, exclude=None):\n     cleaned_data = form.cleaned_data\n     file_field_list = []\n     for f in opts.fields:\n+        if isinstance(f, models.UUIDField) and f.has_default() and not getattr(instance, f.name):\n+            f.save_form_data(instance, f.default() if callable(f.default) else f.default)\n+            continue\n         if (\n             not f.editable\n             or isinstance(f, models.AutoField)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 69a73a2..297c4bb 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -17,6 +17,9 @@ def construct_instance(form, instance, fields=None, exclude=None):\n     cleaned_data = form.cleaned_data\n     file_field_list = []\n     for f in opts.fields:\n+        if isinstance(f, models.UUIDField) and f.has_default() and (not getattr(instance, f.name)):\n+            f.save_form_data(instance, f.default() if callable(f.default) else f.default)\n+            continue\n         if not f.editable or isinstance(f, models.AutoField) or f.name not in cleaned_data:\n             continue\n         if fields is not None and f.name not in fields:\n", "normalized_occurrence": 1}
