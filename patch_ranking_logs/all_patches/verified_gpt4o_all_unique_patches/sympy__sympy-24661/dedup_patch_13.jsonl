{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-24661", "model_patch": "diff --git a/sympy/core/relational.py b/sympy/core/relational.py\nindex c35b72b..ed05d99 100644\n--- a/sympy/core/relational.py\n+++ b/sympy/core/relational.py\n@@ -613,7 +613,7 @@ class Equality(Relational):\n         evaluate = options.pop('evaluate', global_parameters.evaluate)\n         lhs = _sympify(lhs)\n         rhs = _sympify(rhs)\n-        if evaluate:\n+        if evaluate and cls is Equality:\n             val = is_eq(lhs, rhs)\n             if val is None:\n                 return cls(lhs, rhs, evaluate=False)\n@@ -655,7 +655,7 @@ class Equality(Relational):\n         if R == 0:\n             return L\n         evaluate = kwargs.get('evaluate', True)\n-        if evaluate:\n+        if evaluate and cls is Equality:\n             # allow cancellation of args\n             return L - R\n         args = Add.make_args(L) + Add.make_args(-R)\n@@ -764,7 +764,7 @@ class Unequality(Relational):\n         lhs = _sympify(lhs)\n         rhs = _sympify(rhs)\n         evaluate = options.pop('evaluate', global_parameters.evaluate)\n-        if evaluate:\n+        if evaluate and cls is Equality:\n             val = is_neq(lhs, rhs)\n             if val is None:\n                 return cls(lhs, rhs, evaluate=False)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/relational.py b/sympy/core/relational.py\nindex 6f6b8fe..97bca24 100644\n--- a/sympy/core/relational.py\n+++ b/sympy/core/relational.py\n@@ -246,7 +246,7 @@ class Equality(Relational):\n         evaluate = options.pop('evaluate', global_parameters.evaluate)\n         lhs = _sympify(lhs)\n         rhs = _sympify(rhs)\n-        if evaluate:\n+        if evaluate and cls is Equality:\n             val = is_eq(lhs, rhs)\n             if val is None:\n                 return cls(lhs, rhs, evaluate=False)\n@@ -264,7 +264,7 @@ class Equality(Relational):\n         if R == 0:\n             return L\n         evaluate = kwargs.get('evaluate', True)\n-        if evaluate:\n+        if evaluate and cls is Equality:\n             return L - R\n         args = Add.make_args(L) + Add.make_args(-R)\n         if evaluate is None:\n@@ -315,7 +315,7 @@ class Unequality(Relational):\n         lhs = _sympify(lhs)\n         rhs = _sympify(rhs)\n         evaluate = options.pop('evaluate', global_parameters.evaluate)\n-        if evaluate:\n+        if evaluate and cls is Equality:\n             val = is_neq(lhs, rhs)\n             if val is None:\n                 return cls(lhs, rhs, evaluate=False)\n", "normalized_occurrence": 1}
