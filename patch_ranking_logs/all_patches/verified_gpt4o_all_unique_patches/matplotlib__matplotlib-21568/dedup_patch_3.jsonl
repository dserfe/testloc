{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-21568", "model_patch": "diff --git a/lib/matplotlib/dates.py b/lib/matplotlib/dates.py\nindex f565bc8..0e379ba 100644\n--- a/lib/matplotlib/dates.py\n+++ b/lib/matplotlib/dates.py\n@@ -840,10 +840,10 @@ class ConciseDateFormatter(ticker.Formatter):\n             # set the offset string:\n             self.offset_string = tickdatetime[-1].strftime(offsetfmts[level])\n             if self._usetex:\n-                self.offset_string = _wrap_in_tex(self.offset_string)\n+                self.offset_string = _wrap_in_tex(self.offset_string, is_offset=True)\n \n         if self._usetex:\n-            return [_wrap_in_tex(l) for l in labels]\n+            return [_wrap_in_tex(l, is_offset=False) for l in labels]\n         else:\n             return labels\n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/dates.py b/lib/matplotlib/dates.py\nindex 71de92e..ca0a131 100644\n--- a/lib/matplotlib/dates.py\n+++ b/lib/matplotlib/dates.py\n@@ -223,9 +223,9 @@ class ConciseDateFormatter(ticker.Formatter):\n         if self.show_offset:\n             self.offset_string = tickdatetime[-1].strftime(offsetfmts[level])\n             if self._usetex:\n-                self.offset_string = _wrap_in_tex(self.offset_string)\n+                self.offset_string = _wrap_in_tex(self.offset_string, is_offset=True)\n         if self._usetex:\n-            return [_wrap_in_tex(l) for l in labels]\n+            return [_wrap_in_tex(l, is_offset=False) for l in labels]\n         else:\n             return labels\n     def get_offset(self):\n", "normalized_occurrence": 1}
