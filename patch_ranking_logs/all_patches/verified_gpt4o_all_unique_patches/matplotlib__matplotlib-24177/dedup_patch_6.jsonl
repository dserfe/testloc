{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-24177", "model_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 36d6e8e..922e175 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -6855,7 +6855,10 @@ such objects\n                     # top of the previous polygon becomes the bottom\n                     y[2*len(bins)-1:] = y[1:2*len(bins)-1][::-1]\n                 # set the top of this polygon\n-                y[1:2*len(bins)-1:2] = y[2:2*len(bins):2] = m + bottom\n+                if density:\n+                    y[1:2*len(bins)-1:2] = y[2:2*len(bins):2] = m / np.sum(m) * (bins[1] - bins[0]) + bottom\n+                else:\n+                    y[1:2*len(bins)-1:2] = y[2:2*len(bins):2] = m + bottom\n \n                 # The starting point of the polygon has not yet been\n                 # updated. So far only the endpoint was adjusted. This\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 63bfb92..2e4f0c7 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -2027,7 +2027,10 @@ class Axes(_AxesBase):\n             for m in tops:\n                 if stacked:\n                     y[2 * len(bins) - 1:] = y[1:2 * len(bins) - 1][::-1]\n-                y[1:2 * len(bins) - 1:2] = y[2:2 * len(bins):2] = m + bottom\n+                if density:\n+                    y[1:2 * len(bins) - 1:2] = y[2:2 * len(bins):2] = m / np.sum(m) * (bins[1] - bins[0]) + bottom\n+                else:\n+                    y[1:2 * len(bins) - 1:2] = y[2:2 * len(bins):2] = m + bottom\n                 y[0] = y[-1]\n                 if orientation == 'horizontal':\n                     xvals.append(y.copy())\n", "normalized_occurrence": 1}
