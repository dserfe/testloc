{
  "instance_id": "sympy__sympy-13471",
  "container_id": "60fb73c8a9aa0b66d350dd8b363c765d14794001b80b45a008b0aa63830d9e5b",
  "regression": {
    "results": [
      {
        "patch_file": "all_patches/lite_gpt4o_all_unique_patches/sympy__sympy-13471/dedup_patch_0.jsonl",
        "inst": "sympy__sympy-13471",
        "passed": 10,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_gpt4o_all_unique_patches/sympy__sympy-13471/dedup_patch_1.jsonl",
        "inst": "sympy__sympy-13471",
        "passed": 10,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_gpt4o_all_unique_patches/sympy__sympy-13471/dedup_patch_2.jsonl",
        "inst": "sympy__sympy-13471",
        "passed": 10,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_gpt4o_all_unique_patches/sympy__sympy-13471/dedup_patch_3.jsonl",
        "inst": "sympy__sympy-13471",
        "passed": 10,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_gpt4o_all_unique_patches/sympy__sympy-13471/dedup_patch_4.jsonl",
        "inst": "sympy__sympy-13471",
        "passed": 10,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_gpt4o_all_unique_patches/sympy__sympy-13471/dedup_patch_6.jsonl",
        "inst": "sympy__sympy-13471",
        "passed": 10,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_gpt4o_all_unique_patches/sympy__sympy-13471/dedup_patch_7.jsonl",
        "inst": "sympy__sympy-13471",
        "passed": 10,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_gpt4o_all_unique_patches/sympy__sympy-13471/dedup_patch_8.jsonl",
        "inst": "sympy__sympy-13471",
        "passed": 10,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_gpt4o_all_unique_patches/sympy__sympy-13471/dedup_patch_9.jsonl",
        "inst": "sympy__sympy-13471",
        "passed": 10,
        "failed": 0
      },
      {
        "patch_file": "all_patches/lite_gpt4o_all_unique_patches/sympy__sympy-13471/dedup_patch_5.jsonl",
        "inst": "sympy__sympy-13471",
        "passed": 9,
        "failed": 1
      }
    ],
    "top_passed": 10,
    "top_subset_size": 9
  },
  "reproduction": {
    "sympy/utilities/tests/test_pickling.py::test_core_add#1": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "sympy/utilities/tests/test_pickling.py::test_pickling_polys_polytools#2": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "sympy/utilities/tests/test_pickling.py::test_core_numbers#3": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "sympy/utilities/tests/test_pickling.py::test_core_numbers#4": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "sympy/utilities/tests/test_pickling.py::test_pickling_polys_polytools#5": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "sympy/utilities/tests/test_pickling.py::test_pickling_polys_polytools#6": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "sympy/utilities/tests/test_pickling.py::test_pickling_polys_elements#7": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "sympy/utilities/tests/test_pickling.py::test_core_relational#8": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "sympy/utilities/tests/test_pickling.py::test_pickling_polys_polytools#9": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "sympy/utilities/tests/test_pickling.py::test_core_numbers#10": {
      "repro_fails_on_clean": false,
      "outcomes": []
    }
  }
}