{"model_name_or_path": "agentless", "instance_id": "django__django-14997", "model_patch": "diff --git a/django/db/backends/sqlite3/schema.py b/django/db/backends/sqlite3/schema.py\nindex 6d9014e..cfb42cb 100644\n--- a/django/db/backends/sqlite3/schema.py\n+++ b/django/db/backends/sqlite3/schema.py\n@@ -236,7 +236,7 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):\n                 if delete_field.name not in index.fields\n             ]\n \n-        constraints = list(model._meta.constraints)\n+        constraints = [c for c in model._meta.constraints if not isinstance(c, models.UniqueConstraint)]\n \n         # Provide isolated instances of the fields to the new model body so\n         # that the existing model's internals aren't interfered with when\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/sqlite3/schema.py b/django/db/backends/sqlite3/schema.py\nindex d5f020b..5f7352d 100644\n--- a/django/db/backends/sqlite3/schema.py\n+++ b/django/db/backends/sqlite3/schema.py\n@@ -128,7 +128,7 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):\n         indexes = model._meta.indexes\n         if delete_field:\n             indexes = [index for index in indexes if delete_field.name not in index.fields]\n-        constraints = list(model._meta.constraints)\n+        constraints = [c for c in model._meta.constraints if not isinstance(c, models.UniqueConstraint)]\n         body_copy = copy.deepcopy(body)\n         meta_contents = {'app_label': model._meta.app_label, 'db_table': model._meta.db_table, 'unique_together': unique_together, 'index_together': index_together, 'indexes': indexes, 'constraints': constraints, 'apps': apps}\n         meta = type('Meta', (), meta_contents)\n", "normalized_occurrence": 1}
