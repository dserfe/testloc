{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11019", "model_patch": "diff --git a/django/forms/widgets.py b/django/forms/widgets.py\nindex b9c8e61..d0145cf 100644\n--- a/django/forms/widgets.py\n+++ b/django/forms/widgets.py\n@@ -124,7 +124,45 @@ class Media:\n         For static assets it can be important to have them included in the DOM\n         in a certain order. In JavaScript you may not be able to reference a\n         global or in CSS you might want to override a style.\n+\n+        The algorithm preserves the relative order of elements from both lists\n+        while ensuring that elements appearing in both lists maintain their\n+        relative ordering from the first occurrence.\n         \"\"\"\n+        # Start with an empty result list\n+        result = []\n+        used = set()\n+\n+        # Helper function to add items we haven't seen yet\n+        def add_new(item):\n+            if item not in used:\n+                result.append(item)\n+                used.add(item)\n+\n+        # First pass: Add all items from list_1\n+        for item in list_1:\n+            add_new(item)\n+\n+        # Second pass: Check items from list_2 and ensure ordering is compatible\n+        for i, item in enumerate(list_2):\n+            if item in used:\n+                # Find current position and ensure no items that come after\n+                # in list_2 appear before this one in our result\n+                current_pos = result.index(item)\n+                for other_item in list_2[i + 1:]:\n+                    if other_item in result:\n+                        other_pos = result.index(other_item)\n+                        if other_pos < current_pos:\n+                            warnings.warn(\n+                                'Detected duplicate Media files in an opposite order:\\n'\n+                                '%s\\n%s' % (other_item, item),\n+                                MediaOrderConflictWarning,\n+                            )\n+            else:\n+                # If we haven't seen this item yet, add it to the end\n+                add_new(item)\n+\n+        return result\n         # Start with a copy of list_1.\n         combined_list = list(list_1)\n         last_insert_index = len(list_1)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/widgets.py b/django/forms/widgets.py\nindex cd0e6f4..29a1bb3 100644\n--- a/django/forms/widgets.py\n+++ b/django/forms/widgets.py\n@@ -63,6 +63,25 @@ class Media:\n         raise KeyError('Unknown media type \"%s\"' % name)\n     @staticmethod\n     def merge(list_1, list_2):\n+        result = []\n+        used = set()\n+        def add_new(item):\n+            if item not in used:\n+                result.append(item)\n+                used.add(item)\n+        for item in list_1:\n+            add_new(item)\n+        for i, item in enumerate(list_2):\n+            if item in used:\n+                current_pos = result.index(item)\n+                for other_item in list_2[i + 1:]:\n+                    if other_item in result:\n+                        other_pos = result.index(other_item)\n+                        if other_pos < current_pos:\n+                            warnings.warn('Detected duplicate Media files in an opposite order:\\n%s\\n%s' % (other_item, item), MediaOrderConflictWarning)\n+            else:\n+                add_new(item)\n+        return result\n         combined_list = list(list_1)\n         last_insert_index = len(list_1)\n         for path in reversed(list_2):\n", "normalized_occurrence": 1}
