{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-14983", "model_patch": "diff --git a/sklearn/model_selection/_split.py b/sklearn/model_selection/_split.py\nindex 8743303..20400d7 100644\n--- a/sklearn/model_selection/_split.py\n+++ b/sklearn/model_selection/_split.py\n@@ -1167,6 +1167,10 @@ class _RepeatedSplits(metaclass=ABCMeta):\n class RepeatedKFold(_RepeatedSplits):\n     \"\"\"Repeated K-Fold cross validator.\n \n+    def __repr__(self):\n+        return (f\"{self.__class__.__name__}(n_splits={self.cvargs['n_splits']}, \"\n+                f\"n_repeats={self.n_repeats}, random_state={self.random_state})\")\n+\n     Repeats K-Fold n times with different randomization in each repetition.\n \n     Read more in the :ref:`User Guide <cross_validation>`.\n@@ -1220,6 +1224,10 @@ class RepeatedKFold(_RepeatedSplits):\n class RepeatedStratifiedKFold(_RepeatedSplits):\n     \"\"\"Repeated Stratified K-Fold cross validator.\n \n+    def __repr__(self):\n+        return (f\"{self.__class__.__name__}(n_splits={self.cvargs['n_splits']}, \"\n+                f\"n_repeats={self.n_repeats}, random_state={self.random_state})\")\n+\n     Repeats Stratified K-Fold n times with different randomization in each\n     repetition.\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/model_selection/_split.py b/sklearn/model_selection/_split.py\nindex 7f10fe3..1022e47 100644\n--- a/sklearn/model_selection/_split.py\n+++ b/sklearn/model_selection/_split.py\n@@ -1049,6 +1049,10 @@ class _RepeatedSplits(metaclass=ABCMeta):\n class RepeatedKFold(_RepeatedSplits):\n     \"\"\"Repeated K-Fold cross validator.\n \n+    def __repr__(self):\n+        return (f\"{self.__class__.__name__}(n_splits={self.cvargs['n_splits']}, \"\n+                f\"n_repeats={self.n_repeats}, random_state={self.random_state})\")\n+\n     Repeats K-Fold n times with different randomization in each repetition.\n \n     Read more in the :ref:`User Guide <cross_validation>`.\n@@ -1101,6 +1105,10 @@ class RepeatedKFold(_RepeatedSplits):\n class RepeatedStratifiedKFold(_RepeatedSplits):\n     \"\"\"Repeated Stratified K-Fold cross validator.\n \n+    def __repr__(self):\n+        return (f\"{self.__class__.__name__}(n_splits={self.cvargs['n_splits']}, \"\n+                f\"n_repeats={self.n_repeats}, random_state={self.random_state})\")\n+\n     Repeats Stratified K-Fold n times with different randomization in each\n     repetition.\n \n", "normalized_occurrence": 1}
