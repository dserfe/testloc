{"model_name_or_path": "agentless", "instance_id": "django__django-15695", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex b086232..3043881 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -967,8 +967,12 @@ class RenameIndex(IndexOperation):\n \n     def database_backwards(self, app_label, schema_editor, from_state, to_state):\n         if self.old_fields:\n-            # Backward operation with unnamed index is a no-op.\n-            return\n+            # Restore the original auto-generated name for unnamed index.\n+            from_model_state = from_state.models[app_label, self.model_name_lower]\n+            if from_model_state.options.get('indexes'):\n+                for index in from_model_state.options['indexes']:\n+                    if isinstance(index.name, str) and not index.name:\n+                        index.name = self.old_name\n \n         self.new_name_lower, self.old_name_lower = (\n             self.old_name_lower,\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 87ad28e..7d8a984 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -436,7 +436,11 @@ class RenameIndex(IndexOperation):\n         schema_editor.rename_index(model, old_index, new_index)\n     def database_backwards(self, app_label, schema_editor, from_state, to_state):\n         if self.old_fields:\n-            return\n+            from_model_state = from_state.models[app_label, self.model_name_lower]\n+            if from_model_state.options.get('indexes'):\n+                for index in from_model_state.options['indexes']:\n+                    if isinstance(index.name, str) and (not index.name):\n+                        index.name = self.old_name\n         self.new_name_lower, self.old_name_lower = (self.old_name_lower, self.new_name_lower)\n         self.new_name, self.old_name = (self.old_name, self.new_name)\n         self.database_forwards(app_label, schema_editor, from_state, to_state)\n", "normalized_occurrence": 1}
