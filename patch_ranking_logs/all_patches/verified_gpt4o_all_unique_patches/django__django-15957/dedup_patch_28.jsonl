{"model_name_or_path": "agentless", "instance_id": "django__django-15957", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 5314293..c505630 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -1566,12 +1566,18 @@ class QuerySet:\n         else:\n             for lookup in lookups:\n                 if isinstance(lookup, Prefetch):\n+                    if lookup.queryset.query.is_sliced:\n+                        raise ValueError(\n+                            \"prefetch_related() does not support sliced querysets. \"\n+                            \"Use an unsliced queryset and limit the results in your view.\"\n+                        )\n                     lookup = lookup.prefetch_to\n-                lookup = lookup.split(LOOKUP_SEP, 1)[0]\n-                if lookup in self.query._filtered_relations:\n-                    raise ValueError(\n-                        \"prefetch_related() is not supported with FilteredRelation.\"\n-                    )\n+                else:\n+                    lookup = lookup.split(LOOKUP_SEP, 1)[0]\n+                    if lookup in self.query._filtered_relations:\n+                        raise ValueError(\n+                            \"prefetch_related() is not supported with FilteredRelation.\"\n+                        )\n             clone._prefetch_related_lookups = clone._prefetch_related_lookups + lookups\n         return clone\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex cb06696..441fb61 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -837,10 +837,13 @@ class QuerySet:\n         else:\n             for lookup in lookups:\n                 if isinstance(lookup, Prefetch):\n+                    if lookup.queryset.query.is_sliced:\n+                        raise ValueError('prefetch_related() does not support sliced querysets. Use an unsliced queryset and limit the results in your view.')\n                     lookup = lookup.prefetch_to\n-                lookup = lookup.split(LOOKUP_SEP, 1)[0]\n-                if lookup in self.query._filtered_relations:\n-                    raise ValueError('prefetch_related() is not supported with FilteredRelation.')\n+                else:\n+                    lookup = lookup.split(LOOKUP_SEP, 1)[0]\n+                    if lookup in self.query._filtered_relations:\n+                        raise ValueError('prefetch_related() is not supported with FilteredRelation.')\n             clone._prefetch_related_lookups = clone._prefetch_related_lookups + lookups\n         return clone\n     def annotate(self, *args, **kwargs):\n", "normalized_occurrence": 1}
