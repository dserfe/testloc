{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-24970", "model_patch": "diff --git a/lib/matplotlib/colors.py b/lib/matplotlib/colors.py\nindex bd73e56..45a4655 100644\n--- a/lib/matplotlib/colors.py\n+++ b/lib/matplotlib/colors.py\n@@ -727,9 +727,14 @@ class Colormap:\n                 xa = xa.astype(int)\n         # Set the over-range indices before the under-range;\n         # otherwise the under-range values get converted to over-range.\n-        xa[xa > self.N - 1] = self._i_over\n-        xa[xa < 0] = self._i_under\n-        xa[mask_bad] = self._i_bad\n+        # Ensure special indices are within uint8 range if bytes=True\n+        i_over = min(self._i_over, 255) if bytes else self._i_over\n+        i_under = min(self._i_under, 255) if bytes else self._i_under\n+        i_bad = min(self._i_bad, 255) if bytes else self._i_bad\n+        \n+        xa[xa > self.N - 1] = i_over\n+        xa[xa < 0] = i_under\n+        xa[mask_bad] = i_bad\n \n         lut = self._lut\n         if bytes:\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/colors.py b/lib/matplotlib/colors.py\nindex fe9796e..a3ea488 100644\n--- a/lib/matplotlib/colors.py\n+++ b/lib/matplotlib/colors.py\n@@ -600,9 +600,12 @@ class Colormap:\n                 xa[xa == self.N] = self.N - 1\n                 np.clip(xa, -1, self.N, out=xa)\n                 xa = xa.astype(int)\n-        xa[xa > self.N - 1] = self._i_over\n-        xa[xa < 0] = self._i_under\n-        xa[mask_bad] = self._i_bad\n+        i_over = min(self._i_over, 255) if bytes else self._i_over\n+        i_under = min(self._i_under, 255) if bytes else self._i_under\n+        i_bad = min(self._i_bad, 255) if bytes else self._i_bad\n+        xa[xa > self.N - 1] = i_over\n+        xa[xa < 0] = i_under\n+        xa[mask_bad] = i_bad\n         lut = self._lut\n         if bytes:\n             lut = (lut * 255).astype(np.uint8)\n", "normalized_occurrence": 1}
