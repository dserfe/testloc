{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8638", "model_patch": "diff --git a/sphinx/ext/autodoc/importer.py b/sphinx/ext/autodoc/importer.py\nindex f9408ce..7129337 100644\n--- a/sphinx/ext/autodoc/importer.py\n+++ b/sphinx/ext/autodoc/importer.py\n@@ -275,10 +275,9 @@ def get_class_members(subject: Any, objpath: List[str], attrgetter: Callable\n             value = attrgetter(subject, name)\n             unmangled = unmangle(subject, name)\n             if unmangled and unmangled not in members:\n+                # Only add directly defined members to avoid linking to global variables\n                 if name in obj_dict:\n                     members[unmangled] = ObjectMember(unmangled, value, class_=subject)\n-                else:\n-                    members[unmangled] = ObjectMember(unmangled, value)\n         except AttributeError:\n             continue\n \n@@ -308,4 +307,4 @@ def get_class_members(subject: Any, objpath: List[str], attrgetter: Callable\n     except AttributeError:\n         pass\n \n-    return members\n+    return members\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/importer.py b/sphinx/ext/autodoc/importer.py\nindex bf1ee33..c656f7a 100644\n--- a/sphinx/ext/autodoc/importer.py\n+++ b/sphinx/ext/autodoc/importer.py\n@@ -183,8 +183,6 @@ def get_class_members(subject: Any, objpath: List[str], attrgetter: Callable) ->\n             if unmangled and unmangled not in members:\n                 if name in obj_dict:\n                     members[unmangled] = ObjectMember(unmangled, value, class_=subject)\n-                else:\n-                    members[unmangled] = ObjectMember(unmangled, value)\n         except AttributeError:\n             continue\n     try:\n", "normalized_occurrence": 1}
