{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-9230", "model_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex b8c505d..228e0ff 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -145,6 +145,16 @@ def _parse_annotation(annotation: str, env: BuildEnvironment = None) -> List[Nod\n             result.extend(unparse(node.slice))\n             result.append(addnodes.desc_sig_punctuation('', ']'))\n             return result\n+        elif isinstance(node, ast.Call):\n+            result = unparse(node.func)\n+            result.append(addnodes.desc_sig_punctuation('', '('))\n+            for arg in node.args:\n+                result.extend(unparse(arg))\n+                result.append(addnodes.desc_sig_punctuation('', ', '))\n+            if node.args:\n+                result.pop()  # Remove trailing comma\n+            result.append(addnodes.desc_sig_punctuation('', ')'))\n+            return result\n         elif isinstance(node, ast.Tuple):\n             if node.elts:\n                 result = []\n", "occurrence": 2, "normalized_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex c76b6ac..eba13d0 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -94,6 +94,16 @@ def _parse_annotation(annotation: str, env: BuildEnvironment=None) -> List[Node]\n             result.extend(unparse(node.slice))\n             result.append(addnodes.desc_sig_punctuation('', ']'))\n             return result\n+        elif isinstance(node, ast.Call):\n+            result = unparse(node.func)\n+            result.append(addnodes.desc_sig_punctuation('', '('))\n+            for arg in node.args:\n+                result.extend(unparse(arg))\n+                result.append(addnodes.desc_sig_punctuation('', ', '))\n+            if node.args:\n+                result.pop()\n+            result.append(addnodes.desc_sig_punctuation('', ')'))\n+            return result\n         elif isinstance(node, ast.Tuple):\n             if node.elts:\n                 result = []\n", "normalized_occurrence": 4}
