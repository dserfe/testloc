{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13031", "model_patch": "diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py\nindex 79b3d5e..b4b5acd 100644\n--- a/sympy/matrices/common.py\n+++ b/sympy/matrices/common.py\n@@ -378,6 +378,12 @@ class MatrixShaping(MatrixRequired):\n             return cls._new()\n \n         kls = type(args[0])\n+        \n+        # Special handling for zero-row matrices\n+        if args[0].rows == 0:\n+            total_cols = sum(m.cols for m in args)\n+            return kls.zeros(0, total_cols)\n+            \n         return reduce(kls.row_join, args)\n \n     def reshape(self, rows, cols):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py\nindex 1e4e3f2..aac3eff 100644\n--- a/sympy/matrices/common.py\n+++ b/sympy/matrices/common.py\n@@ -152,6 +152,9 @@ class MatrixShaping(MatrixRequired):\n         if len(args) == 0:\n             return cls._new()\n         kls = type(args[0])\n+        if args[0].rows == 0:\n+            total_cols = sum((m.cols for m in args))\n+            return kls.zeros(0, total_cols)\n         return reduce(kls.row_join, args)\n     def reshape(self, rows, cols):\n         if self.rows * self.cols != rows * cols:\n", "normalized_occurrence": 1}
