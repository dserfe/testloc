{"model_name_or_path": "agentless", "instance_id": "django__django-13964", "model_patch": "diff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py\nindex b13a962..33a2ecd 100644\n--- a/django/db/models/fields/related_descriptors.py\n+++ b/django/db/models/fields/related_descriptors.py\n@@ -256,6 +256,11 @@ class ForwardManyToOneDescriptor:\n             for lh_field, rh_field in self.field.related_fields:\n                 setattr(instance, lh_field.attname, getattr(value, rh_field.attname))\n \n+        # Ensure the primary key of the related object is set correctly on the instance.\n+        for lh_field, rh_field in self.field.related_fields:\n+            if lh_field.primary_key and getattr(instance, lh_field.attname) != getattr(value, rh_field.attname):\n+                setattr(instance, lh_field.attname, getattr(value, rh_field.attname))\n+\n         # Set the related instance cache used by __get__ to avoid an SQL query\n         # when accessing the attribute we just set.\n         self.field.set_cached_value(instance, value)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py\nindex 11b8ac6..1be0f6a 100644\n--- a/django/db/models/fields/related_descriptors.py\n+++ b/django/db/models/fields/related_descriptors.py\n@@ -85,6 +85,9 @@ class ForwardManyToOneDescriptor:\n         else:\n             for lh_field, rh_field in self.field.related_fields:\n                 setattr(instance, lh_field.attname, getattr(value, rh_field.attname))\n+        for lh_field, rh_field in self.field.related_fields:\n+            if lh_field.primary_key and getattr(instance, lh_field.attname) != getattr(value, rh_field.attname):\n+                setattr(instance, lh_field.attname, getattr(value, rh_field.attname))\n         self.field.set_cached_value(instance, value)\n         if value is not None and (not remote_field.multiple):\n             remote_field.set_cached_value(value, instance)\n", "normalized_occurrence": 1}
