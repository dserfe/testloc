{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12858", "model_patch": "diff --git a/django/core/checks/model_checks.py b/django/core/checks/model_checks.py\nindex 8f934b7..53c837d 100644\n--- a/django/core/checks/model_checks.py\n+++ b/django/core/checks/model_checks.py\n@@ -8,6 +8,25 @@ from django.conf import settings\n from django.core.checks import Error, Tags, Warning, register\n \n \n+def _is_valid_ordering_reference(field_name):\n+    \"\"\"\n+    Check if a field_name reference in ordering is valid.\n+    Allow for reverse relationships, transforms, and lookups.\n+    \"\"\"\n+    # Special case for '?' random ordering\n+    if field_name == '?':\n+        return True\n+    # Strip the optional '-' prefix for descending ordering\n+    if field_name.startswith('-'):\n+        field_name = field_name[1:]\n+    # Allow valid lookups like '__isnull' at the end of the field path\n+    valid_lookups = {'isnull'}\n+    for lookup in valid_lookups:\n+        if field_name.endswith('__%s' % lookup):\n+            field_name = field_name[:-len(lookup) - 2]\n+            break\n+    return True\n+\n @register(Tags.models)\n def check_all_models(app_configs=None, **kwargs):\n     db_table_models = defaultdict(list)\n", "occurrence": 1, "normalized_patch": "--- a/django/core/checks/model_checks.py\n+++ b/django/core/checks/model_checks.py\n+def _is_valid_ordering_reference(field_name):\n+    if field_name == '?':\n+        return True\n+    if field_name.startswith('-'):\n+        field_name = field_name[1:]\n+    valid_lookups = {'isnull'}\n+    for lookup in valid_lookups:\n+        if field_name.endswith('__%s' % lookup):\n+            field_name = field_name[:-len(lookup) - 2]\n+            break\n+    return True", "normalized_occurrence": 1}
