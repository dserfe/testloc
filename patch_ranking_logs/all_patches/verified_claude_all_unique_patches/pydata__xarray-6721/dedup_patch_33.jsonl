{"model_name_or_path": "agentless_claude", "instance_id": "pydata__xarray-6721", "model_patch": "diff --git a/xarray/core/common.py b/xarray/core/common.py\nindex 304e65c..f7b28d4 100644\n--- a/xarray/core/common.py\n+++ b/xarray/core/common.py\n@@ -2023,7 +2023,16 @@ def get_chunksizes(\n \n     chunks: dict[Any, tuple[int, ...]] = {}\n     for v in variables:\n-        if hasattr(v.data, \"chunks\"):\n+        encoding_chunks = v.encoding.get('chunks')\n+        if encoding_chunks is not None:\n+            for dim, c in v.chunksizes.items():\n+                if dim in chunks and c != chunks[dim]:\n+                    raise ValueError(\n+                        f\"Object has inconsistent chunks along dimension {dim}. \"\n+                        \"This can be fixed by calling unify_chunks().\"\n+                    )\n+                chunks[dim] = c\n+        elif hasattr(v.data, \"chunks\"):\n             for dim, c in v.chunksizes.items():\n                 if dim in chunks and c != chunks[dim]:\n                     raise ValueError(\n", "occurrence": 3, "normalized_patch": "diff --git a/xarray/core/common.py b/xarray/core/common.py\nindex 66e6a33..34432fd 100644\n--- a/xarray/core/common.py\n+++ b/xarray/core/common.py\n@@ -387,7 +387,13 @@ def ones_like(other: Dataset | DataArray | Variable, dtype: DTypeMaybeMapping=No\n def get_chunksizes(variables: Iterable[Variable]) -> Mapping[Any, tuple[int, ...]]:\n     chunks: dict[Any, tuple[int, ...]] = {}\n     for v in variables:\n-        if hasattr(v.data, 'chunks'):\n+        encoding_chunks = v.encoding.get('chunks')\n+        if encoding_chunks is not None:\n+            for dim, c in v.chunksizes.items():\n+                if dim in chunks and c != chunks[dim]:\n+                    raise ValueError(f'Object has inconsistent chunks along dimension {dim}. This can be fixed by calling unify_chunks().')\n+                chunks[dim] = c\n+        elif hasattr(v.data, 'chunks'):\n             for dim, c in v.chunksizes.items():\n                 if dim in chunks and c != chunks[dim]:\n                     raise ValueError(f'Object has inconsistent chunks along dimension {dim}. This can be fixed by calling unify_chunks().')\n", "normalized_occurrence": 6}
