{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-17655", "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex a708f18..1b36f5f 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -214,7 +214,14 @@ class Point(GeometryEntity):\n \n         \"\"\"\n         try:\n-            s, o = Point._normalize_dimension(self, Point(other, evaluate=False))\n+            if isinstance(other, Point):\n+                s, o = Point._normalize_dimension(self, other)\n+            elif isinstance(other, Mul) and any(isinstance(arg, Point) for arg in other.args):\n+                scalar, pt = [(arg, other/arg) for arg in other.args if isinstance(arg, (int, float, sympy.Float))][0]\n+                s, o = Point._normalize_dimension(self, pt)\n+                o = [scalar * coord for coord in o]\n+            else:\n+                s, o = Point._normalize_dimension(self, Point(other, evaluate=False))\n         except TypeError:\n             raise GeometryError(\"Don't know how to add {} and a Point object\".format(other))\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex e45d95f..bb706c1 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -63,7 +63,14 @@ class Point(GeometryEntity):\n         return Point.distance(origin, self)\n     def __add__(self, other):\n         try:\n-            s, o = Point._normalize_dimension(self, Point(other, evaluate=False))\n+            if isinstance(other, Point):\n+                s, o = Point._normalize_dimension(self, other)\n+            elif isinstance(other, Mul) and any((isinstance(arg, Point) for arg in other.args)):\n+                scalar, pt = [(arg, other / arg) for arg in other.args if isinstance(arg, (int, float, sympy.Float))][0]\n+                s, o = Point._normalize_dimension(self, pt)\n+                o = [scalar * coord for coord in o]\n+            else:\n+                s, o = Point._normalize_dimension(self, Point(other, evaluate=False))\n         except TypeError:\n             raise GeometryError(\"Don't know how to add {} and a Point object\".format(other))\n         coords = [simplify(a + b) for a, b in zip(s, o)]\n", "normalized_occurrence": 1}
