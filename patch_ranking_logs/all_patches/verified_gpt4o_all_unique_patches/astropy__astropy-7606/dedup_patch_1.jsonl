{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-7606", "model_patch": "diff --git a/astropy/units/core.py b/astropy/units/core.py\nindex e92aa72..25c8c8d 100644\n--- a/astropy/units/core.py\n+++ b/astropy/units/core.py\n@@ -1819,7 +1819,7 @@ class _UnitMetaClass(InheritDocstrings):\n             return CompositeUnit(s, [], [])\n \n         elif s is None:\n-            raise TypeError(\"None is not a valid Unit\")\n+            return False\n \n         else:\n             raise TypeError(\"{0} can not be converted to a Unit\".format(s))\n", "occurrence": 8, "normalized_patch": "diff --git a/astropy/units/core.py b/astropy/units/core.py\nindex 017908c..bafe01d 100644\n--- a/astropy/units/core.py\n+++ b/astropy/units/core.py\n@@ -1497,7 +1497,7 @@ class _UnitMetaClass(InheritDocstrings):\n         elif isinstance(s, (int, float, np.floating, np.integer)):\n             return CompositeUnit(s, [], [])\n         elif s is None:\n-            raise TypeError('None is not a valid Unit')\n+            return False\n         else:\n             raise TypeError('{0} can not be converted to a Unit'.format(s))\n \n", "normalized_occurrence": 8}
