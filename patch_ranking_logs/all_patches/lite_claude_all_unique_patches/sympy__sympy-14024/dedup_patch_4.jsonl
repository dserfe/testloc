{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-14024", "model_patch": "diff --git a/sympy/core/power.py b/sympy/core/power.py\nindex 0a340d5..2db9918 100644\n--- a/sympy/core/power.py\n+++ b/sympy/core/power.py\n@@ -395,6 +395,9 @@ class Pow(Expr):\n                     s = None\n \n         if s is not None:\n+            # Special case: handle negative base with positive real number\n+            if b.is_negative and b.is_real and (-b).is_positive:\n+                return s*(-1)**(e*other)*Pow(-b, e*other)\n             return s*Pow(b, e*other)\n \n     def _eval_Mod(self, q):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/power.py b/sympy/core/power.py\nindex f12eb85..72545b4 100644\n--- a/sympy/core/power.py\n+++ b/sympy/core/power.py\n@@ -209,6 +209,8 @@ class Pow(Expr):\n                 except PrecisionExhausted:\n                     s = None\n         if s is not None:\n+            if b.is_negative and b.is_real and (-b).is_positive:\n+                return s * (-1) ** (e * other) * Pow(-b, e * other)\n             return s * Pow(b, e * other)\n     def _eval_Mod(self, q):\n         if self.exp.is_integer and self.exp.is_positive:\n", "normalized_occurrence": 1}
