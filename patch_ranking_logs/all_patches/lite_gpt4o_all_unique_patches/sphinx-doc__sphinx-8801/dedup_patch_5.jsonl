{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8801", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 9e67bb6..4a6e190 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -768,23 +768,17 @@ class Documenter:\n                     # keep documented attributes\n                     keep = True\n                 isattr = True\n-            elif want_all and isprivate:\n+            elif want_all and (isprivate or is_filtered_inherited_member(membername, obj)):\n                 if has_doc or self.options.undoc_members:\n                     if self.options.private_members is None:\n                         keep = False\n-                    elif is_filtered_inherited_member(membername, obj):\n-                        keep = False\n                     else:\n                         keep = membername in self.options.private_members\n                 else:\n                     keep = False\n             else:\n-                if (self.options.members is ALL and\n-                        is_filtered_inherited_member(membername, obj)):\n-                    keep = False\n-                else:\n-                    # ignore undocumented members if :undoc-members: is not given\n-                    keep = has_doc or self.options.undoc_members\n+                # ignore undocumented members if :undoc-members: is not given\n+                keep = has_doc or self.options.undoc_members\n \n             if isinstance(obj, ObjectMember) and obj.skipped:\n                 # forcedly skipped member (ex. a module attribute not defined in __all__)\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex e1d3d5c..17c8196 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -411,18 +411,14 @@ class Documenter:\n                 else:\n                     keep = True\n                 isattr = True\n-            elif want_all and isprivate:\n+            elif want_all and (isprivate or is_filtered_inherited_member(membername, obj)):\n                 if has_doc or self.options.undoc_members:\n                     if self.options.private_members is None:\n                         keep = False\n-                    elif is_filtered_inherited_member(membername, obj):\n-                        keep = False\n                     else:\n                         keep = membername in self.options.private_members\n                 else:\n                     keep = False\n-            elif self.options.members is ALL and is_filtered_inherited_member(membername, obj):\n-                keep = False\n             else:\n                 keep = has_doc or self.options.undoc_members\n             if isinstance(obj, ObjectMember) and obj.skipped:\n", "normalized_occurrence": 1}
