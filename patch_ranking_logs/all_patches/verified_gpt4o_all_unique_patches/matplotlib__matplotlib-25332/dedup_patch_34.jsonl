{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25332", "model_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 973eb1a..cc1bd8b 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -3170,7 +3170,10 @@ None}, default: None\n         # add version information to the state\n         state['__mpl_version__'] = mpl.__version__\n \n-        # check whether the figure manager (if any) is registered with pyplot\n+        # Handle weak references for axes\n+        state['_axstack'] = [ax() for ax in state['_axstack'].as_list() if ax() is not None]\n+\n+        # Check whether the figure manager (if any) is registered with pyplot\n         from matplotlib import _pylab_helpers\n         if self.canvas.manager in _pylab_helpers.Gcf.figs.values():\n             state['_restore_to_pylab'] = True\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 7796fb8..c36c3dd 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -948,6 +948,7 @@ class Figure(FigureBase):\n         state.pop('canvas')\n         state['_dpi'] = state.get('_original_dpi', state['_dpi'])\n         state['__mpl_version__'] = mpl.__version__\n+        state['_axstack'] = [ax() for ax in state['_axstack'].as_list() if ax() is not None]\n         from matplotlib import _pylab_helpers\n         if self.canvas.manager in _pylab_helpers.Gcf.figs.values():\n             state['_restore_to_pylab'] = True\n", "normalized_occurrence": 1}
