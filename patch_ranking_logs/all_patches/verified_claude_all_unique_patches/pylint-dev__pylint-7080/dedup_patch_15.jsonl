{"model_name_or_path": "agentless_claude", "instance_id": "pylint-dev__pylint-7080", "model_patch": "diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py\nindex 440e6fe..e21040b 100644\n--- a/pylint/lint/pylinter.py\n+++ b/pylint/lint/pylinter.py\n@@ -607,14 +607,25 @@ class PyLinter(\n                         continue\n \n                     if \"__init__.py\" in files:\n-                        skip_subtrees.append(root)\n-                        yield root\n+                        if not _is_ignored_file(\n+                            root,\n+                            self.config.ignore,\n+                            self.config.ignore_patterns,\n+                            self.config.ignore_paths,\n+                        ):\n+                            skip_subtrees.append(root)\n+                            yield root\n                     else:\n-                        yield from (\n-                            os.path.join(root, file)\n-                            for file in files\n-                            if file.endswith(\".py\")\n-                        )\n+                        for file in files:\n+                            if file.endswith(\".py\"):\n+                                path = os.path.join(root, file)\n+                                if not _is_ignored_file(\n+                                    path,\n+                                    self.config.ignore,\n+                                    self.config.ignore_patterns,\n+                                    self.config.ignore_paths,\n+                                ):\n+                                    yield path\n             else:\n                 yield something\n \n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py\nindex afb1178..4be86d7 100644\n--- a/pylint/lint/pylinter.py\n+++ b/pylint/lint/pylinter.py\n@@ -234,10 +234,15 @@ class PyLinter(_ArgumentsManager, _MessageStateHandler, reporters.ReportsHandler\n                         skip_subtrees.append(root)\n                         continue\n                     if '__init__.py' in files:\n-                        skip_subtrees.append(root)\n-                        yield root\n+                        if not _is_ignored_file(root, self.config.ignore, self.config.ignore_patterns, self.config.ignore_paths):\n+                            skip_subtrees.append(root)\n+                            yield root\n                     else:\n-                        yield from (os.path.join(root, file) for file in files if file.endswith('.py'))\n+                        for file in files:\n+                            if file.endswith('.py'):\n+                                path = os.path.join(root, file)\n+                                if not _is_ignored_file(path, self.config.ignore, self.config.ignore_patterns, self.config.ignore_paths):\n+                                    yield path\n             else:\n                 yield something\n     def check(self, files_or_modules: Sequence[str] | str) -> None:\n", "normalized_occurrence": 1}
