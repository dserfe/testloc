{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-20801", "model_patch": "diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\nindex ecd2cce..3743c18 100644\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -1381,6 +1381,7 @@ class Float(Number):\n         return int(mlib.to_int(self._mpf_))  # uses round_fast = round_down\n \n     def __eq__(self, other):\n+        from sympy.logic.boolalg import Boolean\n         from sympy.logic.boolalg import Boolean\n         try:\n             other = _sympify(other)\n@@ -1390,6 +1391,8 @@ class Float(Number):\n             return not other\n         if isinstance(other, Boolean):\n             return False\n+        if isinstance(other, Boolean):\n+            return False\n         if other.is_NumberSymbol:\n             if other.is_irrational:\n                 return False\n@@ -1860,6 +1863,7 @@ class Rational(Number):\n         return self.ceiling()\n \n     def __eq__(self, other):\n+        from sympy.logic.boolalg import Boolean\n         from sympy.core.power import integer_log\n         try:\n             other = _sympify(other)\n@@ -1871,6 +1875,8 @@ class Rational(Number):\n             return False\n         if not self:\n             return not other\n+        if isinstance(other, Boolean):\n+            return False\n         if other.is_NumberSymbol:\n             if other.is_irrational:\n                 return False\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\nindex c5d42bc..9ae7941 100644\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -1186,6 +1186,7 @@ class Float(Number):\n         return int(mlib.to_int(self._mpf_))\n \n     def __eq__(self, other):\n+        from sympy.logic.boolalg import Boolean\n         from sympy.logic.boolalg import Boolean\n         try:\n             other = _sympify(other)\n@@ -1195,6 +1196,8 @@ class Float(Number):\n             return not other\n         if isinstance(other, Boolean):\n             return False\n+        if isinstance(other, Boolean):\n+            return False\n         if other.is_NumberSymbol:\n             if other.is_irrational:\n                 return False\n@@ -1622,6 +1625,7 @@ class Rational(Number):\n         return self.ceiling()\n \n     def __eq__(self, other):\n+        from sympy.logic.boolalg import Boolean\n         from sympy.core.power import integer_log\n         try:\n             other = _sympify(other)\n@@ -1631,6 +1635,8 @@ class Rational(Number):\n             return False\n         if not self:\n             return not other\n+        if isinstance(other, Boolean):\n+            return False\n         if other.is_NumberSymbol:\n             if other.is_irrational:\n                 return False\n", "normalized_occurrence": 1}
