{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-4248", "model_patch": "diff --git a/xarray/core/formatting.py b/xarray/core/formatting.py\nindex 91a7f67..6e829d4 100644\n--- a/xarray/core/formatting.py\n+++ b/xarray/core/formatting.py\n@@ -278,7 +278,9 @@ def summarize_variable(\n             raise TypeError(f\"`max_width` value of `{max_width}` is not a valid int\")\n         else:\n             max_width = max_width_options\n-    first_col = pretty_print(f\"  {marker} {name} \", col_width)\n+    units = var.attrs.get('units', '')\n+    units_str = f\", in {units}\" if units else ''\n+    first_col = pretty_print(f\"  {marker} {name}{units_str} \", col_width)\n     if var.dims:\n         dims_str = \"({}) \".format(\", \".join(map(str, var.dims)))\n     else:\n@@ -508,6 +510,7 @@ def dataset_repr(ds):\n         summary.append(unindexed_dims_str)\n \n     summary.append(data_vars_repr(ds.data_vars, col_width=col_width))\n+    summary.append(attrs_repr(ds.attrs))\n \n     if ds.attrs:\n         summary.append(attrs_repr(ds.attrs))\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/formatting.py b/xarray/core/formatting.py\nindex 6d31a74..5755572 100644\n--- a/xarray/core/formatting.py\n+++ b/xarray/core/formatting.py\n@@ -158,7 +158,9 @@ def summarize_variable(name: Hashable, var, col_width: int, marker: str=' ', max\n             raise TypeError(f'`max_width` value of `{max_width}` is not a valid int')\n         else:\n             max_width = max_width_options\n-    first_col = pretty_print(f'  {marker} {name} ', col_width)\n+    units = var.attrs.get('units', '')\n+    units_str = f', in {units}' if units else ''\n+    first_col = pretty_print(f'  {marker} {name}{units_str} ', col_width)\n     if var.dims:\n         dims_str = '({}) '.format(', '.join(map(str, var.dims)))\n     else:\n@@ -295,6 +297,7 @@ def dataset_repr(ds):\n     if unindexed_dims_str:\n         summary.append(unindexed_dims_str)\n     summary.append(data_vars_repr(ds.data_vars, col_width=col_width))\n+    summary.append(attrs_repr(ds.attrs))\n     if ds.attrs:\n         summary.append(attrs_repr(ds.attrs))\n     return '\\n'.join(summary)\n", "normalized_occurrence": 1}
