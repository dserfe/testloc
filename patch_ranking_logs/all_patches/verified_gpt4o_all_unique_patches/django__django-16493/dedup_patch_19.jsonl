{"model_name_or_path": "agentless", "instance_id": "django__django-16493", "model_patch": "diff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py\nindex 53d7755..847977a 100644\n--- a/django/db/models/fields/files.py\n+++ b/django/db/models/fields/files.py\n@@ -295,7 +295,7 @@ class FileField(Field):\n         if kwargs.get(\"max_length\") == 100:\n             del kwargs[\"max_length\"]\n         kwargs[\"upload_to\"] = self.upload_to\n-        if self.storage is not default_storage:\n+        if self.storage is not default_storage and not (callable(self._storage_callable) and self._storage_callable() is default_storage):\n             kwargs[\"storage\"] = getattr(self, \"_storage_callable\", self.storage)\n         return name, path, args, kwargs\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py\nindex bec877f..2611a81 100644\n--- a/django/db/models/fields/files.py\n+++ b/django/db/models/fields/files.py\n@@ -147,7 +147,7 @@ class FileField(Field):\n         if kwargs.get('max_length') == 100:\n             del kwargs['max_length']\n         kwargs['upload_to'] = self.upload_to\n-        if self.storage is not default_storage:\n+        if self.storage is not default_storage and (not (callable(self._storage_callable) and self._storage_callable() is default_storage)):\n             kwargs['storage'] = getattr(self, '_storage_callable', self.storage)\n         return (name, path, args, kwargs)\n     def get_internal_type(self):\n", "normalized_occurrence": 2}
