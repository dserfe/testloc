{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-20322", "model_patch": "diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py\nindex cdb25ec..ab46115 100644\n--- a/sympy/simplify/simplify.py\n+++ b/sympy/simplify/simplify.py\n@@ -584,7 +584,10 @@ def simplify(expr, ratio=1.7, measure=count_ops, rational=False, inverse=False,\n     if not isinstance(expr, Basic) or not expr.args:  # XXX: temporary hack\n         return expr\n \n-    if inverse and expr.has(Function):\n+    if expr.has(Function):\n+        if inverse:\n+            expr = inversecombine(expr)\n+        expr = expr.replace(lambda f: isinstance(f, ceiling), lambda f: f)\n         expr = inversecombine(expr)\n         if not expr.args:  # simplified to atomic\n             return expr\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py\nindex 1183c05..d29f179 100644\n--- a/sympy/simplify/simplify.py\n+++ b/sympy/simplify/simplify.py\n@@ -176,7 +176,10 @@ def simplify(expr, ratio=1.7, measure=count_ops, rational=False, inverse=False,\n     original_expr = expr = collect_abs(signsimp(expr))\n     if not isinstance(expr, Basic) or not expr.args:\n         return expr\n-    if inverse and expr.has(Function):\n+    if expr.has(Function):\n+        if inverse:\n+            expr = inversecombine(expr)\n+        expr = expr.replace(lambda f: isinstance(f, ceiling), lambda f: f)\n         expr = inversecombine(expr)\n         if not expr.args:\n             return expr\n", "normalized_occurrence": 1}
