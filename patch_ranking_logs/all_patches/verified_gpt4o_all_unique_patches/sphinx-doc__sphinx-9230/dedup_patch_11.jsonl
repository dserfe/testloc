{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9230", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 51811ca..539a579 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -91,9 +91,12 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str]) -> No\n                 # :param xxx:\n                 arg = arguments.setdefault(parts[1], {})\n                 arg['param'] = True\n-            elif len(parts) > 2:\n+            elif len(parts) > 2 and '(' not in parts[2]:\n                 # :param xxx yyy:\n                 name = ' '.join(parts[2:])\n+            elif len(parts) > 2:\n+                # :param xxx(dict(x, y)):\n+                name = ' '.join(parts[1:])\n                 arg = arguments.setdefault(name, {})\n                 arg['param'] = True\n                 arg['type'] = True\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 03a755b..3f63982 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -62,8 +62,10 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str]) -> No\n             if len(parts) == 2:\n                 arg = arguments.setdefault(parts[1], {})\n                 arg['param'] = True\n-            elif len(parts) > 2:\n+            elif len(parts) > 2 and '(' not in parts[2]:\n                 name = ' '.join(parts[2:])\n+            elif len(parts) > 2:\n+                name = ' '.join(parts[1:])\n                 arg = arguments.setdefault(name, {})\n                 arg['param'] = True\n                 arg['type'] = True\n", "normalized_occurrence": 1}
