{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14999", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 165c6f5..f76fac9 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -320,12 +320,14 @@ class RenameModel(ModelOperation):\n         new_model = to_state.apps.get_model(app_label, self.new_name)\n         if self.allow_migrate_model(schema_editor.connection.alias, new_model):\n             old_model = from_state.apps.get_model(app_label, self.old_name)\n-            # Move the main table\n-            schema_editor.alter_db_table(\n-                new_model,\n-                old_model._meta.db_table,\n-                new_model._meta.db_table,\n-            )\n+            # Skip table rename if both models have the same db_table\n+            if old_model._meta.db_table != new_model._meta.db_table:\n+                # Move the main table\n+                schema_editor.alter_db_table(\n+                    new_model,\n+                    old_model._meta.db_table,\n+                    new_model._meta.db_table,\n+                )\n             # Alter the fields pointing to us\n             for related_object in old_model._meta.related_objects:\n                 if related_object.related_model == old_model:\n@@ -354,11 +356,12 @@ class RenameModel(ModelOperation):\n                 # Rename the M2M table that's based on this model's name.\n                 old_m2m_model = old_field.remote_field.through\n                 new_m2m_model = new_field.remote_field.through\n-                schema_editor.alter_db_table(\n-                    new_m2m_model,\n-                    old_m2m_model._meta.db_table,\n-                    new_m2m_model._meta.db_table,\n-                )\n+                if old_m2m_model._meta.db_table != new_m2m_model._meta.db_table:\n+                    schema_editor.alter_db_table(\n+                        new_m2m_model,\n+                        old_m2m_model._meta.db_table,\n+                        new_m2m_model._meta.db_table,\n+                    )\n                 # Rename the column in the M2M table that's based on this\n                 # model's name.\n                 schema_editor.alter_field(\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 8445d8b..2d4173f 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -152,7 +152,8 @@ class RenameModel(ModelOperation):\n         new_model = to_state.apps.get_model(app_label, self.new_name)\n         if self.allow_migrate_model(schema_editor.connection.alias, new_model):\n             old_model = from_state.apps.get_model(app_label, self.old_name)\n-            schema_editor.alter_db_table(new_model, old_model._meta.db_table, new_model._meta.db_table)\n+            if old_model._meta.db_table != new_model._meta.db_table:\n+                schema_editor.alter_db_table(new_model, old_model._meta.db_table, new_model._meta.db_table)\n             for related_object in old_model._meta.related_objects:\n                 if related_object.related_model == old_model:\n                     model = new_model\n@@ -168,7 +169,8 @@ class RenameModel(ModelOperation):\n                     continue\n                 old_m2m_model = old_field.remote_field.through\n                 new_m2m_model = new_field.remote_field.through\n-                schema_editor.alter_db_table(new_m2m_model, old_m2m_model._meta.db_table, new_m2m_model._meta.db_table)\n+                if old_m2m_model._meta.db_table != new_m2m_model._meta.db_table:\n+                    schema_editor.alter_db_table(new_m2m_model, old_m2m_model._meta.db_table, new_m2m_model._meta.db_table)\n                 schema_editor.alter_field(new_m2m_model, old_m2m_model._meta.get_field(old_model._meta.model_name), new_m2m_model._meta.get_field(new_model._meta.model_name))\n     def database_backwards(self, app_label, schema_editor, from_state, to_state):\n         self.new_name_lower, self.old_name_lower = (self.old_name_lower, self.new_name_lower)\n", "normalized_occurrence": 2}
