{"model_name_or_path": "agentless", "instance_id": "django__django-15128", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 782e26e..4c28cf5 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -612,6 +612,9 @@ class Query(BaseExpression):\n             # combined query must have two joins, too.\n             reuse.discard(new_alias)\n             if alias != new_alias:\n+                # Ensure new_alias does not conflict with change_map values\n+                while new_alias in change_map.values():\n+                    new_alias = \"%s%d\" % (new_alias[:-1], int(new_alias[-1]) + 1)\n                 change_map[alias] = new_alias\n             if not rhs.alias_refcount[alias]:\n                 # The alias was unused in the rhs query. Unref it so that it\n@@ -846,6 +849,7 @@ class Query(BaseExpression):\n         relabelling any references to them in select columns and the where\n         clause.\n         \"\"\"\n+        # Ensure keys and values of change_map do not intersect to avoid aliasing conflicts.\n         assert set(change_map).isdisjoint(change_map.values())\n \n         # 1. Update references in \"select\" (normal columns plus aliases),\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex c6ee433..f447606 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -341,6 +341,8 @@ class Query(BaseExpression):\n                 rhs_votes.add(new_alias)\n             reuse.discard(new_alias)\n             if alias != new_alias:\n+                while new_alias in change_map.values():\n+                    new_alias = '%s%d' % (new_alias[:-1], int(new_alias[-1]) + 1)\n                 change_map[alias] = new_alias\n             if not rhs.alias_refcount[alias]:\n                 self.unref_alias(new_alias)\n", "normalized_occurrence": 1}
