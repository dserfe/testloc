{"model_name_or_path": "agentless", "instance_id": "django__django-11265", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 1309ca5..bea9581 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1664,8 +1664,12 @@ class Query(BaseExpression):\n         filter_lhs, filter_rhs = filter_expr\n         if isinstance(filter_rhs, F):\n             filter_expr = (filter_lhs, OuterRef(filter_rhs.name))\n-        # Generate the inner query.\n-        query = Query(self.model)\n+        # Generate the inner query with annotations from the outer query.\n+        query = self.clone()\n+        query.clear_ordering(True)\n+        query.extra = self.extra.copy()\n+        query.annotations = self.annotations.copy()\n+        query._filtered_relations = self._filtered_relations.copy()\n         query.add_filter(filter_expr)\n         query.clear_ordering(True)\n         # Try to have as simple as possible subquery -> trim leading joins from\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 60a9579..2295522 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -888,7 +888,11 @@ class Query(BaseExpression):\n         filter_lhs, filter_rhs = filter_expr\n         if isinstance(filter_rhs, F):\n             filter_expr = (filter_lhs, OuterRef(filter_rhs.name))\n-        query = Query(self.model)\n+        query = self.clone()\n+        query.clear_ordering(True)\n+        query.extra = self.extra.copy()\n+        query.annotations = self.annotations.copy()\n+        query._filtered_relations = self._filtered_relations.copy()\n         query.add_filter(filter_expr)\n         query.clear_ordering(True)\n         trimmed_prefix, contains_louter = query.trim_start(names_with_path)\n", "normalized_occurrence": 1}
