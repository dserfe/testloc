{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-25433", "model_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex f12a9a3..39e3b2a 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -882,6 +882,9 @@ class RangeSlider(SliderBase):\n             self.drag_active = False\n             event.canvas.release_mouse(self.ax)\n             self._active_handle = None\n+            # Ensure callback is triggered after mouse is released\n+            if event.name == \"button_release_event\":\n+                self._observers.process(\"changed\", self.val)\n             return\n \n         # determine which handle was grabbed\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex 2882ff9..4a143bf 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -711,6 +711,8 @@ class RangeSlider(SliderBase):\n             self.drag_active = False\n             event.canvas.release_mouse(self.ax)\n             self._active_handle = None\n+            if event.name == 'button_release_event':\n+                self._observers.process('changed', self.val)\n             return\n         if self.orientation == 'vertical':\n             handle_index = np.argmin(np.abs([h.get_ydata()[0] - event.ydata for h in self._handles]))\n", "normalized_occurrence": 1}
