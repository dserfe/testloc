{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8459", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 6f90bd7..0cdd009 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -30,7 +30,9 @@ def record_typehints(app: Sphinx, objtype: str, name: str, obj: Any,\n             sig = inspect.signature(obj)\n             for param in sig.parameters.values():\n                 if param.annotation is not param.empty:\n-                    annotation[param.name] = typing.stringify(param.annotation)\n+                    annotation[param.name] = typing.stringify(param.annotation, type_aliases=app.config.autodoc_type_aliases)\n+            if sig.return_annotation is not sig.empty:\n+                annotation['return'] = typing.stringify(sig.return_annotation, type_aliases=app.config.autodoc_type_aliases)\n             if sig.return_annotation is not sig.empty:\n                 annotation['return'] = typing.stringify(sig.return_annotation)\n     except (TypeError, ValueError):\n@@ -63,7 +65,7 @@ def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element\n             field_lists.append(field_list)\n \n         for field_list in field_lists:\n-            modify_field_list(field_list, annotations[fullname])\n+            modify_field_list(field_list, annotations[fullname], app.config.autodoc_type_aliases)\n \n \n def insert_field_list(node: Element) -> nodes.field_list:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 377d0c5..06ddb75 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -14,7 +14,9 @@ def record_typehints(app: Sphinx, objtype: str, name: str, obj: Any, options: Di\n             sig = inspect.signature(obj)\n             for param in sig.parameters.values():\n                 if param.annotation is not param.empty:\n-                    annotation[param.name] = typing.stringify(param.annotation)\n+                    annotation[param.name] = typing.stringify(param.annotation, type_aliases=app.config.autodoc_type_aliases)\n+            if sig.return_annotation is not sig.empty:\n+                annotation['return'] = typing.stringify(sig.return_annotation, type_aliases=app.config.autodoc_type_aliases)\n             if sig.return_annotation is not sig.empty:\n                 annotation['return'] = typing.stringify(sig.return_annotation)\n     except (TypeError, ValueError):\n@@ -41,7 +43,7 @@ def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element\n             field_list = insert_field_list(contentnode)\n             field_lists.append(field_list)\n         for field_list in field_lists:\n-            modify_field_list(field_list, annotations[fullname])\n+            modify_field_list(field_list, annotations[fullname], app.config.autodoc_type_aliases)\n def insert_field_list(node: Element) -> nodes.field_list:\n     field_list = nodes.field_list()\n     desc = [n for n in node if isinstance(n, addnodes.desc)]\n", "normalized_occurrence": 1}
