{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-5495", "model_patch": "diff --git a/src/_pytest/assertion/util.py b/src/_pytest/assertion/util.py\nindex c9b4ff0..87a74ef 100644\n--- a/src/_pytest/assertion/util.py\n+++ b/src/_pytest/assertion/util.py\n@@ -181,15 +181,15 @@ def _diff_text(left, right, verbose=0):\n         This is done using repr() which then needs post-processing to fix the encompassing quotes and un-escape\n         newlines and carriage returns (#429).\n         \"\"\"\n-        r = str(repr(binary_text)[1:-1])\n+        r = binary_text.decode('utf-8', 'replace')\n         r = r.replace(r\"\\n\", \"\\n\")\n         r = r.replace(r\"\\r\", \"\\r\")\n         return r\n \n     if isinstance(left, bytes):\n-        left = escape_for_readable_diff(left)\n+        left = repr(left)\n     if isinstance(right, bytes):\n-        right = escape_for_readable_diff(right)\n+        right = repr(right)\n     if verbose < 1:\n         i = 0  # just in case left or right has zero length\n         for i in range(min(len(left), len(right))):\n@@ -216,8 +216,8 @@ def _diff_text(left, right, verbose=0):\n                 right = right[:-i]\n     keepends = True\n     if left.isspace() or right.isspace():\n-        left = repr(str(left))\n-        right = repr(str(right))\n+        left = repr(left)\n+        right = repr(right)\n         explanation += [\"Strings contain only whitespace, escaping them using repr()\"]\n     explanation += [\n         line.strip(\"\\n\")\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/assertion/util.py b/src/_pytest/assertion/util.py\nindex 855efef..cab6114 100644\n--- a/src/_pytest/assertion/util.py\n+++ b/src/_pytest/assertion/util.py\n@@ -104,14 +104,14 @@ def _diff_text(left, right, verbose=0):\n     from difflib import ndiff\n     explanation = []\n     def escape_for_readable_diff(binary_text):\n-        r = str(repr(binary_text)[1:-1])\n+        r = binary_text.decode('utf-8', 'replace')\n         r = r.replace('\\\\n', '\\n')\n         r = r.replace('\\\\r', '\\r')\n         return r\n     if isinstance(left, bytes):\n-        left = escape_for_readable_diff(left)\n+        left = repr(left)\n     if isinstance(right, bytes):\n-        right = escape_for_readable_diff(right)\n+        right = repr(right)\n     if verbose < 1:\n         i = 0\n         for i in range(min(len(left), len(right))):\n@@ -133,8 +133,8 @@ def _diff_text(left, right, verbose=0):\n                 right = right[:-i]\n     keepends = True\n     if left.isspace() or right.isspace():\n-        left = repr(str(left))\n-        right = repr(str(right))\n+        left = repr(left)\n+        right = repr(right)\n         explanation += ['Strings contain only whitespace, escaping them using repr()']\n     explanation += [line.strip('\\n') for line in ndiff(left.splitlines(keepends), right.splitlines(keepends))]\n     return explanation\n", "normalized_occurrence": 1}
