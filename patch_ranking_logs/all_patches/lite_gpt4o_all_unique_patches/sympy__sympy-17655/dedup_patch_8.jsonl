{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-17655", "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex a708f18..250ca25 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -213,6 +213,9 @@ class Point(GeometryEntity):\n         sympy.geometry.point.Point.translate\n \n         \"\"\"\n+        if isinstance(other, Mul):\n+            point_coords = [simplify(a * other.as_coeff_Mul()[0]) for a in other.as_coeff_Mul()[1].args]\n+            other = Point(point_coords, evaluate=False)\n         try:\n             s, o = Point._normalize_dimension(self, Point(other, evaluate=False))\n         except TypeError:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex e45d95f..5179027 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -62,6 +62,9 @@ class Point(GeometryEntity):\n         origin = Point([0] * len(self))\n         return Point.distance(origin, self)\n     def __add__(self, other):\n+        if isinstance(other, Mul):\n+            point_coords = [simplify(a * other.as_coeff_Mul()[0]) for a in other.as_coeff_Mul()[1].args]\n+            other = Point(point_coords, evaluate=False)\n         try:\n             s, o = Point._normalize_dimension(self, Point(other, evaluate=False))\n         except TypeError:\n", "normalized_occurrence": 1}
