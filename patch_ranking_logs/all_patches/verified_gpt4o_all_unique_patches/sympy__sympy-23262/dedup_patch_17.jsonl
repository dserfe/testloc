{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-23262", "model_patch": "diff --git a/sympy/printing/python.py b/sympy/printing/python.py\nindex 103a398..e23a17c 100644\n--- a/sympy/printing/python.py\n+++ b/sympy/printing/python.py\n@@ -1,3 +1,4 @@\n+\n import keyword as kw\n import sympy\n from .repr import ReprPrinter\n@@ -29,7 +30,11 @@ class PythonPrinter(ReprPrinter, StrPrinter):\n             self.functions.append(func)\n         return StrPrinter._print_Function(self, expr)\n \n-    # procedure (!) for defining symbols which have be defined in print_python()\n+    def _print_Tuple(self, expr):\n+        if len(expr) == 1:\n+            return f\"({self._print(expr[0])},)\"\n+        else:\n+            return f\"({', '.join(self._print(e) for e in expr)})\"\n     def _print_Symbol(self, expr):\n         symbol = self._str(expr)\n         if symbol not in self.symbols:\n", "occurrence": 1, "normalized_patch": "--- a/sympy/printing/python.py\n+++ b/sympy/printing/python.py\n+    def _print_Tuple(self, expr):\n+        if len(expr) == 1:\n+            return f'({self._print(expr[0])},)'\n+        else:\n+            return f\"({', '.join((self._print(e) for e in expr))})\"", "normalized_occurrence": 1}
