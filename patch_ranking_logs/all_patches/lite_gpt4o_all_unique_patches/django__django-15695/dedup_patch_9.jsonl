{"model_name_or_path": "agentless", "instance_id": "django__django-15695", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex b086232..35b253b 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -967,22 +967,26 @@ class RenameIndex(IndexOperation):\n \n     def database_backwards(self, app_label, schema_editor, from_state, to_state):\n         if self.old_fields:\n-            # Backward operation with unnamed index is a no-op.\n-            return\n-\n-        self.new_name_lower, self.old_name_lower = (\n-            self.old_name_lower,\n-            self.new_name_lower,\n-        )\n-        self.new_name, self.old_name = self.old_name, self.new_name\n+            # Restore the auto-generated name for unnamed index.\n+            from_model_state = from_state.models[app_label, self.model_name_lower]\n+            old_index = from_model_state.get_index_by_name(self.old_name)\n+            to_model_state = to_state.models[app_label, self.model_name_lower]\n+            new_index = to_model_state.get_index_by_name(self.new_name)\n+            schema_editor.rename_index(model, new_index, old_index)\n+        else:\n+            self.new_name_lower, self.old_name_lower = (\n+                self.old_name_lower,\n+                self.new_name_lower,\n+            )\n+            self.new_name, self.old_name = self.old_name, self.new_name\n \n-        self.database_forwards(app_label, schema_editor, from_state, to_state)\n+            self.database_forwards(app_label, schema_editor, from_state, to_state)\n \n-        self.new_name_lower, self.old_name_lower = (\n-            self.old_name_lower,\n-            self.new_name_lower,\n-        )\n-        self.new_name, self.old_name = self.old_name, self.new_name\n+            self.new_name_lower, self.old_name_lower = (\n+                self.old_name_lower,\n+                self.new_name_lower,\n+            )\n+            self.new_name, self.old_name = self.old_name, self.new_name\n \n     def describe(self):\n         if self.old_name:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 87ad28e..c1156d1 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -436,12 +436,17 @@ class RenameIndex(IndexOperation):\n         schema_editor.rename_index(model, old_index, new_index)\n     def database_backwards(self, app_label, schema_editor, from_state, to_state):\n         if self.old_fields:\n-            return\n-        self.new_name_lower, self.old_name_lower = (self.old_name_lower, self.new_name_lower)\n-        self.new_name, self.old_name = (self.old_name, self.new_name)\n-        self.database_forwards(app_label, schema_editor, from_state, to_state)\n-        self.new_name_lower, self.old_name_lower = (self.old_name_lower, self.new_name_lower)\n-        self.new_name, self.old_name = (self.old_name, self.new_name)\n+            from_model_state = from_state.models[app_label, self.model_name_lower]\n+            old_index = from_model_state.get_index_by_name(self.old_name)\n+            to_model_state = to_state.models[app_label, self.model_name_lower]\n+            new_index = to_model_state.get_index_by_name(self.new_name)\n+            schema_editor.rename_index(model, new_index, old_index)\n+        else:\n+            self.new_name_lower, self.old_name_lower = (self.old_name_lower, self.new_name_lower)\n+            self.new_name, self.old_name = (self.old_name, self.new_name)\n+            self.database_forwards(app_label, schema_editor, from_state, to_state)\n+            self.new_name_lower, self.old_name_lower = (self.old_name_lower, self.new_name_lower)\n+            self.new_name, self.old_name = (self.old_name, self.new_name)\n     def describe(self):\n         if self.old_name:\n             return f'Rename index {self.old_name} on {self.model_name} to {self.new_name}'\n", "normalized_occurrence": 1}
