{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-14623", "model_patch": "diff --git a/lib/matplotlib/scale.py b/lib/matplotlib/scale.py\nindex bf0245b..7a81400 100644\n--- a/lib/matplotlib/scale.py\n+++ b/lib/matplotlib/scale.py\n@@ -424,9 +424,15 @@ class LogScale(ScaleBase):\n         if not np.isfinite(minpos):\n             minpos = 1e-300  # This value should rarely if ever\n                              # end up with a visible effect.\n-\n-        return (minpos if vmin <= 0 else vmin,\n-                minpos if vmax <= 0 else vmax)\n+        \n+        # Get positive versions of limits\n+        pos_vmin = minpos if vmin <= 0 else vmin\n+        pos_vmax = minpos if vmax <= 0 else vmax\n+        \n+        # Preserve original ordering of limits\n+        if vmin > vmax:\n+            return pos_vmax, pos_vmin\n+        return pos_vmin, pos_vmax\n \n \n class FuncScaleLog(LogScale):\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/scale.py b/lib/matplotlib/scale.py\nindex 029d689..3beb2e7 100644\n--- a/lib/matplotlib/scale.py\n+++ b/lib/matplotlib/scale.py\n@@ -370,7 +370,11 @@ class LogScale(ScaleBase):\n         \"\"\"\n         if not np.isfinite(minpos):\n             minpos = 1e-300\n-        return (minpos if vmin <= 0 else vmin, minpos if vmax <= 0 else vmax)\n+        pos_vmin = minpos if vmin <= 0 else vmin\n+        pos_vmax = minpos if vmax <= 0 else vmax\n+        if vmin > vmax:\n+            return (pos_vmax, pos_vmin)\n+        return (pos_vmin, pos_vmax)\n \n class FuncScaleLog(LogScale):\n     \"\"\"\n", "normalized_occurrence": 1}
