{"model_name_or_path": "agentless", "instance_id": "django__django-15128", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 782e26e..9a44681 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -605,6 +605,8 @@ class Query(BaseExpression):\n             # updated alias.\n             join = join.relabeled_clone(change_map)\n             new_alias = self.join(join, reuse=reuse)\n+            while new_alias in rhs.alias_map.values():\n+                new_alias = self.join(join, reuse=reuse)\n             if join.join_type == INNER:\n                 rhs_votes.add(new_alias)\n             # We can't reuse the same join again in the query. If we have two\n", "occurrence": 2, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex c6ee433..5e68705 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -337,6 +337,8 @@ class Query(BaseExpression):\n             join = rhs.alias_map[alias]\n             join = join.relabeled_clone(change_map)\n             new_alias = self.join(join, reuse=reuse)\n+            while new_alias in rhs.alias_map.values():\n+                new_alias = self.join(join, reuse=reuse)\n             if join.join_type == INNER:\n                 rhs_votes.add(new_alias)\n             reuse.discard(new_alias)\n", "normalized_occurrence": 2}
