{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-22714", "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex b7f7a47..ffa17f5 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -912,7 +912,10 @@ class Point2D(Point):\n     def __new__(cls, *args, _nocheck=False, **kwargs):\n         if not _nocheck:\n             kwargs['dim'] = 2\n-            args = Point(*args, **kwargs)\n+            if not kwargs.get('evaluate', True):\n+                args = Point(*args, evaluate=False, **kwargs)\n+            else:\n+                args = Point(*args, **kwargs)\n         return GeometryEntity.__new__(cls, *args)\n \n     def __contains__(self, item):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex 4d7ea73..bcf0445 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -246,7 +246,10 @@ class Point2D(Point):\n     def __new__(cls, *args, _nocheck=False, **kwargs):\n         if not _nocheck:\n             kwargs['dim'] = 2\n-            args = Point(*args, **kwargs)\n+            if not kwargs.get('evaluate', True):\n+                args = Point(*args, evaluate=False, **kwargs)\n+            else:\n+                args = Point(*args, **kwargs)\n         return GeometryEntity.__new__(cls, *args)\n     def __contains__(self, item):\n         return item == self\n", "normalized_occurrence": 1}
