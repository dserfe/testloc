{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-17655", "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex a708f18..938206b 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -221,6 +221,14 @@ class Point(GeometryEntity):\n         coords = [simplify(a + b) for a, b in zip(s, o)]\n         return Point(coords, evaluate=False)\n \n+    def __mul__(self, factor):\n+        \"\"\"Multiply point's coordinates by a factor.\"\"\"\n+        factor = sympify(factor)\n+        coords = [simplify(x * factor) for x in self.args]\n+        return Point(coords, evaluate=False)\n+\n+    __rmul__ = __mul__\n+\n     def __contains__(self, item):\n         return item in self.args\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex e45d95f..c724d03 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -68,6 +68,11 @@ class Point(GeometryEntity):\n             raise GeometryError(\"Don't know how to add {} and a Point object\".format(other))\n         coords = [simplify(a + b) for a, b in zip(s, o)]\n         return Point(coords, evaluate=False)\n+    def __mul__(self, factor):\n+        factor = sympify(factor)\n+        coords = [simplify(x * factor) for x in self.args]\n+        return Point(coords, evaluate=False)\n+    __rmul__ = __mul__\n     def __contains__(self, item):\n         return item in self.args\n     def __div__(self, divisor):\n", "normalized_occurrence": 1}
