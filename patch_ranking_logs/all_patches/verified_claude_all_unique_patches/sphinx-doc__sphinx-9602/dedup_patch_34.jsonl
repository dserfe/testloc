{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-9602", "model_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex fbfe7b9..fab47d1 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -84,6 +84,9 @@ def type_to_xref(text: str, env: BuildEnvironment = None) -> addnodes.pending_xr\n     \"\"\"Convert a type string to a cross reference node.\"\"\"\n     if text == 'None':\n         reftype = 'obj'\n+    # Handle literal values like True, False, string literals, etc.\n+    elif text in ('True', 'False') or (text.startswith((\"'\", '\"')) and text.endswith((\"'\", '\"'))):\n+        reftype = 'obj'\n     else:\n         reftype = 'class'\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex 6040d43..d697ac4 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -45,6 +45,8 @@ class ModuleEntry(NamedTuple):\n def type_to_xref(text: str, env: BuildEnvironment=None) -> addnodes.pending_xref:\n     if text == 'None':\n         reftype = 'obj'\n+    elif text in ('True', 'False') or (text.startswith((\"'\", '\"')) and text.endswith((\"'\", '\"'))):\n+        reftype = 'obj'\n     else:\n         reftype = 'class'\n     if env:\n", "normalized_occurrence": 1}
