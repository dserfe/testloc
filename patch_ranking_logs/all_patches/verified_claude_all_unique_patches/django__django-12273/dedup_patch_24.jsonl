{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12273", "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 07c5013..baefd80 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -415,6 +415,10 @@ class Model(metaclass=ModelBase):\n         # Set up the storage for instance state\n         self._state = ModelState()\n \n+        # Ensure _state.adding is True when pk is explicitly set to None\n+        if opts.pk and opts.pk.attname in kwargs and kwargs[opts.pk.attname] is None:\n+            self._state.adding = True\n+\n         # There is a rather weird disparity here; if kwargs, it's set, then args\n         # overrides it. It should be one or the other; don't duplicate the work\n         # The reason for the kwargs check is that standard iterator passes in by\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 9dcf0cd..1061053 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -216,6 +216,8 @@ class Model(metaclass=ModelBase):\n         _DEFERRED = DEFERRED\n         pre_init.send(sender=cls, args=args, kwargs=kwargs)\n         self._state = ModelState()\n+        if opts.pk and opts.pk.attname in kwargs and (kwargs[opts.pk.attname] is None):\n+            self._state.adding = True\n         if len(args) > len(opts.concrete_fields):\n             raise IndexError('Number of args exceeds number of fields')\n         if not kwargs:\n", "normalized_occurrence": 1}
