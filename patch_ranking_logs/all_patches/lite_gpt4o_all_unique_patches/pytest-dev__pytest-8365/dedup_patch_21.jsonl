{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-8365", "model_patch": "diff --git a/src/_pytest/tmpdir.py b/src/_pytest/tmpdir.py\nindex cae5caf..c66903c 100644\n--- a/src/_pytest/tmpdir.py\n+++ b/src/_pytest/tmpdir.py\n@@ -111,7 +111,7 @@ class TempPathFactory:\n         else:\n             from_env = os.environ.get(\"PYTEST_DEBUG_TEMPROOT\")\n             temproot = Path(from_env or tempfile.gettempdir()).resolve()\n-            user = get_user() or \"unknown\"\n+            user = sanitize_user(get_user() or \"unknown\")\n             # use a sub-directory in the temproot to speed-up\n             # make_numbered_dir() call\n             rootdir = temproot.joinpath(f\"pytest-of-{user}\")\n@@ -151,6 +151,12 @@ class TempdirFactory:\n def get_user() -> Optional[str]:\n     \"\"\"Return the current user name, or None if getuser() does not work\n     in the current environment (see #1010).\"\"\"\n+\n+def sanitize_user(user: str) -> str:\n+    \"\"\"Sanitize the username to remove or replace characters illegal in directory names.\"\"\"\n+    return user.replace(\"\\\\\", \"_\").replace(\"/\", \"_\")  # Add other replacements as needed\n+    \"\"\"Return the current user name, or None if getuser() does not work\n+    in the current environment (see #1010).\"\"\"\n     import getpass\n \n     try:\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/tmpdir.py b/src/_pytest/tmpdir.py\nindex 94c7391..8042b23 100644\n--- a/src/_pytest/tmpdir.py\n+++ b/src/_pytest/tmpdir.py\n@@ -87,7 +87,7 @@ class TempPathFactory:\n         else:\n             from_env = os.environ.get('PYTEST_DEBUG_TEMPROOT')\n             temproot = Path(from_env or tempfile.gettempdir()).resolve()\n-            user = get_user() or 'unknown'\n+            user = sanitize_user(get_user() or 'unknown')\n             rootdir = temproot.joinpath(f'pytest-of-{user}')\n             rootdir.mkdir(exist_ok=True)\n             basetemp = make_numbered_dir_with_cleanup(prefix='pytest-', root=rootdir, keep=3, lock_timeout=LOCK_TIMEOUT)\n@@ -118,6 +118,11 @@ class TempdirFactory:\n def get_user() -> Optional[str]:\n     \"\"\"Return the current user name, or None if getuser() does not work\n     in the current environment (see #1010).\"\"\"\n+\n+def sanitize_user(user: str) -> str:\n+    \"\"\"Sanitize the username to remove or replace characters illegal in directory names.\"\"\"\n+    return user.replace('\\\\', '_').replace('/', '_')\n+    'Return the current user name, or None if getuser() does not work\\n    in the current environment (see #1010).'\n     import getpass\n     try:\n         return getpass.getuser()\n", "normalized_occurrence": 1}
