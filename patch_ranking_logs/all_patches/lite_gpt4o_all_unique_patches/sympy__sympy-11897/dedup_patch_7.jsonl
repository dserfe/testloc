{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-11897", "model_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 6f6ac51..27a3426 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -388,12 +388,17 @@ class LatexPrinter(Printer):\n \n                     _tex += term_tex\n                     last_term_tex = term_tex\n+                if term.is_Number and not term.is_Integer and expr.is_Add:\n+                    term_tex = r\"\\left(%s\\right)\" % term_tex\n                 return _tex\n \n-        if denom is S.One:\n+        if denom is S.One or denom == 2:\n             # use the original expression here, since fraction() may have\n             # altered it when producing numer and denom\n-            tex += convert(expr)\n+            if numer.is_Add:\n+                tex += r\"\\left(%s\\right)\" % convert(expr)\n+            else:\n+                tex += convert(expr)\n         else:\n             snumer = convert(numer)\n             sdenom = convert(denom)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex df1a5c2..42345ad 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -188,9 +188,14 @@ class LatexPrinter(Printer):\n                         _tex += separator\n                     _tex += term_tex\n                     last_term_tex = term_tex\n+                if term.is_Number and (not term.is_Integer) and expr.is_Add:\n+                    term_tex = '\\\\left(%s\\\\right)' % term_tex\n                 return _tex\n-        if denom is S.One:\n-            tex += convert(expr)\n+        if denom is S.One or denom == 2:\n+            if numer.is_Add:\n+                tex += '\\\\left(%s\\\\right)' % convert(expr)\n+            else:\n+                tex += convert(expr)\n         else:\n             snumer = convert(numer)\n             sdenom = convert(denom)\n", "normalized_occurrence": 1}
