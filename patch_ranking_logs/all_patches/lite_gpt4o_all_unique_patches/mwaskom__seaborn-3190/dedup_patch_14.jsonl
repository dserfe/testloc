{"model_name_or_path": "agentless", "instance_id": "mwaskom__seaborn-3190", "model_patch": "diff --git a/seaborn/_core/properties.py b/seaborn/_core/properties.py\nindex b7d827a..ce4897c 100644\n--- a/seaborn/_core/properties.py\n+++ b/seaborn/_core/properties.py\n@@ -567,9 +567,10 @@ class Color(Property):\n     def infer_scale(self, arg: Any, data: Series) -> Scale:\n         # TODO when inferring Continuous without data, verify type\n \n-        # TODO need to rethink the variable type system\n-        # (e.g. boolean, ordered categories as Ordinal, etc)..\n-        var_type = variable_type(data, boolean_type=\"categorical\")\n+        if data.dtype == bool:\n+            var_type = \"boolean\"\n+        else:\n+            var_type = variable_type(data, boolean_type=\"categorical\")\n \n         if isinstance(arg, (dict, list)):\n             return Nominal(arg)\n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/_core/properties.py b/seaborn/_core/properties.py\nindex 92ce937..b4376f8 100644\n--- a/seaborn/_core/properties.py\n+++ b/seaborn/_core/properties.py\n@@ -292,7 +292,10 @@ class Color(Property):\n         else:\n             return to_rgba_array(colors)[:, :3]\n     def infer_scale(self, arg: Any, data: Series) -> Scale:\n-        var_type = variable_type(data, boolean_type='categorical')\n+        if data.dtype == bool:\n+            var_type = 'boolean'\n+        else:\n+            var_type = variable_type(data, boolean_type='categorical')\n         if isinstance(arg, (dict, list)):\n             return Nominal(arg)\n         if isinstance(arg, tuple):\n", "normalized_occurrence": 2}
