{"model_name_or_path": "agentless", "instance_id": "django__django-12050", "model_patch": "diff --git a/django/db/models/lookups.py b/django/db/models/lookups.py\nindex ba8a5e5..60886a0 100644\n--- a/django/db/models/lookups.py\n+++ b/django/db/models/lookups.py\n@@ -272,6 +272,11 @@ class Exact(FieldGetDbPrepValueMixin, BuiltinLookup):\n                     'The QuerySet value for an exact lookup must be limited to '\n                     'one result using slicing.'\n                 )\n+        value = self.rhs\n+        if isinstance(value, list):\n+            # Ensure we retain the list type for exact value queries\n+            processed_rhs = super().process_rhs(compiler, connection)\n+            return processed_rhs[0], [list(processed_rhs[1])]\n         return super().process_rhs(compiler, connection)\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/lookups.py b/django/db/models/lookups.py\nindex a76d93e..0c765f8 100644\n--- a/django/db/models/lookups.py\n+++ b/django/db/models/lookups.py\n@@ -190,6 +190,10 @@ class Exact(FieldGetDbPrepValueMixin, BuiltinLookup):\n                     self.rhs.add_fields(['pk'])\n             else:\n                 raise ValueError('The QuerySet value for an exact lookup must be limited to one result using slicing.')\n+        value = self.rhs\n+        if isinstance(value, list):\n+            processed_rhs = super().process_rhs(compiler, connection)\n+            return (processed_rhs[0], [list(processed_rhs[1])])\n         return super().process_rhs(compiler, connection)\n @Field.register_lookup\n class IExact(BuiltinLookup):\n", "normalized_occurrence": 1}
