{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-14976", "model_patch": "diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py\nindex 48d6783..bfb965a 100644\n--- a/sympy/utilities/lambdify.py\n+++ b/sympy/utilities/lambdify.py\n@@ -445,6 +445,14 @@ def lambdify(args, expr, modules=None, printer=None, use_imps=True,\n \n     # Provide lambda expression with builtins, and compatible implementation of range\n     namespace.update({'builtins':builtins, 'range':range})\n+    \n+    # Ensure proper rational number handling for mpmath\n+    if _module_present('mpmath', namespaces):\n+        from sympy.core.numbers import Rational\n+        def _convert_rational(p, q):\n+            import mpmath\n+            return mpmath.mpf(p) / mpmath.mpf(q)\n+        namespace.update({'_convert_rational': _convert_rational})\n \n     # Create the function definition code and execute it\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py\nindex 9997e01..08a1ca8 100644\n--- a/sympy/utilities/lambdify.py\n+++ b/sympy/utilities/lambdify.py\n@@ -125,6 +125,12 @@ def lambdify(args, expr, modules=None, printer=None, use_imps=True, dummify=Fals\n     for ln in imp_mod_lines:\n         exec_(ln, {}, namespace)\n     namespace.update({'builtins': builtins, 'range': range})\n+    if _module_present('mpmath', namespaces):\n+        from sympy.core.numbers import Rational\n+        def _convert_rational(p, q):\n+            import mpmath\n+            return mpmath.mpf(p) / mpmath.mpf(q)\n+        namespace.update({'_convert_rational': _convert_rational})\n     funcname = '_lambdifygenerated'\n     if _module_present('tensorflow', namespaces):\n         funcprinter = _TensorflowEvaluatorPrinter(printer, dummify)\n", "normalized_occurrence": 1}
