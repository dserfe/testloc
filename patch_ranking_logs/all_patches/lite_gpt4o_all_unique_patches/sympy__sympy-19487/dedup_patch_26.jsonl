{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-19487", "model_patch": "diff --git a/sympy/functions/elementary/miscellaneous.py b/sympy/functions/elementary/miscellaneous.py\nindex 6852819..a84551e 100644\n--- a/sympy/functions/elementary/miscellaneous.py\n+++ b/sympy/functions/elementary/miscellaneous.py\n@@ -1,3 +1,4 @@\n+\n from sympy.core import Function, S, sympify\n from sympy.core.add import Add\n from sympy.core.containers import Tuple\n@@ -13,7 +14,15 @@ from sympy.core.relational import Eq, Relational\n from sympy.core.singleton import Singleton\n from sympy.core.symbol import Dummy\n from sympy.core.rules import Transform\n+from sympy.functions.elementary.complexes import Abs\n from sympy.core.logic import fuzzy_and, fuzzy_or, _torf\n+\n+class sign(Function):\n+    def _eval_rewrite_as_Abs(self, arg):\n+        from sympy.core import nan\n+        if arg.is_zero:\n+            return nan\n+        return arg / Abs(arg)\n from sympy.logic.boolalg import And, Or\n \n def _minmax_as_Piecewise(op, *args):\n", "occurrence": 1, "normalized_patch": "--- a/sympy/functions/elementary/miscellaneous.py\n+++ b/sympy/functions/elementary/miscellaneous.py\n+from sympy.functions.elementary.complexes import Abs\n+class sign(Function):\n+    def _eval_rewrite_as_Abs(self, arg):\n+        from sympy.core import nan\n+        if arg.is_zero:\n+            return nan\n+        return arg / Abs(arg)", "normalized_occurrence": 1}
