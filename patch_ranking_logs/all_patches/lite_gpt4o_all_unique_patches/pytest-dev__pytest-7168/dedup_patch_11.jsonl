{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7168", "model_patch": "diff --git a/src/_pytest/_io/saferepr.py b/src/_pytest/_io/saferepr.py\nindex adc421d..94e8382 100644\n--- a/src/_pytest/_io/saferepr.py\n+++ b/src/_pytest/_io/saferepr.py\n@@ -48,7 +48,10 @@ class SafeRepr(reprlib.Repr):\n         except (KeyboardInterrupt, SystemExit):\n             raise\n         except BaseException as exc:\n-            s = _format_repr_exception(exc, x)\n+            try:\n+                s = _format_repr_exception(exc, x)\n+            except BaseException:\n+                s = '<error in __repr__>'\n         return _ellipsize(s, self.maxsize)\n \n     def repr_instance(self, x: Any, level: int) -> str:\n@@ -57,7 +60,10 @@ class SafeRepr(reprlib.Repr):\n         except (KeyboardInterrupt, SystemExit):\n             raise\n         except BaseException as exc:\n-            s = _format_repr_exception(exc, x)\n+            try:\n+                s = _format_repr_exception(exc, x)\n+            except BaseException:\n+                s = '<error in __repr__>'\n         return _ellipsize(s, self.maxsize)\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/_io/saferepr.py b/src/_pytest/_io/saferepr.py\nindex 789deb9..e114cf3 100644\n--- a/src/_pytest/_io/saferepr.py\n+++ b/src/_pytest/_io/saferepr.py\n@@ -33,7 +33,10 @@ class SafeRepr(reprlib.Repr):\n         except (KeyboardInterrupt, SystemExit):\n             raise\n         except BaseException as exc:\n-            s = _format_repr_exception(exc, x)\n+            try:\n+                s = _format_repr_exception(exc, x)\n+            except BaseException:\n+                s = '<error in __repr__>'\n         return _ellipsize(s, self.maxsize)\n     def repr_instance(self, x: Any, level: int) -> str:\n         try:\n@@ -41,7 +44,10 @@ class SafeRepr(reprlib.Repr):\n         except (KeyboardInterrupt, SystemExit):\n             raise\n         except BaseException as exc:\n-            s = _format_repr_exception(exc, x)\n+            try:\n+                s = _format_repr_exception(exc, x)\n+            except BaseException:\n+                s = '<error in __repr__>'\n         return _ellipsize(s, self.maxsize)\n def safeformat(obj: Any) -> str:\n     try:\n", "normalized_occurrence": 1}
