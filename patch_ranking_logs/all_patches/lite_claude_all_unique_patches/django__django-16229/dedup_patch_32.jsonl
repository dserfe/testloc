{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16229", "model_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 5264b71..d92d9f6 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -352,6 +352,13 @@ class BaseModelForm(BaseForm, AltersData):\n             # if we didn't get an instance, instantiate a new one\n             self.instance = opts.model()\n             object_data = {}\n+            # Include default values from model fields when no instance is provided\n+            for f in opts.model._meta.fields:\n+                if f.name not in object_data and f.has_default():\n+                    default = f.get_default()\n+                    if callable(default):\n+                        default = default()\n+                    object_data[f.name] = default\n         else:\n             self.instance = instance\n             object_data = model_to_dict(instance, opts.fields, opts.exclude)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex a9413ca..53984f6 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -145,6 +145,12 @@ class BaseModelForm(BaseForm, AltersData):\n         if instance is None:\n             self.instance = opts.model()\n             object_data = {}\n+            for f in opts.model._meta.fields:\n+                if f.name not in object_data and f.has_default():\n+                    default = f.get_default()\n+                    if callable(default):\n+                        default = default()\n+                    object_data[f.name] = default\n         else:\n             self.instance = instance\n             object_data = model_to_dict(instance, opts.fields, opts.exclude)\n", "normalized_occurrence": 1}
