{"model_name_or_path": "agentless", "instance_id": "django__django-12747", "model_patch": "diff --git a/django/db/models/deletion.py b/django/db/models/deletion.py\nindex 5788d19..2039af4 100644\n--- a/django/db/models/deletion.py\n+++ b/django/db/models/deletion.py\n@@ -388,6 +388,10 @@ class Collector:\n         # number of objects deleted for each model label\n         deleted_counter = Counter()\n \n+        # Initialize deleted_counter with all model labels to ensure consistency\n+        for model in self.data.keys():\n+            deleted_counter[model._meta.label] = 0\n+\n         # Optimize for the case with a single obj and no dependencies\n         if len(self.data) == 1 and len(instances) == 1:\n             instance = list(instances)[0]\n@@ -442,4 +446,4 @@ class Collector:\n         for model, instances in self.data.items():\n             for instance in instances:\n                 setattr(instance, model._meta.pk.attname, None)\n-        return sum(deleted_counter.values()), dict(deleted_counter)\n+        return sum(deleted_counter.values()), dict(deleted_counter)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/deletion.py b/django/db/models/deletion.py\nindex b347a60..0e0c5cc 100644\n--- a/django/db/models/deletion.py\n+++ b/django/db/models/deletion.py\n@@ -199,6 +199,8 @@ class Collector:\n             self.data[model] = sorted(instances, key=attrgetter('pk'))\n         self.sort()\n         deleted_counter = Counter()\n+        for model in self.data.keys():\n+            deleted_counter[model._meta.label] = 0\n         if len(self.data) == 1 and len(instances) == 1:\n             instance = list(instances)[0]\n             if self.can_fast_delete(instance):\n", "normalized_occurrence": 1}
