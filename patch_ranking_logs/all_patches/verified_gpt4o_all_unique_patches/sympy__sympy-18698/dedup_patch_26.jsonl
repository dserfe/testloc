{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-18698", "model_patch": "diff --git a/sympy/polys/sqfreetools.py b/sympy/polys/sqfreetools.py\nindex fbdbcb2..a623042 100644\n--- a/sympy/polys/sqfreetools.py\n+++ b/sympy/polys/sqfreetools.py\n@@ -329,6 +329,12 @@ def dup_sqf_list(f, K, all=False):\n \n         if all or dup_degree(g) > 0:\n             result.append((g, i))\n+        while dup_degree(p) > 0 and dup_degree(h) > 0:\n+            p = dup_quo(p, g, K)\n+            h = dup_diff(p, 1, K)\n+            g, p, q = dup_inner_gcd(p, h, K)\n+        if dup_degree(p) > 0:\n+            result.append((p, i))\n \n         i += 1\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/sqfreetools.py b/sympy/polys/sqfreetools.py\nindex 09fb2b6..8cb8e17 100644\n--- a/sympy/polys/sqfreetools.py\n+++ b/sympy/polys/sqfreetools.py\n@@ -116,6 +116,12 @@ def dup_sqf_list(f, K, all=False):\n         g, p, q = dup_inner_gcd(p, h, K)\n         if all or dup_degree(g) > 0:\n             result.append((g, i))\n+        while dup_degree(p) > 0 and dup_degree(h) > 0:\n+            p = dup_quo(p, g, K)\n+            h = dup_diff(p, 1, K)\n+            g, p, q = dup_inner_gcd(p, h, K)\n+        if dup_degree(p) > 0:\n+            result.append((p, i))\n         i += 1\n     return (coeff, result)\n def dup_sqf_list_include(f, K, all=False):\n", "normalized_occurrence": 1}
