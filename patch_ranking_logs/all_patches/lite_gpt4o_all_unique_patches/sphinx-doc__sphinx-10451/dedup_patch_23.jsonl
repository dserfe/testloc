{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-10451", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex c6bab1b..a1e9b30 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -111,6 +111,13 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str],\n         elif parts[0] == 'rtype':\n             arguments['return'] = {'type': True}\n \n+    # Remove duplicate *args and **kwargs if they are in annotations\n+    arg_names = list(arguments.keys())\n+    for arg in arg_names:\n+        if arg in ('*args', '**kwargs'):\n+            if 'param' in arguments[arg] and 'type' in arguments[arg]:\n+                del arguments[arg]\n+\n     for name, annotation in annotations.items():\n         if name == 'return':\n             continue\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 5da2ea8..67fb6f0 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -82,6 +82,11 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str], suppr\n             arg['type'] = True\n         elif parts[0] == 'rtype':\n             arguments['return'] = {'type': True}\n+    arg_names = list(arguments.keys())\n+    for arg in arg_names:\n+        if arg in ('*args', '**kwargs'):\n+            if 'param' in arguments[arg] and 'type' in arguments[arg]:\n+                del arguments[arg]\n     for name, annotation in annotations.items():\n         if name == 'return':\n             continue\n", "normalized_occurrence": 1}
