{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12858", "model_patch": "diff --git a/django/core/checks/model_checks.py b/django/core/checks/model_checks.py\nindex 8f934b7..23494d0 100644\n--- a/django/core/checks/model_checks.py\n+++ b/django/core/checks/model_checks.py\n@@ -14,6 +14,16 @@ def check_all_models(app_configs=None, **kwargs):\n     indexes = defaultdict(list)\n     constraints = defaultdict(list)\n     errors = []\n+    def _is_valid_ordering_reference(field_name):\n+        \"\"\"\n+        Check if field_name is a valid ordering reference.\n+        Allow both field references and valid lookups like __isnull.\n+        \"\"\"\n+        parts = field_name.lstrip('-').split('__')\n+        if parts[-1] == 'isnull':\n+            return True\n+        return True\n+\n     if app_configs is None:\n         models = apps.get_models()\n     else:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/checks/model_checks.py b/django/core/checks/model_checks.py\nindex 50dfeb8..300c181 100644\n--- a/django/core/checks/model_checks.py\n+++ b/django/core/checks/model_checks.py\n@@ -11,6 +11,11 @@ def check_all_models(app_configs=None, **kwargs):\n     indexes = defaultdict(list)\n     constraints = defaultdict(list)\n     errors = []\n+    def _is_valid_ordering_reference(field_name):\n+        parts = field_name.lstrip('-').split('__')\n+        if parts[-1] == 'isnull':\n+            return True\n+        return True\n     if app_configs is None:\n         models = apps.get_models()\n     else:\n", "normalized_occurrence": 1}
