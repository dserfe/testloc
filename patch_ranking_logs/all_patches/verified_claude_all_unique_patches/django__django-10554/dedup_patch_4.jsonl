{"model_name_or_path": "agentless_claude", "instance_id": "django__django-10554", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex ab425fb..0d0086e 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -460,6 +460,21 @@ class SQLCompiler:\n         params = []\n         for part in args_parts:\n             params.extend(part)\n+\n+        if self.query.order_by:\n+            ordering_sqls = []\n+            ordering_params = []\n+            for field in self.get_order_by():\n+                if hasattr(field, 'as_sql'):\n+                    sql, sql_params = self.compile(field)\n+                    ordering_sqls.append(sql)\n+                    ordering_params.extend(sql_params)\n+                else:\n+                    ordering_sqls.append(str(field))\n+            if ordering_sqls:\n+                result.append(' ORDER BY ' + ', '.join(ordering_sqls))\n+                params.extend(ordering_params)\n+\n         return result, params\n \n     def as_sql(self, with_limits=True, with_col_aliases=False):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 0a7444d..2b88b04 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -265,6 +265,19 @@ class SQLCompiler:\n         params = []\n         for part in args_parts:\n             params.extend(part)\n+        if self.query.order_by:\n+            ordering_sqls = []\n+            ordering_params = []\n+            for field in self.get_order_by():\n+                if hasattr(field, 'as_sql'):\n+                    sql, sql_params = self.compile(field)\n+                    ordering_sqls.append(sql)\n+                    ordering_params.extend(sql_params)\n+                else:\n+                    ordering_sqls.append(str(field))\n+            if ordering_sqls:\n+                result.append(' ORDER BY ' + ', '.join(ordering_sqls))\n+                params.extend(ordering_params)\n         return (result, params)\n     def as_sql(self, with_limits=True, with_col_aliases=False):\n         refcounts_before = self.query.alias_refcount.copy()\n", "normalized_occurrence": 1}
