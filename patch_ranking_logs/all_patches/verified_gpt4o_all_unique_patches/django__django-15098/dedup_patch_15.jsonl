{"model_name_or_path": "agentless", "instance_id": "django__django-15098", "model_patch": "diff --git a/django/utils/translation/trans_real.py b/django/utils/translation/trans_real.py\nindex 488a2d8..8c4e9bb 100644\n--- a/django/utils/translation/trans_real.py\n+++ b/django/utils/translation/trans_real.py\n@@ -484,7 +484,8 @@ def get_supported_language_variant(lang_code, strict=False):\n         i = None\n         while (i := lang_code.rfind('-', 0, i)) > -1:\n             possible_lang_codes.append(lang_code[:i])\n-        generic_lang_code = possible_lang_codes[-1]\n+        # Normalize the generic language code to lowercase for comparison\n+        generic_lang_code = possible_lang_codes[-1].lower()\n         supported_lang_codes = get_languages()\n \n         for code in possible_lang_codes:\n@@ -508,9 +509,10 @@ def get_language_from_path(path, strict=False):\n     regex_match = language_code_prefix_re.match(path)\n     if not regex_match:\n         return None\n-    lang_code = regex_match[1]\n+    # Normalize lang_code to lower case for comparison\n+    lang_code = regex_match[1].lower()\n     try:\n-        return get_supported_language_variant(lang_code, strict=strict)\n+        return get_supported_language_variant(lang_code.lower(), strict=strict)\n     except LookupError:\n         return None\n \n@@ -535,7 +537,7 @@ def get_language_from_request(request, check_path=False):\n         return lang_code\n \n     try:\n-        return get_supported_language_variant(lang_code)\n+        return get_supported_language_variant(lang_code.lower())\n     except LookupError:\n         pass\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/translation/trans_real.py b/django/utils/translation/trans_real.py\nindex 05d14a5..8baeffa 100644\n--- a/django/utils/translation/trans_real.py\n+++ b/django/utils/translation/trans_real.py\n@@ -257,7 +257,7 @@ def get_supported_language_variant(lang_code, strict=False):\n         i = None\n         while (i := lang_code.rfind('-', 0, i)) > -1:\n             possible_lang_codes.append(lang_code[:i])\n-        generic_lang_code = possible_lang_codes[-1]\n+        generic_lang_code = possible_lang_codes[-1].lower()\n         supported_lang_codes = get_languages()\n         for code in possible_lang_codes:\n             if code in supported_lang_codes and check_for_language(code):\n@@ -271,9 +271,9 @@ def get_language_from_path(path, strict=False):\n     regex_match = language_code_prefix_re.match(path)\n     if not regex_match:\n         return None\n-    lang_code = regex_match[1]\n+    lang_code = regex_match[1].lower()\n     try:\n-        return get_supported_language_variant(lang_code, strict=strict)\n+        return get_supported_language_variant(lang_code.lower(), strict=strict)\n     except LookupError:\n         return None\n def get_language_from_request(request, check_path=False):\n@@ -285,7 +285,7 @@ def get_language_from_request(request, check_path=False):\n     if lang_code is not None and lang_code in get_languages() and check_for_language(lang_code):\n         return lang_code\n     try:\n-        return get_supported_language_variant(lang_code)\n+        return get_supported_language_variant(lang_code.lower())\n     except LookupError:\n         pass\n     accept = request.META.get('HTTP_ACCEPT_LANGUAGE', '')\n", "normalized_occurrence": 1}
