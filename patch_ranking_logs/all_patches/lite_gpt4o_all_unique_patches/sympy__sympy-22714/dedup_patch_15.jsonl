{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-22714", "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex b7f7a47..58306aa 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -909,10 +909,10 @@ class Point2D(Point):\n \n     _ambient_dimension = 2\n \n-    def __new__(cls, *args, _nocheck=False, **kwargs):\n+    def __new__(cls, *args, _nocheck=False, evaluate=True, **kwargs):\n         if not _nocheck:\n             kwargs['dim'] = 2\n-            args = Point(*args, **kwargs)\n+            args = Point(*args, evaluate=evaluate, **kwargs)\n         return GeometryEntity.__new__(cls, *args)\n \n     def __contains__(self, item):\n", "occurrence": 3, "normalized_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex 4d7ea73..3c57fb5 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -243,10 +243,10 @@ class Point(GeometryEntity):\n         return self / abs(self)\n class Point2D(Point):\n     _ambient_dimension = 2\n-    def __new__(cls, *args, _nocheck=False, **kwargs):\n+    def __new__(cls, *args, _nocheck=False, evaluate=True, **kwargs):\n         if not _nocheck:\n             kwargs['dim'] = 2\n-            args = Point(*args, **kwargs)\n+            args = Point(*args, evaluate=evaluate, **kwargs)\n         return GeometryEntity.__new__(cls, *args)\n     def __contains__(self, item):\n         return item == self\n", "normalized_occurrence": 3}
