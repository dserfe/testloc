{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16229", "model_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 706b72f..f57e3c8 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -2275,7 +2275,17 @@ class ModelAdmin(BaseModelAdmin):\n                     if user_deleted_form(request, obj, formset, index, inline):\n                         continue\n                     form._errors = {}\n-                    form.cleaned_data = form.initial\n+                    # Use field defaults if initial is empty\n+                    cleaned_data = {}\n+                    for field_name, field in form.fields.items():\n+                        if field_name in form.initial:\n+                            cleaned_data[field_name] = form.initial[field_name]\n+                        elif hasattr(field, 'default'):\n+                            default = field.default\n+                            if callable(default):\n+                                default = default()\n+                            cleaned_data[field_name] = default\n+                    form.cleaned_data = cleaned_data\n             formsets.append(formset)\n             inline_instances.append(inline)\n         return formsets, inline_instances\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex b4f1803..e3f12ff 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -963,7 +963,16 @@ class ModelAdmin(BaseModelAdmin):\n                     if user_deleted_form(request, obj, formset, index, inline):\n                         continue\n                     form._errors = {}\n-                    form.cleaned_data = form.initial\n+                    cleaned_data = {}\n+                    for field_name, field in form.fields.items():\n+                        if field_name in form.initial:\n+                            cleaned_data[field_name] = form.initial[field_name]\n+                        elif hasattr(field, 'default'):\n+                            default = field.default\n+                            if callable(default):\n+                                default = default()\n+                            cleaned_data[field_name] = default\n+                    form.cleaned_data = cleaned_data\n             formsets.append(formset)\n             inline_instances.append(inline)\n         return (formsets, inline_instances)\n", "normalized_occurrence": 1}
