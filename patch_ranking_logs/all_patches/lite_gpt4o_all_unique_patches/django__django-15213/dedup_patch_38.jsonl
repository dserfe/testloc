{"model_name_or_path": "agentless", "instance_id": "django__django-15213", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex df68dea..4a263be 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1410,7 +1410,7 @@ class Query(BaseExpression):\n         connector = q_object.connector\n         current_negated = current_negated ^ q_object.negated\n         branch_negated = branch_negated or q_object.negated\n-        target_clause = WhereNode(connector=connector, negated=q_object.negated)\n+        target_clause = WhereNode(connector=connector, negated=current_negated)\n         joinpromoter = JoinPromoter(q_object.connector, len(q_object.children), current_negated)\n         for child in q_object.children:\n             child_clause, needed_inner = self.build_filter(\n@@ -1429,7 +1429,7 @@ class Query(BaseExpression):\n         connector = q_object.connector\n         current_negated ^= q_object.negated\n         branch_negated = branch_negated or q_object.negated\n-        target_clause = WhereNode(connector=connector, negated=q_object.negated)\n+        target_clause = WhereNode(connector=connector, negated=current_negated)\n         for child in q_object.children:\n             if isinstance(child, Node):\n                 child_clause = self.build_filtered_relation_q(\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 4fa7bef..ea403cb 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -754,7 +754,7 @@ class Query(BaseExpression):\n         connector = q_object.connector\n         current_negated = current_negated ^ q_object.negated\n         branch_negated = branch_negated or q_object.negated\n-        target_clause = WhereNode(connector=connector, negated=q_object.negated)\n+        target_clause = WhereNode(connector=connector, negated=current_negated)\n         joinpromoter = JoinPromoter(q_object.connector, len(q_object.children), current_negated)\n         for child in q_object.children:\n             child_clause, needed_inner = self.build_filter(child, can_reuse=used_aliases, branch_negated=branch_negated, current_negated=current_negated, allow_joins=allow_joins, split_subq=split_subq, check_filterable=check_filterable)\n@@ -767,7 +767,7 @@ class Query(BaseExpression):\n         connector = q_object.connector\n         current_negated ^= q_object.negated\n         branch_negated = branch_negated or q_object.negated\n-        target_clause = WhereNode(connector=connector, negated=q_object.negated)\n+        target_clause = WhereNode(connector=connector, negated=current_negated)\n         for child in q_object.children:\n             if isinstance(child, Node):\n                 child_clause = self.build_filtered_relation_q(child, reuse=reuse, branch_negated=branch_negated, current_negated=current_negated)\n", "normalized_occurrence": 1}
