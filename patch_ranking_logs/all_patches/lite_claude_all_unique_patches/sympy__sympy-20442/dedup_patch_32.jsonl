{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-20442", "model_patch": "diff --git a/sympy/physics/units/util.py b/sympy/physics/units/util.py\nindex f42b6a4..e5e318f 100644\n--- a/sympy/physics/units/util.py\n+++ b/sympy/physics/units/util.py\n@@ -30,8 +30,13 @@ def _get_conversion_matrix_for_expr(expr, target_units, unit_system):\n     camat = Matrix([[dimension_system.get_dimensional_dependencies(i, mark_dimensionless=True).get(j, 0) for i in target_dims] for j in canon_dim_units])\n     exprmat = Matrix([dim_dependencies.get(k, 0) for k in canon_dim_units])\n \n-    res_exponents = camat.solve_least_squares(exprmat, method=None)\n-    return res_exponents\n+    # Try to solve the system exactly first\n+    try:\n+        res_exponents = camat.solve(exprmat)\n+        return res_exponents\n+    except ValueError:\n+        # If exact solution is not possible, the conversion is invalid\n+        return None\n \n \n def convert_to(expr, target_units, unit_system=\"SI\"):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/physics/units/util.py b/sympy/physics/units/util.py\nindex 8deb785..a46d260 100644\n--- a/sympy/physics/units/util.py\n+++ b/sympy/physics/units/util.py\n@@ -18,8 +18,11 @@ def _get_conversion_matrix_for_expr(expr, target_units, unit_system):\n     canon_dim_units = [i for i in canon_dim_units if not (i in seen or seen.add(i))]\n     camat = Matrix([[dimension_system.get_dimensional_dependencies(i, mark_dimensionless=True).get(j, 0) for i in target_dims] for j in canon_dim_units])\n     exprmat = Matrix([dim_dependencies.get(k, 0) for k in canon_dim_units])\n-    res_exponents = camat.solve_least_squares(exprmat, method=None)\n-    return res_exponents\n+    try:\n+        res_exponents = camat.solve(exprmat)\n+        return res_exponents\n+    except ValueError:\n+        return None\n def convert_to(expr, target_units, unit_system='SI'):\n     from sympy.physics.units import UnitSystem\n     unit_system = UnitSystem.get_unit_system(unit_system)\n", "normalized_occurrence": 1}
