{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12663", "model_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex 141497c..fcb9713 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -802,7 +802,7 @@ class Field(RegisterLookupMixin):\n \n     def get_prep_value(self, value):\n         \"\"\"Perform preliminary non-db specific value checks and conversions.\"\"\"\n-        if isinstance(value, Promise):\n+        while isinstance(value, Promise):\n             value = value._proxy____cast()\n         return value\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex 0ec64fa..d42f1d2 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -361,7 +361,7 @@ class Field(RegisterLookupMixin):\n     def pre_save(self, model_instance, add):\n         return getattr(model_instance, self.attname)\n     def get_prep_value(self, value):\n-        if isinstance(value, Promise):\n+        while isinstance(value, Promise):\n             value = value._proxy____cast()\n         return value\n     def get_db_prep_value(self, value, connection, prepared=False):\n", "normalized_occurrence": 1}
