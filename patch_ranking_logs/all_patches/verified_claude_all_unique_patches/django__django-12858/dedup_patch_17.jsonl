{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12858", "model_patch": "diff --git a/django/core/checks/model_checks.py b/django/core/checks/model_checks.py\nindex 8f934b7..d8965bb 100644\n--- a/django/core/checks/model_checks.py\n+++ b/django/core/checks/model_checks.py\n@@ -9,6 +9,19 @@ from django.core.checks import Error, Tags, Warning, register\n \n \n @register(Tags.models)\n+def _is_valid_ordering_reference(field_name):\n+    \"\"\"\n+    Check if field name is a valid ordering reference including lookups.\n+    \"\"\"\n+    # Allow regular field names\n+    if not '__' in field_name:\n+        return True\n+    \n+    # Allow field lookups that end with valid transforms/lookups\n+    valid_endings = {'isnull', 'exact', 'gt', 'lt', 'gte', 'lte'}\n+    parts = field_name.split('__')\n+    return parts[-1] in valid_endings\n+\n def check_all_models(app_configs=None, **kwargs):\n     db_table_models = defaultdict(list)\n     indexes = defaultdict(list)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/checks/model_checks.py b/django/core/checks/model_checks.py\nindex 50dfeb8..9c65f05 100644\n--- a/django/core/checks/model_checks.py\n+++ b/django/core/checks/model_checks.py\n@@ -6,6 +6,12 @@ from django.apps import apps\n from django.conf import settings\n from django.core.checks import Error, Tags, Warning, register\n @register(Tags.models)\n+def _is_valid_ordering_reference(field_name):\n+    if not '__' in field_name:\n+        return True\n+    valid_endings = {'isnull', 'exact', 'gt', 'lt', 'gte', 'lte'}\n+    parts = field_name.split('__')\n+    return parts[-1] in valid_endings\n def check_all_models(app_configs=None, **kwargs):\n     db_table_models = defaultdict(list)\n     indexes = defaultdict(list)\n", "normalized_occurrence": 1}
