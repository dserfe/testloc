{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25332", "model_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 973eb1a..8491f39 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -3167,7 +3167,11 @@ None}, default: None\n         # discard any changes to the dpi due to pixel ratio changes\n         state[\"_dpi\"] = state.get('_original_dpi', state['_dpi'])\n \n-        # add version information to the state\n+        # Remove weak references to avoid pickling issues\n+        state = {k: v for k, v in state.items() \n+                 if not isinstance(v, weakref.ReferenceType)}\n+\n+        # Add version information to the state\n         state['__mpl_version__'] = mpl.__version__\n \n         # check whether the figure manager (if any) is registered with pyplot\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 7796fb8..1d695a9 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -947,6 +947,7 @@ class Figure(FigureBase):\n         state = super().__getstate__()\n         state.pop('canvas')\n         state['_dpi'] = state.get('_original_dpi', state['_dpi'])\n+        state = {k: v for k, v in state.items() if not isinstance(v, weakref.ReferenceType)}\n         state['__mpl_version__'] = mpl.__version__\n         from matplotlib import _pylab_helpers\n         if self.canvas.manager in _pylab_helpers.Gcf.figs.values():\n", "normalized_occurrence": 1}
