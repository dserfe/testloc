{"model_name_or_path": "agentless", "instance_id": "django__django-16032", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 250c6ee..059174b 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1173,7 +1173,12 @@ class Query(BaseExpression):\n             self.clear_ordering(force=False)\n             for query in self.combined_queries:\n                 query.clear_ordering(force=False)\n+        if self.subquery:\n+            self.set_annotation_mask(self.annotation_select_mask)\n         sql, params = self.get_compiler(connection=connection).as_sql()\n+        if self.subquery:\n+            # Ensure that only the expected columns are selected in subquery\n+            sql = \"(%s)\" % sql.split(' FROM ', 1)[0] + \" FROM \" + sql.split(' FROM ', 1)[1].split(')')[0] + ')'\n         if self.subquery:\n             sql = \"(%s)\" % sql\n         return sql, params\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 4a84de0..642215e 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -609,7 +609,11 @@ class Query(BaseExpression):\n             self.clear_ordering(force=False)\n             for query in self.combined_queries:\n                 query.clear_ordering(force=False)\n+        if self.subquery:\n+            self.set_annotation_mask(self.annotation_select_mask)\n         sql, params = self.get_compiler(connection=connection).as_sql()\n+        if self.subquery:\n+            sql = '(%s)' % sql.split(' FROM ', 1)[0] + ' FROM ' + sql.split(' FROM ', 1)[1].split(')')[0] + ')'\n         if self.subquery:\n             sql = '(%s)' % sql\n         return (sql, params)\n", "normalized_occurrence": 1}
