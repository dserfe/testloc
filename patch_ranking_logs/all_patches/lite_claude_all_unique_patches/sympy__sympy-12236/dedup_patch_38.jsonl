{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-12236", "model_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 03af2f5..f770377 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -125,9 +125,6 @@ def apart(f, x=None, full=False, **options):\n         raise NotImplementedError(\n             \"multivariate partial fraction decomposition\")\n \n-    common, P, Q = P.cancel(Q)\n-\n-    poly, P = P.div(Q, auto=True)\n     P, Q = P.rat_clear_denoms(Q)\n \n     if Q.degree() <= 1:\n@@ -137,6 +134,9 @@ def apart(f, x=None, full=False, **options):\n             partial = apart_undetermined_coeffs(P, Q)\n         else:\n             partial = apart_full_decomposition(P, Q)\n+            \n+    # Apply cancellation after decomposition to preserve symbolic coefficients\n+    partial = cancel(partial)\n \n     terms = S.Zero\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 21c4bd7..562388e 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -59,8 +59,6 @@ def apart(f, x=None, full=False, **options):\n         if fc != f:\n             return apart(fc, x=x, full=full, **_options)\n         raise NotImplementedError('multivariate partial fraction decomposition')\n-    common, P, Q = P.cancel(Q)\n-    poly, P = P.div(Q, auto=True)\n     P, Q = P.rat_clear_denoms(Q)\n     if Q.degree() <= 1:\n         partial = P / Q\n@@ -68,6 +66,7 @@ def apart(f, x=None, full=False, **options):\n         partial = apart_undetermined_coeffs(P, Q)\n     else:\n         partial = apart_full_decomposition(P, Q)\n+    partial = cancel(partial)\n     terms = S.Zero\n     for term in Add.make_args(partial):\n         if term.has(RootSum):\n", "normalized_occurrence": 1}
