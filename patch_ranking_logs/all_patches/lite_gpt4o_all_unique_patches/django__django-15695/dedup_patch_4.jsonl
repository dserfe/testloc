{"model_name_or_path": "agentless", "instance_id": "django__django-15695", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex b086232..2f14c99 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -966,7 +966,7 @@ class RenameIndex(IndexOperation):\n         schema_editor.rename_index(model, old_index, new_index)\n \n     def database_backwards(self, app_label, schema_editor, from_state, to_state):\n-        if self.old_fields:\n+        if self.old_fields or self.new_name is None:\n             # Backward operation with unnamed index is a no-op.\n             return\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 87ad28e..475f9af 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -435,7 +435,7 @@ class RenameIndex(IndexOperation):\n         new_index = to_model_state.get_index_by_name(self.new_name)\n         schema_editor.rename_index(model, old_index, new_index)\n     def database_backwards(self, app_label, schema_editor, from_state, to_state):\n-        if self.old_fields:\n+        if self.old_fields or self.new_name is None:\n             return\n         self.new_name_lower, self.old_name_lower = (self.old_name_lower, self.new_name_lower)\n         self.new_name, self.old_name = (self.old_name, self.new_name)\n", "normalized_occurrence": 1}
