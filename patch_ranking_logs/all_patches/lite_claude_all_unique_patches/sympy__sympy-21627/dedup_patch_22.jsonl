{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-21627", "model_patch": "diff --git a/sympy/functions/elementary/hyperbolic.py b/sympy/functions/elementary/hyperbolic.py\nindex db125b2..e06cdd7 100644\n--- a/sympy/functions/elementary/hyperbolic.py\n+++ b/sympy/functions/elementary/hyperbolic.py\n@@ -264,10 +264,24 @@ class sinh(HyperbolicFunction):\n         arg = self.args[0]\n         return arg.is_finite\n \n+    def _eval_is_zero(self):\n+        from sympy import pi, I\n+        arg = self.args[0]\n+        if arg.is_zero:\n+            return False  # cosh(0) = 1\n+        # Check if argument is of form (2n + 1)\u03c0i/2\n+        if arg.is_imaginary:\n+            i_coeff = (arg/I).simplify()\n+            half_pi = pi/2\n+            if (i_coeff/half_pi - 1).is_integer:\n+                return True\n+        return None\n+\n     def _eval_is_zero(self):\n         arg = self.args[0]\n         if arg.is_zero:\n             return True\n+        return None  # Let the class override for specific logic\n \n \n class cosh(HyperbolicFunction):\n@@ -499,6 +513,19 @@ class cosh(HyperbolicFunction):\n         arg = self.args[0]\n         return arg.is_finite\n \n+    def _eval_is_zero(self):\n+        from sympy import pi, I\n+        arg = self.args[0]\n+        if arg.is_zero:\n+            return False  # cosh(0) = 1\n+        # Check if argument is of form (2n + 1)\u03c0i/2\n+        if arg.is_imaginary:\n+            i_coeff = (arg/I).simplify()\n+            half_pi = pi/2\n+            if (i_coeff/half_pi - 1).is_integer:\n+                return True\n+        return None\n+\n \n class tanh(HyperbolicFunction):\n     r\"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/hyperbolic.py b/sympy/functions/elementary/hyperbolic.py\nindex f81ffb5..9fdd0c8 100644\n--- a/sympy/functions/elementary/hyperbolic.py\n+++ b/sympy/functions/elementary/hyperbolic.py\n@@ -157,10 +157,22 @@ class sinh(HyperbolicFunction):\n     def _eval_is_finite(self):\n         arg = self.args[0]\n         return arg.is_finite\n+    def _eval_is_zero(self):\n+        from sympy import pi, I\n+        arg = self.args[0]\n+        if arg.is_zero:\n+            return False\n+        if arg.is_imaginary:\n+            i_coeff = (arg / I).simplify()\n+            half_pi = pi / 2\n+            if (i_coeff / half_pi - 1).is_integer:\n+                return True\n+        return None\n     def _eval_is_zero(self):\n         arg = self.args[0]\n         if arg.is_zero:\n             return True\n+        return None\n class cosh(HyperbolicFunction):\n     def fdiff(self, argindex=1):\n         if argindex == 1:\n@@ -301,6 +313,17 @@ class cosh(HyperbolicFunction):\n     def _eval_is_finite(self):\n         arg = self.args[0]\n         return arg.is_finite\n+    def _eval_is_zero(self):\n+        from sympy import pi, I\n+        arg = self.args[0]\n+        if arg.is_zero:\n+            return False\n+        if arg.is_imaginary:\n+            i_coeff = (arg / I).simplify()\n+            half_pi = pi / 2\n+            if (i_coeff / half_pi - 1).is_integer:\n+                return True\n+        return None\n class tanh(HyperbolicFunction):\n     def fdiff(self, argindex=1):\n         if argindex == 1:\n", "normalized_occurrence": 1}
