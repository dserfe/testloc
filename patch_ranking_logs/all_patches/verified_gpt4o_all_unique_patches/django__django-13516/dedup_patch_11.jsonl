{"model_name_or_path": "agentless", "instance_id": "django__django-13516", "model_patch": "diff --git a/django/core/management/commands/migrate.py b/django/core/management/commands/migrate.py\nindex 7e14473..72f4f2b 100644\n--- a/django/core/management/commands/migrate.py\n+++ b/django/core/management/commands/migrate.py\n@@ -236,6 +236,7 @@ class Command(BaseCommand):\n                         \"migrations, and then re-run 'manage.py migrate' to \"\n                         \"apply them.\"\n                     ))\n+                    self.stdout.flush()\n             fake = False\n             fake_initial = False\n         else:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/management/commands/migrate.py b/django/core/management/commands/migrate.py\nindex 51822d0..65e372b 100644\n--- a/django/core/management/commands/migrate.py\n+++ b/django/core/management/commands/migrate.py\n@@ -124,6 +124,7 @@ class Command(BaseCommand):\n                 if changes:\n                     self.stdout.write(self.style.NOTICE(\"  Your models in app(s): %s have changes that are not yet reflected in a migration, and so won't be applied.\" % ', '.join((repr(app) for app in sorted(changes)))))\n                     self.stdout.write(self.style.NOTICE(\"  Run 'manage.py makemigrations' to make new migrations, and then re-run 'manage.py migrate' to apply them.\"))\n+                    self.stdout.flush()\n             fake = False\n             fake_initial = False\n         else:\n", "normalized_occurrence": 1}
