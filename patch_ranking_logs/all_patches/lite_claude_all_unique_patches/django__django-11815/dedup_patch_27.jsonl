{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11815", "model_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex 6957452..7c4672b 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -965,6 +965,8 @@ class BooleanField(Field):\n         return super().formfield(**{**defaults, **kwargs})\n \n \n+import enum\n+\n class CharField(Field):\n     description = _(\"String (up to %(max_length)s)\")\n \n@@ -1014,6 +1016,9 @@ class CharField(Field):\n \n     def get_prep_value(self, value):\n         value = super().get_prep_value(value)\n+        # Handle Enum values by using their name instead of value\n+        if value is not None and isinstance(value, enum.Enum):\n+            return value.name\n         return self.to_python(value)\n \n     def formfield(self, **kwargs):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex e3867cb..3e7c238 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -464,6 +464,7 @@ class BooleanField(Field):\n             form_class = forms.NullBooleanField if self.null else forms.BooleanField\n             defaults = {'form_class': form_class, 'required': False}\n         return super().formfield(**{**defaults, **kwargs})\n+import enum\n class CharField(Field):\n     description = _('String (up to %(max_length)s)')\n     def __init__(self, *args, **kwargs):\n@@ -490,6 +491,8 @@ class CharField(Field):\n         return str(value)\n     def get_prep_value(self, value):\n         value = super().get_prep_value(value)\n+        if value is not None and isinstance(value, enum.Enum):\n+            return value.name\n         return self.to_python(value)\n     def formfield(self, **kwargs):\n         defaults = {'max_length': self.max_length}\n", "normalized_occurrence": 1}
