{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13033", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex f5fd96c..d374905 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1928,9 +1928,12 @@ class Query(BaseExpression):\n         if errors:\n             raise FieldError('Invalid order_by arguments: %s' % errors)\n         if ordering:\n-            self.order_by += ordering\n-        else:\n+            # Clear any existing ordering before adding new ones\n+            self.order_by = ordering\n+            # Disable default ordering when explicit ordering is provided\n             self.default_ordering = False\n+        else:\n+            self.default_ordering = True\n \n     def clear_ordering(self, force_empty):\n         \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 5d74201..7772371 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1029,9 +1029,10 @@ class Query(BaseExpression):\n         if errors:\n             raise FieldError('Invalid order_by arguments: %s' % errors)\n         if ordering:\n-            self.order_by += ordering\n-        else:\n+            self.order_by = ordering\n             self.default_ordering = False\n+        else:\n+            self.default_ordering = True\n     def clear_ordering(self, force_empty):\n         self.order_by = ()\n         self.extra_order_by = ()\n", "normalized_occurrence": 1}
