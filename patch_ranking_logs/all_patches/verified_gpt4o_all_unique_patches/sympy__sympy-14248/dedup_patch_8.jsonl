{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-14248", "model_patch": "diff --git a/sympy/printing/str.py b/sympy/printing/str.py\nindex 29d16bd..449cfa4 100644\n--- a/sympy/printing/str.py\n+++ b/sympy/printing/str.py\n@@ -312,8 +312,13 @@ class StrPrinter(Printer):\n             for arg in expr.args])\n \n     def _print_MatAdd(self, expr):\n-        return ' + '.join([self.parenthesize(arg, precedence(expr))\n-            for arg in expr.args])\n+        terms = []\n+        for term in expr.args:\n+            if term.is_Mul and term.args[0] == -1:\n+                terms.append(f'-{self.parenthesize(-term, precedence(expr))}')\n+            else:\n+                terms.append(self.parenthesize(term, precedence(expr)))\n+        return ' + '.join(terms).replace('+-', '- ')\n \n     def _print_NaN(self, expr):\n         return 'nan'\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/str.py b/sympy/printing/str.py\nindex a98e2a9..d2485cd 100644\n--- a/sympy/printing/str.py\n+++ b/sympy/printing/str.py\n@@ -224,7 +224,13 @@ class StrPrinter(Printer):\n     def _print_HadamardProduct(self, expr):\n         return '.*'.join([self.parenthesize(arg, precedence(expr)) for arg in expr.args])\n     def _print_MatAdd(self, expr):\n-        return ' + '.join([self.parenthesize(arg, precedence(expr)) for arg in expr.args])\n+        terms = []\n+        for term in expr.args:\n+            if term.is_Mul and term.args[0] == -1:\n+                terms.append(f'-{self.parenthesize(-term, precedence(expr))}')\n+            else:\n+                terms.append(self.parenthesize(term, precedence(expr)))\n+        return ' + '.join(terms).replace('+-', '- ')\n     def _print_NaN(self, expr):\n         return 'nan'\n     def _print_NegativeInfinity(self, expr):\n", "normalized_occurrence": 1}
