{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-10908", "model_patch": "diff --git a/sklearn/feature_extraction/text.py b/sklearn/feature_extraction/text.py\nindex 7e240fc..2876623 100644\n--- a/sklearn/feature_extraction/text.py\n+++ b/sklearn/feature_extraction/text.py\n@@ -736,6 +736,9 @@ class CountVectorizer(BaseEstimator, VectorizerMixin):\n                     % max_features)\n         self.ngram_range = ngram_range\n         self.vocabulary = vocabulary\n+        if self.vocabulary is not None:\n+            self.fixed_vocabulary_ = True\n+            self.vocabulary_ = self._validate_vocabulary()\n         self.binary = binary\n         self.dtype = dtype\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/feature_extraction/text.py b/sklearn/feature_extraction/text.py\nindex 583049b..ccc49b6 100644\n--- a/sklearn/feature_extraction/text.py\n+++ b/sklearn/feature_extraction/text.py\n@@ -239,6 +239,9 @@ class CountVectorizer(BaseEstimator, VectorizerMixin):\n                 raise ValueError('max_features=%r, neither a positive integer nor None' % max_features)\n         self.ngram_range = ngram_range\n         self.vocabulary = vocabulary\n+        if self.vocabulary is not None:\n+            self.fixed_vocabulary_ = True\n+            self.vocabulary_ = self._validate_vocabulary()\n         self.binary = binary\n         self.dtype = dtype\n     def _sort_features(self, X, vocabulary):\n", "normalized_occurrence": 1}
