{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-25442", "model_patch": "diff --git a/lib/matplotlib/offsetbox.py b/lib/matplotlib/offsetbox.py\nindex db0cc2e..1822c0d 100644\n--- a/lib/matplotlib/offsetbox.py\n+++ b/lib/matplotlib/offsetbox.py\n@@ -1550,22 +1550,26 @@ class DraggableBase:\n                 self.ref_artist.set_animated(False)\n \n     def _check_still_parented(self):\n-        if self.ref_artist.figure is None:\n+        # First check if we still have a valid ref_artist\n+        if getattr(self.ref_artist, 'figure', None) is None:\n             self.disconnect()\n             return False\n-        else:\n-            return True\n+        return True\n \n     def disconnect(self):\n         \"\"\"Disconnect the callbacks.\"\"\"\n-        for cid in self.cids:\n-            self.canvas.mpl_disconnect(cid)\n-        try:\n-            c1 = self._c1\n-        except AttributeError:\n-            pass\n-        else:\n-            self.canvas.mpl_disconnect(c1)\n+        # Only try to disconnect if we still have a valid canvas reference\n+        canvas = getattr(self.ref_artist, 'figure', None)\n+        if canvas is not None:\n+            canvas = canvas.canvas\n+            for cid in self.cids:\n+                canvas.mpl_disconnect(cid)\n+            try:\n+                c1 = self._c1\n+            except AttributeError:\n+                pass\n+            else:\n+                canvas.mpl_disconnect(c1)\n \n     def save_offset(self):\n         pass\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/offsetbox.py b/lib/matplotlib/offsetbox.py\nindex f94319f..c5a8587 100644\n--- a/lib/matplotlib/offsetbox.py\n+++ b/lib/matplotlib/offsetbox.py\n@@ -1301,22 +1301,24 @@ class DraggableBase:\n                 self.ref_artist.set_animated(False)\n \n     def _check_still_parented(self):\n-        if self.ref_artist.figure is None:\n+        if getattr(self.ref_artist, 'figure', None) is None:\n             self.disconnect()\n             return False\n-        else:\n-            return True\n+        return True\n \n     def disconnect(self):\n         \"\"\"Disconnect the callbacks.\"\"\"\n-        for cid in self.cids:\n-            self.canvas.mpl_disconnect(cid)\n-        try:\n-            c1 = self._c1\n-        except AttributeError:\n-            pass\n-        else:\n-            self.canvas.mpl_disconnect(c1)\n+        canvas = getattr(self.ref_artist, 'figure', None)\n+        if canvas is not None:\n+            canvas = canvas.canvas\n+            for cid in self.cids:\n+                canvas.mpl_disconnect(cid)\n+            try:\n+                c1 = self._c1\n+            except AttributeError:\n+                pass\n+            else:\n+                canvas.mpl_disconnect(c1)\n \n     def save_offset(self):\n         pass\n", "normalized_occurrence": 1}
