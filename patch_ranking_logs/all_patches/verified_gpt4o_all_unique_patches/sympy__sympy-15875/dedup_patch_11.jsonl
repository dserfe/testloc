{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-15875", "model_patch": "diff --git a/sympy/core/add.py b/sympy/core/add.py\nindex 1046af8..57f1458 100644\n--- a/sympy/core/add.py\n+++ b/sympy/core/add.py\n@@ -516,7 +516,7 @@ class Add(Expr, AssocOp):\n                 elif a.is_zero is False:\n                     nz.append(a)\n                 else:\n-                    return\n+                    continue\n             elif a.is_imaginary:\n                 im_I.append(a*S.ImaginaryUnit)\n             elif (S.ImaginaryUnit*a).is_real:\n@@ -545,7 +545,7 @@ class Add(Expr, AssocOp):\n                 elif a.is_zero is False:\n                     nz.append(a)\n                 else:\n-                    return\n+                    continue\n             elif a.is_imaginary:\n                 im = True\n             elif (S.ImaginaryUnit*a).is_real:\n@@ -557,11 +557,8 @@ class Add(Expr, AssocOp):\n         if len(nz) == len(self.args):\n             return None\n         b = self.func(*nz)\n-        if b.is_zero:\n-            if not im_or_z and not im:\n-                return True\n-            if im and not im_or_z:\n-                return False\n+        if b.is_zero and not im_or_z:\n+            return True\n         if b.is_zero is False:\n             return False\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/add.py b/sympy/core/add.py\nindex 63cb816..441a7ef 100644\n--- a/sympy/core/add.py\n+++ b/sympy/core/add.py\n@@ -273,7 +273,7 @@ class Add(Expr, AssocOp):\n                 elif a.is_zero is False:\n                     nz.append(a)\n                 else:\n-                    return\n+                    continue\n             elif a.is_imaginary:\n                 im_I.append(a * S.ImaginaryUnit)\n             elif (S.ImaginaryUnit * a).is_real:\n@@ -299,7 +299,7 @@ class Add(Expr, AssocOp):\n                 elif a.is_zero is False:\n                     nz.append(a)\n                 else:\n-                    return\n+                    continue\n             elif a.is_imaginary:\n                 im = True\n             elif (S.ImaginaryUnit * a).is_real:\n@@ -311,11 +311,8 @@ class Add(Expr, AssocOp):\n         if len(nz) == len(self.args):\n             return None\n         b = self.func(*nz)\n-        if b.is_zero:\n-            if not im_or_z and (not im):\n-                return True\n-            if im and (not im_or_z):\n-                return False\n+        if b.is_zero and (not im_or_z):\n+            return True\n         if b.is_zero is False:\n             return False\n     def _eval_is_odd(self):\n", "normalized_occurrence": 1}
