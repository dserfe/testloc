{"model_name_or_path": "agentless", "instance_id": "django__django-15382", "model_patch": "diff --git a/django/db/models/sql/where.py b/django/db/models/sql/where.py\nindex 7a540c9..66545be 100644\n--- a/django/db/models/sql/where.py\n+++ b/django/db/models/sql/where.py\n@@ -81,11 +81,9 @@ class WhereNode(tree.Node):\n                 sql, params = compiler.compile(child)\n             except EmptyResultSet:\n                 empty_needed -= 1\n-            else:\n-                if sql:\n-                    result.append(sql)\n-                    result_params.extend(params)\n-                else:\n+            except EmptyResultSet:\n+                empty_needed -= 1\n+                if self.negated:\n                     full_needed -= 1\n             # Check if this node matches nothing or everything.\n             # First check the amount of full nodes and empty nodes\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/where.py b/django/db/models/sql/where.py\nindex 7f5e30d..298b67e 100644\n--- a/django/db/models/sql/where.py\n+++ b/django/db/models/sql/where.py\n@@ -42,11 +42,9 @@ class WhereNode(tree.Node):\n                 sql, params = compiler.compile(child)\n             except EmptyResultSet:\n                 empty_needed -= 1\n-            else:\n-                if sql:\n-                    result.append(sql)\n-                    result_params.extend(params)\n-                else:\n+            except EmptyResultSet:\n+                empty_needed -= 1\n+                if self.negated:\n                     full_needed -= 1\n             if empty_needed == 0:\n                 if self.negated:\n", "normalized_occurrence": 1}
