{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-7114", "model_patch": "diff --git a/pylint/lint/expand_modules.py b/pylint/lint/expand_modules.py\nindex a7d6e52..3684d4c 100644\n--- a/pylint/lint/expand_modules.py\n+++ b/pylint/lint/expand_modules.py\n@@ -127,6 +127,7 @@ def expand_modules(\n                     \"path\": filepath,\n                     \"name\": modname,\n                     \"isarg\": True,\n+                    \"ispkg\": os.path.isdir(filepath) or filepath.endswith(\"__init__.py\"),\n                     \"basepath\": filepath,\n                     \"basename\": modname,\n                 }\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/lint/expand_modules.py b/pylint/lint/expand_modules.py\nindex a1d3fbd..7fbff24 100644\n--- a/pylint/lint/expand_modules.py\n+++ b/pylint/lint/expand_modules.py\n@@ -65,7 +65,7 @@ def expand_modules(files_or_modules: Sequence[str], ignore_list: list[str], igno\n             is_namespace = modutils.is_namespace(spec)\n             is_directory = modutils.is_directory(spec)\n         if not is_namespace:\n-            result.append({'path': filepath, 'name': modname, 'isarg': True, 'basepath': filepath, 'basename': modname})\n+            result.append({'path': filepath, 'name': modname, 'isarg': True, 'ispkg': os.path.isdir(filepath) or filepath.endswith('__init__.py'), 'basepath': filepath, 'basename': modname})\n         has_init = not (modname.endswith('.__init__') or modname == '__init__') and os.path.basename(filepath) == '__init__.py'\n         if has_init or is_namespace or is_directory:\n             for subfilepath in modutils.get_module_files(os.path.dirname(filepath), ignore_list, list_all=is_namespace):\n", "normalized_occurrence": 1}
