{"model_name_or_path": "agentless_claude", "instance_id": "pydata__xarray-6938", "model_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex 8aa32fc..8e9e07e 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -3773,19 +3773,21 @@ class Dataset(\n             dims = tuple(dims_dict.get(dim, dim) for dim in v.dims)\n             if k in result_dims:\n                 var = v.to_index_variable()\n-                var.dims = dims\n+                new_var = var.copy(deep=True)\n+                new_var.dims = dims\n                 if k in self._indexes:\n                     indexes[k] = self._indexes[k]\n-                    variables[k] = var\n+                    variables[k] = new_var\n                 else:\n-                    index, index_vars = create_default_index_implicit(var)\n+                    index, index_vars = create_default_index_implicit(new_var)\n                     indexes.update({name: index for name in index_vars})\n                     variables.update(index_vars)\n                     coord_names.update(index_vars)\n             else:\n                 var = v.to_base_variable()\n-                var.dims = dims\n-                variables[k] = var\n+                new_var = var.copy(deep=True)\n+                new_var.dims = dims\n+                variables[k] = new_var\n \n         return self._replace_with_new_dims(variables, coord_names, indexes=indexes)\n \n", "occurrence": 3, "normalized_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex 22ea01b..c2e6a4e 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -1127,19 +1127,21 @@ class Dataset(DataWithCoords, DatasetReductions, DatasetArithmetic, Mapping[Hash\n             dims = tuple((dims_dict.get(dim, dim) for dim in v.dims))\n             if k in result_dims:\n                 var = v.to_index_variable()\n-                var.dims = dims\n+                new_var = var.copy(deep=True)\n+                new_var.dims = dims\n                 if k in self._indexes:\n                     indexes[k] = self._indexes[k]\n-                    variables[k] = var\n+                    variables[k] = new_var\n                 else:\n-                    index, index_vars = create_default_index_implicit(var)\n+                    index, index_vars = create_default_index_implicit(new_var)\n                     indexes.update({name: index for name in index_vars})\n                     variables.update(index_vars)\n                     coord_names.update(index_vars)\n             else:\n                 var = v.to_base_variable()\n-                var.dims = dims\n-                variables[k] = var\n+                new_var = var.copy(deep=True)\n+                new_var.dims = dims\n+                variables[k] = new_var\n         return self._replace_with_new_dims(variables, coord_names, indexes=indexes)\n     def expand_dims(self, dim: None | Hashable | Sequence[Hashable] | Mapping[Any, Any]=None, axis: None | int | Sequence[int]=None, **dim_kwargs: Any) -> Dataset:\n         if dim is None:\n", "normalized_occurrence": 3}
