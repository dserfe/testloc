{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-17655", "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex a708f18..75926cc 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -278,6 +278,37 @@ class Point(GeometryEntity):\n         coords = [simplify(x*factor) for x in self.args]\n         return Point(coords, evaluate=False)\n \n+    def __rmul__(self, factor):\n+        \"\"\"Right-multiply point's coordinates by a factor.\n+\n+        This allows expressions like sympy.sympify(2.0) * Point(1, 1).\n+\n+        Notes\n+        =====\n+\n+        >>> from sympy.geometry.point import Point\n+\n+        When multiplying a Point by a floating point number,\n+        the coordinates of the Point will be changed to Floats:\n+\n+        >>> sympy.sympify(2.0) * Point(1, 2)\n+        Point2D(2, 4)\n+\n+        If this is not desired, the `scale` method can be used or\n+        else only multiply or divide by integers:\n+\n+        >>> Point(1, 2).scale(1.1, 1.1)\n+        Point2D(11/10, 11/5)\n+        >>> sympy.sympify(2.0) * Point(1, 2)\n+        Point2D(2, 4)\n+\n+        See Also\n+        ========\n+\n+        sympy.geometry.point.Point.scale\n+        \"\"\"\n+        return self.__mul__(factor)\n+\n     def __neg__(self):\n         \"\"\"Negate the point.\"\"\"\n         coords = [-x for x in self.args]\n", "occurrence": 1, "normalized_patch": "--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n+    def __rmul__(self, factor):\n+        return self.__mul__(factor)", "normalized_occurrence": 5}
