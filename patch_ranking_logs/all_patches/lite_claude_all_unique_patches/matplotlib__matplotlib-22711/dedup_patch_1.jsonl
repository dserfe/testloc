{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-22711", "model_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex 6b32b96..32c913d 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -709,7 +709,14 @@ class RangeSlider(SliderBase):\n                 facecolor=track_color\n             )\n             ax.add_patch(self.track)\n-            self.poly = ax.axhspan(valinit[0], valinit[1], 0, 1, **kwargs)\n+            # Initialize polygon with 5 vertices to ensure proper closure\n+            verts = np.array([[.25, valinit[0]],\n+                            [.25, valinit[1]],\n+                            [.75, valinit[1]],\n+                            [.75, valinit[0]],\n+                            [.25, valinit[0]]])  # Repeat first vertex to close\n+            self.poly = Polygon(verts, **kwargs)\n+            ax.add_patch(self.poly)\n             handleXY_1 = [.5, valinit[0]]\n             handleXY_2 = [.5, valinit[1]]\n         else:\n@@ -719,7 +726,14 @@ class RangeSlider(SliderBase):\n                 facecolor=track_color\n             )\n             ax.add_patch(self.track)\n-            self.poly = ax.axvspan(valinit[0], valinit[1], 0, 1, **kwargs)\n+            # Initialize polygon with 5 vertices to ensure proper closure\n+            verts = np.array([[valinit[0], .25],\n+                            [valinit[0], .75],\n+                            [valinit[1], .75],\n+                            [valinit[1], .25],\n+                            [valinit[0], .25]])  # Repeat first vertex to close\n+            self.poly = Polygon(verts, **kwargs)\n+            ax.add_patch(self.poly)\n             handleXY_1 = [valinit[0], .5]\n             handleXY_2 = [valinit[1], .5]\n         self._handles = [\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex 02314ac..5936210 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -592,13 +592,17 @@ class RangeSlider(SliderBase):\n         if orientation == 'vertical':\n             self.track = Rectangle((0.25, 0), 0.5, 2, transform=ax.transAxes, facecolor=track_color)\n             ax.add_patch(self.track)\n-            self.poly = ax.axhspan(valinit[0], valinit[1], 0, 1, **kwargs)\n+            verts = np.array([[0.25, valinit[0]], [0.25, valinit[1]], [0.75, valinit[1]], [0.75, valinit[0]], [0.25, valinit[0]]])\n+            self.poly = Polygon(verts, **kwargs)\n+            ax.add_patch(self.poly)\n             handleXY_1 = [0.5, valinit[0]]\n             handleXY_2 = [0.5, valinit[1]]\n         else:\n             self.track = Rectangle((0, 0.25), 1, 0.5, transform=ax.transAxes, facecolor=track_color)\n             ax.add_patch(self.track)\n-            self.poly = ax.axvspan(valinit[0], valinit[1], 0, 1, **kwargs)\n+            verts = np.array([[valinit[0], 0.25], [valinit[0], 0.75], [valinit[1], 0.75], [valinit[1], 0.25], [valinit[0], 0.25]])\n+            self.poly = Polygon(verts, **kwargs)\n+            ax.add_patch(self.poly)\n             handleXY_1 = [valinit[0], 0.5]\n             handleXY_2 = [valinit[1], 0.5]\n         self._handles = [ax.plot(*handleXY_1, 'o', **marker_props, clip_on=False)[0], ax.plot(*handleXY_2, 'o', **marker_props, clip_on=False)[0]]\n", "normalized_occurrence": 1}
