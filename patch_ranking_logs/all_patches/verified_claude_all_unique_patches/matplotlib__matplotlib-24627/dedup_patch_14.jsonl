{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-24627", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex eec4e31..60b86a4 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1396,19 +1396,33 @@ class _AxesBase(martist.Artist):\n         \"\"\"Clear the Axes.\"\"\"\n         # Act as an alias, or as the superclass implementation depending on the\n         # subclass implementation.\n+        # Get list of current children before clearing\n+        children = self._get_children()\n         if self._subclass_uses_cla:\n             self.cla()\n         else:\n             self.__clear()\n+        # Unset axes and figure references for all deparented artists\n+        for artist in children:\n+            artist.axes = None\n+            if hasattr(artist, 'figure'):\n+                artist.figure = None\n \n     def cla(self):\n         \"\"\"Clear the Axes.\"\"\"\n         # Act as an alias, or as the superclass implementation depending on the\n         # subclass implementation.\n+        # Get list of current children before clearing\n+        children = self._get_children()\n         if self._subclass_uses_cla:\n             self.__clear()\n         else:\n             self.clear()\n+        # Unset axes and figure references for all deparented artists\n+        for artist in children:\n+            artist.axes = None\n+            if hasattr(artist, 'figure'):\n+                artist.figure = None\n \n     class ArtistList(MutableSequence):\n         \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex ec4e745..66f8b83 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -596,15 +596,25 @@ class _AxesBase(martist.Artist):\n         self._update_transScale()\n         self.stale = True\n     def clear(self):\n+        children = self._get_children()\n         if self._subclass_uses_cla:\n             self.cla()\n         else:\n             self.__clear()\n+        for artist in children:\n+            artist.axes = None\n+            if hasattr(artist, 'figure'):\n+                artist.figure = None\n     def cla(self):\n+        children = self._get_children()\n         if self._subclass_uses_cla:\n             self.__clear()\n         else:\n             self.clear()\n+        for artist in children:\n+            artist.axes = None\n+            if hasattr(artist, 'figure'):\n+                artist.figure = None\n     class ArtistList(MutableSequence):\n         def __init__(self, axes, prop_name, add_name, valid_types=None, invalid_types=None):\n             self._axes = axes\n", "normalized_occurrence": 1}
