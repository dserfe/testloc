{"model_name_or_path": "agentless", "instance_id": "django__django-13810", "model_patch": "diff --git a/django/core/handlers/base.py b/django/core/handlers/base.py\nindex 2cbbab1..303dcd3 100644\n--- a/django/core/handlers/base.py\n+++ b/django/core/handlers/base.py\n@@ -49,6 +49,7 @@ class BaseHandler:\n                 middleware_is_async = False\n             else:\n                 middleware_is_async = middleware_can_async\n+            original_handler = handler\n             try:\n                 # Adapt handler, if needed.\n                 handler = self.adapt_method_mode(\n@@ -57,6 +58,7 @@ class BaseHandler:\n                 )\n                 mw_instance = middleware(handler)\n             except MiddlewareNotUsed as exc:\n+                handler = original_handler\n                 if settings.DEBUG:\n                     if str(exc):\n                         logger.debug('MiddlewareNotUsed(%r): %s', middleware_path, exc)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/handlers/base.py b/django/core/handlers/base.py\nindex db9e015..445467b 100644\n--- a/django/core/handlers/base.py\n+++ b/django/core/handlers/base.py\n@@ -33,10 +33,12 @@ class BaseHandler:\n                 middleware_is_async = False\n             else:\n                 middleware_is_async = middleware_can_async\n+            original_handler = handler\n             try:\n                 handler = self.adapt_method_mode(middleware_is_async, handler, handler_is_async, debug=settings.DEBUG, name='middleware %s' % middleware_path)\n                 mw_instance = middleware(handler)\n             except MiddlewareNotUsed as exc:\n+                handler = original_handler\n                 if settings.DEBUG:\n                     if str(exc):\n                         logger.debug('MiddlewareNotUsed(%r): %s', middleware_path, exc)\n", "normalized_occurrence": 1}
