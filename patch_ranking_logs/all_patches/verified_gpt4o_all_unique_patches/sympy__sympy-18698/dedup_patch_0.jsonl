{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-18698", "model_patch": "diff --git a/sympy/polys/sqfreetools.py b/sympy/polys/sqfreetools.py\nindex fbdbcb2..02ec64c 100644\n--- a/sympy/polys/sqfreetools.py\n+++ b/sympy/polys/sqfreetools.py\n@@ -332,7 +332,14 @@ def dup_sqf_list(f, K, all=False):\n \n         i += 1\n \n-    return coeff, result\n+    consolidated_result = []\n+    for factor, multiplicity in result:\n+        if consolidated_result and consolidated_result[-1][1] == multiplicity:\n+            consolidated_result[-1] = (consolidated_result[-1][0] * factor, multiplicity)\n+        else:\n+            consolidated_result.append((factor, multiplicity))\n+\n+    return coeff, consolidated_result\n \n \n def dup_sqf_list_include(f, K, all=False):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/sqfreetools.py b/sympy/polys/sqfreetools.py\nindex 09fb2b6..a04604c 100644\n--- a/sympy/polys/sqfreetools.py\n+++ b/sympy/polys/sqfreetools.py\n@@ -117,7 +117,13 @@ def dup_sqf_list(f, K, all=False):\n         if all or dup_degree(g) > 0:\n             result.append((g, i))\n         i += 1\n-    return (coeff, result)\n+    consolidated_result = []\n+    for factor, multiplicity in result:\n+        if consolidated_result and consolidated_result[-1][1] == multiplicity:\n+            consolidated_result[-1] = (consolidated_result[-1][0] * factor, multiplicity)\n+        else:\n+            consolidated_result.append((factor, multiplicity))\n+    return (coeff, consolidated_result)\n def dup_sqf_list_include(f, K, all=False):\n     coeff, factors = dup_sqf_list(f, K, all=all)\n     if factors and factors[0][1] == 1:\n", "normalized_occurrence": 1}
