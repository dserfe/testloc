{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-26323", "model_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex eec24f1..b98fd43 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -293,6 +293,7 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n             Estimator instance.\n         \"\"\"\n         super().set_output(transform=transform)\n+        remainder = getattr(self, \"remainder\", \"drop\")\n         transformers = (\n             trans\n             for _, trans, _ in chain(\n@@ -300,6 +301,8 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n             )\n             if trans not in {\"passthrough\", \"drop\"}\n         )\n+        if remainder not in {\"passthrough\", \"drop\"}:\n+            transformers = chain(transformers, [remainder])\n         for trans in transformers:\n             _safe_set_output(trans, transform=transform)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex 7a9d391..c30ec47 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -44,7 +44,10 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n             self.transformers = value\n     def set_output(self, *, transform=None):\n         super().set_output(transform=transform)\n+        remainder = getattr(self, 'remainder', 'drop')\n         transformers = (trans for _, trans, _ in chain(self.transformers, getattr(self, 'transformers_', [])) if trans not in {'passthrough', 'drop'})\n+        if remainder not in {'passthrough', 'drop'}:\n+            transformers = chain(transformers, [remainder])\n         for trans in transformers:\n             _safe_set_output(trans, transform=transform)\n         return self\n", "normalized_occurrence": 1}
