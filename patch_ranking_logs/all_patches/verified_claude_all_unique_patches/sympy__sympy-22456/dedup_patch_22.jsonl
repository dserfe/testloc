{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-22456", "model_patch": "diff --git a/sympy/codegen/ast.py b/sympy/codegen/ast.py\nindex 7a7d795..e4e3f37 100644\n--- a/sympy/codegen/ast.py\n+++ b/sympy/codegen/ast.py\n@@ -892,21 +892,27 @@ class String(Token):\n     'foo'\n     >>> print(repr(f))\n     String('foo')\n+    >>> f.func(*f.args) == f\n+    True\n \n     \"\"\"\n     __slots__ = ('text',)\n-    not_in_args = ['text']\n     is_Atom = True\n \n-    @classmethod\n-    def _construct_text(cls, text):\n+    def __new__(cls, text):\n+        obj = Token.__new__(cls)\n         if not isinstance(text, str):\n             raise TypeError(\"Argument text is not a string type.\")\n-        return text\n+        obj.text = text\n+        return obj\n \n     def _sympystr(self, printer, *args, **kwargs):\n         return self.text\n \n+    @property\n+    def args(self):\n+        return (self.text,)\n+\n \n class QuotedString(String):\n     \"\"\" Represents a string which should be printed with quotes. \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/codegen/ast.py b/sympy/codegen/ast.py\nindex 41490eb..3ade537 100644\n--- a/sympy/codegen/ast.py\n+++ b/sympy/codegen/ast.py\n@@ -771,21 +771,27 @@ class String(Token):\n     'foo'\n     >>> print(repr(f))\n     String('foo')\n+    >>> f.func(*f.args) == f\n+    True\n \n     \"\"\"\n     __slots__ = ('text',)\n-    not_in_args = ['text']\n     is_Atom = True\n \n-    @classmethod\n-    def _construct_text(cls, text):\n+    def __new__(cls, text):\n+        obj = Token.__new__(cls)\n         if not isinstance(text, str):\n             raise TypeError('Argument text is not a string type.')\n-        return text\n+        obj.text = text\n+        return obj\n \n     def _sympystr(self, printer, *args, **kwargs):\n         return self.text\n \n+    @property\n+    def args(self):\n+        return (self.text,)\n+\n class QuotedString(String):\n     \"\"\" Represents a string which should be printed with quotes. \"\"\"\n \n", "normalized_occurrence": 1}
