{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-24909", "model_patch": "diff --git a/sympy/physics/units/prefixes.py b/sympy/physics/units/prefixes.py\nindex bc0a281..dee31cb 100644\n--- a/sympy/physics/units/prefixes.py\n+++ b/sympy/physics/units/prefixes.py\n@@ -94,7 +94,13 @@ class Prefix(Expr):\n                     return PREFIXES[p]\n             return fact\n \n-        return self.scale_factor * other\n+        if isinstance(other, Quantity):\n+            from sympy.physics.units import UnitSystem\n+            unit_system = UnitSystem.get_default_unit_system()\n+            _, base_quantity = unit_system._collect_factor_and_dimension(other)\n+            return Quantity(other.name, self.scale_factor * other.scale_factor, base_quantity)\n+\n+        return fact\n \n     def __truediv__(self, other):\n         if not hasattr(other, \"scale_factor\"):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/physics/units/prefixes.py b/sympy/physics/units/prefixes.py\nindex 96fcb53..a913899 100644\n--- a/sympy/physics/units/prefixes.py\n+++ b/sympy/physics/units/prefixes.py\n@@ -51,7 +51,12 @@ class Prefix(Expr):\n                 if PREFIXES[p].scale_factor == fact:\n                     return PREFIXES[p]\n             return fact\n-        return self.scale_factor * other\n+        if isinstance(other, Quantity):\n+            from sympy.physics.units import UnitSystem\n+            unit_system = UnitSystem.get_default_unit_system()\n+            _, base_quantity = unit_system._collect_factor_and_dimension(other)\n+            return Quantity(other.name, self.scale_factor * other.scale_factor, base_quantity)\n+        return fact\n     def __truediv__(self, other):\n         if not hasattr(other, 'scale_factor'):\n             return super().__truediv__(other)\n", "normalized_occurrence": 1}
