{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-14024", "model_patch": "diff --git a/sympy/core/power.py b/sympy/core/power.py\nindex 0a340d5..b6a177d 100644\n--- a/sympy/core/power.py\n+++ b/sympy/core/power.py\n@@ -320,6 +320,11 @@ class Pow(Expr):\n         if b is S.NaN:\n             return (b**e)**other  # let __new__ handle it\n \n+        # Handle negative base with symbolic power\n+        if _coeff_isneg(b) and e.is_real and other.is_real:\n+            newb = -b\n+            return (-1)**(e*other) * Pow(newb, e*other)\n+\n         s = None\n         if other.is_integer:\n             s = 1\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/power.py b/sympy/core/power.py\nindex f12eb85..6934519 100644\n--- a/sympy/core/power.py\n+++ b/sympy/core/power.py\n@@ -154,6 +154,9 @@ class Pow(Expr):\n         b, e = self.as_base_exp()\n         if b is S.NaN:\n             return (b ** e) ** other\n+        if _coeff_isneg(b) and e.is_real and other.is_real:\n+            newb = -b\n+            return (-1) ** (e * other) * Pow(newb, e * other)\n         s = None\n         if other.is_integer:\n             s = 1\n", "normalized_occurrence": 1}
