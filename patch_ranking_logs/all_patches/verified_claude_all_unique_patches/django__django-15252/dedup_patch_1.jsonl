{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15252", "model_patch": "diff --git a/django/db/migrations/recorder.py b/django/db/migrations/recorder.py\nindex cf1aec2..20db892 100644\n--- a/django/db/migrations/recorder.py\n+++ b/django/db/migrations/recorder.py\n@@ -1,5 +1,6 @@\n+\n from django.apps.registry import Apps\n-from django.db import DatabaseError, models\n+from django.db import DatabaseError, models, router\n from django.utils.functional import classproperty\n from django.utils.timezone import now\n \n@@ -62,6 +63,9 @@ class MigrationRecorder:\n         # in the codebase.\n         if self.has_table():\n             return\n+        # Check if we're allowed to migrate on this database\n+        if not router.allow_migrate(self.connection.alias, self.Migration._meta.app_label):\n+            return\n         # Make the table\n         try:\n             with self.connection.schema_editor() as editor:\n@@ -93,4 +97,4 @@ class MigrationRecorder:\n \n     def flush(self):\n         \"\"\"Delete all migration records. Useful for testing migrations.\"\"\"\n-        self.migration_qs.all().delete()\n+        self.migration_qs.all().delete()\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/recorder.py b/django/db/migrations/recorder.py\nindex c1743b4..c208af7 100644\n--- a/django/db/migrations/recorder.py\n+++ b/django/db/migrations/recorder.py\n@@ -1,5 +1,5 @@\n from django.apps.registry import Apps\n-from django.db import DatabaseError, models\n+from django.db import DatabaseError, models, router\n from django.utils.functional import classproperty\n from django.utils.timezone import now\n from .exceptions import MigrationSchemaMissing\n@@ -32,6 +32,8 @@ class MigrationRecorder:\n     def ensure_schema(self):\n         if self.has_table():\n             return\n+        if not router.allow_migrate(self.connection.alias, self.Migration._meta.app_label):\n+            return\n         try:\n             with self.connection.schema_editor() as editor:\n                 editor.create_model(self.Migration)\n", "normalized_occurrence": 13}
