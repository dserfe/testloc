{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-17630", "model_patch": "diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py\nindex 5a4ea29..bb6a7cb 100644\n--- a/sympy/matrices/expressions/blockmatrix.py\n+++ b/sympy/matrices/expressions/blockmatrix.py\n@@ -464,7 +464,13 @@ def bc_matmul(expr):\n     while (i+1 < len(matrices)):\n         A, B = matrices[i:i+2]\n         if isinstance(A, BlockMatrix) and isinstance(B, BlockMatrix):\n-            matrices[i] = A._blockmul(B)\n+            result = A._blockmul(B)\n+            # Ensure Zero objects are ZeroMatrix\n+            for i in range(result.rows):\n+                for j in range(result.cols):\n+                    if result.blocks[i, j] == 0:\n+                        result.blocks[i, j] = ZeroMatrix(result.blocks[i, j].rows, result.blocks[i, j].cols)\n+            matrices[i] = result\n             matrices.pop(i+1)\n         elif isinstance(A, BlockMatrix):\n             matrices[i] = A._blockmul(BlockMatrix([[B]]))\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py\nindex c0f9049..6cf9085 100644\n--- a/sympy/matrices/expressions/blockmatrix.py\n+++ b/sympy/matrices/expressions/blockmatrix.py\n@@ -237,7 +237,12 @@ def bc_matmul(expr):\n     while i + 1 < len(matrices):\n         A, B = matrices[i:i + 2]\n         if isinstance(A, BlockMatrix) and isinstance(B, BlockMatrix):\n-            matrices[i] = A._blockmul(B)\n+            result = A._blockmul(B)\n+            for i in range(result.rows):\n+                for j in range(result.cols):\n+                    if result.blocks[i, j] == 0:\n+                        result.blocks[i, j] = ZeroMatrix(result.blocks[i, j].rows, result.blocks[i, j].cols)\n+            matrices[i] = result\n             matrices.pop(i + 1)\n         elif isinstance(A, BlockMatrix):\n             matrices[i] = A._blockmul(BlockMatrix([[B]]))\n", "normalized_occurrence": 1}
