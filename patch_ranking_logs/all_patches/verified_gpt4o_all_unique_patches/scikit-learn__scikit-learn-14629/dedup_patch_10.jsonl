{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-14629", "model_patch": "diff --git a/sklearn/model_selection/_validation.py b/sklearn/model_selection/_validation.py\nindex 224ebb4..fe5c04f 100644\n--- a/sklearn/model_selection/_validation.py\n+++ b/sklearn/model_selection/_validation.py\n@@ -856,7 +856,7 @@ def _fit_and_predict(estimator, X, y, train, test, verbose, fit_params,\n     if method in ['decision_function', 'predict_proba', 'predict_log_proba']:\n         if isinstance(predictions, list):\n             predictions = [_enforce_prediction_order(\n-                estimator.classes_[i_label], predictions[i_label],\n+                estimator.estimators_[i_label].classes_, predictions[i_label],\n                 n_classes=len(set(y[:, i_label])), method=method)\n                 for i_label in range(len(predictions))]\n         else:\n", "occurrence": 7, "normalized_patch": "diff --git a/sklearn/model_selection/_validation.py b/sklearn/model_selection/_validation.py\nindex fe0aa4e..b94d6e9 100644\n--- a/sklearn/model_selection/_validation.py\n+++ b/sklearn/model_selection/_validation.py\n@@ -195,7 +195,7 @@ def _fit_and_predict(estimator, X, y, train, test, verbose, fit_params, method):\n     predictions = func(X_test)\n     if method in ['decision_function', 'predict_proba', 'predict_log_proba']:\n         if isinstance(predictions, list):\n-            predictions = [_enforce_prediction_order(estimator.classes_[i_label], predictions[i_label], n_classes=len(set(y[:, i_label])), method=method) for i_label in range(len(predictions))]\n+            predictions = [_enforce_prediction_order(estimator.estimators_[i_label].classes_, predictions[i_label], n_classes=len(set(y[:, i_label])), method=method) for i_label in range(len(predictions))]\n         else:\n             n_classes = len(set(y)) if y.ndim == 1 else y.shape[1]\n             predictions = _enforce_prediction_order(estimator.classes_, predictions, n_classes, method)\n", "normalized_occurrence": 7}
