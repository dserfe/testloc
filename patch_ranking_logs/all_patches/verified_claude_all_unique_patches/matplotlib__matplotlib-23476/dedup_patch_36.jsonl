{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-23476", "model_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex cd28277..ee87cfa 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -3035,6 +3035,7 @@ class Figure(FigureBase):\n     def __setstate__(self, state):\n         version = state.pop('__mpl_version__')\n         restore_to_pylab = state.pop('_restore_to_pylab', False)\n+        original_dpi = state.pop('_original_dpi', None)\n \n         if version != mpl.__version__:\n             _api.warn_external(\n@@ -3043,6 +3044,11 @@ class Figure(FigureBase):\n \n         self.__dict__ = state\n \n+        # Restore the original DPI if it was saved\n+        if original_dpi is not None:\n+            self.dpi = original_dpi\n+            self._original_dpi = original_dpi\n+\n         # re-initialise some of the unstored state information\n         FigureCanvasBase(self)  # Set self.canvas.\n \n", "normalized_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex f6d35a3..4e78f0e 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -958,9 +958,13 @@ class Figure(FigureBase):\n     def __setstate__(self, state):\n         version = state.pop('__mpl_version__')\n         restore_to_pylab = state.pop('_restore_to_pylab', False)\n+        original_dpi = state.pop('_original_dpi', None)\n         if version != mpl.__version__:\n             _api.warn_external(f'This figure was saved with matplotlib version {version} and is unlikely to function correctly.')\n         self.__dict__ = state\n+        if original_dpi is not None:\n+            self.dpi = original_dpi\n+            self._original_dpi = original_dpi\n         FigureCanvasBase(self)\n         if restore_to_pylab:\n             import matplotlib.pyplot as plt\n", "normalized_occurrence": 1}
