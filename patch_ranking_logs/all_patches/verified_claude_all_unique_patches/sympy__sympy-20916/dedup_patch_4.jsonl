{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-20916", "model_patch": "diff --git a/sympy/printing/pretty/pretty_symbology.py b/sympy/printing/pretty/pretty_symbology.py\nindex c7b65c7..18b66dd 100644\n--- a/sympy/printing/pretty/pretty_symbology.py\n+++ b/sympy/printing/pretty/pretty_symbology.py\n@@ -175,6 +175,13 @@ SSUP = lambda symb:   U('SUPERSCRIPT %s' % symb_2txt[symb])\n sub = {}    # symb -> subscript symbol\n sup = {}    # symb -> superscript symbol\n \n+# Ensure digit subscripts work for both Latin and Greek letters\n+def get_sub(letter, digit):\n+    \"\"\"Get a subscripted digit for any letter (Latin or Greek)\"\"\"\n+    if digit in '0123456789':\n+        return letter + DSUB(digit)\n+    return letter + digit\n+\n # latin subscripts\n for l in 'aeioruvxhklmnpst':\n     sub[l] = LSUB(l)\n", "occurrence": 1, "normalized_patch": "--- a/sympy/printing/pretty/pretty_symbology.py\n+++ b/sympy/printing/pretty/pretty_symbology.py\n+def get_sub(letter, digit):\n+    if digit in '0123456789':\n+        return letter + DSUB(digit)\n+    return letter + digit", "normalized_occurrence": 1}
