{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-7220", "model_patch": "diff --git a/src/_pytest/terminal.py b/src/_pytest/terminal.py\nindex ebc163c..fbcd108 100644\n--- a/src/_pytest/terminal.py\n+++ b/src/_pytest/terminal.py\n@@ -776,7 +776,12 @@ class TerminalReporter:\n \n     def _locationline(self, nodeid, fspath, lineno, domain):\n         def mkrel(nodeid):\n-            line = self.config.cwd_relative_nodeid(nodeid)\n+            # Use invocation_dir instead of current working directory\n+            line = nodeid\n+            if self.config.invocation_dir:\n+                relpath = py.path.local(nodeid.split(\"::\")[0]).relto(self.config.invocation_dir)\n+                if relpath:\n+                    line = relpath + nodeid[len(nodeid.split(\"::\")[0]):]\n             if domain and line.endswith(domain):\n                 line = line[: -len(domain)]\n                 values = domain.split(\"[\")\n", "occurrence": 2, "normalized_patch": "diff --git a/src/_pytest/terminal.py b/src/_pytest/terminal.py\nindex 554ecf8..50e9c90 100644\n--- a/src/_pytest/terminal.py\n+++ b/src/_pytest/terminal.py\n@@ -510,7 +510,11 @@ class TerminalReporter:\n                 self._tw.line('(to show a full traceback on KeyboardInterrupt use --full-trace)', yellow=True)\n     def _locationline(self, nodeid, fspath, lineno, domain):\n         def mkrel(nodeid):\n-            line = self.config.cwd_relative_nodeid(nodeid)\n+            line = nodeid\n+            if self.config.invocation_dir:\n+                relpath = py.path.local(nodeid.split('::')[0]).relto(self.config.invocation_dir)\n+                if relpath:\n+                    line = relpath + nodeid[len(nodeid.split('::')[0]):]\n             if domain and line.endswith(domain):\n                 line = line[:-len(domain)]\n                 values = domain.split('[')\n", "normalized_occurrence": 2}
