{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-4248", "model_patch": "diff --git a/xarray/core/formatting.py b/xarray/core/formatting.py\nindex 91a7f67..9b69a69 100644\n--- a/xarray/core/formatting.py\n+++ b/xarray/core/formatting.py\n@@ -279,16 +279,22 @@ def summarize_variable(\n         else:\n             max_width = max_width_options\n     first_col = pretty_print(f\"  {marker} {name} \", col_width)\n-    if var.dims:\n-        dims_str = \"({}) \".format(\", \".join(map(str, var.dims)))\n-    else:\n-        dims_str = \"\"\n-    front_str = f\"{first_col}{dims_str}{var.dtype} \"\n-\n-    values_width = max_width - len(front_str)\n-    values_str = inline_variable_array_repr(var, values_width)\n+    is_index = name in var.dims\n+    marker = \"*\" if is_index else \" \"\n+    if is_index:\n+        coord = var.variable.to_index_variable()\n+        if coord.level_names is not None:\n+            return \"\\n\".join(\n+                [\n+                    _summarize_coord_multiindex(coord, col_width, marker),\n+                    _summarize_coord_levels(coord, col_width),\n+                ]\n+            )\n+    # Get the units attribute if it exists\n+    units = var.attrs.get(\"units\", \"\")\n+    units_str = f\", in {units}\" if units else \"\"\n \n-    return front_str + values_str\n+    return summarize_variable(name, var.variable, col_width, marker=marker + units_str)\n \n \n def _summarize_coord_multiindex(coord, col_width, marker):\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/formatting.py b/xarray/core/formatting.py\nindex 6d31a74..2784757 100644\n--- a/xarray/core/formatting.py\n+++ b/xarray/core/formatting.py\n@@ -159,14 +159,15 @@ def summarize_variable(name: Hashable, var, col_width: int, marker: str=' ', max\n         else:\n             max_width = max_width_options\n     first_col = pretty_print(f'  {marker} {name} ', col_width)\n-    if var.dims:\n-        dims_str = '({}) '.format(', '.join(map(str, var.dims)))\n-    else:\n-        dims_str = ''\n-    front_str = f'{first_col}{dims_str}{var.dtype} '\n-    values_width = max_width - len(front_str)\n-    values_str = inline_variable_array_repr(var, values_width)\n-    return front_str + values_str\n+    is_index = name in var.dims\n+    marker = '*' if is_index else ' '\n+    if is_index:\n+        coord = var.variable.to_index_variable()\n+        if coord.level_names is not None:\n+            return '\\n'.join([_summarize_coord_multiindex(coord, col_width, marker), _summarize_coord_levels(coord, col_width)])\n+    units = var.attrs.get('units', '')\n+    units_str = f', in {units}' if units else ''\n+    return summarize_variable(name, var.variable, col_width, marker=marker + units_str)\n def _summarize_coord_multiindex(coord, col_width, marker):\n     first_col = pretty_print(f'  {marker} {coord.name} ', col_width)\n     return '{}({}) MultiIndex'.format(first_col, str(coord.dims[0]))\n", "normalized_occurrence": 1}
