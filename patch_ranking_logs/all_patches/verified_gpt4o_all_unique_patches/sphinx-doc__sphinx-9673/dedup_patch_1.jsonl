{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9673", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 51811ca..11a5a00 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -37,7 +37,7 @@ def record_typehints(app: Sphinx, objtype: str, name: str, obj: Any,\n         pass\n \n \n-def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element) -> None:\n+def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element, config: Config) -> None:\n     if domain != 'py':\n         return\n     if app.config.autodoc_typehints not in ('both', 'description'):\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 03a755b..b5bfa97 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -19,7 +19,7 @@ def record_typehints(app: Sphinx, objtype: str, name: str, obj: Any, options: Di\n                 annotation['return'] = typing.stringify(sig.return_annotation)\n     except (TypeError, ValueError):\n         pass\n-def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element) -> None:\n+def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element, config: Config) -> None:\n     if domain != 'py':\n         return\n     if app.config.autodoc_typehints not in ('both', 'description'):\n", "normalized_occurrence": 1}
