{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-22714", "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex b7f7a47..0dd2c0f 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -162,6 +162,10 @@ class Point(GeometryEntity):\n \n         # Turn any Floats into rationals and simplify\n         # any expressions before we instantiate\n+        if evaluate:\n+            coords = coords.xreplace({\n+                Float: lambda x: nsimplify(x, rational=True)\n+            })\n         if evaluate:\n             coords = coords.xreplace({\n                 f: simplify(nsimplify(f, rational=True))\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex 4d7ea73..dca6a0b 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -50,6 +50,8 @@ class Point(GeometryEntity):\n         if not all((isinstance(a, Expr) for a in coords)):\n             raise TypeError('Coordinates must be valid SymPy expressions.')\n         coords = coords[:dim] + (S.Zero,) * (dim - len(coords))\n+        if evaluate:\n+            coords = coords.xreplace({Float: lambda x: nsimplify(x, rational=True)})\n         if evaluate:\n             coords = coords.xreplace({f: simplify(nsimplify(f, rational=True)) for f in coords.atoms(Float)})\n         if len(coords) == 2:\n", "normalized_occurrence": 1}
