{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-15976", "model_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 85af872..fc9ee35 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -772,10 +772,16 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n             else:\n                 return s\n \n-        name, supers, subs = split_super_sub(sym.name)\n-        name = translate(name)\n-        supers = [translate(sup) for sup in supers]\n-        subs = [translate(sub) for sub in subs]\n+        # Handle symbols with numbers by preserving the full name\n+        if any(c.isdigit() for c in sym.name):\n+            name = sym.name\n+            supers = []\n+            subs = []\n+        else:\n+            name, supers, subs = split_super_sub(sym.name)\n+            name = translate(name)\n+            supers = [translate(sup) for sup in supers]\n+            subs = [translate(sub) for sub in subs]\n \n         mname = self.dom.createElement('mi')\n         mname.appendChild(self.dom.createTextNode(name))\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 28d3e1a..a351dbd 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -540,10 +540,15 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n                 return greek_unicode.get(s)\n             else:\n                 return s\n-        name, supers, subs = split_super_sub(sym.name)\n-        name = translate(name)\n-        supers = [translate(sup) for sup in supers]\n-        subs = [translate(sub) for sub in subs]\n+        if any((c.isdigit() for c in sym.name)):\n+            name = sym.name\n+            supers = []\n+            subs = []\n+        else:\n+            name, supers, subs = split_super_sub(sym.name)\n+            name = translate(name)\n+            supers = [translate(sup) for sup in supers]\n+            subs = [translate(sub) for sub in subs]\n         mname = self.dom.createElement('mi')\n         mname.appendChild(self.dom.createTextNode(name))\n         if len(supers) == 0:\n", "normalized_occurrence": 2}
