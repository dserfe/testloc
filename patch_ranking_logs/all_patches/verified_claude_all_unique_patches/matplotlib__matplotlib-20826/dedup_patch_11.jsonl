{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-20826", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 07605b5..58cd90d 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1192,11 +1192,27 @@ class _AxesBase(martist.Artist):\n         xaxis_visible = self.xaxis.get_visible()\n         yaxis_visible = self.yaxis.get_visible()\n \n+        # Store spine visibility states\n+        spine_visibilities = {name: spine.get_visible() \n+                            for name, spine in self.spines.items()}\n+\n         self.xaxis.clear()\n         self.yaxis.clear()\n \n         for name, spine in self.spines.items():\n             spine.clear()\n+            # Restore spine visibility\n+            spine.set_visible(spine_visibilities[name])\n+\n+        # Ensure shared axes have correct visibility for spines\n+        if self._sharex is not None:\n+            # Hide top spine for all but the top-most axes\n+            if self._sharex.spines['top'].get_visible():\n+                self.spines['top'].set_visible(False)\n+        if self._sharey is not None:\n+            # Hide right spine for all but the right-most axes\n+            if self._sharey.spines['right'].get_visible():\n+                self.spines['right'].set_visible(False)\n \n         self.ignore_existing_data_limits = True\n         self.callbacks = cbook.CallbackRegistry()\n@@ -1303,11 +1319,21 @@ class _AxesBase(martist.Artist):\n         self._shared_axes[\"x\"].clean()\n         self._shared_axes[\"y\"].clean()\n         if self._sharex is not None:\n+            # Properly restore x-axis sharing properties\n             self.xaxis.set_visible(xaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            # Hide labels for shared axes except the bottom-most one\n+            if self._sharex is not self:\n+                self.xaxis.set_tick_labels([])\n+                self.xaxis.set_label_text(\"\")\n         if self._sharey is not None:\n+            # Properly restore y-axis sharing properties\n             self.yaxis.set_visible(yaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            # Hide labels for shared axes except the left-most one\n+            if self._sharey is not self:\n+                self.yaxis.set_tick_labels([])\n+                self.yaxis.set_label_text(\"\")\n \n         self.stale = True\n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 33a6de3..44e2560 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -503,10 +503,18 @@ class _AxesBase(martist.Artist):\n             patch_visible = True\n         xaxis_visible = self.xaxis.get_visible()\n         yaxis_visible = self.yaxis.get_visible()\n+        spine_visibilities = {name: spine.get_visible() for name, spine in self.spines.items()}\n         self.xaxis.clear()\n         self.yaxis.clear()\n         for name, spine in self.spines.items():\n             spine.clear()\n+            spine.set_visible(spine_visibilities[name])\n+        if self._sharex is not None:\n+            if self._sharex.spines['top'].get_visible():\n+                self.spines['top'].set_visible(False)\n+        if self._sharey is not None:\n+            if self._sharey.spines['right'].get_visible():\n+                self.spines['right'].set_visible(False)\n         self.ignore_existing_data_limits = True\n         self.callbacks = cbook.CallbackRegistry()\n         if self._sharex is not None:\n@@ -578,9 +586,15 @@ class _AxesBase(martist.Artist):\n         if self._sharex is not None:\n             self.xaxis.set_visible(xaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            if self._sharex is not self:\n+                self.xaxis.set_tick_labels([])\n+                self.xaxis.set_label_text('')\n         if self._sharey is not None:\n             self.yaxis.set_visible(yaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            if self._sharey is not self:\n+                self.yaxis.set_tick_labels([])\n+                self.yaxis.set_label_text('')\n         self.stale = True\n     class ArtistList(MutableSequence):\n         def __init__(self, axes, prop_name, add_name, valid_types=None, invalid_types=None):\n", "normalized_occurrence": 1}
