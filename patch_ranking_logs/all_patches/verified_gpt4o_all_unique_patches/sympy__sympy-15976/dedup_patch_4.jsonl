{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-15976", "model_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 85af872..4c7f743 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -364,28 +364,28 @@ class MathMLContentPrinter(MathMLPrinterBase):\n         supers = [translate(sup) for sup in supers]\n         subs = [translate(sub) for sub in subs]\n \n-        mname = self.dom.createElement('mml:mi')\n-        mname.appendChild(self.dom.createTextNode(name))\n-        if len(supers) == 0:\n-            if len(subs) == 0:\n-                ci.appendChild(self.dom.createTextNode(name))\n-            else:\n-                msub = self.dom.createElement('mml:msub')\n-                msub.appendChild(mname)\n-                msub.appendChild(join(subs))\n-                ci.appendChild(msub)\n+        mi = self.dom.createElement('mml:mi')\n+        mi.appendChild(self.dom.createTextNode(name))\n+        if len(supers) == 0 and len(subs) == 0:\n+            ci.appendChild(mi)\n         else:\n-            if len(subs) == 0:\n+            if len(subs) > 0:\n+                ms = self.dom.createElement('mml:msub')\n+                ms.appendChild(mi)\n+                ms.appendChild(join(subs))\n+                if len(supers) > 0:\n+                    msubsup = self.dom.createElement('mml:msubsup')\n+                    msubsup.appendChild(ms.firstChild)\n+                    msubsup.appendChild(ms.lastChild)\n+                    msubsup.appendChild(join(supers))\n+                    ci.appendChild(msubsup)\n+                else:\n+                    ci.appendChild(ms)\n+            else:\n                 msup = self.dom.createElement('mml:msup')\n-                msup.appendChild(mname)\n+                msup.appendChild(mi)\n                 msup.appendChild(join(supers))\n                 ci.appendChild(msup)\n-            else:\n-                msubsup = self.dom.createElement('mml:msubsup')\n-                msubsup.appendChild(mname)\n-                msubsup.appendChild(join(subs))\n-                msubsup.appendChild(join(supers))\n-                ci.appendChild(msubsup)\n         return ci\n \n     _print_MatrixSymbol = _print_Symbol\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 28d3e1a..595a9e4 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -228,27 +228,27 @@ class MathMLContentPrinter(MathMLPrinterBase):\n         name = translate(name)\n         supers = [translate(sup) for sup in supers]\n         subs = [translate(sub) for sub in subs]\n-        mname = self.dom.createElement('mml:mi')\n-        mname.appendChild(self.dom.createTextNode(name))\n-        if len(supers) == 0:\n-            if len(subs) == 0:\n-                ci.appendChild(self.dom.createTextNode(name))\n+        mi = self.dom.createElement('mml:mi')\n+        mi.appendChild(self.dom.createTextNode(name))\n+        if len(supers) == 0 and len(subs) == 0:\n+            ci.appendChild(mi)\n+        elif len(subs) > 0:\n+            ms = self.dom.createElement('mml:msub')\n+            ms.appendChild(mi)\n+            ms.appendChild(join(subs))\n+            if len(supers) > 0:\n+                msubsup = self.dom.createElement('mml:msubsup')\n+                msubsup.appendChild(ms.firstChild)\n+                msubsup.appendChild(ms.lastChild)\n+                msubsup.appendChild(join(supers))\n+                ci.appendChild(msubsup)\n             else:\n-                msub = self.dom.createElement('mml:msub')\n-                msub.appendChild(mname)\n-                msub.appendChild(join(subs))\n-                ci.appendChild(msub)\n-        elif len(subs) == 0:\n+                ci.appendChild(ms)\n+        else:\n             msup = self.dom.createElement('mml:msup')\n-            msup.appendChild(mname)\n+            msup.appendChild(mi)\n             msup.appendChild(join(supers))\n             ci.appendChild(msup)\n-        else:\n-            msubsup = self.dom.createElement('mml:msubsup')\n-            msubsup.appendChild(mname)\n-            msubsup.appendChild(join(subs))\n-            msubsup.appendChild(join(supers))\n-            ci.appendChild(msubsup)\n         return ci\n     _print_MatrixSymbol = _print_Symbol\n     _print_RandomSymbol = _print_Symbol\n", "normalized_occurrence": 1}
