{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-23563", "model_patch": "diff --git a/lib/mpl_toolkits/mplot3d/art3d.py b/lib/mpl_toolkits/mplot3d/art3d.py\nindex fa869c7..a7bce19 100644\n--- a/lib/mpl_toolkits/mplot3d/art3d.py\n+++ b/lib/mpl_toolkits/mplot3d/art3d.py\n@@ -166,7 +166,7 @@ class Line3D(lines.Line2D):\n         Keyword arguments are passed onto :func:`~matplotlib.lines.Line2D`.\n         \"\"\"\n         super().__init__([], [], *args, **kwargs)\n-        self._verts3d = xs, ys, zs\n+        self._verts3d = (xs, ys, zs)\n \n     def set_3d_properties(self, zs=0, zdir='z'):\n         xs = self.get_xdata()\n@@ -193,9 +193,9 @@ class Line3D(lines.Line2D):\n         Accepts x, y, z arguments or a single array-like (x, y, z)\n         \"\"\"\n         if len(args) == 1:\n-            self._verts3d = args[0]\n+            self._verts3d = tuple(args[0])\n         else:\n-            self._verts3d = args\n+            self._verts3d = tuple(args)\n         self.stale = True\n \n     def get_data_3d(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/mpl_toolkits/mplot3d/art3d.py b/lib/mpl_toolkits/mplot3d/art3d.py\nindex e39ff0d..7c6c1c9 100644\n--- a/lib/mpl_toolkits/mplot3d/art3d.py\n+++ b/lib/mpl_toolkits/mplot3d/art3d.py\n@@ -73,9 +73,9 @@ class Line3D(lines.Line2D):\n         self.stale = True\n     def set_data_3d(self, *args):\n         if len(args) == 1:\n-            self._verts3d = args[0]\n+            self._verts3d = tuple(args[0])\n         else:\n-            self._verts3d = args\n+            self._verts3d = tuple(args)\n         self.stale = True\n     def get_data_3d(self):\n         return self._verts3d\n", "normalized_occurrence": 1}
