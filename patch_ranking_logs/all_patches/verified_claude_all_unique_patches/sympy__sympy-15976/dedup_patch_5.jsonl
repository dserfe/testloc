{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-15976", "model_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 85af872..23bbef1 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -769,6 +769,11 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n         def translate(s):\n             if s in greek_unicode:\n                 return greek_unicode.get(s)\n+            elif any(c.isdigit() for c in s):\n+                # Split string into text and numbers\n+                import re\n+                parts = re.split('([0-9]+)', s)\n+                return ''.join(p for p in parts if p)  # Join non-empty parts\n             else:\n                 return s\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 28d3e1a..9b57216 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -538,6 +538,10 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n         def translate(s):\n             if s in greek_unicode:\n                 return greek_unicode.get(s)\n+            elif any((c.isdigit() for c in s)):\n+                import re\n+                parts = re.split('([0-9]+)', s)\n+                return ''.join((p for p in parts if p))\n             else:\n                 return s\n         name, supers, subs = split_super_sub(sym.name)\n", "normalized_occurrence": 1}
