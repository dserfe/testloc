{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-25570", "model_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex 36a655a..6f81098 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -735,10 +735,10 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n \n         result = self._fit_transform(X, y, _fit_transform_one)\n \n-        if not result:\n+        if not any(result):\n             self._update_fitted_transformers([])\n             # All transformers are None\n-            return np.zeros((X.shape[0], 0))\n+            return pd.DataFrame(index=X.index, columns=[]) if hasattr(X, 'index') else np.zeros((X.shape[0], 0))\n \n         Xs, transformers = zip(*result)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex 03f51bb..76e6f66 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -208,9 +208,9 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n         self._validate_column_callables(X)\n         self._validate_remainder(X)\n         result = self._fit_transform(X, y, _fit_transform_one)\n-        if not result:\n+        if not any(result):\n             self._update_fitted_transformers([])\n-            return np.zeros((X.shape[0], 0))\n+            return pd.DataFrame(index=X.index, columns=[]) if hasattr(X, 'index') else np.zeros((X.shape[0], 0))\n         Xs, transformers = zip(*result)\n         if any((sparse.issparse(X) for X in Xs)):\n             nnz = sum((X.nnz if sparse.issparse(X) else X.size for X in Xs))\n", "normalized_occurrence": 1}
