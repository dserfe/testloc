{"model_name_or_path": "agentless", "instance_id": "psf__requests-3362", "model_patch": "diff --git a/requests/models.py b/requests/models.py\nindex 58593f5..4a9de9b 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -683,7 +683,7 @@ class Response(object):\n \n             self._content_consumed = True\n \n-        if self._content_consumed and isinstance(self._content, bool):\n+        if self._content_consumed and self._content is not None:\n             raise StreamConsumedError()\n         elif not isinstance(chunk_size, int):\n             raise TypeError(\"chunk_size must be an int, it is instead a %s.\" % type(chunk_size))\n@@ -694,7 +694,7 @@ class Response(object):\n \n         chunks = reused_chunks if self._content_consumed else stream_chunks\n \n-        if decode_unicode:\n+        if decode_unicode and self.encoding:\n             chunks = stream_decode_response_unicode(chunks, self)\n \n         return chunks\n", "occurrence": 1, "normalized_patch": "diff --git a/requests/models.py b/requests/models.py\nindex d66e2b7..0390fd2 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -352,14 +352,14 @@ class Response(object):\n                         break\n                     yield chunk\n             self._content_consumed = True\n-        if self._content_consumed and isinstance(self._content, bool):\n+        if self._content_consumed and self._content is not None:\n             raise StreamConsumedError()\n         elif not isinstance(chunk_size, int):\n             raise TypeError('chunk_size must be an int, it is instead a %s.' % type(chunk_size))\n         reused_chunks = iter_slices(self._content, chunk_size)\n         stream_chunks = generate()\n         chunks = reused_chunks if self._content_consumed else stream_chunks\n-        if decode_unicode:\n+        if decode_unicode and self.encoding:\n             chunks = stream_decode_response_unicode(chunks, self)\n         return chunks\n     def iter_lines(self, chunk_size=ITER_CHUNK_SIZE, decode_unicode=None, delimiter=None):\n", "normalized_occurrence": 1}
