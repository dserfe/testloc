{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-16281", "model_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex b70dcf9..0580fdd 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -492,9 +492,11 @@ class PrettyPrinter(Printer):\n         for lim in expr.limits:\n             width = (func_height + 2) * 5 // 3 - 2\n             sign_lines = []\n-            sign_lines.append(corner_chr + (horizontal_chr*width) + corner_chr)\n-            for i in range(func_height + 1):\n-                sign_lines.append(vertical_chr + (' '*width) + vertical_chr)\n+            # Adjust width and remove the extra empty line at the bottom\n+            sign_lines.append(horizontal_chr * (width + 2))\n+            for i in range(func_height):\n+                sign_lines.append(vertical_chr + (' ' * (width + 2)) + vertical_chr)\n+            sign_lines.append(vertical_chr + (' ' * width) + 'n = {}'.format(lim[1]))\n \n             pretty_sign = stringPict('')\n             pretty_sign = prettyForm(*pretty_sign.stack(*sign_lines))\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 0b99bb2..43725ab 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -361,9 +361,10 @@ class PrettyPrinter(Printer):\n         for lim in expr.limits:\n             width = (func_height + 2) * 5 // 3 - 2\n             sign_lines = []\n-            sign_lines.append(corner_chr + horizontal_chr * width + corner_chr)\n-            for i in range(func_height + 1):\n-                sign_lines.append(vertical_chr + ' ' * width + vertical_chr)\n+            sign_lines.append(horizontal_chr * (width + 2))\n+            for i in range(func_height):\n+                sign_lines.append(vertical_chr + ' ' * (width + 2) + vertical_chr)\n+            sign_lines.append(vertical_chr + ' ' * width + 'n = {}'.format(lim[1]))\n             pretty_sign = stringPict('')\n             pretty_sign = prettyForm(*pretty_sign.stack(*sign_lines))\n             pretty_upper = self._print(lim[2])\n", "normalized_occurrence": 1}
