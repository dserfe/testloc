{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11583", "model_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex f44661f..3de1d03 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -138,10 +138,12 @@ def iter_modules_and_files(modules, extra_files):\n             continue\n         path = Path(filename)\n         try:\n-            resolved_path = path.resolve(strict=True).absolute()\n-        except FileNotFoundError:\n-            # The module could have been removed, don't fail loudly if this\n-            # is the case.\n+            # Remove strict=True to handle invalid symlinks more gracefully\n+            resolved_path = path.resolve().absolute()\n+        except (FileNotFoundError, ValueError, RuntimeError):\n+            # Handle FileNotFoundError: module removed\n+            # Handle ValueError: null bytes in paths\n+            # Handle RuntimeError: recursive symlinks\n             continue\n         results.add(resolved_path)\n     return frozenset(results)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex e37abac..e4293cb 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -92,8 +92,8 @@ def iter_modules_and_files(modules, extra_files):\n             continue\n         path = Path(filename)\n         try:\n-            resolved_path = path.resolve(strict=True).absolute()\n-        except FileNotFoundError:\n+            resolved_path = path.resolve().absolute()\n+        except (FileNotFoundError, ValueError, RuntimeError):\n             continue\n         results.add(resolved_path)\n     return frozenset(results)\n", "normalized_occurrence": 2}
