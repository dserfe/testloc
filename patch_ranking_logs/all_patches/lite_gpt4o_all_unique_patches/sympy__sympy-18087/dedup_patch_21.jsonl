{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-18087", "model_patch": "diff --git a/sympy/functions/elementary/trigonometric.py b/sympy/functions/elementary/trigonometric.py\nindex 5205b6e..80b3850 100644\n--- a/sympy/functions/elementary/trigonometric.py\n+++ b/sympy/functions/elementary/trigonometric.py\n@@ -345,7 +345,7 @@ class sin(TrigonometricFunction):\n             return S.Zero\n \n         if isinstance(arg, asin):\n-            return arg.args[0]\n+            return abs(arg.args[0])\n \n         if isinstance(arg, atan):\n             x = arg.args[0]\n@@ -357,7 +357,7 @@ class sin(TrigonometricFunction):\n \n         if isinstance(arg, acos):\n             x = arg.args[0]\n-            return sqrt(1 - x**2)\n+            return sqrt(1 - x**2, evaluate=False)\n \n         if isinstance(arg, acot):\n             x = arg.args[0]\n@@ -662,7 +662,7 @@ class cos(TrigonometricFunction):\n             return S.One\n \n         if isinstance(arg, acos):\n-            return arg.args[0]\n+            return abs(arg.args[0])\n \n         if isinstance(arg, atan):\n             x = arg.args[0]\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/trigonometric.py b/sympy/functions/elementary/trigonometric.py\nindex bfdabb3..09a58a4 100644\n--- a/sympy/functions/elementary/trigonometric.py\n+++ b/sympy/functions/elementary/trigonometric.py\n@@ -194,7 +194,7 @@ class sin(TrigonometricFunction):\n         if arg.is_zero:\n             return S.Zero\n         if isinstance(arg, asin):\n-            return arg.args[0]\n+            return abs(arg.args[0])\n         if isinstance(arg, atan):\n             x = arg.args[0]\n             return x / sqrt(1 + x ** 2)\n@@ -203,7 +203,7 @@ class sin(TrigonometricFunction):\n             return y / sqrt(x ** 2 + y ** 2)\n         if isinstance(arg, acos):\n             x = arg.args[0]\n-            return sqrt(1 - x ** 2)\n+            return sqrt(1 - x ** 2, evaluate=False)\n         if isinstance(arg, acot):\n             x = arg.args[0]\n             return 1 / (sqrt(1 + 1 / x ** 2) * x)\n@@ -386,7 +386,7 @@ class cos(TrigonometricFunction):\n         if arg.is_zero:\n             return S.One\n         if isinstance(arg, acos):\n-            return arg.args[0]\n+            return abs(arg.args[0])\n         if isinstance(arg, atan):\n             x = arg.args[0]\n             return 1 / sqrt(1 + x ** 2)\n", "normalized_occurrence": 1}
