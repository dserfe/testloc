{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8621", "model_patch": "diff --git a/sphinx/roles.py b/sphinx/roles.py\nindex 307975f..b41c962 100644\n--- a/sphinx/roles.py\n+++ b/sphinx/roles.py\n@@ -32,7 +32,35 @@ if False:\n     from sphinx.environment import BuildEnvironment\n \n \n+import re\n+\n+def split_kbd_sequence(text):\n+    # Split the kbd sequence by spaces\n+    parts = text.split()\n+    sequences = []\n+    for part in parts:\n+        # Treat -, +, ^ as part of the keystroke if they are standalone or at the beginning of a sequence\n+        if part in ('-', '+', '^') or re.match(r'^[\\-\\+\\^]', part):\n+            sequences.append(part)\n+        else:\n+            # Otherwise, split by -, +, ^ as separators\n+            sequences.extend(re.split(r'(?<!^)[\\-\\+\\^]', part))\n+    return sequences\n+\n+\n+def custom_kbd_role(typ, rawtext, text, lineno, inliner, options={}, content=[]):\n+    nodes = []\n+    sequences = split_kbd_sequence(text)\n+    for seq in sequences:\n+        kbd_node = nodes.literal(rawtext, seq)\n+        kbd_node['classes'].append('kbd')\n+        nodes.append(kbd_node)\n+    return nodes, []\n+\n generic_docroles = {\n+    'command': addnodes.literal_strong,\n+    'dfn': nodes.emphasis,\n+    'kbd': custom_kbd_role,\n     'command': addnodes.literal_strong,\n     'dfn': nodes.emphasis,\n     'kbd': nodes.literal,\n", "occurrence": 1, "normalized_patch": "--- a/sphinx/roles.py\n+++ b/sphinx/roles.py\n-generic_docroles = {'command': addnodes.literal_strong, 'dfn': nodes.emphasis, 'kbd': nodes.literal, 'mailheader': addnodes.literal_emphasis, 'makevar': addnodes.literal_strong, 'manpage': addnodes.manpage, 'mimetype': addnodes.literal_emphasis, 'newsgroup': addnodes.literal_emphasis, 'program': addnodes.literal_strong, 'regexp': nodes.literal}\n+import re\n+def split_kbd_sequence(text):\n+    parts = text.split()\n+    sequences = []\n+    for part in parts:\n+        if part in ('-', '+', '^') or re.match('^[\\\\-\\\\+\\\\^]', part):\n+            sequences.append(part)\n+        else:\n+            sequences.extend(re.split('(?<!^)[\\\\-\\\\+\\\\^]', part))\n+    return sequences\n+def custom_kbd_role(typ, rawtext, text, lineno, inliner, options={}, content=[]):\n+    nodes = []\n+    sequences = split_kbd_sequence(text)\n+    for seq in sequences:\n+        kbd_node = nodes.literal(rawtext, seq)\n+        kbd_node['classes'].append('kbd')\n+        nodes.append(kbd_node)\n+    return (nodes, [])\n+generic_docroles = {'command': addnodes.literal_strong, 'dfn': nodes.emphasis, 'kbd': custom_kbd_role, 'command': addnodes.literal_strong, 'dfn': nodes.emphasis, 'kbd': nodes.literal, 'mailheader': addnodes.literal_emphasis, 'makevar': addnodes.literal_strong, 'manpage': addnodes.manpage, 'mimetype': addnodes.literal_emphasis, 'newsgroup': addnodes.literal_emphasis, 'program': addnodes.literal_strong, 'regexp': nodes.literal}", "normalized_occurrence": 1}
