{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13406", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 3533127..4a85789 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -211,6 +211,13 @@ class QuerySet:\n     @query.setter\n     def query(self, value):\n         self._query = value\n+        # Restore the _iterable_class based on query.values_select\n+        if value.values_select:\n+            if value.annotation_select:\n+                self._iterable_class = ValuesIterable\n+            else:\n+                # If no annotations, use the simpler ValuesIterable\n+                self._iterable_class = ValuesIterable\n \n     def as_manager(cls):\n         # Address the circular dependency between `Queryset` and `Manager`.\n", "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex fdf020d..de697e5 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -126,6 +126,11 @@ class QuerySet:\n     @query.setter\n     def query(self, value):\n         self._query = value\n+        if value.values_select:\n+            if value.annotation_select:\n+                self._iterable_class = ValuesIterable\n+            else:\n+                self._iterable_class = ValuesIterable\n     def as_manager(cls):\n         from django.db.models.manager import Manager\n         manager = Manager.from_queryset(cls)()\n", "normalized_occurrence": 1}
