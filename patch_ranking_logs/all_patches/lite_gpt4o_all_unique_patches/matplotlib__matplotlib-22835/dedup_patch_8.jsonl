{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-22835", "model_patch": "diff --git a/lib/matplotlib/artist.py b/lib/matplotlib/artist.py\nindex 2914fa8..1fd99f8 100644\n--- a/lib/matplotlib/artist.py\n+++ b/lib/matplotlib/artist.py\n@@ -1304,8 +1304,11 @@ class Artist:\n             normed = self.norm(data)\n             if np.isfinite(normed):\n                 # Midpoints of neighboring color intervals.\n-                neighbors = self.norm.inverse(\n-                    (int(self.norm(data) * n) + np.array([0, 1])) / n)\n+                try:\n+                    neighbors = self.norm.inverse(\n+                        (int(self.norm(data) * n) + np.array([0, 1])) / n)\n+                except ValueError:\n+                    neighbors = [data, data]\n                 delta = abs(neighbors - data).max()\n                 g_sig_digits = cbook._g_sig_digits(data, delta)\n             else:\n", "occurrence": 3, "normalized_patch": "diff --git a/lib/matplotlib/artist.py b/lib/matplotlib/artist.py\nindex a2cf16a..e596b91 100644\n--- a/lib/matplotlib/artist.py\n+++ b/lib/matplotlib/artist.py\n@@ -460,7 +460,10 @@ class Artist:\n                 return '[]'\n             normed = self.norm(data)\n             if np.isfinite(normed):\n-                neighbors = self.norm.inverse((int(self.norm(data) * n) + np.array([0, 1])) / n)\n+                try:\n+                    neighbors = self.norm.inverse((int(self.norm(data) * n) + np.array([0, 1])) / n)\n+                except ValueError:\n+                    neighbors = [data, data]\n                 delta = abs(neighbors - data).max()\n                 g_sig_digits = cbook._g_sig_digits(data, delta)\n             else:\n", "normalized_occurrence": 3}
