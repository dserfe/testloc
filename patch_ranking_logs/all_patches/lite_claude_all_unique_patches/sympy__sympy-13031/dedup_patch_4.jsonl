{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13031", "model_patch": "diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py\nindex 79b3d5e..2174e6f 100644\n--- a/sympy/matrices/common.py\n+++ b/sympy/matrices/common.py\n@@ -476,7 +476,7 @@ class MatrixShaping(MatrixRequired):\n         col_join\n         \"\"\"\n         # A null matrix can always be stacked (see  #10770)\n-        if self.cols == 0 and self.rows != other.rows:\n+        if (self.cols == 0 or self.rows == 0) and self.rows != other.rows:\n             return self._new(other.rows, 0, []).row_join(other)\n \n         if self.rows != other.rows:\n", "occurrence": 2, "normalized_patch": "diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py\nindex 1e4e3f2..0db2f53 100644\n--- a/sympy/matrices/common.py\n+++ b/sympy/matrices/common.py\n@@ -177,7 +177,7 @@ class MatrixShaping(MatrixRequired):\n             raise ShapeError('`self` and `other` must have the same number of columns.')\n         return self._eval_row_insert(pos, other)\n     def row_join(self, other):\n-        if self.cols == 0 and self.rows != other.rows:\n+        if (self.cols == 0 or self.rows == 0) and self.rows != other.rows:\n             return self._new(other.rows, 0, []).row_join(other)\n         if self.rows != other.rows:\n             raise ShapeError('`self` and `rhs` must have the same number of rows.')\n", "normalized_occurrence": 2}
