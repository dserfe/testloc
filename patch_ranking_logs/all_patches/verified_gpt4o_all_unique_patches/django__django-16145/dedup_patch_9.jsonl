{"model_name_or_path": "agentless", "instance_id": "django__django-16145", "model_patch": "diff --git a/django/core/management/commands/runserver.py b/django/core/management/commands/runserver.py\nindex c4f663b..52a3e69 100644\n--- a/django/core/management/commands/runserver.py\n+++ b/django/core/management/commands/runserver.py\n@@ -108,16 +108,21 @@ class Command(BaseCommand):\n         if not self.addr:\n             self.addr = self.default_addr_ipv6 if self.use_ipv6 else self.default_addr\n             self._raw_ipv6 = self.use_ipv6\n-        self.run(**options)\n+        # Normalize address for display if it's '0'\n+        display_addr = self.addr\n+        if display_addr == '0':\n+            display_addr = '0.0.0.0'\n \n-    def run(self, **options):\n+        self.run(display_addr=display_addr, **options)\n+\n+    def run(self, display_addr, **options):\n         \"\"\"Run the server, using the autoreloader if needed.\"\"\"\n         use_reloader = options[\"use_reloader\"]\n \n         if use_reloader:\n             autoreload.run_with_reloader(self.inner_run, **options)\n         else:\n-            self.inner_run(None, **options)\n+            self.inner_run(display_addr, **options)\n \n     def inner_run(self, *args, **options):\n         # If an exception was silenced in ManagementUtility.execute in order\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/management/commands/runserver.py b/django/core/management/commands/runserver.py\nindex 0e6059e..f22903e 100644\n--- a/django/core/management/commands/runserver.py\n+++ b/django/core/management/commands/runserver.py\n@@ -59,13 +59,16 @@ class Command(BaseCommand):\n         if not self.addr:\n             self.addr = self.default_addr_ipv6 if self.use_ipv6 else self.default_addr\n             self._raw_ipv6 = self.use_ipv6\n-        self.run(**options)\n-    def run(self, **options):\n+        display_addr = self.addr\n+        if display_addr == '0':\n+            display_addr = '0.0.0.0'\n+        self.run(display_addr=display_addr, **options)\n+    def run(self, display_addr, **options):\n         use_reloader = options['use_reloader']\n         if use_reloader:\n             autoreload.run_with_reloader(self.inner_run, **options)\n         else:\n-            self.inner_run(None, **options)\n+            self.inner_run(display_addr, **options)\n     def inner_run(self, *args, **options):\n         autoreload.raise_last_exception()\n         threading = options['use_threading']\n", "normalized_occurrence": 1}
