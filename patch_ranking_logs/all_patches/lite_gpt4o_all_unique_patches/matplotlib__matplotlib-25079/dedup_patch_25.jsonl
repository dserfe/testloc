{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25079", "model_patch": "diff --git a/lib/matplotlib/cm.py b/lib/matplotlib/cm.py\nindex 06f543d..87a9de0 100644\n--- a/lib/matplotlib/cm.py\n+++ b/lib/matplotlib/cm.py\n@@ -617,7 +617,9 @@ class ScalarMappable:\n         self._id_norm = self.norm.callbacks.connect('changed',\n                                                     self.changed)\n         if not in_init:\n-            self.changed()\n+            self.changed()  # Trigger recalculation of limits\n+            if hasattr(self, 'colorbar') and self.colorbar is not None:\n+                self.colorbar.update_normal(self)\n \n     def set_norm(self, norm):\n         \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/cm.py b/lib/matplotlib/cm.py\nindex f5a7578..81e0ee8 100644\n--- a/lib/matplotlib/cm.py\n+++ b/lib/matplotlib/cm.py\n@@ -194,6 +194,8 @@ class ScalarMappable:\n         self._id_norm = self.norm.callbacks.connect('changed', self.changed)\n         if not in_init:\n             self.changed()\n+            if hasattr(self, 'colorbar') and self.colorbar is not None:\n+                self.colorbar.update_normal(self)\n     def set_norm(self, norm):\n         self.norm = norm\n     def autoscale(self):\n", "normalized_occurrence": 1}
