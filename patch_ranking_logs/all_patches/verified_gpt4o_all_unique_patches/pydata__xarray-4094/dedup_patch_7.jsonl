{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-4094", "model_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex 1e17b93..757259b 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -3458,7 +3458,8 @@ class Dataset(Mapping, ImplementsDatasetReduce, DataWithCoords):\n                     assign_coords[dim] = None\n \n             expand_dims = set(stacking_dims).difference(set(val.dims))\n-            expand_dims.add(variable_dim)\n+            if expand_dims:\n+                expand_dims.add(variable_dim)\n             # must be list for .expand_dims\n             expand_dims = list(expand_dims)\n \n", "occurrence": 3, "normalized_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex 21ef2a4..a776a61 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -1151,7 +1151,8 @@ class Dataset(Mapping, ImplementsDatasetReduce, DataWithCoords):\n                 if dim not in val.dims:\n                     assign_coords[dim] = None\n             expand_dims = set(stacking_dims).difference(set(val.dims))\n-            expand_dims.add(variable_dim)\n+            if expand_dims:\n+                expand_dims.add(variable_dim)\n             expand_dims = list(expand_dims)\n             return val.assign_coords(**assign_coords).expand_dims(expand_dims).stack({new_dim: (variable_dim,) + stacking_dims})\n         stackable_vars = [ensure_stackable(self[key]) for key in self.data_vars]\n", "normalized_occurrence": 4}
