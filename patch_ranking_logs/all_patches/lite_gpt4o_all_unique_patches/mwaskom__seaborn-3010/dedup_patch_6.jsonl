{"model_name_or_path": "agentless", "instance_id": "mwaskom__seaborn-3010", "model_patch": "diff --git a/seaborn/_stats/regression.py b/seaborn/_stats/regression.py\nindex a346227..45dcc45 100644\n--- a/seaborn/_stats/regression.py\n+++ b/seaborn/_stats/regression.py\n@@ -21,8 +21,10 @@ class PolyFit(Stat):\n \n     def _fit_predict(self, data):\n \n-        x = data[\"x\"]\n-        y = data[\"y\"]\n+        # Filter out missing values\n+        mask = data[\"x\"].notna() & data[\"y\"].notna()\n+        x = data[\"x\"][mask]\n+        y = data[\"y\"][mask]\n         if x.nunique() <= self.order:\n             # TODO warn?\n             xx = yy = []\n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/_stats/regression.py b/seaborn/_stats/regression.py\nindex c25e7bb..46ed143 100644\n--- a/seaborn/_stats/regression.py\n+++ b/seaborn/_stats/regression.py\n@@ -8,8 +8,9 @@ class PolyFit(Stat):\n     order: int = 2\n     gridsize: int = 100\n     def _fit_predict(self, data):\n-        x = data['x']\n-        y = data['y']\n+        mask = data['x'].notna() & data['y'].notna()\n+        x = data['x'][mask]\n+        y = data['y'][mask]\n         if x.nunique() <= self.order:\n             xx = yy = []\n         else:\n", "normalized_occurrence": 1}
