{"model_name_or_path": "agentless", "instance_id": "django__django-13128", "model_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 215532d..c8316d7 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -427,8 +427,7 @@ class CombinedExpression(SQLiteNumericMixin, Expression):\n     def __init__(self, lhs, connector, rhs, output_field=None):\n         super().__init__(output_field=output_field)\n         self.connector = connector\n-        self.lhs = lhs\n-        self.rhs = rhs\n+        self.set_source_expressions([lhs, rhs])\n \n     def __repr__(self):\n         return \"<{}: {}>\".format(self.__class__.__name__, self)\n@@ -441,6 +440,13 @@ class CombinedExpression(SQLiteNumericMixin, Expression):\n \n     def set_source_expressions(self, exprs):\n         self.lhs, self.rhs = exprs\n+        self._resolve_output_field()\n+        \n+    def _resolve_output_field(self):\n+        lhs_type = self.lhs.output_field.get_internal_type()\n+        rhs_type = self.rhs.output_field.get_internal_type()\n+        if lhs_type == 'DateTimeField' and rhs_type == 'DateTimeField' and self.connector == self.SUB:\n+            self.output_field = fields.DurationField()\n \n     def as_sql(self, compiler, connection):\n         try:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex ae5c73e..aa79355 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -228,8 +228,7 @@ class CombinedExpression(SQLiteNumericMixin, Expression):\n     def __init__(self, lhs, connector, rhs, output_field=None):\n         super().__init__(output_field=output_field)\n         self.connector = connector\n-        self.lhs = lhs\n-        self.rhs = rhs\n+        self.set_source_expressions([lhs, rhs])\n     def __repr__(self):\n         return '<{}: {}>'.format(self.__class__.__name__, self)\n     def __str__(self):\n@@ -238,6 +237,12 @@ class CombinedExpression(SQLiteNumericMixin, Expression):\n         return [self.lhs, self.rhs]\n     def set_source_expressions(self, exprs):\n         self.lhs, self.rhs = exprs\n+        self._resolve_output_field()\n+    def _resolve_output_field(self):\n+        lhs_type = self.lhs.output_field.get_internal_type()\n+        rhs_type = self.rhs.output_field.get_internal_type()\n+        if lhs_type == 'DateTimeField' and rhs_type == 'DateTimeField' and (self.connector == self.SUB):\n+            self.output_field = fields.DurationField()\n     def as_sql(self, compiler, connection):\n         try:\n             lhs_type = self.lhs.output_field.get_internal_type()\n", "normalized_occurrence": 1}
