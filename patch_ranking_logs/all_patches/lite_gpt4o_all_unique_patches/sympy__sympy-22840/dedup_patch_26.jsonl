{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-22840", "model_patch": "diff --git a/sympy/simplify/cse_main.py b/sympy/simplify/cse_main.py\nindex fa99708..8bb6bf8 100644\n--- a/sympy/simplify/cse_main.py\n+++ b/sympy/simplify/cse_main.py\n@@ -671,9 +671,8 @@ def tree_cse(exprs, symbols, opt_subs=None, order='canonical', ignore=()):\n             except StopIteration:\n                 raise ValueError(\"Symbols iterator ran out of symbols.\")\n \n-            if isinstance(orig_expr, MatrixExpr):\n-                sym = MatrixSymbol(sym.name, orig_expr.rows,\n-                    orig_expr.cols)\n+            if isinstance(orig_expr, MatrixElement):\n+                sym = symbols.next()\n \n             subs[orig_expr] = sym\n             replacements.append((sym, new_expr))\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/cse_main.py b/sympy/simplify/cse_main.py\nindex d5cc8d7..988a003 100644\n--- a/sympy/simplify/cse_main.py\n+++ b/sympy/simplify/cse_main.py\n@@ -287,8 +287,8 @@ def tree_cse(exprs, symbols, opt_subs=None, order='canonical', ignore=()):\n                 sym = next(symbols)\n             except StopIteration:\n                 raise ValueError('Symbols iterator ran out of symbols.')\n-            if isinstance(orig_expr, MatrixExpr):\n-                sym = MatrixSymbol(sym.name, orig_expr.rows, orig_expr.cols)\n+            if isinstance(orig_expr, MatrixElement):\n+                sym = symbols.next()\n             subs[orig_expr] = sym\n             replacements.append((sym, new_expr))\n             return sym\n", "normalized_occurrence": 1}
