{"model_name_or_path": "agentless_claude", "instance_id": "pylint-dev__pylint-4551", "model_patch": "diff --git a/pylint/pyreverse/diagrams.py b/pylint/pyreverse/diagrams.py\nindex 0111bb1..7b730a3 100644\n--- a/pylint/pyreverse/diagrams.py\n+++ b/pylint/pyreverse/diagrams.py\n@@ -84,6 +84,22 @@ class ClassDiagram(Figure, FilterMixIn):\n             for n, m in node.items()\n             if isinstance(m, astroid.FunctionDef) and decorated_with_property(m)\n         ]\n+        \n+        # Handle annotated assignments (PEP 484 type hints)\n+        for node_name, values in node.items():\n+            if not isinstance(values, list):\n+                values = [values]\n+            for value in values:\n+                if isinstance(value, astroid.AssignName) and hasattr(value, 'annotation'):\n+                    if value.annotation:\n+                        try:\n+                            type_name = value.annotation.as_string()\n+                            if self.show_attr(node_name):\n+                                attrs.append(\"{} : {}\".format(node_name, type_name))\n+                        except (AttributeError, TypeError):\n+                            continue\n+        \n+        # Handle regular attributes and properties\n         for node_name, associated_nodes in (\n             list(node.instance_attrs_type.items())\n             + list(node.locals_type.items())\n@@ -91,6 +107,8 @@ class ClassDiagram(Figure, FilterMixIn):\n         ):\n             if not self.show_attr(node_name):\n                 continue\n+            if node_name in [attr.split(' : ')[0] for attr in attrs]:\n+                continue  # Skip if already handled by type hints\n             names = self.class_names(associated_nodes)\n             if names:\n                 node_name = \"{} : {}\".format(node_name, \", \".join(names))\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/pyreverse/diagrams.py b/pylint/pyreverse/diagrams.py\nindex d9b60dc..6f2b1be 100644\n--- a/pylint/pyreverse/diagrams.py\n+++ b/pylint/pyreverse/diagrams.py\n@@ -57,9 +57,23 @@ class ClassDiagram(Figure, FilterMixIn):\n         \"\"\"return visible attributes, possibly with class name\"\"\"\n         attrs = []\n         properties = [(n, m) for n, m in node.items() if isinstance(m, astroid.FunctionDef) and decorated_with_property(m)]\n+        for node_name, values in node.items():\n+            if not isinstance(values, list):\n+                values = [values]\n+            for value in values:\n+                if isinstance(value, astroid.AssignName) and hasattr(value, 'annotation'):\n+                    if value.annotation:\n+                        try:\n+                            type_name = value.annotation.as_string()\n+                            if self.show_attr(node_name):\n+                                attrs.append('{} : {}'.format(node_name, type_name))\n+                        except (AttributeError, TypeError):\n+                            continue\n         for node_name, associated_nodes in list(node.instance_attrs_type.items()) + list(node.locals_type.items()) + properties:\n             if not self.show_attr(node_name):\n                 continue\n+            if node_name in [attr.split(' : ')[0] for attr in attrs]:\n+                continue\n             names = self.class_names(associated_nodes)\n             if names:\n                 node_name = '{} : {}'.format(node_name, ', '.join(names))\n", "normalized_occurrence": 1}
