{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-11618", "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex 7c58cbf..8994271 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -266,8 +266,14 @@ class Point(GeometryEntity):\n         sqrt(x**2 + y**2)\n \n         \"\"\"\n-        return sqrt(sum([(a - b)**2 for a, b in zip(\n-            self.args, p.args if isinstance(p, Point) else p)]))\n+        # Get the args of the other point\n+        p_args = p.args if isinstance(p, Point) else p\n+        # Use the maximum dimension between the two points\n+        max_dim = max(len(self.args), len(p_args))\n+        # Extend both points with zeros if needed\n+        p1_coords = self.args + (S.Zero,) * (max_dim - len(self.args))\n+        p2_coords = p_args + (S.Zero,) * (max_dim - len(p_args))\n+        return sqrt(sum([(a - b)**2 for a, b in zip(p1_coords, p2_coords)]))\n \n     def taxicab_distance(self, p):\n         \"\"\"The Taxicab Distance from self to point p.\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex ecc6940..0e415d8 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -65,7 +65,11 @@ class Point(GeometryEntity):\n     def ambient_dimension(self):\n         return len(self)\n     def distance(self, p):\n-        return sqrt(sum([(a - b) ** 2 for a, b in zip(self.args, p.args if isinstance(p, Point) else p)]))\n+        p_args = p.args if isinstance(p, Point) else p\n+        max_dim = max(len(self.args), len(p_args))\n+        p1_coords = self.args + (S.Zero,) * (max_dim - len(self.args))\n+        p2_coords = p_args + (S.Zero,) * (max_dim - len(p_args))\n+        return sqrt(sum([(a - b) ** 2 for a, b in zip(p1_coords, p2_coords)]))\n     def taxicab_distance(self, p):\n         p = Point(p)\n         return sum((abs(a - b) for a, b in zip(self.args, p.args)))\n", "normalized_occurrence": 1}
