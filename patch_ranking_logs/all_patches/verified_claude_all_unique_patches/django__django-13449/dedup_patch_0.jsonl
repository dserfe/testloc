{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13449", "model_patch": "diff --git a/django/db/models/functions/window.py b/django/db/models/functions/window.py\nindex 01e5980..00eec63 100644\n--- a/django/db/models/functions/window.py\n+++ b/django/db/models/functions/window.py\n@@ -52,6 +52,17 @@ class LagLeadFunction(Func):\n class Lag(LagLeadFunction):\n     function = 'LAG'\n \n+    def _resolve_output_field(self):\n+        sources = self.get_source_expressions()\n+        return sources[0].output_field\n+\n+    def as_sqlite(self, compiler, connection, **extra_context):\n+        # For DecimalField, cast the whole window function instead of just LAG\n+        template = None\n+        if isinstance(self.output_field, DecimalField):\n+            template = 'CAST(%(function)s(%(expressions)s) AS NUMERIC)'\n+        return self.as_sql(compiler, connection, template=template, **extra_context)\n+\n \n class LastValue(Func):\n     arity = 1\n", "normalized_patch": "--- a/django/db/models/functions/window.py\n+++ b/django/db/models/functions/window.py\n+    def _resolve_output_field(self):\n+        sources = self.get_source_expressions()\n+        return sources[0].output_field\n+    def as_sqlite(self, compiler, connection, **extra_context):\n+        template = None\n+        if isinstance(self.output_field, DecimalField):\n+            template = 'CAST(%(function)s(%(expressions)s) AS NUMERIC)'\n+        return self.as_sql(compiler, connection, template=template, **extra_context)", "normalized_occurrence": 1}
