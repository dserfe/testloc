{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16136", "model_patch": "diff --git a/django/views/generic/base.py b/django/views/generic/base.py\nindex d6fb4a7..78e81f4 100644\n--- a/django/views/generic/base.py\n+++ b/django/views/generic/base.py\n@@ -148,7 +148,12 @@ class View:\n             request.path,\n             extra={\"status_code\": 405, \"request\": request},\n         )\n-        return HttpResponseNotAllowed(self._allowed_methods())\n+        response = HttpResponseNotAllowed(self._allowed_methods())\n+        if self.view_is_async:\n+            async def func():\n+                return response\n+            return func()\n+        return response\n \n     def options(self, request, *args, **kwargs):\n         \"\"\"Handle responding to requests for the OPTIONS HTTP verb.\"\"\"\n", "occurrence": 10, "normalized_patch": "diff --git a/django/views/generic/base.py b/django/views/generic/base.py\nindex 70f1b00..af2cfc8 100644\n--- a/django/views/generic/base.py\n+++ b/django/views/generic/base.py\n@@ -64,7 +64,12 @@ class View:\n         return handler(request, *args, **kwargs)\n     def http_method_not_allowed(self, request, *args, **kwargs):\n         logger.warning('Method Not Allowed (%s): %s', request.method, request.path, extra={'status_code': 405, 'request': request})\n-        return HttpResponseNotAllowed(self._allowed_methods())\n+        response = HttpResponseNotAllowed(self._allowed_methods())\n+        if self.view_is_async:\n+            async def func():\n+                return response\n+            return func()\n+        return response\n     def options(self, request, *args, **kwargs):\n         response = HttpResponse()\n         response.headers['Allow'] = ', '.join(self._allowed_methods())\n", "normalized_occurrence": 10}
