{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8801", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 9e67bb6..60b1f74 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -686,8 +686,10 @@ class Documenter:\n                         return False\n                     elif name in self.get_attr(cls, '__annotations__', {}):\n                         return False\n-                    elif isinstance(obj, ObjectMember) and obj.class_ is cls:\n+                    elif name in cls.__dict__ or name in self.get_attr(cls, '__annotations__', {}):\n                         return False\n+                    elif isinstance(obj, ObjectMember) and obj.class_ is cls:\n+                        return True\n \n             return False\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex e1d3d5c..c4242e5 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -354,8 +354,10 @@ class Documenter:\n                         return False\n                     elif name in self.get_attr(cls, '__annotations__', {}):\n                         return False\n-                    elif isinstance(obj, ObjectMember) and obj.class_ is cls:\n+                    elif name in cls.__dict__ or name in self.get_attr(cls, '__annotations__', {}):\n                         return False\n+                    elif isinstance(obj, ObjectMember) and obj.class_ is cls:\n+                        return True\n             return False\n         ret = []\n         namespace = '.'.join(self.objpath)\n", "normalized_occurrence": 1}
