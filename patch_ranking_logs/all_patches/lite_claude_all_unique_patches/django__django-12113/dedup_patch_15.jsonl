{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12113", "model_patch": "diff --git a/django/db/backends/sqlite3/base.py b/django/db/backends/sqlite3/base.py\nindex 730e4b7..539f373 100644\n--- a/django/db/backends/sqlite3/base.py\n+++ b/django/db/backends/sqlite3/base.py\n@@ -249,6 +249,10 @@ class DatabaseWrapper(BaseDatabaseWrapper):\n         conn.create_aggregate('VAR_POP', 1, list_aggregate(statistics.pvariance))\n         conn.create_aggregate('VAR_SAMP', 1, list_aggregate(statistics.variance))\n         conn.execute('PRAGMA foreign_keys = ON')\n+        # Set a default busy timeout of 5 seconds to prevent \"database is locked\" errors\n+        conn.execute('PRAGMA busy_timeout = 5000')\n+        # Use Write-Ahead Logging journal mode for better concurrency\n+        conn.execute('PRAGMA journal_mode = WAL')\n         return conn\n \n     def init_connection_state(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/sqlite3/base.py b/django/db/backends/sqlite3/base.py\nindex f4e71e4..31fd899 100644\n--- a/django/db/backends/sqlite3/base.py\n+++ b/django/db/backends/sqlite3/base.py\n@@ -119,6 +119,8 @@ class DatabaseWrapper(BaseDatabaseWrapper):\n         conn.create_aggregate('VAR_POP', 1, list_aggregate(statistics.pvariance))\n         conn.create_aggregate('VAR_SAMP', 1, list_aggregate(statistics.variance))\n         conn.execute('PRAGMA foreign_keys = ON')\n+        conn.execute('PRAGMA busy_timeout = 5000')\n+        conn.execute('PRAGMA journal_mode = WAL')\n         return conn\n     def init_connection_state(self):\n         pass\n", "normalized_occurrence": 3}
