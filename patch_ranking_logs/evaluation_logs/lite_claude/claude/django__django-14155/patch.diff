diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py
index 43e675a..1a5a8df 100644
--- a/django/urls/resolvers.py
+++ b/django/urls/resolvers.py
@@ -19,6 +19,7 @@ from django.core.checks import Error, Warning
 from django.core.checks.urls import check_resolver
 from django.core.exceptions import ImproperlyConfigured, ViewDoesNotExist
 from django.utils.datastructures import MultiValueDict
+import functools
 from django.utils.functional import cached_property
 from django.utils.http import RFC3986_SUBDELIMS, escape_leading_slashes
 from django.utils.regex_helper import _lazy_re_compile, normalize
@@ -45,7 +46,22 @@ class ResolverMatch:
         self.namespaces = [x for x in namespaces if x] if namespaces else []
         self.namespace = ':'.join(self.namespaces)
 
-        if not hasattr(func, '__name__'):
+        # Handle functools.partial
+        if isinstance(func, functools.partial):
+            # Get the underlying function
+            inner_func = func.func
+            if not hasattr(inner_func, '__name__'):
+                # A class-based view
+                self._func_path = inner_func.__class__.__module__ + '.' + inner_func.__class__.__name__
+            else:
+                # A function-based view
+                self._func_path = inner_func.__module__ + '.' + inner_func.__name__
+            # Add partial args/kwargs to the path
+            partial_args = [repr(arg) for arg in func.args]
+            partial_kwargs = [f"{k}={repr(v)}" for k, v in func.keywords.items()] if func.keywords else []
+            partial_sig = ', '.join(partial_args + partial_kwargs)
+            self._func_path = f"{self._func_path}({partial_sig})"
+        elif not hasattr(func, '__name__'):
             # A class-based view
             self._func_path = func.__class__.__module__ + '.' + func.__class__.__name__
         else:
