{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-15875", "model_patch": "diff --git a/sympy/core/add.py b/sympy/core/add.py\nindex 1046af8..3f2c986 100644\n--- a/sympy/core/add.py\n+++ b/sympy/core/add.py\n@@ -536,8 +536,8 @@ class Add(Expr, AssocOp):\n             return\n         nz = []\n         z = 0\n-        im_or_z = False\n-        im = False\n+        im_or_z = 0\n+        im = 0\n         for a in self.args:\n             if a.is_real:\n                 if a.is_zero:\n@@ -546,10 +546,16 @@ class Add(Expr, AssocOp):\n                     nz.append(a)\n                 else:\n                     return\n-            elif a.is_imaginary:\n-                im = True\n-            elif (S.ImaginaryUnit*a).is_real:\n-                im_or_z = True\n+            elif a.is_imaginary and a.is_zero is not None:\n+                if a.is_zero:\n+                    z += 1\n+                else:\n+                    im += 1\n+            elif (S.ImaginaryUnit*a).is_real and (S.ImaginaryUnit*a).is_zero is not None:\n+                if (S.ImaginaryUnit*a).is_zero:\n+                    z += 1\n+                else:\n+                    im_or_z += 1\n             else:\n                 return\n         if z == len(self.args):\n@@ -558,9 +564,9 @@ class Add(Expr, AssocOp):\n             return None\n         b = self.func(*nz)\n         if b.is_zero:\n-            if not im_or_z and not im:\n+            if im_or_z == 0 and im == 0:\n                 return True\n-            if im and not im_or_z:\n+            if im > 0 and im_or_z == 0:\n                 return False\n         if b.is_zero is False:\n             return False\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/add.py b/sympy/core/add.py\nindex 63cb816..6d5a489 100644\n--- a/sympy/core/add.py\n+++ b/sympy/core/add.py\n@@ -290,8 +290,8 @@ class Add(Expr, AssocOp):\n             return\n         nz = []\n         z = 0\n-        im_or_z = False\n-        im = False\n+        im_or_z = 0\n+        im = 0\n         for a in self.args:\n             if a.is_real:\n                 if a.is_zero:\n@@ -300,10 +300,16 @@ class Add(Expr, AssocOp):\n                     nz.append(a)\n                 else:\n                     return\n-            elif a.is_imaginary:\n-                im = True\n-            elif (S.ImaginaryUnit * a).is_real:\n-                im_or_z = True\n+            elif a.is_imaginary and a.is_zero is not None:\n+                if a.is_zero:\n+                    z += 1\n+                else:\n+                    im += 1\n+            elif (S.ImaginaryUnit * a).is_real and (S.ImaginaryUnit * a).is_zero is not None:\n+                if (S.ImaginaryUnit * a).is_zero:\n+                    z += 1\n+                else:\n+                    im_or_z += 1\n             else:\n                 return\n         if z == len(self.args):\n@@ -312,9 +318,9 @@ class Add(Expr, AssocOp):\n             return None\n         b = self.func(*nz)\n         if b.is_zero:\n-            if not im_or_z and (not im):\n+            if im_or_z == 0 and im == 0:\n                 return True\n-            if im and (not im_or_z):\n+            if im > 0 and im_or_z == 0:\n                 return False\n         if b.is_zero is False:\n             return False\n", "normalized_occurrence": 1}
