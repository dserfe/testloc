{"model_name_or_path": "agentless", "instance_id": "django__django-13128", "model_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 215532d..81dba1a 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -478,6 +478,12 @@ class CombinedExpression(SQLiteNumericMixin, Expression):\n         c.is_summary = summarize\n         c.lhs = c.lhs.resolve_expression(query, allow_joins, reuse, summarize, for_save)\n         c.rhs = c.rhs.resolve_expression(query, allow_joins, reuse, summarize, for_save)\n+        # Ensure output_field is set correctly for temporal subtractions\n+        datetime_fields = {'DateField', 'DateTimeField', 'TimeField'}\n+        if self.connector == self.SUB:\n+            if hasattr(c.lhs, 'output_field') and c.lhs.output_field.get_internal_type() in datetime_fields:\n+                if hasattr(c.rhs, 'output_field') and c.rhs.output_field.get_internal_type() == c.lhs.output_field.get_internal_type():\n+                    c.output_field = fields.DurationField()\n         return c\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex ae5c73e..d78b492 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -268,6 +268,11 @@ class CombinedExpression(SQLiteNumericMixin, Expression):\n         c.is_summary = summarize\n         c.lhs = c.lhs.resolve_expression(query, allow_joins, reuse, summarize, for_save)\n         c.rhs = c.rhs.resolve_expression(query, allow_joins, reuse, summarize, for_save)\n+        datetime_fields = {'DateField', 'DateTimeField', 'TimeField'}\n+        if self.connector == self.SUB:\n+            if hasattr(c.lhs, 'output_field') and c.lhs.output_field.get_internal_type() in datetime_fields:\n+                if hasattr(c.rhs, 'output_field') and c.rhs.output_field.get_internal_type() == c.lhs.output_field.get_internal_type():\n+                    c.output_field = fields.DurationField()\n         return c\n class DurationExpression(CombinedExpression):\n     def compile(self, side, compiler, connection):\n", "normalized_occurrence": 1}
