{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9673", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 51811ca..b2d91f0 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -33,7 +33,7 @@ def record_typehints(app: Sphinx, objtype: str, name: str, obj: Any,\n                     annotation[param.name] = typing.stringify(param.annotation)\n             if sig.return_annotation is not sig.empty:\n                 annotation['return'] = typing.stringify(sig.return_annotation)\n-    except (TypeError, ValueError):\n+    except (TypeError, ValueError, AttributeError):\n         pass\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 03a755b..d26ed0b 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -17,7 +17,7 @@ def record_typehints(app: Sphinx, objtype: str, name: str, obj: Any, options: Di\n                     annotation[param.name] = typing.stringify(param.annotation)\n             if sig.return_annotation is not sig.empty:\n                 annotation['return'] = typing.stringify(sig.return_annotation)\n-    except (TypeError, ValueError):\n+    except (TypeError, ValueError, AttributeError):\n         pass\n def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element) -> None:\n     if domain != 'py':\n", "normalized_occurrence": 1}
