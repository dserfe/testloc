{"model_name_or_path": "agentless", "instance_id": "psf__requests-5414", "model_patch": "diff --git a/requests/models.py b/requests/models.py\nindex b6afac6..4571a6b 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -353,8 +353,8 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n \n         try:\n             host = idna.encode(host, uts46=True).decode('utf-8')\n-        except idna.IDNAError:\n-            raise UnicodeError\n+        except idna.IDNAError as e:\n+            raise InvalidURL('URL has an invalid label.') from e\n         return host\n \n     def prepare_url(self, url, params):\n", "occurrence": 3, "normalized_patch": "diff --git a/requests/models.py b/requests/models.py\nindex 0a92d68..0c9cfa8 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -172,8 +172,8 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         import idna\n         try:\n             host = idna.encode(host, uts46=True).decode('utf-8')\n-        except idna.IDNAError:\n-            raise UnicodeError\n+        except idna.IDNAError as e:\n+            raise InvalidURL('URL has an invalid label.') from e\n         return host\n     def prepare_url(self, url, params):\n         if isinstance(url, bytes):\n", "normalized_occurrence": 3}
