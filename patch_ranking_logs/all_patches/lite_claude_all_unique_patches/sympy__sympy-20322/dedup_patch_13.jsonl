{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-20322", "model_patch": "diff --git a/sympy/functions/elementary/integers.py b/sympy/functions/elementary/integers.py\nindex fbc5a14..8cbe20b 100644\n--- a/sympy/functions/elementary/integers.py\n+++ b/sympy/functions/elementary/integers.py\n@@ -271,8 +271,12 @@ class ceiling(RoundFunction):\n             return arg.approximation_interval(Integer)[1]\n \n     def _eval_nseries(self, x, n, logx, cdir=0):\n-        r = self.subs(x, 0)\n         args = self.args[0]\n+        # Don't expand/simplify expressions inside ceiling\n+        # to maintain consistent behavior\n+        if not x in args.free_symbols:\n+            return self\n+        r = self.subs(x, 0)\n         args0 = args.subs(x, 0)\n         if args0 == r:\n             direction = (args - args0).leadterm(x)[0]\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/integers.py b/sympy/functions/elementary/integers.py\nindex b8324b0..128ffd0 100644\n--- a/sympy/functions/elementary/integers.py\n+++ b/sympy/functions/elementary/integers.py\n@@ -148,8 +148,10 @@ class ceiling(RoundFunction):\n         if arg.is_NumberSymbol:\n             return arg.approximation_interval(Integer)[1]\n     def _eval_nseries(self, x, n, logx, cdir=0):\n-        r = self.subs(x, 0)\n         args = self.args[0]\n+        if not x in args.free_symbols:\n+            return self\n+        r = self.subs(x, 0)\n         args0 = args.subs(x, 0)\n         if args0 == r:\n             direction = (args - args0).leadterm(x)[0]\n", "normalized_occurrence": 1}
