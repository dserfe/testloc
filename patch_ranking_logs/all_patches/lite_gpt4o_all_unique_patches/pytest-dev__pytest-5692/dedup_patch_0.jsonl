{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-5692", "model_patch": "diff --git a/src/_pytest/junitxml.py b/src/_pytest/junitxml.py\nindex 092ef97..19f154d 100644\n--- a/src/_pytest/junitxml.py\n+++ b/src/_pytest/junitxml.py\n@@ -657,6 +657,12 @@ class LogXML:\n         )\n         logfile.write('<?xml version=\"1.0\" encoding=\"utf-8\"?>')\n \n+        import socket\n+        from datetime import datetime\n+\n+        hostname = socket.gethostname()\n+        timestamp = datetime.utcnow().isoformat()\n+\n         suite_node = Junit.testsuite(\n             self._get_global_properties_node(),\n             [x.to_xml() for x in self.node_reporters_ordered],\n@@ -666,6 +672,8 @@ class LogXML:\n             skipped=self.stats[\"skipped\"],\n             tests=numtests,\n             time=\"%.3f\" % suite_time_delta,\n+            hostname=hostname,\n+            timestamp=timestamp,\n         )\n         logfile.write(Junit.testsuites([suite_node]).unicode(indent=0))\n         logfile.close()\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/junitxml.py b/src/_pytest/junitxml.py\nindex 4be8fb1..08d4b00 100644\n--- a/src/_pytest/junitxml.py\n+++ b/src/_pytest/junitxml.py\n@@ -335,7 +335,11 @@ class LogXML:\n         suite_time_delta = suite_stop_time - self.suite_start_time\n         numtests = self.stats['passed'] + self.stats['failure'] + self.stats['skipped'] + self.stats['error'] - self.cnt_double_fail_tests\n         logfile.write('<?xml version=\"1.0\" encoding=\"utf-8\"?>')\n-        suite_node = Junit.testsuite(self._get_global_properties_node(), [x.to_xml() for x in self.node_reporters_ordered], name=self.suite_name, errors=self.stats['error'], failures=self.stats['failure'], skipped=self.stats['skipped'], tests=numtests, time='%.3f' % suite_time_delta)\n+        import socket\n+        from datetime import datetime\n+        hostname = socket.gethostname()\n+        timestamp = datetime.utcnow().isoformat()\n+        suite_node = Junit.testsuite(self._get_global_properties_node(), [x.to_xml() for x in self.node_reporters_ordered], name=self.suite_name, errors=self.stats['error'], failures=self.stats['failure'], skipped=self.stats['skipped'], tests=numtests, time='%.3f' % suite_time_delta, hostname=hostname, timestamp=timestamp)\n         logfile.write(Junit.testsuites([suite_node]).unicode(indent=0))\n         logfile.close()\n     def pytest_terminal_summary(self, terminalreporter):\n", "normalized_occurrence": 1}
