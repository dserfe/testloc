{"model_name_or_path": "agentless", "instance_id": "django__django-14122", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex be54ccd..7819418 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -125,7 +125,10 @@ class SQLCompiler:\n             cols = expr.get_group_by_cols()\n             for col in cols:\n                 expressions.append(col)\n+        meta_ordering = self.query.model._meta.ordering if self.query.model else []\n         for expr, (sql, params, is_ref) in order_by:\n+            if expr in meta_ordering:\n+                continue\n             # Skip References to the select clause, as all expressions in the\n             # select clause are already part of the group by.\n             if not is_ref:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 4a5ff10..f99ac0e 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -55,7 +55,10 @@ class SQLCompiler:\n             cols = expr.get_group_by_cols()\n             for col in cols:\n                 expressions.append(col)\n+        meta_ordering = self.query.model._meta.ordering if self.query.model else []\n         for expr, (sql, params, is_ref) in order_by:\n+            if expr in meta_ordering:\n+                continue\n             if not is_ref:\n                 expressions.extend(expr.get_group_by_cols())\n         having_group_by = self.having.get_group_by_cols() if self.having else ()\n", "normalized_occurrence": 1}
