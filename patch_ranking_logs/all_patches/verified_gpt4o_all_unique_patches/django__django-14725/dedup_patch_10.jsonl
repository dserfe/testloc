{"model_name_or_path": "agentless", "instance_id": "django__django-14725", "model_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 2db5c72..4dc2fe7 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -573,7 +573,8 @@ class BaseModelFormSet(BaseFormSet):\n     unique_fields = set()\n \n     def __init__(self, data=None, files=None, auto_id='id_%s', prefix=None,\n-                 queryset=None, *, initial=None, **kwargs):\n+                 queryset=None, *, initial=None, can_create=True, **kwargs):\n+        self.can_create = can_create\n         self.queryset = queryset\n         self.initial_extra = initial\n         super().__init__(**{'data': data, 'files': files, 'auto_id': auto_id, 'prefix': prefix, **kwargs})\n@@ -600,7 +601,7 @@ class BaseModelFormSet(BaseFormSet):\n \n     def _construct_form(self, i, **kwargs):\n         pk_required = i < self.initial_form_count()\n-        if pk_required:\n+        if pk_required or (not pk_required and not self.can_create):\n             if self.is_bound:\n                 pk_key = '%s-%s' % (self.add_prefix(i), self.model._meta.pk.name)\n                 try:\n@@ -628,7 +629,7 @@ class BaseModelFormSet(BaseFormSet):\n             except IndexError:\n                 pass\n         form = super()._construct_form(i, **kwargs)\n-        if pk_required:\n+        if pk_required or (not pk_required and not self.can_create):\n             form.fields[self.model._meta.pk.name].required = True\n         return form\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 7024f2a..6f3006a 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -273,7 +273,8 @@ def modelform_factory(model, form=ModelForm, fields=None, exclude=None, formfiel\n class BaseModelFormSet(BaseFormSet):\n     model = None\n     unique_fields = set()\n-    def __init__(self, data=None, files=None, auto_id='id_%s', prefix=None, queryset=None, *, initial=None, **kwargs):\n+    def __init__(self, data=None, files=None, auto_id='id_%s', prefix=None, queryset=None, *, initial=None, can_create=True, **kwargs):\n+        self.can_create = can_create\n         self.queryset = queryset\n         self.initial_extra = initial\n         super().__init__(**{'data': data, 'files': files, 'auto_id': auto_id, 'prefix': prefix, **kwargs})\n@@ -291,7 +292,7 @@ class BaseModelFormSet(BaseFormSet):\n         return field.to_python\n     def _construct_form(self, i, **kwargs):\n         pk_required = i < self.initial_form_count()\n-        if pk_required:\n+        if pk_required or (not pk_required and (not self.can_create)):\n             if self.is_bound:\n                 pk_key = '%s-%s' % (self.add_prefix(i), self.model._meta.pk.name)\n                 try:\n@@ -314,7 +315,7 @@ class BaseModelFormSet(BaseFormSet):\n             except IndexError:\n                 pass\n         form = super()._construct_form(i, **kwargs)\n-        if pk_required:\n+        if pk_required or (not pk_required and (not self.can_create)):\n             form.fields[self.model._meta.pk.name].required = True\n         return form\n     def get_queryset(self):\n", "normalized_occurrence": 1}
