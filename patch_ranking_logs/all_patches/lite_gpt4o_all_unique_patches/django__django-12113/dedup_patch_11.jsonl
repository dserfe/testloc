{"model_name_or_path": "agentless", "instance_id": "django__django-12113", "model_patch": "diff --git a/django/db/backends/sqlite3/base.py b/django/db/backends/sqlite3/base.py\nindex 730e4b7..76ac135 100644\n--- a/django/db/backends/sqlite3/base.py\n+++ b/django/db/backends/sqlite3/base.py\n@@ -197,12 +197,16 @@ class DatabaseWrapper(BaseDatabaseWrapper):\n                 RuntimeWarning\n             )\n         kwargs.update({'check_same_thread': False, 'uri': True})\n-        return kwargs\n+        # Ensure the database is not locked by allowing only one thread to access it at a time\n+        return {**kwargs, 'timeout': 30}\n \n     @async_unsafe\n     def get_new_connection(self, conn_params):\n         conn = Database.connect(**conn_params)\n         conn.create_function(\"django_date_extract\", 2, _sqlite_datetime_extract)\n+        conn.execute('PRAGMA synchronous = OFF')\n+        conn.execute('PRAGMA journal_mode = MEMORY')\n+        conn.execute('PRAGMA locking_mode = EXCLUSIVE')\n         conn.create_function(\"django_date_trunc\", 2, _sqlite_date_trunc)\n         conn.create_function('django_datetime_cast_date', 3, _sqlite_datetime_cast_date)\n         conn.create_function('django_datetime_cast_time', 3, _sqlite_datetime_cast_time)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/sqlite3/base.py b/django/db/backends/sqlite3/base.py\nindex f4e71e4..c90100c 100644\n--- a/django/db/backends/sqlite3/base.py\n+++ b/django/db/backends/sqlite3/base.py\n@@ -68,11 +68,14 @@ class DatabaseWrapper(BaseDatabaseWrapper):\n         if 'check_same_thread' in kwargs and kwargs['check_same_thread']:\n             warnings.warn('The `check_same_thread` option was provided and set to True. It will be overridden with False. Use the `DatabaseWrapper.allow_thread_sharing` property instead for controlling thread shareability.', RuntimeWarning)\n         kwargs.update({'check_same_thread': False, 'uri': True})\n-        return kwargs\n+        return {**kwargs, 'timeout': 30}\n     @async_unsafe\n     def get_new_connection(self, conn_params):\n         conn = Database.connect(**conn_params)\n         conn.create_function('django_date_extract', 2, _sqlite_datetime_extract)\n+        conn.execute('PRAGMA synchronous = OFF')\n+        conn.execute('PRAGMA journal_mode = MEMORY')\n+        conn.execute('PRAGMA locking_mode = EXCLUSIVE')\n         conn.create_function('django_date_trunc', 2, _sqlite_date_trunc)\n         conn.create_function('django_datetime_cast_date', 3, _sqlite_datetime_cast_date)\n         conn.create_function('django_datetime_cast_time', 3, _sqlite_datetime_cast_time)\n", "normalized_occurrence": 1}
