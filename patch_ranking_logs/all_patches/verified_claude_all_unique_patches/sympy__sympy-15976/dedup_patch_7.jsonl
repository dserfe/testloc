{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-15976", "model_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 85af872..3e65b99 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -770,10 +770,16 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n             if s in greek_unicode:\n                 return greek_unicode.get(s)\n             else:\n+                # Split symbol name if it ends with digits\n+                import re\n+                match = re.match(r'([a-zA-Z]+)([0-9]+)$', s)\n+                if match:\n+                    return [match.group(1), match.group(2)]\n                 return s\n \n         name, supers, subs = split_super_sub(sym.name)\n-        name = translate(name)\n+        translated = translate(name)\n+        name = [translated] if isinstance(translated, str) else translated\n         supers = [translate(sup) for sup in supers]\n         subs = [translate(sub) for sub in subs]\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 28d3e1a..ee6cfdf 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -539,9 +539,14 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n             if s in greek_unicode:\n                 return greek_unicode.get(s)\n             else:\n+                import re\n+                match = re.match('([a-zA-Z]+)([0-9]+)$', s)\n+                if match:\n+                    return [match.group(1), match.group(2)]\n                 return s\n         name, supers, subs = split_super_sub(sym.name)\n-        name = translate(name)\n+        translated = translate(name)\n+        name = [translated] if isinstance(translated, str) else translated\n         supers = [translate(sup) for sup in supers]\n         subs = [translate(sub) for sub in subs]\n         mname = self.dom.createElement('mi')\n", "normalized_occurrence": 1}
