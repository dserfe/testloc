{"model_name_or_path": "agentless", "instance_id": "django__django-16116", "model_patch": "diff --git a/django/core/management/commands/makemigrations.py b/django/core/management/commands/makemigrations.py\nindex f0e76b4..9907023 100644\n--- a/django/core/management/commands/makemigrations.py\n+++ b/django/core/management/commands/makemigrations.py\n@@ -113,10 +113,14 @@ class Command(BaseCommand):\n         check_changes = options[\"check_changes\"]\n         self.scriptable = options[\"scriptable\"]\n         self.update = options[\"update\"]\n+        self.check_changes = options[\"check_changes\"]\n         # If logs and prompts are diverted to stderr, remove the ERROR style.\n         if self.scriptable:\n             self.stderr.style_func = None\n \n+        if self.check_changes:\n+            self.dry_run = True\n+\n         # Make sure the app they asked for exists\n         app_labels = set(app_labels)\n         has_bad_labels = False\n@@ -252,7 +256,7 @@ class Command(BaseCommand):\n                 self.write_to_last_migration_files(changes)\n             else:\n                 self.write_migration_files(changes)\n-            if check_changes:\n+            if self.check_changes:\n                 sys.exit(1)\n \n     def write_to_last_migration_files(self, changes):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/management/commands/makemigrations.py b/django/core/management/commands/makemigrations.py\nindex be2b711..e0baaee 100644\n--- a/django/core/management/commands/makemigrations.py\n+++ b/django/core/management/commands/makemigrations.py\n@@ -49,8 +49,11 @@ class Command(BaseCommand):\n         check_changes = options['check_changes']\n         self.scriptable = options['scriptable']\n         self.update = options['update']\n+        self.check_changes = options['check_changes']\n         if self.scriptable:\n             self.stderr.style_func = None\n+        if self.check_changes:\n+            self.dry_run = True\n         app_labels = set(app_labels)\n         has_bad_labels = False\n         for app_label in app_labels:\n@@ -109,7 +112,7 @@ class Command(BaseCommand):\n                 self.write_to_last_migration_files(changes)\n             else:\n                 self.write_migration_files(changes)\n-            if check_changes:\n+            if self.check_changes:\n                 sys.exit(1)\n     def write_to_last_migration_files(self, changes):\n         loader = MigrationLoader(connections[DEFAULT_DB_ALIAS])\n", "normalized_occurrence": 1}
