{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13915", "model_patch": "diff --git a/sympy/core/basic.py b/sympy/core/basic.py\nindex 0977e81..f90be2d 100644\n--- a/sympy/core/basic.py\n+++ b/sympy/core/basic.py\n@@ -920,6 +920,10 @@ class Basic(with_metaclass(ManagedProperties)):\n                 rv = rv._subs(old, new, **kwargs)\n                 if not isinstance(rv, Basic):\n                     break\n+            from sympy.core.singleton import S\n+            if rv.has(S.ComplexInfinity, S.NaN, S.zoo):\n+                from sympy import limit\n+                rv = limit(self, old, new)\n             return rv\n \n     @cacheit\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/basic.py b/sympy/core/basic.py\nindex 782db85..f69ecea 100644\n--- a/sympy/core/basic.py\n+++ b/sympy/core/basic.py\n@@ -329,6 +329,10 @@ class Basic(with_metaclass(ManagedProperties)):\n                 rv = rv._subs(old, new, **kwargs)\n                 if not isinstance(rv, Basic):\n                     break\n+            from sympy.core.singleton import S\n+            if rv.has(S.ComplexInfinity, S.NaN, S.zoo):\n+                from sympy import limit\n+                rv = limit(self, old, new)\n             return rv\n     @cacheit\n     def _subs(self, old, new, **hints):\n", "normalized_occurrence": 1}
