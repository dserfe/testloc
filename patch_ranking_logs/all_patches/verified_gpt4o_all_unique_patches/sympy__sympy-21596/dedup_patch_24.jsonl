{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-21596", "model_patch": "diff --git a/sympy/sets/sets.py b/sympy/sets/sets.py\nindex 78d756e..acaced6 100644\n--- a/sympy/sets/sets.py\n+++ b/sympy/sets/sets.py\n@@ -132,6 +132,12 @@ class Set(Basic, EvalfMixin):\n         EmptySet\n \n         \"\"\"\n+        if isinstance(self, ImageSet) and other == S.Reals:\n+            real_expr = [n for n in self.expr.free_symbols if n.is_real]\n+            if real_expr:\n+                sol = solve(Im(self.expr), real_expr[0])\n+                reals = [self.expr.subs(real_expr[0], s) for s in sol if s.is_real]\n+                return FiniteSet(*reals)\n         return Intersection(self, other)\n \n     def intersection(self, other):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/sets/sets.py b/sympy/sets/sets.py\nindex 09f6d6f..c8c4c7e 100644\n--- a/sympy/sets/sets.py\n+++ b/sympy/sets/sets.py\n@@ -54,6 +54,12 @@ class Set(Basic, EvalfMixin):\n     def union(self, other):\n         return Union(self, other)\n     def intersect(self, other):\n+        if isinstance(self, ImageSet) and other == S.Reals:\n+            real_expr = [n for n in self.expr.free_symbols if n.is_real]\n+            if real_expr:\n+                sol = solve(Im(self.expr), real_expr[0])\n+                reals = [self.expr.subs(real_expr[0], s) for s in sol if s.is_real]\n+                return FiniteSet(*reals)\n         return Intersection(self, other)\n     def intersection(self, other):\n         return self.intersect(other)\n", "normalized_occurrence": 1}
