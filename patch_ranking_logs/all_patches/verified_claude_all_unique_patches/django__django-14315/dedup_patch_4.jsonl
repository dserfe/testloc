{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14315", "model_patch": "diff --git a/django/db/backends/postgresql/client.py b/django/db/backends/postgresql/client.py\nindex 8b69ea1..0dd95d3 100644\n--- a/django/db/backends/postgresql/client.py\n+++ b/django/db/backends/postgresql/client.py\n@@ -1,3 +1,4 @@\n+\n import signal\n \n from django.db.backends.base.client import BaseDatabaseClient\n@@ -36,21 +37,24 @@ class DatabaseClient(BaseDatabaseClient):\n             args += [dbname]\n         args.extend(parameters)\n \n-        env = {}\n+        env = None\n+        env_vars = {}\n         if passwd:\n-            env['PGPASSWORD'] = str(passwd)\n+            env_vars['PGPASSWORD'] = str(passwd)\n         if service:\n-            env['PGSERVICE'] = str(service)\n+            env_vars['PGSERVICE'] = str(service)\n         if sslmode:\n-            env['PGSSLMODE'] = str(sslmode)\n+            env_vars['PGSSLMODE'] = str(sslmode)\n         if sslrootcert:\n-            env['PGSSLROOTCERT'] = str(sslrootcert)\n+            env_vars['PGSSLROOTCERT'] = str(sslrootcert)\n         if sslcert:\n-            env['PGSSLCERT'] = str(sslcert)\n+            env_vars['PGSSLCERT'] = str(sslcert)\n         if sslkey:\n-            env['PGSSLKEY'] = str(sslkey)\n+            env_vars['PGSSLKEY'] = str(sslkey)\n         if passfile:\n-            env['PGPASSFILE'] = str(passfile)\n+            env_vars['PGPASSFILE'] = str(passfile)\n+        if env_vars:\n+            env = env_vars\n         return args, env\n \n     def runshell(self, parameters):\n@@ -61,4 +65,4 @@ class DatabaseClient(BaseDatabaseClient):\n             super().runshell(parameters)\n         finally:\n             # Restore the original SIGINT handler.\n-            signal.signal(signal.SIGINT, sigint_handler)\n+            signal.signal(signal.SIGINT, sigint_handler)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/postgresql/client.py b/django/db/backends/postgresql/client.py\nindex 21cffbe..a8aa654 100644\n--- a/django/db/backends/postgresql/client.py\n+++ b/django/db/backends/postgresql/client.py\n@@ -28,21 +28,24 @@ class DatabaseClient(BaseDatabaseClient):\n         if dbname:\n             args += [dbname]\n         args.extend(parameters)\n-        env = {}\n+        env = None\n+        env_vars = {}\n         if passwd:\n-            env['PGPASSWORD'] = str(passwd)\n+            env_vars['PGPASSWORD'] = str(passwd)\n         if service:\n-            env['PGSERVICE'] = str(service)\n+            env_vars['PGSERVICE'] = str(service)\n         if sslmode:\n-            env['PGSSLMODE'] = str(sslmode)\n+            env_vars['PGSSLMODE'] = str(sslmode)\n         if sslrootcert:\n-            env['PGSSLROOTCERT'] = str(sslrootcert)\n+            env_vars['PGSSLROOTCERT'] = str(sslrootcert)\n         if sslcert:\n-            env['PGSSLCERT'] = str(sslcert)\n+            env_vars['PGSSLCERT'] = str(sslcert)\n         if sslkey:\n-            env['PGSSLKEY'] = str(sslkey)\n+            env_vars['PGSSLKEY'] = str(sslkey)\n         if passfile:\n-            env['PGPASSFILE'] = str(passfile)\n+            env_vars['PGPASSFILE'] = str(passfile)\n+        if env_vars:\n+            env = env_vars\n         return (args, env)\n     def runshell(self, parameters):\n         sigint_handler = signal.getsignal(signal.SIGINT)\n", "normalized_occurrence": 1}
