{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-20801", "model_patch": "diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\nindex ecd2cce..de636e1 100644\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -1387,7 +1387,7 @@ class Float(Number):\n         except SympifyError:\n             return NotImplemented\n         if not self:\n-            return not other\n+            return not other and not other.is_Boolean\n         if isinstance(other, Boolean):\n             return False\n         if other.is_NumberSymbol:\n@@ -1870,7 +1870,7 @@ class Rational(Number):\n             # S(0) == False is True\n             return False\n         if not self:\n-            return not other\n+            return not other and not other.is_Boolean\n         if other.is_NumberSymbol:\n             if other.is_irrational:\n                 return False\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\nindex c5d42bc..8663a97 100644\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -1192,7 +1192,7 @@ class Float(Number):\n         except SympifyError:\n             return NotImplemented\n         if not self:\n-            return not other\n+            return not other and (not other.is_Boolean)\n         if isinstance(other, Boolean):\n             return False\n         if other.is_NumberSymbol:\n@@ -1630,7 +1630,7 @@ class Rational(Number):\n         if not isinstance(other, Number):\n             return False\n         if not self:\n-            return not other\n+            return not other and (not other.is_Boolean)\n         if other.is_NumberSymbol:\n             if other.is_irrational:\n                 return False\n", "normalized_occurrence": 1}
