{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-26323", "model_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex eec24f1..2ef37c8 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -300,6 +300,10 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n             )\n             if trans not in {\"passthrough\", \"drop\"}\n         )\n+        remainder_transformer = getattr(self, '_remainder', None)\n+        if remainder_transformer and remainder_transformer[1] not in {\"passthrough\", \"drop\"}:\n+            transformers = chain(transformers, [remainder_transformer[1]])\n+\n         for trans in transformers:\n             _safe_set_output(trans, transform=transform)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex 7a9d391..cc2d6d2 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -45,6 +45,9 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n     def set_output(self, *, transform=None):\n         super().set_output(transform=transform)\n         transformers = (trans for _, trans, _ in chain(self.transformers, getattr(self, 'transformers_', [])) if trans not in {'passthrough', 'drop'})\n+        remainder_transformer = getattr(self, '_remainder', None)\n+        if remainder_transformer and remainder_transformer[1] not in {'passthrough', 'drop'}:\n+            transformers = chain(transformers, [remainder_transformer[1]])\n         for trans in transformers:\n             _safe_set_output(trans, transform=transform)\n         return self\n", "normalized_occurrence": 1}
