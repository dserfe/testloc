{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-18057", "model_patch": "diff --git a/sympy/core/expr.py b/sympy/core/expr.py\nindex b5265ce..7ec9f69 100644\n--- a/sympy/core/expr.py\n+++ b/sympy/core/expr.py\n@@ -121,7 +121,12 @@ class Expr(Basic, EvalfMixin):\n \n     def __eq__(self, other):\n         try:\n-            other = sympify(other)\n+            # Only attempt to sympify if other is a Basic instance or a simple type\n+            # that we know is safe to convert\n+            if isinstance(other, (Basic, int, float, complex)):\n+                other = sympify(other)\n+            else:\n+                return NotImplemented\n             if not isinstance(other, Expr):\n                 return False\n         except (SympifyError, SyntaxError):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/expr.py b/sympy/core/expr.py\nindex e14d117..36c15eb 100644\n--- a/sympy/core/expr.py\n+++ b/sympy/core/expr.py\n@@ -47,7 +47,10 @@ class Expr(Basic, EvalfMixin):\n         return self._args\n     def __eq__(self, other):\n         try:\n-            other = sympify(other)\n+            if isinstance(other, (Basic, int, float, complex)):\n+                other = sympify(other)\n+            else:\n+                return NotImplemented\n             if not isinstance(other, Expr):\n                 return False\n         except (SympifyError, SyntaxError):\n", "normalized_occurrence": 1}
