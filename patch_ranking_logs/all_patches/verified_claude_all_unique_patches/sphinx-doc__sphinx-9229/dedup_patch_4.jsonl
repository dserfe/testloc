{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-9229", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 8cd9189..297b74a 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1798,8 +1798,10 @@ class GenericAliasMixin(DataDocumenterMixinBase):\n \n     def update_content(self, more_content: StringList) -> None:\n         if inspect.isgenericalias(self.object):\n-            more_content.append(_('alias of %s') % restify(self.object), '')\n-            more_content.append('', '')\n+            # Only add default \"alias of\" message if no docstring content exists\n+            if not self.get_doc():\n+                more_content.append(_('alias of %s') % restify(self.object), '')\n+                more_content.append('', '')\n \n         super().update_content(more_content)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 7792226..e5e4259 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1021,8 +1021,9 @@ class GenericAliasMixin(DataDocumenterMixinBase):\n         return inspect.isgenericalias(self.object) or super().should_suppress_directive_header()\n     def update_content(self, more_content: StringList) -> None:\n         if inspect.isgenericalias(self.object):\n-            more_content.append(_('alias of %s') % restify(self.object), '')\n-            more_content.append('', '')\n+            if not self.get_doc():\n+                more_content.append(_('alias of %s') % restify(self.object), '')\n+                more_content.append('', '')\n         super().update_content(more_content)\n class NewTypeMixin(DataDocumenterMixinBase):\n     def should_suppress_directive_header(self) -> bool:\n", "normalized_occurrence": 4}
