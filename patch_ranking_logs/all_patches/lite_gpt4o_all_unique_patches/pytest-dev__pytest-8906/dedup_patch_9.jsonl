{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-8906", "model_patch": "diff --git a/src/_pytest/outcomes.py b/src/_pytest/outcomes.py\nindex 6515102..259132a 100644\n--- a/src/_pytest/outcomes.py\n+++ b/src/_pytest/outcomes.py\n@@ -125,7 +125,8 @@ def skip(msg: str = \"\", *, allow_module_level: bool = False) -> \"NoReturn\":\n     \"\"\"Skip an executing test with the given message.\n \n     This function should be called only during testing (setup, call or teardown) or\n-    during collection by using the ``allow_module_level`` flag.  This function can\n+    during collection by using the ``allow_module_level`` flag. Use `skip_module`\n+    to skip an entire module at the module level. This function can\n     be called in doctests as well.\n \n     :param bool allow_module_level:\n@@ -144,6 +145,16 @@ def skip(msg: str = \"\", *, allow_module_level: bool = False) -> \"NoReturn\":\n     raise Skipped(msg=msg, allow_module_level=allow_module_level)\n \n \n+def skip_module(msg: str = \"\") -> \"NoReturn\":\n+    \"\"\"Skip an entire module with the given message.\n+\n+    This function can be called at the module level to skip the rest of \n+    the module.\n+\n+    :param str msg: Message to display for the module skip.\n+    \"\"\"\n+    skip(msg, allow_module_level=True)\n+\n @_with_exception(Failed)\n def fail(msg: str = \"\", pytrace: bool = True) -> \"NoReturn\":\n     \"\"\"Explicitly fail an executing test with the given message.\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/outcomes.py b/src/_pytest/outcomes.py\nindex 4e411e5..49d5ce3 100644\n--- a/src/_pytest/outcomes.py\n+++ b/src/_pytest/outcomes.py\n@@ -83,7 +83,8 @@ def skip(msg: str='', *, allow_module_level: bool=False) -> 'NoReturn':\n     \"\"\"Skip an executing test with the given message.\n \n     This function should be called only during testing (setup, call or teardown) or\n-    during collection by using the ``allow_module_level`` flag.  This function can\n+    during collection by using the ``allow_module_level`` flag. Use `skip_module`\n+    to skip an entire module at the module level. This function can\n     be called in doctests as well.\n \n     :param bool allow_module_level:\n@@ -101,6 +102,16 @@ def skip(msg: str='', *, allow_module_level: bool=False) -> 'NoReturn':\n     __tracebackhide__ = True\n     raise Skipped(msg=msg, allow_module_level=allow_module_level)\n \n+def skip_module(msg: str='') -> 'NoReturn':\n+    \"\"\"Skip an entire module with the given message.\n+\n+    This function can be called at the module level to skip the rest of \n+    the module.\n+\n+    :param str msg: Message to display for the module skip.\n+    \"\"\"\n+    skip(msg, allow_module_level=True)\n+\n @_with_exception(Failed)\n def fail(msg: str='', pytrace: bool=True) -> 'NoReturn':\n     \"\"\"Explicitly fail an executing test with the given message.\n", "normalized_occurrence": 1}
