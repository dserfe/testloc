{"model_name_or_path": "agentless", "instance_id": "django__django-14608", "model_patch": "diff --git a/django/forms/formsets.py b/django/forms/formsets.py\nindex beca557..92dccfd 100644\n--- a/django/forms/formsets.py\n+++ b/django/forms/formsets.py\n@@ -333,7 +333,7 @@ class BaseFormSet:\n         self._non_form_errors.\n         \"\"\"\n         self._errors = []\n-        self._non_form_errors = self.error_class()\n+        self._non_form_errors = self.error_class(error_class='nonform')\n         empty_forms_count = 0\n \n         if not self.is_bound:  # Stop further processing.\n@@ -350,7 +350,7 @@ class BaseFormSet:\n                 },\n                 code='missing_management_form',\n             )\n-            self._non_form_errors.append(error)\n+            self._non_form_errors.append(self.error_class([error], error_class='nonform'))\n \n         for i, form in enumerate(self.forms):\n             # Empty forms are unchanged forms beyond those with initial data.\n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/formsets.py b/django/forms/formsets.py\nindex 296e58d..fd49665 100644\n--- a/django/forms/formsets.py\n+++ b/django/forms/formsets.py\n@@ -178,13 +178,13 @@ class BaseFormSet:\n         return forms_valid and (not self.non_form_errors())\n     def full_clean(self):\n         self._errors = []\n-        self._non_form_errors = self.error_class()\n+        self._non_form_errors = self.error_class(error_class='nonform')\n         empty_forms_count = 0\n         if not self.is_bound:\n             return\n         if not self.management_form.is_valid():\n             error = ValidationError(self.error_messages['missing_management_form'], params={'field_names': ', '.join((self.management_form.add_prefix(field_name) for field_name in self.management_form.errors))}, code='missing_management_form')\n-            self._non_form_errors.append(error)\n+            self._non_form_errors.append(self.error_class([error], error_class='nonform'))\n         for i, form in enumerate(self.forms):\n             if not form.has_changed() and i >= self.initial_form_count():\n                 empty_forms_count += 1\n", "normalized_occurrence": 1}
