{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-6386", "model_patch": "diff --git a/pylint/config/option_manager_mixin.py b/pylint/config/option_manager_mixin.py\nindex d22ea01..cd25156 100644\n--- a/pylint/config/option_manager_mixin.py\n+++ b/pylint/config/option_manager_mixin.py\n@@ -166,9 +166,13 @@ class OptionsManagerMixIn:\n             del optdict[\"default\"]\n         args = [\"--\" + str(opt)]\n         if \"short\" in optdict:\n-            self._short_options[optdict[\"short\"]] = opt\n-            args.append(\"-\" + optdict[\"short\"])\n-            del optdict[\"short\"]\n+            if opt == \"verbose\" and optdict[\"short\"] == \"v\":\n+                args.append(\"-v\")\n+                self._short_options[\"v\"] = opt\n+            else:\n+                self._short_options[optdict[\"short\"]] = opt\n+                args.append(\"-\" + optdict[\"short\"])\n+                del optdict[\"short\"]\n         # cleanup option definition dict before giving it to optik\n         for key in list(optdict.keys()):\n             if key not in self._optik_option_attrs:\n@@ -343,4 +347,4 @@ class OptionsManagerMixIn:\n         \"\"\"Return the usage string for available options.\"\"\"\n         self.cmdline_parser.formatter.output_level = level\n         with _patch_optparse():\n-            return self.cmdline_parser.format_help()\n+            return self.cmdline_parser.format_help()\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/config/option_manager_mixin.py b/pylint/config/option_manager_mixin.py\nindex 073d6af..8406fff 100644\n--- a/pylint/config/option_manager_mixin.py\n+++ b/pylint/config/option_manager_mixin.py\n@@ -100,9 +100,13 @@ class OptionsManagerMixIn:\n             del optdict['default']\n         args = ['--' + str(opt)]\n         if 'short' in optdict:\n-            self._short_options[optdict['short']] = opt\n-            args.append('-' + optdict['short'])\n-            del optdict['short']\n+            if opt == 'verbose' and optdict['short'] == 'v':\n+                args.append('-v')\n+                self._short_options['v'] = opt\n+            else:\n+                self._short_options[optdict['short']] = opt\n+                args.append('-' + optdict['short'])\n+                del optdict['short']\n         for key in list(optdict.keys()):\n             if key not in self._optik_option_attrs:\n                 optdict.pop(key)\n", "normalized_occurrence": 1}
