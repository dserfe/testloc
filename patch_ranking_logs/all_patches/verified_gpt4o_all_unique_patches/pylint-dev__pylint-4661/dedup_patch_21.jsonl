{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-4661", "model_patch": "diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py\nindex 1b8a20a..83effcd 100644\n--- a/pylint/lint/pylinter.py\n+++ b/pylint/lint/pylinter.py\n@@ -481,7 +481,11 @@ class PyLinter(\n         self._pragma_lineno = {}\n         self._ignore_file = False\n         # visit variables\n-        self.file_state = FileState()\n+        xdg_data_home = os.getenv('XDG_DATA_HOME', os.path.join(os.path.expanduser(\"~\"), '.local', 'share'))\n+        pylint_data_dir = os.path.join(xdg_data_home, 'pylint')\n+        if not os.path.exists(pylint_data_dir):\n+            os.makedirs(pylint_data_dir)\n+        self.file_state = FileState(data_dir=pylint_data_dir)\n         self.current_name = None\n         self.current_file = None\n         self.stats = None\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py\nindex 31c726e..7e78a34 100644\n--- a/pylint/lint/pylinter.py\n+++ b/pylint/lint/pylinter.py\n@@ -48,7 +48,11 @@ class PyLinter(config.OptionsManagerMixIn, MessagesHandlerMixIn, reporters.Repor\n         self._checkers = collections.defaultdict(list)\n         self._pragma_lineno = {}\n         self._ignore_file = False\n-        self.file_state = FileState()\n+        xdg_data_home = os.getenv('XDG_DATA_HOME', os.path.join(os.path.expanduser('~'), '.local', 'share'))\n+        pylint_data_dir = os.path.join(xdg_data_home, 'pylint')\n+        if not os.path.exists(pylint_data_dir):\n+            os.makedirs(pylint_data_dir)\n+        self.file_state = FileState(data_dir=pylint_data_dir)\n         self.current_name = None\n         self.current_file = None\n         self.stats = None\n", "normalized_occurrence": 1}
