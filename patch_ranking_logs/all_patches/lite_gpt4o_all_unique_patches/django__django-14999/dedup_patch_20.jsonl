{"model_name_or_path": "agentless", "instance_id": "django__django-14999", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 165c6f5..8098d60 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -321,6 +321,10 @@ class RenameModel(ModelOperation):\n         if self.allow_migrate_model(schema_editor.connection.alias, new_model):\n             old_model = from_state.apps.get_model(app_label, self.old_name)\n             # Move the main table\n+            if old_model._meta.db_table == new_model._meta.db_table:\n+                # If the db_table is the same, skip renaming\n+                return\n+            \n             schema_editor.alter_db_table(\n                 new_model,\n                 old_model._meta.db_table,\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 8445d8b..4b4edf5 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -152,6 +152,8 @@ class RenameModel(ModelOperation):\n         new_model = to_state.apps.get_model(app_label, self.new_name)\n         if self.allow_migrate_model(schema_editor.connection.alias, new_model):\n             old_model = from_state.apps.get_model(app_label, self.old_name)\n+            if old_model._meta.db_table == new_model._meta.db_table:\n+                return\n             schema_editor.alter_db_table(new_model, old_model._meta.db_table, new_model._meta.db_table)\n             for related_object in old_model._meta.related_objects:\n                 if related_object.related_model == old_model:\n", "normalized_occurrence": 3}
