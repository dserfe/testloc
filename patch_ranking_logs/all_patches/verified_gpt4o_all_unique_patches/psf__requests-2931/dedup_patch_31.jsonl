{"model_name_or_path": "agentless", "instance_id": "psf__requests-2931", "model_patch": "diff --git a/requests/utils.py b/requests/utils.py\nindex 7aa8a2f..f0fa14f 100644\n--- a/requests/utils.py\n+++ b/requests/utils.py\n@@ -683,7 +683,7 @@ def get_auth_from_url(url):\n     return auth\n \n \n-def to_native_string(string, encoding='ascii'):\n+def to_native_string(string, encoding='utf-8'):\n     \"\"\"\n     Given a string object, regardless of type, returns a representation of that\n     string in the native string type, encoding and decoding where necessary.\n@@ -691,13 +691,12 @@ def to_native_string(string, encoding='ascii'):\n     \"\"\"\n     out = None\n \n-    if isinstance(string, builtin_str):\n+    if isinstance(string, bytes):\n+        out = string\n+    elif isinstance(string, builtin_str):\n         out = string\n     else:\n-        if is_py2:\n-            out = string.encode(encoding)\n-        else:\n-            out = string.decode(encoding)\n+        out = string.encode(encoding) if is_py2 else string.decode(encoding)\n \n     return out\n \n", "occurrence": 1, "normalized_patch": "diff --git a/requests/utils.py b/requests/utils.py\nindex 69197df..6f0f9ca 100644\n--- a/requests/utils.py\n+++ b/requests/utils.py\n@@ -315,14 +315,14 @@ def get_auth_from_url(url):\n     except (AttributeError, TypeError):\n         auth = ('', '')\n     return auth\n-def to_native_string(string, encoding='ascii'):\n+def to_native_string(string, encoding='utf-8'):\n     out = None\n-    if isinstance(string, builtin_str):\n+    if isinstance(string, bytes):\n+        out = string\n+    elif isinstance(string, builtin_str):\n         out = string\n-    elif is_py2:\n-        out = string.encode(encoding)\n     else:\n-        out = string.decode(encoding)\n+        out = string.encode(encoding) if is_py2 else string.decode(encoding)\n     return out\n def urldefragauth(url):\n     scheme, netloc, path, params, query, fragment = urlparse(url)\n", "normalized_occurrence": 1}
