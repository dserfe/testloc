{"model_name_or_path": "agentless", "instance_id": "django__django-14667", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 5d0565e..407d53c 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -1221,7 +1221,13 @@ class QuerySet:\n         if fields == (None,):\n             clone.query.clear_deferred_loading()\n         else:\n-            clone.query.add_deferred_loading(fields)\n+            if clone.query.deferred_loading[1]:  # If it's in deferred mode\n+                clone.query.add_deferred_loading(fields)\n+            else:  # If it's in immediate loading mode set by only()\n+                clone.query.deferred_loading = (\n+                    clone.query.deferred_loading[0].difference(fields),\n+                    clone.query.deferred_loading[1],\n+                )\n         return clone\n \n     def only(self, *fields):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 0052c9e..870cd4d 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -740,8 +740,10 @@ class QuerySet:\n         clone = self._chain()\n         if fields == (None,):\n             clone.query.clear_deferred_loading()\n-        else:\n+        elif clone.query.deferred_loading[1]:\n             clone.query.add_deferred_loading(fields)\n+        else:\n+            clone.query.deferred_loading = (clone.query.deferred_loading[0].difference(fields), clone.query.deferred_loading[1])\n         return clone\n     def only(self, *fields):\n         self._not_support_combined_queries('only')\n", "normalized_occurrence": 1}
