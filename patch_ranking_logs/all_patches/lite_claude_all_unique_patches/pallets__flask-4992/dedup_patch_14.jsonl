{"model_name_or_path": "agentless_claude", "instance_id": "pallets__flask-4992", "model_patch": "diff --git a/src/flask/config.py b/src/flask/config.py\nindex 73be34c..6bb1be1 100644\n--- a/src/flask/config.py\n+++ b/src/flask/config.py\n@@ -229,46 +229,7 @@ class Config(dict):\n             if key.isupper():\n                 self[key] = getattr(obj, key)\n \n-    def from_file(\n-        self,\n-        filename: str,\n-        load: t.Callable[[t.IO[t.Any]], t.Mapping],\n-        silent: bool = False,\n-    ) -> bool:\n-        \"\"\"Update the values in the config from a file that is loaded\n-        using the ``load`` parameter. The loaded data is passed to the\n-        :meth:`from_mapping` method.\n-\n-        .. code-block:: python\n-\n-            import json\n-            app.config.from_file(\"config.json\", load=json.load)\n-\n-            import toml\n-            app.config.from_file(\"config.toml\", load=toml.load)\n \n-        :param filename: The path to the data file. This can be an\n-            absolute path or relative to the config root path.\n-        :param load: A callable that takes a file handle and returns a\n-            mapping of loaded data from the file.\n-        :type load: ``Callable[[Reader], Mapping]`` where ``Reader``\n-            implements a ``read`` method.\n-        :param silent: Ignore the file if it doesn't exist.\n-        :return: ``True`` if the file was loaded successfully.\n-\n-        .. versionadded:: 2.0\n-        \"\"\"\n-        filename = os.path.join(self.root_path, filename)\n-\n-        try:\n-            with open(filename) as f:\n-                obj = load(f)\n-        except OSError as e:\n-            if silent and e.errno in (errno.ENOENT, errno.EISDIR):\n-                return False\n-\n-            e.strerror = f\"Unable to load configuration file ({e.strerror})\"\n-            raise\n \n         return self.from_mapping(obj)\n \n", "occurrence": 6, "normalized_patch": "diff --git a/src/flask/config.py b/src/flask/config.py\nindex a095695..3aaee4c 100644\n--- a/src/flask/config.py\n+++ b/src/flask/config.py\n@@ -71,16 +71,6 @@ class Config(dict):\n         for key in dir(obj):\n             if key.isupper():\n                 self[key] = getattr(obj, key)\n-    def from_file(self, filename: str, load: t.Callable[[t.IO[t.Any]], t.Mapping], silent: bool=False) -> bool:\n-        filename = os.path.join(self.root_path, filename)\n-        try:\n-            with open(filename) as f:\n-                obj = load(f)\n-        except OSError as e:\n-            if silent and e.errno in (errno.ENOENT, errno.EISDIR):\n-                return False\n-            e.strerror = f'Unable to load configuration file ({e.strerror})'\n-            raise\n         return self.from_mapping(obj)\n     def from_mapping(self, mapping: t.Optional[t.Mapping[str, t.Any]]=None, **kwargs: t.Any) -> bool:\n         mappings: t.Dict[str, t.Any] = {}\n", "normalized_occurrence": 6}
