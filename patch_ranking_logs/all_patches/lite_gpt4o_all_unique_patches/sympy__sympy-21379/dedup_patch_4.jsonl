{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-21379", "model_patch": "diff --git a/sympy/core/expr.py b/sympy/core/expr.py\nindex 333d2a2..c1c1a32 100644\n--- a/sympy/core/expr.py\n+++ b/sympy/core/expr.py\n@@ -1119,11 +1119,22 @@ class Expr(Basic, EvalfMixin):\n         None\n \n         \"\"\"\n-        from sympy.polys import Poly, PolynomialError\n+        from sympy.polys import Poly\n+        from sympy.polys.polyerrors import PolynomialError\n+\n+        def is_piecewise(expr):\n+            from sympy.functions.elementary.piecewise import Piecewise\n+            return isinstance(expr, Piecewise)\n+\n+        def has_hyperbolic(expr):\n+            from sympy.functions.elementary.hyperbolic import sinh, cosh, tanh\n+            return expr.has(sinh, cosh, tanh)\n+\n+        if is_piecewise(self) and has_hyperbolic(self):\n+            return None\n \n         try:\n             poly = Poly(self, *gens, **args)\n-\n             if not poly.is_Poly:\n                 return None\n             else:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/expr.py b/sympy/core/expr.py\nindex a5fb1f0..df31d95 100644\n--- a/sympy/core/expr.py\n+++ b/sympy/core/expr.py\n@@ -592,7 +592,16 @@ class Expr(Basic, EvalfMixin):\n     def as_ordered_factors(self, order=None):\n         return [self]\n     def as_poly(self, *gens, **args):\n-        from sympy.polys import Poly, PolynomialError\n+        from sympy.polys import Poly\n+        from sympy.polys.polyerrors import PolynomialError\n+        def is_piecewise(expr):\n+            from sympy.functions.elementary.piecewise import Piecewise\n+            return isinstance(expr, Piecewise)\n+        def has_hyperbolic(expr):\n+            from sympy.functions.elementary.hyperbolic import sinh, cosh, tanh\n+            return expr.has(sinh, cosh, tanh)\n+        if is_piecewise(self) and has_hyperbolic(self):\n+            return None\n         try:\n             poly = Poly(self, *gens, **args)\n             if not poly.is_Poly:\n", "normalized_occurrence": 1}
