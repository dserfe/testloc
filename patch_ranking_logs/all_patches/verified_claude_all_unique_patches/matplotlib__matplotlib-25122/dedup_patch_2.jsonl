{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-25122", "model_patch": "diff --git a/lib/matplotlib/mlab.py b/lib/matplotlib/mlab.py\nindex e9c7d39..f3b951a 100644\n--- a/lib/matplotlib/mlab.py\n+++ b/lib/matplotlib/mlab.py\n@@ -427,7 +427,7 @@ def _spectral_helper(x, y=None, NFFT=None, Fs=None, detrend_func=None,\n             result /= (np.abs(window)**2).sum()\n         else:\n             # In this case, preserve power in the segment, not amplitude\n-            result /= np.abs(window).sum()**2\n+            result /= window.sum()**2\n \n     t = np.arange(NFFT/2, len(x) - NFFT/2 + 1, NFFT - noverlap)/Fs\n \n", "occurrence": 7, "normalized_patch": "diff --git a/lib/matplotlib/mlab.py b/lib/matplotlib/mlab.py\nindex 86b6c43..db1800d 100644\n--- a/lib/matplotlib/mlab.py\n+++ b/lib/matplotlib/mlab.py\n@@ -166,7 +166,7 @@ def _spectral_helper(x, y=None, NFFT=None, Fs=None, detrend_func=None, window=No\n             result /= Fs\n             result /= (np.abs(window) ** 2).sum()\n         else:\n-            result /= np.abs(window).sum() ** 2\n+            result /= window.sum() ** 2\n     t = np.arange(NFFT / 2, len(x) - NFFT / 2 + 1, NFFT - noverlap) / Fs\n     if sides == 'twosided':\n         freqs = np.roll(freqs, -freqcenter, axis=0)\n", "normalized_occurrence": 7}
