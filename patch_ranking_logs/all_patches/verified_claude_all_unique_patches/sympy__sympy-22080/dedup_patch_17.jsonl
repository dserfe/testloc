{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-22080", "model_patch": "diff --git a/sympy/core/mod.py b/sympy/core/mod.py\nindex ca33049..6f6c185 100644\n--- a/sympy/core/mod.py\n+++ b/sympy/core/mod.py\n@@ -1,3 +1,4 @@\n+\n from sympy.core.numbers import nan\n from .function import Function\n from .kind import NumberKind\n@@ -151,6 +152,8 @@ class Mod(Function):\n                 prod_non_mod = Mul(*non_mod)\n                 prod_mod1 = Mul(*[i.args[0] for i in mod_l])\n                 net = prod_mod1*prod_mod\n+                if prod_non_mod.could_extract_minus_sign():\n+                    return -cls(net, q)\n                 return prod_non_mod*cls(net, q)\n \n             if q.is_Integer and q is not S.One:\n@@ -240,4 +243,4 @@ class Mod(Function):\n \n     def _eval_rewrite_as_floor(self, a, b, **kwargs):\n         from sympy.functions.elementary.integers import floor\n-        return a - b*floor(a/b)\n+        return a - b*floor(a/b)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/mod.py b/sympy/core/mod.py\nindex 57d2396..904f69e 100644\n--- a/sympy/core/mod.py\n+++ b/sympy/core/mod.py\n@@ -97,6 +97,8 @@ class Mod(Function):\n                 prod_non_mod = Mul(*non_mod)\n                 prod_mod1 = Mul(*[i.args[0] for i in mod_l])\n                 net = prod_mod1 * prod_mod\n+                if prod_non_mod.could_extract_minus_sign():\n+                    return -cls(net, q)\n                 return prod_non_mod * cls(net, q)\n             if q.is_Integer and q is not S.One:\n                 _ = []\n", "normalized_occurrence": 1}
