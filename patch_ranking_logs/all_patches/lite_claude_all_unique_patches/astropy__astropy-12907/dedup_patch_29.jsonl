{"model_name_or_path": "agentless_claude", "instance_id": "astropy__astropy-12907", "model_patch": "diff --git a/astropy/modeling/separable.py b/astropy/modeling/separable.py\nindex d6e9246..c28d535 100644\n--- a/astropy/modeling/separable.py\n+++ b/astropy/modeling/separable.py\n@@ -168,6 +168,8 @@ def _arith_oper(left, right):\n     return result\n \n \n+from astropy.modeling.core import CompoundModel\n+\n def _coord_matrix(model, pos, noutp):\n     \"\"\"\n     Create an array representing inputs and outputs of a simple model.\n@@ -207,12 +209,21 @@ def _coord_matrix(model, pos, noutp):\n         else:\n             mat[-model.n_outputs:, -model.n_inputs:] = 1\n     else:\n-        mat = np.zeros((noutp, model.n_inputs))\n-\n-        for i in range(model.n_inputs):\n-            mat[i, i] = 1\n-        if pos == 'right':\n-            mat = np.roll(mat, (noutp - model.n_outputs))\n+        if isinstance(model, CompoundModel):\n+            # Use the model's own separability matrix for compound models\n+            sep_matrix = separability_matrix(model)\n+            mat = np.zeros((noutp, model.n_inputs))\n+            if pos == 'left':\n+                mat[:model.n_outputs, :model.n_inputs] = sep_matrix\n+            else:\n+                mat[-model.n_outputs:, -model.n_inputs:] = sep_matrix\n+        else:\n+            # Simple diagonal matrix for basic separable models\n+            mat = np.zeros((noutp, model.n_inputs))\n+            for i in range(model.n_inputs):\n+                mat[i, i] = 1\n+            if pos == 'right':\n+                mat = np.roll(mat, (noutp - model.n_outputs))\n     return mat\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/modeling/separable.py b/astropy/modeling/separable.py\nindex 198a838..e9858e0 100644\n--- a/astropy/modeling/separable.py\n+++ b/astropy/modeling/separable.py\n@@ -40,6 +40,7 @@ def _arith_oper(left, right):\n         raise ModelDefinitionError('Unsupported operands for arithmetic operator: left (n_inputs={}, n_outputs={}) and right (n_inputs={}, n_outputs={}); models must have the same n_inputs and the same n_outputs for this operator.'.format(left_inputs, left_outputs, right_inputs, right_outputs))\n     result = np.ones((left_outputs, left_inputs))\n     return result\n+from astropy.modeling.core import CompoundModel\n def _coord_matrix(model, pos, noutp):\n     if isinstance(model, Mapping):\n         axes = []\n@@ -60,6 +61,13 @@ def _coord_matrix(model, pos, noutp):\n             mat[:model.n_outputs, :model.n_inputs] = 1\n         else:\n             mat[-model.n_outputs:, -model.n_inputs:] = 1\n+    elif isinstance(model, CompoundModel):\n+        sep_matrix = separability_matrix(model)\n+        mat = np.zeros((noutp, model.n_inputs))\n+        if pos == 'left':\n+            mat[:model.n_outputs, :model.n_inputs] = sep_matrix\n+        else:\n+            mat[-model.n_outputs:, -model.n_inputs:] = sep_matrix\n     else:\n         mat = np.zeros((noutp, model.n_inputs))\n         for i in range(model.n_inputs):\n", "normalized_occurrence": 1}
