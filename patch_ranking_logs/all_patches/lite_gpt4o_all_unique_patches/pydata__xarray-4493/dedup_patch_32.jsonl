{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-4493", "model_patch": "diff --git a/xarray/core/variable.py b/xarray/core/variable.py\nindex f4ce0fd..f197c35 100644\n--- a/xarray/core/variable.py\n+++ b/xarray/core/variable.py\n@@ -995,6 +995,8 @@ class Variable(\n             attrs = copy.copy(self._attrs)\n         if encoding is _default:\n             encoding = copy.copy(self._encoding)\n+        if isinstance(data, dask.array.Array):\n+            data = data.rechunk(data.chunks)\n         return type(self)(dims, data, attrs, encoding, fastpath=True)\n \n     def __copy__(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/variable.py b/xarray/core/variable.py\nindex cf20546..a130a27 100644\n--- a/xarray/core/variable.py\n+++ b/xarray/core/variable.py\n@@ -741,6 +741,8 @@ class Variable(common.AbstractArray, arithmetic.SupportsArithmetic, utils.NdimSi\n             attrs = copy.copy(self._attrs)\n         if encoding is _default:\n             encoding = copy.copy(self._encoding)\n+        if isinstance(data, dask.array.Array):\n+            data = data.rechunk(data.chunks)\n         return type(self)(dims, data, attrs, encoding, fastpath=True)\n \n     def __copy__(self):\n", "normalized_occurrence": 1}
