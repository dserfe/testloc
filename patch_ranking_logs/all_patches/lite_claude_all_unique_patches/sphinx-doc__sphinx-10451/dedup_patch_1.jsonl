{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-10451", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex c6bab1b..04f090a 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -115,6 +115,14 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str],\n         if name == 'return':\n             continue\n \n+        # Handle *args and **kwargs specially\n+        stripped_name = name.lstrip('*')\n+        existing_name = next((n for n in arguments if n.lstrip('*') == stripped_name), None)\n+        \n+        # If we already have an entry for this parameter (considering stripped names), skip it\n+        if existing_name:\n+            continue\n+            \n         arg = arguments.get(name, {})\n         if not arg.get('type'):\n             field = nodes.field()\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 5da2ea8..ef2116a 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -85,6 +85,10 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str], suppr\n     for name, annotation in annotations.items():\n         if name == 'return':\n             continue\n+        stripped_name = name.lstrip('*')\n+        existing_name = next((n for n in arguments if n.lstrip('*') == stripped_name), None)\n+        if existing_name:\n+            continue\n         arg = arguments.get(name, {})\n         if not arg.get('type'):\n             field = nodes.field()\n", "normalized_occurrence": 1}
