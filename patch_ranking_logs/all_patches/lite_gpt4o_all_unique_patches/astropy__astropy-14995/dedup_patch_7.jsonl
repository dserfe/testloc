{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-14995", "model_patch": "diff --git a/astropy/nddata/mixins/ndarithmetic.py b/astropy/nddata/mixins/ndarithmetic.py\nindex fbb2aba..483a052 100644\n--- a/astropy/nddata/mixins/ndarithmetic.py\n+++ b/astropy/nddata/mixins/ndarithmetic.py\n@@ -520,7 +520,9 @@ class NDArithmeticMixin:\n         elif self.mask is None and operand is not None:\n             # Make a copy so there is no reference in the result.\n             return deepcopy(operand.mask)\n-        elif operand is None:\n+        elif self.mask is None and operand is not None and operand.mask is not None:\n+            return deepcopy(operand.mask)\n+        elif self.mask is not None and (operand is None or operand.mask is None):\n             return deepcopy(self.mask)\n         else:\n             # Now lets calculate the resulting mask (operation enforces copy)\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/nddata/mixins/ndarithmetic.py b/astropy/nddata/mixins/ndarithmetic.py\nindex b7eb663..32b58ff 100644\n--- a/astropy/nddata/mixins/ndarithmetic.py\n+++ b/astropy/nddata/mixins/ndarithmetic.py\n@@ -116,7 +116,9 @@ class NDArithmeticMixin:\n             return None\n         elif self.mask is None and operand is not None:\n             return deepcopy(operand.mask)\n-        elif operand is None:\n+        elif self.mask is None and operand is not None and (operand.mask is not None):\n+            return deepcopy(operand.mask)\n+        elif self.mask is not None and (operand is None or operand.mask is None):\n             return deepcopy(self.mask)\n         else:\n             return handle_mask(self.mask, operand.mask, **kwds)\n", "normalized_occurrence": 1}
