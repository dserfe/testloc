{"model_name_or_path": "agentless", "instance_id": "django__django-13964", "model_patch": "diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex 9b658fb..529a55a 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -647,7 +647,11 @@ class ForeignObject(RelatedField):\n         return self.get_instance_value_for_fields(instance, self.local_related_fields)\n \n     def get_foreign_related_value(self, instance):\n-        return self.get_instance_value_for_fields(instance, self.foreign_related_fields)\n+        # Ensure the foreign key field is updated when the related instance has a non-auto primary key\n+        fk_value = self.get_instance_value_for_fields(instance, self.foreign_related_fields)\n+        if not fk_value and hasattr(instance, '_state') and not instance._state.adding:\n+            fk_value = getattr(instance, self.related_model._meta.pk.attname, None)\n+        return fk_value\n \n     @staticmethod\n     def get_instance_value_for_fields(instance, fields):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex 2261016..0f65560 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -281,7 +281,10 @@ class ForeignObject(RelatedField):\n     def get_local_related_value(self, instance):\n         return self.get_instance_value_for_fields(instance, self.local_related_fields)\n     def get_foreign_related_value(self, instance):\n-        return self.get_instance_value_for_fields(instance, self.foreign_related_fields)\n+        fk_value = self.get_instance_value_for_fields(instance, self.foreign_related_fields)\n+        if not fk_value and hasattr(instance, '_state') and (not instance._state.adding):\n+            fk_value = getattr(instance, self.related_model._meta.pk.attname, None)\n+        return fk_value\n     @staticmethod\n     def get_instance_value_for_fields(instance, fields):\n         ret = []\n", "normalized_occurrence": 1}
