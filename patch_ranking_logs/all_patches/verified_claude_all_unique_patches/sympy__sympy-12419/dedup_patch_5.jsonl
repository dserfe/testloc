{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-12419", "model_patch": "diff --git a/sympy/matrices/expressions/matexpr.py b/sympy/matrices/expressions/matexpr.py\nindex 8f30d0d..2ca78ff 100644\n--- a/sympy/matrices/expressions/matexpr.py\n+++ b/sympy/matrices/expressions/matexpr.py\n@@ -484,6 +484,19 @@ class Identity(MatrixExpr):\n     def _eval_determinant(self):\n         return S.One\n \n+    def _eval_sum(self, limits):\n+        i, a, b = limits\n+        if not isinstance(i, tuple):  # single sum\n+            if a == 0 and b == self.rows - 1:\n+                return S.One  # sum over a single row/column\n+            return None\n+        # double sum case for full matrix\n+        i, ia, ib = i\n+        j, ja, jb = limits[1]\n+        if (ia, ib) == (ja, jb) == (0, self.rows - 1):\n+            return self.rows\n+        return None\n+\n \n class ZeroMatrix(MatrixExpr):\n     \"\"\"The Matrix Zero 0 - additive identity\n", "occurrence": 1, "normalized_patch": "--- a/sympy/matrices/expressions/matexpr.py\n+++ b/sympy/matrices/expressions/matexpr.py\n+    def _eval_sum(self, limits):\n+        i, a, b = limits\n+        if not isinstance(i, tuple):\n+            if a == 0 and b == self.rows - 1:\n+                return S.One\n+            return None\n+        i, ia, ib = i\n+        j, ja, jb = limits[1]\n+        if (ia, ib) == (ja, jb) == (0, self.rows - 1):\n+            return self.rows\n+        return None", "normalized_occurrence": 1}
