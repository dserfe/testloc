{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-23476", "model_patch": "diff --git a/lib/matplotlib/backends/backend_macosx.py b/lib/matplotlib/backends/backend_macosx.py\nindex 4ab352a..d991023 100644\n--- a/lib/matplotlib/backends/backend_macosx.py\n+++ b/lib/matplotlib/backends/backend_macosx.py\n@@ -36,7 +36,11 @@ class FigureCanvasMac(FigureCanvasAgg, _macosx.FigureCanvas, FigureCanvasBase):\n     manager_class = _api.classproperty(lambda cls: FigureManagerMac)\n \n     def __init__(self, figure):\n+        # Temporarily store figure dpi\n+        dpi = figure.dpi\n         super().__init__(figure=figure)\n+        # Restore the original dpi to prevent it from doubling\n+        figure.dpi = dpi\n         self._draw_pending = False\n         self._is_drawing = False\n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/backends/backend_macosx.py b/lib/matplotlib/backends/backend_macosx.py\nindex d70bd86..f8dc8f1 100644\n--- a/lib/matplotlib/backends/backend_macosx.py\n+++ b/lib/matplotlib/backends/backend_macosx.py\n@@ -17,7 +17,9 @@ class FigureCanvasMac(FigureCanvasAgg, _macosx.FigureCanvas, FigureCanvasBase):\n     manager_class = _api.classproperty(lambda cls: FigureManagerMac)\n \n     def __init__(self, figure):\n+        dpi = figure.dpi\n         super().__init__(figure=figure)\n+        figure.dpi = dpi\n         self._draw_pending = False\n         self._is_drawing = False\n \n", "normalized_occurrence": 1}
