{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-5840", "model_patch": "diff --git a/src/_pytest/config/findpaths.py b/src/_pytest/config/findpaths.py\nindex 4f3d3eb..0b18236 100644\n--- a/src/_pytest/config/findpaths.py\n+++ b/src/_pytest/config/findpaths.py\n@@ -60,12 +60,12 @@ def get_common_ancestor(paths):\n         if not path.exists():\n             continue\n         if common_ancestor is None:\n-            common_ancestor = path\n+            common_ancestor = path.realpath().lower()\n         else:\n-            if path.relto(common_ancestor) or path == common_ancestor:\n+            if path.relto(common_ancestor.lower()) or path.lower() == common_ancestor:\n                 continue\n-            elif common_ancestor.relto(path):\n-                common_ancestor = path\n+            elif common_ancestor.lower().relto(path.lower()):\n+                common_ancestor = path.lower()\n             else:\n                 shared = path.common(common_ancestor)\n                 if shared is not None:\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/config/findpaths.py b/src/_pytest/config/findpaths.py\nindex 5511bd8..04d874d 100644\n--- a/src/_pytest/config/findpaths.py\n+++ b/src/_pytest/config/findpaths.py\n@@ -37,11 +37,11 @@ def get_common_ancestor(paths):\n         if not path.exists():\n             continue\n         if common_ancestor is None:\n-            common_ancestor = path\n-        elif path.relto(common_ancestor) or path == common_ancestor:\n+            common_ancestor = path.realpath().lower()\n+        elif path.relto(common_ancestor.lower()) or path.lower() == common_ancestor:\n             continue\n-        elif common_ancestor.relto(path):\n-            common_ancestor = path\n+        elif common_ancestor.lower().relto(path.lower()):\n+            common_ancestor = path.lower()\n         else:\n             shared = path.common(common_ancestor)\n             if shared is not None:\n", "normalized_occurrence": 1}
