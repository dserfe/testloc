{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-15875", "model_patch": "diff --git a/sympy/core/add.py b/sympy/core/add.py\nindex 1046af8..cad70a8 100644\n--- a/sympy/core/add.py\n+++ b/sympy/core/add.py\n@@ -554,14 +554,11 @@ class Add(Expr, AssocOp):\n                 return\n         if z == len(self.args):\n             return True\n-        if len(nz) == len(self.args):\n+        if len(nz) == len(self.args) and not im_or_z:\n             return None\n-        b = self.func(*nz)\n+        b = self.func(*nz) + S.ImaginaryUnit * self.func(*[im_part / S.ImaginaryUnit for im_part in self.args if im_part.is_imaginary])\n         if b.is_zero:\n-            if not im_or_z and not im:\n-                return True\n-            if im and not im_or_z:\n-                return False\n+            return True\n         if b.is_zero is False:\n             return False\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/add.py b/sympy/core/add.py\nindex 63cb816..c4f3d6e 100644\n--- a/sympy/core/add.py\n+++ b/sympy/core/add.py\n@@ -308,14 +308,11 @@ class Add(Expr, AssocOp):\n                 return\n         if z == len(self.args):\n             return True\n-        if len(nz) == len(self.args):\n+        if len(nz) == len(self.args) and (not im_or_z):\n             return None\n-        b = self.func(*nz)\n+        b = self.func(*nz) + S.ImaginaryUnit * self.func(*[im_part / S.ImaginaryUnit for im_part in self.args if im_part.is_imaginary])\n         if b.is_zero:\n-            if not im_or_z and (not im):\n-                return True\n-            if im and (not im_or_z):\n-                return False\n+            return True\n         if b.is_zero is False:\n             return False\n     def _eval_is_odd(self):\n", "normalized_occurrence": 1}
