{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16819", "model_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 42f1c50..667dbf5 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -1229,7 +1229,7 @@ class MigrationAutodetector:\n             added_indexes = [idx for idx in new_indexes if idx not in old_indexes]\n             removed_indexes = [idx for idx in old_indexes if idx not in new_indexes]\n             renamed_indexes = []\n-            # Find renamed indexes.\n+            # Find renamed and modified indexes\n             remove_from_added = []\n             remove_from_removed = []\n             for new_index in added_indexes:\n@@ -1238,14 +1238,18 @@ class MigrationAutodetector:\n                 for old_index in removed_indexes:\n                     old_index_dec = old_index.deconstruct()\n                     old_index_name = old_index_dec[2].pop(\"name\")\n-                    # Indexes are the same except for the names.\n-                    if (\n-                        new_index_dec == old_index_dec\n-                        and new_index_name != old_index_name\n-                    ):\n-                        renamed_indexes.append((old_index_name, new_index_name, None))\n-                        remove_from_added.append(new_index)\n-                        remove_from_removed.append(old_index)\n+                    # Check if indexes are the same or only differ in non-critical attributes\n+                    if new_index.fields == old_index.fields:\n+                        # If they have the same fields but different names, treat as rename\n+                        if new_index_name != old_index_name:\n+                            renamed_indexes.append((old_index_name, new_index_name, None))\n+                            remove_from_added.append(new_index)\n+                            remove_from_removed.append(old_index)\n+                        # If they have the same name but different options, treat as modification\n+                        elif new_index_name == old_index_name:\n+                            renamed_indexes.append((old_index_name, new_index_name, None))\n+                            remove_from_added.append(new_index)\n+                            remove_from_removed.append(old_index)\n             # Find index_together changed to indexes.\n             for (\n                 old_value,\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex d5d6180..34a3b5c 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -508,10 +508,15 @@ class MigrationAutodetector:\n                 for old_index in removed_indexes:\n                     old_index_dec = old_index.deconstruct()\n                     old_index_name = old_index_dec[2].pop('name')\n-                    if new_index_dec == old_index_dec and new_index_name != old_index_name:\n-                        renamed_indexes.append((old_index_name, new_index_name, None))\n-                        remove_from_added.append(new_index)\n-                        remove_from_removed.append(old_index)\n+                    if new_index.fields == old_index.fields:\n+                        if new_index_name != old_index_name:\n+                            renamed_indexes.append((old_index_name, new_index_name, None))\n+                            remove_from_added.append(new_index)\n+                            remove_from_removed.append(old_index)\n+                        elif new_index_name == old_index_name:\n+                            renamed_indexes.append((old_index_name, new_index_name, None))\n+                            remove_from_added.append(new_index)\n+                            remove_from_removed.append(old_index)\n             for old_value, new_value, index_together_app_label, index_together_model_name, dependencies in self._get_altered_foo_together_operations(operations.AlterIndexTogether.option_name):\n                 if app_label != index_together_app_label or model_name != index_together_model_name:\n                     continue\n", "normalized_occurrence": 1}
