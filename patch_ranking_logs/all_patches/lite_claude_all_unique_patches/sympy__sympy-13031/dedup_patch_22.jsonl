{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13031", "model_patch": "diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py\nindex 79b3d5e..cd3058a 100644\n--- a/sympy/matrices/common.py\n+++ b/sympy/matrices/common.py\n@@ -377,6 +377,12 @@ class MatrixShaping(MatrixRequired):\n         if len(args) == 0:\n             return cls._new()\n \n+        # Handle empty matrices properly by ensuring their columns are counted\n+        rows = args[0].rows\n+        cols = sum(m.cols for m in args)\n+        if rows == 0:\n+            return cls.zeros(0, cols)\n+\n         kls = type(args[0])\n         return reduce(kls.row_join, args)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py\nindex 1e4e3f2..d8ba9f4 100644\n--- a/sympy/matrices/common.py\n+++ b/sympy/matrices/common.py\n@@ -151,6 +151,10 @@ class MatrixShaping(MatrixRequired):\n     def hstack(cls, *args):\n         if len(args) == 0:\n             return cls._new()\n+        rows = args[0].rows\n+        cols = sum((m.cols for m in args))\n+        if rows == 0:\n+            return cls.zeros(0, cols)\n         kls = type(args[0])\n         return reduce(kls.row_join, args)\n     def reshape(self, rows, cols):\n", "normalized_occurrence": 1}
