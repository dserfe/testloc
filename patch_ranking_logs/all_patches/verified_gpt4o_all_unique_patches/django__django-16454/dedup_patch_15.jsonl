{"model_name_or_path": "agentless", "instance_id": "django__django-16454", "model_patch": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex f221176..7e4a434 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -44,6 +44,14 @@ class SystemCheckError(CommandError):\n \n \n class CommandParser(ArgumentParser):\n+    def add_subparsers(self, **kwargs):\n+        subparsers = super().add_subparsers(**kwargs)\n+        subparsers._parser_class = self.__class__\n+        subparsers._parser_kwargs = {\n+            'missing_args_message': self.missing_args_message,\n+            'called_from_command_line': self.called_from_command_line,\n+        }\n+        return subparsers\n     \"\"\"\n     Customized ArgumentParser class to improve some error messages and prevent\n     SystemExit in several occasions, as SystemExit is unacceptable when a\n", "occurrence": 1, "normalized_patch": "--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n+    def add_subparsers(self, **kwargs):\n+        subparsers = super().add_subparsers(**kwargs)\n+        subparsers._parser_class = self.__class__\n+        subparsers._parser_kwargs = {'missing_args_message': self.missing_args_message, 'called_from_command_line': self.called_from_command_line}\n+        return subparsers\n+    '\\n    Customized ArgumentParser class to improve some error messages and prevent\\n    SystemExit in several occasions, as SystemExit is unacceptable when a\\n    command is called programmatically.\\n    '", "normalized_occurrence": 1}
