{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-22871", "model_patch": "diff --git a/lib/matplotlib/dates.py b/lib/matplotlib/dates.py\nindex cc65fc1..4b90f3b 100644\n--- a/lib/matplotlib/dates.py\n+++ b/lib/matplotlib/dates.py\n@@ -797,12 +797,13 @@ class ConciseDateFormatter(ticker.Formatter):\n         # 3: hours, 4: minutes, 5: seconds, 6: microseconds\n         for level in range(5, -1, -1):\n             if len(np.unique(tickdate[:, level])) > 1:\n-                if level < 2:\n+                # Only disable offset if we're showing years directly in the ticks\n+                if level == 0:\n                     show_offset = False\n                 break\n             elif level == 0:\n                 # all tickdate are the same, so only micros might be different\n-                # set to the most precise (6: microseconds doesn't exist...)\n+                # but we still want to show the year in the offset\n                 level = 5\n \n         # level is the basic level we will label at.\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/dates.py b/lib/matplotlib/dates.py\nindex 6ad34f7..54b0cb0 100644\n--- a/lib/matplotlib/dates.py\n+++ b/lib/matplotlib/dates.py\n@@ -197,7 +197,7 @@ class ConciseDateFormatter(ticker.Formatter):\n         show_offset = self.show_offset\n         for level in range(5, -1, -1):\n             if len(np.unique(tickdate[:, level])) > 1:\n-                if level < 2:\n+                if level == 0:\n                     show_offset = False\n                 break\n             elif level == 0:\n", "normalized_occurrence": 7}
