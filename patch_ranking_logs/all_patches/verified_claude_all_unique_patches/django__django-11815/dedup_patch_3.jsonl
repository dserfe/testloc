{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11815", "model_patch": "diff --git a/django/db/migrations/writer.py b/django/db/migrations/writer.py\nindex 36f0ec3..407065d 100644\n--- a/django/db/migrations/writer.py\n+++ b/django/db/migrations/writer.py\n@@ -278,6 +278,16 @@ class MigrationWriter:\n     def unregister_serializer(cls, type_):\n         Serializer.unregister(type_)\n \n+    @classmethod\n+    def serialize_enum(cls, enum_obj):\n+        \"\"\"\n+        Special handling for Enum objects to use name instead of value.\n+        \"\"\"\n+        if hasattr(enum_obj, '_name_'):  # Check if it's an Enum member\n+            enum_class = enum_obj.__class__\n+            return f\"{enum_class.__name__}['{enum_obj.name}']\"\n+        return str(enum_obj)\n+\n \n MIGRATION_HEADER_TEMPLATE = \"\"\"\\\n # Generated by Django %(version)s on %(timestamp)s\n", "occurrence": 1, "normalized_patch": "--- a/django/db/migrations/writer.py\n+++ b/django/db/migrations/writer.py\n+    @classmethod\n+    def serialize_enum(cls, enum_obj):\n+        if hasattr(enum_obj, '_name_'):\n+            enum_class = enum_obj.__class__\n+            return f\"{enum_class.__name__}['{enum_obj.name}']\"\n+        return str(enum_obj)", "normalized_occurrence": 1}
