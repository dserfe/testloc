{"model_name_or_path": "agentless", "instance_id": "django__django-16642", "model_patch": "diff --git a/django/http/response.py b/django/http/response.py\nindex b918697..7c0be54 100644\n--- a/django/http/response.py\n+++ b/django/http/response.py\n@@ -612,6 +612,9 @@ class FileResponse(StreamingHttpResponse):\n                     \"bzip2\": \"application/x-bzip\",\n                     \"gzip\": \"application/gzip\",\n                     \"xz\": \"application/x-xz\",\n+                    \"br\": \"application/x-brotli\",\n+                    \"compress\": \"application/x-compress\",\n+                    \"Z\": \"application/x-compress\",\n                 }.get(encoding, content_type)\n                 self.headers[\"Content-Type\"] = (\n                     content_type or \"application/octet-stream\"\n", "occurrence": 1, "normalized_patch": "diff --git a/django/http/response.py b/django/http/response.py\nindex 508a8a7..c77d22f 100644\n--- a/django/http/response.py\n+++ b/django/http/response.py\n@@ -329,7 +329,7 @@ class FileResponse(StreamingHttpResponse):\n         if self._no_explicit_content_type:\n             if filename:\n                 content_type, encoding = mimetypes.guess_type(filename)\n-                content_type = {'bzip2': 'application/x-bzip', 'gzip': 'application/gzip', 'xz': 'application/x-xz'}.get(encoding, content_type)\n+                content_type = {'bzip2': 'application/x-bzip', 'gzip': 'application/gzip', 'xz': 'application/x-xz', 'br': 'application/x-brotli', 'compress': 'application/x-compress', 'Z': 'application/x-compress'}.get(encoding, content_type)\n                 self.headers['Content-Type'] = content_type or 'application/octet-stream'\n             else:\n                 self.headers['Content-Type'] = 'application/octet-stream'\n", "normalized_occurrence": 1}
