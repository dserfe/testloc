{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-17630", "model_patch": "diff --git a/sympy/matrices/expressions/matmul.py b/sympy/matrices/expressions/matmul.py\nindex bc38a10..afd050e 100644\n--- a/sympy/matrices/expressions/matmul.py\n+++ b/sympy/matrices/expressions/matmul.py\n@@ -217,10 +217,12 @@ def newmul(*args):\n     return new(MatMul, *args)\n \n def any_zeros(mul):\n-    if any([arg.is_zero or (arg.is_Matrix and arg.is_ZeroMatrix)\n-                       for arg in mul.args]):\n-        matrices = [arg for arg in mul.args if arg.is_Matrix]\n-        return ZeroMatrix(matrices[0].rows, matrices[-1].cols)\n+    if any(arg.is_zero or (hasattr(arg, 'is_Matrix') and arg.is_Matrix and arg.is_ZeroMatrix)\n+                       for arg in mul.args):\n+        matrices = [arg for arg in mul.args if hasattr(arg, 'is_Matrix') and arg.is_Matrix]\n+        if matrices:\n+            return ZeroMatrix(matrices[0].rows, matrices[-1].cols)\n+        return mul.args[0] if mul.args else ZeroMatrix(0, 0)  # fallback\n     return mul\n \n def merge_explicit(matmul):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/expressions/matmul.py b/sympy/matrices/expressions/matmul.py\nindex e0bcc69..67e30b7 100644\n--- a/sympy/matrices/expressions/matmul.py\n+++ b/sympy/matrices/expressions/matmul.py\n@@ -131,9 +131,11 @@ def newmul(*args):\n         args = args[1:]\n     return new(MatMul, *args)\n def any_zeros(mul):\n-    if any([arg.is_zero or (arg.is_Matrix and arg.is_ZeroMatrix) for arg in mul.args]):\n-        matrices = [arg for arg in mul.args if arg.is_Matrix]\n-        return ZeroMatrix(matrices[0].rows, matrices[-1].cols)\n+    if any((arg.is_zero or (hasattr(arg, 'is_Matrix') and arg.is_Matrix and arg.is_ZeroMatrix) for arg in mul.args)):\n+        matrices = [arg for arg in mul.args if hasattr(arg, 'is_Matrix') and arg.is_Matrix]\n+        if matrices:\n+            return ZeroMatrix(matrices[0].rows, matrices[-1].cols)\n+        return mul.args[0] if mul.args else ZeroMatrix(0, 0)\n     return mul\n def merge_explicit(matmul):\n     if not any((isinstance(arg, MatrixBase) for arg in matmul.args)):\n", "normalized_occurrence": 1}
