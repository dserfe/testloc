{"model_name_or_path": "agentless", "instance_id": "django__django-11265", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 067de0d..788410e 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -894,7 +894,9 @@ class QuerySet:\n \n         clone = self._chain()\n         if negate:\n-            clone.query.add_q(~Q(*args, **kwargs))\n+            q_object = Q(*args, **kwargs)\n+            q_object.negate()\n+            clone.query.add_q(q_object)\n         else:\n             clone.query.add_q(Q(*args, **kwargs))\n         return clone\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 19f2cc6..cd5f7e1 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -530,7 +530,9 @@ class QuerySet:\n             assert self.query.can_filter(), 'Cannot filter a query once a slice has been taken.'\n         clone = self._chain()\n         if negate:\n-            clone.query.add_q(~Q(*args, **kwargs))\n+            q_object = Q(*args, **kwargs)\n+            q_object.negate()\n+            clone.query.add_q(q_object)\n         else:\n             clone.query.add_q(Q(*args, **kwargs))\n         return clone\n", "normalized_occurrence": 1}
