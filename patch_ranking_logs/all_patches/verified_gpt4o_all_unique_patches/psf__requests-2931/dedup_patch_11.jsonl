{"model_name_or_path": "agentless", "instance_id": "psf__requests-2931", "model_patch": "diff --git a/requests/models.py b/requests/models.py\nindex 85fd980..57fba7f 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -443,12 +443,14 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n             if files:\n                 (body, content_type) = self._encode_files(files, data)\n             else:\n-                if data:\n+                if data and not isinstance(data, (bytes, bytearray)):\n                     body = self._encode_params(data)\n                     if isinstance(data, basestring) or hasattr(data, 'read'):\n                         content_type = None\n                     else:\n                         content_type = 'application/x-www-form-urlencoded'\n+                else:\n+                    body = data\n \n             self.prepare_content_length(body)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/requests/models.py b/requests/models.py\nindex 1874285..4658ad0 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -235,12 +235,14 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         else:\n             if files:\n                 body, content_type = self._encode_files(files, data)\n-            elif data:\n+            elif data and (not isinstance(data, (bytes, bytearray))):\n                 body = self._encode_params(data)\n                 if isinstance(data, basestring) or hasattr(data, 'read'):\n                     content_type = None\n                 else:\n                     content_type = 'application/x-www-form-urlencoded'\n+            else:\n+                body = data\n             self.prepare_content_length(body)\n             if content_type and 'content-type' not in self.headers:\n                 self.headers['Content-Type'] = content_type\n", "normalized_occurrence": 1}
