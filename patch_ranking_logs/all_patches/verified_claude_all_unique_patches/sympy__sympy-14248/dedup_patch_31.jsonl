{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-14248", "model_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex d02494c..e07c89f 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1477,9 +1477,15 @@ class LatexPrinter(Printer):\n             return r\"%s^\\dagger\" % self._print(mat)\n \n     def _print_MatAdd(self, expr):\n-        terms = list(expr.args)\n-        tex = \" + \".join(map(self._print, terms))\n-        return tex\n+        terms = []\n+        for term in expr.args:\n+            from sympy import Mul\n+            if isinstance(term, Mul) and term.args[0] == -1:\n+                # For -1 * X, print as -X\n+                terms.append(\"-\" + self._print(Mul._from_args(term.args[1:])))\n+            else:\n+                terms.append(self._print(term))\n+        return \" + \".join(terms)\n \n     def _print_MatMul(self, expr):\n         from sympy import Add, MatAdd, HadamardProduct\ndiff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 41521ad..479768a 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -819,7 +819,16 @@ class PrettyPrinter(Printer):\n         return self._print(B.blocks)\n \n     def _print_MatAdd(self, expr):\n-        return self._print_seq(expr.args, None, None, ' + ')\n+        terms = []\n+        for arg in expr.args:\n+            from sympy import Mul\n+            if isinstance(arg, Mul) and arg.args[0] == -1:\n+                # For -1 * X, print as -X\n+                pform = self._print(Mul._from_args(arg.args[1:]))\n+                terms.append(prettyForm(binding=prettyForm.NEG, arg=pform))\n+            else:\n+                terms.append(self._print(arg))\n+        return prettyForm(*stringPict.next(terms, ' + '))\n \n     def _print_MatMul(self, expr):\n         args = list(expr.args)\ndiff --git a/sympy/printing/str.py b/sympy/printing/str.py\nindex 29d16bd..b02b910 100644\n--- a/sympy/printing/str.py\n+++ b/sympy/printing/str.py\n@@ -312,8 +312,15 @@ class StrPrinter(Printer):\n             for arg in expr.args])\n \n     def _print_MatAdd(self, expr):\n-        return ' + '.join([self.parenthesize(arg, precedence(expr))\n-            for arg in expr.args])\n+        terms = []\n+        for arg in expr.args:\n+            from sympy import Mul\n+            if isinstance(arg, Mul) and arg.args[0] == -1:\n+                # For -1 * X, print as -X\n+                terms.append(\"-\" + self.parenthesize(Mul._from_args(arg.args[1:]), precedence(expr)))\n+            else:\n+                terms.append(self.parenthesize(arg, precedence(expr)))\n+        return ' + '.join(terms)\n \n     def _print_NaN(self, expr):\n         return 'nan'\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/str.py b/sympy/printing/str.py\nindex a98e2a9..f30597f 100644\n--- a/sympy/printing/str.py\n+++ b/sympy/printing/str.py\n@@ -224,7 +224,14 @@ class StrPrinter(Printer):\n     def _print_HadamardProduct(self, expr):\n         return '.*'.join([self.parenthesize(arg, precedence(expr)) for arg in expr.args])\n     def _print_MatAdd(self, expr):\n-        return ' + '.join([self.parenthesize(arg, precedence(expr)) for arg in expr.args])\n+        terms = []\n+        for arg in expr.args:\n+            from sympy import Mul\n+            if isinstance(arg, Mul) and arg.args[0] == -1:\n+                terms.append('-' + self.parenthesize(Mul._from_args(arg.args[1:]), precedence(expr)))\n+            else:\n+                terms.append(self.parenthesize(arg, precedence(expr)))\n+        return ' + '.join(terms)\n     def _print_NaN(self, expr):\n         return 'nan'\n     def _print_NegativeInfinity(self, expr):\ndiff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 928334c..810f916 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -586,7 +586,15 @@ class PrettyPrinter(Printer):\n             return self._print(B.blocks[0, 0])\n         return self._print(B.blocks)\n     def _print_MatAdd(self, expr):\n-        return self._print_seq(expr.args, None, None, ' + ')\n+        terms = []\n+        for arg in expr.args:\n+            from sympy import Mul\n+            if isinstance(arg, Mul) and arg.args[0] == -1:\n+                pform = self._print(Mul._from_args(arg.args[1:]))\n+                terms.append(prettyForm(binding=prettyForm.NEG, arg=pform))\n+            else:\n+                terms.append(self._print(arg))\n+        return prettyForm(*stringPict.next(terms, ' + '))\n     def _print_MatMul(self, expr):\n         args = list(expr.args)\n         from sympy import Add, MatAdd, HadamardProduct\ndiff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 5c88620..ce17673 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -964,9 +964,14 @@ class LatexPrinter(Printer):\n         else:\n             return '%s^\\\\dagger' % self._print(mat)\n     def _print_MatAdd(self, expr):\n-        terms = list(expr.args)\n-        tex = ' + '.join(map(self._print, terms))\n-        return tex\n+        terms = []\n+        for term in expr.args:\n+            from sympy import Mul\n+            if isinstance(term, Mul) and term.args[0] == -1:\n+                terms.append('-' + self._print(Mul._from_args(term.args[1:])))\n+            else:\n+                terms.append(self._print(term))\n+        return ' + '.join(terms)\n     def _print_MatMul(self, expr):\n         from sympy import Add, MatAdd, HadamardProduct\n         def parens(x):\n", "normalized_occurrence": 1}
