{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-25570", "model_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex 36a655a..a5d09af 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -526,6 +526,16 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n             # No feature names\n             return np.array([], dtype=object)\n \n+        # Filter out empty transformers that have no feature names\n+        transformer_with_feature_names_out = [\n+            (name, feat_names) for name, feat_names in transformer_with_feature_names_out\n+            if len(feat_names) > 0\n+        ]\n+\n+        if not transformer_with_feature_names_out:\n+            # All transformers were empty\n+            return np.array([], dtype=object)\n+\n         return self._add_prefix_for_feature_names_out(\n             transformer_with_feature_names_out\n         )\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex 03f51bb..ede324f 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -131,6 +131,9 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n             if feature_names_out is None:\n                 continue\n             transformer_with_feature_names_out.append((name, feature_names_out))\n+        if not transformer_with_feature_names_out:\n+            return np.array([], dtype=object)\n+        transformer_with_feature_names_out = [(name, feat_names) for name, feat_names in transformer_with_feature_names_out if len(feat_names) > 0]\n         if not transformer_with_feature_names_out:\n             return np.array([], dtype=object)\n         return self._add_prefix_for_feature_names_out(transformer_with_feature_names_out)\n", "normalized_occurrence": 1}
