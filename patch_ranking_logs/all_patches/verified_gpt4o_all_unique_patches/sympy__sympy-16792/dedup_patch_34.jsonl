{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-16792", "model_patch": "diff --git a/sympy/utilities/autowrap.py b/sympy/utilities/autowrap.py\nindex 6b78c94..ebfb420 100644\n--- a/sympy/utilities/autowrap.py\n+++ b/sympy/utilities/autowrap.py\n@@ -413,7 +413,7 @@ setup(ext_modules=cythonize(ext_mods, **cy_opts))\n         py_locals = []\n         py_inferred = {}\n         for arg in args:\n-            if isinstance(arg, OutputArgument):\n+            if isinstance(arg, OutputArgument) or (isinstance(arg, InputArgument) and not expr.has(arg.name)):\n                 py_returns.append(arg)\n                 py_locals.append(arg)\n             elif isinstance(arg, InOutArgument):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/utilities/autowrap.py b/sympy/utilities/autowrap.py\nindex da40c47..3e5532c 100644\n--- a/sympy/utilities/autowrap.py\n+++ b/sympy/utilities/autowrap.py\n@@ -172,7 +172,7 @@ class CythonCodeWrapper(CodeWrapper):\n         py_locals = []\n         py_inferred = {}\n         for arg in args:\n-            if isinstance(arg, OutputArgument):\n+            if isinstance(arg, OutputArgument) or (isinstance(arg, InputArgument) and (not expr.has(arg.name))):\n                 py_returns.append(arg)\n                 py_locals.append(arg)\n             elif isinstance(arg, InOutArgument):\n", "normalized_occurrence": 1}
