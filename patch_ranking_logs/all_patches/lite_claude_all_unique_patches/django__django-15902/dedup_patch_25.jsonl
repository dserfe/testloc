{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15902", "model_patch": "diff --git a/django/forms/renderers.py b/django/forms/renderers.py\nindex f215e38..7ce69e7 100644\n--- a/django/forms/renderers.py\n+++ b/django/forms/renderers.py\n@@ -25,6 +25,15 @@ class BaseRenderer:\n         raise NotImplementedError(\"subclasses must implement get_template()\")\n \n     def render(self, template_name, context, request=None):\n+        # Special case for ManagementForm which only needs hidden inputs\n+        if (\n+            template_name == self.form_template_name\n+            and context.get(\"form\")\n+            and context[\"form\"].__class__.__name__ == \"ManagementForm\"\n+        ):\n+            return \"\".join(\n+                str(field) for field in context[\"form\"].hidden_fields()\n+            )\n         template = self.get_template(template_name)\n         return template.render(context, request=request).strip()\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/renderers.py b/django/forms/renderers.py\nindex 6842533..923d068 100644\n--- a/django/forms/renderers.py\n+++ b/django/forms/renderers.py\n@@ -15,6 +15,8 @@ class BaseRenderer:\n     def get_template(self, template_name):\n         raise NotImplementedError('subclasses must implement get_template()')\n     def render(self, template_name, context, request=None):\n+        if template_name == self.form_template_name and context.get('form') and (context['form'].__class__.__name__ == 'ManagementForm'):\n+            return ''.join((str(field) for field in context['form'].hidden_fields()))\n         template = self.get_template(template_name)\n         return template.render(context, request=request).strip()\n class EngineMixin:\n", "normalized_occurrence": 1}
