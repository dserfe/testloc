{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-11040", "model_patch": "diff --git a/sklearn/neighbors/base.py b/sklearn/neighbors/base.py\nindex 01d85d0..8cd4a6d 100644\n--- a/sklearn/neighbors/base.py\n+++ b/sklearn/neighbors/base.py\n@@ -327,6 +327,11 @@ class KNeighborsMixin(object):\n \n         if n_neighbors is None:\n             n_neighbors = self.n_neighbors\n+            \n+        if not isinstance(n_neighbors, (int, np.integer)):\n+            raise TypeError(\n+                \"n_neighbors does not take float values, got %r\" % n_neighbors\n+            )\n \n         if X is not None:\n             query_is_train = False\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/neighbors/base.py b/sklearn/neighbors/base.py\nindex ddfefae..495d538 100644\n--- a/sklearn/neighbors/base.py\n+++ b/sklearn/neighbors/base.py\n@@ -162,6 +162,8 @@ class KNeighborsMixin(object):\n         check_is_fitted(self, '_fit_method')\n         if n_neighbors is None:\n             n_neighbors = self.n_neighbors\n+        if not isinstance(n_neighbors, (int, np.integer)):\n+            raise TypeError('n_neighbors does not take float values, got %r' % n_neighbors)\n         if X is not None:\n             query_is_train = False\n             X = check_array(X, accept_sparse='csr')\n", "normalized_occurrence": 2}
