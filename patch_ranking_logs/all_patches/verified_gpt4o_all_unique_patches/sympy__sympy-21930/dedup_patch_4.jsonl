{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-21930", "model_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 6e027b7..621d237 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -657,6 +657,10 @@ class LatexPrinter(Printer):\n             if expr.base.is_Function:\n                 return self._print(expr.base, exp=self._print(expr.exp))\n             else:\n+                base = self.parenthesize(expr.base, PRECEDENCE['Pow'])\n+                # Ensure that the base is wrapped in curly braces if it contains special characters\n+                if re.search(r'\\\\[a-zA-Z]+', base):\n+                    base = r\"{%s}\" % base\n                 tex = r\"%s^{%s}\"\n                 return self._helper_print_standard_power(expr, tex)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex e96dc3e..c977e93 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -351,6 +351,9 @@ class LatexPrinter(Printer):\n         elif expr.base.is_Function:\n             return self._print(expr.base, exp=self._print(expr.exp))\n         else:\n+            base = self.parenthesize(expr.base, PRECEDENCE['Pow'])\n+            if re.search('\\\\\\\\[a-zA-Z]+', base):\n+                base = '{%s}' % base\n             tex = '%s^{%s}'\n             return self._helper_print_standard_power(expr, tex)\n     def _helper_print_standard_power(self, expr, template):\n", "normalized_occurrence": 1}
