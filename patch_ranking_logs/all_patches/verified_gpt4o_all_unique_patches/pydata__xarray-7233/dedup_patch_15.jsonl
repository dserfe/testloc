{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-7233", "model_patch": "diff --git a/xarray/core/rolling.py b/xarray/core/rolling.py\nindex d923cdb..365dbaf 100644\n--- a/xarray/core/rolling.py\n+++ b/xarray/core/rolling.py\n@@ -1107,7 +1107,7 @@ class DatasetCoarsen(Coarsen[\"Dataset\"]):\n                     **kwargs,\n                 )\n \n-            coords = {}\n+            coords = {c: v for c, v in self.obj.coords.items()}\n             for c, v in self.obj.coords.items():\n                 # variable.coarsen returns variables not containing the window dims\n                 # unchanged (maybe removes attrs)\n@@ -1148,4 +1148,4 @@ class DatasetCoarsen(Coarsen[\"Dataset\"]):\n             Arrays with summarized data.\n         \"\"\"\n         wrapped_func = self._reduce_method(func)\n-        return wrapped_func(self, keep_attrs=keep_attrs, **kwargs)\n+        return wrapped_func(self, keep_attrs=keep_attrs, **kwargs)\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/rolling.py b/xarray/core/rolling.py\nindex 988b7e6..c3aa427 100644\n--- a/xarray/core/rolling.py\n+++ b/xarray/core/rolling.py\n@@ -352,7 +352,7 @@ class DatasetCoarsen(Coarsen['Dataset']):\n             reduced = {}\n             for key, da in self.obj.data_vars.items():\n                 reduced[key] = da.variable.coarsen(self.windows, func, self.boundary, self.side, keep_attrs=keep_attrs, **kwargs)\n-            coords = {}\n+            coords = {c: v for c, v in self.obj.coords.items()}\n             for c, v in self.obj.coords.items():\n                 coords[c] = v.variable.coarsen(self.windows, self.coord_func[c], self.boundary, self.side, keep_attrs=keep_attrs, **kwargs)\n             return Dataset(reduced, coords=coords, attrs=attrs)\n", "normalized_occurrence": 1}
