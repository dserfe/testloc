{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-4970", "model_patch": "diff --git a/pylint/checkers/similar.py b/pylint/checkers/similar.py\nindex 79a566f..ebe7c5c 100644\n--- a/pylint/checkers/similar.py\n+++ b/pylint/checkers/similar.py\n@@ -396,6 +396,8 @@ class Similar:\n         \"\"\"compute similarities in appended files\"\"\"\n         no_duplicates: Dict[int, List[Set[LinesChunkLimits_T]]] = defaultdict(list)\n \n+        if self.min_lines == 0:\n+            return []\n         for commonality in self._iter_sims():\n             num = commonality.cmn_lines_nb\n             lineset1 = commonality.fst_lset\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/checkers/similar.py b/pylint/checkers/similar.py\nindex 0997b2e..afa1238 100644\n--- a/pylint/checkers/similar.py\n+++ b/pylint/checkers/similar.py\n@@ -141,6 +141,8 @@ class Similar:\n         self._display_sims(self._compute_sims())\n     def _compute_sims(self) -> List[Tuple[int, Set[LinesChunkLimits_T]]]:\n         no_duplicates: Dict[int, List[Set[LinesChunkLimits_T]]] = defaultdict(list)\n+        if self.min_lines == 0:\n+            return []\n         for commonality in self._iter_sims():\n             num = commonality.cmn_lines_nb\n             lineset1 = commonality.fst_lset\n", "normalized_occurrence": 1}
