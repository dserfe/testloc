{"model_name_or_path": "agentless", "instance_id": "psf__requests-2674", "model_patch": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex 06b1117..c75684b 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -372,7 +372,10 @@ class HTTPAdapter(BaseAdapter):\n                 )\n \n             # Send the request.\n-            else:\n+            elif isinstance(e, DecodeError):\n+                raise ContentDecodingError(e, request=request)\n+            elif isinstance(e, TimeoutError):\n+                raise ReadTimeout(e, request=request)\n                 if hasattr(conn, 'proxy_pool'):\n                     conn = conn.proxy_pool\n \n@@ -424,12 +427,15 @@ class HTTPAdapter(BaseAdapter):\n         except _ProxyError as e:\n             raise ProxyError(e)\n \n-        except (_SSLError, _HTTPError) as e:\n+        except (_SSLError, _HTTPError, DecodeError, TimeoutError) as e:\n             if isinstance(e, _SSLError):\n                 raise SSLError(e, request=request)\n             elif isinstance(e, ReadTimeoutError):\n                 raise ReadTimeout(e, request=request)\n-            else:\n+            elif isinstance(e, DecodeError):\n+                raise ContentDecodingError(e, request=request)\n+            elif isinstance(e, TimeoutError):\n+                raise ReadTimeout(e, request=request)\n                 raise\n \n-        return self.build_response(request, resp)\n+        return self.build_response(request, resp)\n", "occurrence": 1, "normalized_patch": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex 9062cd5..44faf01 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -145,7 +145,10 @@ class HTTPAdapter(BaseAdapter):\n         try:\n             if not chunked:\n                 resp = conn.urlopen(method=request.method, url=url, body=request.body, headers=request.headers, redirect=False, assert_same_host=False, preload_content=False, decode_content=False, retries=self.max_retries, timeout=timeout)\n-            else:\n+            elif isinstance(e, DecodeError):\n+                raise ContentDecodingError(e, request=request)\n+            elif isinstance(e, TimeoutError):\n+                raise ReadTimeout(e, request=request)\n                 if hasattr(conn, 'proxy_pool'):\n                     conn = conn.proxy_pool\n                 low_conn = conn._get_conn(timeout=DEFAULT_POOL_TIMEOUT)\n@@ -175,11 +178,14 @@ class HTTPAdapter(BaseAdapter):\n             raise ConnectionError(e, request=request)\n         except _ProxyError as e:\n             raise ProxyError(e)\n-        except (_SSLError, _HTTPError) as e:\n+        except (_SSLError, _HTTPError, DecodeError, TimeoutError) as e:\n             if isinstance(e, _SSLError):\n                 raise SSLError(e, request=request)\n             elif isinstance(e, ReadTimeoutError):\n                 raise ReadTimeout(e, request=request)\n-            else:\n+            elif isinstance(e, DecodeError):\n+                raise ContentDecodingError(e, request=request)\n+            elif isinstance(e, TimeoutError):\n+                raise ReadTimeout(e, request=request)\n                 raise\n         return self.build_response(request, resp)\n\\ No newline at end of file\n", "normalized_occurrence": 1}
