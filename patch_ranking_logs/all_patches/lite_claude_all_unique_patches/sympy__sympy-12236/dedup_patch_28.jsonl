{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-12236", "model_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 03af2f5..c470221 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -121,6 +121,11 @@ def apart(f, x=None, full=False, **options):\n         fc = f.cancel()\n         if fc != f:\n             return apart(fc, x=x, full=full, **_options)\n+        \n+        # Handle expressions with symbolic coefficients\n+        if x is not None:\n+            # Only consider the specified variable for partial fraction decomposition\n+            return apart_undetermined_coeffs(P.as_poly(x), Q.as_poly(x))\n \n         raise NotImplementedError(\n             \"multivariate partial fraction decomposition\")\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 21c4bd7..1f6f9d5 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -58,6 +58,8 @@ def apart(f, x=None, full=False, **options):\n         fc = f.cancel()\n         if fc != f:\n             return apart(fc, x=x, full=full, **_options)\n+        if x is not None:\n+            return apart_undetermined_coeffs(P.as_poly(x), Q.as_poly(x))\n         raise NotImplementedError('multivariate partial fraction decomposition')\n     common, P, Q = P.cancel(Q)\n     poly, P = P.div(Q, auto=True)\n", "normalized_occurrence": 1}
