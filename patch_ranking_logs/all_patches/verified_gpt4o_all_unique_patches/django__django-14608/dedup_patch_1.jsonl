{"model_name_or_path": "agentless", "instance_id": "django__django-14608", "model_patch": "diff --git a/django/forms/formsets.py b/django/forms/formsets.py\nindex beca557..540a64e 100644\n--- a/django/forms/formsets.py\n+++ b/django/forms/formsets.py\n@@ -333,7 +333,7 @@ class BaseFormSet:\n         self._non_form_errors.\n         \"\"\"\n         self._errors = []\n-        self._non_form_errors = self.error_class()\n+        self._non_form_errors = self.error_class(error_class='nonform')\n         empty_forms_count = 0\n \n         if not self.is_bound:  # Stop further processing.\n@@ -380,7 +380,7 @@ class BaseFormSet:\n             # Give self.clean() a chance to do cross-form validation.\n             self.clean()\n         except ValidationError as e:\n-            self._non_form_errors = self.error_class(e.error_list)\n+            self._non_form_errors = self.error_class(e.error_list, error_class='nonform')\n \n     def clean(self):\n         \"\"\"\n", "occurrence": 9, "normalized_patch": "diff --git a/django/forms/formsets.py b/django/forms/formsets.py\nindex 296e58d..feb6901 100644\n--- a/django/forms/formsets.py\n+++ b/django/forms/formsets.py\n@@ -178,7 +178,7 @@ class BaseFormSet:\n         return forms_valid and (not self.non_form_errors())\n     def full_clean(self):\n         self._errors = []\n-        self._non_form_errors = self.error_class()\n+        self._non_form_errors = self.error_class(error_class='nonform')\n         empty_forms_count = 0\n         if not self.is_bound:\n             return\n@@ -199,7 +199,7 @@ class BaseFormSet:\n                 raise ValidationError(ngettext('Please submit at least %d form.', 'Please submit at least %d forms.', self.min_num) % self.min_num, code='too_few_forms')\n             self.clean()\n         except ValidationError as e:\n-            self._non_form_errors = self.error_class(e.error_list)\n+            self._non_form_errors = self.error_class(e.error_list, error_class='nonform')\n     def clean(self):\n         pass\n     def has_changed(self):\n", "normalized_occurrence": 9}
