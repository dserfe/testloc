{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16950", "model_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 71f23cb..f21ee0b 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -68,6 +68,16 @@ def construct_instance(form, instance, fields=None, exclude=None):\n         # Leave defaults for fields that aren't in POST data, except for\n         # checkbox inputs because they don't appear in POST data if not checked.\n         if (\n+            f.has_default()\n+            and not f.editable  # Don't skip non-editable fields with defaults\n+            and form[f.name].field.widget.value_omitted_from_data(\n+                form.data, form.files, form.add_prefix(f.name)\n+            )\n+            and cleaned_data.get(f.name) in form[f.name].field.empty_values\n+        ):\n+            f.save_form_data(instance, f.get_default())\n+            continue\n+        elif (\n             f.has_default()\n             and form[f.name].field.widget.value_omitted_from_data(\n                 form.data, form.files, form.add_prefix(f.name)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 69a73a2..f95baa6 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -23,7 +23,10 @@ def construct_instance(form, instance, fields=None, exclude=None):\n             continue\n         if exclude and f.name in exclude:\n             continue\n-        if f.has_default() and form[f.name].field.widget.value_omitted_from_data(form.data, form.files, form.add_prefix(f.name)) and (cleaned_data.get(f.name) in form[f.name].field.empty_values):\n+        if f.has_default() and (not f.editable) and form[f.name].field.widget.value_omitted_from_data(form.data, form.files, form.add_prefix(f.name)) and (cleaned_data.get(f.name) in form[f.name].field.empty_values):\n+            f.save_form_data(instance, f.get_default())\n+            continue\n+        elif f.has_default() and form[f.name].field.widget.value_omitted_from_data(form.data, form.files, form.add_prefix(f.name)) and (cleaned_data.get(f.name) in form[f.name].field.empty_values):\n             continue\n         if isinstance(f, models.FileField):\n             file_field_list.append(f)\n", "normalized_occurrence": 1}
