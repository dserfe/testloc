{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-13584", "model_patch": "diff --git a/sklearn/_config.py b/sklearn/_config.py\nindex a47026e..14ee860 100644\n--- a/sklearn/_config.py\n+++ b/sklearn/_config.py\n@@ -1,8 +1,29 @@\n+\n \"\"\"Global configuration state and functions for management\n \"\"\"\n import os\n+import numpy as np\n from contextlib import contextmanager as contextmanager\n \n+def _is_param_equal(param1, param2):\n+    \"\"\"Helper function to compare two parameters that might be numpy arrays.\n+    \n+    Parameters\n+    ----------\n+    param1 : object\n+        First parameter to compare\n+    param2 : object\n+        Second parameter to compare\n+        \n+    Returns\n+    -------\n+    bool\n+        True if the parameters are equal, False otherwise\n+    \"\"\"\n+    if isinstance(param1, np.ndarray) or isinstance(param2, np.ndarray):\n+        return np.array_equal(param1, param2)\n+    return param1 == param2\n+\n _global_config = {\n     'assume_finite': bool(os.environ.get('SKLEARN_ASSUME_FINITE', False)),\n     'working_memory': int(os.environ.get('SKLEARN_WORKING_MEMORY', 1024)),\n", "occurrence": 1, "normalized_patch": "--- a/sklearn/_config.py\n+++ b/sklearn/_config.py\n+import numpy as np\n+def _is_param_equal(param1, param2):\n+    if isinstance(param1, np.ndarray) or isinstance(param2, np.ndarray):\n+        return np.array_equal(param1, param2)\n+    return param1 == param2", "normalized_occurrence": 1}
