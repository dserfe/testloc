{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-20442", "model_patch": "diff --git a/sympy/physics/units/util.py b/sympy/physics/units/util.py\nindex f42b6a4..59b10ef 100644\n--- a/sympy/physics/units/util.py\n+++ b/sympy/physics/units/util.py\n@@ -21,6 +21,14 @@ def _get_conversion_matrix_for_expr(expr, target_units, unit_system):\n     canon_dim_units = [i for x in target_dims for i in dimension_system.get_dimensional_dependencies(x, mark_dimensionless=True)]\n     canon_expr_units = {i for i in dim_dependencies}\n \n+    # Check that the expression and target dimensions are compatible\n+    if expr_dim != Dimension(1):\n+        target_dim = Dimension(1)\n+        for unit, exp in zip(target_units, [1]*len(target_units)):\n+            target_dim = target_dim * Dimension(unit_system.get_dimensional_expr(unit))**exp\n+        if expr_dim != target_dim:\n+            return None\n+\n     if not canon_expr_units.issubset(set(canon_dim_units)):\n         return None\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/physics/units/util.py b/sympy/physics/units/util.py\nindex 8deb785..d72ac5d 100644\n--- a/sympy/physics/units/util.py\n+++ b/sympy/physics/units/util.py\n@@ -12,6 +12,12 @@ def _get_conversion_matrix_for_expr(expr, target_units, unit_system):\n     target_dims = [Dimension(unit_system.get_dimensional_expr(x)) for x in target_units]\n     canon_dim_units = [i for x in target_dims for i in dimension_system.get_dimensional_dependencies(x, mark_dimensionless=True)]\n     canon_expr_units = {i for i in dim_dependencies}\n+    if expr_dim != Dimension(1):\n+        target_dim = Dimension(1)\n+        for unit, exp in zip(target_units, [1] * len(target_units)):\n+            target_dim = target_dim * Dimension(unit_system.get_dimensional_expr(unit)) ** exp\n+        if expr_dim != target_dim:\n+            return None\n     if not canon_expr_units.issubset(set(canon_dim_units)):\n         return None\n     seen = set()\n", "normalized_occurrence": 1}
