{"model_name_or_path": "agentless", "instance_id": "django__django-14351", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 9591387..358f3ef 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -485,6 +485,9 @@ class Query(BaseExpression):\n                 # field selected in the inner query, yet we must use a subquery.\n                 # So, make sure at least one field is selected.\n                 inner_query.select = (self.model._meta.pk.get_col(inner_query.get_initial_alias()),)\n+                if inner_query.default_cols:\n+                    inner_query.default_cols = False\n+                    inner_query.select = (self.model._meta.pk.get_col(inner_query.get_initial_alias()),)\n         else:\n             outer_query = self\n             self.select = ()\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex ec726d6..c1bf9f4 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -272,6 +272,9 @@ class Query(BaseExpression):\n                 inner_query.set_annotation_mask(inner_query.annotation_select_mask)\n             if inner_query.select == () and (not inner_query.default_cols) and (not inner_query.annotation_select_mask):\n                 inner_query.select = (self.model._meta.pk.get_col(inner_query.get_initial_alias()),)\n+                if inner_query.default_cols:\n+                    inner_query.default_cols = False\n+                    inner_query.select = (self.model._meta.pk.get_col(inner_query.get_initial_alias()),)\n         else:\n             outer_query = self\n             self.select = ()\n", "normalized_occurrence": 1}
