{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25332", "model_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 973eb1a..16f448e 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -3174,12 +3174,24 @@ None}, default: None\n         from matplotlib import _pylab_helpers\n         if self.canvas.manager in _pylab_helpers.Gcf.figs.values():\n             state['_restore_to_pylab'] = True\n+        if hasattr(self, '_align_label_groups'):\n+            state['_align_label_groups'] = {\n+                k: [ref() for ref in v if ref() is not None]\n+                for k, v in self._align_label_groups.items()\n+            }\n         return state\n \n     def __setstate__(self, state):\n         version = state.pop('__mpl_version__')\n         restore_to_pylab = state.pop('_restore_to_pylab', False)\n \n+        if '_align_label_groups' in state:\n+            align_label_groups = state.pop('_align_label_groups')\n+            self._align_label_groups = {\n+                k: [weakref.ref(ax) for ax in v]\n+                for k, v in align_label_groups.items()\n+            }\n+\n         if version != mpl.__version__:\n             _api.warn_external(\n                 f\"This figure was saved with matplotlib version {version} and \"\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 7796fb8..3b597f2 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -951,10 +951,15 @@ class Figure(FigureBase):\n         from matplotlib import _pylab_helpers\n         if self.canvas.manager in _pylab_helpers.Gcf.figs.values():\n             state['_restore_to_pylab'] = True\n+        if hasattr(self, '_align_label_groups'):\n+            state['_align_label_groups'] = {k: [ref() for ref in v if ref() is not None] for k, v in self._align_label_groups.items()}\n         return state\n     def __setstate__(self, state):\n         version = state.pop('__mpl_version__')\n         restore_to_pylab = state.pop('_restore_to_pylab', False)\n+        if '_align_label_groups' in state:\n+            align_label_groups = state.pop('_align_label_groups')\n+            self._align_label_groups = {k: [weakref.ref(ax) for ax in v] for k, v in align_label_groups.items()}\n         if version != mpl.__version__:\n             _api.warn_external(f'This figure was saved with matplotlib version {version} and is unlikely to function correctly.')\n         self.__dict__ = state\n", "normalized_occurrence": 1}
