{"model_name_or_path": "agentless", "instance_id": "django__django-11490", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 78e67cd..6aaacad 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -427,8 +427,8 @@ class SQLCompiler:\n                 # the query on all combined queries, if not already set.\n                 if not compiler.query.values_select and self.query.values_select:\n                     compiler.query.set_values((\n-                        *self.query.extra_select,\n-                        *self.query.values_select,\n+                        *self.query.extra_select.values(),\n+                        *self.query.values_select.values(),\n                         *self.query.annotation_select,\n                     ))\n                 part_sql, part_args = compiler.as_sql()\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex c7af2ab..d4f248e 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -241,7 +241,7 @@ class SQLCompiler:\n         for compiler in compilers:\n             try:\n                 if not compiler.query.values_select and self.query.values_select:\n-                    compiler.query.set_values((*self.query.extra_select, *self.query.values_select, *self.query.annotation_select))\n+                    compiler.query.set_values((*self.query.extra_select.values(), *self.query.values_select.values(), *self.query.annotation_select))\n                 part_sql, part_args = compiler.as_sql()\n                 if compiler.query.combinator:\n                     if not features.supports_parentheses_in_compound:\n", "normalized_occurrence": 1}
