{"model_name_or_path": "agentless", "instance_id": "django__django-14667", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 5d0565e..bb0ff74 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -1221,7 +1221,13 @@ class QuerySet:\n         if fields == (None,):\n             clone.query.clear_deferred_loading()\n         else:\n-            clone.query.add_deferred_loading(fields)\n+            existing_fields, _ = self.query.deferred_loading\n+            only_fields = self.query.select_related\n+            if only_fields:\n+                fields_to_defer = [field for field in fields if field not in only_fields]\n+                clone.query.add_deferred_loading(fields_to_defer)\n+            else:\n+                clone.query.add_deferred_loading(fields)\n         return clone\n \n     def only(self, *fields):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 0052c9e..a4bee78 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -741,7 +741,13 @@ class QuerySet:\n         if fields == (None,):\n             clone.query.clear_deferred_loading()\n         else:\n-            clone.query.add_deferred_loading(fields)\n+            existing_fields, _ = self.query.deferred_loading\n+            only_fields = self.query.select_related\n+            if only_fields:\n+                fields_to_defer = [field for field in fields if field not in only_fields]\n+                clone.query.add_deferred_loading(fields_to_defer)\n+            else:\n+                clone.query.add_deferred_loading(fields)\n         return clone\n     def only(self, *fields):\n         self._not_support_combined_queries('only')\n", "normalized_occurrence": 1}
