{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-20826", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 07605b5..eae9a41 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1199,6 +1199,11 @@ class _AxesBase(martist.Artist):\n             spine.clear()\n \n         self.ignore_existing_data_limits = True\n+\n+        # Ensure shared axis visibility is preserved\n+        xaxis_visible = self.xaxis.get_visible()\n+        yaxis_visible = self.yaxis.get_visible()\n+        patch_visible = self.patch.get_visible()\n         self.callbacks = cbook.CallbackRegistry()\n \n         if self._sharex is not None:\n@@ -1297,6 +1302,13 @@ class _AxesBase(martist.Artist):\n \n         self.set_axis_on()\n \n+        if self._sharex is not None:\n+            self.xaxis.set_visible(xaxis_visible)\n+            self.patch.set_visible(patch_visible)\n+        if self._sharey is not None:\n+            self.yaxis.set_visible(yaxis_visible)\n+            self.patch.set_visible(patch_visible)\n+\n         self.xaxis.set_clip_path(self.patch)\n         self.yaxis.set_clip_path(self.patch)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 33a6de3..4e271c0 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -508,6 +508,9 @@ class _AxesBase(martist.Artist):\n         for name, spine in self.spines.items():\n             spine.clear()\n         self.ignore_existing_data_limits = True\n+        xaxis_visible = self.xaxis.get_visible()\n+        yaxis_visible = self.yaxis.get_visible()\n+        patch_visible = self.patch.get_visible()\n         self.callbacks = cbook.CallbackRegistry()\n         if self._sharex is not None:\n             self.sharex(self._sharex)\n@@ -571,6 +574,12 @@ class _AxesBase(martist.Artist):\n         self.patch.set_linewidth(0)\n         self.patch.set_transform(self.transAxes)\n         self.set_axis_on()\n+        if self._sharex is not None:\n+            self.xaxis.set_visible(xaxis_visible)\n+            self.patch.set_visible(patch_visible)\n+        if self._sharey is not None:\n+            self.yaxis.set_visible(yaxis_visible)\n+            self.patch.set_visible(patch_visible)\n         self.xaxis.set_clip_path(self.patch)\n         self.yaxis.set_clip_path(self.patch)\n         self._shared_axes['x'].clean()\n", "normalized_occurrence": 1}
