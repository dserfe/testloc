{"model_name_or_path": "agentless", "instance_id": "mwaskom__seaborn-3187", "model_patch": "diff --git a/seaborn/relational.py b/seaborn/relational.py\nindex a94a471..23fc415 100644\n--- a/seaborn/relational.py\n+++ b/seaborn/relational.py\n@@ -278,6 +278,13 @@ class _RelationalPlotter(VectorPlotter):\n             size_levels, size_formatted_levels = locator_to_legend_entries(\n                 locator, limits, self.plot_data[\"size\"].infer_objects().dtype\n             )\n+            formatter = mpl.ticker.ScalarFormatter()\n+            formatter.create_dummy_axis()\n+            formatter.set_scientific(True)\n+            formatter.set_powerlimits((-3, 4))\n+            offset_value = formatter.get_offset()\n+            size_formatted_levels = [f\"{formatted_level} {offset_value}\" if offset_value else formatted_level \n+                                     for formatted_level in size_formatted_levels]\n         elif self._size_map.levels is None:\n             size_levels = size_formatted_levels = []\n         else:\n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/relational.py b/seaborn/relational.py\nindex 1613149..cac6af0 100644\n--- a/seaborn/relational.py\n+++ b/seaborn/relational.py\n@@ -64,6 +64,12 @@ class _RelationalPlotter(VectorPlotter):\n                 locator = mpl.ticker.MaxNLocator(nbins=brief_ticks)\n             limits = (min(self._size_map.levels), max(self._size_map.levels))\n             size_levels, size_formatted_levels = locator_to_legend_entries(locator, limits, self.plot_data['size'].infer_objects().dtype)\n+            formatter = mpl.ticker.ScalarFormatter()\n+            formatter.create_dummy_axis()\n+            formatter.set_scientific(True)\n+            formatter.set_powerlimits((-3, 4))\n+            offset_value = formatter.get_offset()\n+            size_formatted_levels = [f'{formatted_level} {offset_value}' if offset_value else formatted_level for formatted_level in size_formatted_levels]\n         elif self._size_map.levels is None:\n             size_levels = size_formatted_levels = []\n         else:\n", "normalized_occurrence": 1}
