{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-5262", "model_patch": "diff --git a/src/_pytest/capture.py b/src/_pytest/capture.py\nindex 6b2d076..2c81bf0 100644\n--- a/src/_pytest/capture.py\n+++ b/src/_pytest/capture.py\n@@ -416,8 +416,7 @@ def safe_text_dupfile(f, mode, default_encoding=\"UTF8\"):\n             return f\n     else:\n         newfd = os.dup(fd)\n-        if \"b\" not in mode:\n-            mode += \"b\"\n+        # Do not add \"b\" to the mode as we are going to handle text here\n         f = os.fdopen(newfd, mode, 0)  # no buffering\n     return EncodedFile(f, encoding or default_encoding)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/capture.py b/src/_pytest/capture.py\nindex 01fcdcd..155abe7 100644\n--- a/src/_pytest/capture.py\n+++ b/src/_pytest/capture.py\n@@ -241,8 +241,6 @@ def safe_text_dupfile(f, mode, default_encoding='UTF8'):\n             return f\n     else:\n         newfd = os.dup(fd)\n-        if 'b' not in mode:\n-            mode += 'b'\n         f = os.fdopen(newfd, mode, 0)\n     return EncodedFile(f, encoding or default_encoding)\n class EncodedFile(object):\n", "normalized_occurrence": 1}
