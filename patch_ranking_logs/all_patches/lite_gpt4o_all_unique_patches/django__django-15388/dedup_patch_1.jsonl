{"model_name_or_path": "agentless", "instance_id": "django__django-15388", "model_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex dcf3cdd..25c0113 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -272,11 +272,13 @@ class BaseReloader:\n         self.extra_files = set()\n         self.directory_globs = defaultdict(set)\n         self._stop_condition = threading.Event()\n+        self.watch_dir(BASE_DIR, '**/*')\n \n     def watch_dir(self, path, glob):\n         path = Path(path)\n         try:\n             path = path.absolute()\n+            logger.info('Watching directory: %s', path)\n         except FileNotFoundError:\n             logger.debug(\n                 'Unable to watch directory %s as it cannot be resolved.',\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex 4cc598a..67d9ab9 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -170,10 +170,12 @@ class BaseReloader:\n         self.extra_files = set()\n         self.directory_globs = defaultdict(set)\n         self._stop_condition = threading.Event()\n+        self.watch_dir(BASE_DIR, '**/*')\n     def watch_dir(self, path, glob):\n         path = Path(path)\n         try:\n             path = path.absolute()\n+            logger.info('Watching directory: %s', path)\n         except FileNotFoundError:\n             logger.debug('Unable to watch directory %s as it cannot be resolved.', path, exc_info=True)\n             return\n", "normalized_occurrence": 1}
