{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-24334", "model_patch": "diff --git a/lib/matplotlib/axis.py b/lib/matplotlib/axis.py\nindex d63d9ca..a3cd7e6 100644\n--- a/lib/matplotlib/axis.py\n+++ b/lib/matplotlib/axis.py\n@@ -2024,6 +2024,12 @@ class Axis(martist.Artist):\n         result = self._set_tick_locations(ticks, minor=minor)\n         if labels is not None:\n             self.set_ticklabels(labels, minor=minor, **kwargs)\n+        else:\n+            # Validate kwargs even if labels are not set\n+            valid_kwargs = {k: v for k, v in kwargs.items() if k in mtext.Text.__init__.__code__.co_varnames}\n+            if valid_kwargs:\n+                raise TypeError(f\"Invalid argument(s) for text properties: {', '.join(valid_kwargs.keys())}\")\n+            self.set_ticklabels(labels, minor=minor, **kwargs)\n         return result\n \n     def _get_tick_boxes_siblings(self, renderer):\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axis.py b/lib/matplotlib/axis.py\nindex 95f7f71..0f6aa53 100644\n--- a/lib/matplotlib/axis.py\n+++ b/lib/matplotlib/axis.py\n@@ -1653,6 +1653,11 @@ class Axis(martist.Artist):\n         result = self._set_tick_locations(ticks, minor=minor)\n         if labels is not None:\n             self.set_ticklabels(labels, minor=minor, **kwargs)\n+        else:\n+            valid_kwargs = {k: v for k, v in kwargs.items() if k in mtext.Text.__init__.__code__.co_varnames}\n+            if valid_kwargs:\n+                raise TypeError(f\"Invalid argument(s) for text properties: {', '.join(valid_kwargs.keys())}\")\n+            self.set_ticklabels(labels, minor=minor, **kwargs)\n         return result\n \n     def _get_tick_boxes_siblings(self, renderer):\n", "normalized_occurrence": 1}
