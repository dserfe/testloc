{"model_name_or_path": "agentless", "instance_id": "django__django-15987", "model_patch": "diff --git a/django/core/management/commands/loaddata.py b/django/core/management/commands/loaddata.py\nindex c98b0b6..675ab60 100644\n--- a/django/core/management/commands/loaddata.py\n+++ b/django/core/management/commands/loaddata.py\n@@ -361,8 +361,9 @@ class Command(BaseCommand):\n         current directory.\n         \"\"\"\n         dirs = []\n-        fixture_dirs = settings.FIXTURE_DIRS\n-        if len(fixture_dirs) != len(set(fixture_dirs)):\n+        fixture_dirs = [str(dir) for dir in settings.FIXTURE_DIRS]\n+        normalized_fixture_dirs = [os.path.normpath(d) for d in fixture_dirs]\n+        if len(normalized_fixture_dirs) != len(set(normalized_fixture_dirs)):\n             raise ImproperlyConfigured(\"settings.FIXTURE_DIRS contains duplicates.\")\n         for app_config in apps.get_app_configs():\n             app_label = app_config.label\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/management/commands/loaddata.py b/django/core/management/commands/loaddata.py\nindex 1c3856a..6d777f8 100644\n--- a/django/core/management/commands/loaddata.py\n+++ b/django/core/management/commands/loaddata.py\n@@ -187,8 +187,9 @@ class Command(BaseCommand):\n     @cached_property\n     def fixture_dirs(self):\n         dirs = []\n-        fixture_dirs = settings.FIXTURE_DIRS\n-        if len(fixture_dirs) != len(set(fixture_dirs)):\n+        fixture_dirs = [str(dir) for dir in settings.FIXTURE_DIRS]\n+        normalized_fixture_dirs = [os.path.normpath(d) for d in fixture_dirs]\n+        if len(normalized_fixture_dirs) != len(set(normalized_fixture_dirs)):\n             raise ImproperlyConfigured('settings.FIXTURE_DIRS contains duplicates.')\n         for app_config in apps.get_app_configs():\n             app_label = app_config.label\n", "normalized_occurrence": 1}
