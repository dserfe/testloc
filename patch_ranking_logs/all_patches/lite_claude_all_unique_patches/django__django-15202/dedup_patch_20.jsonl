{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15202", "model_patch": "diff --git a/django/core/validators.py b/django/core/validators.py\nindex bd1f78e..89810c1 100644\n--- a/django/core/validators.py\n+++ b/django/core/validators.py\n@@ -109,7 +109,10 @@ class URLValidator(RegexValidator):\n \n         # Then check full URL\n         try:\n-            super().__call__(value)\n+            try:\n+                super().__call__(value)\n+            except ValueError:  # for example, \"Invalid IPv6 URL\"\n+                raise ValidationError(self.message, code=self.code, params={'value': value})\n         except ValidationError as e:\n             # Trivial case failed. Try for possible IDN domain\n             if value:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/validators.py b/django/core/validators.py\nindex debbb3b..b484875 100644\n--- a/django/core/validators.py\n+++ b/django/core/validators.py\n@@ -63,7 +63,10 @@ class URLValidator(RegexValidator):\n         if scheme not in self.schemes:\n             raise ValidationError(self.message, code=self.code, params={'value': value})\n         try:\n-            super().__call__(value)\n+            try:\n+                super().__call__(value)\n+            except ValueError:\n+                raise ValidationError(self.message, code=self.code, params={'value': value})\n         except ValidationError as e:\n             if value:\n                 try:\n", "normalized_occurrence": 1}
