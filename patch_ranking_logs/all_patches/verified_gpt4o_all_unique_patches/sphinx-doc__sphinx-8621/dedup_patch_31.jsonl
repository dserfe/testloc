{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8621", "model_patch": "diff --git a/sphinx/roles.py b/sphinx/roles.py\nindex 307975f..fb2c331 100644\n--- a/sphinx/roles.py\n+++ b/sphinx/roles.py\n@@ -32,6 +32,8 @@ if False:\n     from sphinx.environment import BuildEnvironment\n \n \n+import re\n+\n generic_docroles = {\n     'command': addnodes.literal_strong,\n     'dfn': nodes.emphasis,\n@@ -45,6 +47,16 @@ generic_docroles = {\n     'regexp': nodes.literal,\n }\n \n+def kbd_role(typ, rawtext, text, lineno, inliner, options={}, content=[]):\n+    # Split the text by compound key separators, but only if they are not part of a single keystroke\n+    keys = re.split(r'(?<![a-zA-Z0-9])[-+^](?![a-zA-Z0-9])', text)\n+    nodes = []\n+    for key in keys:\n+        nodes.append(nodes.literal(rawtext, key))\n+    return nodes, []\n+\n+generic_docroles['kbd'] = kbd_role\n+\n \n # -- generic cross-reference role ----------------------------------------------\n \n", "occurrence": 1, "normalized_patch": "--- a/sphinx/roles.py\n+++ b/sphinx/roles.py\n+import re\n+def kbd_role(typ, rawtext, text, lineno, inliner, options={}, content=[]):\n+    keys = re.split('(?<![a-zA-Z0-9])[-+^](?![a-zA-Z0-9])', text)\n+    nodes = []\n+    for key in keys:\n+        nodes.append(nodes.literal(rawtext, key))\n+    return (nodes, [])\n+generic_docroles['kbd'] = kbd_role", "normalized_occurrence": 1}
