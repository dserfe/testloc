{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-7590", "model_patch": "diff --git a/sphinx/domains/cpp.py b/sphinx/domains/cpp.py\nindex 71a23bd..8c8d176 100644\n--- a/sphinx/domains/cpp.py\n+++ b/sphinx/domains/cpp.py\n@@ -4662,8 +4662,14 @@ class DefinitionParser(BaseParser):\n                       integer_literal_re, octal_literal_re]:\n             pos = self.pos\n             if self.match(regex):\n+                # handle standard suffixes\n                 while self.current_char in 'uUlLfF':\n                     self.pos += 1\n+                # handle user-defined literal suffix if present\n+                if self.current_char == '_' or self.current_char.isalpha():\n+                    while (self.current_char is not None and \n+                           (self.current_char.isalnum() or self.current_char == '_')):\n+                        self.pos += 1\n                 return ASTNumberLiteral(self.definition[pos:self.pos])\n \n         string = self._parse_string()\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/domains/cpp.py b/sphinx/domains/cpp.py\nindex 4396875..b1a439c 100644\n--- a/sphinx/domains/cpp.py\n+++ b/sphinx/domains/cpp.py\n@@ -3061,6 +3061,9 @@ class DefinitionParser(BaseParser):\n             if self.match(regex):\n                 while self.current_char in 'uUlLfF':\n                     self.pos += 1\n+                if self.current_char == '_' or self.current_char.isalpha():\n+                    while self.current_char is not None and (self.current_char.isalnum() or self.current_char == '_'):\n+                        self.pos += 1\n                 return ASTNumberLiteral(self.definition[pos:self.pos])\n         string = self._parse_string()\n         if string is not None:\n", "normalized_occurrence": 1}
