{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-4966", "model_patch": "diff --git a/xarray/coding/variables.py b/xarray/coding/variables.py\nindex 30db316..f4f9392 100644\n--- a/xarray/coding/variables.py\n+++ b/xarray/coding/variables.py\n@@ -310,12 +310,20 @@ class UnsignedIntegerCoder(VariableCoder):\n \n             if data.dtype.kind == \"i\":\n                 if unsigned == \"true\":\n-                    unsigned_dtype = np.dtype(\"u%s\" % data.dtype.itemsize)\n-                    transform = partial(np.asarray, dtype=unsigned_dtype)\n-                    data = lazy_elemwise_func(data, transform, unsigned_dtype)\n-                    if \"_FillValue\" in attrs:\n-                        new_fill = unsigned_dtype.type(attrs[\"_FillValue\"])\n-                        attrs[\"_FillValue\"] = new_fill\n+                    if unsigned == \"true\":\n+                        unsigned_dtype = np.dtype(\"u%s\" % data.dtype.itemsize)\n+                        transform = partial(np.asarray, dtype=unsigned_dtype)\n+                        data = lazy_elemwise_func(data, transform, unsigned_dtype)\n+                        if \"_FillValue\" in attrs:\n+                            new_fill = unsigned_dtype.type(attrs[\"_FillValue\"])\n+                            attrs[\"_FillValue\"] = new_fill\n+                    elif unsigned == \"false\":\n+                        signed_dtype = np.dtype(\"i%s\" % data.dtype.itemsize)\n+                        transform = partial(np.asarray, dtype=signed_dtype)\n+                        data = lazy_elemwise_func(data, transform, signed_dtype)\n+                        if \"_FillValue\" in attrs:\n+                            new_fill = signed_dtype.type(attrs[\"_FillValue\"])\n+                            attrs[\"_FillValue\"] = new_fill\n             else:\n                 warnings.warn(\n                     \"variable %r has _Unsigned attribute but is not \"\n@@ -324,4 +332,4 @@ class UnsignedIntegerCoder(VariableCoder):\n                     stacklevel=3,\n                 )\n \n-        return Variable(dims, data, attrs, encoding)\n+        return Variable(dims, data, attrs, encoding)\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/coding/variables.py b/xarray/coding/variables.py\nindex 28989a0..d2d9ac8 100644\n--- a/xarray/coding/variables.py\n+++ b/xarray/coding/variables.py\n@@ -219,12 +219,20 @@ class UnsignedIntegerCoder(VariableCoder):\n             unsigned = pop_to(attrs, encoding, '_Unsigned')\n             if data.dtype.kind == 'i':\n                 if unsigned == 'true':\n-                    unsigned_dtype = np.dtype('u%s' % data.dtype.itemsize)\n-                    transform = partial(np.asarray, dtype=unsigned_dtype)\n-                    data = lazy_elemwise_func(data, transform, unsigned_dtype)\n-                    if '_FillValue' in attrs:\n-                        new_fill = unsigned_dtype.type(attrs['_FillValue'])\n-                        attrs['_FillValue'] = new_fill\n+                    if unsigned == 'true':\n+                        unsigned_dtype = np.dtype('u%s' % data.dtype.itemsize)\n+                        transform = partial(np.asarray, dtype=unsigned_dtype)\n+                        data = lazy_elemwise_func(data, transform, unsigned_dtype)\n+                        if '_FillValue' in attrs:\n+                            new_fill = unsigned_dtype.type(attrs['_FillValue'])\n+                            attrs['_FillValue'] = new_fill\n+                    elif unsigned == 'false':\n+                        signed_dtype = np.dtype('i%s' % data.dtype.itemsize)\n+                        transform = partial(np.asarray, dtype=signed_dtype)\n+                        data = lazy_elemwise_func(data, transform, signed_dtype)\n+                        if '_FillValue' in attrs:\n+                            new_fill = signed_dtype.type(attrs['_FillValue'])\n+                            attrs['_FillValue'] = new_fill\n             else:\n                 warnings.warn('variable %r has _Unsigned attribute but is not of integer type. Ignoring attribute.' % name, SerializationWarning, stacklevel=3)\n         return Variable(dims, data, attrs, encoding)\n\\ No newline at end of file\n", "normalized_occurrence": 1}
