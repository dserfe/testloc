{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-15535", "model_patch": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex be26d08..13fd5c6 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -457,12 +457,11 @@ def check_array(array, accept_sparse=False, accept_large_sparse=True,\n         if all(isinstance(dtype, np.dtype) for dtype in dtypes_orig):\n             dtype_orig = np.result_type(*array.dtypes)\n \n-    if dtype_numeric:\n-        if dtype_orig is not None and dtype_orig.kind == \"O\":\n-            # if input is object, convert to float.\n-            dtype = np.float64\n-        else:\n-            dtype = None\n+    if dtype_numeric and dtype_orig is not None and dtype_orig.kind == \"O\":\n+        # if input is object and numeric dtype is required, convert to float.\n+        dtype = np.float64\n+    else:\n+        dtype = None\n \n     if isinstance(dtype, (list, tuple)):\n         if dtype_orig is not None and dtype_orig in dtype:\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex 8ce0584..59298ef 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -135,11 +135,10 @@ def check_array(array, accept_sparse=False, accept_large_sparse=True, dtype='num\n         dtypes_orig = np.array(array.dtypes)\n         if all((isinstance(dtype, np.dtype) for dtype in dtypes_orig)):\n             dtype_orig = np.result_type(*array.dtypes)\n-    if dtype_numeric:\n-        if dtype_orig is not None and dtype_orig.kind == 'O':\n-            dtype = np.float64\n-        else:\n-            dtype = None\n+    if dtype_numeric and dtype_orig is not None and (dtype_orig.kind == 'O'):\n+        dtype = np.float64\n+    else:\n+        dtype = None\n     if isinstance(dtype, (list, tuple)):\n         if dtype_orig is not None and dtype_orig in dtype:\n             dtype = None\n", "normalized_occurrence": 1}
