{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-14623", "model_patch": "diff --git a/lib/matplotlib/transforms.py b/lib/matplotlib/transforms.py\nindex ebf1196..6ed0a3f 100644\n--- a/lib/matplotlib/transforms.py\n+++ b/lib/matplotlib/transforms.py\n@@ -2819,26 +2819,37 @@ def nonsingular(vmin, vmax, expander=0.001, tiny=1e-15, increasing=True):\n     if (not np.isfinite(vmin)) or (not np.isfinite(vmax)):\n         return -expander, expander\n \n-    swapped = False\n-    if vmax < vmin:\n-        vmin, vmax = vmax, vmin\n-        swapped = True\n+    if increasing:\n+        if vmax < vmin:\n+            vmin, vmax = vmax, vmin\n+    else:\n+        if vmax > vmin:\n+            vmin, vmax = vmax, vmin\n \n     maxabsvalue = max(abs(vmin), abs(vmax))\n     if maxabsvalue < (1e6 / tiny) * np.finfo(float).tiny:\n-        vmin = -expander\n-        vmax = expander\n-\n-    elif vmax - vmin <= maxabsvalue * tiny:\n-        if vmax == 0 and vmin == 0:\n+        if increasing:\n             vmin = -expander\n             vmax = expander\n         else:\n-            vmin -= expander*abs(vmin)\n-            vmax += expander*abs(vmax)\n+            vmin = expander\n+            vmax = -expander\n \n-    if swapped and not increasing:\n-        vmin, vmax = vmax, vmin\n+    elif vmax - vmin <= maxabsvalue * tiny:\n+        if vmax == 0 and vmin == 0:\n+            if increasing:\n+                vmin = -expander\n+                vmax = expander\n+            else:\n+                vmin = expander\n+                vmax = -expander\n+        else:\n+            if increasing:\n+                vmin -= expander*abs(vmin)\n+                vmax += expander*abs(vmax)\n+            else:\n+                vmin += expander*abs(vmin)\n+                vmax -= expander*abs(vmax)\n     return vmin, vmax\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/transforms.py b/lib/matplotlib/transforms.py\nindex 6dcd40d..bbf52f2 100644\n--- a/lib/matplotlib/transforms.py\n+++ b/lib/matplotlib/transforms.py\n@@ -1155,23 +1155,33 @@ class TransformedPatchPath(TransformedPath):\n def nonsingular(vmin, vmax, expander=0.001, tiny=1e-15, increasing=True):\n     if not np.isfinite(vmin) or not np.isfinite(vmax):\n         return (-expander, expander)\n-    swapped = False\n-    if vmax < vmin:\n+    if increasing:\n+        if vmax < vmin:\n+            vmin, vmax = (vmax, vmin)\n+    elif vmax > vmin:\n         vmin, vmax = (vmax, vmin)\n-        swapped = True\n     maxabsvalue = max(abs(vmin), abs(vmax))\n     if maxabsvalue < 1000000.0 / tiny * np.finfo(float).tiny:\n-        vmin = -expander\n-        vmax = expander\n-    elif vmax - vmin <= maxabsvalue * tiny:\n-        if vmax == 0 and vmin == 0:\n+        if increasing:\n             vmin = -expander\n             vmax = expander\n         else:\n+            vmin = expander\n+            vmax = -expander\n+    elif vmax - vmin <= maxabsvalue * tiny:\n+        if vmax == 0 and vmin == 0:\n+            if increasing:\n+                vmin = -expander\n+                vmax = expander\n+            else:\n+                vmin = expander\n+                vmax = -expander\n+        elif increasing:\n             vmin -= expander * abs(vmin)\n             vmax += expander * abs(vmax)\n-    if swapped and (not increasing):\n-        vmin, vmax = (vmax, vmin)\n+        else:\n+            vmin += expander * abs(vmin)\n+            vmax -= expander * abs(vmax)\n     return (vmin, vmax)\n def interval_contains(interval, val):\n     a, b = interval\n", "normalized_occurrence": 1}
