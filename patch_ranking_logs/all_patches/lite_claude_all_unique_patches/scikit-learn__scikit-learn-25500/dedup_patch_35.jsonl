{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-25500", "model_patch": "diff --git a/sklearn/isotonic.py b/sklearn/isotonic.py\nindex 6365edf..9e978f4 100644\n--- a/sklearn/isotonic.py\n+++ b/sklearn/isotonic.py\n@@ -394,8 +394,9 @@ class IsotonicRegression(RegressorMixin, TransformerMixin, BaseEstimator):\n \n         # on scipy 0.17, interp1d up-casts to float64, so we cast back\n         res = res.astype(T.dtype)\n-\n-        return res\n+        \n+        # Ensure 1D output regardless of input format or config settings\n+        return res.ravel()\n \n     def predict(self, T):\n         \"\"\"Predict new data by linear interpolation.\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/isotonic.py b/sklearn/isotonic.py\nindex 156dcaa..099fdf5 100644\n--- a/sklearn/isotonic.py\n+++ b/sklearn/isotonic.py\n@@ -96,7 +96,7 @@ class IsotonicRegression(RegressorMixin, TransformerMixin, BaseEstimator):\n             T = np.clip(T, self.X_min_, self.X_max_)\n         res = self.f_(T)\n         res = res.astype(T.dtype)\n-        return res\n+        return res.ravel()\n     def predict(self, T):\n         return self.transform(T)\n     def get_feature_names_out(self, input_features=None):\n", "normalized_occurrence": 1}
