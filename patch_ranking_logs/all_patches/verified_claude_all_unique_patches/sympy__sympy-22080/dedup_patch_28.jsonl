{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-22080", "model_patch": "diff --git a/sympy/core/mod.py b/sympy/core/mod.py\nindex ca33049..f3b75f7 100644\n--- a/sympy/core/mod.py\n+++ b/sympy/core/mod.py\n@@ -1,3 +1,4 @@\n+\n from sympy.core.numbers import nan\n from .function import Function\n from .kind import NumberKind\n@@ -240,4 +241,12 @@ class Mod(Function):\n \n     def _eval_rewrite_as_floor(self, a, b, **kwargs):\n         from sympy.functions.elementary.integers import floor\n-        return a - b*floor(a/b)\n+        from sympy.core.mul import Mul\n+        \n+        # Extract any external negation \n+        if a.could_extract_minus_sign():\n+            if b.is_positive:\n+                return b*floor(a/b) - a\n+            elif b.is_negative:\n+                return a - b*floor(a/b)\n+        return a - b*floor(a/b)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/mod.py b/sympy/core/mod.py\nindex 57d2396..ae28fec 100644\n--- a/sympy/core/mod.py\n+++ b/sympy/core/mod.py\n@@ -162,4 +162,10 @@ class Mod(Function):\n             return True\n     def _eval_rewrite_as_floor(self, a, b, **kwargs):\n         from sympy.functions.elementary.integers import floor\n+        from sympy.core.mul import Mul\n+        if a.could_extract_minus_sign():\n+            if b.is_positive:\n+                return b * floor(a / b) - a\n+            elif b.is_negative:\n+                return a - b * floor(a / b)\n         return a - b * floor(a / b)\n\\ No newline at end of file\n", "normalized_occurrence": 1}
