{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12273", "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 07c5013..c4c6eb9 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -840,10 +840,12 @@ class Model(metaclass=ModelBase):\n                        if f.name in update_fields or f.attname in update_fields]\n \n         pk_val = self._get_pk_val(meta)\n-        if pk_val is None:\n+        if pk_val is None and not self._state.adding:\n             pk_val = meta.pk.get_pk_value_on_save(self)\n             setattr(self, meta.pk.attname, pk_val)\n         pk_set = pk_val is not None\n+        if pk_val is None:\n+            self._state.adding = True\n         if not pk_set and (force_update or update_fields):\n             raise ValueError(\"Cannot force an update in save() with no primary key.\")\n         updated = False\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 9dcf0cd..5d3742b 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -450,10 +450,12 @@ class Model(metaclass=ModelBase):\n         if update_fields:\n             non_pks = [f for f in non_pks if f.name in update_fields or f.attname in update_fields]\n         pk_val = self._get_pk_val(meta)\n-        if pk_val is None:\n+        if pk_val is None and (not self._state.adding):\n             pk_val = meta.pk.get_pk_value_on_save(self)\n             setattr(self, meta.pk.attname, pk_val)\n         pk_set = pk_val is not None\n+        if pk_val is None:\n+            self._state.adding = True\n         if not pk_set and (force_update or update_fields):\n             raise ValueError('Cannot force an update in save() with no primary key.')\n         updated = False\n", "normalized_occurrence": 1}
