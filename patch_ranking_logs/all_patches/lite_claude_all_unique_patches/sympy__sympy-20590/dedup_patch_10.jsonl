{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-20590", "model_patch": "diff --git a/sympy/core/symbol.py b/sympy/core/symbol.py\nindex 3b46a26..3764028 100644\n--- a/sympy/core/symbol.py\n+++ b/sympy/core/symbol.py\n@@ -179,6 +179,9 @@ def uniquely_named_symbol(xname, exprs=(), compare=str, modify=None, **assumptio\n     return _symbol(x, default, **assumptions)\n _uniquely_named_symbol = uniquely_named_symbol\n \n+class Boolean:\n+    __slots__ = ()\n+\n class Symbol(AtomicExpr, Boolean):\n     \"\"\"\n     Assumptions:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/symbol.py b/sympy/core/symbol.py\nindex 2506145..1ef81dc 100644\n--- a/sympy/core/symbol.py\n+++ b/sympy/core/symbol.py\n@@ -65,6 +65,8 @@ def uniquely_named_symbol(xname, exprs=(), compare=str, modify=None, **assumptio\n         x = modify(x)\n     return _symbol(x, default, **assumptions)\n _uniquely_named_symbol = uniquely_named_symbol\n+class Boolean:\n+    __slots__ = ()\n class Symbol(AtomicExpr, Boolean):\n     is_comparable = False\n     __slots__ = ('name',)\n", "normalized_occurrence": 2}
