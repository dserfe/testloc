{"model_name_or_path": "agentless", "instance_id": "django__django-16661", "model_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 20a301b..b650767 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -490,11 +490,12 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n             else:\n                 valid_lookups.add(filter_item)\n \n-        # Is it a valid relational lookup?\n-        return not {\n-            LOOKUP_SEP.join(relation_parts),\n-            LOOKUP_SEP.join(relation_parts + [part]),\n-        }.isdisjoint(valid_lookups)\n+        # Handle foreign key relationships even if the foreign key is a primary key\n+        while relation_parts:\n+            if LOOKUP_SEP.join(relation_parts) in valid_lookups:\n+                return True\n+            relation_parts.pop()\n+        return False\n \n     def to_field_allowed(self, request, to_field):\n         \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 061e1b9..697a561 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -221,7 +221,11 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n                 valid_lookups.add(filter_item[0])\n             else:\n                 valid_lookups.add(filter_item)\n-        return not {LOOKUP_SEP.join(relation_parts), LOOKUP_SEP.join(relation_parts + [part])}.isdisjoint(valid_lookups)\n+        while relation_parts:\n+            if LOOKUP_SEP.join(relation_parts) in valid_lookups:\n+                return True\n+            relation_parts.pop()\n+        return False\n     def to_field_allowed(self, request, to_field):\n         try:\n             field = self.opts.get_field(to_field)\n", "normalized_occurrence": 1}
