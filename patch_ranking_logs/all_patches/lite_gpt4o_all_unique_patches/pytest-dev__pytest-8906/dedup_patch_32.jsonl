{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-8906", "model_patch": "diff --git a/src/_pytest/outcomes.py b/src/_pytest/outcomes.py\nindex 6515102..f08c7c7 100644\n--- a/src/_pytest/outcomes.py\n+++ b/src/_pytest/outcomes.py\n@@ -125,8 +125,9 @@ def skip(msg: str = \"\", *, allow_module_level: bool = False) -> \"NoReturn\":\n     \"\"\"Skip an executing test with the given message.\n \n     This function should be called only during testing (setup, call or teardown) or\n-    during collection by using the ``allow_module_level`` flag.  This function can\n-    be called in doctests as well.\n+    during collection by using the ``allow_module_level`` flag. This function can\n+    be called in doctests as well. To skip a module, use the `allow_module_level`\n+    flag or the `skip_module` function.\n \n     :param bool allow_module_level:\n         Allows this function to be called at module level, skipping the rest\n@@ -144,7 +145,17 @@ def skip(msg: str = \"\", *, allow_module_level: bool = False) -> \"NoReturn\":\n     raise Skipped(msg=msg, allow_module_level=allow_module_level)\n \n \n-@_with_exception(Failed)\n+@_with_exception(Skipped)\n+def skip_module(msg: str = \"\") -> \"NoReturn\":\n+    \"\"\"Skip the entire module with the given message.\n+\n+    This function should be called at the module level to skip the rest of the module.\n+\n+    :param str msg:\n+        The message to show the user as reason for skipping the module.\n+    \"\"\"\n+    __tracebackhide__ = True\n+    raise Skipped(msg=msg, allow_module_level=True)\n def fail(msg: str = \"\", pytrace: bool = True) -> \"NoReturn\":\n     \"\"\"Explicitly fail an executing test with the given message.\n \n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/outcomes.py b/src/_pytest/outcomes.py\nindex 4e411e5..0602c94 100644\n--- a/src/_pytest/outcomes.py\n+++ b/src/_pytest/outcomes.py\n@@ -83,8 +83,9 @@ def skip(msg: str='', *, allow_module_level: bool=False) -> 'NoReturn':\n     \"\"\"Skip an executing test with the given message.\n \n     This function should be called only during testing (setup, call or teardown) or\n-    during collection by using the ``allow_module_level`` flag.  This function can\n-    be called in doctests as well.\n+    during collection by using the ``allow_module_level`` flag. This function can\n+    be called in doctests as well. To skip a module, use the `allow_module_level`\n+    flag or the `skip_module` function.\n \n     :param bool allow_module_level:\n         Allows this function to be called at module level, skipping the rest\n@@ -101,7 +102,18 @@ def skip(msg: str='', *, allow_module_level: bool=False) -> 'NoReturn':\n     __tracebackhide__ = True\n     raise Skipped(msg=msg, allow_module_level=allow_module_level)\n \n-@_with_exception(Failed)\n+@_with_exception(Skipped)\n+def skip_module(msg: str='') -> 'NoReturn':\n+    \"\"\"Skip the entire module with the given message.\n+\n+    This function should be called at the module level to skip the rest of the module.\n+\n+    :param str msg:\n+        The message to show the user as reason for skipping the module.\n+    \"\"\"\n+    __tracebackhide__ = True\n+    raise Skipped(msg=msg, allow_module_level=True)\n+\n def fail(msg: str='', pytrace: bool=True) -> 'NoReturn':\n     \"\"\"Explicitly fail an executing test with the given message.\n \n", "normalized_occurrence": 1}
