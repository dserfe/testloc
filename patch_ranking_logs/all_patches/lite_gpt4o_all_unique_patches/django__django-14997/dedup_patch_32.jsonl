{"model_name_or_path": "agentless", "instance_id": "django__django-14997", "model_patch": "diff --git a/django/db/backends/sqlite3/schema.py b/django/db/backends/sqlite3/schema.py\nindex 6d9014e..cbd0364 100644\n--- a/django/db/backends/sqlite3/schema.py\n+++ b/django/db/backends/sqlite3/schema.py\n@@ -427,7 +427,13 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):\n         ):\n             super().add_constraint(model, constraint)\n         else:\n-            self._remake_table(model)\n+            # SQLite does not support unique constraints with expressions.\n+            if not constraint.contains_expressions:\n+                self._remake_table(model)\n+            else:\n+                raise NotSupportedError(\n+                    \"SQLite does not support unique constraints with expressions.\"\n+                )\n \n     def remove_constraint(self, model, constraint):\n         if isinstance(constraint, UniqueConstraint) and (\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/sqlite3/schema.py b/django/db/backends/sqlite3/schema.py\nindex d5f020b..a87d722 100644\n--- a/django/db/backends/sqlite3/schema.py\n+++ b/django/db/backends/sqlite3/schema.py\n@@ -203,8 +203,10 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):\n     def add_constraint(self, model, constraint):\n         if isinstance(constraint, UniqueConstraint) and (constraint.condition or constraint.contains_expressions or constraint.include or constraint.deferrable):\n             super().add_constraint(model, constraint)\n-        else:\n+        elif not constraint.contains_expressions:\n             self._remake_table(model)\n+        else:\n+            raise NotSupportedError('SQLite does not support unique constraints with expressions.')\n     def remove_constraint(self, model, constraint):\n         if isinstance(constraint, UniqueConstraint) and (constraint.condition or constraint.contains_expressions or constraint.include or constraint.deferrable):\n             super().remove_constraint(model, constraint)\n", "normalized_occurrence": 1}
