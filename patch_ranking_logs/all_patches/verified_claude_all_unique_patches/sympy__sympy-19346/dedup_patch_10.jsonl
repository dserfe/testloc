{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-19346", "model_patch": "diff --git a/sympy/printing/repr.py b/sympy/printing/repr.py\nindex b3c364b..a24e9ed 100644\n--- a/sympy/printing/repr.py\n+++ b/sympy/printing/repr.py\n@@ -144,6 +144,14 @@ class ReprPrinter(Printer):\n     def _print_list(self, expr):\n         return \"[%s]\" % self.reprify(expr, \", \")\n \n+    def _print_dict(self, expr):\n+        items = sorted(expr.items(), key=default_sort_key)\n+        return \"{%s}\" % self.reprify(items, \", \", lambda x: \"%s: %s\" % (self._print(x[0]), self._print(x[1])))\n+\n+    def _print_set(self, expr):\n+        items = sorted(expr, key=default_sort_key)\n+        return \"{%s}\" % self.reprify(items, \", \")\n+\n     def _print_MatrixBase(self, expr):\n         # special case for some empty matrices\n         if (expr.rows == 0) ^ (expr.cols == 0):\n", "occurrence": 1, "normalized_patch": "--- a/sympy/printing/repr.py\n+++ b/sympy/printing/repr.py\n+    def _print_dict(self, expr):\n+        items = sorted(expr.items(), key=default_sort_key)\n+        return '{%s}' % self.reprify(items, ', ', lambda x: '%s: %s' % (self._print(x[0]), self._print(x[1])))\n+    def _print_set(self, expr):\n+        items = sorted(expr, key=default_sort_key)\n+        return '{%s}' % self.reprify(items, ', ')", "normalized_occurrence": 1}
