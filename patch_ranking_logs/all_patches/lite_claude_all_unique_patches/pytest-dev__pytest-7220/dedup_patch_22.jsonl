{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-7220", "model_patch": "diff --git a/src/_pytest/terminal.py b/src/_pytest/terminal.py\nindex ebc163c..a833185 100644\n--- a/src/_pytest/terminal.py\n+++ b/src/_pytest/terminal.py\n@@ -776,7 +776,15 @@ class TerminalReporter:\n \n     def _locationline(self, nodeid, fspath, lineno, domain):\n         def mkrel(nodeid):\n-            line = self.config.cwd_relative_nodeid(nodeid)\n+            # Use startdir for consistent path resolution regardless of cwd changes\n+            line = nodeid\n+            try:\n+                line = self.startdir.bestrelpath(py.path.local(nodeid.split(\"::\")[0]))\n+                if \"::\" in nodeid:\n+                    line += \"::\" + \"::\".join(nodeid.split(\"::\")[1:])\n+            except py.error.ENOENT:\n+                pass\n+            \n             if domain and line.endswith(domain):\n                 line = line[: -len(domain)]\n                 values = domain.split(\"[\")\n@@ -785,7 +793,6 @@ class TerminalReporter:\n             return line\n \n         # collect_fspath comes from testid which has a \"/\"-normalized path\n-\n         if fspath:\n             res = mkrel(nodeid)\n             if self.verbosity >= 2 and nodeid.split(\"::\")[0] != fspath.replace(\n", "occurrence": 2, "normalized_patch": "diff --git a/src/_pytest/terminal.py b/src/_pytest/terminal.py\nindex 554ecf8..3f24b64 100644\n--- a/src/_pytest/terminal.py\n+++ b/src/_pytest/terminal.py\n@@ -510,7 +510,13 @@ class TerminalReporter:\n                 self._tw.line('(to show a full traceback on KeyboardInterrupt use --full-trace)', yellow=True)\n     def _locationline(self, nodeid, fspath, lineno, domain):\n         def mkrel(nodeid):\n-            line = self.config.cwd_relative_nodeid(nodeid)\n+            line = nodeid\n+            try:\n+                line = self.startdir.bestrelpath(py.path.local(nodeid.split('::')[0]))\n+                if '::' in nodeid:\n+                    line += '::' + '::'.join(nodeid.split('::')[1:])\n+            except py.error.ENOENT:\n+                pass\n             if domain and line.endswith(domain):\n                 line = line[:-len(domain)]\n                 values = domain.split('[')\n", "normalized_occurrence": 2}
