{"model_name_or_path": "agentless", "instance_id": "django__django-11740", "model_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 816737e..71a718b 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -96,7 +96,8 @@ class MigrationAutodetector:\n         for name, field in sorted(fields):\n             deconstruction = self.deep_deconstruct(field)\n             if field.remote_field and field.remote_field.model:\n-                del deconstruction[2]['to']\n+                to_model = field.remote_field.model\n+                deconstruction[2]['to'] = \"%s.%s\" % (to_model._meta.app_label, to_model._meta.object_name)\n             fields_def.append(deconstruction)\n         return fields_def\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 9fda64b..c1f3ba8 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -48,7 +48,8 @@ class MigrationAutodetector:\n         for name, field in sorted(fields):\n             deconstruction = self.deep_deconstruct(field)\n             if field.remote_field and field.remote_field.model:\n-                del deconstruction[2]['to']\n+                to_model = field.remote_field.model\n+                deconstruction[2]['to'] = '%s.%s' % (to_model._meta.app_label, to_model._meta.object_name)\n             fields_def.append(deconstruction)\n         return fields_def\n     def _detect_changes(self, convert_apps=None, graph=None):\n", "normalized_occurrence": 1}
