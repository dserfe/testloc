{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-20676", "model_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex a6bed3c..61027f4 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -2150,6 +2150,9 @@ class SpanSelector(_SelectorWidget):\n                                **self._rectprops)\n \n         self.ax.add_patch(self._rect)\n+        if self._interactive:\n+            self.ax.set_autoscalex_on(False)\n+            self.ax.set_autoscaley_on(False)\n         if len(self.artists) > 0:\n             self.artists[0] = self._rect\n         else:\n@@ -2220,6 +2223,9 @@ class SpanSelector(_SelectorWidget):\n         \"\"\"Button release event handler.\"\"\"\n         if not self._interactive:\n             self._rect.set_visible(False)\n+        else:\n+            self.ax.set_xlim(self.ax.get_xlim())  # Prevent axis from changing limits\n+            self.ax.set_ylim(self.ax.get_ylim())\n \n         vmin, vmax = self.extents\n         span = vmax - vmin\n@@ -2272,6 +2278,11 @@ class SpanSelector(_SelectorWidget):\n \n         self.extents = vmin, vmax\n \n+        # Restore the original axis limits after interaction.\n+        if self._interactive:\n+            self.ax.set_xlim(self.ax.get_xlim())\n+            self.ax.set_ylim(self.ax.get_ylim())\n+\n         if self.onmove_callback is not None:\n             self.onmove_callback(vmin, vmax)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex b2dd641..18fd0bc 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -1762,6 +1762,9 @@ class SpanSelector(_SelectorWidget):\n             w, h = (1, 0)\n         self._rect = Rectangle((0, 0), w, h, transform=trans, visible=False, **self._rectprops)\n         self.ax.add_patch(self._rect)\n+        if self._interactive:\n+            self.ax.set_autoscalex_on(False)\n+            self.ax.set_autoscaley_on(False)\n         if len(self.artists) > 0:\n             self.artists[0] = self._rect\n         else:\n@@ -1816,6 +1819,9 @@ class SpanSelector(_SelectorWidget):\n         \"\"\"Button release event handler.\"\"\"\n         if not self._interactive:\n             self._rect.set_visible(False)\n+        else:\n+            self.ax.set_xlim(self.ax.get_xlim())\n+            self.ax.set_ylim(self.ax.get_ylim())\n         vmin, vmax = self.extents\n         span = vmax - vmin\n         if span <= self.minspan:\n@@ -1851,6 +1857,9 @@ class SpanSelector(_SelectorWidget):\n             if vmin > vmax:\n                 vmin, vmax = (vmax, vmin)\n         self.extents = (vmin, vmax)\n+        if self._interactive:\n+            self.ax.set_xlim(self.ax.get_xlim())\n+            self.ax.set_ylim(self.ax.get_ylim())\n         if self.onmove_callback is not None:\n             self.onmove_callback(vmin, vmax)\n         return False\n", "normalized_occurrence": 1}
