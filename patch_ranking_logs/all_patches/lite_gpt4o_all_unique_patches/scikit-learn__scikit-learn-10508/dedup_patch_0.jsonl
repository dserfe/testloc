{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-10508", "model_patch": "diff --git a/sklearn/preprocessing/label.py b/sklearn/preprocessing/label.py\nindex 8d1b39c..1c84e76 100644\n--- a/sklearn/preprocessing/label.py\n+++ b/sklearn/preprocessing/label.py\n@@ -109,6 +109,8 @@ class LabelEncoder(BaseEstimator, TransformerMixin):\n         y : array-like of shape [n_samples]\n         \"\"\"\n         y = column_or_1d(y, warn=True)\n+        if len(y) == 0:\n+            return np.array([], dtype=np.int64)\n         self.classes_, y = np.unique(y, return_inverse=True)\n         return y\n \n@@ -126,6 +128,8 @@ class LabelEncoder(BaseEstimator, TransformerMixin):\n         \"\"\"\n         check_is_fitted(self, 'classes_')\n         y = column_or_1d(y, warn=True)\n+        if len(y) == 0:\n+            return np.array([], dtype=np.int64)\n \n         classes = np.unique(y)\n         if len(np.intersect1d(classes, self.classes_)) < len(classes):\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/preprocessing/label.py b/sklearn/preprocessing/label.py\nindex 7e12a65..234adb6 100644\n--- a/sklearn/preprocessing/label.py\n+++ b/sklearn/preprocessing/label.py\n@@ -22,11 +22,15 @@ class LabelEncoder(BaseEstimator, TransformerMixin):\n         return self\n     def fit_transform(self, y):\n         y = column_or_1d(y, warn=True)\n+        if len(y) == 0:\n+            return np.array([], dtype=np.int64)\n         self.classes_, y = np.unique(y, return_inverse=True)\n         return y\n     def transform(self, y):\n         check_is_fitted(self, 'classes_')\n         y = column_or_1d(y, warn=True)\n+        if len(y) == 0:\n+            return np.array([], dtype=np.int64)\n         classes = np.unique(y)\n         if len(np.intersect1d(classes, self.classes_)) < len(classes):\n             diff = np.setdiff1d(classes, self.classes_)\n", "normalized_occurrence": 1}
