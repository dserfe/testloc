{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-22865", "model_patch": "diff --git a/lib/matplotlib/colorbar.py b/lib/matplotlib/colorbar.py\nindex 5ebeaf9..f3f0b2f 100644\n--- a/lib/matplotlib/colorbar.py\n+++ b/lib/matplotlib/colorbar.py\n@@ -651,8 +651,15 @@ class Colorbar:\n             if not self.drawedges:\n                 if len(self._y) >= self.n_rasterize:\n                     self.solids.set_rasterized(True)\n-        self.dividers.set_segments(\n-            np.dstack([X, Y])[1:-1] if self.drawedges else [])\n+        if self.drawedges:\n+            # Only remove the first segment if we're not extending lower\n+            start = 1 if not self._extend_lower() else 0\n+            # Only remove the last segment if we're not extending upper\n+            end = -1 if not self._extend_upper() else None\n+            segments = np.dstack([X, Y])[start:end]\n+        else:\n+            segments = []\n+        self.dividers.set_segments(segments)\n \n     def _add_solids_patches(self, X, Y, C, mappable):\n         hatches = mappable.hatches * len(C)  # Have enough hatches.\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/colorbar.py b/lib/matplotlib/colorbar.py\nindex eb4d80e..62f72a9 100644\n--- a/lib/matplotlib/colorbar.py\n+++ b/lib/matplotlib/colorbar.py\n@@ -262,7 +262,13 @@ class Colorbar:\n             if not self.drawedges:\n                 if len(self._y) >= self.n_rasterize:\n                     self.solids.set_rasterized(True)\n-        self.dividers.set_segments(np.dstack([X, Y])[1:-1] if self.drawedges else [])\n+        if self.drawedges:\n+            start = 1 if not self._extend_lower() else 0\n+            end = -1 if not self._extend_upper() else None\n+            segments = np.dstack([X, Y])[start:end]\n+        else:\n+            segments = []\n+        self.dividers.set_segments(segments)\n     def _add_solids_patches(self, X, Y, C, mappable):\n         hatches = mappable.hatches * len(C)\n         patches = []\n", "normalized_occurrence": 1}
