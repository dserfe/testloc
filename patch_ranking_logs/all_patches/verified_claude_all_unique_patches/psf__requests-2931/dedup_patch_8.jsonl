{"model_name_or_path": "agentless_claude", "instance_id": "psf__requests-2931", "model_patch": "diff --git a/requests/utils.py b/requests/utils.py\nindex 7aa8a2f..1b2bf1b 100644\n--- a/requests/utils.py\n+++ b/requests/utils.py\n@@ -689,17 +689,20 @@ def to_native_string(string, encoding='ascii'):\n     string in the native string type, encoding and decoding where necessary.\n     This assumes ASCII unless told otherwise.\n     \"\"\"\n-    out = None\n-\n+    # Note: Original string handling is maintained for non-bytes objects\n     if isinstance(string, builtin_str):\n-        out = string\n-    else:\n-        if is_py2:\n-            out = string.encode(encoding)\n-        else:\n-            out = string.decode(encoding)\n+        return string\n \n-    return out\n+    if isinstance(string, bytes):\n+        try:\n+            return string.decode(encoding)\n+        except UnicodeDecodeError:\n+            # If decoding fails, return the original bytes object\n+            return string\n+\n+    if is_py2:\n+        return string.encode(encoding)\n+    return string.decode(encoding)\n \n \n def urldefragauth(url):\n", "occurrence": 1, "normalized_patch": "diff --git a/requests/utils.py b/requests/utils.py\nindex 69197df..f738f33 100644\n--- a/requests/utils.py\n+++ b/requests/utils.py\n@@ -316,14 +316,16 @@ def get_auth_from_url(url):\n         auth = ('', '')\n     return auth\n def to_native_string(string, encoding='ascii'):\n-    out = None\n     if isinstance(string, builtin_str):\n-        out = string\n-    elif is_py2:\n-        out = string.encode(encoding)\n-    else:\n-        out = string.decode(encoding)\n-    return out\n+        return string\n+    if isinstance(string, bytes):\n+        try:\n+            return string.decode(encoding)\n+        except UnicodeDecodeError:\n+            return string\n+    if is_py2:\n+        return string.encode(encoding)\n+    return string.decode(encoding)\n def urldefragauth(url):\n     scheme, netloc, path, params, query, fragment = urlparse(url)\n     if not netloc:\n", "normalized_occurrence": 1}
