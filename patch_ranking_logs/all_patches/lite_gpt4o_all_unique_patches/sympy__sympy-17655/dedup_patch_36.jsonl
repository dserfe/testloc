{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-17655", "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex a708f18..e1c3649 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -215,7 +215,15 @@ class Point(GeometryEntity):\n         \"\"\"\n         try:\n             s, o = Point._normalize_dimension(self, Point(other, evaluate=False))\n-        except TypeError:\n+        except (TypeError, GeometryError):\n+            if isinstance(other, sympy.Basic):\n+                other = other.evalf()\n+            if isinstance(other, sympy.Mul):\n+                coeff, pt = other.as_coeff_Mul()\n+                if isinstance(pt, Point) and isinstance(coeff, (int, float, sympy.Integer, sympy.Float, sympy.Rational)):\n+                    s, o = Point._normalize_dimension(self, Point([coeff * x for x in pt.args], evaluate=False))\n+                    coords = [simplify(a + b) for a, b in zip(s, o)]\n+                    return Point(coords, evaluate=False)\n             raise GeometryError(\"Don't know how to add {} and a Point object\".format(other))\n \n         coords = [simplify(a + b) for a, b in zip(s, o)]\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex e45d95f..a4f6a38 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -64,7 +64,15 @@ class Point(GeometryEntity):\n     def __add__(self, other):\n         try:\n             s, o = Point._normalize_dimension(self, Point(other, evaluate=False))\n-        except TypeError:\n+        except (TypeError, GeometryError):\n+            if isinstance(other, sympy.Basic):\n+                other = other.evalf()\n+            if isinstance(other, sympy.Mul):\n+                coeff, pt = other.as_coeff_Mul()\n+                if isinstance(pt, Point) and isinstance(coeff, (int, float, sympy.Integer, sympy.Float, sympy.Rational)):\n+                    s, o = Point._normalize_dimension(self, Point([coeff * x for x in pt.args], evaluate=False))\n+                    coords = [simplify(a + b) for a, b in zip(s, o)]\n+                    return Point(coords, evaluate=False)\n             raise GeometryError(\"Don't know how to add {} and a Point object\".format(other))\n         coords = [simplify(a + b) for a, b in zip(s, o)]\n         return Point(coords, evaluate=False)\n", "normalized_occurrence": 1}
