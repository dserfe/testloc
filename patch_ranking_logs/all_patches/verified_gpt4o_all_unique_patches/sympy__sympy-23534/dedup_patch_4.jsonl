{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-23534", "model_patch": "diff --git a/sympy/core/symbol.py b/sympy/core/symbol.py\nindex e6fdcf8..599a223 100644\n--- a/sympy/core/symbol.py\n+++ b/sympy/core/symbol.py\n@@ -791,7 +791,10 @@ def symbols(names, *, cls=Symbol, **args) -> Any:\n         return tuple(result)\n     else:\n         for name in names:\n-            result.append(symbols(name, **args))\n+            if isinstance(name, (tuple, list)):\n+                result.append(symbols(name, cls=cls, **args))\n+            else:\n+                result.append(symbols(name, cls=cls, **args))\n \n         return type(names)(result)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/symbol.py b/sympy/core/symbol.py\nindex 6e0b9ca..e770d3e 100644\n--- a/sympy/core/symbol.py\n+++ b/sympy/core/symbol.py\n@@ -291,7 +291,10 @@ def symbols(names, *, cls=Symbol, **args) -> Any:\n         return tuple(result)\n     else:\n         for name in names:\n-            result.append(symbols(name, **args))\n+            if isinstance(name, (tuple, list)):\n+                result.append(symbols(name, cls=cls, **args))\n+            else:\n+                result.append(symbols(name, cls=cls, **args))\n         return type(names)(result)\n def var(names, **args):\n     def traverse(symbols, frame):\n", "normalized_occurrence": 2}
