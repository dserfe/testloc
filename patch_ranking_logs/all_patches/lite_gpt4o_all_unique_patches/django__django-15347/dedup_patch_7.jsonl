{"model_name_or_path": "agentless", "instance_id": "django__django-15347", "model_patch": "diff --git a/django/contrib/messages/storage/cookie.py b/django/contrib/messages/storage/cookie.py\nindex 8744ce5..a2c8346 100644\n--- a/django/contrib/messages/storage/cookie.py\n+++ b/django/contrib/messages/storage/cookie.py\n@@ -19,8 +19,7 @@ class MessageEncoder(json.JSONEncoder):\n             # Using 0/1 here instead of False/True to produce more compact json\n             is_safedata = 1 if isinstance(obj.message, SafeData) else 0\n             message = [self.message_key, is_safedata, obj.level, obj.message]\n-            if obj.extra_tags:\n-                message.append(obj.extra_tags)\n+            message.append(obj.extra_tags)\n             return message\n         return super().default(obj)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/messages/storage/cookie.py b/django/contrib/messages/storage/cookie.py\nindex 20c9f68..cc27462 100644\n--- a/django/contrib/messages/storage/cookie.py\n+++ b/django/contrib/messages/storage/cookie.py\n@@ -11,8 +11,7 @@ class MessageEncoder(json.JSONEncoder):\n         if isinstance(obj, Message):\n             is_safedata = 1 if isinstance(obj.message, SafeData) else 0\n             message = [self.message_key, is_safedata, obj.level, obj.message]\n-            if obj.extra_tags:\n-                message.append(obj.extra_tags)\n+            message.append(obj.extra_tags)\n             return message\n         return super().default(obj)\n class MessageDecoder(json.JSONDecoder):\n", "normalized_occurrence": 1}
