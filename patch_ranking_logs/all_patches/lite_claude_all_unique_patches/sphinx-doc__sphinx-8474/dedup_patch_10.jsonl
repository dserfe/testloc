{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-8474", "model_patch": "diff --git a/sphinx/builders/singlehtml.py b/sphinx/builders/singlehtml.py\nindex 9c4674f..322a590 100644\n--- a/sphinx/builders/singlehtml.py\n+++ b/sphinx/builders/singlehtml.py\n@@ -112,13 +112,13 @@ class SingleFileHTMLBuilder(StandaloneHTMLBuilder):\n         #       There are related codes in inline_all_toctres() and\n         #       HTMLTranslter#add_fignumber().\n         new_fignumbers = {}  # type: Dict[str, Dict[str, Tuple[int, ...]]]\n-        # {'foo': {'figure': {'id2': (2,), 'id1': (1,)}}, 'bar': {'figure': {'id1': (3,)}}}\n+        # {'foo': {'figure': {'id2': (2,), 'id1': (1,)}}, 'bar': {'figure': {'id1': (3,)}}, 'table': {'id1': (1,)}}\n         for docname, fignumlist in self.env.toc_fignumbers.items():\n             for figtype, fignums in fignumlist.items():\n                 alias = \"%s/%s\" % (docname, figtype)\n-                new_fignumbers.setdefault(alias, {})\n-                for id, fignum in fignums.items():\n-                    new_fignumbers[alias][id] = fignum\n+                if figtype not in new_fignumbers:\n+                    new_fignumbers[figtype] = {}\n+                new_fignumbers[figtype].update(fignums)\n \n         return {self.config.master_doc: new_fignumbers}\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/builders/singlehtml.py b/sphinx/builders/singlehtml.py\nindex 542a568..eca613e 100644\n--- a/sphinx/builders/singlehtml.py\n+++ b/sphinx/builders/singlehtml.py\n@@ -63,9 +63,9 @@ class SingleFileHTMLBuilder(StandaloneHTMLBuilder):\n         for docname, fignumlist in self.env.toc_fignumbers.items():\n             for figtype, fignums in fignumlist.items():\n                 alias = '%s/%s' % (docname, figtype)\n-                new_fignumbers.setdefault(alias, {})\n-                for id, fignum in fignums.items():\n-                    new_fignumbers[alias][id] = fignum\n+                if figtype not in new_fignumbers:\n+                    new_fignumbers[figtype] = {}\n+                new_fignumbers[figtype].update(fignums)\n         return {self.config.master_doc: new_fignumbers}\n     def get_doc_context(self, docname: str, body: str, metatags: str) -> Dict:\n         toctree = TocTree(self.env).get_toctree_for(self.config.master_doc, self, False)\n", "normalized_occurrence": 1}
