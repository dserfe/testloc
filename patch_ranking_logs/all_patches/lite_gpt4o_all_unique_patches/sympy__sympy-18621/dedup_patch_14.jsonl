{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-18621", "model_patch": "diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py\nindex cc9a4f7..ec3ab0d 100644\n--- a/sympy/matrices/expressions/blockmatrix.py\n+++ b/sympy/matrices/expressions/blockmatrix.py\n@@ -297,6 +297,8 @@ class BlockDiagMatrix(BlockMatrix):\n     @property\n     def blocks(self):\n         from sympy.matrices.immutable import ImmutableDenseMatrix\n+        if len(self.args) == 1:\n+            return ImmutableDenseMatrix([[self.args[0]]])\n         mats = self.args\n         data = [[mats[i] if i == j else ZeroMatrix(mats[i].rows, mats[j].cols)\n                         for j in range(len(mats))]\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py\nindex bedf9e1..b758218 100644\n--- a/sympy/matrices/expressions/blockmatrix.py\n+++ b/sympy/matrices/expressions/blockmatrix.py\n@@ -143,6 +143,8 @@ class BlockDiagMatrix(BlockMatrix):\n     @property\n     def blocks(self):\n         from sympy.matrices.immutable import ImmutableDenseMatrix\n+        if len(self.args) == 1:\n+            return ImmutableDenseMatrix([[self.args[0]]])\n         mats = self.args\n         data = [[mats[i] if i == j else ZeroMatrix(mats[i].rows, mats[j].cols) for j in range(len(mats))] for i in range(len(mats))]\n         return ImmutableDenseMatrix(data)\n", "normalized_occurrence": 1}
