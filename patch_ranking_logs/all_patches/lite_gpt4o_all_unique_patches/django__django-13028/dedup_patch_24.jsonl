{"model_name_or_path": "agentless", "instance_id": "django__django-13028", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex a6a3e97..93a4e95 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1265,7 +1265,7 @@ class Query(BaseExpression):\n         value = self.resolve_lookup_value(value, can_reuse, allow_joins)\n         used_joins = {k for k, v in self.alias_refcount.items() if v > pre_joins.get(k, 0)}\n \n-        if check_filterable:\n+        if check_filterable and not isinstance(value, models.Model):\n             self.check_filterable(value)\n \n         clause = self.where_class()\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 5b98027..32c92e6 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -672,7 +672,7 @@ class Query(BaseExpression):\n         pre_joins = self.alias_refcount.copy()\n         value = self.resolve_lookup_value(value, can_reuse, allow_joins)\n         used_joins = {k for k, v in self.alias_refcount.items() if v > pre_joins.get(k, 0)}\n-        if check_filterable:\n+        if check_filterable and (not isinstance(value, models.Model)):\n             self.check_filterable(value)\n         clause = self.where_class()\n         if reffed_expression:\n", "normalized_occurrence": 1}
