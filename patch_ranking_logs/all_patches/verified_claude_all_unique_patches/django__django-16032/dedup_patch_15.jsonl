{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16032", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 006c631..ab0ae7e 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -270,16 +270,20 @@ class SQLCompiler:\n             select_list = []\n             for col in cols:\n                 select_list.append(select_idx)\n-                select.append((col, None))\n-                select_idx += 1\n+                # Don't include annotations/aliases in subqueries used with __in\n+                if not (self.query.is_subquery and self.query.subquery_annotation_select):\n+                    select.append((col, None))\n+                    select_idx += 1\n             klass_info = {\n                 \"model\": self.query.model,\n                 \"select_fields\": select_list,\n             }\n         for alias, annotation in self.query.annotation_select.items():\n             annotations[alias] = select_idx\n-            select.append((annotation, alias))\n-            select_idx += 1\n+            # Skip annotations when used as subquery in __in\n+            if not (self.query.is_subquery and self.query.subquery_annotation_select):\n+                select.append((annotation, alias))\n+                select_idx += 1\n \n         if self.query.select_related:\n             related_klass_infos = self.get_related_selections(select, select_mask)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex e16cf4a..b3090c8 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -116,13 +116,15 @@ class SQLCompiler:\n             select_list = []\n             for col in cols:\n                 select_list.append(select_idx)\n-                select.append((col, None))\n-                select_idx += 1\n+                if not (self.query.is_subquery and self.query.subquery_annotation_select):\n+                    select.append((col, None))\n+                    select_idx += 1\n             klass_info = {'model': self.query.model, 'select_fields': select_list}\n         for alias, annotation in self.query.annotation_select.items():\n             annotations[alias] = select_idx\n-            select.append((annotation, alias))\n-            select_idx += 1\n+            if not (self.query.is_subquery and self.query.subquery_annotation_select):\n+                select.append((annotation, alias))\n+                select_idx += 1\n         if self.query.select_related:\n             related_klass_infos = self.get_related_selections(select, select_mask)\n             klass_info['related_klass_infos'] = related_klass_infos\n", "normalized_occurrence": 1}
