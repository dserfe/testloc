{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13798", "model_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex e32266f..732e25b 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -156,12 +156,11 @@ class LatexPrinter(Printer):\n             \"times\": r\" \\times \"\n         }\n \n+        user_mul_symbol = self._settings.get('mul_symbol')\n         self._settings['mul_symbol_latex'] = \\\n-            mul_symbol_table[self._settings['mul_symbol']]\n-\n+            mul_symbol_table.get(user_mul_symbol, user_mul_symbol)\n         self._settings['mul_symbol_latex_numbers'] = \\\n-            mul_symbol_table[self._settings['mul_symbol'] or 'dot']\n-\n+            mul_symbol_table.get(self._settings['mul_symbol'] or 'dot', self._settings['mul_symbol'] or 'dot')\n         self._delim_dict = {'(': ')', '[': ']'}\n \n     def parenthesize(self, item, level, strict=False):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 8e8a18d..66e54ee 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -34,8 +34,9 @@ class LatexPrinter(Printer):\n         if self._settings['fold_short_frac'] is None and self._settings['mode'] == 'inline':\n             self._settings['fold_short_frac'] = True\n         mul_symbol_table = {None: ' ', 'ldot': ' \\\\,.\\\\, ', 'dot': ' \\\\cdot ', 'times': ' \\\\times '}\n-        self._settings['mul_symbol_latex'] = mul_symbol_table[self._settings['mul_symbol']]\n-        self._settings['mul_symbol_latex_numbers'] = mul_symbol_table[self._settings['mul_symbol'] or 'dot']\n+        user_mul_symbol = self._settings.get('mul_symbol')\n+        self._settings['mul_symbol_latex'] = mul_symbol_table.get(user_mul_symbol, user_mul_symbol)\n+        self._settings['mul_symbol_latex_numbers'] = mul_symbol_table.get(self._settings['mul_symbol'] or 'dot', self._settings['mul_symbol'] or 'dot')\n         self._delim_dict = {'(': ')', '[': ']'}\n     def parenthesize(self, item, level, strict=False):\n         prec_val = precedence_traditional(item)\n", "normalized_occurrence": 1}
