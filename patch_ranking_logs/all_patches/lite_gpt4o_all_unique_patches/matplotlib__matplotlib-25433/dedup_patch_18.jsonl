{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25433", "model_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex f12a9a3..c1b0946 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -965,8 +965,18 @@ class RangeSlider(SliderBase):\n         if self.drawon:\n             self.ax.figure.canvas.draw_idle()\n         self.val = (vmin, vmax)\n+        # Temporarily disable drawon to prevent redundant drawing during callbacks\n+        original_drawon = self.drawon\n+        self.drawon = False\n+        \n         if self.eventson:\n             self._observers.process(\"changed\", (vmin, vmax))\n+        \n+        # Restore the original drawon state\n+        self.drawon = original_drawon\n+        \n+        if self.drawon:\n+            self.ax.figure.canvas.draw_idle()\n \n     def on_changed(self, func):\n         \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex 2882ff9..f8e78e3 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -777,8 +777,13 @@ class RangeSlider(SliderBase):\n         if self.drawon:\n             self.ax.figure.canvas.draw_idle()\n         self.val = (vmin, vmax)\n+        original_drawon = self.drawon\n+        self.drawon = False\n         if self.eventson:\n             self._observers.process('changed', (vmin, vmax))\n+        self.drawon = original_drawon\n+        if self.drawon:\n+            self.ax.figure.canvas.draw_idle()\n \n     def on_changed(self, func):\n         \"\"\"\n", "normalized_occurrence": 1}
