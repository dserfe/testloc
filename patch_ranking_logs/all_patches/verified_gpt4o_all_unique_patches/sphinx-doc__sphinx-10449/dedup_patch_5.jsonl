{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-10449", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex d42883b..99d45f3 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1561,11 +1561,9 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type:\n             result = (result[0], None)\n \n         for i, sig in enumerate(self._signatures):\n-            if sig.endswith(' -> None'):\n-                # Strip a return value from signatures of constructor in docstring (subsequent\n-                # entries)\n-                self._signatures[i] = sig[:-8]\n-\n+            if sig.startswith('__init__') and sig.endswith(' -> None'):\n+                # Strip a return value from signatures of constructors\n+                self._signatures[i] = sig.split(' -> ')[0]\n         return result\n \n     def format_signature(self, **kwargs: Any) -> str:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 2c8c52a..ffe716a 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -875,8 +875,8 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):\n         if result is not None:\n             result = (result[0], None)\n         for i, sig in enumerate(self._signatures):\n-            if sig.endswith(' -> None'):\n-                self._signatures[i] = sig[:-8]\n+            if sig.startswith('__init__') and sig.endswith(' -> None'):\n+                self._signatures[i] = sig.split(' -> ')[0]\n         return result\n     def format_signature(self, **kwargs: Any) -> str:\n         if self.doc_as_attr:\n", "normalized_occurrence": 1}
