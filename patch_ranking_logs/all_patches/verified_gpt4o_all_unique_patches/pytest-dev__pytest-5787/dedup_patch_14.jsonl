{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-5787", "model_patch": "diff --git a/src/_pytest/reports.py b/src/_pytest/reports.py\nindex ba95b0e..4d10afe 100644\n--- a/src/_pytest/reports.py\n+++ b/src/_pytest/reports.py\n@@ -351,7 +351,7 @@ class TestReport(BaseReport):\n         else:\n             if not isinstance(excinfo, ExceptionInfo):\n                 outcome = \"failed\"\n-                longrepr = excinfo\n+                longrepr = excinfo.getrepr(style=\"short\")\n             elif excinfo.errisinstance(skip.Exception):\n                 outcome = \"skipped\"\n                 r = excinfo._getreprcrash()\n@@ -412,13 +412,18 @@ def pytest_report_to_serializable(report):\n     if isinstance(report, (TestReport, CollectReport)):\n         data = report._to_json()\n         data[\"_report_type\"] = report.__class__.__name__\n+        if \"longrepr\" in data and isinstance(data[\"longrepr\"], ExceptionInfo):\n+            data[\"longrepr\"] = data[\"longrepr\"].getrepr(style=\"short\")._to_json()\n         return data\n \n \n def pytest_report_from_serializable(data):\n     if \"_report_type\" in data:\n         if data[\"_report_type\"] == \"TestReport\":\n-            return TestReport._from_json(data)\n+            report = TestReport._from_json(data)\n+            if \"longrepr\" in data and isinstance(data[\"longrepr\"], dict):\n+                report.longrepr = ExceptionInfo.from_json(data[\"longrepr\"])\n+            return report\n         elif data[\"_report_type\"] == \"CollectReport\":\n             return CollectReport._from_json(data)\n         assert False, \"Unknown report_type unserialize data: {}\".format(\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/reports.py b/src/_pytest/reports.py\nindex 3292df7..422911c 100644\n--- a/src/_pytest/reports.py\n+++ b/src/_pytest/reports.py\n@@ -172,7 +172,7 @@ class TestReport(BaseReport):\n             longrepr = None\n         elif not isinstance(excinfo, ExceptionInfo):\n             outcome = 'failed'\n-            longrepr = excinfo\n+            longrepr = excinfo.getrepr(style='short')\n         elif excinfo.errisinstance(skip.Exception):\n             outcome = 'skipped'\n             r = excinfo._getreprcrash()\n@@ -209,11 +209,16 @@ def pytest_report_to_serializable(report):\n     if isinstance(report, (TestReport, CollectReport)):\n         data = report._to_json()\n         data['_report_type'] = report.__class__.__name__\n+        if 'longrepr' in data and isinstance(data['longrepr'], ExceptionInfo):\n+            data['longrepr'] = data['longrepr'].getrepr(style='short')._to_json()\n         return data\n def pytest_report_from_serializable(data):\n     if '_report_type' in data:\n         if data['_report_type'] == 'TestReport':\n-            return TestReport._from_json(data)\n+            report = TestReport._from_json(data)\n+            if 'longrepr' in data and isinstance(data['longrepr'], dict):\n+                report.longrepr = ExceptionInfo.from_json(data['longrepr'])\n+            return report\n         elif data['_report_type'] == 'CollectReport':\n             return CollectReport._from_json(data)\n         assert False, 'Unknown report_type unserialize data: {}'.format(data['_report_type'])\n\\ No newline at end of file\n", "normalized_occurrence": 1}
