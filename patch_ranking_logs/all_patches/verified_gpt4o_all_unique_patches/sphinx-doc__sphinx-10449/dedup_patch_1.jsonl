{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-10449", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex d42883b..2e3acb8 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1552,7 +1552,11 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type:\n         if sig is None:\n             return None\n \n-        return stringify_signature(sig, show_return_annotation=False, **kwargs)\n+        # Disable the return annotation for __init__ methods.\n+        if self._signature_method_name == '__init__':\n+            return stringify_signature(sig, show_return_annotation=False, **kwargs)\n+        else:\n+            return stringify_signature(sig, **kwargs)\n \n     def _find_signature(self) -> Tuple[str, str]:\n         result = super()._find_signature()\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 2c8c52a..424062c 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -869,7 +869,10 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):\n             return None\n         if sig is None:\n             return None\n-        return stringify_signature(sig, show_return_annotation=False, **kwargs)\n+        if self._signature_method_name == '__init__':\n+            return stringify_signature(sig, show_return_annotation=False, **kwargs)\n+        else:\n+            return stringify_signature(sig, **kwargs)\n     def _find_signature(self) -> Tuple[str, str]:\n         result = super()._find_signature()\n         if result is not None:\n", "normalized_occurrence": 1}
