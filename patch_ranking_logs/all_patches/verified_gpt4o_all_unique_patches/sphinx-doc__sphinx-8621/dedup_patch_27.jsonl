{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8621", "model_patch": "diff --git a/sphinx/roles.py b/sphinx/roles.py\nindex 307975f..c5985b1 100644\n--- a/sphinx/roles.py\n+++ b/sphinx/roles.py\n@@ -32,6 +32,12 @@ if False:\n     from sphinx.environment import BuildEnvironment\n \n \n+def split_kbd_keys(text):\n+    import re\n+    # This regex splits by '-', '+', and '^' but only when they are not surrounded by spaces\n+    keys = re.split(r'(?<! )[-\\+\\^](?! )', text)\n+    return keys\n+\n generic_docroles = {\n     'command': addnodes.literal_strong,\n     'dfn': nodes.emphasis,\n@@ -45,6 +51,19 @@ generic_docroles = {\n     'regexp': nodes.literal,\n }\n \n+class KbdRole(SphinxRole):\n+    def run(self):\n+        keys = split_kbd_keys(self.text)\n+        node = nodes.inline(rawsource=self.rawtext)\n+        for key in keys:\n+            kbd_node = nodes.literal(key, key, classes=['kbd'])\n+            if node:\n+                node += nodes.Text('+', '+')\n+            node += kbd_node\n+        return [node], []\n+        \n+roles.register_local_role('kbd', KbdRole())\n+\n \n # -- generic cross-reference role ----------------------------------------------\n \n", "occurrence": 1, "normalized_patch": "--- a/sphinx/roles.py\n+++ b/sphinx/roles.py\n+def split_kbd_keys(text):\n+    import re\n+    keys = re.split('(?<! )[-\\\\+\\\\^](?! )', text)\n+    return keys\n+class KbdRole(SphinxRole):\n+    def run(self):\n+        keys = split_kbd_keys(self.text)\n+        node = nodes.inline(rawsource=self.rawtext)\n+        for key in keys:\n+            kbd_node = nodes.literal(key, key, classes=['kbd'])\n+            if node:\n+                node += nodes.Text('+', '+')\n+            node += kbd_node\n+        return ([node], [])\n+roles.register_local_role('kbd', KbdRole())", "normalized_occurrence": 1}
