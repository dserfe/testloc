diff --git a/sympy/stats/crv_types.py b/sympy/stats/crv_types.py
index e880705..20655d0 100644
--- a/sympy/stats/crv_types.py
+++ b/sympy/stats/crv_types.py
@@ -152,6 +152,11 @@ class ArcsinDistribution(SingleContinuousDistribution):
 
     def pdf(self, x):
         return 1/(pi*sqrt((x - self.a)*(self.b - x)))
+        
+    def _cdf(self, x):
+        from sympy import asin
+        a, b = self.a, self.b
+        return 2/pi * asin(sqrt((x - a)/(b - a)))
 
 def Arcsin(name, a=0, b=1):
     r"""
@@ -669,6 +674,10 @@ class DagumDistribution(SingleContinuousDistribution):
     def pdf(self, x):
         p, a, b = self.p, self.a, self.b
         return a*p/x*((x/b)**(a*p)/(((x/b)**a + 1)**(p + 1)))
+        
+    def _cdf(self, x):
+        p, a, b = self.p, self.a, self.b
+        return (1 + (x/b)**(-a))**(-p)
 
 
 def Dagum(name, p, a, b):
@@ -1041,6 +1050,10 @@ class FrechetDistribution(SingleContinuousDistribution):
     def pdf(self, x):
         a, s, m = self.a, self.s, self.m
         return a/s * ((x-m)/s)**(-1-a) * exp(-((x-m)/s)**(-a))
+        
+    def _cdf(self, x):
+        a, s, m = self.a, self.s, self.m
+        return exp(-((x-m)/s)**(-a))
 
 def Frechet(name, a, s=1, m=0):
     r"""
@@ -1107,6 +1120,11 @@ class GammaDistribution(SingleContinuousDistribution):
     def pdf(self, x):
         k, theta = self.k, self.theta
         return x**(k - 1) * exp(-x/theta) / (gamma(k)*theta**k)
+        
+    def _cdf(self, x):
+        k, theta = self.k, self.theta
+        from sympy import lowergamma
+        return lowergamma(k, x/theta)/gamma(k)
 
     def sample(self):
         return random.gammavariate(self.k, self.theta)
@@ -1199,6 +1217,11 @@ class GammaInverseDistribution(SingleContinuousDistribution):
     def pdf(self, x):
         a, b = self.a, self.b
         return b**a/gamma(a) * x**(-a-1) * exp(-b/x)
+        
+    def _cdf(self, x):
+        a, b = self.a, self.b
+        from sympy import uppergamma
+        return uppergamma(a, b/x)/gamma(a)
 
 def GammaInverse(name, a, b):
     r"""
@@ -1384,6 +1407,10 @@ class KumaraswamyDistribution(SingleContinuousDistribution):
     def pdf(self, x):
         a, b = self.a, self.b
         return a * b * x**(a-1) * (1-x**a)**(b-1)
+        
+    def _cdf(self, x):
+        a, b = self.a, self.b
+        return 1 - (1 - x**a)**b
 
 def Kumaraswamy(name, a, b):
     r"""
@@ -1444,6 +1471,13 @@ class LaplaceDistribution(SingleContinuousDistribution):
     def pdf(self, x):
         mu, b = self.mu, self.b
         return 1/(2*b)*exp(-Abs(x - mu)/b)
+        
+    def _cdf(self, x):
+        mu, b = self.mu, self.b
+        from sympy import Piecewise
+        return Piecewise(
+            (1/2*exp((x - mu)/b), x <= mu),
+            (1 - 1/2*exp(-(x - mu)/b), True))
 
 
 def Laplace(name, mu, b):
@@ -1500,6 +1534,10 @@ class LogisticDistribution(SingleContinuousDistribution):
     def pdf(self, x):
         mu, s = self.mu, self.s
         return exp(-(x - mu)/s)/(s*(1 + exp(-(x - mu)/s))**2)
+        
+    def _cdf(self, x):
+        mu, s = self.mu, self.s
+        return 1/(1 + exp(-(x - mu)/s))
 
 
 def Logistic(name, mu, s):
@@ -1710,6 +1748,11 @@ class NakagamiDistribution(SingleContinuousDistribution):
     def pdf(self, x):
         mu, omega = self.mu, self.omega
         return 2*mu**mu/(gamma(mu)*omega**mu)*x**(2*mu - 1)*exp(-mu/omega*x**2)
+        
+    def _cdf(self, x):
+        mu, omega = self.mu, self.omega
+        from sympy import lowergamma
+        return lowergamma(mu, (mu/omega)*x**2)/gamma(mu)
 
 
 def Nakagami(name, mu, omega):
@@ -2226,6 +2269,11 @@ class StudentTDistribution(SingleContinuousDistribution):
     def pdf(self, x):
         nu = self.nu
         return 1/(sqrt(nu)*beta_fn(S(1)/2, nu/2))*(1 + x**2/nu)**(-(nu + 1)/2)
+        
+    def _cdf(self, x):
+        nu = self.nu
+        from sympy import hyper, sqrt, gamma
+        return S(1)/2 + x*gamma((nu + 1)/2)/(sqrt(pi*nu)*gamma(nu/2))*hyper((S(1)/2, (nu + 1)/2), (S(3)/2,), -x**2/nu)
 
 
 def StudentT(name, nu):
