{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15382", "model_patch": "diff --git a/django/db/models/sql/where.py b/django/db/models/sql/where.py\nindex 7a540c9..e79f4ea 100644\n--- a/django/db/models/sql/where.py\n+++ b/django/db/models/sql/where.py\n@@ -94,6 +94,10 @@ class WhereNode(tree.Node):\n             # counts.\n             if empty_needed == 0:\n                 if self.negated:\n+                    if any(isinstance(child, ExpressionWrapper) and\n+                          isinstance(child.expression, Exists) for child in self.children):\n+                        # Special case: negated empty EXISTS should return True\n+                        return '1 = 1', []\n                     return '', []\n                 else:\n                     raise EmptyResultSet\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/where.py b/django/db/models/sql/where.py\nindex 7f5e30d..26e3776 100644\n--- a/django/db/models/sql/where.py\n+++ b/django/db/models/sql/where.py\n@@ -50,6 +50,8 @@ class WhereNode(tree.Node):\n                     full_needed -= 1\n             if empty_needed == 0:\n                 if self.negated:\n+                    if any((isinstance(child, ExpressionWrapper) and isinstance(child.expression, Exists) for child in self.children)):\n+                        return ('1 = 1', [])\n                     return ('', [])\n                 else:\n                     raise EmptyResultSet\n", "normalized_occurrence": 3}
