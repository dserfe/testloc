{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-7590", "model_patch": "diff --git a/sphinx/domains/cpp.py b/sphinx/domains/cpp.py\nindex 71a23bd..650df9f 100644\n--- a/sphinx/domains/cpp.py\n+++ b/sphinx/domains/cpp.py\n@@ -692,7 +692,11 @@ class ASTNestedName(ASTBase):\n             res.append('N')\n         res.append(modifiers)\n         for n in self.names:\n-            res.append(n.get_id(version))\n+            # Handle UDL suffix as part of identifier\n+            if hasattr(n, 'udl_suffix'):\n+                res.append(n.get_id(version) + n.udl_suffix)\n+            else:\n+                res.append(n.get_id(version))\n         if len(self.names) > 1 or len(modifiers) > 0:\n             res.append('E')\n         return ''.join(res)\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/domains/cpp.py b/sphinx/domains/cpp.py\nindex 4396875..87c3229 100644\n--- a/sphinx/domains/cpp.py\n+++ b/sphinx/domains/cpp.py\n@@ -152,7 +152,10 @@ class ASTNestedName(ASTBase):\n             res.append('N')\n         res.append(modifiers)\n         for n in self.names:\n-            res.append(n.get_id(version))\n+            if hasattr(n, 'udl_suffix'):\n+                res.append(n.get_id(version) + n.udl_suffix)\n+            else:\n+                res.append(n.get_id(version))\n         if len(self.names) > 1 or len(modifiers) > 0:\n             res.append('E')\n         return ''.join(res)\n", "normalized_occurrence": 1}
