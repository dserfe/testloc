{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-10449", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex d42883b..2166280 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1559,6 +1559,10 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type:\n         if result is not None:\n             # Strip a return value from signature of constructor in docstring (first entry)\n             result = (result[0], None)\n+        \n+        if self.config.autodoc_typehints == \"description\":\n+            # Strip return type annotation when autodoc_typehints is set to \"description\"\n+            return (result[0] if result is not None else None, None)\n \n         for i, sig in enumerate(self._signatures):\n             if sig.endswith(' -> None'):\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 2c8c52a..76b2319 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -874,6 +874,8 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):\n         result = super()._find_signature()\n         if result is not None:\n             result = (result[0], None)\n+        if self.config.autodoc_typehints == 'description':\n+            return (result[0] if result is not None else None, None)\n         for i, sig in enumerate(self._signatures):\n             if sig.endswith(' -> None'):\n                 self._signatures[i] = sig[:-8]\n", "normalized_occurrence": 1}
