{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-18087", "model_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex 73bbc98..7b8ce7c 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -1097,6 +1097,10 @@ def futrig(e, **kwargs):\n     if not e.args:\n         return e\n \n+    # Check if this contains a sqrt(sin**2) pattern and complex arguments\n+    if e.has(sqrt) and any(not arg.is_extended_real for arg in e.free_symbols):\n+        return e\n+\n     old = e\n     e = bottom_up(e, lambda x: _futrig(x, **kwargs))\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex fb82ea6..4ccbdba 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -483,6 +483,8 @@ def futrig(e, **kwargs):\n         return e\n     if not e.args:\n         return e\n+    if e.has(sqrt) and any((not arg.is_extended_real for arg in e.free_symbols)):\n+        return e\n     old = e\n     e = bottom_up(e, lambda x: _futrig(x, **kwargs))\n     if kwargs.pop('hyper', True) and e.has(HyperbolicFunction):\n", "normalized_occurrence": 1}
