{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-25433", "model_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex f12a9a3..f1f0411 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -872,6 +872,16 @@ class RangeSlider(SliderBase):\n         if event.name == \"button_press_event\" and event.inaxes == self.ax:\n             self.drag_active = True\n             event.canvas.grab_mouse(self.ax)\n+            # determine which handle was grabbed initially\n+            if self.orientation == \"vertical\":\n+                handle_index = np.argmin(\n+                    np.abs([h.get_ydata()[0] - event.ydata for h in self._handles])\n+                )\n+            else:\n+                handle_index = np.argmin(\n+                    np.abs([h.get_xdata()[0] - event.xdata for h in self._handles])\n+                )\n+            self._active_handle = self._handles[handle_index]\n \n         if not self.drag_active:\n             return\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex 2882ff9..ab344a5 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -705,6 +705,11 @@ class RangeSlider(SliderBase):\n         if event.name == 'button_press_event' and event.inaxes == self.ax:\n             self.drag_active = True\n             event.canvas.grab_mouse(self.ax)\n+            if self.orientation == 'vertical':\n+                handle_index = np.argmin(np.abs([h.get_ydata()[0] - event.ydata for h in self._handles]))\n+            else:\n+                handle_index = np.argmin(np.abs([h.get_xdata()[0] - event.xdata for h in self._handles]))\n+            self._active_handle = self._handles[handle_index]\n         if not self.drag_active:\n             return\n         elif event.name == 'button_release_event' or (event.name == 'button_press_event' and event.inaxes != self.ax):\n", "normalized_occurrence": 1}
