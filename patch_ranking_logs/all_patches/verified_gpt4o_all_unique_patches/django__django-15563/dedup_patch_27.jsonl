{"model_name_or_path": "agentless", "instance_id": "django__django-15563", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex df46b1e..aff462b 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -991,8 +991,19 @@ class QuerySet:\n         query.add_update_values(kwargs)\n         # Clear any annotations so that they won't be present in subqueries.\n         query.annotations = {}\n-        with transaction.mark_for_rollback_on_error(using=self.db):\n-            rows = query.get_compiler(self.db).execute_sql(CURSOR)\n+        opts = self.model._meta\n+        if opts.parents:\n+            # If the model has parents, iterate over them to ensure the correct table is updated.\n+            for parent, field in opts.parents.items():\n+                if parent:\n+                    parent_query = query.chain(sql.UpdateQuery)\n+                    parent_query.add_update_values(kwargs)\n+                    parent_query.annotations = {}\n+                    with transaction.mark_for_rollback_on_error(using=self.db):\n+                        rows = parent_query.get_compiler(self.db).execute_sql(CURSOR)\n+        else:\n+            with transaction.mark_for_rollback_on_error(using=self.db):\n+                rows = query.get_compiler(self.db).execute_sql(CURSOR)\n         self._result_cache = None\n         return rows\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 1c22d92..d644166 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -535,8 +535,18 @@ class QuerySet:\n         query = self.query.chain(sql.UpdateQuery)\n         query.add_update_values(kwargs)\n         query.annotations = {}\n-        with transaction.mark_for_rollback_on_error(using=self.db):\n-            rows = query.get_compiler(self.db).execute_sql(CURSOR)\n+        opts = self.model._meta\n+        if opts.parents:\n+            for parent, field in opts.parents.items():\n+                if parent:\n+                    parent_query = query.chain(sql.UpdateQuery)\n+                    parent_query.add_update_values(kwargs)\n+                    parent_query.annotations = {}\n+                    with transaction.mark_for_rollback_on_error(using=self.db):\n+                        rows = parent_query.get_compiler(self.db).execute_sql(CURSOR)\n+        else:\n+            with transaction.mark_for_rollback_on_error(using=self.db):\n+                rows = query.get_compiler(self.db).execute_sql(CURSOR)\n         self._result_cache = None\n         return rows\n     update.alters_data = True\n", "normalized_occurrence": 1}
