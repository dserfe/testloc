{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-12585", "model_patch": "diff --git a/sklearn/base.py b/sklearn/base.py\nindex 8dd093e..7240af0 100644\n--- a/sklearn/base.py\n+++ b/sklearn/base.py\n@@ -48,7 +48,9 @@ def clone(estimator, safe=True):\n     # XXX: not handling dictionaries\n     if estimator_type in (list, tuple, set, frozenset):\n         return estimator_type([clone(e, safe=safe) for e in estimator])\n-    elif not hasattr(estimator, 'get_params'):\n+    elif isinstance(estimator, type) or not hasattr(estimator, 'get_params'):\n+        if isinstance(estimator, type):\n+            return estimator\n         if not safe:\n             return copy.deepcopy(estimator)\n         else:\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/base.py b/sklearn/base.py\nindex da0de9a..1b8b231 100644\n--- a/sklearn/base.py\n+++ b/sklearn/base.py\n@@ -36,7 +36,9 @@ def clone(estimator, safe=True):\n     estimator_type = type(estimator)\n     if estimator_type in (list, tuple, set, frozenset):\n         return estimator_type([clone(e, safe=safe) for e in estimator])\n-    elif not hasattr(estimator, 'get_params'):\n+    elif isinstance(estimator, type) or not hasattr(estimator, 'get_params'):\n+        if isinstance(estimator, type):\n+            return estimator\n         if not safe:\n             return copy.deepcopy(estimator)\n         else:\n", "normalized_occurrence": 1}
