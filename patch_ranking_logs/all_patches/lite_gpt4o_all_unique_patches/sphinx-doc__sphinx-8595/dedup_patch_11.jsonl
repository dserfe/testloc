{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8595", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 598a973..68313ec 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1017,7 +1017,9 @@ class ModuleDocumenter(Documenter):\n \n         try:\n             if not self.options.ignore_module_all:\n-                self.__all__ = inspect.getall(self.object)\n+                self.__all__ = getattr(self.object, '__all__', None)\n+                if self.__all__ is None:\n+                    self.__all__ = [name for name, obj in inspect.getmembers(self.object)]\n         except AttributeError as exc:\n             # __all__ raises an error.\n             logger.warning(__('%s.__all__ raises an error. Ignored: %r'),\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex af206f1..7367a90 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -536,7 +536,9 @@ class ModuleDocumenter(Documenter):\n         ret = super().import_object(raiseerror)\n         try:\n             if not self.options.ignore_module_all:\n-                self.__all__ = inspect.getall(self.object)\n+                self.__all__ = getattr(self.object, '__all__', None)\n+                if self.__all__ is None:\n+                    self.__all__ = [name for name, obj in inspect.getmembers(self.object)]\n         except AttributeError as exc:\n             logger.warning(__('%s.__all__ raises an error. Ignored: %r'), (self.fullname, exc), type='autodoc')\n         except ValueError as exc:\n", "normalized_occurrence": 1}
