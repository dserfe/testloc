{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-20826", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 07605b5..27b8fb9 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1191,6 +1191,20 @@ class _AxesBase(martist.Artist):\n \n         xaxis_visible = self.xaxis.get_visible()\n         yaxis_visible = self.yaxis.get_visible()\n+        \n+        # Save tick visibility states\n+        xtickvis = {\n+            'top': self.xaxis.majorTicks[0].tick1line.get_visible() if self.xaxis.majorTicks else True,\n+            'bottom': self.xaxis.majorTicks[0].tick2line.get_visible() if self.xaxis.majorTicks else True,\n+            'labeltop': self.xaxis.majorTicks[0].label1.get_visible() if self.xaxis.majorTicks else False,\n+            'labelbottom': self.xaxis.majorTicks[0].label2.get_visible() if self.xaxis.majorTicks else True\n+        }\n+        ytickvis = {\n+            'left': self.yaxis.majorTicks[0].tick1line.get_visible() if self.yaxis.majorTicks else True,\n+            'right': self.yaxis.majorTicks[0].tick2line.get_visible() if self.yaxis.majorTicks else True,\n+            'labelleft': self.yaxis.majorTicks[0].label1.get_visible() if self.yaxis.majorTicks else True,\n+            'labelright': self.yaxis.majorTicks[0].label2.get_visible() if self.yaxis.majorTicks else False\n+        }\n \n         self.xaxis.clear()\n         self.yaxis.clear()\n@@ -1305,9 +1319,21 @@ class _AxesBase(martist.Artist):\n         if self._sharex is not None:\n             self.xaxis.set_visible(xaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            # Restore x-axis tick visibility for shared axes\n+            self.tick_params(axis='x',\n+                           top=xtickvis['top'],\n+                           bottom=xtickvis['bottom'],\n+                           labeltop=xtickvis['labeltop'],\n+                           labelbottom=xtickvis['labelbottom'])\n         if self._sharey is not None:\n             self.yaxis.set_visible(yaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            # Restore y-axis tick visibility for shared axes\n+            self.tick_params(axis='y',\n+                           left=ytickvis['left'],\n+                           right=ytickvis['right'],\n+                           labelleft=ytickvis['labelleft'],\n+                           labelright=ytickvis['labelright'])\n \n         self.stale = True\n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 33a6de3..2ee01fa 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -503,6 +503,8 @@ class _AxesBase(martist.Artist):\n             patch_visible = True\n         xaxis_visible = self.xaxis.get_visible()\n         yaxis_visible = self.yaxis.get_visible()\n+        xtickvis = {'top': self.xaxis.majorTicks[0].tick1line.get_visible() if self.xaxis.majorTicks else True, 'bottom': self.xaxis.majorTicks[0].tick2line.get_visible() if self.xaxis.majorTicks else True, 'labeltop': self.xaxis.majorTicks[0].label1.get_visible() if self.xaxis.majorTicks else False, 'labelbottom': self.xaxis.majorTicks[0].label2.get_visible() if self.xaxis.majorTicks else True}\n+        ytickvis = {'left': self.yaxis.majorTicks[0].tick1line.get_visible() if self.yaxis.majorTicks else True, 'right': self.yaxis.majorTicks[0].tick2line.get_visible() if self.yaxis.majorTicks else True, 'labelleft': self.yaxis.majorTicks[0].label1.get_visible() if self.yaxis.majorTicks else True, 'labelright': self.yaxis.majorTicks[0].label2.get_visible() if self.yaxis.majorTicks else False}\n         self.xaxis.clear()\n         self.yaxis.clear()\n         for name, spine in self.spines.items():\n@@ -578,9 +580,11 @@ class _AxesBase(martist.Artist):\n         if self._sharex is not None:\n             self.xaxis.set_visible(xaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            self.tick_params(axis='x', top=xtickvis['top'], bottom=xtickvis['bottom'], labeltop=xtickvis['labeltop'], labelbottom=xtickvis['labelbottom'])\n         if self._sharey is not None:\n             self.yaxis.set_visible(yaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            self.tick_params(axis='y', left=ytickvis['left'], right=ytickvis['right'], labelleft=ytickvis['labelleft'], labelright=ytickvis['labelright'])\n         self.stale = True\n     class ArtistList(MutableSequence):\n         def __init__(self, axes, prop_name, add_name, valid_types=None, invalid_types=None):\n", "normalized_occurrence": 1}
