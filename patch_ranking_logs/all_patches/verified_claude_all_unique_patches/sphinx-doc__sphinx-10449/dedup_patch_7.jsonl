{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-10449", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex d42883b..3954a8f 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1543,6 +1543,8 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type:\n \n         try:\n             self._signature_class, self._signature_method_name, sig = self._get_signature()\n+            if sig and self.config.autodoc_typehints in ('none', 'description'):\n+                sig = sig.replace(return_annotation=Parameter.empty)\n         except TypeError as exc:\n             # __signature__ attribute contained junk\n             logger.warning(__(\"Failed to get a constructor signature for %s: %s\"),\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 2c8c52a..4eee002 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -864,6 +864,8 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):\n             kwargs.setdefault('unqualified_typehints', True)\n         try:\n             self._signature_class, self._signature_method_name, sig = self._get_signature()\n+            if sig and self.config.autodoc_typehints in ('none', 'description'):\n+                sig = sig.replace(return_annotation=Parameter.empty)\n         except TypeError as exc:\n             logger.warning(__('Failed to get a constructor signature for %s: %s'), self.fullname, exc)\n             return None\n", "normalized_occurrence": 1}
