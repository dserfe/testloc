{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15280", "model_patch": "diff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py\nindex 2a14012..62f62f0 100644\n--- a/django/db/models/fields/related_descriptors.py\n+++ b/django/db/models/fields/related_descriptors.py\n@@ -145,6 +145,9 @@ class ForwardManyToOneDescriptor:\n         if not remote_field.multiple:\n             for rel_obj in queryset:\n                 instance = instances_dict[rel_obj_attr(rel_obj)]\n+                # Ensure we preserve the deferred fields state from the queryset\n+                if hasattr(rel_obj, '_deferred'):\n+                    instance._deferred = rel_obj._deferred\n                 remote_field.set_cached_value(rel_obj, instance)\n         return queryset, rel_obj_attr, instance_attr, True, self.field.get_cache_name(), False\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py\nindex bb07c3d..b4a174e 100644\n--- a/django/db/models/fields/related_descriptors.py\n+++ b/django/db/models/fields/related_descriptors.py\n@@ -37,6 +37,8 @@ class ForwardManyToOneDescriptor:\n         if not remote_field.multiple:\n             for rel_obj in queryset:\n                 instance = instances_dict[rel_obj_attr(rel_obj)]\n+                if hasattr(rel_obj, '_deferred'):\n+                    instance._deferred = rel_obj._deferred\n                 remote_field.set_cached_value(rel_obj, instance)\n         return (queryset, rel_obj_attr, instance_attr, True, self.field.get_cache_name(), False)\n     def get_object(self, instance):\n", "normalized_occurrence": 1}
