{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15738", "model_patch": "diff --git a/django/db/migrations/state.py b/django/db/migrations/state.py\nindex 5562d34..6cad44b 100644\n--- a/django/db/migrations/state.py\n+++ b/django/db/migrations/state.py\n@@ -184,7 +184,9 @@ class ProjectState:\n         if option_keys:\n             for key in option_keys:\n                 if key not in options:\n-                    model_state.options.pop(key, False)\n+                    model_state.options.pop(key, None)\n+                elif options[key] is None:\n+                    model_state.options.pop(key, None)\n         self.reload_model(app_label, model_name, delay=True)\n \n     def remove_model_options(self, app_label, model_name, option_name, value_to_remove):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/state.py b/django/db/migrations/state.py\nindex 18747a4..d1a7e72 100644\n--- a/django/db/migrations/state.py\n+++ b/django/db/migrations/state.py\n@@ -119,7 +119,9 @@ class ProjectState:\n         if option_keys:\n             for key in option_keys:\n                 if key not in options:\n-                    model_state.options.pop(key, False)\n+                    model_state.options.pop(key, None)\n+                elif options[key] is None:\n+                    model_state.options.pop(key, None)\n         self.reload_model(app_label, model_name, delay=True)\n     def remove_model_options(self, app_label, model_name, option_name, value_to_remove):\n         model_state = self.models[app_label, model_name]\n", "normalized_occurrence": 1}
