{"model_name_or_path": "agentless", "instance_id": "django__django-12050", "model_patch": "diff --git a/django/db/models/lookups.py b/django/db/models/lookups.py\nindex ba8a5e5..291077b 100644\n--- a/django/db/models/lookups.py\n+++ b/django/db/models/lookups.py\n@@ -272,7 +272,10 @@ class Exact(FieldGetDbPrepValueMixin, BuiltinLookup):\n                     'The QuerySet value for an exact lookup must be limited to '\n                     'one result using slicing.'\n                 )\n-        return super().process_rhs(compiler, connection)\n+        rhs, params = super().process_rhs(compiler, connection)\n+        if isinstance(params, tuple):  # Ensure lists are not coerced into tuples\n+            params = list(params)\n+        return rhs, params\n \n \n @Field.register_lookup\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/lookups.py b/django/db/models/lookups.py\nindex a76d93e..6cbb6ee 100644\n--- a/django/db/models/lookups.py\n+++ b/django/db/models/lookups.py\n@@ -190,7 +190,10 @@ class Exact(FieldGetDbPrepValueMixin, BuiltinLookup):\n                     self.rhs.add_fields(['pk'])\n             else:\n                 raise ValueError('The QuerySet value for an exact lookup must be limited to one result using slicing.')\n-        return super().process_rhs(compiler, connection)\n+        rhs, params = super().process_rhs(compiler, connection)\n+        if isinstance(params, tuple):\n+            params = list(params)\n+        return (rhs, params)\n @Field.register_lookup\n class IExact(BuiltinLookup):\n     lookup_name = 'iexact'\n", "normalized_occurrence": 1}
