{"model_name_or_path": "agentless_claude", "instance_id": "astropy__astropy-14182", "model_patch": "diff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py\nindex 00bbbaf..d3fde8a 100644\n--- a/astropy/io/ascii/rst.py\n+++ b/astropy/io/ascii/rst.py\n@@ -61,6 +61,16 @@ class RST(FixedWidth):\n         super().__init__(delimiter_pad=None, bookend=False)\n \n     def write(self, lines):\n+        # Get the lines from parent class but without the header decoration\n         lines = super().write(lines)\n-        lines = [lines[1]] + lines + [lines[1]]\n-        return lines\n+        \n+        # Add RST-style header decoration\n+        header_line = lines[1]\n+        if hasattr(self, 'header_rows'):\n+            # Add additional header rows if specified\n+            header_rows = len(self.header_rows) + 1  # +1 for column names\n+            lines = [header_line] + lines[1:header_rows+1] + [header_line] + lines[header_rows+1:] + [header_line]\n+        else:\n+            # Default behavior - just wrap with header decoration\n+            lines = [header_line] + lines + [header_line]\n+        return lines\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py\nindex 65d6c1d..ff2cdae 100644\n--- a/astropy/io/ascii/rst.py\n+++ b/astropy/io/ascii/rst.py\n@@ -22,5 +22,10 @@ class RST(FixedWidth):\n         super().__init__(delimiter_pad=None, bookend=False)\n     def write(self, lines):\n         lines = super().write(lines)\n-        lines = [lines[1]] + lines + [lines[1]]\n+        header_line = lines[1]\n+        if hasattr(self, 'header_rows'):\n+            header_rows = len(self.header_rows) + 1\n+            lines = [header_line] + lines[1:header_rows + 1] + [header_line] + lines[header_rows + 1:] + [header_line]\n+        else:\n+            lines = [header_line] + lines + [header_line]\n         return lines\n\\ No newline at end of file\n", "normalized_occurrence": 1}
