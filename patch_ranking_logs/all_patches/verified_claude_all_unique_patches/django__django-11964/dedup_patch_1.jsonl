{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11964", "model_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex 6957452..470da9c 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -1010,6 +1010,9 @@ class CharField(Field):\n     def to_python(self, value):\n         if isinstance(value, str) or value is None:\n             return value\n+        # Handle Choices enum members by getting their value\n+        if hasattr(value, '_value_'):\n+            return str(value._value_)\n         return str(value)\n \n     def get_prep_value(self, value):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex e3867cb..bc02301 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -487,6 +487,8 @@ class CharField(Field):\n     def to_python(self, value):\n         if isinstance(value, str) or value is None:\n             return value\n+        if hasattr(value, '_value_'):\n+            return str(value._value_)\n         return str(value)\n     def get_prep_value(self, value):\n         value = super().get_prep_value(value)\n", "normalized_occurrence": 3}
