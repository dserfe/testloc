{"model_name_or_path": "agentless", "instance_id": "django__django-11740", "model_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 816737e..80cf80e 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -184,6 +184,7 @@ class MigrationAutodetector:\n         self.generate_removed_fields()\n         self.generate_added_fields()\n         self.generate_altered_fields()\n+        self.generate_foreign_key_dependencies()\n         self.generate_altered_unique_together()\n         self.generate_altered_index_together()\n         self.generate_added_indexes()\n@@ -1076,7 +1077,29 @@ class MigrationAutodetector:\n             ))\n         return dependencies\n \n-    def _generate_altered_foo_together(self, operation):\n+    def generate_foreign_key_dependencies(self):\n+        \"\"\"\n+        Generate dependencies for ForeignKey fields.\n+        \"\"\"\n+        for (app_label, model_name), fields in sorted(self.kept_model_keys):\n+            for field_name, field in fields:\n+                if isinstance(field, models.ForeignKey):\n+                    dependencies = self._get_dependencies_for_foreign_key(field)\n+                    for dep_app_label, dep_object_name, _, _ in dependencies:\n+                        self.add_operation(\n+                            app_label,\n+                            operations.AlterField(\n+                                model_name=model_name,\n+                                name=field_name,\n+                                field=field,\n+                            )\n+                        )\n+                        self.add_dependency(\n+                            app_label,\n+                            migration.Migration(\n+                                dependencies=[(dep_app_label, dep_object_name, None)]\n+                            )\n+                        )\n         option_name = operation.option_name\n         for app_label, model_name in sorted(self.kept_model_keys):\n             old_model_name = self.renamed_models.get((app_label, model_name), model_name)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 9fda64b..00f0db8 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -98,6 +98,7 @@ class MigrationAutodetector:\n         self.generate_removed_fields()\n         self.generate_added_fields()\n         self.generate_altered_fields()\n+        self.generate_foreign_key_dependencies()\n         self.generate_altered_unique_together()\n         self.generate_altered_index_together()\n         self.generate_added_indexes()\n@@ -522,7 +523,14 @@ class MigrationAutodetector:\n         if getattr(field.remote_field, 'through', None) and (not field.remote_field.through._meta.auto_created):\n             dependencies.append((field.remote_field.through._meta.app_label, field.remote_field.through._meta.object_name, None, True))\n         return dependencies\n-    def _generate_altered_foo_together(self, operation):\n+    def generate_foreign_key_dependencies(self):\n+        for (app_label, model_name), fields in sorted(self.kept_model_keys):\n+            for field_name, field in fields:\n+                if isinstance(field, models.ForeignKey):\n+                    dependencies = self._get_dependencies_for_foreign_key(field)\n+                    for dep_app_label, dep_object_name, _, _ in dependencies:\n+                        self.add_operation(app_label, operations.AlterField(model_name=model_name, name=field_name, field=field))\n+                        self.add_dependency(app_label, migration.Migration(dependencies=[(dep_app_label, dep_object_name, None)]))\n         option_name = operation.option_name\n         for app_label, model_name in sorted(self.kept_model_keys):\n             old_model_name = self.renamed_models.get((app_label, model_name), model_name)\n", "normalized_occurrence": 1}
