{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-7590", "model_patch": "diff --git a/sphinx/domains/cpp.py b/sphinx/domains/cpp.py\nindex 71a23bd..94798b1 100644\n--- a/sphinx/domains/cpp.py\n+++ b/sphinx/domains/cpp.py\n@@ -4662,7 +4662,13 @@ class DefinitionParser(BaseParser):\n                       integer_literal_re, octal_literal_re]:\n             pos = self.pos\n             if self.match(regex):\n-                while self.current_char in 'uUlLfF':\n+                # Handle both standard suffixes and user-defined literals\n+                # Standard suffixes: u, U, l, L, f, F\n+                # User-defined literals: _[identifier]\n+                while (self.current_char in 'uUlLfF' or \n+                       (self.current_char == '_' or \n+                        (self.pos > pos and self.definition[self.pos-1] in 'qQ' and\n+                         self.current_char.isalnum()))):\n                     self.pos += 1\n                 return ASTNumberLiteral(self.definition[pos:self.pos])\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/domains/cpp.py b/sphinx/domains/cpp.py\nindex 4396875..e69e08c 100644\n--- a/sphinx/domains/cpp.py\n+++ b/sphinx/domains/cpp.py\n@@ -3059,7 +3059,7 @@ class DefinitionParser(BaseParser):\n         for regex in [float_literal_re, binary_literal_re, hex_literal_re, integer_literal_re, octal_literal_re]:\n             pos = self.pos\n             if self.match(regex):\n-                while self.current_char in 'uUlLfF':\n+                while self.current_char in 'uUlLfF' or (self.current_char == '_' or (self.pos > pos and self.definition[self.pos - 1] in 'qQ' and self.current_char.isalnum())):\n                     self.pos += 1\n                 return ASTNumberLiteral(self.definition[pos:self.pos])\n         string = self._parse_string()\n", "normalized_occurrence": 1}
