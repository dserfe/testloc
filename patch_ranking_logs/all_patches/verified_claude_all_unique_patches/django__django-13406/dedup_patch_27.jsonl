{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13406", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex cc286ae..4cf4134 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -305,6 +305,8 @@ class Query(BaseExpression):\n             obj.annotation_select_mask = None\n         else:\n             obj.annotation_select_mask = self.annotation_select_mask.copy()\n+        # Preserve values_select for pickling\n+        obj.values_select = self.values_select\n         obj.combined_queries = tuple(query.clone() for query in self.combined_queries)\n         # _annotation_select_cache cannot be copied, as doing so breaks the\n         # (necessary) state in which both annotations and\n", "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 134360d..3055fcf 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -171,6 +171,7 @@ class Query(BaseExpression):\n             obj.annotation_select_mask = None\n         else:\n             obj.annotation_select_mask = self.annotation_select_mask.copy()\n+        obj.values_select = self.values_select\n         obj.combined_queries = tuple((query.clone() for query in self.combined_queries))\n         obj._annotation_select_cache = None\n         obj.extra = self.extra.copy()\n", "normalized_occurrence": 1}
