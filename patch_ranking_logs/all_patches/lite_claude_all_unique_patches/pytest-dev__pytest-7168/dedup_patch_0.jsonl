{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-7168", "model_patch": "diff --git a/src/_pytest/_io/saferepr.py b/src/_pytest/_io/saferepr.py\nindex adc421d..00f1efe 100644\n--- a/src/_pytest/_io/saferepr.py\n+++ b/src/_pytest/_io/saferepr.py\n@@ -1,3 +1,4 @@\n+\n import pprint\n import reprlib\n from typing import Any\n@@ -53,7 +54,8 @@ class SafeRepr(reprlib.Repr):\n \n     def repr_instance(self, x: Any, level: int) -> str:\n         try:\n-            s = repr(x)\n+            # Get __repr__ method directly to provide better error context\n+            s = x.__class__.__repr__(x)\n         except (KeyboardInterrupt, SystemExit):\n             raise\n         except BaseException as exc:\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/_io/saferepr.py b/src/_pytest/_io/saferepr.py\nindex 789deb9..c74d699 100644\n--- a/src/_pytest/_io/saferepr.py\n+++ b/src/_pytest/_io/saferepr.py\n@@ -37,7 +37,7 @@ class SafeRepr(reprlib.Repr):\n         return _ellipsize(s, self.maxsize)\n     def repr_instance(self, x: Any, level: int) -> str:\n         try:\n-            s = repr(x)\n+            s = x.__class__.__repr__(x)\n         except (KeyboardInterrupt, SystemExit):\n             raise\n         except BaseException as exc:\n", "normalized_occurrence": 1}
