{"model_name_or_path": "agentless", "instance_id": "django__django-11477", "model_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 58da200..ce0d8ab 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -469,12 +469,17 @@ class URLResolver:\n                         for name in url_pattern.reverse_dict:\n                             for matches, pat, defaults, converters in url_pattern.reverse_dict.getlist(name):\n                                 new_matches = normalize(p_pattern + pat)\n+                                combined_defaults = {**defaults, **url_pattern.default_kwargs}\n+                                # Ensure all optional parameters are accounted for\n+                                for key, value in combined_defaults.items():\n+                                    if key not in defaults:\n+                                        combined_defaults[key] = value\n                                 lookups.appendlist(\n                                     name,\n                                     (\n                                         new_matches,\n                                         p_pattern + pat,\n-                                        {**defaults, **url_pattern.default_kwargs},\n+                                        combined_defaults,\n                                         {**self.pattern.converters, **url_pattern.pattern.converters, **converters}\n                                     )\n                                 )\n", "occurrence": 1, "normalized_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex e10e0e8..806a401 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -297,7 +297,11 @@ class URLResolver:\n                         for name in url_pattern.reverse_dict:\n                             for matches, pat, defaults, converters in url_pattern.reverse_dict.getlist(name):\n                                 new_matches = normalize(p_pattern + pat)\n-                                lookups.appendlist(name, (new_matches, p_pattern + pat, {**defaults, **url_pattern.default_kwargs}, {**self.pattern.converters, **url_pattern.pattern.converters, **converters}))\n+                                combined_defaults = {**defaults, **url_pattern.default_kwargs}\n+                                for key, value in combined_defaults.items():\n+                                    if key not in defaults:\n+                                        combined_defaults[key] = value\n+                                lookups.appendlist(name, (new_matches, p_pattern + pat, combined_defaults, {**self.pattern.converters, **url_pattern.pattern.converters, **converters}))\n                         for namespace, (prefix, sub_pattern) in url_pattern.namespace_dict.items():\n                             current_converters = url_pattern.pattern.converters\n                             sub_pattern.pattern.converters.update(current_converters)\n", "normalized_occurrence": 1}
