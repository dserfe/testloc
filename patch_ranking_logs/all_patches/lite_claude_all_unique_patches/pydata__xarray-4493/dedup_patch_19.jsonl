{"model_name_or_path": "agentless_claude", "instance_id": "pydata__xarray-4493", "model_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex 8003c0d..824772f 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -3907,7 +3907,14 @@ class Dataset(Mapping, ImplementsDatasetReduce, DataWithCoords):\n             dataset.\n         \"\"\"\n         merge_result = dataset_update_method(self, other)\n-        return self._replace(inplace=True, **merge_result._asdict())\n+        result = self._replace(inplace=False, **merge_result._asdict())\n+        self._variables = result._variables\n+        self._coord_names = result._coord_names\n+        self._dims = result._dims\n+        self._indexes = result._indexes\n+        self._attrs = result._attrs\n+        self._encoding = result._encoding\n+        return self\n \n     def merge(\n         self,\n", "occurrence": 2, "normalized_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex 5bd37a8..9cd5109 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -1254,7 +1254,14 @@ class Dataset(Mapping, ImplementsDatasetReduce, DataWithCoords):\n         return result\n     def update(self, other: 'CoercibleMapping') -> 'Dataset':\n         merge_result = dataset_update_method(self, other)\n-        return self._replace(inplace=True, **merge_result._asdict())\n+        result = self._replace(inplace=False, **merge_result._asdict())\n+        self._variables = result._variables\n+        self._coord_names = result._coord_names\n+        self._dims = result._dims\n+        self._indexes = result._indexes\n+        self._attrs = result._attrs\n+        self._encoding = result._encoding\n+        return self\n     def merge(self, other: Union['CoercibleMapping', 'DataArray'], overwrite_vars: Union[Hashable, Iterable[Hashable]]=frozenset(), compat: str='no_conflicts', join: str='outer', fill_value: Any=dtypes.NA) -> 'Dataset':\n         other = other.to_dataset() if isinstance(other, xr.DataArray) else other\n         merge_result = dataset_merge_method(self, other, overwrite_vars=overwrite_vars, compat=compat, join=join, fill_value=fill_value)\n", "normalized_occurrence": 2}
