{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11797", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 946e695..982cec2 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -110,7 +110,12 @@ class SQLCompiler:\n         for expr, _, _ in select:\n             cols = expr.get_group_by_cols()\n             for col in cols:\n-                expressions.append(col)\n+                if hasattr(col, 'target'):\n+                    # If this is a reference to a column from an outer query's GROUP BY,\n+                    # preserve the original grouping column\n+                    expressions.append(col.target)\n+                else:\n+                    expressions.append(col)\n         for expr, (sql, params, is_ref) in order_by:\n             # Skip References to the select clause, as all expressions in the\n             # select clause are already part of the group by.\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex a6b66a9..34e4e33 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -48,7 +48,10 @@ class SQLCompiler:\n         for expr, _, _ in select:\n             cols = expr.get_group_by_cols()\n             for col in cols:\n-                expressions.append(col)\n+                if hasattr(col, 'target'):\n+                    expressions.append(col.target)\n+                else:\n+                    expressions.append(col)\n         for expr, (sql, params, is_ref) in order_by:\n             if not expr.contains_aggregate and (not is_ref):\n                 expressions.extend(expr.get_source_expressions())\n", "normalized_occurrence": 1}
