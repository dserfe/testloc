{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-22840", "model_patch": "diff --git a/sympy/simplify/cse_main.py b/sympy/simplify/cse_main.py\nindex fa99708..e946946 100644\n--- a/sympy/simplify/cse_main.py\n+++ b/sympy/simplify/cse_main.py\n@@ -686,7 +686,8 @@ def tree_cse(exprs, symbols, opt_subs=None, order='canonical', ignore=()):\n     for e in exprs:\n         if isinstance(e, Basic):\n             reduced_e = _rebuild(e)\n-        else:\n+        elif isinstance(e, MatrixSymbol):\n+            temp.append(Tuple(*(e[i, j] for i in range(e.shape[0]) for j in range(e.shape[1]))))\n             reduced_e = e\n         reduced_exprs.append(reduced_e)\n     return replacements, reduced_exprs\n@@ -773,7 +774,7 @@ def cse(exprs, symbols=None, optimizations=None, postprocess=None,\n     ([], x)\n     \"\"\"\n     from sympy.matrices import (MatrixBase, Matrix, ImmutableMatrix,\n-                                SparseMatrix, ImmutableSparseMatrix)\n+                                SparseMatrix, ImmutableSparseMatrix, MatrixSymbol)\n \n     if not list:\n         return _cse_homogeneous(exprs,\n@@ -792,9 +793,10 @@ def cse(exprs, symbols=None, optimizations=None, postprocess=None,\n     for e in exprs:\n         if isinstance(e, (Matrix, ImmutableMatrix)):\n             temp.append(Tuple(*e.flat()))\n-        elif isinstance(e, (SparseMatrix, ImmutableSparseMatrix)):\n+        elif isinstance(e, (SparseMatrix, ImmutableSparseMatrix, MatrixSymbol)):\n             temp.append(Tuple(*e.todok().items()))\n-        else:\n+        elif isinstance(e, MatrixSymbol):\n+            temp.append(Tuple(*(e[i, j] for i in range(e.shape[0]) for j in range(e.shape[1]))))\n             temp.append(e)\n     exprs = temp\n     del temp\n@@ -835,7 +837,7 @@ def cse(exprs, symbols=None, optimizations=None, postprocess=None,\n             reduced_exprs[i] = Matrix(e.rows, e.cols, reduced_exprs[i])\n             if isinstance(e, ImmutableMatrix):\n                 reduced_exprs[i] = reduced_exprs[i].as_immutable()\n-        elif isinstance(e, (SparseMatrix, ImmutableSparseMatrix)):\n+        elif isinstance(e, (SparseMatrix, ImmutableSparseMatrix, MatrixSymbol)):\n             m = SparseMatrix(e.rows, e.cols, {})\n             for k, v in reduced_exprs[i]:\n                 m[k] = v\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/cse_main.py b/sympy/simplify/cse_main.py\nindex d5cc8d7..0e93b5d 100644\n--- a/sympy/simplify/cse_main.py\n+++ b/sympy/simplify/cse_main.py\n@@ -298,12 +298,13 @@ def tree_cse(exprs, symbols, opt_subs=None, order='canonical', ignore=()):\n     for e in exprs:\n         if isinstance(e, Basic):\n             reduced_e = _rebuild(e)\n-        else:\n+        elif isinstance(e, MatrixSymbol):\n+            temp.append(Tuple(*(e[i, j] for i in range(e.shape[0]) for j in range(e.shape[1]))))\n             reduced_e = e\n         reduced_exprs.append(reduced_e)\n     return (replacements, reduced_exprs)\n def cse(exprs, symbols=None, optimizations=None, postprocess=None, order='canonical', ignore=(), list=True):\n-    from sympy.matrices import MatrixBase, Matrix, ImmutableMatrix, SparseMatrix, ImmutableSparseMatrix\n+    from sympy.matrices import MatrixBase, Matrix, ImmutableMatrix, SparseMatrix, ImmutableSparseMatrix, MatrixSymbol\n     if not list:\n         return _cse_homogeneous(exprs, symbols=symbols, optimizations=optimizations, postprocess=postprocess, order=order, ignore=ignore)\n     if isinstance(exprs, (int, float)):\n@@ -315,9 +316,10 @@ def cse(exprs, symbols=None, optimizations=None, postprocess=None, order='canoni\n     for e in exprs:\n         if isinstance(e, (Matrix, ImmutableMatrix)):\n             temp.append(Tuple(*e.flat()))\n-        elif isinstance(e, (SparseMatrix, ImmutableSparseMatrix)):\n+        elif isinstance(e, (SparseMatrix, ImmutableSparseMatrix, MatrixSymbol)):\n             temp.append(Tuple(*e.todok().items()))\n-        else:\n+        elif isinstance(e, MatrixSymbol):\n+            temp.append(Tuple(*(e[i, j] for i in range(e.shape[0]) for j in range(e.shape[1]))))\n             temp.append(e)\n     exprs = temp\n     del temp\n@@ -342,7 +344,7 @@ def cse(exprs, symbols=None, optimizations=None, postprocess=None, order='canoni\n             reduced_exprs[i] = Matrix(e.rows, e.cols, reduced_exprs[i])\n             if isinstance(e, ImmutableMatrix):\n                 reduced_exprs[i] = reduced_exprs[i].as_immutable()\n-        elif isinstance(e, (SparseMatrix, ImmutableSparseMatrix)):\n+        elif isinstance(e, (SparseMatrix, ImmutableSparseMatrix, MatrixSymbol)):\n             m = SparseMatrix(e.rows, e.cols, {})\n             for k, v in reduced_exprs[i]:\n                 m[k] = v\n", "normalized_occurrence": 1}
