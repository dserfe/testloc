{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-18087", "model_patch": "diff --git a/sympy/functions/elementary/trigonometric.py b/sympy/functions/elementary/trigonometric.py\nindex 5205b6e..34a5891 100644\n--- a/sympy/functions/elementary/trigonometric.py\n+++ b/sympy/functions/elementary/trigonometric.py\n@@ -268,6 +268,9 @@ class sin(TrigonometricFunction):\n                 return S.Zero\n             elif arg is S.Infinity or arg is S.NegativeInfinity:\n                 return AccumBounds(-1, 1)\n+            # Don't simplify if the argument might be complex\n+            elif arg.is_complex and not arg.is_extended_real:\n+                return None\n \n         if arg is S.ComplexInfinity:\n             return S.NaN\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/trigonometric.py b/sympy/functions/elementary/trigonometric.py\nindex bfdabb3..4dbbc2e 100644\n--- a/sympy/functions/elementary/trigonometric.py\n+++ b/sympy/functions/elementary/trigonometric.py\n@@ -138,6 +138,8 @@ class sin(TrigonometricFunction):\n                 return S.Zero\n             elif arg is S.Infinity or arg is S.NegativeInfinity:\n                 return AccumBounds(-1, 1)\n+            elif arg.is_complex and (not arg.is_extended_real):\n+                return None\n         if arg is S.ComplexInfinity:\n             return S.NaN\n         if isinstance(arg, AccumBounds):\n", "normalized_occurrence": 1}
