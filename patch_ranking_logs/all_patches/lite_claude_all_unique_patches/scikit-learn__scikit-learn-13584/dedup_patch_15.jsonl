{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-13584", "model_patch": "diff --git a/sklearn/linear_model/logistic.py b/sklearn/linear_model/logistic.py\nindex b20ce7e..794535c 100644\n--- a/sklearn/linear_model/logistic.py\n+++ b/sklearn/linear_model/logistic.py\n@@ -814,6 +814,8 @@ def _logistic_regression_path(X, y, pos_class=None, Cs=10, fit_intercept=True,\n     \"\"\"\n     if isinstance(Cs, numbers.Integral):\n         Cs = np.logspace(-4, 4, Cs)\n+    else:\n+        Cs = np.asarray(Cs)\n \n     solver = _check_solver(solver, penalty, dual)\n \n", "occurrence": 3, "normalized_patch": "diff --git a/sklearn/linear_model/logistic.py b/sklearn/linear_model/logistic.py\nindex 03d0af9..31ee356 100644\n--- a/sklearn/linear_model/logistic.py\n+++ b/sklearn/linear_model/logistic.py\n@@ -175,6 +175,8 @@ def logistic_regression_path(X, y, pos_class=None, Cs=10, fit_intercept=True, ma\n def _logistic_regression_path(X, y, pos_class=None, Cs=10, fit_intercept=True, max_iter=100, tol=0.0001, verbose=0, solver='lbfgs', coef=None, class_weight=None, dual=False, penalty='l2', intercept_scaling=1.0, multi_class='warn', random_state=None, check_input=True, max_squared_sum=None, sample_weight=None, l1_ratio=None):\n     if isinstance(Cs, numbers.Integral):\n         Cs = np.logspace(-4, 4, Cs)\n+    else:\n+        Cs = np.asarray(Cs)\n     solver = _check_solver(solver, penalty, dual)\n     if check_input:\n         X = check_array(X, accept_sparse='csr', dtype=np.float64, accept_large_sparse=solver != 'liblinear')\n", "normalized_occurrence": 3}
