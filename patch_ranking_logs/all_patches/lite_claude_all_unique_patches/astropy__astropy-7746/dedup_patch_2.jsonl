{"model_name_or_path": "agentless_claude", "instance_id": "astropy__astropy-7746", "model_patch": "diff --git a/astropy/wcs/wcs.py b/astropy/wcs/wcs.py\nindex 369cdd2..27bf99c 100644\n--- a/astropy/wcs/wcs.py\n+++ b/astropy/wcs/wcs.py\n@@ -1212,6 +1212,10 @@ reduce these to 2 dimensions using the naxis kwarg.\n         \"\"\"\n \n         def _return_list_of_arrays(axes, origin):\n+            # Handle empty arrays\n+            if any(len(x) == 0 for x in axes):\n+                return [np.array([]) for _ in range(output.shape[1] if sky == 'output' else self.naxis)]\n+\n             try:\n                 axes = np.broadcast_arrays(*axes)\n             except ValueError:\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/wcs/wcs.py b/astropy/wcs/wcs.py\nindex 3d9c35a..02ce37b 100644\n--- a/astropy/wcs/wcs.py\n+++ b/astropy/wcs/wcs.py\n@@ -594,6 +594,8 @@ class WCS(WCSBase):\n             return out\n     def _array_converter(self, func, sky, *args, ra_dec_order=False):\n         def _return_list_of_arrays(axes, origin):\n+            if any((len(x) == 0 for x in axes)):\n+                return [np.array([]) for _ in range(output.shape[1] if sky == 'output' else self.naxis)]\n             try:\n                 axes = np.broadcast_arrays(*axes)\n             except ValueError:\n", "normalized_occurrence": 1}
