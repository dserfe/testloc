{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-13584", "model_patch": "diff --git a/sklearn/utils/_pprint.py b/sklearn/utils/_pprint.py\nindex 4da71d3..1261f42 100644\n--- a/sklearn/utils/_pprint.py\n+++ b/sklearn/utils/_pprint.py\n@@ -401,6 +401,9 @@ def _safe_repr(object, context, maxlevels, level, changed_only=False):\n         return format % \", \".join(components), readable, recursive\n \n     if issubclass(typ, BaseEstimator):\n+        import numpy as np\n+        if isinstance(object, np.ndarray):\n+            return repr(object), True, False\n         objid = id(object)\n         if maxlevels and level >= maxlevels:\n             return \"{...}\", False, objid in context\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/utils/_pprint.py b/sklearn/utils/_pprint.py\nindex 3acda5a..691ce81 100644\n--- a/sklearn/utils/_pprint.py\n+++ b/sklearn/utils/_pprint.py\n@@ -211,6 +211,9 @@ def _safe_repr(object, context, maxlevels, level, changed_only=False):\n         del context[objid]\n         return (format % ', '.join(components), readable, recursive)\n     if issubclass(typ, BaseEstimator):\n+        import numpy as np\n+        if isinstance(object, np.ndarray):\n+            return (repr(object), True, False)\n         objid = id(object)\n         if maxlevels and level >= maxlevels:\n             return ('{...}', False, objid in context)\n", "normalized_occurrence": 1}
