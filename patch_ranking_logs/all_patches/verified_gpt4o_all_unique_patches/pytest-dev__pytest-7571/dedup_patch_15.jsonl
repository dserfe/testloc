{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7571", "model_patch": "diff --git a/src/_pytest/logging.py b/src/_pytest/logging.py\nindex 16efd55..66e93d9 100644\n--- a/src/_pytest/logging.py\n+++ b/src/_pytest/logging.py\n@@ -346,6 +346,8 @@ class LogCaptureFixture:\n         self._item = item\n         # dict of log name -> log level\n         self._initial_logger_levels = {}  # type: Dict[Optional[str], int]\n+        # Ensure _finalize is called at test teardown\n+        item.addfinalizer(self._finalize)\n \n     def _finalize(self) -> None:\n         \"\"\"Finalizes the fixture.\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/logging.py b/src/_pytest/logging.py\nindex 862b163..887f806 100644\n--- a/src/_pytest/logging.py\n+++ b/src/_pytest/logging.py\n@@ -164,6 +164,7 @@ class LogCaptureFixture:\n     def __init__(self, item: nodes.Node) -> None:\n         self._item = item\n         self._initial_logger_levels = {}\n+        item.addfinalizer(self._finalize)\n     def _finalize(self) -> None:\n         for logger_name, level in self._initial_logger_levels.items():\n             logger = logging.getLogger(logger_name)\n", "normalized_occurrence": 4}
