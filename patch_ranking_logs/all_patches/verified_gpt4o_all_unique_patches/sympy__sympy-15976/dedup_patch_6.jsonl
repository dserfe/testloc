{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-15976", "model_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 85af872..7dc7cf3 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -744,9 +744,20 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n \n     def _print_Symbol(self, sym, style='plain'):\n         x = self.dom.createElement('mi')\n-\n-        if style == 'bold':\n-            x.setAttribute('mathvariant', 'bold')\n+        symbol_name = sym.name\n+\n+        if any(char.isdigit() for char in symbol_name):\n+            x = self.dom.createElement('msub')\n+            base = self.dom.createElement('mi')\n+            base.appendChild(self.dom.createTextNode(symbol_name.rstrip('0123456789')))\n+            subscript = self.dom.createElement('mn')\n+            subscript.appendChild(self.dom.createTextNode(symbol_name.lstrip('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')))\n+            x.appendChild(base)\n+            x.appendChild(subscript)\n+        else:\n+            if style == 'bold':\n+                x.setAttribute('mathvariant', 'bold')\n+            x.appendChild(self.dom.createTextNode(symbol_name))\n \n         def join(items):\n             if len(items) > 1:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 28d3e1a..601741a 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -517,8 +517,19 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n         return mrow\n     def _print_Symbol(self, sym, style='plain'):\n         x = self.dom.createElement('mi')\n-        if style == 'bold':\n-            x.setAttribute('mathvariant', 'bold')\n+        symbol_name = sym.name\n+        if any((char.isdigit() for char in symbol_name)):\n+            x = self.dom.createElement('msub')\n+            base = self.dom.createElement('mi')\n+            base.appendChild(self.dom.createTextNode(symbol_name.rstrip('0123456789')))\n+            subscript = self.dom.createElement('mn')\n+            subscript.appendChild(self.dom.createTextNode(symbol_name.lstrip('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')))\n+            x.appendChild(base)\n+            x.appendChild(subscript)\n+        else:\n+            if style == 'bold':\n+                x.setAttribute('mathvariant', 'bold')\n+            x.appendChild(self.dom.createTextNode(symbol_name))\n         def join(items):\n             if len(items) > 1:\n                 mrow = self.dom.createElement('mrow')\n", "normalized_occurrence": 1}
