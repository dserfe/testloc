{"model_name_or_path": "agentless", "instance_id": "django__django-13964", "model_patch": "diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex 9b658fb..3f5270c 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -633,15 +633,15 @@ class ForeignObject(RelatedField):\n \n     @cached_property\n     def reverse_related_fields(self):\n-        return [(rhs_field, lhs_field) for lhs_field, rhs_field in self.related_fields]\n+        return [(rhs_field, lhs_field) for lhs_field, rhs_field in self.related_fields if rhs_field is not None]\n \n     @cached_property\n     def local_related_fields(self):\n-        return tuple(lhs_field for lhs_field, rhs_field in self.related_fields)\n+        return tuple(lhs_field for lhs_field, rhs_field in self.related_fields if rhs_field is not None)\n \n     @cached_property\n     def foreign_related_fields(self):\n-        return tuple(rhs_field for lhs_field, rhs_field in self.related_fields if rhs_field)\n+        return tuple(rhs_field for lhs_field, rhs_field in self.related_fields if rhs_field is not None)\n \n     def get_local_related_value(self, instance):\n         return self.get_instance_value_for_fields(instance, self.local_related_fields)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex 2261016..cce2b99 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -271,13 +271,13 @@ class ForeignObject(RelatedField):\n         return self.resolve_related_fields()\n     @cached_property\n     def reverse_related_fields(self):\n-        return [(rhs_field, lhs_field) for lhs_field, rhs_field in self.related_fields]\n+        return [(rhs_field, lhs_field) for lhs_field, rhs_field in self.related_fields if rhs_field is not None]\n     @cached_property\n     def local_related_fields(self):\n-        return tuple((lhs_field for lhs_field, rhs_field in self.related_fields))\n+        return tuple((lhs_field for lhs_field, rhs_field in self.related_fields if rhs_field is not None))\n     @cached_property\n     def foreign_related_fields(self):\n-        return tuple((rhs_field for lhs_field, rhs_field in self.related_fields if rhs_field))\n+        return tuple((rhs_field for lhs_field, rhs_field in self.related_fields if rhs_field is not None))\n     def get_local_related_value(self, instance):\n         return self.get_instance_value_for_fields(instance, self.local_related_fields)\n     def get_foreign_related_value(self, instance):\n", "normalized_occurrence": 1}
