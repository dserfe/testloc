{"model_name_or_path": "agentless", "instance_id": "django__django-16145", "model_patch": "diff --git a/django/core/management/commands/runserver.py b/django/core/management/commands/runserver.py\nindex c4f663b..6f9aa69 100644\n--- a/django/core/management/commands/runserver.py\n+++ b/django/core/management/commands/runserver.py\n@@ -96,6 +96,8 @@ class Command(BaseCommand):\n                     \"or address:port pair.\" % options[\"addrport\"]\n                 )\n             self.addr, _ipv4, _ipv6, _fqdn, self.port = m.groups()\n+            if self.addr == '0':\n+                self.addr = '0.0.0.0'\n             if not self.port.isdigit():\n                 raise CommandError(\"%r is not a valid port number.\" % self.port)\n             if self.addr:\n@@ -180,4 +182,4 @@ class Command(BaseCommand):\n         except KeyboardInterrupt:\n             if shutdown_message:\n                 self.stdout.write(shutdown_message)\n-            sys.exit(0)\n+            sys.exit(0)\n", "occurrence": 3, "normalized_patch": "diff --git a/django/core/management/commands/runserver.py b/django/core/management/commands/runserver.py\nindex 0e6059e..00232b3 100644\n--- a/django/core/management/commands/runserver.py\n+++ b/django/core/management/commands/runserver.py\n@@ -47,6 +47,8 @@ class Command(BaseCommand):\n             if m is None:\n                 raise CommandError('\"%s\" is not a valid port number or address:port pair.' % options['addrport'])\n             self.addr, _ipv4, _ipv6, _fqdn, self.port = m.groups()\n+            if self.addr == '0':\n+                self.addr = '0.0.0.0'\n             if not self.port.isdigit():\n                 raise CommandError('%r is not a valid port number.' % self.port)\n             if self.addr:\n", "normalized_occurrence": 5}
