{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-10449", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex d42883b..54f88d9 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1593,9 +1593,11 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type:\n                 parameters = list(overload.parameters.values())\n                 overload = overload.replace(parameters=parameters[1:],\n                                             return_annotation=Parameter.empty)\n-                sig = stringify_signature(overload, **kwargs)\n+                sig = stringify_signature(overload, show_return_annotation=False, **kwargs)\n                 sigs.append(sig)\n         else:\n+            # Ensure no return annotation is shown for class signatures\n+            kwargs['show_return_annotation'] = False\n             sigs.append(sig)\n \n         return \"\\n\".join(sigs)\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 2c8c52a..a3e5cc0 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -895,9 +895,10 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):\n                 overload = evaluate_signature(overload, __globals__, self.config.autodoc_type_aliases)\n                 parameters = list(overload.parameters.values())\n                 overload = overload.replace(parameters=parameters[1:], return_annotation=Parameter.empty)\n-                sig = stringify_signature(overload, **kwargs)\n+                sig = stringify_signature(overload, show_return_annotation=False, **kwargs)\n                 sigs.append(sig)\n         else:\n+            kwargs['show_return_annotation'] = False\n             sigs.append(sig)\n         return '\\n'.join(sigs)\n     def get_overloaded_signatures(self) -> List[Signature]:\n", "normalized_occurrence": 1}
