{"model_name_or_path": "agentless", "instance_id": "django__django-11265", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 1309ca5..e400d5b 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1683,7 +1683,7 @@ class Query(BaseExpression):\n             lookup_class = select_field.get_lookup('isnull')\n             lookup = lookup_class(select_field.get_col(alias), False)\n             query.where.add(lookup, AND)\n-        if alias in can_reuse:\n+        if alias in can_reuse or filter_lhs in self.annotation_select:\n             pk = select_field.model._meta.pk\n             # Need to add a restriction so that outer query's filters are in effect for\n             # the subquery, too.\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 60a9579..c2f5552 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -899,7 +899,7 @@ class Query(BaseExpression):\n             lookup_class = select_field.get_lookup('isnull')\n             lookup = lookup_class(select_field.get_col(alias), False)\n             query.where.add(lookup, AND)\n-        if alias in can_reuse:\n+        if alias in can_reuse or filter_lhs in self.annotation_select:\n             pk = select_field.model._meta.pk\n             query.bump_prefix(self)\n             lookup_class = select_field.get_lookup('exact')\n", "normalized_occurrence": 1}
