{"model_name_or_path": "agentless_claude", "instance_id": "django__django-10554", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex ab425fb..191133d 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -343,6 +343,9 @@ class SQLCompiler:\n         for expr, is_ref in order_by:\n             resolved = expr.resolve_expression(self.query, allow_joins=True, reuse=None)\n             if self.query.combinator:\n+                if not expr.get_source_expressions():\n+                    # Skip empty ordering expressions\n+                    continue\n                 src = resolved.get_source_expressions()[0]\n                 # Relabel order by columns to raw numbers if this is a combined\n                 # query; necessary since the columns can't be referenced by the\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 0a7444d..ad641bd 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -182,6 +182,8 @@ class SQLCompiler:\n         for expr, is_ref in order_by:\n             resolved = expr.resolve_expression(self.query, allow_joins=True, reuse=None)\n             if self.query.combinator:\n+                if not expr.get_source_expressions():\n+                    continue\n                 src = resolved.get_source_expressions()[0]\n                 for idx, (sel_expr, _, col_alias) in enumerate(self.select):\n                     if is_ref and col_alias == src.refs:\n", "normalized_occurrence": 1}
