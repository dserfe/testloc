{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12856", "model_patch": "diff --git a/django/db/models/constraints.py b/django/db/models/constraints.py\nindex 714e891..68bc719 100644\n--- a/django/db/models/constraints.py\n+++ b/django/db/models/constraints.py\n@@ -150,4 +150,21 @@ class UniqueConstraint(BaseConstraint):\n             kwargs['condition'] = self.condition\n         if self.deferrable:\n             kwargs['deferrable'] = self.deferrable\n-        return path, args, kwargs\n+        return path, args, kwargs\n+\n+    def validate(self, model):\n+        \"\"\"Validate the constraint fields exist on the model.\"\"\"\n+        errors = []\n+        for field_name in self.fields:\n+            try:\n+                model._meta.get_field(field_name)\n+            except Exception:\n+                errors.append(\n+                    Error(\n+                        \"The field '%s' referenced by unique constraint %s does not exist.\"\n+                        % (field_name, self.name),\n+                        obj=model,\n+                        id='models.E012',\n+                    )\n+                )\n+        return errors\n", "occurrence": 1, "normalized_patch": "--- a/django/db/models/constraints.py\n+++ b/django/db/models/constraints.py\n-        return (path, args, kwargs)\n+        return (path, args, kwargs)\n+    def validate(self, model):\n+        errors = []\n+        for field_name in self.fields:\n+            try:\n+                model._meta.get_field(field_name)\n+            except Exception:\n+                errors.append(Error(\"The field '%s' referenced by unique constraint %s does not exist.\" % (field_name, self.name), obj=model, id='models.E012'))\n+        return errors", "normalized_occurrence": 1}
