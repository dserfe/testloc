{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16816", "model_patch": "diff --git a/django/contrib/admin/checks.py b/django/contrib/admin/checks.py\nindex e2f5674..bfad4dd 100644\n--- a/django/contrib/admin/checks.py\n+++ b/django/contrib/admin/checks.py\n@@ -895,9 +895,20 @@ class ModelAdminChecks(BaseModelAdminChecks):\n             return []\n         elif hasattr(obj, item):\n             return []\n+            \n+        # First check if this is a valid field or field path\n+        field = None\n         try:\n-            field = obj.model._meta.get_field(item)\n-        except FieldDoesNotExist:\n+            if \".\" in item:\n+                # This is a related field path\n+                field_path = item.split(\".\")\n+                field = obj.model._meta.get_field(field_path[0])\n+                # Try traversing the full path to validate it exists\n+                for part in field_path[1:]:\n+                    field = field.related_model._meta.get_field(part)\n+            else:\n+                field = obj.model._meta.get_field(item)\n+        except (FieldDoesNotExist, AttributeError):\n             try:\n                 field = getattr(obj.model, item)\n             except AttributeError:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/checks.py b/django/contrib/admin/checks.py\nindex 4734fd9..286ac58 100644\n--- a/django/contrib/admin/checks.py\n+++ b/django/contrib/admin/checks.py\n@@ -337,9 +337,16 @@ class ModelAdminChecks(BaseModelAdminChecks):\n             return []\n         elif hasattr(obj, item):\n             return []\n+        field = None\n         try:\n-            field = obj.model._meta.get_field(item)\n-        except FieldDoesNotExist:\n+            if '.' in item:\n+                field_path = item.split('.')\n+                field = obj.model._meta.get_field(field_path[0])\n+                for part in field_path[1:]:\n+                    field = field.related_model._meta.get_field(part)\n+            else:\n+                field = obj.model._meta.get_field(item)\n+        except (FieldDoesNotExist, AttributeError):\n             try:\n                 field = getattr(obj.model, item)\n             except AttributeError:\n", "normalized_occurrence": 1}
