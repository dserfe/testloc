{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-11445", "model_patch": "diff --git a/sphinx/util/rst.py b/sphinx/util/rst.py\nindex 83e696f..249f10a 100644\n--- a/sphinx/util/rst.py\n+++ b/sphinx/util/rst.py\n@@ -92,6 +92,8 @@ def prepend_prolog(content: StringList, prolog: str) -> None:\n \n         # insert prolog (after docinfo if exists)\n         for lineno, line in enumerate(prolog.splitlines()):\n+            if line.startswith(':mod:') or line.startswith(':func:') or line.startswith(':class:') or line.startswith(':meth:') or line.startswith(':attr:'):\n+                continue\n             content.insert(pos + lineno, line, '<rst_prolog>', lineno)\n \n         content.insert(pos + lineno + 1, '', '<generated>', 0)\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/util/rst.py b/sphinx/util/rst.py\nindex 911aea2..02aca79 100644\n--- a/sphinx/util/rst.py\n+++ b/sphinx/util/rst.py\n@@ -61,6 +61,8 @@ def prepend_prolog(content: StringList, prolog: str) -> None:\n             content.insert(pos, '', '<generated>', 0)\n             pos += 1\n         for lineno, line in enumerate(prolog.splitlines()):\n+            if line.startswith(':mod:') or line.startswith(':func:') or line.startswith(':class:') or line.startswith(':meth:') or line.startswith(':attr:'):\n+                continue\n             content.insert(pos + lineno, line, '<rst_prolog>', lineno)\n         content.insert(pos + lineno + 1, '', '<generated>', 0)\n def append_epilog(content: StringList, epilog: str) -> None:\n", "normalized_occurrence": 1}
