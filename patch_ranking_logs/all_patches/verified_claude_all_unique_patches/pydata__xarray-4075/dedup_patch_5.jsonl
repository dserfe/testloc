{"model_name_or_path": "agentless_claude", "instance_id": "pydata__xarray-4075", "model_patch": "diff --git a/xarray/core/weighted.py b/xarray/core/weighted.py\nindex 8119fa7..2dbeee1 100644\n--- a/xarray/core/weighted.py\n+++ b/xarray/core/weighted.py\n@@ -125,6 +125,10 @@ class Weighted:\n         if dim is None:\n             dim = ...\n \n+        # Convert boolean weights to float to ensure proper numerical operations\n+        if weights.dtype == bool:\n+            weights = weights * 1.0\n+\n         # need to mask invalid values in da, as `dot` does not implement skipna\n         if skipna or (skipna is None and da.dtype.kind in \"cfO\"):\n             da = da.fillna(0.0)\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/weighted.py b/xarray/core/weighted.py\nindex 7df2f5a..1fcb867 100644\n--- a/xarray/core/weighted.py\n+++ b/xarray/core/weighted.py\n@@ -25,6 +25,8 @@ class Weighted:\n     def _reduce(da: 'DataArray', weights: 'DataArray', dim: Optional[Union[Hashable, Iterable[Hashable]]]=None, skipna: Optional[bool]=None) -> 'DataArray':\n         if dim is None:\n             dim = ...\n+        if weights.dtype == bool:\n+            weights = weights * 1.0\n         if skipna or (skipna is None and da.dtype.kind in 'cfO'):\n             da = da.fillna(0.0)\n         return dot(da, weights, dims=dim)\n", "normalized_occurrence": 1}
