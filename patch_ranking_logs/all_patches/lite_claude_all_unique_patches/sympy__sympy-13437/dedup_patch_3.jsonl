{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13437", "model_patch": "diff --git a/sympy/functions/combinatorial/numbers.py b/sympy/functions/combinatorial/numbers.py\nindex 70a655c..4339632 100644\n--- a/sympy/functions/combinatorial/numbers.py\n+++ b/sympy/functions/combinatorial/numbers.py\n@@ -454,6 +454,12 @@ class bell(Function):\n         k = Dummy('k', integer=True, nonnegative=True)\n         return 1 / E * Sum(k**n / factorial(k), (k, 0, S.Infinity))\n \n+    def _eval_limit(self, x, xlim, dir):\n+        from sympy import oo\n+        if x.has(self.args[0]) and xlim is oo:\n+            return oo\n+        return self\n+\n #----------------------------------------------------------------------------#\n #                                                                            #\n #                           Harmonic numbers                                 #\n", "occurrence": 1, "normalized_patch": "--- a/sympy/functions/combinatorial/numbers.py\n+++ b/sympy/functions/combinatorial/numbers.py\n+    def _eval_limit(self, x, xlim, dir):\n+        from sympy import oo\n+        if x.has(self.args[0]) and xlim is oo:\n+            return oo\n+        return self", "normalized_occurrence": 1}
