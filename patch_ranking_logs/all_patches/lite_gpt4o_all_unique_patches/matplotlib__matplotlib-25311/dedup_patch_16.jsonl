{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25311", "model_patch": "diff --git a/lib/matplotlib/legend.py b/lib/matplotlib/legend.py\nindex a038473..0e080ce 100644\n--- a/lib/matplotlib/legend.py\n+++ b/lib/matplotlib/legend.py\n@@ -1194,6 +1194,9 @@ class Legend(Artist):\n             instance. Otherwise this returns *None*.\n         \"\"\"\n         if state:\n+            self.figure = self.axes.figure\n+            if hasattr(self, '_draggable'):\n+                del self._draggable\n             if self._draggable is None:\n                 self._draggable = DraggableLegend(self,\n                                                   use_blit,\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/legend.py b/lib/matplotlib/legend.py\nindex 8070532..ff022ef 100644\n--- a/lib/matplotlib/legend.py\n+++ b/lib/matplotlib/legend.py\n@@ -422,6 +422,9 @@ class Legend(Artist):\n         return self.legendPatch.contains(event)\n     def set_draggable(self, state, use_blit=False, update='loc'):\n         if state:\n+            self.figure = self.axes.figure\n+            if hasattr(self, '_draggable'):\n+                del self._draggable\n             if self._draggable is None:\n                 self._draggable = DraggableLegend(self, use_blit, update=update)\n         else:\n", "normalized_occurrence": 1}
