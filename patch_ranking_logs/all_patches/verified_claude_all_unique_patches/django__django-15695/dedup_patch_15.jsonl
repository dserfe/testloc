{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15695", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex b086232..9a3f8ea 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -966,10 +966,17 @@ class RenameIndex(IndexOperation):\n         schema_editor.rename_index(model, old_index, new_index)\n \n     def database_backwards(self, app_label, schema_editor, from_state, to_state):\n+        to_model_state = to_state.models[app_label, self.model_name_lower]\n+        from_model_state = from_state.models[app_label, self.model_name_lower]\n+\n         if self.old_fields:\n-            # Backward operation with unnamed index is a no-op.\n+            # Handle unnamed index case\n+            old_index = from_model_state.get_index_by_fields(self.old_fields)\n+            new_index = to_model_state.get_index_by_fields(self.old_fields)\n+            schema_editor.rename_index(from_model_state.get_model(), old_index, new_index)\n             return\n \n+        # Named index case\n         self.new_name_lower, self.old_name_lower = (\n             self.old_name_lower,\n             self.new_name_lower,\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 87ad28e..9952a36 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -435,7 +435,12 @@ class RenameIndex(IndexOperation):\n         new_index = to_model_state.get_index_by_name(self.new_name)\n         schema_editor.rename_index(model, old_index, new_index)\n     def database_backwards(self, app_label, schema_editor, from_state, to_state):\n+        to_model_state = to_state.models[app_label, self.model_name_lower]\n+        from_model_state = from_state.models[app_label, self.model_name_lower]\n         if self.old_fields:\n+            old_index = from_model_state.get_index_by_fields(self.old_fields)\n+            new_index = to_model_state.get_index_by_fields(self.old_fields)\n+            schema_editor.rename_index(from_model_state.get_model(), old_index, new_index)\n             return\n         self.new_name_lower, self.old_name_lower = (self.old_name_lower, self.new_name_lower)\n         self.new_name, self.old_name = (self.old_name, self.new_name)\n", "normalized_occurrence": 1}
