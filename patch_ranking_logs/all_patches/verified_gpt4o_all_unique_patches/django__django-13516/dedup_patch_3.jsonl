{"model_name_or_path": "agentless", "instance_id": "django__django-13516", "model_patch": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex c1c76e0..2c8f370 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -143,12 +143,16 @@ class OutputWrapper(TextIOBase):\n     def isatty(self):\n         return hasattr(self._out, 'isatty') and self._out.isatty()\n \n+    def flush(self):\n+        self._out.flush()\n+\n     def write(self, msg='', style_func=None, ending=None):\n         ending = self.ending if ending is None else ending\n         if ending and not msg.endswith(ending):\n             msg += ending\n         style_func = style_func or self.style_func\n         self._out.write(style_func(msg))\n+        self.flush()\n \n \n class BaseCommand:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex 55da94e..4b9cda1 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -73,12 +73,15 @@ class OutputWrapper(TextIOBase):\n         return getattr(self._out, name)\n     def isatty(self):\n         return hasattr(self._out, 'isatty') and self._out.isatty()\n+    def flush(self):\n+        self._out.flush()\n     def write(self, msg='', style_func=None, ending=None):\n         ending = self.ending if ending is None else ending\n         if ending and (not msg.endswith(ending)):\n             msg += ending\n         style_func = style_func or self.style_func\n         self._out.write(style_func(msg))\n+        self.flush()\n class BaseCommand:\n     help = ''\n     _called_from_command_line = False\n", "normalized_occurrence": 1}
