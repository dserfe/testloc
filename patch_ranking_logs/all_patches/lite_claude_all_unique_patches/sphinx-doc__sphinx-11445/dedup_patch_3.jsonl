{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-11445", "model_patch": "diff --git a/sphinx/environment/collectors/title.py b/sphinx/environment/collectors/title.py\nindex ec97f42..26e6c45 100644\n--- a/sphinx/environment/collectors/title.py\n+++ b/sphinx/environment/collectors/title.py\n@@ -38,10 +38,16 @@ class TitleCollector(EnvironmentCollector):\n             longtitlenode += nodes.Text(doctree['title'])\n         # look for first section title and use that as the title\n         for node in doctree.findall(nodes.section):\n+            title = node[0]\n+            # Handle domain directives in titles by resolving them first\n             visitor = SphinxContentsFilter(doctree)\n-            node[0].walkabout(visitor)\n-            titlenode += visitor.get_entry_text()\n-            break\n+            title.walkabout(visitor)\n+            titletext = visitor.get_entry_text()\n+            if titletext:\n+                titlenode += titletext\n+                break\n+            # Fallback to raw title if directive resolution failed\n+            titlenode += title.astext()\n         else:\n             # document has no title\n             titlenode += nodes.Text(doctree.get('title', '<no title>'))\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/environment/collectors/title.py b/sphinx/environment/collectors/title.py\nindex 90c3ce6..13e1fff 100644\n--- a/sphinx/environment/collectors/title.py\n+++ b/sphinx/environment/collectors/title.py\n@@ -20,10 +20,14 @@ class TitleCollector(EnvironmentCollector):\n             longtitlenode = nodes.title()\n             longtitlenode += nodes.Text(doctree['title'])\n         for node in doctree.findall(nodes.section):\n+            title = node[0]\n             visitor = SphinxContentsFilter(doctree)\n-            node[0].walkabout(visitor)\n-            titlenode += visitor.get_entry_text()\n-            break\n+            title.walkabout(visitor)\n+            titletext = visitor.get_entry_text()\n+            if titletext:\n+                titlenode += titletext\n+                break\n+            titlenode += title.astext()\n         else:\n             titlenode += nodes.Text(doctree.get('title', '<no title>'))\n         app.env.titles[app.env.docname] = titlenode\n", "normalized_occurrence": 1}
