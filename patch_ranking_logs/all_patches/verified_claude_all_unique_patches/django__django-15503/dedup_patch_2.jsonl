{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15503", "model_patch": "diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py\nindex 0a76a39..1dedbf4 100644\n--- a/django/db/models/fields/json.py\n+++ b/django/db/models/fields/json.py\n@@ -193,6 +193,10 @@ class HasKeyLookup(PostgresOperatorLookup):\n                 *_, rhs_key_transforms = key.preprocess_lhs(compiler, connection)\n             else:\n                 rhs_key_transforms = [key]\n+            if isinstance(key, str) and key.isdigit():\n+                # Handle numeric string keys by ensuring they're quoted\n+                quoted_key = '\"%s\"' % key\n+                rhs_key_transforms[-1] = quoted_key\n             rhs_params.append(\n                 \"%s%s\"\n                 % (\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py\nindex 272d7b8..b0a5bb1 100644\n--- a/django/db/models/fields/json.py\n+++ b/django/db/models/fields/json.py\n@@ -124,6 +124,9 @@ class HasKeyLookup(PostgresOperatorLookup):\n                 *_, rhs_key_transforms = key.preprocess_lhs(compiler, connection)\n             else:\n                 rhs_key_transforms = [key]\n+            if isinstance(key, str) and key.isdigit():\n+                quoted_key = '\"%s\"' % key\n+                rhs_key_transforms[-1] = quoted_key\n             rhs_params.append('%s%s' % (lhs_json_path, compile_json_path(rhs_key_transforms, include_root=False)))\n         if self.logical_operator:\n             sql = '(%s)' % self.logical_operator.join([sql] * len(rhs_params))\n", "normalized_occurrence": 1}
