{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8435", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 6f90bd7..d38fe03 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -38,12 +38,10 @@ def record_typehints(app: Sphinx, objtype: str, name: str, obj: Any,\n \n \n def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element) -> None:\n-    if domain != 'py':\n-        return\n-    if app.config.autodoc_typehints != 'description':\n-        return\n-    if objtype == 'class' and app.config.autoclass_content not in ('init', 'both'):\n-        return\n+    if domain == 'py':\n+        if app.config.autodoc_typehints == 'description':\n+            if objtype in ('class', 'attribute', 'module') or (objtype == 'class' and app.config.autoclass_content in ('init', 'both')):\n+                apply_type_aliases(app, contentnode)\n \n     try:\n         signature = cast(addnodes.desc_signature, contentnode.parent[0])\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 377d0c5..a62b840 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -20,12 +20,10 @@ def record_typehints(app: Sphinx, objtype: str, name: str, obj: Any, options: Di\n     except (TypeError, ValueError):\n         pass\n def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element) -> None:\n-    if domain != 'py':\n-        return\n-    if app.config.autodoc_typehints != 'description':\n-        return\n-    if objtype == 'class' and app.config.autoclass_content not in ('init', 'both'):\n-        return\n+    if domain == 'py':\n+        if app.config.autodoc_typehints == 'description':\n+            if objtype in ('class', 'attribute', 'module') or (objtype == 'class' and app.config.autoclass_content in ('init', 'both')):\n+                apply_type_aliases(app, contentnode)\n     try:\n         signature = cast(addnodes.desc_signature, contentnode.parent[0])\n         if signature['module']:\n", "normalized_occurrence": 1}
