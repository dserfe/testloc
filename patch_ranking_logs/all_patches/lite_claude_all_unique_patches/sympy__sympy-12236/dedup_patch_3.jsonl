{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-12236", "model_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 03af2f5..193f42c 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -125,9 +125,18 @@ def apart(f, x=None, full=False, **options):\n         raise NotImplementedError(\n             \"multivariate partial fraction decomposition\")\n \n+    # First try direct cancellation of common factors\n+    P_orig, Q_orig = P, Q\n     common, P, Q = P.cancel(Q)\n-\n-    poly, P = P.div(Q, auto=True)\n+    \n+    # Check if cancellation preserved structure correctly\n+    if P.degree() >= Q.degree():\n+        poly, P = P.div(Q, auto=True)\n+    else:\n+        # Revert to original and try alternate path\n+        P, Q = P_orig, Q_orig\n+        poly = P.zero\n+        \n     P, Q = P.rat_clear_denoms(Q)\n \n     if Q.degree() <= 1:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 21c4bd7..ec39759 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -59,8 +59,13 @@ def apart(f, x=None, full=False, **options):\n         if fc != f:\n             return apart(fc, x=x, full=full, **_options)\n         raise NotImplementedError('multivariate partial fraction decomposition')\n+    P_orig, Q_orig = (P, Q)\n     common, P, Q = P.cancel(Q)\n-    poly, P = P.div(Q, auto=True)\n+    if P.degree() >= Q.degree():\n+        poly, P = P.div(Q, auto=True)\n+    else:\n+        P, Q = (P_orig, Q_orig)\n+        poly = P.zero\n     P, Q = P.rat_clear_denoms(Q)\n     if Q.degree() <= 1:\n         partial = P / Q\n", "normalized_occurrence": 1}
