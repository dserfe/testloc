{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12125", "model_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex 824ab10..7283c98 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -90,14 +90,18 @@ class DeconstructableSerializer(BaseSerializer):\n \n     @staticmethod\n     def _serialize_path(path):\n-        module, name = path.rsplit(\".\", 1)\n-        if module == \"django.db.models\":\n+        # Handle django.db.models specially\n+        if path.startswith(\"django.db.models.\"):\n             imports = {\"from django.db import models\"}\n-            name = \"models.%s\" % name\n-        else:\n-            imports = {\"import %s\" % module}\n-            name = path\n-        return name, imports\n+            name = \"models.\" + path[len(\"django.db.models.\"):]\n+            return name, imports\n+            \n+        # For other paths, import the module containing the class\n+        module_path = path.split('.')\n+        module = '.'.join(module_path[:-1])\n+        imports = {\"import %s\" % module}\n+        # Keep the full path for proper nested class reference\n+        return path, imports\n \n     def serialize(self):\n         return self.serialize_deconstructed(*self.value.deconstruct())\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex d663baf..d01e8fd 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -68,14 +68,14 @@ class DeconstructableSerializer(BaseSerializer):\n         return ('%s(%s)' % (name, ', '.join(strings)), imports)\n     @staticmethod\n     def _serialize_path(path):\n-        module, name = path.rsplit('.', 1)\n-        if module == 'django.db.models':\n+        if path.startswith('django.db.models.'):\n             imports = {'from django.db import models'}\n-            name = 'models.%s' % name\n-        else:\n-            imports = {'import %s' % module}\n-            name = path\n-        return (name, imports)\n+            name = 'models.' + path[len('django.db.models.'):]\n+            return (name, imports)\n+        module_path = path.split('.')\n+        module = '.'.join(module_path[:-1])\n+        imports = {'import %s' % module}\n+        return (path, imports)\n     def serialize(self):\n         return self.serialize_deconstructed(*self.value.deconstruct())\n class DictionarySerializer(BaseSerializer):\n", "normalized_occurrence": 1}
