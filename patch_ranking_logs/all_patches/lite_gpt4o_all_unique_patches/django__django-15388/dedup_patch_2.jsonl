{"model_name_or_path": "agentless", "instance_id": "django__django-15388", "model_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex dcf3cdd..26d5d4b 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -278,12 +278,15 @@ class BaseReloader:\n         try:\n             path = path.absolute()\n         except FileNotFoundError:\n-            logger.debug(\n-                'Unable to watch directory %s as it cannot be resolved.',\n-                path,\n-                exc_info=True,\n-            )\n-            return\n+            try:\n+                path = path.resolve()\n+            except FileNotFoundError:\n+                logger.debug(\n+                    'Unable to watch directory %s as it cannot be resolved.',\n+                    path,\n+                    exc_info=True,\n+                )\n+                return\n         logger.debug('Watching dir %s with glob %s.', path, glob)\n         self.directory_globs[path].add(glob)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex 4cc598a..446878b 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -175,8 +175,11 @@ class BaseReloader:\n         try:\n             path = path.absolute()\n         except FileNotFoundError:\n-            logger.debug('Unable to watch directory %s as it cannot be resolved.', path, exc_info=True)\n-            return\n+            try:\n+                path = path.resolve()\n+            except FileNotFoundError:\n+                logger.debug('Unable to watch directory %s as it cannot be resolved.', path, exc_info=True)\n+                return\n         logger.debug('Watching dir %s with glob %s.', path, glob)\n         self.directory_globs[path].add(glob)\n     def watched_files(self, include_globs=True):\n", "normalized_occurrence": 1}
