{"model_name_or_path": "agentless", "instance_id": "django__django-13964", "model_patch": "diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex 9b658fb..998bffa 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -647,6 +647,9 @@ class ForeignObject(RelatedField):\n         return self.get_instance_value_for_fields(instance, self.local_related_fields)\n \n     def get_foreign_related_value(self, instance):\n+        # Ensure instance is saved to fetch its primary key\n+        if instance.pk is None:\n+            instance.save()\n         return self.get_instance_value_for_fields(instance, self.foreign_related_fields)\n \n     @staticmethod\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex 2261016..7ab43b4 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -281,6 +281,8 @@ class ForeignObject(RelatedField):\n     def get_local_related_value(self, instance):\n         return self.get_instance_value_for_fields(instance, self.local_related_fields)\n     def get_foreign_related_value(self, instance):\n+        if instance.pk is None:\n+            instance.save()\n         return self.get_instance_value_for_fields(instance, self.foreign_related_fields)\n     @staticmethod\n     def get_instance_value_for_fields(instance, fields):\n", "normalized_occurrence": 1}
