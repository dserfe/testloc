{"model_name_or_path": "agentless", "instance_id": "django__django-12273", "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 07c5013..8e85e1d 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -743,6 +743,11 @@ class Model(metaclass=ModelBase):\n             if loaded_fields:\n                 update_fields = frozenset(loaded_fields)\n \n+        # If the primary key is None, force an insert operation.\n+        if self.pk is None:\n+            force_insert = True\n+            force_update = False\n+\n         self.save_base(using=using, force_insert=force_insert,\n                        force_update=force_update, update_fields=update_fields)\n     save.alters_data = True\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 9dcf0cd..05927bf 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -403,6 +403,9 @@ class Model(metaclass=ModelBase):\n             loaded_fields = field_names.difference(deferred_fields)\n             if loaded_fields:\n                 update_fields = frozenset(loaded_fields)\n+        if self.pk is None:\n+            force_insert = True\n+            force_update = False\n         self.save_base(using=using, force_insert=force_insert, force_update=force_update, update_fields=update_fields)\n     save.alters_data = True\n     def save_base(self, raw=False, force_insert=False, force_update=False, using=None, update_fields=None):\n", "normalized_occurrence": 1}
