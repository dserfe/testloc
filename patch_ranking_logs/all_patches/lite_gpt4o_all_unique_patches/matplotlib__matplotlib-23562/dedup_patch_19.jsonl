{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-23562", "model_patch": "diff --git a/lib/mpl_toolkits/mplot3d/art3d.py b/lib/mpl_toolkits/mplot3d/art3d.py\nindex fa869c7..b2a3e0a 100644\n--- a/lib/mpl_toolkits/mplot3d/art3d.py\n+++ b/lib/mpl_toolkits/mplot3d/art3d.py\n@@ -764,6 +764,8 @@ class Poly3DCollection(PolyCollection):\n         self.set_zsort('average')\n         self._facecolor3d = PolyCollection.get_facecolor(self)\n         self._edgecolor3d = PolyCollection.get_edgecolor(self)\n+        self._facecolors2d = self._facecolor3d\n+        self._edgecolors2d = self._edgecolor3d\n         self._alpha3d = PolyCollection.get_alpha(self)\n         self.stale = True\n \n@@ -866,11 +868,11 @@ class Poly3DCollection(PolyCollection):\n             pass\n         self.stale = True\n \n-    def get_facecolor(self):\n-        return self._facecolors2d\n+    def get_facecolors(self):\n+        return self._facecolor3d\n \n-    def get_edgecolor(self):\n-        return self._edgecolors2d\n+    def get_edgecolors(self):\n+        return self._edgecolor3d\n \n \n def poly_collection_2d_to_3d(col, zs=0, zdir='z'):\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/mpl_toolkits/mplot3d/art3d.py b/lib/mpl_toolkits/mplot3d/art3d.py\nindex e39ff0d..db50312 100644\n--- a/lib/mpl_toolkits/mplot3d/art3d.py\n+++ b/lib/mpl_toolkits/mplot3d/art3d.py\n@@ -338,6 +338,8 @@ class Poly3DCollection(PolyCollection):\n         self.set_zsort('average')\n         self._facecolor3d = PolyCollection.get_facecolor(self)\n         self._edgecolor3d = PolyCollection.get_edgecolor(self)\n+        self._facecolors2d = self._facecolor3d\n+        self._edgecolors2d = self._edgecolor3d\n         self._alpha3d = PolyCollection.get_alpha(self)\n         self.stale = True\n     def set_sort_zpos(self, val):\n@@ -401,10 +403,10 @@ class Poly3DCollection(PolyCollection):\n         except (AttributeError, TypeError, IndexError):\n             pass\n         self.stale = True\n-    def get_facecolor(self):\n-        return self._facecolors2d\n-    def get_edgecolor(self):\n-        return self._edgecolors2d\n+    def get_facecolors(self):\n+        return self._facecolor3d\n+    def get_edgecolors(self):\n+        return self._edgecolor3d\n def poly_collection_2d_to_3d(col, zs=0, zdir='z'):\n     segments_3d, codes = _paths_to_3d_segments_with_codes(col.get_paths(), zs, zdir)\n     col.__class__ = Poly3DCollection\n", "normalized_occurrence": 1}
