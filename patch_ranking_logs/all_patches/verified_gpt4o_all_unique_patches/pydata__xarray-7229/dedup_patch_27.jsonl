{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-7229", "model_patch": "diff --git a/xarray/core/merge.py b/xarray/core/merge.py\nindex 952c546..a66f917 100644\n--- a/xarray/core/merge.py\n+++ b/xarray/core/merge.py\n@@ -290,7 +290,13 @@ def merge_collected(\n                                 \"conflicting attribute values on combined \"\n                                 f\"variable {name!r}:\\nfirst value: {variable.attrs!r}\\nsecond value: {other_variable.attrs!r}\"\n                             )\n-                merged_vars[name] = variable\n+                if name in indexes:\n+                    # Preserve coordinate attributes\n+                    coord_attrs = variable.attrs\n+                    merged_vars[name] = variable.copy(deep=False)\n+                    merged_vars[name].attrs = coord_attrs\n+                else:\n+                    merged_vars[name] = variable\n                 merged_vars[name].attrs = merge_attrs(\n                     [var.attrs for var, _ in indexed_elements],\n                     combine_attrs=combine_attrs,\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/merge.py b/xarray/core/merge.py\nindex ca74f84..e9461e4 100644\n--- a/xarray/core/merge.py\n+++ b/xarray/core/merge.py\n@@ -181,7 +181,12 @@ def merge_collected(grouped: dict[Hashable, list[MergeElement]], prioritized: Ma\n                     for other_variable, _ in indexed_elements[1:]:\n                         if not dict_equiv(variable.attrs, other_variable.attrs):\n                             raise MergeError(f'conflicting attribute values on combined variable {name!r}:\\nfirst value: {variable.attrs!r}\\nsecond value: {other_variable.attrs!r}')\n-                merged_vars[name] = variable\n+                if name in indexes:\n+                    coord_attrs = variable.attrs\n+                    merged_vars[name] = variable.copy(deep=False)\n+                    merged_vars[name].attrs = coord_attrs\n+                else:\n+                    merged_vars[name] = variable\n                 merged_vars[name].attrs = merge_attrs([var.attrs for var, _ in indexed_elements], combine_attrs=combine_attrs)\n                 merged_indexes[name] = index\n             else:\n", "normalized_occurrence": 1}
