{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-7910", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 87c3fb8..d5b7fce 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1310,6 +1310,8 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type:\n             if inspect.is_builtin_class_method(obj, attr):\n                 return None\n             attr = self.get_attr(obj, attr, None)\n+            # Unwrap the decorated method to get the original function\n+            attr = inspect.unwrap(attr)\n             if not (inspect.ismethod(attr) or inspect.isfunction(attr)):\n                 return None\n             return attr\n", "occurrence": 2, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 69b2ccc..6ef8545 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -958,6 +958,7 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):\n             if inspect.is_builtin_class_method(obj, attr):\n                 return None\n             attr = self.get_attr(obj, attr, None)\n+            attr = inspect.unwrap(attr)\n             if not (inspect.ismethod(attr) or inspect.isfunction(attr)):\n                 return None\n             return attr\n", "normalized_occurrence": 2}
