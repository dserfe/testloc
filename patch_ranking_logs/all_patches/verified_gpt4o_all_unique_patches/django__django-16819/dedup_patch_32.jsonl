{"model_name_or_path": "agentless", "instance_id": "django__django-16819", "model_patch": "diff --git a/django/db/migrations/optimizer.py b/django/db/migrations/optimizer.py\nindex a9ec258..f252ff6 100644\n--- a/django/db/migrations/optimizer.py\n+++ b/django/db/migrations/optimizer.py\n@@ -1,3 +1,4 @@\n+\n class MigrationOptimizer:\n     \"\"\"\n     Power the optimization process, where you provide a list of Operations\n@@ -42,6 +43,14 @@ class MigrationOptimizer:\n         new_operations = []\n         for i, operation in enumerate(operations):\n             right = True  # Should we reduce on the right or on the left.\n+            # Optimization for AddIndex/RemoveIndex\n+            if isinstance(operation, AddIndex) and isinstance(operations[i + 1], RemoveIndex):\n+                if operation.model_name == operations[i + 1].model_name and operation.index.name == operations[i + 1].name:\n+                    continue  # Skip both AddIndex and RemoveIndex as they cancel each other out\n+            if isinstance(operation, RemoveIndex) and isinstance(operations[i + 1], AddIndex):\n+                if operation.model_name == operations[i + 1].model_name and operation.name == operations[i + 1].index.name:\n+                    new_operations.append(operations[i + 1])  # Only keep the AddIndex operation\n+                    continue\n             # Compare it to each operation after it\n             for j, other in enumerate(operations[i + 1 :]):\n                 result = operation.reduce(other, app_label)\n@@ -66,4 +75,4 @@ class MigrationOptimizer:\n                     right = False\n             else:\n                 new_operations.append(operation)\n-        return new_operations\n+        return new_operations\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/optimizer.py b/django/db/migrations/optimizer.py\nindex 06fbfa5..9dfb91e 100644\n--- a/django/db/migrations/optimizer.py\n+++ b/django/db/migrations/optimizer.py\n@@ -13,6 +13,13 @@ class MigrationOptimizer:\n         new_operations = []\n         for i, operation in enumerate(operations):\n             right = True\n+            if isinstance(operation, AddIndex) and isinstance(operations[i + 1], RemoveIndex):\n+                if operation.model_name == operations[i + 1].model_name and operation.index.name == operations[i + 1].name:\n+                    continue\n+            if isinstance(operation, RemoveIndex) and isinstance(operations[i + 1], AddIndex):\n+                if operation.model_name == operations[i + 1].model_name and operation.name == operations[i + 1].index.name:\n+                    new_operations.append(operations[i + 1])\n+                    continue\n             for j, other in enumerate(operations[i + 1:]):\n                 result = operation.reduce(other, app_label)\n                 if isinstance(result, list):\n", "normalized_occurrence": 1}
