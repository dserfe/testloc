{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-12236", "model_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 03af2f5..1441b5b 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -130,7 +130,7 @@ def apart(f, x=None, full=False, **options):\n     poly, P = P.div(Q, auto=True)\n     P, Q = P.rat_clear_denoms(Q)\n \n-    if Q.degree() <= 1:\n+    if Q.degree() <= 1 and not P.has(x):\n         partial = P/Q\n     else:\n         if not full:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 21c4bd7..9991cb2 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -62,7 +62,7 @@ def apart(f, x=None, full=False, **options):\n     common, P, Q = P.cancel(Q)\n     poly, P = P.div(Q, auto=True)\n     P, Q = P.rat_clear_denoms(Q)\n-    if Q.degree() <= 1:\n+    if Q.degree() <= 1 and (not P.has(x)):\n         partial = P / Q\n     elif not full:\n         partial = apart_undetermined_coeffs(P, Q)\n", "normalized_occurrence": 1}
