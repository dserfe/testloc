{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-25638", "model_patch": "diff --git a/sklearn/utils/multiclass.py b/sklearn/utils/multiclass.py\nindex db3f82e..f52cc0d 100644\n--- a/sklearn/utils/multiclass.py\n+++ b/sklearn/utils/multiclass.py\n@@ -280,6 +280,8 @@ def type_of_target(y, input_name=\"\"):\n     'multilabel-indicator'\n     \"\"\"\n     xp, is_array_api = get_namespace(y)\n+    nullable_pandas_dtypes = [\"Int64\", \"Float64\", \"boolean\"]\n+    \n     valid = (\n         (isinstance(y, Sequence) or issparse(y) or hasattr(y, \"__array__\"))\n         and not isinstance(y, str)\n@@ -340,7 +342,12 @@ def type_of_target(y, input_name=\"\"):\n             return \"binary\"  # []\n         # 2-D empty array: [[]]\n         return \"unknown\"\n-    if not issparse(y) and y.dtype == object and not isinstance(y.flat[0], str):\n+    if (\n+        not issparse(y) and \n+        y.dtype == object and \n+        not isinstance(y.flat[0], str) and \n+        str(y.dtype) not in nullable_pandas_dtypes\n+    ):\n         # [obj_1] and not [\"label_1\"]\n         return \"unknown\"\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/utils/multiclass.py b/sklearn/utils/multiclass.py\nindex dee4b2a..8f27234 100644\n--- a/sklearn/utils/multiclass.py\n+++ b/sklearn/utils/multiclass.py\n@@ -65,6 +65,7 @@ def check_classification_targets(y):\n         raise ValueError('Unknown label type: %r' % y_type)\n def type_of_target(y, input_name=''):\n     xp, is_array_api = get_namespace(y)\n+    nullable_pandas_dtypes = ['Int64', 'Float64', 'boolean']\n     valid = (isinstance(y, Sequence) or issparse(y) or hasattr(y, '__array__')) and (not isinstance(y, str)) or is_array_api\n     if not valid:\n         raise ValueError('Expected array-like (array or non-string sequence), got %r' % y)\n@@ -91,7 +92,7 @@ def type_of_target(y, input_name=''):\n         if y.ndim == 1:\n             return 'binary'\n         return 'unknown'\n-    if not issparse(y) and y.dtype == object and (not isinstance(y.flat[0], str)):\n+    if not issparse(y) and y.dtype == object and (not isinstance(y.flat[0], str)) and (str(y.dtype) not in nullable_pandas_dtypes):\n         return 'unknown'\n     if y.ndim == 2 and y.shape[1] > 1:\n         suffix = '-multioutput'\n", "normalized_occurrence": 1}
