{"model_name_or_path": "agentless", "instance_id": "django__django-13837", "model_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex 3b7178c..b54639d 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -216,14 +216,18 @@ def get_child_arguments():\n     executable is reported to not have the .exe extension which can cause bugs\n     on reloading.\n     \"\"\"\n-    import django.__main__\n-    django_main_path = Path(django.__main__.__file__)\n+    import __main__\n+    main_spec = getattr(__main__, '__spec__', None)\n+    if main_spec is not None:\n+        main_parent = main_spec.parent\n+    else:\n+        main_parent = None\n     py_script = Path(sys.argv[0])\n \n     args = [sys.executable] + ['-W%s' % o for o in sys.warnoptions]\n-    if py_script == django_main_path:\n-        # The server was started with `python -m django runserver`.\n-        args += ['-m', 'django']\n+    if main_parent:\n+        # The server was started with `python -m pkg runserver`.\n+        args += ['-m', main_parent]\n         args += sys.argv[1:]\n     elif not py_script.exists():\n         # sys.argv[0] may not exist for several reasons on Windows.\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex 9acf8d8..73838f7 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -131,12 +131,16 @@ def sys_path_directories():\n         else:\n             yield resolved_path\n def get_child_arguments():\n-    import django.__main__\n-    django_main_path = Path(django.__main__.__file__)\n+    import __main__\n+    main_spec = getattr(__main__, '__spec__', None)\n+    if main_spec is not None:\n+        main_parent = main_spec.parent\n+    else:\n+        main_parent = None\n     py_script = Path(sys.argv[0])\n     args = [sys.executable] + ['-W%s' % o for o in sys.warnoptions]\n-    if py_script == django_main_path:\n-        args += ['-m', 'django']\n+    if main_parent:\n+        args += ['-m', main_parent]\n         args += sys.argv[1:]\n     elif not py_script.exists():\n         exe_entrypoint = py_script.with_suffix('.exe')\n", "normalized_occurrence": 1}
