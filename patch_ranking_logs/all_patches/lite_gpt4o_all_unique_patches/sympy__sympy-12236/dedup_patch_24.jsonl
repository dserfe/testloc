{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-12236", "model_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 03af2f5..89b872b 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -117,10 +117,11 @@ def apart(f, x=None, full=False, **options):\n                     pass\n             return f.xreplace(dict(reps))\n \n+    fc = f.cancel()\n+    if fc != f:\n+        return apart(fc, x=x, full=full, **_options)\n+\n     if P.is_multivariate:\n-        fc = f.cancel()\n-        if fc != f:\n-            return apart(fc, x=x, full=full, **_options)\n \n         raise NotImplementedError(\n             \"multivariate partial fraction decomposition\")\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 21c4bd7..c4a9c68 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -54,10 +54,10 @@ def apart(f, x=None, full=False, **options):\n                 except NotImplementedError:\n                     pass\n             return f.xreplace(dict(reps))\n+    fc = f.cancel()\n+    if fc != f:\n+        return apart(fc, x=x, full=full, **_options)\n     if P.is_multivariate:\n-        fc = f.cancel()\n-        if fc != f:\n-            return apart(fc, x=x, full=full, **_options)\n         raise NotImplementedError('multivariate partial fraction decomposition')\n     common, P, Q = P.cancel(Q)\n     poly, P = P.div(Q, auto=True)\n", "normalized_occurrence": 1}
