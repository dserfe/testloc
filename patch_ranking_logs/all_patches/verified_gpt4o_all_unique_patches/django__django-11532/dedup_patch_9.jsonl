{"model_name_or_path": "agentless", "instance_id": "django__django-11532", "model_patch": "diff --git a/django/core/mail/message.py b/django/core/mail/message.py\nindex e5469be..99edb55 100644\n--- a/django/core/mail/message.py\n+++ b/django/core/mail/message.py\n@@ -257,7 +257,10 @@ class EmailMessage:\n             msg['Date'] = formatdate(localtime=settings.EMAIL_USE_LOCALTIME)\n         if 'message-id' not in header_names:\n             # Use cached DNS_NAME for performance\n-            msg['Message-ID'] = make_msgid(domain=DNS_NAME)\n+            domain = DNS_NAME.get_fqdn()\n+            if encoding != 'utf-8':\n+                domain = domain.encode('idna').decode('ascii')\n+            msg['Message-ID'] = make_msgid(domain=domain)\n         for name, value in self.extra_headers.items():\n             if name.lower() != 'from':  # From is already handled\n                 msg[name] = value\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/mail/message.py b/django/core/mail/message.py\nindex bf67640..e7fb988 100644\n--- a/django/core/mail/message.py\n+++ b/django/core/mail/message.py\n@@ -160,7 +160,10 @@ class EmailMessage:\n         if 'date' not in header_names:\n             msg['Date'] = formatdate(localtime=settings.EMAIL_USE_LOCALTIME)\n         if 'message-id' not in header_names:\n-            msg['Message-ID'] = make_msgid(domain=DNS_NAME)\n+            domain = DNS_NAME.get_fqdn()\n+            if encoding != 'utf-8':\n+                domain = domain.encode('idna').decode('ascii')\n+            msg['Message-ID'] = make_msgid(domain=domain)\n         for name, value in self.extra_headers.items():\n             if name.lower() != 'from':\n                 msg[name] = value\n", "normalized_occurrence": 1}
