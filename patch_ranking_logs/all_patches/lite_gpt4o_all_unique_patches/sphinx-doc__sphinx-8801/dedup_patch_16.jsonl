{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8801", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 9e67bb6..9ed8f1f 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -685,6 +685,9 @@ class Documenter:\n                     elif name in cls.__dict__:\n                         return False\n                     elif name in self.get_attr(cls, '__annotations__', {}):\n+                        # If the attribute is annotation-only in a superclass, treat it as documented\n+                        if cls.__name__ != self.object.__name__:\n+                            return True\n                         return False\n                     elif isinstance(obj, ObjectMember) and obj.class_ is cls:\n                         return False\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex e1d3d5c..3b3b764 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -353,6 +353,8 @@ class Documenter:\n                     elif name in cls.__dict__:\n                         return False\n                     elif name in self.get_attr(cls, '__annotations__', {}):\n+                        if cls.__name__ != self.object.__name__:\n+                            return True\n                         return False\n                     elif isinstance(obj, ObjectMember) and obj.class_ is cls:\n                         return False\n", "normalized_occurrence": 1}
