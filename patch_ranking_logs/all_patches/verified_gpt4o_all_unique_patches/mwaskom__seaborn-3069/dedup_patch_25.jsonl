{"model_name_or_path": "agentless", "instance_id": "mwaskom__seaborn-3069", "model_patch": "diff --git a/seaborn/categorical.py b/seaborn/categorical.py\nindex ec4f4c2..e56fbc5 100644\n--- a/seaborn/categorical.py\n+++ b/seaborn/categorical.py\n@@ -216,12 +216,13 @@ class _CategoricalPlotterNew(_RelationalPlotter):\n         n = len(getattr(ax, f\"get_{axis}ticks\")())\n \n         if axis == \"x\":\n-            ax.xaxis.grid(False)\n-            ax.set_xlim(-.5, n - .5, auto=None)\n-        else:\n-            ax.yaxis.grid(False)\n-            # Note limits that correspond to previously-inverted y axis\n-            ax.set_ylim(n - .5, -.5, auto=None)\n+            if isinstance(self.var_types[axis], Nominal):\n+                ax.xaxis.grid(False)\n+                ax.set_xlim(-.5, n - .5, auto=None)\n+            else:\n+                ax.yaxis.grid(False)\n+                # Note limits that correspond to previously-inverted y axis\n+                ax.set_ylim(n - .5, -.5, auto=None)\n \n     @property\n     def _native_width(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/categorical.py b/seaborn/categorical.py\nindex 7d6d43d..dd3df2c 100644\n--- a/seaborn/categorical.py\n+++ b/seaborn/categorical.py\n@@ -100,11 +100,12 @@ class _CategoricalPlotterNew(_RelationalPlotter):\n             return\n         n = len(getattr(ax, f'get_{axis}ticks')())\n         if axis == 'x':\n-            ax.xaxis.grid(False)\n-            ax.set_xlim(-0.5, n - 0.5, auto=None)\n-        else:\n-            ax.yaxis.grid(False)\n-            ax.set_ylim(n - 0.5, -0.5, auto=None)\n+            if isinstance(self.var_types[axis], Nominal):\n+                ax.xaxis.grid(False)\n+                ax.set_xlim(-0.5, n - 0.5, auto=None)\n+            else:\n+                ax.yaxis.grid(False)\n+                ax.set_ylim(n - 0.5, -0.5, auto=None)\n     @property\n     def _native_width(self):\n         unique_values = np.unique(self.comp_data[self.cat_axis])\n", "normalized_occurrence": 1}
