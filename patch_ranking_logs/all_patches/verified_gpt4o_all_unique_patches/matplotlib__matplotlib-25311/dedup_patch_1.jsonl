{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25311", "model_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 08e0049..71b37ab 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -3170,6 +3170,10 @@ None}, default: None\n         # add version information to the state\n         state['__mpl_version__'] = mpl.__version__\n \n+        # Ensure draggable elements are not pickled\n+        if hasattr(self, \"_draggable\"):\n+            state.pop(\"_draggable\")\n+\n         # check whether the figure manager (if any) is registered with pyplot\n         from matplotlib import _pylab_helpers\n         if self.canvas.manager in _pylab_helpers.Gcf.figs.values():\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 7796fb8..5718bd4 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -948,6 +948,8 @@ class Figure(FigureBase):\n         state.pop('canvas')\n         state['_dpi'] = state.get('_original_dpi', state['_dpi'])\n         state['__mpl_version__'] = mpl.__version__\n+        if hasattr(self, '_draggable'):\n+            state.pop('_draggable')\n         from matplotlib import _pylab_helpers\n         if self.canvas.manager in _pylab_helpers.Gcf.figs.values():\n             state['_restore_to_pylab'] = True\n", "normalized_occurrence": 1}
