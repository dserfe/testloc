{"model_name_or_path": "agentless_claude", "instance_id": "astropy__astropy-14369", "model_patch": "diff --git a/astropy/units/format/cds.py b/astropy/units/format/cds.py\nindex 761c4b8..df86163 100644\n--- a/astropy/units/format/cds.py\n+++ b/astropy/units/format/cds.py\n@@ -187,7 +187,13 @@ class CDS(Base):\n             if len(p) == 3:\n                 p[0] = p[2] ** -1\n             else:\n-                p[0] = p[1] / p[3]\n+                # Handle nested divisions from left to right\n+                if hasattr(p[3], 'is_division') and p[3].is_division:\n+                    # If the right side is already a division, combine properly\n+                    p[0] = p[1] * p[3]\n+                else:\n+                    p[0] = p[1] / p[3]\n+                p[0].is_division = True\n \n         def p_unit_expression(p):\n             \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/units/format/cds.py b/astropy/units/format/cds.py\nindex 829c8ad..6bf2378 100644\n--- a/astropy/units/format/cds.py\n+++ b/astropy/units/format/cds.py\n@@ -82,7 +82,11 @@ class CDS(Base):\n             if len(p) == 3:\n                 p[0] = p[2] ** (-1)\n             else:\n-                p[0] = p[1] / p[3]\n+                if hasattr(p[3], 'is_division') and p[3].is_division:\n+                    p[0] = p[1] * p[3]\n+                else:\n+                    p[0] = p[1] / p[3]\n+                p[0].is_division = True\n         def p_unit_expression(p):\n             if len(p) == 2:\n                 p[0] = p[1]\n", "normalized_occurrence": 3}
