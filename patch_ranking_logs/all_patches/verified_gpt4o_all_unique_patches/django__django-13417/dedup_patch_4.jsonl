{"model_name_or_path": "agentless", "instance_id": "django__django-13417", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 5049ae4..7c4cd78 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -1221,10 +1221,10 @@ class QuerySet:\n         clause or a default ordering on the model (or is empty).\n         \"\"\"\n         if isinstance(self, EmptyQuerySet):\n-            return True\n+            return False\n         if self.query.extra_order_by or self.query.order_by:\n             return True\n-        elif self.query.default_ordering and self.query.get_meta().ordering:\n+        elif self.query.default_ordering and self.query.get_meta().ordering and not self.query.group_by:\n             return True\n         else:\n             return False\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 44ed440..d2876aa 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -723,10 +723,10 @@ class QuerySet:\n     @property\n     def ordered(self):\n         if isinstance(self, EmptyQuerySet):\n-            return True\n+            return False\n         if self.query.extra_order_by or self.query.order_by:\n             return True\n-        elif self.query.default_ordering and self.query.get_meta().ordering:\n+        elif self.query.default_ordering and self.query.get_meta().ordering and (not self.query.group_by):\n             return True\n         else:\n             return False\n", "normalized_occurrence": 1}
