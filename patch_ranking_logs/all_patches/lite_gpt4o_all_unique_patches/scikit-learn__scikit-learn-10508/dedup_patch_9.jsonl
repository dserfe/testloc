{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-10508", "model_patch": "diff --git a/sklearn/preprocessing/label.py b/sklearn/preprocessing/label.py\nindex 8d1b39c..d7ed44f 100644\n--- a/sklearn/preprocessing/label.py\n+++ b/sklearn/preprocessing/label.py\n@@ -108,6 +108,8 @@ class LabelEncoder(BaseEstimator, TransformerMixin):\n         -------\n         y : array-like of shape [n_samples]\n         \"\"\"\n+        if len(y) == 0:\n+            return np.array([], dtype=self.classes_.dtype)\n         y = column_or_1d(y, warn=True)\n         self.classes_, y = np.unique(y, return_inverse=True)\n         return y\n@@ -125,6 +127,8 @@ class LabelEncoder(BaseEstimator, TransformerMixin):\n         y : array-like of shape [n_samples]\n         \"\"\"\n         check_is_fitted(self, 'classes_')\n+        if len(y) == 0:\n+            return np.array([], dtype=self.classes_.dtype)\n         y = column_or_1d(y, warn=True)\n \n         classes = np.unique(y)\n", "occurrence": 13, "normalized_patch": "diff --git a/sklearn/preprocessing/label.py b/sklearn/preprocessing/label.py\nindex 7e12a65..4ee0e14 100644\n--- a/sklearn/preprocessing/label.py\n+++ b/sklearn/preprocessing/label.py\n@@ -21,11 +21,15 @@ class LabelEncoder(BaseEstimator, TransformerMixin):\n         self.classes_ = np.unique(y)\n         return self\n     def fit_transform(self, y):\n+        if len(y) == 0:\n+            return np.array([], dtype=self.classes_.dtype)\n         y = column_or_1d(y, warn=True)\n         self.classes_, y = np.unique(y, return_inverse=True)\n         return y\n     def transform(self, y):\n         check_is_fitted(self, 'classes_')\n+        if len(y) == 0:\n+            return np.array([], dtype=self.classes_.dtype)\n         y = column_or_1d(y, warn=True)\n         classes = np.unique(y)\n         if len(np.intersect1d(classes, self.classes_)) < len(classes):\n", "normalized_occurrence": 13}
