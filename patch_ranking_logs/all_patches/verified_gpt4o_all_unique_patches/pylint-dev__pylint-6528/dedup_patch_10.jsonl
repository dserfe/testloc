{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-6528", "model_patch": "diff --git a/pylint/lint/expand_modules.py b/pylint/lint/expand_modules.py\nindex 94af730..c0e5a23 100644\n--- a/pylint/lint/expand_modules.py\n+++ b/pylint/lint/expand_modules.py\n@@ -63,9 +63,13 @@ def expand_modules(\n         basename = os.path.basename(something)\n         if (\n             basename in ignore_list\n-            or _is_in_ignore_list_re(os.path.basename(something), ignore_list_re)\n+            or _is_in_ignore_list_re(basename, ignore_list_re)\n             or _is_in_ignore_list_re(something, ignore_list_paths_re)\n+            or os.path.basename(something) in ignore_list\n+            or any(pat.match(something) for pat in ignore_list_paths_re)\n         ):\n+            if os.path.isdir(something):\n+                skip_subtrees.append(something)\n             continue\n         module_path = get_python_path(something)\n         additional_search_path = [\".\", module_path] + path\n@@ -146,4 +150,4 @@ def expand_modules(\n                         \"basename\": modname,\n                     }\n                 )\n-    return result, errors\n+    return result, errors\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/lint/expand_modules.py b/pylint/lint/expand_modules.py\nindex 37bdd47..4f7e707 100644\n--- a/pylint/lint/expand_modules.py\n+++ b/pylint/lint/expand_modules.py\n@@ -28,7 +28,9 @@ def expand_modules(files_or_modules: Sequence[str], ignore_list: list[str], igno\n     path = sys.path.copy()\n     for something in files_or_modules:\n         basename = os.path.basename(something)\n-        if basename in ignore_list or _is_in_ignore_list_re(os.path.basename(something), ignore_list_re) or _is_in_ignore_list_re(something, ignore_list_paths_re):\n+        if basename in ignore_list or _is_in_ignore_list_re(basename, ignore_list_re) or _is_in_ignore_list_re(something, ignore_list_paths_re) or (os.path.basename(something) in ignore_list) or any((pat.match(something) for pat in ignore_list_paths_re)):\n+            if os.path.isdir(something):\n+                skip_subtrees.append(something)\n             continue\n         module_path = get_python_path(something)\n         additional_search_path = ['.', module_path] + path\n", "normalized_occurrence": 1}
