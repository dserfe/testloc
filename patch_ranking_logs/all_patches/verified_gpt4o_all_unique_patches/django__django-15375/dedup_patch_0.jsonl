{"model_name_or_path": "agentless", "instance_id": "django__django-15375", "model_patch": "diff --git a/django/db/models/aggregates.py b/django/db/models/aggregates.py\nindex 80dc7eb..0a1a62a 100644\n--- a/django/db/models/aggregates.py\n+++ b/django/db/models/aggregates.py\n@@ -64,7 +64,8 @@ class Aggregate(Func):\n             return c\n         if hasattr(default, 'resolve_expression'):\n             default = default.resolve_expression(query, allow_joins, reuse, summarize)\n-        c.default = None  # Reset the default argument before wrapping.\n+        if not hasattr(c, 'default'):\n+            c.default = None  # Reset the default argument before wrapping.\n         return Coalesce(c, default, output_field=c._output_field_or_none)\n \n     @property\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/aggregates.py b/django/db/models/aggregates.py\nindex fa98951..e54df68 100644\n--- a/django/db/models/aggregates.py\n+++ b/django/db/models/aggregates.py\n@@ -45,7 +45,8 @@ class Aggregate(Func):\n             return c\n         if hasattr(default, 'resolve_expression'):\n             default = default.resolve_expression(query, allow_joins, reuse, summarize)\n-        c.default = None\n+        if not hasattr(c, 'default'):\n+            c.default = None\n         return Coalesce(c, default, output_field=c._output_field_or_none)\n     @property\n     def default_alias(self):\n", "normalized_occurrence": 1}
