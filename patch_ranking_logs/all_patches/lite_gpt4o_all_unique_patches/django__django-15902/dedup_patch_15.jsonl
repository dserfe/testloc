{"model_name_or_path": "agentless", "instance_id": "django__django-15902", "model_patch": "diff --git a/django/forms/renderers.py b/django/forms/renderers.py\nindex f215e38..35e3702 100644\n--- a/django/forms/renderers.py\n+++ b/django/forms/renderers.py\n@@ -26,6 +26,8 @@ class BaseRenderer:\n \n     def render(self, template_name, context, request=None):\n         template = self.get_template(template_name)\n+        if all(field.is_hidden for field in context.get(\"form\", {}).values()):\n+            template_name = \"django/forms/hidden.html\"\n         return template.render(context, request=request).strip()\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/renderers.py b/django/forms/renderers.py\nindex 6842533..f2069bb 100644\n--- a/django/forms/renderers.py\n+++ b/django/forms/renderers.py\n@@ -16,6 +16,8 @@ class BaseRenderer:\n         raise NotImplementedError('subclasses must implement get_template()')\n     def render(self, template_name, context, request=None):\n         template = self.get_template(template_name)\n+        if all((field.is_hidden for field in context.get('form', {}).values())):\n+            template_name = 'django/forms/hidden.html'\n         return template.render(context, request=request).strip()\n class EngineMixin:\n     def get_template(self, template_name):\n", "normalized_occurrence": 1}
