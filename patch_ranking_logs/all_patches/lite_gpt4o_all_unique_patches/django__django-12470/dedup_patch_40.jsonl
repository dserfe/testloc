{"model_name_or_path": "agentless", "instance_id": "django__django-12470", "model_patch": "diff --git a/django/db/models/options.py b/django/db/models/options.py\nindex 69e5965..ff083e9 100644\n--- a/django/db/models/options.py\n+++ b/django/db/models/options.py\n@@ -190,8 +190,10 @@ class Options:\n             if self.verbose_name_plural is None:\n                 self.verbose_name_plural = format_lazy('{}s', self.verbose_name)\n \n-            # order_with_respect_and ordering are mutually exclusive.\n+            # order_with_respect_to and ordering are mutually exclusive.\n             self._ordering_clash = bool(self.ordering and self.order_with_respect_to)\n+            if self.ordering:\n+                self.ordering = [field if field.startswith('-') else '-' + field for field in self.ordering]\n \n             # Any leftover attributes must be invalid.\n             if meta_attrs != {}:\n@@ -858,4 +860,4 @@ class Options:\n         return [\n             field for field in self._get_fields(forward=True, reverse=False, include_parents=PROXY_PARENTS)\n             if getattr(field, 'db_returning', False)\n-        ]\n+        ]\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/options.py b/django/db/models/options.py\nindex 0edba5f..e9f9b9f 100644\n--- a/django/db/models/options.py\n+++ b/django/db/models/options.py\n@@ -118,6 +118,8 @@ class Options:\n             if self.verbose_name_plural is None:\n                 self.verbose_name_plural = format_lazy('{}s', self.verbose_name)\n             self._ordering_clash = bool(self.ordering and self.order_with_respect_to)\n+            if self.ordering:\n+                self.ordering = [field if field.startswith('-') else '-' + field for field in self.ordering]\n             if meta_attrs != {}:\n                 raise TypeError(\"'class Meta' got invalid attribute(s): %s\" % ','.join(meta_attrs))\n         else:\n", "normalized_occurrence": 1}
