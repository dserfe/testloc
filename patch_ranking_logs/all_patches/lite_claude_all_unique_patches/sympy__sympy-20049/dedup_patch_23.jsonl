{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-20049", "model_patch": "diff --git a/sympy/physics/vector/point.py b/sympy/physics/vector/point.py\nindex b711aa3..aade8b2 100644\n--- a/sympy/physics/vector/point.py\n+++ b/sympy/physics/vector/point.py\n@@ -515,13 +515,34 @@ class Point(object):\n         >>> p1.vel(N)\n         10*N.x\n \n+        >>> from sympy.physics.mechanics import dynamicsymbols\n+        >>> q = dynamicsymbols('q')\n+        >>> p2 = Point('p2')\n+        >>> p3 = Point('p3')\n+        >>> p3.set_pos(p2, q * N.x)\n+        >>> p3.vel(N)  # Velocity automatically calculated from position\n+        q'*N.x\n+\n         \"\"\"\n \n         _check_frame(frame)\n-        if not (frame in self._vel_dict):\n-            raise ValueError('Velocity of point ' + self.name + ' has not been'\n-                             ' defined in ReferenceFrame ' + frame.name)\n-        return self._vel_dict[frame]\n+        if frame in self._vel_dict:\n+            return self._vel_dict[frame]\n+            \n+        # If velocity is not explicitly defined, try to calculate it from position\n+        for other_point, pos_vector in self._pos_dict.items():\n+            try:\n+                # Calculate velocity as time derivative of position vector\n+                vel_vector = pos_vector.dt(frame)\n+                # Add velocity of the reference point if it's defined\n+                if frame in other_point._vel_dict:\n+                    vel_vector += other_point._vel_dict[frame]\n+                return vel_vector\n+            except:\n+                continue\n+                \n+        raise ValueError('Velocity of point ' + self.name + ' has not been'\n+                         ' defined in ReferenceFrame ' + frame.name)\n \n     def partial_velocity(self, frame, *gen_speeds):\n         \"\"\"Returns the partial velocities of the linear velocity vector of this\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/physics/vector/point.py b/sympy/physics/vector/point.py\nindex f85c3bd..ed61c82 100644\n--- a/sympy/physics/vector/point.py\n+++ b/sympy/physics/vector/point.py\n@@ -120,9 +120,17 @@ class Point(object):\n         return self.vel(outframe)\n     def vel(self, frame):\n         _check_frame(frame)\n-        if not frame in self._vel_dict:\n-            raise ValueError('Velocity of point ' + self.name + ' has not been defined in ReferenceFrame ' + frame.name)\n-        return self._vel_dict[frame]\n+        if frame in self._vel_dict:\n+            return self._vel_dict[frame]\n+        for other_point, pos_vector in self._pos_dict.items():\n+            try:\n+                vel_vector = pos_vector.dt(frame)\n+                if frame in other_point._vel_dict:\n+                    vel_vector += other_point._vel_dict[frame]\n+                return vel_vector\n+            except:\n+                continue\n+        raise ValueError('Velocity of point ' + self.name + ' has not been defined in ReferenceFrame ' + frame.name)\n     def partial_velocity(self, frame, *gen_speeds):\n         partials = [self.vel(frame).diff(speed, frame, var_in_dcm=False) for speed in gen_speeds]\n         if len(partials) == 1:\n", "normalized_occurrence": 1}
