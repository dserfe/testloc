{"model_name_or_path": "agentless", "instance_id": "psf__requests-1142", "model_patch": "diff --git a/requests/models.py b/requests/models.py\nindex 0d4482a..4efa495 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -377,7 +377,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n                     else:\n                         content_type = 'application/x-www-form-urlencoded'\n \n-            self.prepare_content_length(body)\n+            self.prepare_content_length(body, self.method)\n \n             # Add content-type if it wasn't explicitly provided.\n             if (content_type) and (not 'content-type' in self.headers):\n@@ -385,14 +385,15 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n \n         self.body = body\n \n-    def prepare_content_length(self, body):\n-        self.headers['Content-Length'] = '0'\n-        if hasattr(body, 'seek') and hasattr(body, 'tell'):\n-            body.seek(0, 2)\n-            self.headers['Content-Length'] = str(body.tell())\n-            body.seek(0, 0)\n-        elif body is not None:\n-            self.headers['Content-Length'] = str(len(body))\n+    def prepare_content_length(self, body, method):\n+        if method.upper() != 'GET':\n+            self.headers['Content-Length'] = '0'\n+            if hasattr(body, 'seek') and hasattr(body, 'tell'):\n+                body.seek(0, 2)\n+                self.headers['Content-Length'] = str(body.tell())\n+                body.seek(0, 0)\n+            elif body is not None:\n+                self.headers['Content-Length'] = str(len(body))\n \n     def prepare_auth(self, auth):\n         \"\"\"Prepares the given HTTP auth data.\"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/requests/models.py b/requests/models.py\nindex 8a031b4..9b8bccd 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -204,18 +204,19 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n                     content_type = None\n                 else:\n                     content_type = 'application/x-www-form-urlencoded'\n-            self.prepare_content_length(body)\n+            self.prepare_content_length(body, self.method)\n             if content_type and (not 'content-type' in self.headers):\n                 self.headers['Content-Type'] = content_type\n         self.body = body\n-    def prepare_content_length(self, body):\n-        self.headers['Content-Length'] = '0'\n-        if hasattr(body, 'seek') and hasattr(body, 'tell'):\n-            body.seek(0, 2)\n-            self.headers['Content-Length'] = str(body.tell())\n-            body.seek(0, 0)\n-        elif body is not None:\n-            self.headers['Content-Length'] = str(len(body))\n+    def prepare_content_length(self, body, method):\n+        if method.upper() != 'GET':\n+            self.headers['Content-Length'] = '0'\n+            if hasattr(body, 'seek') and hasattr(body, 'tell'):\n+                body.seek(0, 2)\n+                self.headers['Content-Length'] = str(body.tell())\n+                body.seek(0, 0)\n+            elif body is not None:\n+                self.headers['Content-Length'] = str(len(body))\n     def prepare_auth(self, auth):\n         if auth:\n             if isinstance(auth, tuple) and len(auth) == 2:\n", "normalized_occurrence": 1}
