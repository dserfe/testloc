{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-22865", "model_patch": "diff --git a/lib/matplotlib/colorbar.py b/lib/matplotlib/colorbar.py\nindex 5ebeaf9..103bc8d 100644\n--- a/lib/matplotlib/colorbar.py\n+++ b/lib/matplotlib/colorbar.py\n@@ -647,7 +647,7 @@ class Colorbar:\n         else:\n             self.solids = self.ax.pcolormesh(\n                 X, Y, C, cmap=self.cmap, norm=self.norm, alpha=self.alpha,\n-                edgecolors='none', shading='flat')\n+                edgecolors='face', shading='flat')\n             if not self.drawedges:\n                 if len(self._y) >= self.n_rasterize:\n                     self.solids.set_rasterized(True)\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/colorbar.py b/lib/matplotlib/colorbar.py\nindex eb4d80e..de76b79 100644\n--- a/lib/matplotlib/colorbar.py\n+++ b/lib/matplotlib/colorbar.py\n@@ -258,7 +258,7 @@ class Colorbar:\n         if isinstance(mappable, contour.ContourSet) and any((hatch is not None for hatch in mappable.hatches)):\n             self._add_solids_patches(X, Y, C, mappable)\n         else:\n-            self.solids = self.ax.pcolormesh(X, Y, C, cmap=self.cmap, norm=self.norm, alpha=self.alpha, edgecolors='none', shading='flat')\n+            self.solids = self.ax.pcolormesh(X, Y, C, cmap=self.cmap, norm=self.norm, alpha=self.alpha, edgecolors='face', shading='flat')\n             if not self.drawedges:\n                 if len(self._y) >= self.n_rasterize:\n                     self.solids.set_rasterized(True)\n", "normalized_occurrence": 1}
