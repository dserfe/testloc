{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-22456", "model_patch": "diff --git a/sympy/codegen/ast.py b/sympy/codegen/ast.py\nindex 7a7d795..f64eef2 100644\n--- a/sympy/codegen/ast.py\n+++ b/sympy/codegen/ast.py\n@@ -895,9 +895,15 @@ class String(Token):\n \n     \"\"\"\n     __slots__ = ('text',)\n-    not_in_args = ['text']\n+    not_in_args = []\n     is_Atom = True\n \n+    @classmethod\n+    def _construct(cls, attrname, arg):\n+        if attrname == 'text':\n+            return cls._construct_text(arg)\n+        return super()._construct(attrname, arg)\n+\n     @classmethod\n     def _construct_text(cls, text):\n         if not isinstance(text, str):\n", "occurrence": 1, "normalized_patch": "--- a/sympy/codegen/ast.py\n+++ b/sympy/codegen/ast.py\n-    not_in_args = ['text']\n+    not_in_args = []\n+    @classmethod\n+    def _construct(cls, attrname, arg):\n+        if attrname == 'text':\n+            return cls._construct_text(arg)\n+        return super()._construct(attrname, arg)\n+", "normalized_occurrence": 1}
