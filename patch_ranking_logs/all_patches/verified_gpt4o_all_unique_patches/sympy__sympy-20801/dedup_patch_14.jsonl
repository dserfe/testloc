{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-20801", "model_patch": "diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\nindex ecd2cce..659e083 100644\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -1389,6 +1389,8 @@ class Float(Number):\n         if not self:\n             return not other\n         if isinstance(other, Boolean):\n+            if not self and not other:\n+                return True\n             return False\n         if other.is_NumberSymbol:\n             if other.is_irrational:\n@@ -1866,6 +1868,8 @@ class Rational(Number):\n         except SympifyError:\n             return NotImplemented\n         if not isinstance(other, Number):\n+            if isinstance(other, Boolean):\n+                return False if self else not other\n             # S(0) == S.false is False\n             # S(0) == False is True\n             return False\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\nindex c5d42bc..1becced 100644\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -1194,6 +1194,8 @@ class Float(Number):\n         if not self:\n             return not other\n         if isinstance(other, Boolean):\n+            if not self and (not other):\n+                return True\n             return False\n         if other.is_NumberSymbol:\n             if other.is_irrational:\n@@ -1628,6 +1630,8 @@ class Rational(Number):\n         except SympifyError:\n             return NotImplemented\n         if not isinstance(other, Number):\n+            if isinstance(other, Boolean):\n+                return False if self else not other\n             return False\n         if not self:\n             return not other\n", "normalized_occurrence": 1}
