{"model_name_or_path": "agentless", "instance_id": "django__django-12209", "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex a315aef..182cb71 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -847,12 +847,14 @@ class Model(metaclass=ModelBase):\n         if not pk_set and (force_update or update_fields):\n             raise ValueError(\"Cannot force an update in save() with no primary key.\")\n         updated = False\n-        # Skip an UPDATE when adding an instance and primary key has a default.\n+        # Skip an UPDATE when adding an instance and primary key has a default,\n+        # and no explicit primary key value is set.\n         if (\n             not force_insert and\n             self._state.adding and\n             self._meta.pk.default and\n-            self._meta.pk.default is not NOT_PROVIDED\n+            self._meta.pk.default is not NOT_PROVIDED and\n+            self.pk is None\n         ):\n             force_insert = True\n         # If possible, try an UPDATE. If that doesn't update anything, do an INSERT.\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex b2bc78c..cd1dd78 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -457,7 +457,7 @@ class Model(metaclass=ModelBase):\n         if not pk_set and (force_update or update_fields):\n             raise ValueError('Cannot force an update in save() with no primary key.')\n         updated = False\n-        if not force_insert and self._state.adding and self._meta.pk.default and (self._meta.pk.default is not NOT_PROVIDED):\n+        if not force_insert and self._state.adding and self._meta.pk.default and (self._meta.pk.default is not NOT_PROVIDED) and (self.pk is None):\n             force_insert = True\n         if pk_set and (not force_insert):\n             base_qs = cls._base_manager.using(using)\n", "normalized_occurrence": 1}
