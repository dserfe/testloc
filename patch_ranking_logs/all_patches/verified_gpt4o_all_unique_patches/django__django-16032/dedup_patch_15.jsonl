{"model_name_or_path": "agentless", "instance_id": "django__django-16032", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 250c6ee..38695ac 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1174,6 +1174,11 @@ class Query(BaseExpression):\n             for query in self.combined_queries:\n                 query.clear_ordering(force=False)\n         sql, params = self.get_compiler(connection=connection).as_sql()\n+        if self.alias:\n+            # Ensure only the alias columns are selected in the subquery\n+            alias_columns = [col for col in self.annotations if col in self.alias]\n+            if alias_columns:\n+                self.select = alias_columns\n         if self.subquery:\n             sql = \"(%s)\" % sql\n         return sql, params\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 4a84de0..0e5004d 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -610,6 +610,10 @@ class Query(BaseExpression):\n             for query in self.combined_queries:\n                 query.clear_ordering(force=False)\n         sql, params = self.get_compiler(connection=connection).as_sql()\n+        if self.alias:\n+            alias_columns = [col for col in self.annotations if col in self.alias]\n+            if alias_columns:\n+                self.select = alias_columns\n         if self.subquery:\n             sql = '(%s)' % sql\n         return (sql, params)\n", "normalized_occurrence": 1}
