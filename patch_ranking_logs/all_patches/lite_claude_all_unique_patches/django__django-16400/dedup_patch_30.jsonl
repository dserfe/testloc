{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16400", "model_patch": "diff --git a/django/contrib/auth/management/__init__.py b/django/contrib/auth/management/__init__.py\nindex c21d9d7..fcdd6b4 100644\n--- a/django/contrib/auth/management/__init__.py\n+++ b/django/contrib/auth/management/__init__.py\n@@ -96,7 +96,11 @@ def create_permissions(\n     )\n \n     perms = [\n-        Permission(codename=codename, name=name, content_type=ct)\n+        Permission.objects.db_manager(using).create(\n+            codename=codename,\n+            name=name,\n+            content_type=ct\n+        )\n         for ct, (codename, name) in searched_perms\n         if (ct.pk, codename) not in all_perms\n     ]\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/auth/management/__init__.py b/django/contrib/auth/management/__init__.py\nindex eb43af8..2e04bdf 100644\n--- a/django/contrib/auth/management/__init__.py\n+++ b/django/contrib/auth/management/__init__.py\n@@ -33,7 +33,7 @@ def create_permissions(app_config, verbosity=2, interactive=True, using=DEFAULT_\n         for perm in _get_all_permissions(klass._meta):\n             searched_perms.append((ctype, perm))\n     all_perms = set(Permission.objects.using(using).filter(content_type__in=ctypes).values_list('content_type', 'codename'))\n-    perms = [Permission(codename=codename, name=name, content_type=ct) for ct, (codename, name) in searched_perms if (ct.pk, codename) not in all_perms]\n+    perms = [Permission.objects.db_manager(using).create(codename=codename, name=name, content_type=ct) for ct, (codename, name) in searched_perms if (ct.pk, codename) not in all_perms]\n     Permission.objects.using(using).bulk_create(perms)\n     if verbosity >= 2:\n         for perm in perms:\n", "normalized_occurrence": 1}
