{"model_name_or_path": "agentless", "instance_id": "django__django-16816", "model_patch": "diff --git a/django/contrib/admin/checks.py b/django/contrib/admin/checks.py\nindex e2f5674..52d39ee 100644\n--- a/django/contrib/admin/checks.py\n+++ b/django/contrib/admin/checks.py\n@@ -893,13 +893,13 @@ class ModelAdminChecks(BaseModelAdminChecks):\n     def _check_list_display_item(self, obj, item, label):\n         if callable(item):\n             return []\n-        elif hasattr(obj, item):\n+        elif hasattr(obj.model_admin, item):\n             return []\n         try:\n             field = obj.model._meta.get_field(item)\n         except FieldDoesNotExist:\n             try:\n-                field = getattr(obj.model, item)\n+                field = getattr(obj.model_admin, item)\n             except AttributeError:\n                 return [\n                     checks.Error(\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/checks.py b/django/contrib/admin/checks.py\nindex 4734fd9..2207031 100644\n--- a/django/contrib/admin/checks.py\n+++ b/django/contrib/admin/checks.py\n@@ -335,13 +335,13 @@ class ModelAdminChecks(BaseModelAdminChecks):\n     def _check_list_display_item(self, obj, item, label):\n         if callable(item):\n             return []\n-        elif hasattr(obj, item):\n+        elif hasattr(obj.model_admin, item):\n             return []\n         try:\n             field = obj.model._meta.get_field(item)\n         except FieldDoesNotExist:\n             try:\n-                field = getattr(obj.model, item)\n+                field = getattr(obj.model_admin, item)\n             except AttributeError:\n                 return [checks.Error(\"The value of '%s' refers to '%s', which is not a callable, an attribute of '%s', or an attribute or method on '%s'.\" % (label, item, obj.__class__.__name__, obj.model._meta.label), obj=obj.__class__, id='admin.E108')]\n         if isinstance(field, models.ManyToManyField) or (getattr(field, 'rel', None) and field.rel.field.many_to_one):\n", "normalized_occurrence": 1}
