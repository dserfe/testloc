{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-7910", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 87c3fb8..802a0c6 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -345,7 +345,9 @@ class Documenter:\n                 ret = import_object(self.modname, self.objpath, self.objtype,\n                                     attrgetter=self.get_attr,\n                                     warningiserror=self.env.config.autodoc_warningiserror)\n+                # Unwrap the object to handle decorated methods\n                 self.module, self.parent, self.object_name, self.object = ret\n+                self.object = unwrap_all(self.object)\n                 return True\n             except ImportError as exc:\n                 logger.warning(exc.args[0], type='autodoc', subtype='import_object')\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 69b2ccc..8db4107 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -269,6 +269,7 @@ class Documenter:\n             try:\n                 ret = import_object(self.modname, self.objpath, self.objtype, attrgetter=self.get_attr, warningiserror=self.env.config.autodoc_warningiserror)\n                 self.module, self.parent, self.object_name, self.object = ret\n+                self.object = unwrap_all(self.object)\n                 return True\n             except ImportError as exc:\n                 logger.warning(exc.args[0], type='autodoc', subtype='import_object')\n", "normalized_occurrence": 1}
