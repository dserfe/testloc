{"model_name_or_path": "agentless", "instance_id": "django__django-11583", "model_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex f44661f..3e92805 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -136,13 +136,19 @@ def iter_modules_and_files(modules, extra_files):\n     for filename in itertools.chain(sys_file_paths, extra_files):\n         if not filename:\n             continue\n-        path = Path(filename)\n         try:\n+            path = Path(filename)\n             resolved_path = path.resolve(strict=True).absolute()\n         except FileNotFoundError:\n             # The module could have been removed, don't fail loudly if this\n             # is the case.\n             continue\n+        except ValueError as e:\n+            if \"embedded null byte\" in str(e):\n+                # Skip the file with embedded null byte issue\n+                continue\n+            else:\n+                raise\n         results.add(resolved_path)\n     return frozenset(results)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex e37abac..a6edc41 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -90,11 +90,16 @@ def iter_modules_and_files(modules, extra_files):\n     for filename in itertools.chain(sys_file_paths, extra_files):\n         if not filename:\n             continue\n-        path = Path(filename)\n         try:\n+            path = Path(filename)\n             resolved_path = path.resolve(strict=True).absolute()\n         except FileNotFoundError:\n             continue\n+        except ValueError as e:\n+            if 'embedded null byte' in str(e):\n+                continue\n+            else:\n+                raise\n         results.add(resolved_path)\n     return frozenset(results)\n @functools.lru_cache(maxsize=1)\n", "normalized_occurrence": 1}
