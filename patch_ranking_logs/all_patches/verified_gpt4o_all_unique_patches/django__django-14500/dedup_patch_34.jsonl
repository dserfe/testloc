{"model_name_or_path": "agentless", "instance_id": "django__django-14500", "model_patch": "diff --git a/django/db/migrations/executor.py b/django/db/migrations/executor.py\nindex 9e05ef1..fd3e88f 100644\n--- a/django/db/migrations/executor.py\n+++ b/django/db/migrations/executor.py\n@@ -252,8 +252,12 @@ class MigrationExecutor:\n                 state = migration.unapply(state, schema_editor)\n         # For replacement migrations, record individual statuses\n         if migration.replaces:\n+            # Mark all replaced migrations as unapplied\n             for app_label, name in migration.replaces:\n                 self.recorder.record_unapplied(app_label, name)\n+            # If all replaced migrations are unapplied, then mark the squashed migration as unapplied\n+            if all(not self.recorder.migration_qs.filter(app_label=app_label, name=name).exists() for app_label, name in migration.replaces):\n+                self.recorder.record_unapplied(migration.app_label, migration.name)\n         else:\n             self.recorder.record_unapplied(migration.app_label, migration.name)\n         # Report progress\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/executor.py b/django/db/migrations/executor.py\nindex d5a1e7d..083ac0d 100644\n--- a/django/db/migrations/executor.py\n+++ b/django/db/migrations/executor.py\n@@ -148,6 +148,8 @@ class MigrationExecutor:\n         if migration.replaces:\n             for app_label, name in migration.replaces:\n                 self.recorder.record_unapplied(app_label, name)\n+            if all((not self.recorder.migration_qs.filter(app_label=app_label, name=name).exists() for app_label, name in migration.replaces)):\n+                self.recorder.record_unapplied(migration.app_label, migration.name)\n         else:\n             self.recorder.record_unapplied(migration.app_label, migration.name)\n         if self.progress_callback:\n", "normalized_occurrence": 1}
