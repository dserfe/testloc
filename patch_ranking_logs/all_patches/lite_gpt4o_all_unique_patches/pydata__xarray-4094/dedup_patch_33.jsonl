{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-4094", "model_patch": "diff --git a/xarray/core/merge.py b/xarray/core/merge.py\nindex 3a09d85..c0ba039 100644\n--- a/xarray/core/merge.py\n+++ b/xarray/core/merge.py\n@@ -661,9 +661,10 @@ def merge(\n         - 'right': use indexes from the last object with each dimension\n         - 'exact': instead of aligning, raise `ValueError` when indexes to be\n           aligned are not equal\n-        - 'override': if indexes are of same size, rewrite indexes to be\n-          those of the first object with that dimension. Indexes for the same\n-          dimension must have the same size in all objects.\n+        - 'override': skip comparing and use variables from the first object\n+          with that dimension. This is useful when you know the dimensions\n+          are aligned, but not equal, and you want the result to have the\n+          same dimensions as the first object.\n     fill_value : scalar, optional\n         Value to use for newly missing values\n     combine_attrs : {'drop', 'identical', 'no_conflicts', 'override'},\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/merge.py b/xarray/core/merge.py\nindex 0a5d6cd..dfec935 100644\n--- a/xarray/core/merge.py\n+++ b/xarray/core/merge.py\n@@ -465,9 +465,10 @@ def merge(objects: Iterable[Union['DataArray', 'CoercibleMapping']], compat: str\n         - 'right': use indexes from the last object with each dimension\n         - 'exact': instead of aligning, raise `ValueError` when indexes to be\n           aligned are not equal\n-        - 'override': if indexes are of same size, rewrite indexes to be\n-          those of the first object with that dimension. Indexes for the same\n-          dimension must have the same size in all objects.\n+        - 'override': skip comparing and use variables from the first object\n+          with that dimension. This is useful when you know the dimensions\n+          are aligned, but not equal, and you want the result to have the\n+          same dimensions as the first object.\n     fill_value : scalar, optional\n         Value to use for newly missing values\n     combine_attrs : {'drop', 'identical', 'no_conflicts', 'override'},\n", "normalized_occurrence": 1}
