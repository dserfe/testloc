{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11433", "model_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 74a2377..87ec685 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -46,9 +46,10 @@ def construct_instance(form, instance, fields=None, exclude=None):\n             continue\n         if exclude and f.name in exclude:\n             continue\n-        # Leave defaults for fields that aren't in POST data, except for\n-        # checkbox inputs because they don't appear in POST data if not checked.\n+        # Only keep the default if the field is not in cleaned_data\n+        # and was omitted from the POST data (except for checkboxes)\n         if (f.has_default() and\n+                f.name not in cleaned_data and\n                 form[f.name].field.widget.value_omitted_from_data(form.data, form.files, form.add_prefix(f.name))):\n             continue\n         # Defer saving file-type fields until after the other fields, so a\n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 4660b84..ba0f9ac 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -21,7 +21,7 @@ def construct_instance(form, instance, fields=None, exclude=None):\n             continue\n         if exclude and f.name in exclude:\n             continue\n-        if f.has_default() and form[f.name].field.widget.value_omitted_from_data(form.data, form.files, form.add_prefix(f.name)):\n+        if f.has_default() and f.name not in cleaned_data and form[f.name].field.widget.value_omitted_from_data(form.data, form.files, form.add_prefix(f.name)):\n             continue\n         if isinstance(f, models.FileField):\n             file_field_list.append(f)\n", "normalized_occurrence": 1}
