{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-15809", "model_patch": "diff --git a/sympy/functions/elementary/miscellaneous.py b/sympy/functions/elementary/miscellaneous.py\nindex 430109e..3da941c 100644\n--- a/sympy/functions/elementary/miscellaneous.py\n+++ b/sympy/functions/elementary/miscellaneous.py\n@@ -340,7 +340,8 @@ def real_root(arg, n=None, evaluate=None):\n class MinMaxBase(Expr, LatticeOp):\n     def __new__(cls, *args, **assumptions):\n         if not args:\n-            raise ValueError(\"The Max/Min functions must have arguments.\")\n+            from sympy import oo\n+            return -oo if cls == Min else oo\n \n         args = (sympify(arg) for arg in args)\n \n", "occurrence": 10, "normalized_patch": "diff --git a/sympy/functions/elementary/miscellaneous.py b/sympy/functions/elementary/miscellaneous.py\nindex 655fc4a..9c327e7 100644\n--- a/sympy/functions/elementary/miscellaneous.py\n+++ b/sympy/functions/elementary/miscellaneous.py\n@@ -54,7 +54,8 @@ def real_root(arg, n=None, evaluate=None):\n class MinMaxBase(Expr, LatticeOp):\n     def __new__(cls, *args, **assumptions):\n         if not args:\n-            raise ValueError('The Max/Min functions must have arguments.')\n+            from sympy import oo\n+            return -oo if cls == Min else oo\n         args = (sympify(arg) for arg in args)\n         try:\n             args = frozenset(cls._new_args_filter(args))\n", "normalized_occurrence": 10}
