{"model_name_or_path": "agentless", "instance_id": "django__django-15930", "model_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 47df1a9..4d75948 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -1253,7 +1253,7 @@ class When(Expression):\n                 condition, lookups = Q(**lookups), None\n             elif getattr(condition, \"conditional\", False):\n                 condition, lookups = Q(condition, **lookups), None\n-        if condition is None or not getattr(condition, \"conditional\", False) or lookups:\n+        if condition is None or (not getattr(condition, \"conditional\", False) and not isinstance(condition, Q)) or lookups:\n             raise TypeError(\n                 \"When() supports a Q object, a boolean expression, or lookups \"\n                 \"as a condition.\"\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 1b947ba..9035e25 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -631,7 +631,7 @@ class When(Expression):\n                 condition, lookups = (Q(**lookups), None)\n             elif getattr(condition, 'conditional', False):\n                 condition, lookups = (Q(condition, **lookups), None)\n-        if condition is None or not getattr(condition, 'conditional', False) or lookups:\n+        if condition is None or (not getattr(condition, 'conditional', False) and (not isinstance(condition, Q))) or lookups:\n             raise TypeError('When() supports a Q object, a boolean expression, or lookups as a condition.')\n         if isinstance(condition, Q) and (not condition):\n             raise ValueError(\"An empty Q() can't be used as a When() condition.\")\n", "normalized_occurrence": 1}
