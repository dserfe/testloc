{"model_name_or_path": "agentless_claude", "instance_id": "astropy__astropy-12907", "model_patch": "diff --git a/astropy/modeling/separable.py b/astropy/modeling/separable.py\nindex d6e9246..048e181 100644\n--- a/astropy/modeling/separable.py\n+++ b/astropy/modeling/separable.py\n@@ -199,7 +199,14 @@ def _coord_matrix(model, pos, noutp):\n         else:\n             mat[-model.n_outputs:, -model.n_inputs:] = m\n         return mat\n-    if not model.separable:\n+    if hasattr(model, '_tree'):  # CompoundModel\n+        submat = separability_matrix(model)\n+        mat = np.zeros((noutp, model.n_inputs))\n+        if pos == 'left':\n+            mat[:model.n_outputs, :model.n_inputs] = submat\n+        else:\n+            mat[-model.n_outputs:, -model.n_inputs:] = submat\n+    elif not model.separable:\n         # this does not work for more than 2 coordinates\n         mat = np.zeros((noutp, model.n_inputs))\n         if pos == 'left':\n@@ -208,7 +215,6 @@ def _coord_matrix(model, pos, noutp):\n             mat[-model.n_outputs:, -model.n_inputs:] = 1\n     else:\n         mat = np.zeros((noutp, model.n_inputs))\n-\n         for i in range(model.n_inputs):\n             mat[i, i] = 1\n         if pos == 'right':\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/modeling/separable.py b/astropy/modeling/separable.py\nindex 198a838..1b5f290 100644\n--- a/astropy/modeling/separable.py\n+++ b/astropy/modeling/separable.py\n@@ -54,7 +54,14 @@ def _coord_matrix(model, pos, noutp):\n         else:\n             mat[-model.n_outputs:, -model.n_inputs:] = m\n         return mat\n-    if not model.separable:\n+    if hasattr(model, '_tree'):\n+        submat = separability_matrix(model)\n+        mat = np.zeros((noutp, model.n_inputs))\n+        if pos == 'left':\n+            mat[:model.n_outputs, :model.n_inputs] = submat\n+        else:\n+            mat[-model.n_outputs:, -model.n_inputs:] = submat\n+    elif not model.separable:\n         mat = np.zeros((noutp, model.n_inputs))\n         if pos == 'left':\n             mat[:model.n_outputs, :model.n_inputs] = 1\n", "normalized_occurrence": 1}
