{"model_name_or_path": "agentless", "instance_id": "django__django-14725", "model_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 2db5c72..18bab34 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -573,7 +573,8 @@ class BaseModelFormSet(BaseFormSet):\n     unique_fields = set()\n \n     def __init__(self, data=None, files=None, auto_id='id_%s', prefix=None,\n-                 queryset=None, *, initial=None, **kwargs):\n+                 queryset=None, *, initial=None, can_create=True, **kwargs):\n+        self.can_create = can_create\n         self.queryset = queryset\n         self.initial_extra = initial\n         super().__init__(**{'data': data, 'files': files, 'auto_id': auto_id, 'prefix': prefix, **kwargs})\n@@ -676,7 +677,7 @@ class BaseModelFormSet(BaseFormSet):\n                 for form in self.saved_forms:\n                     form.save_m2m()\n             self.save_m2m = save_m2m\n-        return self.save_existing_objects(commit) + self.save_new_objects(commit)\n+        return self.save_existing_objects(commit) + (self.save_new_objects(commit) if self.can_create else [])\n \n     save.alters_data = True\n \n@@ -894,7 +895,7 @@ def modelformset_factory(model, form=ModelForm, formfield_callback=None,\n                               can_order=can_order, can_delete=can_delete,\n                               validate_min=validate_min, validate_max=validate_max,\n                               absolute_max=absolute_max, can_delete_extra=can_delete_extra,\n-                              renderer=renderer)\n+                              renderer=renderer, can_create=can_create)\n     FormSet.model = model\n     return FormSet\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 7024f2a..96e7ec5 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -273,7 +273,8 @@ def modelform_factory(model, form=ModelForm, fields=None, exclude=None, formfiel\n class BaseModelFormSet(BaseFormSet):\n     model = None\n     unique_fields = set()\n-    def __init__(self, data=None, files=None, auto_id='id_%s', prefix=None, queryset=None, *, initial=None, **kwargs):\n+    def __init__(self, data=None, files=None, auto_id='id_%s', prefix=None, queryset=None, *, initial=None, can_create=True, **kwargs):\n+        self.can_create = can_create\n         self.queryset = queryset\n         self.initial_extra = initial\n         super().__init__(**{'data': data, 'files': files, 'auto_id': auto_id, 'prefix': prefix, **kwargs})\n@@ -341,7 +342,7 @@ class BaseModelFormSet(BaseFormSet):\n                 for form in self.saved_forms:\n                     form.save_m2m()\n             self.save_m2m = save_m2m\n-        return self.save_existing_objects(commit) + self.save_new_objects(commit)\n+        return self.save_existing_objects(commit) + (self.save_new_objects(commit) if self.can_create else [])\n     save.alters_data = True\n     def clean(self):\n         self.validate_unique()\n@@ -459,7 +460,7 @@ def modelformset_factory(model, form=ModelForm, formfield_callback=None, formset\n     if getattr(meta, 'fields', fields) is None and getattr(meta, 'exclude', exclude) is None:\n         raise ImproperlyConfigured(\"Calling modelformset_factory without defining 'fields' or 'exclude' explicitly is prohibited.\")\n     form = modelform_factory(model, form=form, fields=fields, exclude=exclude, formfield_callback=formfield_callback, widgets=widgets, localized_fields=localized_fields, labels=labels, help_texts=help_texts, error_messages=error_messages, field_classes=field_classes)\n-    FormSet = formset_factory(form, formset, extra=extra, min_num=min_num, max_num=max_num, can_order=can_order, can_delete=can_delete, validate_min=validate_min, validate_max=validate_max, absolute_max=absolute_max, can_delete_extra=can_delete_extra, renderer=renderer)\n+    FormSet = formset_factory(form, formset, extra=extra, min_num=min_num, max_num=max_num, can_order=can_order, can_delete=can_delete, validate_min=validate_min, validate_max=validate_max, absolute_max=absolute_max, can_delete_extra=can_delete_extra, renderer=renderer, can_create=can_create)\n     FormSet.model = model\n     return FormSet\n class BaseInlineFormSet(BaseModelFormSet):\n", "normalized_occurrence": 1}
