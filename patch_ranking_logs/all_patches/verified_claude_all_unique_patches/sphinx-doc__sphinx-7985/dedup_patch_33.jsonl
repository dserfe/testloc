{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-7985", "model_patch": "diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py\nindex 4e6b0df..d4cf6a6 100644\n--- a/sphinx/builders/linkcheck.py\n+++ b/sphinx/builders/linkcheck.py\n@@ -213,7 +213,17 @@ class CheckExternalLinksBuilder(Builder):\n             if len(uri) == 0 or uri.startswith(('#', 'mailto:', 'ftp:')):\n                 return 'unchecked', '', 0\n             elif not uri.startswith(('http:', 'https:')):\n-                return 'local', '', 0\n+                # Check if the local target exists in the environment\n+                if uri.startswith('/'):\n+                    uri = uri[1:]  # Remove leading slash\n+                # Check if this is a reference to a document\n+                doc = uri.split('#')[0]  # Remove anchor part\n+                if doc:\n+                    if doc.endswith(('.rst', '.md', '.txt')):\n+                        doc = doc[:-4]  # Remove extension\n+                    if doc not in self.env.all_docs:\n+                        return 'broken', 'document not found', 0\n+                return 'working', '', 0\n             elif uri in self.good:\n                 return 'working', 'old', 0\n             elif uri in self.broken:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py\nindex f6c8f65..7565b10 100644\n--- a/sphinx/builders/linkcheck.py\n+++ b/sphinx/builders/linkcheck.py\n@@ -133,7 +133,15 @@ class CheckExternalLinksBuilder(Builder):\n             if len(uri) == 0 or uri.startswith(('#', 'mailto:', 'ftp:')):\n                 return ('unchecked', '', 0)\n             elif not uri.startswith(('http:', 'https:')):\n-                return ('local', '', 0)\n+                if uri.startswith('/'):\n+                    uri = uri[1:]\n+                doc = uri.split('#')[0]\n+                if doc:\n+                    if doc.endswith(('.rst', '.md', '.txt')):\n+                        doc = doc[:-4]\n+                    if doc not in self.env.all_docs:\n+                        return ('broken', 'document not found', 0)\n+                return ('working', '', 0)\n             elif uri in self.good:\n                 return ('working', 'old', 0)\n             elif uri in self.broken:\n", "normalized_occurrence": 1}
