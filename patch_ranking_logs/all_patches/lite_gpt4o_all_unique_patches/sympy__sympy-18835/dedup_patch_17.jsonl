{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-18835", "model_patch": "diff --git a/sympy/utilities/iterables.py b/sympy/utilities/iterables.py\nindex 57371bf..8718e5d 100644\n--- a/sympy/utilities/iterables.py\n+++ b/sympy/utilities/iterables.py\n@@ -2107,10 +2107,14 @@ def uniq(seq, result=None):\n     [[1], [2, 1]]\n     \"\"\"\n     try:\n+        original_length = len(seq)\n         seen = set()\n         result = result or []\n         for i, s in enumerate(seq):\n-            if not (s in seen or seen.add(s)):\n+            if len(seq) != original_length:\n+                raise RuntimeError(\"dictionary changed size during iteration\")\n+            if s not in seen:\n+                seen.add(s)\n                 yield s\n     except TypeError:\n         if s not in result:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/utilities/iterables.py b/sympy/utilities/iterables.py\nindex 032766e..892ef5a 100644\n--- a/sympy/utilities/iterables.py\n+++ b/sympy/utilities/iterables.py\n@@ -731,10 +731,14 @@ def has_variety(seq):\n     return False\n def uniq(seq, result=None):\n     try:\n+        original_length = len(seq)\n         seen = set()\n         result = result or []\n         for i, s in enumerate(seq):\n-            if not (s in seen or seen.add(s)):\n+            if len(seq) != original_length:\n+                raise RuntimeError('dictionary changed size during iteration')\n+            if s not in seen:\n+                seen.add(s)\n                 yield s\n     except TypeError:\n         if s not in result:\n", "normalized_occurrence": 1}
