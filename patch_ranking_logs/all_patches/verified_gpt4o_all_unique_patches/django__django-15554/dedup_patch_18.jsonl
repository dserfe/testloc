{"model_name_or_path": "agentless", "instance_id": "django__django-15554", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex b69bf1f..f6e0f1c 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -798,7 +798,7 @@ class Query(BaseExpression):\n         most recently created alias for the table (if one exists) is reused.\n         \"\"\"\n         alias_list = self.table_map.get(table_name)\n-        if not create and alias_list:\n+        if not create and alias_list and filtered_relation is None:\n             alias = alias_list[0]\n             self.alias_refcount[alias] += 1\n             return alias, False\n@@ -1570,6 +1570,9 @@ class Query(BaseExpression):\n         return target_clause\n \n     def add_filtered_relation(self, filtered_relation, alias):\n+        existing_alias = self._filtered_relations.get(alias)\n+        if existing_alias:\n+            alias = \"%s%d\" % (self.alias_prefix, len(self.alias_map) + 1)\n         filtered_relation.alias = alias\n         lookups = dict(get_children_from_q(filtered_relation.condition))\n         relation_lookup_parts, relation_field_parts, _ = self.solve_lookup_type(\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex b4ac641..6370ee3 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -426,7 +426,7 @@ class Query(BaseExpression):\n                 callback(target, model, values)\n     def table_alias(self, table_name, create=False, filtered_relation=None):\n         alias_list = self.table_map.get(table_name)\n-        if not create and alias_list:\n+        if not create and alias_list and (filtered_relation is None):\n             alias = alias_list[0]\n             self.alias_refcount[alias] += 1\n             return (alias, False)\n@@ -781,6 +781,9 @@ class Query(BaseExpression):\n             target_clause.add(child_clause, connector)\n         return target_clause\n     def add_filtered_relation(self, filtered_relation, alias):\n+        existing_alias = self._filtered_relations.get(alias)\n+        if existing_alias:\n+            alias = '%s%d' % (self.alias_prefix, len(self.alias_map) + 1)\n         filtered_relation.alias = alias\n         lookups = dict(get_children_from_q(filtered_relation.condition))\n         relation_lookup_parts, relation_field_parts, _ = self.solve_lookup_type(filtered_relation.relation_name)\n", "normalized_occurrence": 1}
