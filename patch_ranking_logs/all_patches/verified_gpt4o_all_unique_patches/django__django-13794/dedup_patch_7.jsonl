{"model_name_or_path": "agentless", "instance_id": "django__django-13794", "model_patch": "diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py\nindex 9115325..2d42d32 100644\n--- a/django/template/defaultfilters.py\n+++ b/django/template/defaultfilters.py\n@@ -678,7 +678,12 @@ def add(value, arg):\n         return int(value) + int(arg)\n     except (ValueError, TypeError):\n         try:\n-            return value + arg\n+            if isinstance(value, str) and isinstance(arg, str):\n+                return value + arg\n+            elif hasattr(value, '__proxy__') or hasattr(arg, '__proxy__'):\n+                return str(value) + str(arg)\n+            else:\n+                return value + arg\n         except Exception:\n             return ''\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py\nindex 3e399af..67e5218 100644\n--- a/django/template/defaultfilters.py\n+++ b/django/template/defaultfilters.py\n@@ -345,7 +345,12 @@ def add(value, arg):\n         return int(value) + int(arg)\n     except (ValueError, TypeError):\n         try:\n-            return value + arg\n+            if isinstance(value, str) and isinstance(arg, str):\n+                return value + arg\n+            elif hasattr(value, '__proxy__') or hasattr(arg, '__proxy__'):\n+                return str(value) + str(arg)\n+            else:\n+                return value + arg\n         except Exception:\n             return ''\n @register.filter(is_safe=False)\n", "normalized_occurrence": 1}
