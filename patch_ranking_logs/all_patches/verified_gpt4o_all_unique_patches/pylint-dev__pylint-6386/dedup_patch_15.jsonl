{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-6386", "model_patch": "diff --git a/pylint/config/option_manager_mixin.py b/pylint/config/option_manager_mixin.py\nindex d22ea01..5029c62 100644\n--- a/pylint/config/option_manager_mixin.py\n+++ b/pylint/config/option_manager_mixin.py\n@@ -166,8 +166,12 @@ class OptionsManagerMixIn:\n             del optdict[\"default\"]\n         args = [\"--\" + str(opt)]\n         if \"short\" in optdict:\n-            self._short_options[optdict[\"short\"]] = opt\n-            args.append(\"-\" + optdict[\"short\"])\n+            short_opt = optdict[\"short\"]\n+            self._short_options[short_opt] = opt\n+            args.append(\"-\" + short_opt)\n+            # Ensure that options with store_true/store_false actions don't expect arguments\n+            if optdict.get(\"action\") in (\"store_true\", \"store_false\"):\n+                self.parser.add_argument(\"-\" + short_opt, action=optdict[\"action\"], help=optdict.get(\"help\", \"\"))\n             del optdict[\"short\"]\n         # cleanup option definition dict before giving it to optik\n         for key in list(optdict.keys()):\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/config/option_manager_mixin.py b/pylint/config/option_manager_mixin.py\nindex 073d6af..a692ef9 100644\n--- a/pylint/config/option_manager_mixin.py\n+++ b/pylint/config/option_manager_mixin.py\n@@ -100,8 +100,11 @@ class OptionsManagerMixIn:\n             del optdict['default']\n         args = ['--' + str(opt)]\n         if 'short' in optdict:\n-            self._short_options[optdict['short']] = opt\n-            args.append('-' + optdict['short'])\n+            short_opt = optdict['short']\n+            self._short_options[short_opt] = opt\n+            args.append('-' + short_opt)\n+            if optdict.get('action') in ('store_true', 'store_false'):\n+                self.parser.add_argument('-' + short_opt, action=optdict['action'], help=optdict.get('help', ''))\n             del optdict['short']\n         for key in list(optdict.keys()):\n             if key not in self._optik_option_attrs:\n", "normalized_occurrence": 1}
