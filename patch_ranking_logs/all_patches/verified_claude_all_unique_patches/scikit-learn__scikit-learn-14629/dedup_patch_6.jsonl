{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-14629", "model_patch": "diff --git a/sklearn/multioutput.py b/sklearn/multioutput.py\nindex 4478402..194285b 100644\n--- a/sklearn/multioutput.py\n+++ b/sklearn/multioutput.py\n@@ -325,6 +325,19 @@ class MultiOutputClassifier(MultiOutputEstimator, ClassifierMixin):\n     def __init__(self, estimator, n_jobs=None):\n         super().__init__(estimator, n_jobs)\n \n+    @property\n+    def classes_(self):\n+        \"\"\"Returns a list of unique classes for each output.\n+        \n+        Returns\n+        -------\n+        classes_ : list of arrays\n+            List of arrays of length ``n_outputs_`` containing the unique\n+            classes labels for each estimator.\n+        \"\"\"\n+        check_is_fitted(self)\n+        return [estimator.classes_ for estimator in self.estimators_]\n+\n     def predict_proba(self, X):\n         \"\"\"Probability estimates.\n         Returns prediction probabilities for each class of each output.\n", "occurrence": 1, "normalized_patch": "--- a/sklearn/multioutput.py\n+++ b/sklearn/multioutput.py\n+    @property\n+    def classes_(self):\n+        check_is_fitted(self)\n+        return [estimator.classes_ for estimator in self.estimators_]", "normalized_occurrence": 30}
