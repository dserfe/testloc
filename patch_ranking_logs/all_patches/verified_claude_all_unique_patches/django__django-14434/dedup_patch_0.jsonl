{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14434", "model_patch": "diff --git a/django/db/backends/base/schema.py b/django/db/backends/base/schema.py\nindex 941fcdc..18df9a3 100644\n--- a/django/db/backends/base/schema.py\n+++ b/django/db/backends/base/schema.py\n@@ -1256,7 +1256,7 @@ class BaseDatabaseSchemaEditor:\n             columns = Expressions(model._meta.db_table, expressions, compiler, self.quote_value)\n         return Statement(\n             sql,\n-            table=table,\n+            table=table.name,\n             name=name,\n             columns=columns,\n             condition=self._index_condition_sql(condition),\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/base/schema.py b/django/db/backends/base/schema.py\nindex d3e3875..4c568a8 100644\n--- a/django/db/backends/base/schema.py\n+++ b/django/db/backends/base/schema.py\n@@ -592,7 +592,7 @@ class BaseDatabaseSchemaEditor:\n             columns = self._index_columns(table, columns, col_suffixes=(), opclasses=opclasses)\n         else:\n             columns = Expressions(model._meta.db_table, expressions, compiler, self.quote_value)\n-        return Statement(sql, table=table, name=name, columns=columns, condition=self._index_condition_sql(condition), deferrable=self._deferrable_constraint_sql(deferrable), include=self._index_include_sql(model, include))\n+        return Statement(sql, table=table.name, name=name, columns=columns, condition=self._index_condition_sql(condition), deferrable=self._deferrable_constraint_sql(deferrable), include=self._index_include_sql(model, include))\n     def _delete_unique_sql(self, model, name, condition=None, deferrable=None, include=None, opclasses=None, expressions=None):\n         if deferrable and (not self.connection.features.supports_deferrable_unique_constraints) or (condition and (not self.connection.features.supports_partial_indexes)) or (include and (not self.connection.features.supports_covering_indexes)) or (expressions and (not self.connection.features.supports_expression_indexes)):\n             return None\n", "normalized_occurrence": 1}
