{"model_name_or_path": "agentless_claude", "instance_id": "mwaskom__seaborn-2848", "model_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 21c0562..b61671b 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -1569,6 +1569,12 @@ class PairGrid(Grid):\n             kwargs.update({\n                 \"hue\": hue, \"hue_order\": self._hue_order, \"palette\": self._orig_palette,\n             })\n+        else:\n+            # If hue is provided directly, ensure it has the same length as x and y\n+            hue = kwargs[\"hue\"]\n+            if hasattr(hue, \"iloc\"):  # Handle pandas Series\n+                hue = hue.iloc[data.index]\n+            kwargs[\"hue\"] = hue\n         func(x=x, y=y, **kwargs)\n \n         self._update_legend_data(ax)\n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 0807052..37c950e 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -749,6 +749,11 @@ class PairGrid(Grid):\n             hue = data.get(self._hue_var)\n         if 'hue' not in kwargs:\n             kwargs.update({'hue': hue, 'hue_order': self._hue_order, 'palette': self._orig_palette})\n+        else:\n+            hue = kwargs['hue']\n+            if hasattr(hue, 'iloc'):\n+                hue = hue.iloc[data.index]\n+            kwargs['hue'] = hue\n         func(x=x, y=y, **kwargs)\n         self._update_legend_data(ax)\n     def _plot_bivariate_iter_hue(self, x_var, y_var, ax, func, **kwargs):\n", "normalized_occurrence": 1}
