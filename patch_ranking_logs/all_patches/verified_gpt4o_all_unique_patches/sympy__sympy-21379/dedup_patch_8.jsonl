{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-21379", "model_patch": "diff --git a/sympy/functions/elementary/piecewise.py b/sympy/functions/elementary/piecewise.py\nindex 218f537..24ca89c 100644\n--- a/sympy/functions/elementary/piecewise.py\n+++ b/sympy/functions/elementary/piecewise.py\n@@ -822,6 +822,12 @@ class Piecewise(Function):\n                 break\n         if not args_exist:\n             args = ((Undefined, True),)\n+        # Handle real assumptions\n+        if old.is_real and new.is_real:\n+            for i, (e, c) in enumerate(args):\n+                if c.has(Piecewise):\n+                    c = c.simplify()\n+                args[i] = (e, c)\n         return self.func(*args)\n \n     def _eval_transpose(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/piecewise.py b/sympy/functions/elementary/piecewise.py\nindex e1c61a2..fe6931e 100644\n--- a/sympy/functions/elementary/piecewise.py\n+++ b/sympy/functions/elementary/piecewise.py\n@@ -453,6 +453,11 @@ class Piecewise(Function):\n                 break\n         if not args_exist:\n             args = ((Undefined, True),)\n+        if old.is_real and new.is_real:\n+            for i, (e, c) in enumerate(args):\n+                if c.has(Piecewise):\n+                    c = c.simplify()\n+                args[i] = (e, c)\n         return self.func(*args)\n     def _eval_transpose(self):\n         return self.func(*[(e.transpose(), c) for e, c in self.args])\n", "normalized_occurrence": 1}
