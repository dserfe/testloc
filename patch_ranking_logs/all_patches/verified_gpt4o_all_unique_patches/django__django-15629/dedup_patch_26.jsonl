{"model_name_or_path": "agentless", "instance_id": "django__django-15629", "model_patch": "diff --git a/django/db/backends/mysql/schema.py b/django/db/backends/mysql/schema.py\nindex a65d38d..c6ace42 100644\n--- a/django/db/backends/mysql/schema.py\n+++ b/django/db/backends/mysql/schema.py\n@@ -166,9 +166,12 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):\n         return new_type\n \n     def _alter_column_type_sql(self, model, old_field, new_field, new_type):\n+        # Ensure collation is applied to foreign key fields as well\n+        if getattr(new_field, 'db_collation', None):\n+            new_type += \" COLLATE \" + new_field.db_collation\n         new_type = self._set_field_new_type_null_status(old_field, new_type)\n         return super()._alter_column_type_sql(model, old_field, new_field, new_type)\n \n     def _rename_field_sql(self, table, old_field, new_field, new_type):\n         new_type = self._set_field_new_type_null_status(old_field, new_type)\n-        return super()._rename_field_sql(table, old_field, new_field, new_type)\n+        return super()._rename_field_sql(table, old_field, new_field, new_type)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/mysql/schema.py b/django/db/backends/mysql/schema.py\nindex a0e95ce..e7daf87 100644\n--- a/django/db/backends/mysql/schema.py\n+++ b/django/db/backends/mysql/schema.py\n@@ -82,6 +82,8 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):\n             new_type += ' NOT NULL'\n         return new_type\n     def _alter_column_type_sql(self, model, old_field, new_field, new_type):\n+        if getattr(new_field, 'db_collation', None):\n+            new_type += ' COLLATE ' + new_field.db_collation\n         new_type = self._set_field_new_type_null_status(old_field, new_type)\n         return super()._alter_column_type_sql(model, old_field, new_field, new_type)\n     def _rename_field_sql(self, table, old_field, new_field, new_type):\n", "normalized_occurrence": 1}
