{"model_name_or_path": "agentless", "instance_id": "django__django-14725", "model_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 2db5c72..c337c3a 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -575,6 +575,7 @@ class BaseModelFormSet(BaseFormSet):\n     def __init__(self, data=None, files=None, auto_id='id_%s', prefix=None,\n                  queryset=None, *, initial=None, **kwargs):\n         self.queryset = queryset\n+        self.can_create = kwargs.pop('can_create', True)\n         self.initial_extra = initial\n         super().__init__(**{'data': data, 'files': files, 'auto_id': auto_id, 'prefix': prefix, **kwargs})\n \n@@ -818,7 +819,7 @@ class BaseModelFormSet(BaseFormSet):\n                 continue\n             # If someone has marked an add form for deletion, don't save the\n             # object.\n-            if self.can_delete and self._should_delete_form(form):\n+            if (self.can_delete and self._should_delete_form(form)) or (not self.can_create and i >= self.initial_form_count()):\n                 continue\n             self.new_objects.append(self.save_new(form, commit=commit))\n             if not commit:\n@@ -874,7 +875,7 @@ def modelformset_factory(model, form=ModelForm, formfield_callback=None,\n                          can_order=False, max_num=None, fields=None, exclude=None,\n                          widgets=None, validate_max=False, localized_fields=None,\n                          labels=None, help_texts=None, error_messages=None,\n-                         min_num=None, validate_min=False, field_classes=None,\n+                         min_num=None, validate_min=False, field_classes=None, can_create=True,\n                          absolute_max=None, can_delete_extra=True, renderer=None):\n     \"\"\"Return a FormSet class for the given Django model class.\"\"\"\n     meta = getattr(form, 'Meta', None)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 7024f2a..8409a9e 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -275,6 +275,7 @@ class BaseModelFormSet(BaseFormSet):\n     unique_fields = set()\n     def __init__(self, data=None, files=None, auto_id='id_%s', prefix=None, queryset=None, *, initial=None, **kwargs):\n         self.queryset = queryset\n+        self.can_create = kwargs.pop('can_create', True)\n         self.initial_extra = initial\n         super().__init__(**{'data': data, 'files': files, 'auto_id': auto_id, 'prefix': prefix, **kwargs})\n     def initial_form_count(self):\n@@ -421,7 +422,7 @@ class BaseModelFormSet(BaseFormSet):\n         for form in self.extra_forms:\n             if not form.has_changed():\n                 continue\n-            if self.can_delete and self._should_delete_form(form):\n+            if self.can_delete and self._should_delete_form(form) or (not self.can_create and i >= self.initial_form_count()):\n                 continue\n             self.new_objects.append(self.save_new(form, commit=commit))\n             if not commit:\n@@ -454,7 +455,7 @@ class BaseModelFormSet(BaseFormSet):\n                 widget = HiddenInput\n             form.fields[self._pk_field.name] = ModelChoiceField(qs, initial=pk_value, required=False, widget=widget)\n         super().add_fields(form, index)\n-def modelformset_factory(model, form=ModelForm, formfield_callback=None, formset=BaseModelFormSet, extra=1, can_delete=False, can_order=False, max_num=None, fields=None, exclude=None, widgets=None, validate_max=False, localized_fields=None, labels=None, help_texts=None, error_messages=None, min_num=None, validate_min=False, field_classes=None, absolute_max=None, can_delete_extra=True, renderer=None):\n+def modelformset_factory(model, form=ModelForm, formfield_callback=None, formset=BaseModelFormSet, extra=1, can_delete=False, can_order=False, max_num=None, fields=None, exclude=None, widgets=None, validate_max=False, localized_fields=None, labels=None, help_texts=None, error_messages=None, min_num=None, validate_min=False, field_classes=None, can_create=True, absolute_max=None, can_delete_extra=True, renderer=None):\n     meta = getattr(form, 'Meta', None)\n     if getattr(meta, 'fields', fields) is None and getattr(meta, 'exclude', exclude) is None:\n         raise ImproperlyConfigured(\"Calling modelformset_factory without defining 'fields' or 'exclude' explicitly is prohibited.\")\n", "normalized_occurrence": 1}
