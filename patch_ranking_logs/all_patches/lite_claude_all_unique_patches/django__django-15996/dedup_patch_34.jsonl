{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15996", "model_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex cdbac1f..f4c6cd3 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -125,6 +125,14 @@ class EnumSerializer(BaseSerializer):\n     def serialize(self):\n         enum_class = self.value.__class__\n         module = enum_class.__module__\n+        # Handle combined flags case\n+        if hasattr(enum_class, '_decompose'):\n+            names = []\n+            for flag in enum_class._decompose(self.value):\n+                names.append(\"%s.%s.%s\" % (module, enum_class.__qualname__, flag.name))\n+            if names:\n+                return \" | \".join(names), {\"import %s\" % module}\n+        # Default case for single enum values\n         return (\n             \"%s.%s[%r]\" % (module, enum_class.__qualname__, self.value.name),\n             {\"import %s\" % module},\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex 08e9db0..f485588 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -92,6 +92,12 @@ class EnumSerializer(BaseSerializer):\n     def serialize(self):\n         enum_class = self.value.__class__\n         module = enum_class.__module__\n+        if hasattr(enum_class, '_decompose'):\n+            names = []\n+            for flag in enum_class._decompose(self.value):\n+                names.append('%s.%s.%s' % (module, enum_class.__qualname__, flag.name))\n+            if names:\n+                return (' | '.join(names), {'import %s' % module})\n         return ('%s.%s[%r]' % (module, enum_class.__qualname__, self.value.name), {'import %s' % module})\n class FloatSerializer(BaseSimpleSerializer):\n     def serialize(self):\n", "normalized_occurrence": 2}
