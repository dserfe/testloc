{"model_name_or_path": "agentless", "instance_id": "django__django-16116", "model_patch": "diff --git a/django/core/management/commands/makemigrations.py b/django/core/management/commands/makemigrations.py\nindex f0e76b4..d771b42 100644\n--- a/django/core/management/commands/makemigrations.py\n+++ b/django/core/management/commands/makemigrations.py\n@@ -210,6 +210,12 @@ class Command(BaseCommand):\n             questioner,\n         )\n \n+        if check_changes:\n+            if changes:\n+                sys.exit(1)\n+            else:\n+                sys.exit(0)\n+\n         # If they want to make an empty migration, make one for each app\n         if self.empty:\n             if not app_labels:\n", "occurrence": 2, "normalized_patch": "diff --git a/django/core/management/commands/makemigrations.py b/django/core/management/commands/makemigrations.py\nindex be2b711..3207183 100644\n--- a/django/core/management/commands/makemigrations.py\n+++ b/django/core/management/commands/makemigrations.py\n@@ -87,6 +87,11 @@ class Command(BaseCommand):\n         else:\n             questioner = NonInteractiveMigrationQuestioner(specified_apps=app_labels, dry_run=self.dry_run, verbosity=self.verbosity, log=self.log)\n         autodetector = MigrationAutodetector(loader.project_state(), ProjectState.from_apps(apps), questioner)\n+        if check_changes:\n+            if changes:\n+                sys.exit(1)\n+            else:\n+                sys.exit(0)\n         if self.empty:\n             if not app_labels:\n                 raise CommandError('You must supply at least one app label when using --empty.')\n", "normalized_occurrence": 3}
