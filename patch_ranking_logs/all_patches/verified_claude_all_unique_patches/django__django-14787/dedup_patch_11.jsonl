{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14787", "model_patch": "diff --git a/django/utils/decorators.py b/django/utils/decorators.py\nindex 9a57ac9..530b3c0 100644\n--- a/django/utils/decorators.py\n+++ b/django/utils/decorators.py\n@@ -16,7 +16,11 @@ def _update_method_wrapper(_wrapper, decorator):\n     @decorator\n     def dummy(*args, **kwargs):\n         pass\n+    # Get any attributes that the decorator adds to the function\n     update_wrapper(_wrapper, dummy)\n+    # Get the attributes from the original method too\n+    if hasattr(_wrapper, '__wrapped__'):\n+        update_wrapper(_wrapper, _wrapper.__wrapped__)\n \n \n def _multi_decorate(decorators, method):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/decorators.py b/django/utils/decorators.py\nindex 7f6be4d..a0090bc 100644\n--- a/django/utils/decorators.py\n+++ b/django/utils/decorators.py\n@@ -9,6 +9,8 @@ def _update_method_wrapper(_wrapper, decorator):\n     def dummy(*args, **kwargs):\n         pass\n     update_wrapper(_wrapper, dummy)\n+    if hasattr(_wrapper, '__wrapped__'):\n+        update_wrapper(_wrapper, _wrapper.__wrapped__)\n def _multi_decorate(decorators, method):\n     if hasattr(decorators, '__iter__'):\n         decorators = decorators[::-1]\n", "normalized_occurrence": 1}
