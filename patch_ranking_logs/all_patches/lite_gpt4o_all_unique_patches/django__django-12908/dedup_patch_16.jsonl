{"model_name_or_path": "agentless", "instance_id": "django__django-12908", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex a26bee7..3de925d 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -479,6 +479,14 @@ class SQLCompiler:\n         params = []\n         for part in args_parts:\n             params.extend(part)\n+        \n+        # Handle DISTINCT ON fields for the combined query\n+        if self.query.distinct and self.query.distinct_fields:\n+            distinct_fields_sql, distinct_params = self.get_distinct()\n+            distinct_sql = 'DISTINCT ON ({}) '.format(', '.join(distinct_fields_sql))\n+            result.insert(0, distinct_sql)\n+            params = distinct_params + params\n+        \n         return result, params\n \n     def as_sql(self, with_limits=True, with_col_aliases=False):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex e6a07a3..b73cc16 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -271,6 +271,11 @@ class SQLCompiler:\n         params = []\n         for part in args_parts:\n             params.extend(part)\n+        if self.query.distinct and self.query.distinct_fields:\n+            distinct_fields_sql, distinct_params = self.get_distinct()\n+            distinct_sql = 'DISTINCT ON ({}) '.format(', '.join(distinct_fields_sql))\n+            result.insert(0, distinct_sql)\n+            params = distinct_params + params\n         return (result, params)\n     def as_sql(self, with_limits=True, with_col_aliases=False):\n         refcounts_before = self.query.alias_refcount.copy()\n", "normalized_occurrence": 1}
