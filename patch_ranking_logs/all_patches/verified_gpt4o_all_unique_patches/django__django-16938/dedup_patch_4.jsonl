{"model_name_or_path": "agentless", "instance_id": "django__django-16938", "model_patch": "diff --git a/django/db/models/query_utils.py b/django/db/models/query_utils.py\nindex 4465765..24ec409 100644\n--- a/django/db/models/query_utils.py\n+++ b/django/db/models/query_utils.py\n@@ -341,8 +341,8 @@ def select_related_descend(field, restricted, requested, select_mask, reverse=Fa\n     if (\n         restricted\n         and select_mask\n-        and field.name in requested\n-        and field not in select_mask\n+        and (field.name in requested or field.attname in requested)\n+        and (field not in select_mask and field.attname not in select_mask)\n     ):\n         raise FieldError(\n             f\"Field {field.model._meta.object_name}.{field.name} cannot be both \"\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query_utils.py b/django/db/models/query_utils.py\nindex 0f80339..b716712 100644\n--- a/django/db/models/query_utils.py\n+++ b/django/db/models/query_utils.py\n@@ -195,7 +195,7 @@ def select_related_descend(field, restricted, requested, select_mask, reverse=Fa\n             return False\n     if not restricted and field.null:\n         return False\n-    if restricted and select_mask and (field.name in requested) and (field not in select_mask):\n+    if restricted and select_mask and (field.name in requested or field.attname in requested) and (field not in select_mask and field.attname not in select_mask):\n         raise FieldError(f'Field {field.model._meta.object_name}.{field.name} cannot be both deferred and traversed using select_related at the same time.')\n     return True\n def refs_expression(lookup_parts, annotations):\n", "normalized_occurrence": 1}
