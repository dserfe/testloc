{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-25747", "model_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex a73e544..e2f089b 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -860,7 +860,7 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n                 # verbose_feature_names_out=True.\n \n                 if not self.verbose_feature_names_out:\n-                    return output\n+                    return output.reset_index(drop=True)\n \n                 transformer_names = [\n                     t[0] for t in self._iter(fitted=True, replace_strings=True)\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex 86b0bab..bbc263d 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -256,7 +256,7 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n                 pd = check_pandas_support('transform')\n                 output = pd.concat(Xs, axis=1)\n                 if not self.verbose_feature_names_out:\n-                    return output\n+                    return output.reset_index(drop=True)\n                 transformer_names = [t[0] for t in self._iter(fitted=True, replace_strings=True)]\n                 feature_names_outs = [X.columns for X in Xs if X.shape[1] != 0]\n                 names_out = self._add_prefix_for_feature_names_out(list(zip(transformer_names, feature_names_outs)))\n", "normalized_occurrence": 1}
