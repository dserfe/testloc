{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-10949", "model_patch": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex 7e2fa63..1eaa03a 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -461,7 +461,11 @@ def check_array(array, accept_sparse=False, accept_large_sparse=True,\n     # store whether originally we wanted numeric dtype\n     dtype_numeric = isinstance(dtype, six.string_types) and dtype == \"numeric\"\n \n-    dtype_orig = getattr(array, \"dtype\", None)\n+    if hasattr(array, 'dtypes') and hasattr(array, 'select_dtypes'):\n+        # pandas dataframe\n+        dtype_orig = array.dtypes.iloc[0]\n+    else:\n+        dtype_orig = getattr(array, \"dtype\", None)\n     if not hasattr(dtype_orig, 'kind'):\n         # not a data type (e.g. a column named dtype in a pandas DataFrame)\n         dtype_orig = None\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex 7db8b51..11dd0e9 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -125,7 +125,10 @@ def check_array(array, accept_sparse=False, accept_large_sparse=True, dtype='num\n         accept_sparse = False\n     array_orig = array\n     dtype_numeric = isinstance(dtype, six.string_types) and dtype == 'numeric'\n-    dtype_orig = getattr(array, 'dtype', None)\n+    if hasattr(array, 'dtypes') and hasattr(array, 'select_dtypes'):\n+        dtype_orig = array.dtypes.iloc[0]\n+    else:\n+        dtype_orig = getattr(array, 'dtype', None)\n     if not hasattr(dtype_orig, 'kind'):\n         dtype_orig = None\n     if dtype_numeric:\n", "normalized_occurrence": 1}
