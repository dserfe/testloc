{"model_name_or_path": "agentless", "instance_id": "mwaskom__seaborn-3407", "model_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 29c361e..7a49964 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -1241,6 +1241,10 @@ class PairGrid(Grid):\n \n         super().__init__()\n \n+        # Flatten the columns if MultiIndex\n+        if isinstance(data.columns, pd.MultiIndex):\n+            data.columns = ['_'.join(map(str, col)) for col in data.columns]\n+\n         # Sort out the variables that define the grid\n         numeric_cols = self._find_numeric_cols(data)\n         if hue in numeric_cols:\n@@ -1487,7 +1491,10 @@ class PairGrid(Grid):\n             else:\n                 plt.sca(ax)\n \n-            vector = self.data[var]\n+            try:\n+                vector = self.data[var]\n+            except KeyError:\n+                vector = self.data.loc[:, [var]]\n             if self._hue_var is not None:\n                 hue = self.data[self._hue_var]\n             else:\n@@ -1516,7 +1523,10 @@ class PairGrid(Grid):\n         fixed_color = kwargs.pop(\"color\", None)\n \n         for var, ax in zip(self.diag_vars, self.diag_axes):\n-            hue_grouped = self.data[var].groupby(self.hue_vals)\n+            try:\n+                hue_grouped = self.data[var].groupby(self.hue_vals)\n+            except KeyError:\n+                hue_grouped = self.data.loc[:, [var]].groupby(self.hue_vals)\n \n             plot_kwargs = kwargs.copy()\n             if str(func.__module__).startswith(\"seaborn\"):\n@@ -2111,6 +2121,10 @@ def pairplot(\n \n     # Set up the PairGrid\n     grid_kws.setdefault(\"diag_sharey\", diag_kind == \"hist\")\n+    # Flatten the columns if MultiIndex\n+    if isinstance(data.columns, pd.MultiIndex):\n+        data.columns = ['_'.join(map(str, col)) for col in data.columns]\n+    \n     grid = PairGrid(data, vars=vars, x_vars=x_vars, y_vars=y_vars, hue=hue,\n                     hue_order=hue_order, palette=palette, corner=corner,\n                     height=height, aspect=aspect, dropna=dropna, **grid_kws)\n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 039b44a..1e3e883 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -534,6 +534,8 @@ class FacetGrid(Grid):\n class PairGrid(Grid):\n     def __init__(self, data, *, hue=None, vars=None, x_vars=None, y_vars=None, hue_order=None, palette=None, hue_kws=None, corner=False, diag_sharey=True, height=2.5, aspect=1, layout_pad=0.5, despine=True, dropna=False):\n         super().__init__()\n+        if isinstance(data.columns, pd.MultiIndex):\n+            data.columns = ['_'.join(map(str, col)) for col in data.columns]\n         numeric_cols = self._find_numeric_cols(data)\n         if hue in numeric_cols:\n             numeric_cols.remove(hue)\n@@ -666,7 +668,10 @@ class PairGrid(Grid):\n                 plot_kwargs['ax'] = ax\n             else:\n                 plt.sca(ax)\n-            vector = self.data[var]\n+            try:\n+                vector = self.data[var]\n+            except KeyError:\n+                vector = self.data.loc[:, [var]]\n             if self._hue_var is not None:\n                 hue = self.data[self._hue_var]\n             else:\n@@ -688,7 +693,10 @@ class PairGrid(Grid):\n     def _map_diag_iter_hue(self, func, **kwargs):\n         fixed_color = kwargs.pop('color', None)\n         for var, ax in zip(self.diag_vars, self.diag_axes):\n-            hue_grouped = self.data[var].groupby(self.hue_vals)\n+            try:\n+                hue_grouped = self.data[var].groupby(self.hue_vals)\n+            except KeyError:\n+                hue_grouped = self.data.loc[:, [var]].groupby(self.hue_vals)\n             plot_kwargs = kwargs.copy()\n             if str(func.__module__).startswith('seaborn'):\n                 plot_kwargs['ax'] = ax\n@@ -939,6 +947,8 @@ def pairplot(data, *, hue=None, hue_order=None, palette=None, vars=None, x_vars=\n         else:\n             diag_kind = 'hist' if kind == 'hist' else 'kde'\n     grid_kws.setdefault('diag_sharey', diag_kind == 'hist')\n+    if isinstance(data.columns, pd.MultiIndex):\n+        data.columns = ['_'.join(map(str, col)) for col in data.columns]\n     grid = PairGrid(data, vars=vars, x_vars=x_vars, y_vars=y_vars, hue=hue, hue_order=hue_order, palette=palette, corner=corner, height=height, aspect=aspect, dropna=dropna, **grid_kws)\n     if markers is not None:\n         if kind == 'reg':\n", "normalized_occurrence": 1}
