{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-20590", "model_patch": "diff --git a/sympy/core/basic.py b/sympy/core/basic.py\nindex 87da872..eb20c29 100644\n--- a/sympy/core/basic.py\n+++ b/sympy/core/basic.py\n@@ -74,6 +74,9 @@ class Basic(Printable, metaclass=ManagedProperties):\n                  '_assumptions'\n                 )\n \n+    # Prevent creation of __dict__ in subclasses\n+    __dict__ = None\n+\n     # To be overridden with True in the appropriate subclasses\n     is_number = False\n     is_Atom = False\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/basic.py b/sympy/core/basic.py\nindex d8b6046..a32d287 100644\n--- a/sympy/core/basic.py\n+++ b/sympy/core/basic.py\n@@ -15,6 +15,7 @@ def as_Basic(expr):\n         raise TypeError('Argument must be a Basic object, not `%s`' % func_name(expr))\n class Basic(Printable, metaclass=ManagedProperties):\n     __slots__ = ('_mhash', '_args', '_assumptions')\n+    __dict__ = None\n     is_number = False\n     is_Atom = False\n     is_Symbol = False\n", "normalized_occurrence": 1}
