{"model_name_or_path": "agentless", "instance_id": "django__django-11564", "model_patch": "diff --git a/django/template/defaulttags.py b/django/template/defaulttags.py\nindex 3fb46e2..6e87951 100644\n--- a/django/template/defaulttags.py\n+++ b/django/template/defaulttags.py\n@@ -418,6 +418,24 @@ class TemplateTagNode(Node):\n         return self.mapping.get(self.tagtype, '')\n \n \n+class StaticNode(Node):\n+    def __init__(self, url, varname=None):\n+        self.url = url\n+        self.varname = varname\n+\n+    def render(self, context):\n+        url = self.url.resolve(context)\n+        request = context.get('request', None)\n+        if request:\n+            script_name = request.META.get('SCRIPT_NAME', '')\n+            if script_name:\n+                url = script_name.rstrip('/') + '/' + url.lstrip('/')\n+        if self.varname is None:\n+            return url\n+        context[self.varname] = url\n+        return ''\n+      \n+\n class URLNode(Node):\n     def __init__(self, view_name, args, kwargs, asvar):\n         self.view_name = view_name\n", "occurrence": 1, "normalized_patch": "--- a/django/template/defaulttags.py\n+++ b/django/template/defaulttags.py\n+class StaticNode(Node):\n+    def __init__(self, url, varname=None):\n+        self.url = url\n+        self.varname = varname\n+    def render(self, context):\n+        url = self.url.resolve(context)\n+        request = context.get('request', None)\n+        if request:\n+            script_name = request.META.get('SCRIPT_NAME', '')\n+            if script_name:\n+                url = script_name.rstrip('/') + '/' + url.lstrip('/')\n+        if self.varname is None:\n+            return url\n+        context[self.varname] = url\n+        return ''", "normalized_occurrence": 1}
