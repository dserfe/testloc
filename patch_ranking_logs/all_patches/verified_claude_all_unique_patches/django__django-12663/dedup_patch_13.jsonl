{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12663", "model_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex 141497c..bc445a5 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -1769,6 +1769,8 @@ class IntegerField(Field):\n         if value is None:\n             return None\n         try:\n+            if hasattr(value, '_proxy____cast'):\n+                value = value._proxy____cast()\n             return int(value)\n         except (TypeError, ValueError) as e:\n             raise e.__class__(\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex 0ec64fa..45bb0a8 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -889,6 +889,8 @@ class IntegerField(Field):\n         if value is None:\n             return None\n         try:\n+            if hasattr(value, '_proxy____cast'):\n+                value = value._proxy____cast()\n             return int(value)\n         except (TypeError, ValueError) as e:\n             raise e.__class__(\"Field '%s' expected a number but got %r.\" % (self.name, value)) from e\n", "normalized_occurrence": 1}
