{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-11870", "model_patch": "diff --git a/sympy/functions/elementary/exponential.py b/sympy/functions/elementary/exponential.py\nindex 67a8b07..2474798 100644\n--- a/sympy/functions/elementary/exponential.py\n+++ b/sympy/functions/elementary/exponential.py\n@@ -452,6 +452,15 @@ class exp(ExpBase):\n         from sympy import tanh\n         return (1 + tanh(arg/2))/(1 - tanh(arg/2))\n \n+    def _eval_rewrite_as_trigonometric(self, arg):\n+        from sympy import sin, cos, I\n+        if arg.has(I):\n+            # Handle exponential with imaginary argument\n+            if arg.is_Mul and I in arg.args:\n+                # For exp(I*x), return cos(x) + I*sin(x)\n+                real_arg = arg / I\n+                return cos(real_arg) + I*sin(real_arg)\n+\n \n class log(Function):\n     r\"\"\"\n", "occurrence": 1, "normalized_patch": "--- a/sympy/functions/elementary/exponential.py\n+++ b/sympy/functions/elementary/exponential.py\n+    def _eval_rewrite_as_trigonometric(self, arg):\n+        from sympy import sin, cos, I\n+        if arg.has(I):\n+            if arg.is_Mul and I in arg.args:\n+                real_arg = arg / I\n+                return cos(real_arg) + I * sin(real_arg)", "normalized_occurrence": 1}
