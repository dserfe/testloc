{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15503", "model_patch": "diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py\nindex 0a76a39..bc23643 100644\n--- a/django/db/models/fields/json.py\n+++ b/django/db/models/fields/json.py\n@@ -227,6 +227,18 @@ class HasKeyLookup(PostgresOperatorLookup):\n         return super().as_postgresql(compiler, connection)\n \n     def as_sqlite(self, compiler, connection):\n+        if isinstance(self.rhs, (list, tuple)):\n+            paths = []\n+            for key in self.rhs:\n+                if isinstance(key, str) and key.isnumeric():\n+                    paths.append(f'$.\"{key}\"')\n+                else:\n+                    paths.append(f'$.{key}')\n+            self.rhs = paths\n+        elif isinstance(self.rhs, str) and self.rhs.isnumeric():\n+            self.rhs = f'$.\"{self.rhs}\"'\n+        else:\n+            self.rhs = f'$.{self.rhs}'\n         return self.as_sql(\n             compiler, connection, template=\"JSON_TYPE(%s, %%s) IS NOT NULL\"\n         )\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py\nindex 272d7b8..0801467 100644\n--- a/django/db/models/fields/json.py\n+++ b/django/db/models/fields/json.py\n@@ -141,6 +141,18 @@ class HasKeyLookup(PostgresOperatorLookup):\n             self.rhs = rhs_key_transforms[-1]\n         return super().as_postgresql(compiler, connection)\n     def as_sqlite(self, compiler, connection):\n+        if isinstance(self.rhs, (list, tuple)):\n+            paths = []\n+            for key in self.rhs:\n+                if isinstance(key, str) and key.isnumeric():\n+                    paths.append(f'$.\"{key}\"')\n+                else:\n+                    paths.append(f'$.{key}')\n+            self.rhs = paths\n+        elif isinstance(self.rhs, str) and self.rhs.isnumeric():\n+            self.rhs = f'$.\"{self.rhs}\"'\n+        else:\n+            self.rhs = f'$.{self.rhs}'\n         return self.as_sql(compiler, connection, template='JSON_TYPE(%s, %%s) IS NOT NULL')\n class HasKey(HasKeyLookup):\n     lookup_name = 'has_key'\n", "normalized_occurrence": 1}
