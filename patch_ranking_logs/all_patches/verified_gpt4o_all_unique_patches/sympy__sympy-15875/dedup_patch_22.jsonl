{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-15875", "model_patch": "diff --git a/sympy/core/add.py b/sympy/core/add.py\nindex 1046af8..93ea836 100644\n--- a/sympy/core/add.py\n+++ b/sympy/core/add.py\n@@ -538,32 +538,29 @@ class Add(Expr, AssocOp):\n         z = 0\n         im_or_z = False\n         im = False\n+        has_reals = has_imags = has_nz_real = has_nz_imag = False\n         for a in self.args:\n+            if a.is_real is None or a.is_imaginary is None:\n+                return None\n             if a.is_real:\n-                if a.is_zero:\n-                    z += 1\n-                elif a.is_zero is False:\n-                    nz.append(a)\n-                else:\n-                    return\n+                has_reals = True\n+                if a.is_zero is False:\n+                    has_nz_real = True\n             elif a.is_imaginary:\n-                im = True\n-            elif (S.ImaginaryUnit*a).is_real:\n-                im_or_z = True\n+                has_imags = True\n+                if a.is_zero is False:\n+                    has_nz_imag = True\n             else:\n-                return\n-        if z == len(self.args):\n+                return None\n+        if not has_reals and not has_imags:\n             return True\n-        if len(nz) == len(self.args):\n-            return None\n-        b = self.func(*nz)\n-        if b.is_zero:\n-            if not im_or_z and not im:\n-                return True\n-            if im and not im_or_z:\n-                return False\n-        if b.is_zero is False:\n-            return False\n+        if has_reals and has_imags and not (has_nz_real or has_nz_imag):\n+            return True\n+        if has_reals and not has_imags:\n+            return has_nz_real and not has_nz_imag\n+        if has_imags and not has_reals:\n+            return has_nz_imag and not has_nz_real\n+        return None\n \n     def _eval_is_odd(self):\n         l = [f for f in self.args if not (f.is_even is True)]\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/add.py b/sympy/core/add.py\nindex 63cb816..b73ce35 100644\n--- a/sympy/core/add.py\n+++ b/sympy/core/add.py\n@@ -292,32 +292,29 @@ class Add(Expr, AssocOp):\n         z = 0\n         im_or_z = False\n         im = False\n+        has_reals = has_imags = has_nz_real = has_nz_imag = False\n         for a in self.args:\n+            if a.is_real is None or a.is_imaginary is None:\n+                return None\n             if a.is_real:\n-                if a.is_zero:\n-                    z += 1\n-                elif a.is_zero is False:\n-                    nz.append(a)\n-                else:\n-                    return\n+                has_reals = True\n+                if a.is_zero is False:\n+                    has_nz_real = True\n             elif a.is_imaginary:\n-                im = True\n-            elif (S.ImaginaryUnit * a).is_real:\n-                im_or_z = True\n+                has_imags = True\n+                if a.is_zero is False:\n+                    has_nz_imag = True\n             else:\n-                return\n-        if z == len(self.args):\n+                return None\n+        if not has_reals and (not has_imags):\n             return True\n-        if len(nz) == len(self.args):\n-            return None\n-        b = self.func(*nz)\n-        if b.is_zero:\n-            if not im_or_z and (not im):\n-                return True\n-            if im and (not im_or_z):\n-                return False\n-        if b.is_zero is False:\n-            return False\n+        if has_reals and has_imags and (not (has_nz_real or has_nz_imag)):\n+            return True\n+        if has_reals and (not has_imags):\n+            return has_nz_real and (not has_nz_imag)\n+        if has_imags and (not has_reals):\n+            return has_nz_imag and (not has_nz_real)\n+        return None\n     def _eval_is_odd(self):\n         l = [f for f in self.args if not f.is_even is True]\n         if not l:\n", "normalized_occurrence": 1}
