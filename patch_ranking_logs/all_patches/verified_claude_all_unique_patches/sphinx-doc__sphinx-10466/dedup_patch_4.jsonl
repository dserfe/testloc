{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-10466", "model_patch": "diff --git a/sphinx/builders/gettext.py b/sphinx/builders/gettext.py\nindex c138802..2becee5 100644\n--- a/sphinx/builders/gettext.py\n+++ b/sphinx/builders/gettext.py\n@@ -57,7 +57,8 @@ class Catalog:\n \n     def __iter__(self) -> Generator[Message, None, None]:\n         for message in self.messages:\n-            positions = [(source, line) for source, line, uuid in self.metadata[message]]\n+            # Convert to set to remove duplicates, then back to list\n+            positions = list(set((source, line) for source, line, uuid in self.metadata[message]))\n             uuids = [uuid for source, line, uuid in self.metadata[message]]\n             yield Message(message, positions, uuids)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/builders/gettext.py b/sphinx/builders/gettext.py\nindex 906ebf1..fbbb8f5 100644\n--- a/sphinx/builders/gettext.py\n+++ b/sphinx/builders/gettext.py\n@@ -39,7 +39,7 @@ class Catalog:\n         self.metadata[msg].append((origin.source, origin.line, origin.uid))\n     def __iter__(self) -> Generator[Message, None, None]:\n         for message in self.messages:\n-            positions = [(source, line) for source, line, uuid in self.metadata[message]]\n+            positions = list(set(((source, line) for source, line, uuid in self.metadata[message])))\n             uuids = [uuid for source, line, uuid in self.metadata[message]]\n             yield Message(message, positions, uuids)\n class MsgOrigin:\n", "normalized_occurrence": 1}
