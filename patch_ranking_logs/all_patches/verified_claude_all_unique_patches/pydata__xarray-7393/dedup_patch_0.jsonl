{"model_name_or_path": "agentless_claude", "instance_id": "pydata__xarray-7393", "model_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex 0194550..05561f0 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -4538,6 +4538,10 @@ class Dataset(\n                 new_indexes[new_dim] = idx\n                 new_indexes.update({k: idx for k in product_vars})\n                 idx_vars = idx.create_variables(product_vars)\n+                # Preserve original dtypes for the variables\n+                for k, orig_var in product_vars.items():\n+                    if k in idx_vars and orig_var.dtype != idx_vars[k].dtype:\n+                        idx_vars[k] = idx_vars[k].astype(orig_var.dtype)\n                 # keep consistent multi-index coordinate order\n                 for k in idx_vars:\n                     new_variables.pop(k, None)\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex b7eb26f..574e32f 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -1450,6 +1450,9 @@ class Dataset(DataWithCoords, DatasetAggregations, DatasetArithmetic, Mapping[Ha\n                 new_indexes[new_dim] = idx\n                 new_indexes.update({k: idx for k in product_vars})\n                 idx_vars = idx.create_variables(product_vars)\n+                for k, orig_var in product_vars.items():\n+                    if k in idx_vars and orig_var.dtype != idx_vars[k].dtype:\n+                        idx_vars[k] = idx_vars[k].astype(orig_var.dtype)\n                 for k in idx_vars:\n                     new_variables.pop(k, None)\n                 new_variables.update(idx_vars)\n", "normalized_occurrence": 1}
