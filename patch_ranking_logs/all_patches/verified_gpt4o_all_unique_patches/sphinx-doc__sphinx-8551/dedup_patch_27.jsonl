{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8551", "model_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex f44a82b..c88e3cf 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -87,7 +87,8 @@ def type_to_xref(text: str, env: BuildEnvironment = None) -> addnodes.pending_xr\n \n     if env:\n         kwargs = {'py:module': env.ref_context.get('py:module'),\n-                  'py:class': env.ref_context.get('py:class')}\n+                  'py:class': env.ref_context.get('py:class'),\n+                  'refspecific': True}\n     else:\n         kwargs = {}\n \n", "occurrence": 2, "normalized_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex 2ce105a..e4bde52 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -40,7 +40,7 @@ def type_to_xref(text: str, env: BuildEnvironment=None) -> addnodes.pending_xref\n     else:\n         reftype = 'class'\n     if env:\n-        kwargs = {'py:module': env.ref_context.get('py:module'), 'py:class': env.ref_context.get('py:class')}\n+        kwargs = {'py:module': env.ref_context.get('py:module'), 'py:class': env.ref_context.get('py:class'), 'refspecific': True}\n     else:\n         kwargs = {}\n     return pending_xref('', nodes.Text(text), refdomain='py', reftype=reftype, reftarget=text, **kwargs)\n", "normalized_occurrence": 2}
