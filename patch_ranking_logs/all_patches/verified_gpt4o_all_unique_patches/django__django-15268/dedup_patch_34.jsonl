{"model_name_or_path": "agentless", "instance_id": "django__django-15268", "model_patch": "diff --git a/django/db/migrations/optimizer.py b/django/db/migrations/optimizer.py\nindex f01e0f5..f705c74 100644\n--- a/django/db/migrations/optimizer.py\n+++ b/django/db/migrations/optimizer.py\n@@ -44,7 +44,17 @@ class MigrationOptimizer:\n             right = True  # Should we reduce on the right or on the left.\n             # Compare it to each operation after it\n             for j, other in enumerate(operations[i + 1:]):\n-                result = operation.reduce(other, app_label)\n+                if isinstance(operation, (operations.AlterUniqueTogether, operations.AlterIndexTogether)):\n+                    if (\n+                        isinstance(other, (operations.AlterUniqueTogether, operations.AlterIndexTogether)) and\n+                        operation.name == other.name\n+                    ):\n+                        # Merge the operations by keeping the constraints from `other`\n+                        result = [other]\n+                    else:\n+                        result = operation.reduce(other, app_label)\n+                else:\n+                    result = operation.reduce(other, app_label)\n                 if isinstance(result, list):\n                     in_between = operations[i + 1:i + j + 1]\n                     if right:\n@@ -66,4 +76,4 @@ class MigrationOptimizer:\n                     right = False\n             else:\n                 new_operations.append(operation)\n-        return new_operations\n+        return new_operations\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/optimizer.py b/django/db/migrations/optimizer.py\nindex 06fbfa5..18b2cbb 100644\n--- a/django/db/migrations/optimizer.py\n+++ b/django/db/migrations/optimizer.py\n@@ -14,7 +14,13 @@ class MigrationOptimizer:\n         for i, operation in enumerate(operations):\n             right = True\n             for j, other in enumerate(operations[i + 1:]):\n-                result = operation.reduce(other, app_label)\n+                if isinstance(operation, (operations.AlterUniqueTogether, operations.AlterIndexTogether)):\n+                    if isinstance(other, (operations.AlterUniqueTogether, operations.AlterIndexTogether)) and operation.name == other.name:\n+                        result = [other]\n+                    else:\n+                        result = operation.reduce(other, app_label)\n+                else:\n+                    result = operation.reduce(other, app_label)\n                 if isinstance(result, list):\n                     in_between = operations[i + 1:i + j + 1]\n                     if right:\n", "normalized_occurrence": 1}
