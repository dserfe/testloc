{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13810", "model_patch": "diff --git a/django/core/handlers/base.py b/django/core/handlers/base.py\nindex 2cbbab1..29194df 100644\n--- a/django/core/handlers/base.py\n+++ b/django/core/handlers/base.py\n@@ -49,6 +49,8 @@ class BaseHandler:\n                 middleware_is_async = False\n             else:\n                 middleware_is_async = middleware_can_async\n+            # Store original handler in case middleware is not used\n+            original_handler = handler\n             try:\n                 # Adapt handler, if needed.\n                 handler = self.adapt_method_mode(\n@@ -62,6 +64,8 @@ class BaseHandler:\n                         logger.debug('MiddlewareNotUsed(%r): %s', middleware_path, exc)\n                     else:\n                         logger.debug('MiddlewareNotUsed: %r', middleware_path)\n+                # Restore original handler when middleware is not used\n+                handler = original_handler\n                 continue\n \n             if mw_instance is None:\n@@ -345,4 +349,4 @@ def reset_urlconf(sender, **kwargs):\n     set_urlconf(None)\n \n \n-request_finished.connect(reset_urlconf)\n+request_finished.connect(reset_urlconf)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/handlers/base.py b/django/core/handlers/base.py\nindex db9e015..c32d7d5 100644\n--- a/django/core/handlers/base.py\n+++ b/django/core/handlers/base.py\n@@ -33,6 +33,7 @@ class BaseHandler:\n                 middleware_is_async = False\n             else:\n                 middleware_is_async = middleware_can_async\n+            original_handler = handler\n             try:\n                 handler = self.adapt_method_mode(middleware_is_async, handler, handler_is_async, debug=settings.DEBUG, name='middleware %s' % middleware_path)\n                 mw_instance = middleware(handler)\n@@ -42,6 +43,7 @@ class BaseHandler:\n                         logger.debug('MiddlewareNotUsed(%r): %s', middleware_path, exc)\n                     else:\n                         logger.debug('MiddlewareNotUsed: %r', middleware_path)\n+                handler = original_handler\n                 continue\n             if mw_instance is None:\n                 raise ImproperlyConfigured('Middleware factory %s returned None.' % middleware_path)\n", "normalized_occurrence": 2}
