{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11149", "model_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex acc7653..c865ae1 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -2030,6 +2030,12 @@ class InlineModelAdmin(BaseModelAdmin):\n         # default.\n         exclude = exclude or None\n         can_delete = self.can_delete and self.has_delete_permission(request, obj)\n+        # Disable deletion and enforce read-only if user only has view permission\n+        if request and not self.has_change_permission(request, obj):\n+            can_delete = False\n+            # Set extra to 0 to prevent adding new records\n+            kwargs['extra'] = 0\n+            \n         defaults = {\n             'form': self.form,\n             'formset': self.formset,\n@@ -2159,4 +2165,4 @@ class StackedInline(InlineModelAdmin):\n \n \n class TabularInline(InlineModelAdmin):\n-    template = 'admin/edit_inline/tabular.html'\n+    template = 'admin/edit_inline/tabular.html'\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex b043b1a..5a9e9b4 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -1000,6 +1000,9 @@ class InlineModelAdmin(BaseModelAdmin):\n             exclude.extend(self.form._meta.exclude)\n         exclude = exclude or None\n         can_delete = self.can_delete and self.has_delete_permission(request, obj)\n+        if request and (not self.has_change_permission(request, obj)):\n+            can_delete = False\n+            kwargs['extra'] = 0\n         defaults = {'form': self.form, 'formset': self.formset, 'fk_name': self.fk_name, 'fields': fields, 'exclude': exclude, 'formfield_callback': partial(self.formfield_for_dbfield, request=request), 'extra': self.get_extra(request, obj, **kwargs), 'min_num': self.get_min_num(request, obj, **kwargs), 'max_num': self.get_max_num(request, obj, **kwargs), 'can_delete': can_delete, **kwargs}\n         base_model_form = defaults['form']\n         can_change = self.has_change_permission(request, obj) if request else True\n", "normalized_occurrence": 1}
