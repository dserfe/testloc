{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-22080", "model_patch": "diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py\nindex ae1df59..171d6c3 100644\n--- a/sympy/utilities/lambdify.py\n+++ b/sympy/utilities/lambdify.py\n@@ -813,6 +813,10 @@ def lambdify(args: Iterable, expr, modules=None, printer=None, use_imps=True,\n             from sympy.printing.pycode import SymPyPrinter as Printer # type: ignore\n         else:\n             from sympy.printing.pycode import PythonCodePrinter as Printer # type: ignore\n+            # Ensure proper Mod handling when no modules specified\n+            def _print_Mod(self, expr):\n+                return \"({}) % ({})\".format(self._print(expr.args[0]), self._print(expr.args[1]))\n+            Printer._print_Mod = _print_Mod\n         user_functions = {}\n         for m in namespaces[::-1]:\n             if isinstance(m, dict):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py\nindex c5ff69c..569851c 100644\n--- a/sympy/utilities/lambdify.py\n+++ b/sympy/utilities/lambdify.py\n@@ -112,6 +112,9 @@ def lambdify(args: Iterable, expr, modules=None, printer=None, use_imps=True, du\n             from sympy.printing.pycode import SymPyPrinter as Printer\n         else:\n             from sympy.printing.pycode import PythonCodePrinter as Printer\n+            def _print_Mod(self, expr):\n+                return '({}) % ({})'.format(self._print(expr.args[0]), self._print(expr.args[1]))\n+            Printer._print_Mod = _print_Mod\n         user_functions = {}\n         for m in namespaces[::-1]:\n             if isinstance(m, dict):\n", "normalized_occurrence": 1}
