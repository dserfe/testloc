{"model_name_or_path": "agentless", "instance_id": "django__django-14608", "model_patch": "diff --git a/django/forms/formsets.py b/django/forms/formsets.py\nindex beca557..83738f8 100644\n--- a/django/forms/formsets.py\n+++ b/django/forms/formsets.py\n@@ -295,7 +295,7 @@ class BaseFormSet:\n         \"\"\"\n         if self._non_form_errors is None:\n             self.full_clean()\n-        return self._non_form_errors\n+        return self._non_form_errors.copy(error_class='nonform')\n \n     @property\n     def errors(self):\n@@ -380,7 +380,7 @@ class BaseFormSet:\n             # Give self.clean() a chance to do cross-form validation.\n             self.clean()\n         except ValidationError as e:\n-            self._non_form_errors = self.error_class(e.error_list)\n+            self._non_form_errors = self.error_class(e.error_list, error_class='nonform')\n \n     def clean(self):\n         \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/formsets.py b/django/forms/formsets.py\nindex 296e58d..2827644 100644\n--- a/django/forms/formsets.py\n+++ b/django/forms/formsets.py\n@@ -160,7 +160,7 @@ class BaseFormSet:\n     def non_form_errors(self):\n         if self._non_form_errors is None:\n             self.full_clean()\n-        return self._non_form_errors\n+        return self._non_form_errors.copy(error_class='nonform')\n     @property\n     def errors(self):\n         if self._errors is None:\n@@ -199,7 +199,7 @@ class BaseFormSet:\n                 raise ValidationError(ngettext('Please submit at least %d form.', 'Please submit at least %d forms.', self.min_num) % self.min_num, code='too_few_forms')\n             self.clean()\n         except ValidationError as e:\n-            self._non_form_errors = self.error_class(e.error_list)\n+            self._non_form_errors = self.error_class(e.error_list, error_class='nonform')\n     def clean(self):\n         pass\n     def has_changed(self):\n", "normalized_occurrence": 1}
