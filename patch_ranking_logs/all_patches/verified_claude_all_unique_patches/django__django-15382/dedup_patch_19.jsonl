{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15382", "model_patch": "diff --git a/django/db/models/sql/where.py b/django/db/models/sql/where.py\nindex 7a540c9..8ff8ed7 100644\n--- a/django/db/models/sql/where.py\n+++ b/django/db/models/sql/where.py\n@@ -93,15 +93,27 @@ class WhereNode(tree.Node):\n             # Now, check if this node is full/empty using the\n             # counts.\n             if empty_needed == 0:\n-                if self.negated:\n-                    return '', []\n+                if self.connector == AND:\n+                    if self.negated:\n+                        return '', []\n+                    else:\n+                        raise EmptyResultSet\n                 else:\n-                    raise EmptyResultSet\n+                    if self.negated:\n+                        raise EmptyResultSet\n+                    else:\n+                        return '', []\n             if full_needed == 0:\n-                if self.negated:\n-                    raise EmptyResultSet\n+                if self.connector == AND:\n+                    if self.negated:\n+                        raise EmptyResultSet\n+                    else:\n+                        return '', []\n                 else:\n-                    return '', []\n+                    if self.negated:\n+                        return '', []\n+                    else:\n+                        raise EmptyResultSet\n         conn = ' %s ' % self.connector\n         sql_string = conn.join(result)\n         if sql_string:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/where.py b/django/db/models/sql/where.py\nindex 7f5e30d..19c33f9 100644\n--- a/django/db/models/sql/where.py\n+++ b/django/db/models/sql/where.py\n@@ -49,15 +49,25 @@ class WhereNode(tree.Node):\n                 else:\n                     full_needed -= 1\n             if empty_needed == 0:\n-                if self.negated:\n-                    return ('', [])\n-                else:\n-                    raise EmptyResultSet\n-            if full_needed == 0:\n-                if self.negated:\n+                if self.connector == AND:\n+                    if self.negated:\n+                        return ('', [])\n+                    else:\n+                        raise EmptyResultSet\n+                elif self.negated:\n                     raise EmptyResultSet\n                 else:\n                     return ('', [])\n+            if full_needed == 0:\n+                if self.connector == AND:\n+                    if self.negated:\n+                        raise EmptyResultSet\n+                    else:\n+                        return ('', [])\n+                elif self.negated:\n+                    return ('', [])\n+                else:\n+                    raise EmptyResultSet\n         conn = ' %s ' % self.connector\n         sql_string = conn.join(result)\n         if sql_string:\n", "normalized_occurrence": 2}
