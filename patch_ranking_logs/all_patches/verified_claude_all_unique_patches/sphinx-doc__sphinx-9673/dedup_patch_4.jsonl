{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-9673", "model_patch": "diff --git a/sphinx/ext/napoleon/docstring.py b/sphinx/ext/napoleon/docstring.py\nindex ea465e6..08676e4 100644\n--- a/sphinx/ext/napoleon/docstring.py\n+++ b/sphinx/ext/napoleon/docstring.py\n@@ -776,6 +776,7 @@ class GoogleDocstring:\n \n         lines: List[str] = []\n         for _name, _type, _desc in fields:\n+            # Always include type information either in rtype or inline\n             if use_rtype:\n                 field = self._format_field(_name, '', _desc)\n             else:\n@@ -787,7 +788,10 @@ class GoogleDocstring:\n                 else:\n                     lines.extend(self._format_block(':returns: * ', field))\n             else:\n-                lines.extend(self._format_block(':returns: ', field))\n+                if not use_rtype and _type:\n+                    lines.extend(self._format_block(':returns: ', f'({_type}) {field}'))\n+                else:\n+                    lines.extend(self._format_block(':returns: ', field))\n                 if _type and use_rtype:\n                     lines.extend([':rtype: %s' % _type, ''])\n         if lines and lines[-1]:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/napoleon/docstring.py b/sphinx/ext/napoleon/docstring.py\nindex bc7a995..30eb34c 100644\n--- a/sphinx/ext/napoleon/docstring.py\n+++ b/sphinx/ext/napoleon/docstring.py\n@@ -523,7 +523,10 @@ class GoogleDocstring:\n                 else:\n                     lines.extend(self._format_block(':returns: * ', field))\n             else:\n-                lines.extend(self._format_block(':returns: ', field))\n+                if not use_rtype and _type:\n+                    lines.extend(self._format_block(':returns: ', f'({_type}) {field}'))\n+                else:\n+                    lines.extend(self._format_block(':returns: ', field))\n                 if _type and use_rtype:\n                     lines.extend([':rtype: %s' % _type, ''])\n         if lines and lines[-1]:\n", "normalized_occurrence": 1}
