{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-24637", "model_patch": "diff --git a/lib/matplotlib/offsetbox.py b/lib/matplotlib/offsetbox.py\nindex e7f0196..282ccda 100644\n--- a/lib/matplotlib/offsetbox.py\n+++ b/lib/matplotlib/offsetbox.py\n@@ -1453,7 +1453,10 @@ or callable, default: value of *xycoords*\n         if not self.get_visible() or not self._check_xy(renderer):\n             return\n         self.update_positions(renderer)\n-        if self.arrow_patch is not None:\n+        if self.get_gid():\n+            renderer.open_group('AnnotationBbox', gid=self.get_gid())\n+        else:\n+            renderer.open_group('AnnotationBbox')\n             if self.arrow_patch.figure is None and self.figure is not None:\n                 self.arrow_patch.figure = self.figure\n             self.arrow_patch.draw(renderer)\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/offsetbox.py b/lib/matplotlib/offsetbox.py\nindex dd9cb5f..797f22a 100644\n--- a/lib/matplotlib/offsetbox.py\n+++ b/lib/matplotlib/offsetbox.py\n@@ -1210,7 +1210,10 @@ class AnnotationBbox(martist.Artist, mtext._AnnotationBase):\n         if not self.get_visible() or not self._check_xy(renderer):\n             return\n         self.update_positions(renderer)\n-        if self.arrow_patch is not None:\n+        if self.get_gid():\n+            renderer.open_group('AnnotationBbox', gid=self.get_gid())\n+        else:\n+            renderer.open_group('AnnotationBbox')\n             if self.arrow_patch.figure is None and self.figure is not None:\n                 self.arrow_patch.figure = self.figure\n             self.arrow_patch.draw(renderer)\n", "normalized_occurrence": 1}
