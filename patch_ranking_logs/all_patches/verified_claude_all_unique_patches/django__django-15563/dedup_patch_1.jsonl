{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15563", "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex a80d8e1..4d1712f 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -282,6 +282,7 @@ class ModelBase(type):\n                         name=attr_name,\n                         auto_created=True,\n                         parent_link=True,\n+                        primary_key=base == parents[0]._meta.concrete_model,  # Only first parent gets primary key\n                     )\n \n                     if attr_name in field_names:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 0a3bff1..b322e26 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -126,7 +126,7 @@ class ModelBase(type):\n                     field = parent_links[base_key]\n                 elif not is_proxy:\n                     attr_name = '%s_ptr' % base._meta.model_name\n-                    field = OneToOneField(base, on_delete=CASCADE, name=attr_name, auto_created=True, parent_link=True)\n+                    field = OneToOneField(base, on_delete=CASCADE, name=attr_name, auto_created=True, parent_link=True, primary_key=base == parents[0]._meta.concrete_model)\n                     if attr_name in field_names:\n                         raise FieldError(\"Auto-generated field '%s' in class %r for parent_link to base class %r clashes with declared field of the same name.\" % (attr_name, name, base.__name__))\n                     if not hasattr(new_class, attr_name):\n", "normalized_occurrence": 1}
