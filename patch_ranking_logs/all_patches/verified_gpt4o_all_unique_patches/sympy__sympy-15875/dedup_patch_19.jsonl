{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-15875", "model_patch": "diff --git a/sympy/core/add.py b/sympy/core/add.py\nindex 1046af8..85e53e7 100644\n--- a/sympy/core/add.py\n+++ b/sympy/core/add.py\n@@ -558,11 +558,13 @@ class Add(Expr, AssocOp):\n             return None\n         b = self.func(*nz)\n         if b.is_zero:\n-            if not im_or_z and not im:\n+            if not im and not im_or_z:\n                 return True\n             if im and not im_or_z:\n                 return False\n-        if b.is_zero is False:\n+            if im_or_z:\n+                return None  # Cannot determine if zero due to imaginary components\n+        elif b.is_zero is False:\n             return False\n \n     def _eval_is_odd(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/add.py b/sympy/core/add.py\nindex 63cb816..cbbac24 100644\n--- a/sympy/core/add.py\n+++ b/sympy/core/add.py\n@@ -312,11 +312,13 @@ class Add(Expr, AssocOp):\n             return None\n         b = self.func(*nz)\n         if b.is_zero:\n-            if not im_or_z and (not im):\n+            if not im and (not im_or_z):\n                 return True\n             if im and (not im_or_z):\n                 return False\n-        if b.is_zero is False:\n+            if im_or_z:\n+                return None\n+        elif b.is_zero is False:\n             return False\n     def _eval_is_odd(self):\n         l = [f for f in self.args if not f.is_even is True]\n", "normalized_occurrence": 1}
