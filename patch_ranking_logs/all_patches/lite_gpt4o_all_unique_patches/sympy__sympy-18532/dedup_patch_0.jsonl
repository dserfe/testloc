{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-18532", "model_patch": "diff --git a/sympy/core/basic.py b/sympy/core/basic.py\nindex 97eb81a..04465b7 100644\n--- a/sympy/core/basic.py\n+++ b/sympy/core/basic.py\n@@ -500,14 +500,12 @@ class Basic(metaclass=ManagedProperties):\n         {I*pi, 2*sin(y + I*pi)}\n \n         \"\"\"\n-        if types:\n-            types = tuple(\n-                [t if isinstance(t, type) else type(t) for t in types])\n-        else:\n-            types = (Atom,)\n         result = set()\n         for expr in preorder_traversal(self):\n-            if isinstance(expr, types):\n+            if types:\n+                if any(isinstance(expr, t if isinstance(t, type) else type(t)) for t in types):\n+                    result.add(expr)\n+            elif not expr.args:\n                 result.add(expr)\n         return result\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/basic.py b/sympy/core/basic.py\nindex eec7295..c52be1b 100644\n--- a/sympy/core/basic.py\n+++ b/sympy/core/basic.py\n@@ -184,13 +184,12 @@ class Basic(metaclass=ManagedProperties):\n         return '$\\\\displaystyle %s$' % s\n     _repr_latex_orig = _repr_latex_\n     def atoms(self, *types):\n-        if types:\n-            types = tuple([t if isinstance(t, type) else type(t) for t in types])\n-        else:\n-            types = (Atom,)\n         result = set()\n         for expr in preorder_traversal(self):\n-            if isinstance(expr, types):\n+            if types:\n+                if any((isinstance(expr, t if isinstance(t, type) else type(t)) for t in types)):\n+                    result.add(expr)\n+            elif not expr.args:\n                 result.add(expr)\n         return result\n     @property\n", "normalized_occurrence": 1}
