{"model_name_or_path": "agentless", "instance_id": "django__django-12184", "model_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 1a3b6f6..87211c1 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -352,8 +352,9 @@ class URLPattern:\n         match = self.pattern.match(path)\n         if match:\n             new_path, args, kwargs = match\n-            # Pass any extra_kwargs as **kwargs.\n-            kwargs.update(self.default_args)\n+            # Only pass matched groups as **kwargs if they exist\n+            if kwargs:\n+                kwargs.update(self.default_args)\n             return ResolverMatch(self.callback, args, kwargs, self.pattern.name, route=str(self.pattern))\n \n     @cached_property\n", "occurrence": 1, "normalized_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex a06ca7c..89b8bf0 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -220,7 +220,8 @@ class URLPattern:\n         match = self.pattern.match(path)\n         if match:\n             new_path, args, kwargs = match\n-            kwargs.update(self.default_args)\n+            if kwargs:\n+                kwargs.update(self.default_args)\n             return ResolverMatch(self.callback, args, kwargs, self.pattern.name, route=str(self.pattern))\n     @cached_property\n     def lookup_str(self):\n", "normalized_occurrence": 1}
