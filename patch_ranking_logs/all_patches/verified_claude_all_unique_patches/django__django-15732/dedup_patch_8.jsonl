{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15732", "model_patch": "diff --git a/django/db/backends/postgresql/schema.py b/django/db/backends/postgresql/schema.py\nindex fdd1271..473c210 100644\n--- a/django/db/backends/postgresql/schema.py\n+++ b/django/db/backends/postgresql/schema.py\n@@ -1,3 +1,4 @@\n+\n import psycopg2\n \n from django.db.backends.base.schema import BaseDatabaseSchemaEditor\n@@ -229,10 +230,24 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):\n \n         # Removed an index? Drop any PostgreSQL-specific indexes.\n         if old_field.unique and not (new_field.db_index or new_field.unique):\n+            # Drop the _like pattern index if it exists\n             index_to_remove = self._create_index_name(\n                 model._meta.db_table, [old_field.column], suffix=\"_like\"\n             )\n             self.execute(self._delete_index_sql(model, index_to_remove))\n+            \n+            # If this is a primary key, don't drop its unique constraint\n+            if not old_field.primary_key:\n+                # Drop the unique constraint if it exists\n+                constraint_name = self._create_index_name(\n+                    model._meta.db_table, [old_field.column], suffix=\"_uniq\"\n+                )\n+                self.execute(\n+                    self.sql_delete_unique % {\n+                        \"table\": self.quote_name(model._meta.db_table),\n+                        \"name\": constraint_name,\n+                    }\n+                )\n \n     def _index_columns(self, table, columns, col_suffixes, opclasses):\n         if opclasses:\n@@ -296,4 +311,4 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):\n             condition=condition,\n             include=include,\n             expressions=expressions,\n-        )\n+        )\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/postgresql/schema.py b/django/db/backends/postgresql/schema.py\nindex d911e18..f81f6e7 100644\n--- a/django/db/backends/postgresql/schema.py\n+++ b/django/db/backends/postgresql/schema.py\n@@ -83,6 +83,9 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):\n         if old_field.unique and (not (new_field.db_index or new_field.unique)):\n             index_to_remove = self._create_index_name(model._meta.db_table, [old_field.column], suffix='_like')\n             self.execute(self._delete_index_sql(model, index_to_remove))\n+            if not old_field.primary_key:\n+                constraint_name = self._create_index_name(model._meta.db_table, [old_field.column], suffix='_uniq')\n+                self.execute(self.sql_delete_unique % {'table': self.quote_name(model._meta.db_table), 'name': constraint_name})\n     def _index_columns(self, table, columns, col_suffixes, opclasses):\n         if opclasses:\n             return IndexColumns(table, columns, self.quote_name, col_suffixes=col_suffixes, opclasses=opclasses)\n", "normalized_occurrence": 1}
