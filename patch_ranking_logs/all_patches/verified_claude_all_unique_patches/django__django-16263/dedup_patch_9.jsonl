{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16263", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex a096f65..e42acb6 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -622,7 +622,18 @@ class QuerySet(AltersData):\n         if self._result_cache is not None:\n             return len(self._result_cache)\n \n-        return self.query.get_count(using=self.db)\n+        # Create a clone of the query to prevent modifying the original query\n+        query = self.query.clone()\n+        \n+        # Clear annotations that aren't referenced in filters or order_by\n+        annotations = query.annotations.copy()\n+        for name, annotation in annotations.items():\n+            if not (query.filter_is_sticky and query.used_aliases) and \\\n+               name not in query.where.refs and \\\n+               name not in query.order_by:\n+                query.annotations.pop(name)\n+\n+        return query.get_count(using=self.db)\n \n     async def acount(self):\n         return await sync_to_async(self.count)()\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 56014f8..8360e7f 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -323,7 +323,12 @@ class QuerySet(AltersData):\n     def count(self):\n         if self._result_cache is not None:\n             return len(self._result_cache)\n-        return self.query.get_count(using=self.db)\n+        query = self.query.clone()\n+        annotations = query.annotations.copy()\n+        for name, annotation in annotations.items():\n+            if not (query.filter_is_sticky and query.used_aliases) and name not in query.where.refs and (name not in query.order_by):\n+                query.annotations.pop(name)\n+        return query.get_count(using=self.db)\n     async def acount(self):\n         return await sync_to_async(self.count)()\n     def get(self, *args, **kwargs):\n", "normalized_occurrence": 1}
