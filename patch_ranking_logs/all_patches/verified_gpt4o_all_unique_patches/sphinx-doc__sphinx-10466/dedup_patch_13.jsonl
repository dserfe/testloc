{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-10466", "model_patch": "diff --git a/sphinx/builders/gettext.py b/sphinx/builders/gettext.py\nindex c138802..9bcd625 100644\n--- a/sphinx/builders/gettext.py\n+++ b/sphinx/builders/gettext.py\n@@ -32,9 +32,13 @@ class Message:\n     \"\"\"An entry of translatable message.\"\"\"\n     def __init__(self, text: str, locations: List[Tuple[str, int]], uuids: List[str]):\n         self.text = text\n-        self.locations = locations\n+        self.locations = self.uniqueLocation(locations)\n         self.uuids = uuids\n \n+    def uniqueLocation(self, locations: List[Tuple[str, int]]):\n+        loc_set = set(locations)\n+        return list(loc_set)\n+\n \n class Catalog:\n     \"\"\"Catalog of translatable messages.\"\"\"\n", "occurrence": 5, "normalized_patch": "diff --git a/sphinx/builders/gettext.py b/sphinx/builders/gettext.py\nindex 906ebf1..80ea8c6 100644\n--- a/sphinx/builders/gettext.py\n+++ b/sphinx/builders/gettext.py\n@@ -24,8 +24,11 @@ logger = logging.getLogger(__name__)\n class Message:\n     def __init__(self, text: str, locations: List[Tuple[str, int]], uuids: List[str]):\n         self.text = text\n-        self.locations = locations\n+        self.locations = self.uniqueLocation(locations)\n         self.uuids = uuids\n+    def uniqueLocation(self, locations: List[Tuple[str, int]]):\n+        loc_set = set(locations)\n+        return list(loc_set)\n class Catalog:\n     def __init__(self) -> None:\n         self.messages: List[str] = []\n", "normalized_occurrence": 5}
