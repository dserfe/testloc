{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9230", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 51811ca..610c31c 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -93,13 +93,16 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str]) -> No\n                 arg['param'] = True\n             elif len(parts) > 2:\n                 # :param xxx yyy:\n-                name = ' '.join(parts[2:])\n+                name = ' '.join(parts[1:])\n                 arg = arguments.setdefault(name, {})\n                 arg['param'] = True\n-                arg['type'] = True\n+                if len(parts) > 2:\n+                    arg['type'] = True\n+                    arg['param'] = True\n         elif parts[0] == 'type':\n             name = ' '.join(parts[1:])\n-            arg = arguments.setdefault(name, {})\n+            if name.startswith('dict('):\n+                name = name.replace('(', '( ')\n             arg['type'] = True\n         elif parts[0] == 'rtype':\n             arguments['return'] = {'type': True}\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 03a755b..9b4d213 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -63,13 +63,16 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str]) -> No\n                 arg = arguments.setdefault(parts[1], {})\n                 arg['param'] = True\n             elif len(parts) > 2:\n-                name = ' '.join(parts[2:])\n+                name = ' '.join(parts[1:])\n                 arg = arguments.setdefault(name, {})\n                 arg['param'] = True\n-                arg['type'] = True\n+                if len(parts) > 2:\n+                    arg['type'] = True\n+                    arg['param'] = True\n         elif parts[0] == 'type':\n             name = ' '.join(parts[1:])\n-            arg = arguments.setdefault(name, {})\n+            if name.startswith('dict('):\n+                name = name.replace('(', '( ')\n             arg['type'] = True\n         elif parts[0] == 'rtype':\n             arguments['return'] = {'type': True}\n", "normalized_occurrence": 1}
