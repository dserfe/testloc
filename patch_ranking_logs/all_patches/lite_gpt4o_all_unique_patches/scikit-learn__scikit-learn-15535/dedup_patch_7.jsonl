{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-15535", "model_patch": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex be26d08..22d0029 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -551,6 +551,8 @@ def check_array(array, accept_sparse=False, accept_large_sparse=True,\n \n         # make sure we actually converted to numeric:\n         if dtype_numeric and array.dtype.kind == \"O\":\n+            if not np.all([isinstance(x, (int, float)) for x in array.ravel()]):\n+                raise ValueError(\"Array contains non-numeric data\")\n             array = array.astype(np.float64)\n         if not allow_nd and array.ndim >= 3:\n             raise ValueError(\"Found array with dim %d. %s expected <= 2.\"\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex 8ce0584..d409e43 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -180,6 +180,8 @@ def check_array(array, accept_sparse=False, accept_large_sparse=True, dtype='num\n         if dtype_numeric and np.issubdtype(array.dtype, np.flexible):\n             warnings.warn(\"Beginning in version 0.22, arrays of bytes/strings will be converted to decimal numbers if dtype='numeric'. It is recommended that you convert the array to a float dtype before using it in scikit-learn, for example by using your_array = your_array.astype(np.float64).\", FutureWarning, stacklevel=2)\n         if dtype_numeric and array.dtype.kind == 'O':\n+            if not np.all([isinstance(x, (int, float)) for x in array.ravel()]):\n+                raise ValueError('Array contains non-numeric data')\n             array = array.astype(np.float64)\n         if not allow_nd and array.ndim >= 3:\n             raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim, estimator_name))\n", "normalized_occurrence": 1}
