{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-21568", "model_patch": "diff --git a/lib/matplotlib/dates.py b/lib/matplotlib/dates.py\nindex f565bc8..7c0defe 100644\n--- a/lib/matplotlib/dates.py\n+++ b/lib/matplotlib/dates.py\n@@ -592,12 +592,22 @@ def drange(dstart, dend, delta):\n \n \n def _wrap_in_tex(text):\n-    p = r'([a-zA-Z]+)'\n-    ret_text = re.sub(p, r'}$\\1$\\\\mathdefault{', text)\n-\n-    # Braces ensure dashes are not spaced like binary operators.\n-    ret_text = '$\\\\mathdefault{'+ret_text.replace('-', '{-}')+'}$'\n-    ret_text = ret_text.replace('$\\\\mathdefault{}$', '')\n+    # Split into components (alphabetic vs non-alphabetic)\n+    p = r'([a-zA-Z]+|[^a-zA-Z]+)'\n+    components = re.findall(p, text)\n+    \n+    # Process each component\n+    wrapped = []\n+    for comp in components:\n+        if comp.isalpha():\n+            # Wrap alphabetic components in mathdefault\n+            wrapped.append(r'\\mathdefault{' + comp + '}')\n+        else:\n+            # Keep spacing and other characters as is, just escape dashes\n+            wrapped.append(comp.replace('-', '{-}'))\n+    \n+    # Join and wrap in math mode\n+    ret_text = '$' + ''.join(wrapped) + '$'\n     return ret_text\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/dates.py b/lib/matplotlib/dates.py\nindex 71de92e..53ce005 100644\n--- a/lib/matplotlib/dates.py\n+++ b/lib/matplotlib/dates.py\n@@ -139,10 +139,15 @@ def drange(dstart, dend, delta):\n     f2 = date2num(dinterval_end)\n     return np.linspace(f1, f2, num + 1)\n def _wrap_in_tex(text):\n-    p = '([a-zA-Z]+)'\n-    ret_text = re.sub(p, '}$\\\\1$\\\\\\\\mathdefault{', text)\n-    ret_text = '$\\\\mathdefault{' + ret_text.replace('-', '{-}') + '}$'\n-    ret_text = ret_text.replace('$\\\\mathdefault{}$', '')\n+    p = '([a-zA-Z]+|[^a-zA-Z]+)'\n+    components = re.findall(p, text)\n+    wrapped = []\n+    for comp in components:\n+        if comp.isalpha():\n+            wrapped.append('\\\\mathdefault{' + comp + '}')\n+        else:\n+            wrapped.append(comp.replace('-', '{-}'))\n+    ret_text = '$' + ''.join(wrapped) + '$'\n     return ret_text\n class DateFormatter(ticker.Formatter):\n     def __init__(self, fmt, tz=None, *, usetex=None):\n", "normalized_occurrence": 1}
