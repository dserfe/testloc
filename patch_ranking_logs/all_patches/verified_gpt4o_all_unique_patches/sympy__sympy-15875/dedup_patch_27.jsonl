{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-15875", "model_patch": "diff --git a/sympy/core/add.py b/sympy/core/add.py\nindex 1046af8..af25aae 100644\n--- a/sympy/core/add.py\n+++ b/sympy/core/add.py\n@@ -554,16 +554,16 @@ class Add(Expr, AssocOp):\n                 return\n         if z == len(self.args):\n             return True\n-        if len(nz) == len(self.args):\n+        if len(nz) + z < len(self.args):\n+            # There are terms that are neither surely zero nor\n+            # surely non-zero, so we cannot decide\n             return None\n         b = self.func(*nz)\n         if b.is_zero:\n-            if not im_or_z and not im:\n-                return True\n             if im and not im_or_z:\n                 return False\n-        if b.is_zero is False:\n-            return False\n+            return None if im or im_or_z else True\n+        return b.is_zero\n \n     def _eval_is_odd(self):\n         l = [f for f in self.args if not (f.is_even is True)]\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/add.py b/sympy/core/add.py\nindex 63cb816..e215987 100644\n--- a/sympy/core/add.py\n+++ b/sympy/core/add.py\n@@ -308,16 +308,14 @@ class Add(Expr, AssocOp):\n                 return\n         if z == len(self.args):\n             return True\n-        if len(nz) == len(self.args):\n+        if len(nz) + z < len(self.args):\n             return None\n         b = self.func(*nz)\n         if b.is_zero:\n-            if not im_or_z and (not im):\n-                return True\n             if im and (not im_or_z):\n                 return False\n-        if b.is_zero is False:\n-            return False\n+            return None if im or im_or_z else True\n+        return b.is_zero\n     def _eval_is_odd(self):\n         l = [f for f in self.args if not f.is_even is True]\n         if not l:\n", "normalized_occurrence": 1}
