{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-15976", "model_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 85af872..df1a77b 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -782,6 +782,9 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n         if len(supers) == 0:\n             if len(subs) == 0:\n                 x.appendChild(self.dom.createTextNode(name))\n+                # Set mathvariant to normal if the symbol name contains digits\n+                if any(c.isdigit() for c in name):\n+                    x.setAttribute('mathvariant', 'normal')\n             else:\n                 msub = self.dom.createElement('msub')\n                 msub.appendChild(mname)\n", "occurrence": 2, "normalized_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 28d3e1a..c0c2b08 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -549,6 +549,8 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n         if len(supers) == 0:\n             if len(subs) == 0:\n                 x.appendChild(self.dom.createTextNode(name))\n+                if any((c.isdigit() for c in name)):\n+                    x.setAttribute('mathvariant', 'normal')\n             else:\n                 msub = self.dom.createElement('msub')\n                 msub.appendChild(mname)\n", "normalized_occurrence": 2}
