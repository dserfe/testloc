{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-14817", "model_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 0ddba33..21bb60f 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -819,18 +819,16 @@ class PrettyPrinter(Printer):\n         return self._print(B.blocks)\n \n     def _print_MatAdd(self, expr):\n-        s = None\n-        for item in expr.args:\n-            pform = self._print(item)\n-            if s is None:\n-                s = pform     # First element\n+        terms = expr.args\n+        s = self._print(terms[0])\n+        \n+        for term in terms[1:]:\n+            # Check if term is negative without accessing internal structure\n+            if term.could_extract_minus_sign():\n+                s = prettyForm(*stringPict.next(s, ' '))\n             else:\n-                if S(item.args[0]).is_negative:\n-                    s = prettyForm(*stringPict.next(s, ' '))\n-                    pform = self._print(item)\n-                else:\n-                    s = prettyForm(*stringPict.next(s, ' + '))\n-                s = prettyForm(*stringPict.next(s, pform))\n+                s = prettyForm(*stringPict.next(s, ' + '))\n+            s = prettyForm(*stringPict.next(s, self._print(term)))\n \n         return s\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 52a00ab..9ce94bf 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -586,18 +586,14 @@ class PrettyPrinter(Printer):\n             return self._print(B.blocks[0, 0])\n         return self._print(B.blocks)\n     def _print_MatAdd(self, expr):\n-        s = None\n-        for item in expr.args:\n-            pform = self._print(item)\n-            if s is None:\n-                s = pform\n+        terms = expr.args\n+        s = self._print(terms[0])\n+        for term in terms[1:]:\n+            if term.could_extract_minus_sign():\n+                s = prettyForm(*stringPict.next(s, ' '))\n             else:\n-                if S(item.args[0]).is_negative:\n-                    s = prettyForm(*stringPict.next(s, ' '))\n-                    pform = self._print(item)\n-                else:\n-                    s = prettyForm(*stringPict.next(s, ' + '))\n-                s = prettyForm(*stringPict.next(s, pform))\n+                s = prettyForm(*stringPict.next(s, ' + '))\n+            s = prettyForm(*stringPict.next(s, self._print(term)))\n         return s\n     def _print_MatMul(self, expr):\n         args = list(expr.args)\n", "normalized_occurrence": 1}
