{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15525", "model_patch": "diff --git a/django/core/serializers/base.py b/django/core/serializers/base.py\nindex e82a744..33cb393 100644\n--- a/django/core/serializers/base.py\n+++ b/django/core/serializers/base.py\n@@ -336,11 +336,26 @@ def build_instance(Model, data, db):\n         and hasattr(default_manager, \"get_by_natural_key\")\n         and hasattr(Model, \"natural_key\")\n     ):\n-        natural_key = Model(**data).natural_key()\n+        # Get the natural key values directly from data instead of creating a temporary instance\n+        natural_key_data = []\n+        if hasattr(Model, 'natural_key_fields'):\n+            # If model defines which fields make up the natural key, use those\n+            for field_name in Model.natural_key_fields():\n+                natural_key_data.append(data['fields'][field_name])\n+        else:\n+            # Otherwise, try to construct it from the provided data\n+            if 'fields' in data:\n+                # Handle foreign keys in natural key by using the provided array directly\n+                for key, value in data['fields'].items():\n+                    if isinstance(value, (list, tuple)):\n+                        natural_key_data.extend(value)\n+                    else:\n+                        natural_key_data.append(value)\n         try:\n-            data[Model._meta.pk.attname] = Model._meta.pk.to_python(\n-                default_manager.db_manager(db).get_by_natural_key(*natural_key).pk\n-            )\n+            if natural_key_data:\n+                data[Model._meta.pk.attname] = Model._meta.pk.to_python(\n+                    default_manager.db_manager(db).get_by_natural_key(*natural_key_data).pk\n+                )\n         except Model.DoesNotExist:\n             pass\n     return Model(**data)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/serializers/base.py b/django/core/serializers/base.py\nindex 65e3dcb..3233567 100644\n--- a/django/core/serializers/base.py\n+++ b/django/core/serializers/base.py\n@@ -144,9 +144,19 @@ def build_instance(Model, data, db):\n     default_manager = Model._meta.default_manager\n     pk = data.get(Model._meta.pk.attname)\n     if pk is None and hasattr(default_manager, 'get_by_natural_key') and hasattr(Model, 'natural_key'):\n-        natural_key = Model(**data).natural_key()\n+        natural_key_data = []\n+        if hasattr(Model, 'natural_key_fields'):\n+            for field_name in Model.natural_key_fields():\n+                natural_key_data.append(data['fields'][field_name])\n+        elif 'fields' in data:\n+            for key, value in data['fields'].items():\n+                if isinstance(value, (list, tuple)):\n+                    natural_key_data.extend(value)\n+                else:\n+                    natural_key_data.append(value)\n         try:\n-            data[Model._meta.pk.attname] = Model._meta.pk.to_python(default_manager.db_manager(db).get_by_natural_key(*natural_key).pk)\n+            if natural_key_data:\n+                data[Model._meta.pk.attname] = Model._meta.pk.to_python(default_manager.db_manager(db).get_by_natural_key(*natural_key_data).pk)\n         except Model.DoesNotExist:\n             pass\n     return Model(**data)\n", "normalized_occurrence": 1}
