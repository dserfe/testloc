{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13798", "model_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex e32266f..7264531 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -149,18 +149,25 @@ class LatexPrinter(Printer):\n                 self._settings['mode'] == 'inline':\n             self._settings['fold_short_frac'] = True\n \n-        mul_symbol_table = {\n-            None: r\" \",\n+        default_mul_symbol = r\" \"\n+        valid_mul_symbols = {\n+            None: default_mul_symbol,\n             \"ldot\": r\" \\,.\\, \",\n             \"dot\": r\" \\cdot \",\n             \"times\": r\" \\times \"\n         }\n \n-        self._settings['mul_symbol_latex'] = \\\n-            mul_symbol_table[self._settings['mul_symbol']]\n+        if self._settings['mul_symbol'] in valid_mul_symbols:\n+            self._settings['mul_symbol_latex'] = \\\n+                valid_mul_symbols[self._settings['mul_symbol']]\n+        else:\n+            self._settings['mul_symbol_latex'] = self._settings['mul_symbol']\n \n-        self._settings['mul_symbol_latex_numbers'] = \\\n-            mul_symbol_table[self._settings['mul_symbol'] or 'dot']\n+        if self._settings['mul_symbol'] in valid_mul_symbols:\n+            self._settings['mul_symbol_latex_numbers'] = \\\n+                valid_mul_symbols[self._settings['mul_symbol'] or 'dot']\n+        else:\n+            self._settings['mul_symbol_latex_numbers'] = self._settings['mul_symbol']\n \n         self._delim_dict = {'(': ')', '[': ']'}\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 8e8a18d..28d5e86 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -33,9 +33,16 @@ class LatexPrinter(Printer):\n                 raise ValueError(\"'mode' must be one of 'inline', 'plain', 'equation' or 'equation*'\")\n         if self._settings['fold_short_frac'] is None and self._settings['mode'] == 'inline':\n             self._settings['fold_short_frac'] = True\n-        mul_symbol_table = {None: ' ', 'ldot': ' \\\\,.\\\\, ', 'dot': ' \\\\cdot ', 'times': ' \\\\times '}\n-        self._settings['mul_symbol_latex'] = mul_symbol_table[self._settings['mul_symbol']]\n-        self._settings['mul_symbol_latex_numbers'] = mul_symbol_table[self._settings['mul_symbol'] or 'dot']\n+        default_mul_symbol = ' '\n+        valid_mul_symbols = {None: default_mul_symbol, 'ldot': ' \\\\,.\\\\, ', 'dot': ' \\\\cdot ', 'times': ' \\\\times '}\n+        if self._settings['mul_symbol'] in valid_mul_symbols:\n+            self._settings['mul_symbol_latex'] = valid_mul_symbols[self._settings['mul_symbol']]\n+        else:\n+            self._settings['mul_symbol_latex'] = self._settings['mul_symbol']\n+        if self._settings['mul_symbol'] in valid_mul_symbols:\n+            self._settings['mul_symbol_latex_numbers'] = valid_mul_symbols[self._settings['mul_symbol'] or 'dot']\n+        else:\n+            self._settings['mul_symbol_latex_numbers'] = self._settings['mul_symbol']\n         self._delim_dict = {'(': ')', '[': ']'}\n     def parenthesize(self, item, level, strict=False):\n         prec_val = precedence_traditional(item)\n", "normalized_occurrence": 1}
