{"model_name_or_path": "agentless_claude", "instance_id": "pydata__xarray-4695", "model_patch": "diff --git a/xarray/core/indexing.py b/xarray/core/indexing.py\nindex 4b06bfd..3c83410 100644\n--- a/xarray/core/indexing.py\n+++ b/xarray/core/indexing.py\n@@ -135,6 +135,9 @@ def convert_label_indexer(index, label, index_name=\"\", method=None, tolerance=No\n     elif is_dict_like(label):\n         is_nested_vals = _is_nested_tuple(tuple(label.values()))\n         if not isinstance(index, pd.MultiIndex):\n+            # If the label contains 'method' as a key, it's a dimension name, not the interpolation method\n+            if 'method' in label:\n+                method = None\n             raise ValueError(\n                 \"cannot use a dict-like object for selection on \"\n                 \"a dimension that does not have a MultiIndex\"\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/indexing.py b/xarray/core/indexing.py\nindex 27ac399..b64e35f 100644\n--- a/xarray/core/indexing.py\n+++ b/xarray/core/indexing.py\n@@ -68,6 +68,8 @@ def convert_label_indexer(index, label, index_name='', method=None, tolerance=No\n     elif is_dict_like(label):\n         is_nested_vals = _is_nested_tuple(tuple(label.values()))\n         if not isinstance(index, pd.MultiIndex):\n+            if 'method' in label:\n+                method = None\n             raise ValueError('cannot use a dict-like object for selection on a dimension that does not have a MultiIndex')\n         elif len(label) == index.nlevels and (not is_nested_vals):\n             indexer = index.get_loc(tuple((label[k] for k in index.names)))\n", "normalized_occurrence": 1}
