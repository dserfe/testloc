{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-6386", "model_patch": "diff --git a/pylint/config/option_manager_mixin.py b/pylint/config/option_manager_mixin.py\nindex d22ea01..bbce108 100644\n--- a/pylint/config/option_manager_mixin.py\n+++ b/pylint/config/option_manager_mixin.py\n@@ -183,8 +183,9 @@ class OptionsManagerMixIn:\n         else:\n             # short option, get its long equivalent\n             opt = self._short_options[opt[1:]]\n-        # trick since we can't set action='store_true' on options\n-        if value is None:\n+        if opt in (\"verbose\", \"v\"):\n+            value = 1\n+        elif value is None:\n             value = 1\n         self.global_set_option(opt, value)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/config/option_manager_mixin.py b/pylint/config/option_manager_mixin.py\nindex 073d6af..f056520 100644\n--- a/pylint/config/option_manager_mixin.py\n+++ b/pylint/config/option_manager_mixin.py\n@@ -112,7 +112,9 @@ class OptionsManagerMixIn:\n             opt = opt[2:]\n         else:\n             opt = self._short_options[opt[1:]]\n-        if value is None:\n+        if opt in ('verbose', 'v'):\n+            value = 1\n+        elif value is None:\n             value = 1\n         self.global_set_option(opt, value)\n     def global_set_option(self, opt, value):\n", "normalized_occurrence": 1}
