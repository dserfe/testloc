{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8621", "model_patch": "diff --git a/sphinx/roles.py b/sphinx/roles.py\nindex 307975f..0a17004 100644\n--- a/sphinx/roles.py\n+++ b/sphinx/roles.py\n@@ -131,7 +131,10 @@ class XRefRole(ReferenceRole):\n             return self.create_xref_node()\n \n     def create_non_xref_node(self) -> Tuple[List[Node], List[system_message]]:\n-        text = utils.unescape(self.text[1:])\n+        if self.name == 'kbd':\n+            text = self.text\n+        else:\n+            text = utils.unescape(self.text[1:])\n         if self.fix_parens:\n             self.has_explicit_title = False  # treat as implicit\n             text, target = self.update_title_and_target(text, \"\")\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/roles.py b/sphinx/roles.py\nindex ef483a8..06be4fa 100644\n--- a/sphinx/roles.py\n+++ b/sphinx/roles.py\n@@ -59,7 +59,10 @@ class XRefRole(ReferenceRole):\n         else:\n             return self.create_xref_node()\n     def create_non_xref_node(self) -> Tuple[List[Node], List[system_message]]:\n-        text = utils.unescape(self.text[1:])\n+        if self.name == 'kbd':\n+            text = self.text\n+        else:\n+            text = utils.unescape(self.text[1:])\n         if self.fix_parens:\n             self.has_explicit_title = False\n             text, target = self.update_title_and_target(text, '')\n", "normalized_occurrence": 1}
