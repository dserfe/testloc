{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-10451", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex c6bab1b..9437ff9 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -116,6 +116,10 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str],\n             continue\n \n         arg = arguments.get(name, {})\n+        # Skip adding duplicate type/param fields for *args and **kwargs\n+        if name.startswith('*'):\n+            continue\n+            \n         if not arg.get('type'):\n             field = nodes.field()\n             field += nodes.field_name('', 'type ' + name)\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 5da2ea8..249b826 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -86,6 +86,8 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str], suppr\n         if name == 'return':\n             continue\n         arg = arguments.get(name, {})\n+        if name.startswith('*'):\n+            continue\n         if not arg.get('type'):\n             field = nodes.field()\n             field += nodes.field_name('', 'type ' + name)\n", "normalized_occurrence": 2}
