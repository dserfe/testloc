{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-19487", "model_patch": "diff --git a/sympy/functions/elementary/miscellaneous.py b/sympy/functions/elementary/miscellaneous.py\nindex 6852819..b95ea6d 100644\n--- a/sympy/functions/elementary/miscellaneous.py\n+++ b/sympy/functions/elementary/miscellaneous.py\n@@ -645,9 +645,9 @@ class MinMaxBase(Expr, LatticeOp):\n \n     def _eval_rewrite_as_Abs(self, *args, **kwargs):\n         from sympy.functions.elementary.complexes import Abs\n-        s = (args[0] + self.func(*args[1:]))/2\n-        d = abs(args[0] - self.func(*args[1:]))/2\n-        return (s + d if isinstance(self, Max) else s - d).rewrite(Abs)\n+        if self.is_zero:\n+            return self\n+        return self / Abs(self)\n \n     def evalf(self, n=15, **options):\n         return self.func(*[a.evalf(n, **options) for a in self.args])\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/miscellaneous.py b/sympy/functions/elementary/miscellaneous.py\nindex b26bc6b..f39bab1 100644\n--- a/sympy/functions/elementary/miscellaneous.py\n+++ b/sympy/functions/elementary/miscellaneous.py\n@@ -232,9 +232,9 @@ class MinMaxBase(Expr, LatticeOp):\n         return Add(*l)\n     def _eval_rewrite_as_Abs(self, *args, **kwargs):\n         from sympy.functions.elementary.complexes import Abs\n-        s = (args[0] + self.func(*args[1:])) / 2\n-        d = abs(args[0] - self.func(*args[1:])) / 2\n-        return (s + d if isinstance(self, Max) else s - d).rewrite(Abs)\n+        if self.is_zero:\n+            return self\n+        return self / Abs(self)\n     def evalf(self, n=15, **options):\n         return self.func(*[a.evalf(n, **options) for a in self.args])\n     def n(self, *args, **kwargs):\n", "normalized_occurrence": 1}
