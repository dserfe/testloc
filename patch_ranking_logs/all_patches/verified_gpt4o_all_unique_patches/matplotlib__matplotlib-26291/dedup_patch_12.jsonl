{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-26291", "model_patch": "diff --git a/lib/matplotlib/offsetbox.py b/lib/matplotlib/offsetbox.py\nindex 8110df0..dfa649f 100644\n--- a/lib/matplotlib/offsetbox.py\n+++ b/lib/matplotlib/offsetbox.py\n@@ -394,8 +394,10 @@ class OffsetBox(martist.Artist):\n \n     def get_window_extent(self, renderer=None):\n         # docstring inherited\n-        if renderer is None:\n+        if renderer is None and hasattr(self.figure, '_get_renderer'):\n             renderer = self.figure._get_renderer()\n+        if renderer is None:\n+            raise AttributeError(\"Renderer is not initialized\")\n         bbox = self.get_bbox(renderer)\n         try:  # Some subclasses redefine get_offset to take no args.\n             px, py = self.get_offset(bbox, renderer)\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/offsetbox.py b/lib/matplotlib/offsetbox.py\nindex 509a096..aab3163 100644\n--- a/lib/matplotlib/offsetbox.py\n+++ b/lib/matplotlib/offsetbox.py\n@@ -359,8 +359,10 @@ class OffsetBox(martist.Artist):\n         return (bbox.width, bbox.height, -bbox.x0, -bbox.y0)\n \n     def get_window_extent(self, renderer=None):\n-        if renderer is None:\n+        if renderer is None and hasattr(self.figure, '_get_renderer'):\n             renderer = self.figure._get_renderer()\n+        if renderer is None:\n+            raise AttributeError('Renderer is not initialized')\n         bbox = self.get_bbox(renderer)\n         try:\n             px, py = self.get_offset(bbox, renderer)\n", "normalized_occurrence": 1}
