{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-24562", "model_patch": "diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\nindex 1c28b44..d10593c 100644\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -1613,10 +1613,16 @@ class Rational(Number):\n                         fq = fractions.Fraction(q)\n                         p = fp/fq\n                     try:\n-                        p = fractions.Fraction(p)\n+                        if '.' in p:\n+                            # Handle decimal strings by converting to float first\n+                            p = Rational(*_as_integer_ratio(float(p)))\n+                        else:\n+                            p = fractions.Fraction(p)\n                     except ValueError:\n                         pass  # error will raise below\n                     else:\n+                        if isinstance(p, Rational):\n+                            return p\n                         return Rational(p.numerator, p.denominator, 1)\n \n                 if not isinstance(p, Rational):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\nindex c0e7188..4b82371 100644\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -1399,10 +1399,15 @@ class Rational(Number):\n                         fq = fractions.Fraction(q)\n                         p = fp / fq\n                     try:\n-                        p = fractions.Fraction(p)\n+                        if '.' in p:\n+                            p = Rational(*_as_integer_ratio(float(p)))\n+                        else:\n+                            p = fractions.Fraction(p)\n                     except ValueError:\n                         pass\n                     else:\n+                        if isinstance(p, Rational):\n+                            return p\n                         return Rational(p.numerator, p.denominator, 1)\n                 if not isinstance(p, Rational):\n                     raise TypeError('invalid input: %s' % p)\n", "normalized_occurrence": 1}
