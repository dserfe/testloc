{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-21379", "model_patch": "diff --git a/sympy/functions/elementary/piecewise.py b/sympy/functions/elementary/piecewise.py\nindex 218f537..44ac136 100644\n--- a/sympy/functions/elementary/piecewise.py\n+++ b/sympy/functions/elementary/piecewise.py\n@@ -805,6 +805,8 @@ class Piecewise(Function):\n         return self.func(*[(e**s, c) for e, c in self.args])\n \n     def _eval_subs(self, old, new):\n+        from sympy.polys.polytools import Poly\n+        \n         # this is strictly not necessary, but we can keep track\n         # of whether True or False conditions arise and be\n         # somewhat more efficient by avoiding other substitutions\n@@ -822,6 +824,11 @@ class Piecewise(Function):\n                 break\n         if not args_exist:\n             args = ((Undefined, True),)\n+        \n+        # Ensure Piecewise does not interfere with polynomial checks\n+        if isinstance(old, Poly):\n+            return self\n+        \n         return self.func(*args)\n \n     def _eval_transpose(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/piecewise.py b/sympy/functions/elementary/piecewise.py\nindex e1c61a2..7a17377 100644\n--- a/sympy/functions/elementary/piecewise.py\n+++ b/sympy/functions/elementary/piecewise.py\n@@ -441,6 +441,7 @@ class Piecewise(Function):\n     def _eval_power(self, s):\n         return self.func(*[(e ** s, c) for e, c in self.args])\n     def _eval_subs(self, old, new):\n+        from sympy.polys.polytools import Poly\n         args = list(self.args)\n         args_exist = False\n         for i, (e, c) in enumerate(args):\n@@ -453,6 +454,8 @@ class Piecewise(Function):\n                 break\n         if not args_exist:\n             args = ((Undefined, True),)\n+        if isinstance(old, Poly):\n+            return self\n         return self.func(*args)\n     def _eval_transpose(self):\n         return self.func(*[(e.transpose(), c) for e, c in self.args])\n", "normalized_occurrence": 1}
