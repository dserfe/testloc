{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25311", "model_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 08e0049..d3a8623 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -3174,9 +3174,21 @@ None}, default: None\n         from matplotlib import _pylab_helpers\n         if self.canvas.manager in _pylab_helpers.Gcf.figs.values():\n             state['_restore_to_pylab'] = True\n+        # Ensure draggable artists are not pickled\n+        if hasattr(self, \"_draggable\"):\n+            state.pop(\"_draggable\")\n+        # Ensure draggable artists are not pickled\n+        if hasattr(self, \"_draggable\"):\n+            state.pop(\"_draggable\")\n         return state\n \n     def __setstate__(self, state):\n+        if \"_draggable\" in state:\n+            del state[\"_draggable\"]\n+\n+    def __setstate__(self, state):\n+        if \"_draggable\" in state:\n+            del state[\"_draggable\"]\n         version = state.pop('__mpl_version__')\n         restore_to_pylab = state.pop('_restore_to_pylab', False)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 7796fb8..eedd2a5 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -951,8 +951,17 @@ class Figure(FigureBase):\n         from matplotlib import _pylab_helpers\n         if self.canvas.manager in _pylab_helpers.Gcf.figs.values():\n             state['_restore_to_pylab'] = True\n+        if hasattr(self, '_draggable'):\n+            state.pop('_draggable')\n+        if hasattr(self, '_draggable'):\n+            state.pop('_draggable')\n         return state\n     def __setstate__(self, state):\n+        if '_draggable' in state:\n+            del state['_draggable']\n+    def __setstate__(self, state):\n+        if '_draggable' in state:\n+            del state['_draggable']\n         version = state.pop('__mpl_version__')\n         restore_to_pylab = state.pop('_restore_to_pylab', False)\n         if version != mpl.__version__:\n", "normalized_occurrence": 1}
