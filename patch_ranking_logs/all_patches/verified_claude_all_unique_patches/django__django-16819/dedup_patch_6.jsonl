{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16819", "model_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 42f1c50..9cd7d44 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -1235,13 +1235,21 @@ class MigrationAutodetector:\n             for new_index in added_indexes:\n                 new_index_dec = new_index.deconstruct()\n                 new_index_name = new_index_dec[2].pop(\"name\")\n+                new_index_fields = set(new_index_dec[2].get(\"fields\", []))\n+                new_index_expressions = tuple(new_index_dec[2].get(\"expressions\", []))\n+                \n                 for old_index in removed_indexes:\n                     old_index_dec = old_index.deconstruct()\n                     old_index_name = old_index_dec[2].pop(\"name\")\n-                    # Indexes are the same except for the names.\n+                    old_index_fields = set(old_index_dec[2].get(\"fields\", []))\n+                    old_index_expressions = tuple(old_index_dec[2].get(\"expressions\", []))\n+                    \n+                    # Consider indexes equivalent if they have the same fields/expressions\n+                    # and other critical properties, even if some options differ\n                     if (\n-                        new_index_dec == old_index_dec\n-                        and new_index_name != old_index_name\n+                        new_index_fields == old_index_fields and\n+                        new_index_expressions == old_index_expressions and\n+                        new_index_name != old_index_name\n                     ):\n                         renamed_indexes.append((old_index_name, new_index_name, None))\n                         remove_from_added.append(new_index)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex d5d6180..1f2dbe2 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -505,10 +505,14 @@ class MigrationAutodetector:\n             for new_index in added_indexes:\n                 new_index_dec = new_index.deconstruct()\n                 new_index_name = new_index_dec[2].pop('name')\n+                new_index_fields = set(new_index_dec[2].get('fields', []))\n+                new_index_expressions = tuple(new_index_dec[2].get('expressions', []))\n                 for old_index in removed_indexes:\n                     old_index_dec = old_index.deconstruct()\n                     old_index_name = old_index_dec[2].pop('name')\n-                    if new_index_dec == old_index_dec and new_index_name != old_index_name:\n+                    old_index_fields = set(old_index_dec[2].get('fields', []))\n+                    old_index_expressions = tuple(old_index_dec[2].get('expressions', []))\n+                    if new_index_fields == old_index_fields and new_index_expressions == old_index_expressions and (new_index_name != old_index_name):\n                         renamed_indexes.append((old_index_name, new_index_name, None))\n                         remove_from_added.append(new_index)\n                         remove_from_removed.append(old_index)\n", "normalized_occurrence": 1}
