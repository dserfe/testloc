{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-14365", "model_patch": "diff --git a/astropy/io/ascii/qdp.py b/astropy/io/ascii/qdp.py\nindex 92431f5..3b2dcc0 100644\n--- a/astropy/io/ascii/qdp.py\n+++ b/astropy/io/ascii/qdp.py\n@@ -68,7 +68,7 @@ def _line_type(line, delimiter=None):\n     _new_re = rf\"NO({sep}NO)+\"\n     _data_re = rf\"({_decimal_re}|NO|[-+]?nan)({sep}({_decimal_re}|NO|[-+]?nan))*)\"\n     _type_re = rf\"^\\s*((?P<command>{_command_re})|(?P<new>{_new_re})|(?P<data>{_data_re})?\\s*(\\!(?P<comment>.*))?\\s*$\"\n-    _line_type_re = re.compile(_type_re)\n+    _line_type_re = re.compile(_type_re, re.IGNORECASE)\n     line = line.strip()\n     if not line:\n         return \"comment\"\n@@ -297,7 +297,7 @@ def _get_tables_from_qdp_file(qdp_file, input_colnames=None, delimiter=None):\n                     # This should never happen, but just in case.\n                     if len(command) < 3:\n                         continue\n-                    err_specs[command[1].lower()] = [int(c) for c in command[2:]]\n+                    err_specs[command[1].upper()] = [int(c) for c in command[2:]]\n             if colnames is None:\n                 colnames = _interpret_err_lines(err_specs, ncol, names=input_colnames)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/io/ascii/qdp.py b/astropy/io/ascii/qdp.py\nindex 78a945e..3a928dd 100644\n--- a/astropy/io/ascii/qdp.py\n+++ b/astropy/io/ascii/qdp.py\n@@ -15,7 +15,7 @@ def _line_type(line, delimiter=None):\n     _new_re = f'NO({sep}NO)+'\n     _data_re = f'({_decimal_re}|NO|[-+]?nan)({sep}({_decimal_re}|NO|[-+]?nan))*)'\n     _type_re = f'^\\\\s*((?P<command>{_command_re})|(?P<new>{_new_re})|(?P<data>{_data_re})?\\\\s*(\\\\!(?P<comment>.*))?\\\\s*$'\n-    _line_type_re = re.compile(_type_re)\n+    _line_type_re = re.compile(_type_re, re.IGNORECASE)\n     line = line.strip()\n     if not line:\n         return 'comment'\n@@ -112,7 +112,7 @@ def _get_tables_from_qdp_file(qdp_file, input_colnames=None, delimiter=None):\n                     command = cline.strip().split()\n                     if len(command) < 3:\n                         continue\n-                    err_specs[command[1].lower()] = [int(c) for c in command[2:]]\n+                    err_specs[command[1].upper()] = [int(c) for c in command[2:]]\n             if colnames is None:\n                 colnames = _interpret_err_lines(err_specs, ncol, names=input_colnames)\n             if current_rows is None:\n", "normalized_occurrence": 1}
