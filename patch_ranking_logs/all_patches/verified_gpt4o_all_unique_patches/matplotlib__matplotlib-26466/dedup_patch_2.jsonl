{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-26466", "model_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 7ccddf3..3292c40 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -705,7 +705,7 @@ class Axes(_AxesBase):\n                  arrowprops=None, annotation_clip=None, **kwargs):\n         # Signature must match Annotation. This is verified in\n         # test_annotate_signature().\n-        a = mtext.Annotation(text, xy, xytext=xytext, xycoords=xycoords,\n+        a = mtext.Annotation(text, xy.copy(), xytext=xytext.copy() if xytext is not None else None, xycoords=xycoords,\n                              textcoords=textcoords, arrowprops=arrowprops,\n                              annotation_clip=annotation_clip, **kwargs)\n         a.set_transform(mtransforms.IdentityTransform())\n", "occurrence": 7, "normalized_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 6b25eeb..a464807 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -150,7 +150,7 @@ class Axes(_AxesBase):\n         return t\n     @_docstring.dedent_interpd\n     def annotate(self, text, xy, xytext=None, xycoords='data', textcoords=None, arrowprops=None, annotation_clip=None, **kwargs):\n-        a = mtext.Annotation(text, xy, xytext=xytext, xycoords=xycoords, textcoords=textcoords, arrowprops=arrowprops, annotation_clip=annotation_clip, **kwargs)\n+        a = mtext.Annotation(text, xy.copy(), xytext=xytext.copy() if xytext is not None else None, xycoords=xycoords, textcoords=textcoords, arrowprops=arrowprops, annotation_clip=annotation_clip, **kwargs)\n         a.set_transform(mtransforms.IdentityTransform())\n         if kwargs.get('clip_on', False) and a.get_clip_path() is None:\n             a.set_clip_path(self.patch)\n", "normalized_occurrence": 7}
