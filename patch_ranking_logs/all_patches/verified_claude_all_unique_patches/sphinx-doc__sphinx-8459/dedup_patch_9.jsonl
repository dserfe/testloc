{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-8459", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 6f90bd7..93f1ad9 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -40,10 +40,20 @@ def record_typehints(app: Sphinx, objtype: str, name: str, obj: Any,\n def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element) -> None:\n     if domain != 'py':\n         return\n-    if app.config.autodoc_typehints != 'description':\n-        return\n     if objtype == 'class' and app.config.autoclass_content not in ('init', 'both'):\n         return\n+        \n+    # Apply type aliases regardless of autodoc_typehints setting\n+    annotations = app.env.temp_data.get('annotations', {})\n+    if annotations:\n+        for name, type_hints in annotations.items():\n+            for key, value in type_hints.items():\n+                if value in app.config.autodoc_type_aliases:\n+                    type_hints[key] = app.config.autodoc_type_aliases[value]\n+\n+    # Return early if not in description mode\n+    if app.config.autodoc_typehints != 'description':\n+        return\n \n     try:\n         signature = cast(addnodes.desc_signature, contentnode.parent[0])\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 377d0c5..1649a3a 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -22,10 +22,16 @@ def record_typehints(app: Sphinx, objtype: str, name: str, obj: Any, options: Di\n def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element) -> None:\n     if domain != 'py':\n         return\n-    if app.config.autodoc_typehints != 'description':\n-        return\n     if objtype == 'class' and app.config.autoclass_content not in ('init', 'both'):\n         return\n+    annotations = app.env.temp_data.get('annotations', {})\n+    if annotations:\n+        for name, type_hints in annotations.items():\n+            for key, value in type_hints.items():\n+                if value in app.config.autodoc_type_aliases:\n+                    type_hints[key] = app.config.autodoc_type_aliases[value]\n+    if app.config.autodoc_typehints != 'description':\n+        return\n     try:\n         signature = cast(addnodes.desc_signature, contentnode.parent[0])\n         if signature['module']:\n", "normalized_occurrence": 1}
