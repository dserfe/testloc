{"model_name_or_path": "agentless_claude", "instance_id": "pylint-dev__pylint-7993", "model_patch": "diff --git a/pylint/reporters/text.py b/pylint/reporters/text.py\nindex 6c414e0..f6ddec4 100644\n--- a/pylint/reporters/text.py\n+++ b/pylint/reporters/text.py\n@@ -175,7 +175,12 @@ class TextReporter(BaseReporter):\n         self._template = template\n \n         # Check to see if all parameters in the template are attributes of the Message\n-        arguments = re.findall(r\"\\{(.+?)(:.*)?\\}\", template)\n+        # Replace double braces with a temporary marker\n+        template_normalized = template.replace(\"{{\", \"__DOUBLE_LBRACE__\").replace(\"}}\", \"__DOUBLE_RBRACE__\")\n+        # Find actual template arguments\n+        arguments = re.findall(r\"\\{(.+?)(:.*)?\\}\", template_normalized)\n+        # Restore double braces\n+        template = template_normalized.replace(\"__DOUBLE_LBRACE__\", \"{{\").replace(\"__DOUBLE_RBRACE__\", \"}}\")\n         for argument in arguments:\n             if argument[0] not in MESSAGE_FIELDS:\n                 warnings.warn(\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/reporters/text.py b/pylint/reporters/text.py\nindex 3d6bc44..63e5181 100644\n--- a/pylint/reporters/text.py\n+++ b/pylint/reporters/text.py\n@@ -66,7 +66,9 @@ class TextReporter(BaseReporter):\n         if template == self._template:\n             return\n         self._template = template\n-        arguments = re.findall('\\\\{(.+?)(:.*)?\\\\}', template)\n+        template_normalized = template.replace('{{', '__DOUBLE_LBRACE__').replace('}}', '__DOUBLE_RBRACE__')\n+        arguments = re.findall('\\\\{(.+?)(:.*)?\\\\}', template_normalized)\n+        template = template_normalized.replace('__DOUBLE_LBRACE__', '{{').replace('__DOUBLE_RBRACE__', '}}')\n         for argument in arguments:\n             if argument[0] not in MESSAGE_FIELDS:\n                 warnings.warn(f\"Don't recognize the argument '{argument[0]}' in the --msg-template. Are you sure it is supported on the current version of pylint?\")\n", "normalized_occurrence": 1}
