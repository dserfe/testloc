{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8721", "model_patch": "diff --git a/sphinx/ext/viewcode.py b/sphinx/ext/viewcode.py\nindex 27202ee..d1d6f86 100644\n--- a/sphinx/ext/viewcode.py\n+++ b/sphinx/ext/viewcode.py\n@@ -187,6 +187,8 @@ def collect_pages(app: Sphinx) -> Generator[Tuple[str, Dict[str, Any], str], Non\n \n     modnames = set(env._viewcode_modules)  # type: ignore\n \n+    if app.builder.format == 'epub' and not app.config.viewcode_enable_epub:\n+        return\n     for modname, entry in status_iterator(\n             sorted(env._viewcode_modules.items()),  # type: ignore\n             __('highlighting module code... '), \"blue\",\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/viewcode.py b/sphinx/ext/viewcode.py\nindex 5db007b..65eff14 100644\n--- a/sphinx/ext/viewcode.py\n+++ b/sphinx/ext/viewcode.py\n@@ -125,6 +125,8 @@ def collect_pages(app: Sphinx) -> Generator[Tuple[str, Dict[str, Any], str], Non\n     highlighter = app.builder.highlighter\n     urito = app.builder.get_relative_uri\n     modnames = set(env._viewcode_modules)\n+    if app.builder.format == 'epub' and (not app.config.viewcode_enable_epub):\n+        return\n     for modname, entry in status_iterator(sorted(env._viewcode_modules.items()), __('highlighting module code... '), 'blue', len(env._viewcode_modules), app.verbosity, lambda x: x[0]):\n         if not entry:\n             continue\n", "normalized_occurrence": 1}
