{"model_name_or_path": "agentless", "instance_id": "django__django-11211", "model_patch": "diff --git a/django/contrib/contenttypes/fields.py b/django/contrib/contenttypes/fields.py\nindex 3bf5851..cc714a2 100644\n--- a/django/contrib/contenttypes/fields.py\n+++ b/django/contrib/contenttypes/fields.py\n@@ -182,7 +182,7 @@ class GenericForeignKey(FieldCacheMixin):\n             # We avoid looking for values if either ct_id or fkey value is None\n             ct_id = getattr(instance, ct_attname)\n             if ct_id is not None:\n-                fk_val = getattr(instance, self.fk_field)\n+                fk_val = str(getattr(instance, self.fk_field))\n                 if fk_val is not None:\n                     fk_dict[ct_id].add(fk_val)\n                     instance_dict[ct_id] = instance\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/contenttypes/fields.py b/django/contrib/contenttypes/fields.py\nindex 8e99ea7..1668e76 100644\n--- a/django/contrib/contenttypes/fields.py\n+++ b/django/contrib/contenttypes/fields.py\n@@ -85,7 +85,7 @@ class GenericForeignKey(FieldCacheMixin):\n         for instance in instances:\n             ct_id = getattr(instance, ct_attname)\n             if ct_id is not None:\n-                fk_val = getattr(instance, self.fk_field)\n+                fk_val = str(getattr(instance, self.fk_field))\n                 if fk_val is not None:\n                     fk_dict[ct_id].add(fk_val)\n                     instance_dict[ct_id] = instance\n", "normalized_occurrence": 1}
