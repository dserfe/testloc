{"model_name_or_path": "agentless_claude", "instance_id": "mwaskom__seaborn-2848", "model_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 21c0562..acd418f 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -1565,10 +1565,18 @@ class PairGrid(Grid):\n         else:\n             hue = data.get(self._hue_var)\n \n-        if \"hue\" not in kwargs:\n-            kwargs.update({\n-                \"hue\": hue, \"hue_order\": self._hue_order, \"palette\": self._orig_palette,\n-            })\n+        plot_kwargs = {\n+            \"hue_order\": self._hue_order,\n+            \"palette\": self._orig_palette,\n+        }\n+        if \"hue\" in kwargs:\n+            # If hue is passed directly as data, use it\n+            plot_kwargs[\"hue\"] = kwargs.pop(\"hue\")\n+        else:\n+            # Otherwise use the hue from data subsetting\n+            plot_kwargs[\"hue\"] = hue\n+            \n+        kwargs.update(plot_kwargs)\n         func(x=x, y=y, **kwargs)\n \n         self._update_legend_data(ax)\n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 0807052..e7473c5 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -747,8 +747,12 @@ class PairGrid(Grid):\n             hue = None\n         else:\n             hue = data.get(self._hue_var)\n-        if 'hue' not in kwargs:\n-            kwargs.update({'hue': hue, 'hue_order': self._hue_order, 'palette': self._orig_palette})\n+        plot_kwargs = {'hue_order': self._hue_order, 'palette': self._orig_palette}\n+        if 'hue' in kwargs:\n+            plot_kwargs['hue'] = kwargs.pop('hue')\n+        else:\n+            plot_kwargs['hue'] = hue\n+        kwargs.update(plot_kwargs)\n         func(x=x, y=y, **kwargs)\n         self._update_legend_data(ax)\n     def _plot_bivariate_iter_hue(self, x_var, y_var, ax, func, **kwargs):\n", "normalized_occurrence": 1}
