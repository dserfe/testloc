{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-17655", "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex a708f18..0a05824 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -275,7 +275,10 @@ class Point(GeometryEntity):\n         sympy.geometry.point.Point.scale\n         \"\"\"\n         factor = sympify(factor)\n-        coords = [simplify(x*factor) for x in self.args]\n+        if isinstance(factor, Point):\n+            coords = [simplify(factor_coord * self_coord) for factor_coord, self_coord in zip(factor.args, self.args)]\n+        else:\n+            coords = [simplify(x*factor) for x in self.args]\n         return Point(coords, evaluate=False)\n \n     def __neg__(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex e45d95f..41095ea 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -88,7 +88,10 @@ class Point(GeometryEntity):\n         return len(self.args)\n     def __mul__(self, factor):\n         factor = sympify(factor)\n-        coords = [simplify(x * factor) for x in self.args]\n+        if isinstance(factor, Point):\n+            coords = [simplify(factor_coord * self_coord) for factor_coord, self_coord in zip(factor.args, self.args)]\n+        else:\n+            coords = [simplify(x * factor) for x in self.args]\n         return Point(coords, evaluate=False)\n     def __neg__(self):\n         coords = [-x for x in self.args]\n", "normalized_occurrence": 1}
