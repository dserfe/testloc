{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13773", "model_patch": "diff --git a/sympy/matrices/dense.py b/sympy/matrices/dense.py\nindex 8faef3a..d9e7ab7 100644\n--- a/sympy/matrices/dense.py\n+++ b/sympy/matrices/dense.py\n@@ -55,6 +55,20 @@ class DenseMatrix(MatrixBase):\n         except AttributeError:\n             return False\n \n+    def __matmul__(self, other):\n+        other = sympify(other)\n+        # Check if other is a scalar\n+        if not hasattr(other, 'shape'):\n+            raise ValueError(\"Scalar operands are not allowed, use '*' instead\")\n+        return self._eval_matrix_mul(other)\n+\n+    def __rmatmul__(self, other):\n+        other = sympify(other)\n+        # Check if other is a scalar\n+        if not hasattr(other, 'shape'):\n+            raise ValueError(\"Scalar operands are not allowed, use '*' instead\")\n+        return Matrix(other)._eval_matrix_mul(self)\n+\n     def __getitem__(self, key):\n         \"\"\"Return portion of self defined by key. If the key involves a slice\n         then a list will be returned (if key is a single slice) or a matrix\n", "occurrence": 1, "normalized_patch": "--- a/sympy/matrices/dense.py\n+++ b/sympy/matrices/dense.py\n+    def __matmul__(self, other):\n+        other = sympify(other)\n+        if not hasattr(other, 'shape'):\n+            raise ValueError(\"Scalar operands are not allowed, use '*' instead\")\n+        return self._eval_matrix_mul(other)\n+    def __rmatmul__(self, other):\n+        other = sympify(other)\n+        if not hasattr(other, 'shape'):\n+            raise ValueError(\"Scalar operands are not allowed, use '*' instead\")\n+        return Matrix(other)._eval_matrix_mul(self)", "normalized_occurrence": 2}
