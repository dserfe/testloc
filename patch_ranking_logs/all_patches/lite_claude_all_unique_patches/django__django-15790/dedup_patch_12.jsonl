{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15790", "model_patch": "diff --git a/django/core/checks/templates.py b/django/core/checks/templates.py\nindex df5ecff..c48ae59 100644\n--- a/django/core/checks/templates.py\n+++ b/django/core/checks/templates.py\n@@ -61,15 +61,17 @@ def check_for_template_tags_with_the_same_name(app_configs, **kwargs):\n         libraries[module_name].append(module_path)\n \n     for library_name, items in libraries.items():\n-        if len(items) > 1:\n+        # Deduplicate items to avoid false positives\n+        unique_items = list(dict.fromkeys(items))\n+        if len(unique_items) > 1:\n             errors.append(\n                 Error(\n                     E003.msg.format(\n                         repr(library_name),\n-                        \", \".join(repr(item) for item in items),\n+                        \", \".join(repr(item) for item in unique_items),\n                     ),\n                     id=E003.id,\n                 )\n             )\n \n-    return errors\n+    return errors\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/checks/templates.py b/django/core/checks/templates.py\nindex 768c076..0e4b3d1 100644\n--- a/django/core/checks/templates.py\n+++ b/django/core/checks/templates.py\n@@ -30,6 +30,7 @@ def check_for_template_tags_with_the_same_name(app_configs, **kwargs):\n     for module_name, module_path in get_template_tag_modules():\n         libraries[module_name].append(module_path)\n     for library_name, items in libraries.items():\n-        if len(items) > 1:\n-            errors.append(Error(E003.msg.format(repr(library_name), ', '.join((repr(item) for item in items))), id=E003.id))\n+        unique_items = list(dict.fromkeys(items))\n+        if len(unique_items) > 1:\n+            errors.append(Error(E003.msg.format(repr(library_name), ', '.join((repr(item) for item in unique_items))), id=E003.id))\n     return errors\n\\ No newline at end of file\n", "normalized_occurrence": 7}
