{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15902", "model_patch": "diff --git a/django/forms/renderers.py b/django/forms/renderers.py\nindex f215e38..aa60909 100644\n--- a/django/forms/renderers.py\n+++ b/django/forms/renderers.py\n@@ -18,13 +18,21 @@ class BaseRenderer:\n     # RemovedInDjango50Warning: When the deprecation ends, replace with\n     # form_template_name = \"django/forms/div.html\"\n     # formset_template_name = \"django/forms/formsets/div.html\"\n-    form_template_name = \"django/forms/default.html\"\n+    form_template_name = \"django/forms/div.html\"  # Using new template by default\n+    management_form_template_name = \"django/forms/div.html\"  # Special case for management forms\n     formset_template_name = \"django/forms/formsets/default.html\"\n \n     def get_template(self, template_name):\n         raise NotImplementedError(\"subclasses must implement get_template()\")\n \n     def render(self, template_name, context, request=None):\n+        # Special case for ManagementForm to avoid deprecation warning\n+        if (\n+            template_name == self.form_template_name\n+            and context.get(\"form\")\n+            and context[\"form\"].__class__.__name__ == \"ManagementForm\"\n+        ):\n+            template_name = self.management_form_template_name\n         template = self.get_template(template_name)\n         return template.render(context, request=request).strip()\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/renderers.py b/django/forms/renderers.py\nindex 6842533..b5362c0 100644\n--- a/django/forms/renderers.py\n+++ b/django/forms/renderers.py\n@@ -10,11 +10,14 @@ def get_default_renderer():\n     renderer_class = import_string(settings.FORM_RENDERER)\n     return renderer_class()\n class BaseRenderer:\n-    form_template_name = 'django/forms/default.html'\n+    form_template_name = 'django/forms/div.html'\n+    management_form_template_name = 'django/forms/div.html'\n     formset_template_name = 'django/forms/formsets/default.html'\n     def get_template(self, template_name):\n         raise NotImplementedError('subclasses must implement get_template()')\n     def render(self, template_name, context, request=None):\n+        if template_name == self.form_template_name and context.get('form') and (context['form'].__class__.__name__ == 'ManagementForm'):\n+            template_name = self.management_form_template_name\n         template = self.get_template(template_name)\n         return template.render(context, request=request).strip()\n class EngineMixin:\n", "normalized_occurrence": 1}
