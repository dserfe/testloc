{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-15976", "model_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 85af872..4514fe1 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -743,11 +743,21 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n         return mrow\n \n     def _print_Symbol(self, sym, style='plain'):\n-        x = self.dom.createElement('mi')\n-\n+        name = str(sym)\n+        if any(char.isdigit() for char in name):\n+            x = self.dom.createElement('msub')\n+            base = self.dom.createElement('mi')\n+            base.appendChild(self.dom.createTextNode(name.rstrip('0123456789')))\n+            sub = self.dom.createElement('mn')\n+            sub.appendChild(self.dom.createTextNode(name[len(name.rstrip('0123456789')):]))\n+            x.appendChild(base)\n+            x.appendChild(sub)\n+        else:\n+            x = self.dom.createElement('mi')\n+        \n         if style == 'bold':\n             x.setAttribute('mathvariant', 'bold')\n-\n+        \n         def join(items):\n             if len(items) > 1:\n                 mrow = self.dom.createElement('mrow')\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 28d3e1a..95a29d0 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -516,7 +516,17 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n             mrow.appendChild(fence)\n         return mrow\n     def _print_Symbol(self, sym, style='plain'):\n-        x = self.dom.createElement('mi')\n+        name = str(sym)\n+        if any((char.isdigit() for char in name)):\n+            x = self.dom.createElement('msub')\n+            base = self.dom.createElement('mi')\n+            base.appendChild(self.dom.createTextNode(name.rstrip('0123456789')))\n+            sub = self.dom.createElement('mn')\n+            sub.appendChild(self.dom.createTextNode(name[len(name.rstrip('0123456789')):]))\n+            x.appendChild(base)\n+            x.appendChild(sub)\n+        else:\n+            x = self.dom.createElement('mi')\n         if style == 'bold':\n             x.setAttribute('mathvariant', 'bold')\n         def join(items):\n", "normalized_occurrence": 1}
