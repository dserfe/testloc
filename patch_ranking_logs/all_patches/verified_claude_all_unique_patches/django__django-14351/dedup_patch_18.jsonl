{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14351", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex e16dbc0..a6db5c6 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -232,6 +232,11 @@ class SQLCompiler:\n             cols = self.query.select\n         if cols:\n             select_list = []\n+            # When dealing with an __in lookup in a subquery, we only need the primary key\n+            if getattr(self.query, 'subquery', False) and any(\n+                isinstance(child, RelatedIn) for child in self.query.where.children\n+            ):\n+                cols = [cols[0]]  # Only use the first column (usually the pk)\n             for col in cols:\n                 select_list.append(select_idx)\n                 select.append((col, None))\n", "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex b3e101b..f8c7a49 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -104,6 +104,8 @@ class SQLCompiler:\n             cols = self.query.select\n         if cols:\n             select_list = []\n+            if getattr(self.query, 'subquery', False) and any((isinstance(child, RelatedIn) for child in self.query.where.children)):\n+                cols = [cols[0]]\n             for col in cols:\n                 select_list.append(select_idx)\n                 select.append((col, None))\n", "normalized_occurrence": 1}
