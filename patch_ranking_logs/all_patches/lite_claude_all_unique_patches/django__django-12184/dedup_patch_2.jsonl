{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12184", "model_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 1a3b6f6..241daa8 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -160,6 +160,9 @@ class RegexPattern(CheckURLMixin):\n             # positional arguments.\n             kwargs = {k: v for k, v in match.groupdict().items() if v is not None}\n             args = () if kwargs else match.groups()\n+            # If all named groups were None, use positional args instead\n+            if not kwargs and match.groupdict():\n+                args = match.groups()\n             return path[match.end():], args, kwargs\n         return None\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex a06ca7c..95edb02 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -93,6 +93,8 @@ class RegexPattern(CheckURLMixin):\n         if match:\n             kwargs = {k: v for k, v in match.groupdict().items() if v is not None}\n             args = () if kwargs else match.groups()\n+            if not kwargs and match.groupdict():\n+                args = match.groups()\n             return (path[match.end():], args, kwargs)\n         return None\n     def check(self):\n", "normalized_occurrence": 1}
