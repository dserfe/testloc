{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-10466", "model_patch": "diff --git a/sphinx/builders/gettext.py b/sphinx/builders/gettext.py\nindex c138802..58cef89 100644\n--- a/sphinx/builders/gettext.py\n+++ b/sphinx/builders/gettext.py\n@@ -58,8 +58,15 @@ class Catalog:\n     def __iter__(self) -> Generator[Message, None, None]:\n         for message in self.messages:\n             positions = [(source, line) for source, line, uuid in self.metadata[message]]\n+            # Deduplicate positions while maintaining order\n+            seen = set()\n+            unique_positions = []\n+            for pos in positions:\n+                if pos not in seen:\n+                    seen.add(pos)\n+                    unique_positions.append(pos)\n             uuids = [uuid for source, line, uuid in self.metadata[message]]\n-            yield Message(message, positions, uuids)\n+            yield Message(message, unique_positions, uuids)\n \n \n class MsgOrigin:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/builders/gettext.py b/sphinx/builders/gettext.py\nindex 906ebf1..7c6aa7a 100644\n--- a/sphinx/builders/gettext.py\n+++ b/sphinx/builders/gettext.py\n@@ -40,8 +40,14 @@ class Catalog:\n     def __iter__(self) -> Generator[Message, None, None]:\n         for message in self.messages:\n             positions = [(source, line) for source, line, uuid in self.metadata[message]]\n+            seen = set()\n+            unique_positions = []\n+            for pos in positions:\n+                if pos not in seen:\n+                    seen.add(pos)\n+                    unique_positions.append(pos)\n             uuids = [uuid for source, line, uuid in self.metadata[message]]\n-            yield Message(message, positions, uuids)\n+            yield Message(message, unique_positions, uuids)\n class MsgOrigin:\n     def __init__(self, source: str, line: int) -> None:\n         self.source = source\n", "normalized_occurrence": 1}
