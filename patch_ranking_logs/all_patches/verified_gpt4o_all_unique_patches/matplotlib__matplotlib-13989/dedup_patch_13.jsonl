{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-13989", "model_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 6b68737..a00d2af 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -6684,9 +6684,8 @@ optional.\n         else:\n             hist_kwargs['range'] = bin_range\n \n-        density = bool(density) or bool(normed)\n-        if density and not stacked:\n-            hist_kwargs = dict(density=density)\n+        if density:\n+            hist_kwargs['density'] = density\n \n         # List to store all the top coordinates of the histograms\n         tops = []\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 6343f7e..2c6ac50 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -2030,9 +2030,8 @@ class Axes(_AxesBase):\n             bins = histogram_bin_edges(np.concatenate(x), bins, bin_range, _w)\n         else:\n             hist_kwargs['range'] = bin_range\n-        density = bool(density) or bool(normed)\n-        if density and (not stacked):\n-            hist_kwargs = dict(density=density)\n+        if density:\n+            hist_kwargs['density'] = density\n         tops = []\n         mlast = None\n         for i in range(nx):\n", "normalized_occurrence": 1}
