{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-20488", "model_patch": "diff --git a/lib/matplotlib/colors.py b/lib/matplotlib/colors.py\nindex bbcae54..828e52b 100644\n--- a/lib/matplotlib/colors.py\n+++ b/lib/matplotlib/colors.py\n@@ -1546,10 +1546,20 @@ class LogNorm(Normalize):\n     def autoscale(self, A):\n         # docstring inherited.\n         super().autoscale(np.ma.masked_less_equal(A, 0, copy=False))\n+        if not (self.vmin is None or self.vmax is None):\n+            if self.vmin <= 0:\n+                self.vmin = np.min(A[A > 0])\n+            if self.vmax <= 0:\n+                self.vmax = np.max(A[A > 0])\n \n     def autoscale_None(self, A):\n         # docstring inherited.\n         super().autoscale_None(np.ma.masked_less_equal(A, 0, copy=False))\n+        if not (self.vmin is None or self.vmax is None):\n+            if self.vmin <= 0:\n+                self.vmin = np.min(A[A > 0])\n+            if self.vmax <= 0:\n+                self.vmax = np.max(A[A > 0])\n \n \n @_make_norm_from_scale(\n", "normalized_patch": "diff --git a/lib/matplotlib/colors.py b/lib/matplotlib/colors.py\nindex 8344e52..6347667 100644\n--- a/lib/matplotlib/colors.py\n+++ b/lib/matplotlib/colors.py\n@@ -1331,9 +1331,19 @@ class LogNorm(Normalize):\n \n     def autoscale(self, A):\n         super().autoscale(np.ma.masked_less_equal(A, 0, copy=False))\n+        if not (self.vmin is None or self.vmax is None):\n+            if self.vmin <= 0:\n+                self.vmin = np.min(A[A > 0])\n+            if self.vmax <= 0:\n+                self.vmax = np.max(A[A > 0])\n \n     def autoscale_None(self, A):\n         super().autoscale_None(np.ma.masked_less_equal(A, 0, copy=False))\n+        if not (self.vmin is None or self.vmax is None):\n+            if self.vmin <= 0:\n+                self.vmin = np.min(A[A > 0])\n+            if self.vmax <= 0:\n+                self.vmax = np.max(A[A > 0])\n \n @_make_norm_from_scale(scale.SymmetricalLogScale, init=lambda linthresh, linscale=1.0, vmin=None, vmax=None, clip=False, *, base=10: None)\n class SymLogNorm(Normalize):\n", "normalized_occurrence": 1}
