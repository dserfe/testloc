{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-4094", "model_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex 1e17b93..297f145 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -3453,6 +3453,8 @@ class Dataset(Mapping, ImplementsDatasetReduce, DataWithCoords):\n \n         def ensure_stackable(val):\n             assign_coords = {variable_dim: val.name}\n+            if not stacking_dims:  # Handle single-dimension variables\n+                assign_coords[new_dim] = val.name\n             for dim in stacking_dims:\n                 if dim not in val.dims:\n                     assign_coords[dim] = None\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex 21ef2a4..893a165 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -1147,6 +1147,8 @@ class Dataset(Mapping, ImplementsDatasetReduce, DataWithCoords):\n                 raise ValueError('All variables in the dataset must contain the dimensions {}.'.format(dims))\n         def ensure_stackable(val):\n             assign_coords = {variable_dim: val.name}\n+            if not stacking_dims:\n+                assign_coords[new_dim] = val.name\n             for dim in stacking_dims:\n                 if dim not in val.dims:\n                     assign_coords[dim] = None\n", "normalized_occurrence": 1}
