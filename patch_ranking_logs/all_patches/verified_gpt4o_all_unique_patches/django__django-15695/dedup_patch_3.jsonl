{"model_name_or_path": "agentless", "instance_id": "django__django-15695", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex b086232..135659e 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -966,22 +966,18 @@ class RenameIndex(IndexOperation):\n         schema_editor.rename_index(model, old_index, new_index)\n \n     def database_backwards(self, app_label, schema_editor, from_state, to_state):\n-        if self.old_fields:\n-            # Backward operation with unnamed index is a no-op.\n-            return\n+        if not self.old_name:\n+            # Backward operation with unnamed index should restore old auto-generated name.\n+            from_model_state = from_state.models[app_label, self.model_name_lower]\n+            old_index = from_model_state.get_index_by_fields(self.old_fields)\n+            self.old_name = old_index.name\n \n-        self.new_name_lower, self.old_name_lower = (\n-            self.old_name_lower,\n-            self.new_name_lower,\n-        )\n+        self.new_name_lower, self.old_name_lower = self.old_name_lower, self.new_name_lower\n         self.new_name, self.old_name = self.old_name, self.new_name\n \n         self.database_forwards(app_label, schema_editor, from_state, to_state)\n \n-        self.new_name_lower, self.old_name_lower = (\n-            self.old_name_lower,\n-            self.new_name_lower,\n-        )\n+        self.new_name_lower, self.old_name_lower = self.old_name_lower, self.new_name_lower\n         self.new_name, self.old_name = self.old_name, self.new_name\n \n     def describe(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 87ad28e..2c0b6cf 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -435,8 +435,10 @@ class RenameIndex(IndexOperation):\n         new_index = to_model_state.get_index_by_name(self.new_name)\n         schema_editor.rename_index(model, old_index, new_index)\n     def database_backwards(self, app_label, schema_editor, from_state, to_state):\n-        if self.old_fields:\n-            return\n+        if not self.old_name:\n+            from_model_state = from_state.models[app_label, self.model_name_lower]\n+            old_index = from_model_state.get_index_by_fields(self.old_fields)\n+            self.old_name = old_index.name\n         self.new_name_lower, self.old_name_lower = (self.old_name_lower, self.new_name_lower)\n         self.new_name, self.old_name = (self.old_name, self.new_name)\n         self.database_forwards(app_label, schema_editor, from_state, to_state)\n", "normalized_occurrence": 1}
