{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-14024", "model_patch": "diff --git a/sympy/core/power.py b/sympy/core/power.py\nindex 0a340d5..f006420 100644\n--- a/sympy/core/power.py\n+++ b/sympy/core/power.py\n@@ -262,7 +262,12 @@ class Pow(Expr):\n                 if e.is_even:\n                     b = -b\n                 elif e.is_odd:\n-                    return -Pow(-b, e)\n+                    # Ensure the base is positive before proceeding with the simplification\n+                    # This prevents incorrect behavior when substituting specific values later\n+                    if b.is_positive:\n+                        return -Pow(-b, e)\n+                    else:\n+                        return Pow(b, e)\n             if S.NaN in (b, e):  # XXX S.NaN**x -> S.NaN under assumption that x != 0\n                 return S.NaN\n             elif b is S.One:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/power.py b/sympy/core/power.py\nindex f12eb85..a26829a 100644\n--- a/sympy/core/power.py\n+++ b/sympy/core/power.py\n@@ -105,7 +105,10 @@ class Pow(Expr):\n                 if e.is_even:\n                     b = -b\n                 elif e.is_odd:\n-                    return -Pow(-b, e)\n+                    if b.is_positive:\n+                        return -Pow(-b, e)\n+                    else:\n+                        return Pow(b, e)\n             if S.NaN in (b, e):\n                 return S.NaN\n             elif b is S.One:\n", "normalized_occurrence": 1}
