{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-24149", "model_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 5af9d96..e0221e4 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -2188,13 +2188,16 @@ class Axes(_AxesBase):\n             except (TypeError, IndexError, KeyError):\n                 x = xconv\n \n-            delist = False\n+            if x is np.nan:\n+                dx = convert(dx)\n+            else:\n+                delist = False\n             if not np.iterable(dx):\n                 dx = [dx]\n                 delist = True\n-            dx = [convert(x0 + ddx) - x for ddx in dx]\n-            if delist:\n-                dx = dx[0]\n+                dx = [convert(x0 + ddx) - x for ddx in dx]\n+                if delist:\n+                    dx = dx[0]\n         except (ValueError, TypeError, AttributeError):\n             # if the above fails (for any reason) just fallback to what\n             # we do by default and convert dx by itself.\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 5336f05..bf21ca3 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -463,13 +463,16 @@ class Axes(_AxesBase):\n                 x = cbook._safe_first_finite(xconv)\n             except (TypeError, IndexError, KeyError):\n                 x = xconv\n-            delist = False\n+            if x is np.nan:\n+                dx = convert(dx)\n+            else:\n+                delist = False\n             if not np.iterable(dx):\n                 dx = [dx]\n                 delist = True\n-            dx = [convert(x0 + ddx) - x for ddx in dx]\n-            if delist:\n-                dx = dx[0]\n+                dx = [convert(x0 + ddx) - x for ddx in dx]\n+                if delist:\n+                    dx = dx[0]\n         except (ValueError, TypeError, AttributeError):\n             dx = convert(dx)\n         return dx\n", "normalized_occurrence": 1}
