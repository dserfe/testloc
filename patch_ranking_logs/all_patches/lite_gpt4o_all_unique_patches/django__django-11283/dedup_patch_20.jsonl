{"model_name_or_path": "agentless", "instance_id": "django__django-11283", "model_patch": "diff --git a/django/contrib/auth/migrations/0011_update_proxy_permissions.py b/django/contrib/auth/migrations/0011_update_proxy_permissions.py\nindex e1e636f..cd4984e 100644\n--- a/django/contrib/auth/migrations/0011_update_proxy_permissions.py\n+++ b/django/contrib/auth/migrations/0011_update_proxy_permissions.py\n@@ -17,9 +17,9 @@ def update_proxy_model_permissions(apps, schema_editor, reverse=False):\n             '%s_%s' % (action, opts.model_name)\n             for action in opts.default_permissions\n         ]\n-        permissions_query = Q(codename__in=proxy_default_permissions_codenames)\n-        for codename, name in opts.permissions:\n-            permissions_query = permissions_query | Q(codename=codename, name=name)\n+        permissions_query = Q(codename__in=proxy_default_permissions_codenames) | Q(\n+            codename__in=[codename for codename, name in opts.permissions]\n+        )\n         concrete_content_type = ContentType.objects.get_for_model(Model, for_concrete_model=True)\n         proxy_content_type = ContentType.objects.get_for_model(Model, for_concrete_model=False)\n         old_content_type = proxy_content_type if reverse else concrete_content_type\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/auth/migrations/0011_update_proxy_permissions.py b/django/contrib/auth/migrations/0011_update_proxy_permissions.py\nindex 15a57c8..824617d 100644\n--- a/django/contrib/auth/migrations/0011_update_proxy_permissions.py\n+++ b/django/contrib/auth/migrations/0011_update_proxy_permissions.py\n@@ -8,9 +8,7 @@ def update_proxy_model_permissions(apps, schema_editor, reverse=False):\n         if not opts.proxy:\n             continue\n         proxy_default_permissions_codenames = ['%s_%s' % (action, opts.model_name) for action in opts.default_permissions]\n-        permissions_query = Q(codename__in=proxy_default_permissions_codenames)\n-        for codename, name in opts.permissions:\n-            permissions_query = permissions_query | Q(codename=codename, name=name)\n+        permissions_query = Q(codename__in=proxy_default_permissions_codenames) | Q(codename__in=[codename for codename, name in opts.permissions])\n         concrete_content_type = ContentType.objects.get_for_model(Model, for_concrete_model=True)\n         proxy_content_type = ContentType.objects.get_for_model(Model, for_concrete_model=False)\n         old_content_type = proxy_content_type if reverse else concrete_content_type\n", "normalized_occurrence": 1}
