{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-23262", "model_patch": "diff --git a/sympy/printing/pycode.py b/sympy/printing/pycode.py\nindex 9b53255..8657268 100644\n--- a/sympy/printing/pycode.py\n+++ b/sympy/printing/pycode.py\n@@ -536,6 +536,12 @@ class PythonCodePrinter(AbstractPythonCodePrinter):\n         PREC = precedence(expr)\n         return self._operators['not'] + self.parenthesize(expr.args[0], PREC)\n \n+    def _print_Tuple(self, expr):\n+        if len(expr) == 1:\n+            return f\"({self._print(expr[0])},)\"\n+        else:\n+            return f\"({', '.join(self._print(arg) for arg in expr)})\"\n+\n     def _print_Indexed(self, expr):\n         base = expr.args[0]\n         index = expr.args[1:]\n", "occurrence": 1, "normalized_patch": "--- a/sympy/printing/pycode.py\n+++ b/sympy/printing/pycode.py\n+    def _print_Tuple(self, expr):\n+        if len(expr) == 1:\n+            return f'({self._print(expr[0])},)'\n+        else:\n+            return f\"({', '.join((self._print(arg) for arg in expr))})\"", "normalized_occurrence": 1}
