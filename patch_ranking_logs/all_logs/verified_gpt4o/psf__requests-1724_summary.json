{
  "instance_id": "psf__requests-1724",
  "container_id": "2d6ac4be2ca53be4eccf8f8c3a753ca3ae40baee324c199d7330f73b14443d38",
  "regression": {
    "results": [
      {
        "patch_file": "all_patches/verified_gpt4o_all_unique_patches/psf__requests-1724/dedup_patch_0.jsonl",
        "inst": "psf__requests-1724",
        "passed": 7,
        "failed": 0
      },
      {
        "patch_file": "all_patches/verified_gpt4o_all_unique_patches/psf__requests-1724/dedup_patch_3.jsonl",
        "inst": "psf__requests-1724",
        "passed": 7,
        "failed": 0
      },
      {
        "patch_file": "all_patches/verified_gpt4o_all_unique_patches/psf__requests-1724/dedup_patch_1.jsonl",
        "inst": "psf__requests-1724",
        "passed": 1,
        "failed": 6
      },
      {
        "patch_file": "all_patches/verified_gpt4o_all_unique_patches/psf__requests-1724/dedup_patch_2.jsonl",
        "inst": "psf__requests-1724",
        "passed": 1,
        "failed": 6
      },
      {
        "patch_file": "all_patches/verified_gpt4o_all_unique_patches/psf__requests-1724/dedup_patch_4.jsonl",
        "inst": "psf__requests-1724",
        "passed": 1,
        "failed": 6
      }
    ],
    "top_passed": 7,
    "top_subset_size": 2
  },
  "reproduction": {
    "test_requests.py::UtilsTestCase::test_unicode_method_name#1": {
      "repro_fails_on_clean": true,
      "outcomes": [
        {
          "patch_file": "all_patches/verified_gpt4o_all_unique_patches/psf__requests-1724/dedup_patch_0.jsonl",
          "inst": "psf__requests-1724",
          "passed": false
        },
        {
          "patch_file": "all_patches/verified_gpt4o_all_unique_patches/psf__requests-1724/dedup_patch_3.jsonl",
          "inst": "psf__requests-1724",
          "passed": false
        }
      ]
    },
    "test_requests.py::RequestsTestCase::test_unicode_method_name#2": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "test_requests.py::RequestsTestCase::test_unicode_method_name#3": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "test_requests.py::RequestsTestCase::test_unicode_method_name#4": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "test_requests.py::RequestsTestCase::test_unicode_method_name#5": {
      "repro_fails_on_clean": false,
      "outcomes": []
    }
  }
}