{"model_name_or_path": "agentless_claude", "instance_id": "django__django-17087", "model_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex 941a5ed..7c13d06 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -100,13 +100,26 @@ class DeconstructableSerializer(BaseSerializer):\n \n     @staticmethod\n     def _serialize_path(path):\n-        module, name = path.rsplit(\".\", 1)\n-        if module == \"django.db.models\":\n+        module_path, name = path.rsplit(\".\", 1)\n+        if module_path == \"django.db.models\":\n             imports = {\"from django.db import models\"}\n             name = \"models.%s\" % name\n         else:\n-            imports = {\"import %s\" % module}\n-            name = path\n+            # Split on dots and look for the module part\n+            parts = module_path.split('.')\n+            for i in range(len(parts), 0, -1):\n+                try:\n+                    importlib.import_module('.'.join(parts[:i]))\n+                    module = '.'.join(parts[:i])\n+                    remainder = '.'.join(parts[i:] + [name])\n+                    imports = {\"import %s\" % module}\n+                    name = \"%s.%s\" % (module, remainder)\n+                    break\n+                except ImportError:\n+                    continue\n+            else:\n+                imports = {\"import %s\" % module_path}\n+                name = path\n         return name, imports\n \n     def serialize(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex bd46ec1..54657e0 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -70,13 +70,25 @@ class DeconstructableSerializer(BaseSerializer):\n         return ('%s(%s)' % (name, ', '.join(strings)), imports)\n     @staticmethod\n     def _serialize_path(path):\n-        module, name = path.rsplit('.', 1)\n-        if module == 'django.db.models':\n+        module_path, name = path.rsplit('.', 1)\n+        if module_path == 'django.db.models':\n             imports = {'from django.db import models'}\n             name = 'models.%s' % name\n         else:\n-            imports = {'import %s' % module}\n-            name = path\n+            parts = module_path.split('.')\n+            for i in range(len(parts), 0, -1):\n+                try:\n+                    importlib.import_module('.'.join(parts[:i]))\n+                    module = '.'.join(parts[:i])\n+                    remainder = '.'.join(parts[i:] + [name])\n+                    imports = {'import %s' % module}\n+                    name = '%s.%s' % (module, remainder)\n+                    break\n+                except ImportError:\n+                    continue\n+            else:\n+                imports = {'import %s' % module_path}\n+                name = path\n         return (name, imports)\n     def serialize(self):\n         return self.serialize_deconstructed(*self.value.deconstruct())\n", "normalized_occurrence": 1}
