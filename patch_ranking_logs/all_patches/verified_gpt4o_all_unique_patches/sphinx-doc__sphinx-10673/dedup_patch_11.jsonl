{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-10673", "model_patch": "diff --git a/sphinx/builders/html/__init__.py b/sphinx/builders/html/__init__.py\nindex 516651b..f824339 100644\n--- a/sphinx/builders/html/__init__.py\n+++ b/sphinx/builders/html/__init__.py\n@@ -714,6 +714,7 @@ class StandaloneHTMLBuilder(Builder):\n \n         # the search page\n         if self.search:\n+            self.handle_page('search', {}, 'search.html')\n             logger.info('search ', nonl=True)\n             self.handle_page('search', {}, 'search.html')\n \n@@ -724,6 +725,9 @@ class StandaloneHTMLBuilder(Builder):\n             self.handle_page('opensearch', {}, 'opensearch.xml', outfilename=fn)\n \n     def write_genindex(self) -> None:\n+        # Ensure the genindex document is created\n+        if not self.env.config.html_split_index:\n+            self.env.found_docs.add('genindex')\n         # the total count of lines for each index letter, used to distribute\n         # the entries into two columns\n         genindex = IndexEntries(self.env).create_index(self)\n@@ -753,6 +757,8 @@ class StandaloneHTMLBuilder(Builder):\n             self.handle_page('genindex', genindexcontext, 'genindex.html')\n \n     def write_domain_indices(self) -> None:\n+        # Ensure the modindex document is created\n+        self.env.found_docs.add('modindex')\n         for indexname, indexcls, content, collapse in self.domain_indices:\n             indexcontext = {\n                 'indextitle': indexcls.localname,\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/builders/html/__init__.py b/sphinx/builders/html/__init__.py\nindex b5b9117..4b609e8 100644\n--- a/sphinx/builders/html/__init__.py\n+++ b/sphinx/builders/html/__init__.py\n@@ -434,6 +434,7 @@ class StandaloneHTMLBuilder(Builder):\n             logger.info(pagename + ' ', nonl=True)\n             self.handle_page(pagename, {}, template)\n         if self.search:\n+            self.handle_page('search', {}, 'search.html')\n             logger.info('search ', nonl=True)\n             self.handle_page('search', {}, 'search.html')\n         if self.config.html_use_opensearch and self.search:\n@@ -441,6 +442,8 @@ class StandaloneHTMLBuilder(Builder):\n             fn = path.join(self.outdir, '_static', 'opensearch.xml')\n             self.handle_page('opensearch', {}, 'opensearch.xml', outfilename=fn)\n     def write_genindex(self) -> None:\n+        if not self.env.config.html_split_index:\n+            self.env.found_docs.add('genindex')\n         genindex = IndexEntries(self.env).create_index(self)\n         indexcounts = []\n         for _k, entries in genindex:\n@@ -456,6 +459,7 @@ class StandaloneHTMLBuilder(Builder):\n         else:\n             self.handle_page('genindex', genindexcontext, 'genindex.html')\n     def write_domain_indices(self) -> None:\n+        self.env.found_docs.add('modindex')\n         for indexname, indexcls, content, collapse in self.domain_indices:\n             indexcontext = {'indextitle': indexcls.localname, 'content': content, 'collapse_index': collapse}\n             logger.info(indexname + ' ', nonl=True)\n", "normalized_occurrence": 1}
