{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-15346", "model_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex 9a2774b..ab41576 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -443,6 +443,9 @@ def trigsimp(expr, **opts):\n     collection of trigonometric transformations described by Fu, et al.\n     (see the `fu` docstring).\n \n+    For expressions of the form sin(a)*sin(b) + cos(a)*cos(b) where a and b\n+    are rational numbers, this will be automatically simplified to cos(a-b).\n+\n \n     Examples\n     ========\n@@ -479,6 +482,24 @@ def trigsimp(expr, **opts):\n         return expr._eval_trigsimp(**opts)\n     except AttributeError:\n         pass\n+        \n+    # Handle special case for rational arguments\n+    from sympy import Add, Mul, sin, cos, Rational\n+    if isinstance(expr, Add) and len(expr.args) == 2:\n+        term1, term2 = expr.args\n+        if (isinstance(term1, Mul) and len(term1.args) == 2 and\n+            isinstance(term2, Mul) and len(term2.args) == 2):\n+            if ((isinstance(term1.args[0], sin) and isinstance(term1.args[1], sin) and\n+                 isinstance(term2.args[0], cos) and isinstance(term2.args[1], cos)) or\n+                (isinstance(term1.args[0], cos) and isinstance(term1.args[1], cos) and\n+                 isinstance(term2.args[0], sin) and isinstance(term2.args[1], sin))):\n+                arg1_1 = term1.args[0].args[0]\n+                arg1_2 = term1.args[1].args[0]\n+                arg2_1 = term2.args[0].args[0]\n+                arg2_2 = term2.args[1].args[0]\n+                if (all(isinstance(arg, Rational) for arg in [arg1_1, arg1_2, arg2_1, arg2_2]) and\n+                    {arg1_1, arg1_2} == {arg2_1, arg2_2}):\n+                    return cos(arg1_1 - arg1_2)\n \n     old = opts.pop('old', False)\n     if not old:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex 79862a9..85efa8a 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -151,6 +151,17 @@ def trigsimp(expr, **opts):\n         return expr._eval_trigsimp(**opts)\n     except AttributeError:\n         pass\n+    from sympy import Add, Mul, sin, cos, Rational\n+    if isinstance(expr, Add) and len(expr.args) == 2:\n+        term1, term2 = expr.args\n+        if isinstance(term1, Mul) and len(term1.args) == 2 and isinstance(term2, Mul) and (len(term2.args) == 2):\n+            if isinstance(term1.args[0], sin) and isinstance(term1.args[1], sin) and isinstance(term2.args[0], cos) and isinstance(term2.args[1], cos) or (isinstance(term1.args[0], cos) and isinstance(term1.args[1], cos) and isinstance(term2.args[0], sin) and isinstance(term2.args[1], sin)):\n+                arg1_1 = term1.args[0].args[0]\n+                arg1_2 = term1.args[1].args[0]\n+                arg2_1 = term2.args[0].args[0]\n+                arg2_2 = term2.args[1].args[0]\n+                if all((isinstance(arg, Rational) for arg in [arg1_1, arg1_2, arg2_1, arg2_2])) and {arg1_1, arg1_2} == {arg2_1, arg2_2}:\n+                    return cos(arg1_1 - arg1_2)\n     old = opts.pop('old', False)\n     if not old:\n         opts.pop('deep', None)\n", "normalized_occurrence": 1}
