{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-22714", "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex b7f7a47..0a461a3 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -150,19 +150,19 @@ class Point(GeometryEntity):\n                 raise ValueError(filldedent('''\n                         on_morph value should be 'error',\n                         'warn' or 'ignore'.'''))\n-        if any(coords[dim:]):\n-            raise ValueError('Nonzero coordinates cannot be removed.')\n-        if any(a.is_number and im(a) for a in coords):\n-            raise ValueError('Imaginary coordinates are not permitted.')\n-        if not all(isinstance(a, Expr) for a in coords):\n-            raise TypeError('Coordinates must be valid SymPy expressions.')\n-\n         # pad with zeros appropriately\n         coords = coords[:dim] + (S.Zero,)*(dim - len(coords))\n \n         # Turn any Floats into rationals and simplify\n         # any expressions before we instantiate\n         if evaluate:\n+            # Only perform validation checks when evaluating\n+            if any(coords[dim:]):\n+                raise ValueError('Nonzero coordinates cannot be removed.')\n+            if any(a.is_number and im(a) for a in coords):\n+                raise ValueError('Imaginary coordinates are not permitted.')\n+            if not all(isinstance(a, Expr) for a in coords):\n+                raise TypeError('Coordinates must be valid SymPy expressions.')\n             coords = coords.xreplace({\n                 f: simplify(nsimplify(f, rational=True))\n                  for f in coords.atoms(Float)})\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex 4d7ea73..75f706e 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -43,14 +43,14 @@ class Point(GeometryEntity):\n                 warnings.warn(message)\n             else:\n                 raise ValueError(filldedent(\"\\n                        on_morph value should be 'error',\\n                        'warn' or 'ignore'.\"))\n-        if any(coords[dim:]):\n-            raise ValueError('Nonzero coordinates cannot be removed.')\n-        if any((a.is_number and im(a) for a in coords)):\n-            raise ValueError('Imaginary coordinates are not permitted.')\n-        if not all((isinstance(a, Expr) for a in coords)):\n-            raise TypeError('Coordinates must be valid SymPy expressions.')\n         coords = coords[:dim] + (S.Zero,) * (dim - len(coords))\n         if evaluate:\n+            if any(coords[dim:]):\n+                raise ValueError('Nonzero coordinates cannot be removed.')\n+            if any((a.is_number and im(a) for a in coords)):\n+                raise ValueError('Imaginary coordinates are not permitted.')\n+            if not all((isinstance(a, Expr) for a in coords)):\n+                raise TypeError('Coordinates must be valid SymPy expressions.')\n             coords = coords.xreplace({f: simplify(nsimplify(f, rational=True)) for f in coords.atoms(Float)})\n         if len(coords) == 2:\n             kwargs['_nocheck'] = True\n", "normalized_occurrence": 1}
