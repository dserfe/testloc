{"model_name_or_path": "agentless", "instance_id": "django__django-15202", "model_patch": "diff --git a/django/core/validators.py b/django/core/validators.py\nindex bd1f78e..4013ba2 100644\n--- a/django/core/validators.py\n+++ b/django/core/validators.py\n@@ -115,12 +115,12 @@ class URLValidator(RegexValidator):\n             if value:\n                 try:\n                     scheme, netloc, path, query, fragment = urlsplit(value)\n-                except ValueError:  # for example, \"Invalid IPv6 URL\"\n-                    raise ValidationError(self.message, code=self.code, params={'value': value})\n+                except ValueError as e:  # for example, \"Invalid IPv6 URL\"\n+                    raise ValidationError(self.message, code=self.code, params={'value': value}) from e\n                 try:\n                     netloc = punycode(netloc)  # IDN -> ACE\n-                except UnicodeError:  # invalid domain part\n-                    raise e\n+                except UnicodeError as e:  # invalid domain part\n+                    raise ValidationError(self.message, code=self.code, params={'value': value}) from e\n                 url = urlunsplit((scheme, netloc, path, query, fragment))\n                 super().__call__(url)\n             else:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/validators.py b/django/core/validators.py\nindex debbb3b..3920560 100644\n--- a/django/core/validators.py\n+++ b/django/core/validators.py\n@@ -68,12 +68,12 @@ class URLValidator(RegexValidator):\n             if value:\n                 try:\n                     scheme, netloc, path, query, fragment = urlsplit(value)\n-                except ValueError:\n-                    raise ValidationError(self.message, code=self.code, params={'value': value})\n+                except ValueError as e:\n+                    raise ValidationError(self.message, code=self.code, params={'value': value}) from e\n                 try:\n                     netloc = punycode(netloc)\n-                except UnicodeError:\n-                    raise e\n+                except UnicodeError as e:\n+                    raise ValidationError(self.message, code=self.code, params={'value': value}) from e\n                 url = urlunsplit((scheme, netloc, path, query, fragment))\n                 super().__call__(url)\n             else:\n", "normalized_occurrence": 1}
