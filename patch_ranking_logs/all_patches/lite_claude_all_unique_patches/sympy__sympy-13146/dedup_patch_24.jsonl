{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13146", "model_patch": "diff --git a/sympy/core/power.py b/sympy/core/power.py\nindex 13deb95..2f08056 100644\n--- a/sympy/core/power.py\n+++ b/sympy/core/power.py\n@@ -1070,7 +1070,11 @@ class Pow(Expr):\n         base, exp = self.as_base_exp()\n         base = base._evalf(prec)\n         if not exp.is_Integer:\n-            exp = exp._evalf(prec)\n+            if exp.is_Float:\n+                from sympy.core.numbers import Rational\n+                exp = Rational(str(exp))\n+            else:\n+                exp = exp._evalf(prec)\n         if exp.is_negative and base.is_number and base.is_real is False:\n             base = base.conjugate() / (base * base.conjugate())._evalf(prec)\n             exp = -exp\n", "occurrence": 3, "normalized_patch": "diff --git a/sympy/core/power.py b/sympy/core/power.py\nindex a9c2232..dba1ca6 100644\n--- a/sympy/core/power.py\n+++ b/sympy/core/power.py\n@@ -737,7 +737,11 @@ class Pow(Expr):\n         base, exp = self.as_base_exp()\n         base = base._evalf(prec)\n         if not exp.is_Integer:\n-            exp = exp._evalf(prec)\n+            if exp.is_Float:\n+                from sympy.core.numbers import Rational\n+                exp = Rational(str(exp))\n+            else:\n+                exp = exp._evalf(prec)\n         if exp.is_negative and base.is_number and (base.is_real is False):\n             base = base.conjugate() / (base * base.conjugate())._evalf(prec)\n             exp = -exp\n", "normalized_occurrence": 3}
