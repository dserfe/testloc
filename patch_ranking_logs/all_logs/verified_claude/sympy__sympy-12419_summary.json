{
  "instance_id": "sympy__sympy-12419",
  "container_id": "8e70666cdf3a3487612bcdbdfda675ff386b1a40a3f4e4176d0cc17e10f491c5",
  "regression": {
    "results": [
      {
        "patch_file": "all_patches/verified_claude_all_unique_patches/sympy__sympy-12419/dedup_patch_0.jsonl",
        "inst": "sympy__sympy-12419",
        "passed": 3,
        "failed": 0
      },
      {
        "patch_file": "all_patches/verified_claude_all_unique_patches/sympy__sympy-12419/dedup_patch_1.jsonl",
        "inst": "sympy__sympy-12419",
        "passed": 3,
        "failed": 0
      },
      {
        "patch_file": "all_patches/verified_claude_all_unique_patches/sympy__sympy-12419/dedup_patch_10.jsonl",
        "inst": "sympy__sympy-12419",
        "passed": 3,
        "failed": 0
      },
      {
        "patch_file": "all_patches/verified_claude_all_unique_patches/sympy__sympy-12419/dedup_patch_11.jsonl",
        "inst": "sympy__sympy-12419",
        "passed": 3,
        "failed": 0
      },
      {
        "patch_file": "all_patches/verified_claude_all_unique_patches/sympy__sympy-12419/dedup_patch_12.jsonl",
        "inst": "sympy__sympy-12419",
        "passed": 3,
        "failed": 0
      },
      {
        "patch_file": "all_patches/verified_claude_all_unique_patches/sympy__sympy-12419/dedup_patch_13.jsonl",
        "inst": "sympy__sympy-12419",
        "passed": 3,
        "failed": 0
      },
      {
        "patch_file": "all_patches/verified_claude_all_unique_patches/sympy__sympy-12419/dedup_patch_14.jsonl",
        "inst": "sympy__sympy-12419",
        "passed": 3,
        "failed": 0
      },
      {
        "patch_file": "all_patches/verified_claude_all_unique_patches/sympy__sympy-12419/dedup_patch_15.jsonl",
        "inst": "sympy__sympy-12419",
        "passed": 3,
        "failed": 0
      },
      {
        "patch_file": "all_patches/verified_claude_all_unique_patches/sympy__sympy-12419/dedup_patch_2.jsonl",
        "inst": "sympy__sympy-12419",
        "passed": 3,
        "failed": 0
      },
      {
        "patch_file": "all_patches/verified_claude_all_unique_patches/sympy__sympy-12419/dedup_patch_3.jsonl",
        "inst": "sympy__sympy-12419",
        "passed": 3,
        "failed": 0
      },
      {
        "patch_file": "all_patches/verified_claude_all_unique_patches/sympy__sympy-12419/dedup_patch_4.jsonl",
        "inst": "sympy__sympy-12419",
        "passed": 3,
        "failed": 0
      },
      {
        "patch_file": "all_patches/verified_claude_all_unique_patches/sympy__sympy-12419/dedup_patch_5.jsonl",
        "inst": "sympy__sympy-12419",
        "passed": 3,
        "failed": 0
      },
      {
        "patch_file": "all_patches/verified_claude_all_unique_patches/sympy__sympy-12419/dedup_patch_6.jsonl",
        "inst": "sympy__sympy-12419",
        "passed": 3,
        "failed": 0
      },
      {
        "patch_file": "all_patches/verified_claude_all_unique_patches/sympy__sympy-12419/dedup_patch_7.jsonl",
        "inst": "sympy__sympy-12419",
        "passed": 3,
        "failed": 0
      },
      {
        "patch_file": "all_patches/verified_claude_all_unique_patches/sympy__sympy-12419/dedup_patch_8.jsonl",
        "inst": "sympy__sympy-12419",
        "passed": 3,
        "failed": 0
      },
      {
        "patch_file": "all_patches/verified_claude_all_unique_patches/sympy__sympy-12419/dedup_patch_9.jsonl",
        "inst": "sympy__sympy-12419",
        "passed": 3,
        "failed": 0
      }
    ],
    "top_passed": 3,
    "top_subset_size": 16
  },
  "reproduction": {
    "sympy/matrices/tests/test_matrices.py::test_sum#1": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "sympy/matrices/expressions/tests/test_matexpr.py::test_MatrixElement_with_values#2": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "sympy/matrices/tests/test_matrices.py::test_is_Identity#3": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "sympy/matrices/tests/test_matrices.py::test_as_real_imag#4": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "sympy/matrices/tests/test_matrices.py::test_sum#5": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "sympy/matrices/tests/test_matrices.py::test_sum#6": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "testLoc": {
      "repro_fails_on_clean": true,
      "outcomes": []
    }
  }
}