{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-4604", "model_patch": "diff --git a/pylint/checkers/imports.py b/pylint/checkers/imports.py\nindex 7e31505..62a07cd 100644\n--- a/pylint/checkers/imports.py\n+++ b/pylint/checkers/imports.py\n@@ -542,7 +542,10 @@ class ImportsChecker(DeprecatedMixin, BaseChecker):\n             if imported_module is None:\n                 continue\n \n-            self._add_imported_module(node, imported_module.name)\n+            if self._is_import_used_in_type_comments(node, name):\n+                self._add_imported_module(node, imported_module.name)\n+            else:\n+                self._add_imported_module(node, imported_module.name)\n \n     @check_messages(*MSGS)\n     def visit_importfrom(self, node):\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/checkers/imports.py b/pylint/checkers/imports.py\nindex 1045c62..6611825 100644\n--- a/pylint/checkers/imports.py\n+++ b/pylint/checkers/imports.py\n@@ -183,7 +183,10 @@ class ImportsChecker(DeprecatedMixin, BaseChecker):\n                 self._record_import(node, imported_module)\n             if imported_module is None:\n                 continue\n-            self._add_imported_module(node, imported_module.name)\n+            if self._is_import_used_in_type_comments(node, name):\n+                self._add_imported_module(node, imported_module.name)\n+            else:\n+                self._add_imported_module(node, imported_module.name)\n     @check_messages(*MSGS)\n     def visit_importfrom(self, node):\n         basename = node.modname\n", "normalized_occurrence": 1}
