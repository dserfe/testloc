{"model_name_or_path": "agentless", "instance_id": "django__django-15561", "model_patch": "diff --git a/django/db/backends/sqlite3/schema.py b/django/db/backends/sqlite3/schema.py\nindex 86692c3..d3418a1 100644\n--- a/django/db/backends/sqlite3/schema.py\n+++ b/django/db/backends/sqlite3/schema.py\n@@ -121,7 +121,10 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):\n             super().alter_db_table(model, old_db_table, new_db_table)\n \n     def alter_field(self, model, old_field, new_field, strict=False):\n-        if not self._field_should_be_altered(old_field, new_field):\n+        if not self._field_should_be_altered(old_field, new_field) or (\n+            old_field.choices != new_field.choices and\n+            self._field_should_be_altered(old_field, new_field, ignore_choices=True)\n+        ):\n             return\n         old_field_name = old_field.name\n         table_name = model._meta.db_table\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/sqlite3/schema.py b/django/db/backends/sqlite3/schema.py\nindex 9a783c9..1af2fb9 100644\n--- a/django/db/backends/sqlite3/schema.py\n+++ b/django/db/backends/sqlite3/schema.py\n@@ -65,7 +65,7 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):\n         else:\n             super().alter_db_table(model, old_db_table, new_db_table)\n     def alter_field(self, model, old_field, new_field, strict=False):\n-        if not self._field_should_be_altered(old_field, new_field):\n+        if not self._field_should_be_altered(old_field, new_field) or (old_field.choices != new_field.choices and self._field_should_be_altered(old_field, new_field, ignore_choices=True)):\n             return\n         old_field_name = old_field.name\n         table_name = model._meta.db_table\n", "normalized_occurrence": 1}
