{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-23262", "model_patch": "diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py\nindex 9dd6fe4..c46c57e 100644\n--- a/sympy/utilities/lambdify.py\n+++ b/sympy/utilities/lambdify.py\n@@ -1150,6 +1150,10 @@ class _EvaluatorPrinter:\n                 funcbody.append('{} = {}'.format(s, self._exprrepr(e)))\n \n         str_expr = _recursive_to_string(self._exprrepr, expr)\n+        \n+        # Ensure single-element tuples keep their trailing comma\n+        if isinstance(expr, tuple) and len(expr) == 1:\n+            str_expr = str_expr.rstrip(')') + ',)'\n \n \n         if '\\n' in str_expr:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py\nindex 931ff9a..51b4052 100644\n--- a/sympy/utilities/lambdify.py\n+++ b/sympy/utilities/lambdify.py\n@@ -313,6 +313,8 @@ class _EvaluatorPrinter:\n             else:\n                 funcbody.append('{} = {}'.format(s, self._exprrepr(e)))\n         str_expr = _recursive_to_string(self._exprrepr, expr)\n+        if isinstance(expr, tuple) and len(expr) == 1:\n+            str_expr = str_expr.rstrip(')') + ',)'\n         if '\\n' in str_expr:\n             str_expr = '({})'.format(str_expr)\n         funcbody.append('return {}'.format(str_expr))\n", "normalized_occurrence": 1}
