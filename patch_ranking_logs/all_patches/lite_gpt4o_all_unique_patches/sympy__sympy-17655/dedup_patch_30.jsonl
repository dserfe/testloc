{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-17655", "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex a708f18..b262224 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -177,6 +177,12 @@ class Point(GeometryEntity):\n         # the general Point\n         return GeometryEntity.__new__(cls, *coords)\n \n+    def __rmul__(self, other):\n+        \"\"\"Implement `other * self` where `self` is a Point and `other` is a scalar.\"\"\"\n+        other = sympify(other)\n+        coords = [simplify(other * x) for x in self.args]\n+        return Point(coords, evaluate=False)\n+        \n     def __abs__(self):\n         \"\"\"Returns the distance between this point and the origin.\"\"\"\n         origin = Point([0]*len(self))\n", "occurrence": 1, "normalized_patch": "--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n+    def __rmul__(self, other):\n+        other = sympify(other)\n+        coords = [simplify(other * x) for x in self.args]\n+        return Point(coords, evaluate=False)", "normalized_occurrence": 1}
