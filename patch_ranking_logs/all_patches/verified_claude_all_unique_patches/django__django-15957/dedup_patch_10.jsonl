{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15957", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 5314293..757a0fc 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -1566,9 +1566,17 @@ class QuerySet:\n         else:\n             for lookup in lookups:\n                 if isinstance(lookup, Prefetch):\n-                    lookup = lookup.prefetch_to\n-                lookup = lookup.split(LOOKUP_SEP, 1)[0]\n-                if lookup in self.query._filtered_relations:\n+                    # Allow sliced querysets in Prefetch objects\n+                    if lookup.queryset is not None and lookup.queryset._has_filters():\n+                        lookup.queryset._validate_values_are_expressions(\n+                            lookup.queryset.query.values_select,\n+                            \"values() after slice\"\n+                        )\n+                    lookup_to_check = lookup.prefetch_to\n+                else:\n+                    lookup_to_check = lookup\n+                lookup_to_check = lookup_to_check.split(LOOKUP_SEP, 1)[0]\n+                if lookup_to_check in self.query._filtered_relations:\n                     raise ValueError(\n                         \"prefetch_related() is not supported with FilteredRelation.\"\n                     )\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex cb06696..e593bb4 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -837,9 +837,13 @@ class QuerySet:\n         else:\n             for lookup in lookups:\n                 if isinstance(lookup, Prefetch):\n-                    lookup = lookup.prefetch_to\n-                lookup = lookup.split(LOOKUP_SEP, 1)[0]\n-                if lookup in self.query._filtered_relations:\n+                    if lookup.queryset is not None and lookup.queryset._has_filters():\n+                        lookup.queryset._validate_values_are_expressions(lookup.queryset.query.values_select, 'values() after slice')\n+                    lookup_to_check = lookup.prefetch_to\n+                else:\n+                    lookup_to_check = lookup\n+                lookup_to_check = lookup_to_check.split(LOOKUP_SEP, 1)[0]\n+                if lookup_to_check in self.query._filtered_relations:\n                     raise ValueError('prefetch_related() is not supported with FilteredRelation.')\n             clone._prefetch_related_lookups = clone._prefetch_related_lookups + lookups\n         return clone\n", "normalized_occurrence": 1}
