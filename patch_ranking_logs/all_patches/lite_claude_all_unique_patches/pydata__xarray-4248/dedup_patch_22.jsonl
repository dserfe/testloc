{"model_name_or_path": "agentless_claude", "instance_id": "pydata__xarray-4248", "model_patch": "diff --git a/xarray/core/formatting.py b/xarray/core/formatting.py\nindex 91a7f67..e44ad63 100644\n--- a/xarray/core/formatting.py\n+++ b/xarray/core/formatting.py\n@@ -306,12 +306,18 @@ def _summarize_coord_levels(coord, col_width, marker=\"-\"):\n \n \n def summarize_datavar(name, var, col_width):\n-    return summarize_variable(name, var.variable, col_width)\n+    name_with_units = name\n+    if hasattr(var, 'attrs') and 'units' in var.attrs:\n+        name_with_units = f\"{name}, in {var.attrs['units']}\"\n+    return summarize_variable(name_with_units, var.variable, col_width)\n \n \n def summarize_coord(name: Hashable, var, col_width: int):\n     is_index = name in var.dims\n     marker = \"*\" if is_index else \" \"\n+    name_with_units = name\n+    if hasattr(var, 'attrs') and 'units' in var.attrs:\n+        name_with_units = f\"{name}, in {var.attrs['units']}\"\n     if is_index:\n         coord = var.variable.to_index_variable()\n         if coord.level_names is not None:\n@@ -321,7 +327,7 @@ def summarize_coord(name: Hashable, var, col_width: int):\n                     _summarize_coord_levels(coord, col_width),\n                 ]\n             )\n-    return summarize_variable(name, var.variable, col_width, marker)\n+    return summarize_variable(name_with_units, var.variable, col_width, marker)\n \n \n def summarize_attr(key, value, col_width=None):\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/formatting.py b/xarray/core/formatting.py\nindex 6d31a74..2ba65ed 100644\n--- a/xarray/core/formatting.py\n+++ b/xarray/core/formatting.py\n@@ -173,15 +173,21 @@ def _summarize_coord_multiindex(coord, col_width, marker):\n def _summarize_coord_levels(coord, col_width, marker='-'):\n     return '\\n'.join((summarize_variable(lname, coord.get_level_variable(lname), col_width, marker=marker) for lname in coord.level_names))\n def summarize_datavar(name, var, col_width):\n-    return summarize_variable(name, var.variable, col_width)\n+    name_with_units = name\n+    if hasattr(var, 'attrs') and 'units' in var.attrs:\n+        name_with_units = f\"{name}, in {var.attrs['units']}\"\n+    return summarize_variable(name_with_units, var.variable, col_width)\n def summarize_coord(name: Hashable, var, col_width: int):\n     is_index = name in var.dims\n     marker = '*' if is_index else ' '\n+    name_with_units = name\n+    if hasattr(var, 'attrs') and 'units' in var.attrs:\n+        name_with_units = f\"{name}, in {var.attrs['units']}\"\n     if is_index:\n         coord = var.variable.to_index_variable()\n         if coord.level_names is not None:\n             return '\\n'.join([_summarize_coord_multiindex(coord, col_width, marker), _summarize_coord_levels(coord, col_width)])\n-    return summarize_variable(name, var.variable, col_width, marker)\n+    return summarize_variable(name_with_units, var.variable, col_width, marker)\n def summarize_attr(key, value, col_width=None):\n     k_str = f'    {key}:'\n     if col_width is not None:\n", "normalized_occurrence": 1}
