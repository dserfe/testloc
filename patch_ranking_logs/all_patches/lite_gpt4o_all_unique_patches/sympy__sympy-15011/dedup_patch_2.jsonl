{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-15011", "model_patch": "diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py\nindex 48d6783..1845e48 100644\n--- a/sympy/utilities/lambdify.py\n+++ b/sympy/utilities/lambdify.py\n@@ -732,8 +732,11 @@ class _EvaluatorPrinter(object):\n                     dummy = Dummy()\n                     argstrs.append(self._argrepr(dummy))\n                     expr = self._subexpr(expr, {arg: dummy})\n-                else:\n-                    argstrs.append(argrep)\n+                elif '{' in argrep or '}' in argrep:\n+                    # If the argument contains curly braces, always dummify it\n+                    dummy = Dummy()\n+                    argstrs.append(self._argrepr(dummy))\n+                    expr = self._subexpr(expr, {arg: dummy})\n             elif isinstance(arg, Function):\n                 dummy = Dummy()\n                 argstrs.append(self._argrepr(dummy))\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py\nindex 9997e01..6186308 100644\n--- a/sympy/utilities/lambdify.py\n+++ b/sympy/utilities/lambdify.py\n@@ -300,8 +300,10 @@ class _EvaluatorPrinter(object):\n                     dummy = Dummy()\n                     argstrs.append(self._argrepr(dummy))\n                     expr = self._subexpr(expr, {arg: dummy})\n-                else:\n-                    argstrs.append(argrep)\n+                elif '{' in argrep or '}' in argrep:\n+                    dummy = Dummy()\n+                    argstrs.append(self._argrepr(dummy))\n+                    expr = self._subexpr(expr, {arg: dummy})\n             elif isinstance(arg, Function):\n                 dummy = Dummy()\n                 argstrs.append(self._argrepr(dummy))\n", "normalized_occurrence": 1}
