{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-18698", "model_patch": "diff --git a/sympy/polys/sqfreetools.py b/sympy/polys/sqfreetools.py\nindex fbdbcb2..f00b6e0 100644\n--- a/sympy/polys/sqfreetools.py\n+++ b/sympy/polys/sqfreetools.py\n@@ -322,12 +322,20 @@ def dup_sqf_list(f, K, all=False):\n         h = dup_sub(q, d, K)\n \n         if not h:\n+            # Check if there's already a factor with the same multiplicity\n+            if result and result[-1][1] == i:\n+                last_factor, _ = result.pop()\n+                p = dup_mul(last_factor, p, K)\n             result.append((p, i))\n             break\n \n         g, p, q = dup_inner_gcd(p, h, K)\n \n         if all or dup_degree(g) > 0:\n+            # Check if there's already a factor with the same multiplicity\n+            if result and result[-1][1] == i:\n+                last_factor, _ = result.pop()\n+                g = dup_mul(last_factor, g, K)\n             result.append((g, i))\n \n         i += 1\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/sqfreetools.py b/sympy/polys/sqfreetools.py\nindex 09fb2b6..268ed0c 100644\n--- a/sympy/polys/sqfreetools.py\n+++ b/sympy/polys/sqfreetools.py\n@@ -111,10 +111,16 @@ def dup_sqf_list(f, K, all=False):\n         d = dup_diff(p, 1, K)\n         h = dup_sub(q, d, K)\n         if not h:\n+            if result and result[-1][1] == i:\n+                last_factor, _ = result.pop()\n+                p = dup_mul(last_factor, p, K)\n             result.append((p, i))\n             break\n         g, p, q = dup_inner_gcd(p, h, K)\n         if all or dup_degree(g) > 0:\n+            if result and result[-1][1] == i:\n+                last_factor, _ = result.pop()\n+                g = dup_mul(last_factor, g, K)\n             result.append((g, i))\n         i += 1\n     return (coeff, result)\n", "normalized_occurrence": 1}
