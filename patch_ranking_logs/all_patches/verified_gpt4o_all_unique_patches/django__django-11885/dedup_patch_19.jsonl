{"model_name_or_path": "agentless", "instance_id": "django__django-11885", "model_patch": "diff --git a/django/db/models/deletion.py b/django/db/models/deletion.py\nindex da91f5e..a1e6f83 100644\n--- a/django/db/models/deletion.py\n+++ b/django/db/models/deletion.py\n@@ -191,7 +191,11 @@ class Collector:\n         If 'keep_parents' is True, data of parent model's will be not deleted.\n         \"\"\"\n         if self.can_fast_delete(objs):\n-            self.fast_deletes.append(objs)\n+            model = objs[0].__class__\n+            if model in self.fast_deletes:\n+                self.fast_deletes[model].extend(objs)\n+            else:\n+                self.fast_deletes[model] = list(objs)\n             return\n         new_objs = self.add(objs, source, nullable,\n                             reverse_dependency=reverse_dependency)\n", "occurrence": 2, "normalized_patch": "diff --git a/django/db/models/deletion.py b/django/db/models/deletion.py\nindex 97cb878..aada3b8 100644\n--- a/django/db/models/deletion.py\n+++ b/django/db/models/deletion.py\n@@ -80,7 +80,11 @@ class Collector:\n             return [objs]\n     def collect(self, objs, source=None, nullable=False, collect_related=True, source_attr=None, reverse_dependency=False, keep_parents=False):\n         if self.can_fast_delete(objs):\n-            self.fast_deletes.append(objs)\n+            model = objs[0].__class__\n+            if model in self.fast_deletes:\n+                self.fast_deletes[model].extend(objs)\n+            else:\n+                self.fast_deletes[model] = list(objs)\n             return\n         new_objs = self.add(objs, source, nullable, reverse_dependency=reverse_dependency)\n         if not new_objs:\n", "normalized_occurrence": 2}
