{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-11510", "model_patch": "diff --git a/sphinx/io.py b/sphinx/io.py\nindex 2cbe59f..0e97e80 100644\n--- a/sphinx/io.py\n+++ b/sphinx/io.py\n@@ -109,9 +109,18 @@ class SphinxStandaloneReader(SphinxBaseReader):\n         \"\"\"Read content from source and do post-process.\"\"\"\n         content = self.source.read()\n \n+        # store original content for includes\n+        env._original_content = getattr(env, '_original_content', {})\n+        env._original_content[env.docname] = content\n+\n         # emit \"source-read\" event\n         arg = [content]\n         env.events.emit('source-read', env.docname, arg)\n+        \n+        # store processed content\n+        env._processed_content = getattr(env, '_processed_content', {})\n+        env._processed_content[env.docname] = arg[0]\n+        \n         return arg[0]\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/io.py b/sphinx/io.py\nindex 93c5794..7d9e543 100644\n--- a/sphinx/io.py\n+++ b/sphinx/io.py\n@@ -62,8 +62,12 @@ class SphinxStandaloneReader(SphinxBaseReader):\n         return self.document\n     def read_source(self, env: BuildEnvironment) -> str:\n         content = self.source.read()\n+        env._original_content = getattr(env, '_original_content', {})\n+        env._original_content[env.docname] = content\n         arg = [content]\n         env.events.emit('source-read', env.docname, arg)\n+        env._processed_content = getattr(env, '_processed_content', {})\n+        env._processed_content[env.docname] = arg[0]\n         return arg[0]\n class SphinxI18nReader(SphinxBaseReader):\n     def setup(self, app: Sphinx) -> None:\n", "normalized_occurrence": 1}
