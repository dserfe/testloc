{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16100", "model_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 32995ac..fe4d00d 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -1915,6 +1915,7 @@ class ModelAdmin(BaseModelAdmin):\n         \"\"\"\n         The 'change list' admin view for this model.\n         \"\"\"\n+        from django.db import transaction\n         from django.contrib.admin.views.main import ERROR_FLAG\n \n         app_label = self.opts.app_label\n@@ -2011,14 +2012,15 @@ class ModelAdmin(BaseModelAdmin):\n             )\n             if formset.is_valid():\n                 changecount = 0\n-                for form in formset.forms:\n-                    if form.has_changed():\n-                        obj = self.save_form(request, form, change=True)\n-                        self.save_model(request, obj, form, change=True)\n-                        self.save_related(request, form, formsets=[], change=True)\n-                        change_msg = self.construct_change_message(request, form, None)\n-                        self.log_change(request, obj, change_msg)\n-                        changecount += 1\n+                with transaction.atomic():\n+                    for form in formset.forms:\n+                        if form.has_changed():\n+                            obj = self.save_form(request, form, change=True)\n+                            self.save_model(request, obj, form, change=True)\n+                            self.save_related(request, form, formsets=[], change=True)\n+                            change_msg = self.construct_change_message(request, form, None)\n+                            self.log_change(request, obj, change_msg)\n+                            changecount += 1\n \n                 if changecount:\n                     msg = ngettext(\n", "occurrence": 4, "normalized_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 6c1421c..c4e4594 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -814,6 +814,7 @@ class ModelAdmin(BaseModelAdmin):\n         return queryset.filter(pk__in=object_pks)\n     @csrf_protect_m\n     def changelist_view(self, request, extra_context=None):\n+        from django.db import transaction\n         from django.contrib.admin.views.main import ERROR_FLAG\n         app_label = self.opts.app_label\n         if not self.has_view_or_change_permission(request):\n@@ -856,14 +857,15 @@ class ModelAdmin(BaseModelAdmin):\n             formset = cl.formset = FormSet(request.POST, request.FILES, queryset=modified_objects)\n             if formset.is_valid():\n                 changecount = 0\n-                for form in formset.forms:\n-                    if form.has_changed():\n-                        obj = self.save_form(request, form, change=True)\n-                        self.save_model(request, obj, form, change=True)\n-                        self.save_related(request, form, formsets=[], change=True)\n-                        change_msg = self.construct_change_message(request, form, None)\n-                        self.log_change(request, obj, change_msg)\n-                        changecount += 1\n+                with transaction.atomic():\n+                    for form in formset.forms:\n+                        if form.has_changed():\n+                            obj = self.save_form(request, form, change=True)\n+                            self.save_model(request, obj, form, change=True)\n+                            self.save_related(request, form, formsets=[], change=True)\n+                            change_msg = self.construct_change_message(request, form, None)\n+                            self.log_change(request, obj, change_msg)\n+                            changecount += 1\n                 if changecount:\n                     msg = ngettext('%(count)s %(name)s was changed successfully.', '%(count)s %(name)s were changed successfully.', changecount) % {'count': changecount, 'name': model_ngettext(self.opts, changecount)}\n                     self.message_user(request, msg, messages.SUCCESS)\n", "normalized_occurrence": 4}
