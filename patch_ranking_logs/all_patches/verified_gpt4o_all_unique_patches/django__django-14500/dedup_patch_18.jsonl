{"model_name_or_path": "agentless", "instance_id": "django__django-14500", "model_patch": "diff --git a/django/db/migrations/executor.py b/django/db/migrations/executor.py\nindex 9e05ef1..838ddaa 100644\n--- a/django/db/migrations/executor.py\n+++ b/django/db/migrations/executor.py\n@@ -240,7 +240,7 @@ class MigrationExecutor:\n         if migration.replaces:\n             for app_label, name in migration.replaces:\n                 self.recorder.record_applied(app_label, name)\n-        else:\n+            self.recorder.record_unapplied(migration.app_label, migration.name)\n             self.recorder.record_applied(migration.app_label, migration.name)\n \n     def unapply_migration(self, state, migration, fake=False):\n@@ -250,11 +250,12 @@ class MigrationExecutor:\n         if not fake:\n             with self.connection.schema_editor(atomic=migration.atomic) as schema_editor:\n                 state = migration.unapply(state, schema_editor)\n-        # For replacement migrations, record individual statuses\n+        # For replacement migrations, record individual statuses and the squashed migration itself\n         if migration.replaces:\n             for app_label, name in migration.replaces:\n                 self.recorder.record_unapplied(app_label, name)\n-        else:\n+            self.recorder.record_unapplied(migration.app_label, migration.name)\n+            self.recorder.record_unapplied(migration.app_label, migration.name)\n             self.recorder.record_unapplied(migration.app_label, migration.name)\n         # Report progress\n         if self.progress_callback:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/executor.py b/django/db/migrations/executor.py\nindex d5a1e7d..17e6417 100644\n--- a/django/db/migrations/executor.py\n+++ b/django/db/migrations/executor.py\n@@ -137,7 +137,7 @@ class MigrationExecutor:\n         if migration.replaces:\n             for app_label, name in migration.replaces:\n                 self.recorder.record_applied(app_label, name)\n-        else:\n+            self.recorder.record_unapplied(migration.app_label, migration.name)\n             self.recorder.record_applied(migration.app_label, migration.name)\n     def unapply_migration(self, state, migration, fake=False):\n         if self.progress_callback:\n@@ -148,7 +148,8 @@ class MigrationExecutor:\n         if migration.replaces:\n             for app_label, name in migration.replaces:\n                 self.recorder.record_unapplied(app_label, name)\n-        else:\n+            self.recorder.record_unapplied(migration.app_label, migration.name)\n+            self.recorder.record_unapplied(migration.app_label, migration.name)\n             self.recorder.record_unapplied(migration.app_label, migration.name)\n         if self.progress_callback:\n             self.progress_callback('unapply_success', migration, fake)\n", "normalized_occurrence": 1}
