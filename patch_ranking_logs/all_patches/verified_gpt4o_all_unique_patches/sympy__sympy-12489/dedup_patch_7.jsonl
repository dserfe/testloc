{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-12489", "model_patch": "diff --git a/sympy/combinatorics/permutations.py b/sympy/combinatorics/permutations.py\nindex 007fa70..41d22c7 100644\n--- a/sympy/combinatorics/permutations.py\n+++ b/sympy/combinatorics/permutations.py\n@@ -919,10 +919,7 @@ class Permutation(Basic):\n             # but do allow the permutation size to be increased\n             aform.extend(list(range(len(aform), size)))\n         size = len(aform)\n-        obj = Basic.__new__(cls, aform)\n-        obj._array_form = aform\n-        obj._size = size\n-        return obj\n+        return cls._af_new(aform)\n \n     @staticmethod\n     def _af_new(perm):\n@@ -944,7 +941,7 @@ class Permutation(Basic):\n         Permutation([2, 1, 3, 0])\n \n         \"\"\"\n-        p = Basic.__new__(Perm, perm)\n+        p = Basic.__new__(cls, perm)\n         p._array_form = perm\n         p._size = len(perm)\n         return p\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/combinatorics/permutations.py b/sympy/combinatorics/permutations.py\nindex 83aa418..46facc1 100644\n--- a/sympy/combinatorics/permutations.py\n+++ b/sympy/combinatorics/permutations.py\n@@ -209,13 +209,10 @@ class Permutation(Basic):\n         if size and size > len(aform):\n             aform.extend(list(range(len(aform), size)))\n         size = len(aform)\n-        obj = Basic.__new__(cls, aform)\n-        obj._array_form = aform\n-        obj._size = size\n-        return obj\n+        return cls._af_new(aform)\n     @staticmethod\n     def _af_new(perm):\n-        p = Basic.__new__(Perm, perm)\n+        p = Basic.__new__(cls, perm)\n         p._array_form = perm\n         p._size = len(perm)\n         return p\n", "normalized_occurrence": 1}
