{"model_name_or_path": "agentless", "instance_id": "django__django-14725", "model_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 2db5c72..cc06db3 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -573,7 +573,8 @@ class BaseModelFormSet(BaseFormSet):\n     unique_fields = set()\n \n     def __init__(self, data=None, files=None, auto_id='id_%s', prefix=None,\n-                 queryset=None, *, initial=None, **kwargs):\n+                 queryset=None, *, initial=None, allow_new=True, **kwargs):\n+        self.allow_new = allow_new\n         self.queryset = queryset\n         self.initial_extra = initial\n         super().__init__(**{'data': data, 'files': files, 'auto_id': auto_id, 'prefix': prefix, **kwargs})\n@@ -813,7 +814,7 @@ class BaseModelFormSet(BaseFormSet):\n \n     def save_new_objects(self, commit=True):\n         self.new_objects = []\n-        for form in self.extra_forms:\n+        for form in self.extra_forms if self.allow_new else []:\n             if not form.has_changed():\n                 continue\n             # If someone has marked an add form for deletion, don't save the\n@@ -871,7 +872,7 @@ class BaseModelFormSet(BaseFormSet):\n \n def modelformset_factory(model, form=ModelForm, formfield_callback=None,\n                          formset=BaseModelFormSet, extra=1, can_delete=False,\n-                         can_order=False, max_num=None, fields=None, exclude=None,\n+                         can_order=False, max_num=None, fields=None, exclude=None, allow_new=True,\n                          widgets=None, validate_max=False, localized_fields=None,\n                          labels=None, help_texts=None, error_messages=None,\n                          min_num=None, validate_min=False, field_classes=None,\n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 7024f2a..a5ddd01 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -273,7 +273,8 @@ def modelform_factory(model, form=ModelForm, fields=None, exclude=None, formfiel\n class BaseModelFormSet(BaseFormSet):\n     model = None\n     unique_fields = set()\n-    def __init__(self, data=None, files=None, auto_id='id_%s', prefix=None, queryset=None, *, initial=None, **kwargs):\n+    def __init__(self, data=None, files=None, auto_id='id_%s', prefix=None, queryset=None, *, initial=None, allow_new=True, **kwargs):\n+        self.allow_new = allow_new\n         self.queryset = queryset\n         self.initial_extra = initial\n         super().__init__(**{'data': data, 'files': files, 'auto_id': auto_id, 'prefix': prefix, **kwargs})\n@@ -418,7 +419,7 @@ class BaseModelFormSet(BaseFormSet):\n         return saved_instances\n     def save_new_objects(self, commit=True):\n         self.new_objects = []\n-        for form in self.extra_forms:\n+        for form in self.extra_forms if self.allow_new else []:\n             if not form.has_changed():\n                 continue\n             if self.can_delete and self._should_delete_form(form):\n@@ -454,7 +455,7 @@ class BaseModelFormSet(BaseFormSet):\n                 widget = HiddenInput\n             form.fields[self._pk_field.name] = ModelChoiceField(qs, initial=pk_value, required=False, widget=widget)\n         super().add_fields(form, index)\n-def modelformset_factory(model, form=ModelForm, formfield_callback=None, formset=BaseModelFormSet, extra=1, can_delete=False, can_order=False, max_num=None, fields=None, exclude=None, widgets=None, validate_max=False, localized_fields=None, labels=None, help_texts=None, error_messages=None, min_num=None, validate_min=False, field_classes=None, absolute_max=None, can_delete_extra=True, renderer=None):\n+def modelformset_factory(model, form=ModelForm, formfield_callback=None, formset=BaseModelFormSet, extra=1, can_delete=False, can_order=False, max_num=None, fields=None, exclude=None, allow_new=True, widgets=None, validate_max=False, localized_fields=None, labels=None, help_texts=None, error_messages=None, min_num=None, validate_min=False, field_classes=None, absolute_max=None, can_delete_extra=True, renderer=None):\n     meta = getattr(form, 'Meta', None)\n     if getattr(meta, 'fields', fields) is None and getattr(meta, 'exclude', exclude) is None:\n         raise ImproperlyConfigured(\"Calling modelformset_factory without defining 'fields' or 'exclude' explicitly is prohibited.\")\n", "normalized_occurrence": 1}
