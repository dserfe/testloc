{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-15346", "model_patch": "diff --git a/sympy/functions/elementary/trigonometric.py b/sympy/functions/elementary/trigonometric.py\nindex d9ef12f..630cdf8 100644\n--- a/sympy/functions/elementary/trigonometric.py\n+++ b/sympy/functions/elementary/trigonometric.py\n@@ -551,6 +551,9 @@ class cos(TrigonometricFunction):\n             return sin(arg + S.Pi/2)\n         elif isinstance(arg, SetExpr):\n             return arg._eval_func(cls)\n+        elif isinstance(arg, Rational):\n+            # Convert rational arguments to symbolic form for better simplification\n+            return cos(sympify(arg))\n \n         if arg.could_extract_minus_sign():\n             return cls(-arg)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/trigonometric.py b/sympy/functions/elementary/trigonometric.py\nindex 9f9dff8..da1fb7c 100644\n--- a/sympy/functions/elementary/trigonometric.py\n+++ b/sympy/functions/elementary/trigonometric.py\n@@ -323,6 +323,8 @@ class cos(TrigonometricFunction):\n             return sin(arg + S.Pi / 2)\n         elif isinstance(arg, SetExpr):\n             return arg._eval_func(cls)\n+        elif isinstance(arg, Rational):\n+            return cos(sympify(arg))\n         if arg.could_extract_minus_sign():\n             return cls(-arg)\n         i_coeff = arg.as_coefficient(S.ImaginaryUnit)\n", "normalized_occurrence": 1}
