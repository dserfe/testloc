{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-22714", "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex b7f7a47..66c4dc3 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -910,9 +910,11 @@ class Point2D(Point):\n     _ambient_dimension = 2\n \n     def __new__(cls, *args, _nocheck=False, **kwargs):\n+        from sympy import evaluate\n         if not _nocheck:\n             kwargs['dim'] = 2\n-            args = Point(*args, **kwargs)\n+            with evaluate(False):\n+                args = Point(*args, **kwargs)\n         return GeometryEntity.__new__(cls, *args)\n \n     def __contains__(self, item):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex 4d7ea73..bbfa14e 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -244,9 +244,11 @@ class Point(GeometryEntity):\n class Point2D(Point):\n     _ambient_dimension = 2\n     def __new__(cls, *args, _nocheck=False, **kwargs):\n+        from sympy import evaluate\n         if not _nocheck:\n             kwargs['dim'] = 2\n-            args = Point(*args, **kwargs)\n+            with evaluate(False):\n+                args = Point(*args, **kwargs)\n         return GeometryEntity.__new__(cls, *args)\n     def __contains__(self, item):\n         return item == self\n", "normalized_occurrence": 1}
