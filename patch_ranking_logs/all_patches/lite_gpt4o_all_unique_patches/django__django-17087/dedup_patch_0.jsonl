{"model_name_or_path": "agentless", "instance_id": "django__django-17087", "model_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 5a40118..01d39b2 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -72,6 +72,8 @@ class MigrationAutodetector:\n         elif isinstance(obj, type):\n             # If this is a type that implements 'deconstruct' as an instance method,\n             # avoid treating this as being deconstructible itself - see #22951\n+            if hasattr(obj, \"deconstruct\"):\n+                return obj.deconstruct()\n             return obj\n         elif hasattr(obj, \"deconstruct\"):\n             deconstructed = obj.deconstruct()\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 74bfa63..957d6b4 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -35,6 +35,8 @@ class MigrationAutodetector:\n         elif isinstance(obj, COMPILED_REGEX_TYPE):\n             return RegexObject(obj)\n         elif isinstance(obj, type):\n+            if hasattr(obj, 'deconstruct'):\n+                return obj.deconstruct()\n             return obj\n         elif hasattr(obj, 'deconstruct'):\n             deconstructed = obj.deconstruct()\n", "normalized_occurrence": 1}
