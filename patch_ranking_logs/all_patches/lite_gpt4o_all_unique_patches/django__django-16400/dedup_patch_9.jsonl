{"model_name_or_path": "agentless", "instance_id": "django__django-16400", "model_patch": "diff --git a/django/core/management/commands/migrate.py b/django/core/management/commands/migrate.py\nindex 485b8be..da59a10 100644\n--- a/django/core/management/commands/migrate.py\n+++ b/django/core/management/commands/migrate.py\n@@ -110,9 +110,10 @@ class Command(BaseCommand):\n \n         # Get the database we're operating from\n         connection = connections[database]\n-\n-        # Hook for backends needing any database preparation\n         connection.prepare_database()\n+\n+        # Ensure the database parameter is respected throughout the migration process\n+        connections.databases['default'] = connection.settings_dict\n         # Work out which apps have migrations and which do not\n         executor = MigrationExecutor(connection, self.migration_progress_callback)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/management/commands/migrate.py b/django/core/management/commands/migrate.py\nindex 44b7858..895a05e 100644\n--- a/django/core/management/commands/migrate.py\n+++ b/django/core/management/commands/migrate.py\n@@ -38,6 +38,7 @@ class Command(BaseCommand):\n                 import_module('.management', app_config.name)\n         connection = connections[database]\n         connection.prepare_database()\n+        connections.databases['default'] = connection.settings_dict\n         executor = MigrationExecutor(connection, self.migration_progress_callback)\n         executor.loader.check_consistent_history(connection)\n         conflicts = executor.loader.detect_conflicts()\n", "normalized_occurrence": 1}
