{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13437", "model_patch": "diff --git a/sympy/series/limits.py b/sympy/series/limits.py\nindex 5950b6d..976d78d 100644\n--- a/sympy/series/limits.py\n+++ b/sympy/series/limits.py\n@@ -155,7 +155,7 @@ class Limit(Expr):\n         if e.is_Mul:\n             if abs(z0) is S.Infinity:\n                 e = factor_terms(e)\n-                e = e.rewrite(fibonacci, GoldenRatio)\n+                e = e.rewrite([fibonacci, bell, lucas], [GoldenRatio, S.Infinity, S.Infinity])\n                 ok = lambda w: (z in w.free_symbols and\n                                 any(a.is_polynomial(z) or\n                                     any(z in m.free_symbols and m.is_polynomial(z)\n", "occurrence": 4, "normalized_patch": "diff --git a/sympy/series/limits.py b/sympy/series/limits.py\nindex b4f20ab..26bedb3 100644\n--- a/sympy/series/limits.py\n+++ b/sympy/series/limits.py\n@@ -84,7 +84,7 @@ class Limit(Expr):\n         if e.is_Mul:\n             if abs(z0) is S.Infinity:\n                 e = factor_terms(e)\n-                e = e.rewrite(fibonacci, GoldenRatio)\n+                e = e.rewrite([fibonacci, bell, lucas], [GoldenRatio, S.Infinity, S.Infinity])\n                 ok = lambda w: z in w.free_symbols and any((a.is_polynomial(z) or any((z in m.free_symbols and m.is_polynomial(z) for m in Mul.make_args(a))) for a in Add.make_args(w)))\n                 if all((ok(w) for w in e.as_numer_denom())):\n                     u = Dummy(positive=True)\n", "normalized_occurrence": 4}
