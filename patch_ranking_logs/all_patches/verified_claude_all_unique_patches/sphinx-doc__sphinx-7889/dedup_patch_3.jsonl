{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-7889", "model_patch": "diff --git a/sphinx/ext/autodoc/mock.py b/sphinx/ext/autodoc/mock.py\nindex 6801938..287add7 100644\n--- a/sphinx/ext/autodoc/mock.py\n+++ b/sphinx/ext/autodoc/mock.py\n@@ -70,10 +70,10 @@ class _MockObject:\n \n def _make_subclass(name: str, module: str, superclass: Any = _MockObject,\n                    attributes: Any = None) -> Any:\n-    attrs = {'__module__': module, '__display_name__': module + '.' + name}\n+    attrs = {'__module__': module, '__display_name__': module + '.' + str(name)}\n     attrs.update(attributes or {})\n \n-    return type(name, (superclass,), attrs)\n+    return type(str(name), (superclass,), attrs)\n \n \n class _MockModule(ModuleType):\n", "occurrence": 7, "normalized_patch": "diff --git a/sphinx/ext/autodoc/mock.py b/sphinx/ext/autodoc/mock.py\nindex 32d941b..621439e 100644\n--- a/sphinx/ext/autodoc/mock.py\n+++ b/sphinx/ext/autodoc/mock.py\n@@ -37,9 +37,9 @@ class _MockObject:\n     def __repr__(self) -> str:\n         return self.__display_name__\n def _make_subclass(name: str, module: str, superclass: Any=_MockObject, attributes: Any=None) -> Any:\n-    attrs = {'__module__': module, '__display_name__': module + '.' + name}\n+    attrs = {'__module__': module, '__display_name__': module + '.' + str(name)}\n     attrs.update(attributes or {})\n-    return type(name, (superclass,), attrs)\n+    return type(str(name), (superclass,), attrs)\n class _MockModule(ModuleType):\n     __file__ = os.devnull\n     __sphinx_mock__ = True\n", "normalized_occurrence": 7}
