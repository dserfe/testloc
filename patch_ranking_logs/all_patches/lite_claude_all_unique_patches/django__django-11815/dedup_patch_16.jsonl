{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11815", "model_patch": "diff --git a/django/db/migrations/writer.py b/django/db/migrations/writer.py\nindex 36f0ec3..a28663f 100644\n--- a/django/db/migrations/writer.py\n+++ b/django/db/migrations/writer.py\n@@ -268,6 +268,8 @@ class MigrationWriter:\n \n     @classmethod\n     def serialize(cls, value):\n+        if isinstance(value, Enum):\n+            return cls._serialize_enum(value)\n         return serializer_factory(value).serialize()\n \n     @classmethod\n@@ -278,6 +280,20 @@ class MigrationWriter:\n     def unregister_serializer(cls, type_):\n         Serializer.unregister(type_)\n \n+    @classmethod\n+    def _serialize_enum(cls, obj):\n+        \"\"\"\n+        Special handling for Enum objects to use the name rather than the value.\n+        This ensures stability when enum values are translated strings.\n+        \"\"\"\n+        if not obj.__class__.__module__.startswith('django.'):  # Only handle user-defined enums\n+            enum_class = obj.__class__\n+            module_name = enum_class.__module__\n+            class_name = enum_class.__name__\n+            enum_name = obj.name\n+            return \"%s.%s['%s']\" % (module_name, class_name, enum_name)\n+        return super().serialize(obj)\n+\n \n MIGRATION_HEADER_TEMPLATE = \"\"\"\\\n # Generated by Django %(version)s on %(timestamp)s\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/writer.py b/django/db/migrations/writer.py\nindex acf3688..7a0bb6b 100644\n--- a/django/db/migrations/writer.py\n+++ b/django/db/migrations/writer.py\n@@ -186,6 +186,8 @@ class MigrationWriter:\n         return os.path.join(self.basedir, self.filename)\n     @classmethod\n     def serialize(cls, value):\n+        if isinstance(value, Enum):\n+            return cls._serialize_enum(value)\n         return serializer_factory(value).serialize()\n     @classmethod\n     def register_serializer(cls, type_, serializer):\n@@ -193,5 +195,14 @@ class MigrationWriter:\n     @classmethod\n     def unregister_serializer(cls, type_):\n         Serializer.unregister(type_)\n+    @classmethod\n+    def _serialize_enum(cls, obj):\n+        if not obj.__class__.__module__.startswith('django.'):\n+            enum_class = obj.__class__\n+            module_name = enum_class.__module__\n+            class_name = enum_class.__name__\n+            enum_name = obj.name\n+            return \"%s.%s['%s']\" % (module_name, class_name, enum_name)\n+        return super().serialize(obj)\n MIGRATION_HEADER_TEMPLATE = '# Generated by Django %(version)s on %(timestamp)s\\n\\n'\n MIGRATION_TEMPLATE = '%(migration_header)s%(imports)s\\n\\nclass Migration(migrations.Migration):\\n%(replaces_str)s%(initial_str)s\\n    dependencies = [\\n%(dependencies)s    ]\\n\\n    operations = [\\n%(operations)s    ]\\n'\n\\ No newline at end of file\n", "normalized_occurrence": 1}
