{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-10466", "model_patch": "diff --git a/sphinx/builders/gettext.py b/sphinx/builders/gettext.py\nindex c138802..a06ad74 100644\n--- a/sphinx/builders/gettext.py\n+++ b/sphinx/builders/gettext.py\n@@ -32,7 +32,9 @@ class Message:\n     \"\"\"An entry of translatable message.\"\"\"\n     def __init__(self, text: str, locations: List[Tuple[str, int]], uuids: List[str]):\n         self.text = text\n-        self.locations = locations\n+        # Deduplicate locations while preserving order\n+        seen = set()\n+        self.locations = [x for x in locations if x not in seen and not seen.add(x)]\n         self.uuids = uuids\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/builders/gettext.py b/sphinx/builders/gettext.py\nindex 906ebf1..d546761 100644\n--- a/sphinx/builders/gettext.py\n+++ b/sphinx/builders/gettext.py\n@@ -24,7 +24,8 @@ logger = logging.getLogger(__name__)\n class Message:\n     def __init__(self, text: str, locations: List[Tuple[str, int]], uuids: List[str]):\n         self.text = text\n-        self.locations = locations\n+        seen = set()\n+        self.locations = [x for x in locations if x not in seen and (not seen.add(x))]\n         self.uuids = uuids\n class Catalog:\n     def __init__(self) -> None:\n", "normalized_occurrence": 1}
