{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-9591", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 08b07d9..e4406ba 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -2728,6 +2728,12 @@ class PropertyDocumenter(DocstringStripSignatureMixin, ClassLevelDocumenter):  #\n                 signature = inspect.signature(func,\n                                               type_aliases=self.config.autodoc_type_aliases)\n                 if signature.return_annotation is not Parameter.empty:\n+                    # Record the return type hint for cross-referencing\n+                    if hasattr(self.env, 'ref_context'):\n+                        annotations = self.env.temp_data.setdefault('annotations', {})\n+                        annotation = annotations.setdefault(self.fullname, {})\n+                        annotation['return'] = typing.stringify(signature.return_annotation)\n+                    \n                     objrepr = stringify_typehint(signature.return_annotation)\n                     self.add_line('   :type: ' + objrepr, sourcename)\n             except TypeError as exc:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 3c49975..984021a 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1646,6 +1646,10 @@ class PropertyDocumenter(DocstringStripSignatureMixin, ClassLevelDocumenter):\n             try:\n                 signature = inspect.signature(func, type_aliases=self.config.autodoc_type_aliases)\n                 if signature.return_annotation is not Parameter.empty:\n+                    if hasattr(self.env, 'ref_context'):\n+                        annotations = self.env.temp_data.setdefault('annotations', {})\n+                        annotation = annotations.setdefault(self.fullname, {})\n+                        annotation['return'] = typing.stringify(signature.return_annotation)\n                     objrepr = stringify_typehint(signature.return_annotation)\n                     self.add_line('   :type: ' + objrepr, sourcename)\n             except TypeError as exc:\n", "normalized_occurrence": 1}
