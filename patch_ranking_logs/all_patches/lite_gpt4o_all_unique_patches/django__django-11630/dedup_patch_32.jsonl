{"model_name_or_path": "agentless", "instance_id": "django__django-11630", "model_patch": "diff --git a/django/db/models/options.py b/django/db/models/options.py\nindex c5f3683..e1bb542 100644\n--- a/django/db/models/options.py\n+++ b/django/db/models/options.py\n@@ -202,9 +202,9 @@ class Options:\n             self.verbose_name_plural = format_lazy('{}s', self.verbose_name)\n         del self.meta\n \n-        # If the db_table wasn't provided, use the app_label + model_name.\n-        if not self.db_table:\n-            self.db_table = \"%s_%s\" % (self.app_label, self.model_name)\n+        # If the db_table wasn't provided or if a collision is detected, use the app_label + model_name.\n+        if not self.db_table or self.apps.is_duplicate_table_name(self.db_table, self):\n+            self.db_table = \"%s_%s\" % (self.app_label, self.object_name.lower())\n             self.db_table = truncate_name(self.db_table, connection.ops.max_name_length())\n \n     def _format_names_with_class(self, cls, objs):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/options.py b/django/db/models/options.py\nindex dbc5560..97f1bed 100644\n--- a/django/db/models/options.py\n+++ b/django/db/models/options.py\n@@ -125,8 +125,8 @@ class Options:\n         else:\n             self.verbose_name_plural = format_lazy('{}s', self.verbose_name)\n         del self.meta\n-        if not self.db_table:\n-            self.db_table = '%s_%s' % (self.app_label, self.model_name)\n+        if not self.db_table or self.apps.is_duplicate_table_name(self.db_table, self):\n+            self.db_table = '%s_%s' % (self.app_label, self.object_name.lower())\n             self.db_table = truncate_name(self.db_table, connection.ops.max_name_length())\n     def _format_names_with_class(self, cls, objs):\n         new_objs = []\n", "normalized_occurrence": 1}
