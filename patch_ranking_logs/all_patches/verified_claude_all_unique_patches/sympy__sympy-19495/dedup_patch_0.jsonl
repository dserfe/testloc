{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-19495", "model_patch": "diff --git a/sympy/sets/conditionset.py b/sympy/sets/conditionset.py\nindex 934bff8..090ccac 100644\n--- a/sympy/sets/conditionset.py\n+++ b/sympy/sets/conditionset.py\n@@ -242,8 +242,6 @@ class ConditionSet(Set):\n             return self.func(sym, cond, base)\n         cond = self.condition.subs(old, new)\n         base = self.base_set.subs(old, new)\n-        if cond is S.true:\n-            return ConditionSet(new, Contains(new, base), base)\n         return self.func(self.sym, cond, base)\n \n     def dummy_eq(self, other, symbol=None):\n", "occurrence": 3, "normalized_patch": "diff --git a/sympy/sets/conditionset.py b/sympy/sets/conditionset.py\nindex c7937ea..59ded74 100644\n--- a/sympy/sets/conditionset.py\n+++ b/sympy/sets/conditionset.py\n@@ -91,8 +91,6 @@ class ConditionSet(Set):\n             return self.func(sym, cond, base)\n         cond = self.condition.subs(old, new)\n         base = self.base_set.subs(old, new)\n-        if cond is S.true:\n-            return ConditionSet(new, Contains(new, base), base)\n         return self.func(self.sym, cond, base)\n     def dummy_eq(self, other, symbol=None):\n         if not isinstance(other, self.func):\n", "normalized_occurrence": 3}
