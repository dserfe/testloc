{"model_name_or_path": "agentless", "instance_id": "django__django-13033", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 13e70df..12c688b 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -283,7 +283,7 @@ class SQLCompiler:\n             ordering = self.query.order_by\n         elif self.query.order_by:\n             ordering = self.query.order_by\n-        elif self.query.get_meta().ordering:\n+        elif self.query.get_meta().ordering and not self._meta_ordering:\n             ordering = self.query.get_meta().ordering\n             self._meta_ordering = ordering\n         else:\n@@ -736,7 +736,7 @@ class SQLCompiler:\n             already_seen.add(join_tuple)\n \n             results = []\n-            for item in opts.ordering:\n+            for item in opts.ordering if not self._meta_ordering else []:\n                 if hasattr(item, 'resolve_expression') and not isinstance(item, OrderBy):\n                     item = item.desc() if descending else item.asc()\n                 if isinstance(item, OrderBy):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex d98aa67..ce9a117 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -138,7 +138,7 @@ class SQLCompiler:\n             ordering = self.query.order_by\n         elif self.query.order_by:\n             ordering = self.query.order_by\n-        elif self.query.get_meta().ordering:\n+        elif self.query.get_meta().ordering and (not self._meta_ordering):\n             ordering = self.query.get_meta().ordering\n             self._meta_ordering = ordering\n         else:\n@@ -422,7 +422,7 @@ class SQLCompiler:\n                 raise FieldError('Infinite loop caused by ordering.')\n             already_seen.add(join_tuple)\n             results = []\n-            for item in opts.ordering:\n+            for item in opts.ordering if not self._meta_ordering else []:\n                 if hasattr(item, 'resolve_expression') and (not isinstance(item, OrderBy)):\n                     item = item.desc() if descending else item.asc()\n                 if isinstance(item, OrderBy):\n", "normalized_occurrence": 1}
