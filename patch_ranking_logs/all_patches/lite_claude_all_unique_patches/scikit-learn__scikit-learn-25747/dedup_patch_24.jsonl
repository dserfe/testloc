{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-25747", "model_patch": "diff --git a/sklearn/utils/_set_output.py b/sklearn/utils/_set_output.py\nindex 52acc1f..2677f62 100644\n--- a/sklearn/utils/_set_output.py\n+++ b/sklearn/utils/_set_output.py\n@@ -1,3 +1,4 @@\n+\n from functools import wraps\n \n from scipy.sparse import issparse\n@@ -55,10 +56,14 @@ def _wrap_in_pandas_container(\n     if isinstance(data_to_wrap, pd.DataFrame):\n         if columns is not None:\n             data_to_wrap.columns = columns\n-        if index is not None:\n+        # Only set index if the data doesn't already have a non-default one\n+        if index is not None and data_to_wrap.index.equals(pd.RangeIndex(len(data_to_wrap))):\n             data_to_wrap.index = index\n         return data_to_wrap\n \n+    # For new DataFrames, preserve index if data_to_wrap is already a Series/DataFrame\n+    if hasattr(data_to_wrap, \"index\"):\n+        return pd.DataFrame(data_to_wrap, columns=columns)\n     return pd.DataFrame(data_to_wrap, index=index, columns=columns)\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/utils/_set_output.py b/sklearn/utils/_set_output.py\nindex 386f312..311bf32 100644\n--- a/sklearn/utils/_set_output.py\n+++ b/sklearn/utils/_set_output.py\n@@ -15,9 +15,11 @@ def _wrap_in_pandas_container(data_to_wrap, *, columns, index=None):\n     if isinstance(data_to_wrap, pd.DataFrame):\n         if columns is not None:\n             data_to_wrap.columns = columns\n-        if index is not None:\n+        if index is not None and data_to_wrap.index.equals(pd.RangeIndex(len(data_to_wrap))):\n             data_to_wrap.index = index\n         return data_to_wrap\n+    if hasattr(data_to_wrap, 'index'):\n+        return pd.DataFrame(data_to_wrap, columns=columns)\n     return pd.DataFrame(data_to_wrap, index=index, columns=columns)\n def _get_output_config(method, estimator=None):\n     est_sklearn_output_config = getattr(estimator, '_sklearn_output_config', {})\n", "normalized_occurrence": 1}
