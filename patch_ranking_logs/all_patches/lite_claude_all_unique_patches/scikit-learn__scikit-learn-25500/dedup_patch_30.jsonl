{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-25500", "model_patch": "diff --git a/sklearn/isotonic.py b/sklearn/isotonic.py\nindex 6365edf..849ad62 100644\n--- a/sklearn/isotonic.py\n+++ b/sklearn/isotonic.py\n@@ -395,6 +395,9 @@ class IsotonicRegression(RegressorMixin, TransformerMixin, BaseEstimator):\n         # on scipy 0.17, interp1d up-casts to float64, so we cast back\n         res = res.astype(T.dtype)\n \n+        # Ensure 1D output even when pandas output is enabled\n+        if hasattr(res, 'squeeze'):\n+            res = res.squeeze()\n         return res\n \n     def predict(self, T):\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/isotonic.py b/sklearn/isotonic.py\nindex 156dcaa..0aafb41 100644\n--- a/sklearn/isotonic.py\n+++ b/sklearn/isotonic.py\n@@ -96,6 +96,8 @@ class IsotonicRegression(RegressorMixin, TransformerMixin, BaseEstimator):\n             T = np.clip(T, self.X_min_, self.X_max_)\n         res = self.f_(T)\n         res = res.astype(T.dtype)\n+        if hasattr(res, 'squeeze'):\n+            res = res.squeeze()\n         return res\n     def predict(self, T):\n         return self.transform(T)\n", "normalized_occurrence": 2}
