{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-15346", "model_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex 9a2774b..f957b73 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -501,6 +501,10 @@ def trigsimp(expr, **opts):\n             return new\n         return trigsimp_groebner(new, **opts)\n \n+    # Use 'fu' method by default for expressions containing Rational arguments\n+    if any(isinstance(a, Rational) for a in expr.atoms()):\n+        method = 'fu'\n+        \n     trigsimpfunc = {\n         'fu': (lambda x: fu(x, **opts)),\n         'matching': (lambda x: futrig(x)),\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex 79862a9..1912663 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -170,6 +170,8 @@ def trigsimp(expr, **opts):\n         if not isinstance(new, Expr):\n             return new\n         return trigsimp_groebner(new, **opts)\n+    if any((isinstance(a, Rational) for a in expr.atoms())):\n+        method = 'fu'\n     trigsimpfunc = {'fu': lambda x: fu(x, **opts), 'matching': lambda x: futrig(x), 'groebner': lambda x: groebnersimp(x, **opts), 'combined': lambda x: futrig(groebnersimp(x, polynomial=True, hints=[2, tan])), 'old': lambda x: trigsimp_old(x, **opts)}[method]\n     return trigsimpfunc(expr)\n def exptrigsimp(expr):\n", "normalized_occurrence": 1}
