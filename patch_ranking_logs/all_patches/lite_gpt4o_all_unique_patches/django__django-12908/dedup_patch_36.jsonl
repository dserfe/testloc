{"model_name_or_path": "agentless", "instance_id": "django__django-12908", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex a26bee7..a88ad1f 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -479,7 +479,9 @@ class SQLCompiler:\n         params = []\n         for part in args_parts:\n             params.extend(part)\n-        return result, params\n+        # Ensure distinct fields are quoted correctly\n+        distinct_result = [self.connection.ops.quote_name(field) for field in result]\n+        return distinct_result, params\n \n     def as_sql(self, with_limits=True, with_col_aliases=False):\n         \"\"\"\n@@ -699,7 +701,9 @@ class SQLCompiler:\n                     r, p = self.compile(transform_function(target, alias))\n                     result.append(r)\n                     params.append(p)\n-        return result, params\n+        # Ensure distinct fields are quoted correctly\n+        distinct_result = [self.connection.ops.quote_name(field) for field in result]\n+        return distinct_result, params\n \n     def find_ordering_name(self, name, opts, alias=None, default_order='ASC',\n                            already_seen=None):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex e6a07a3..21004fc 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -271,7 +271,8 @@ class SQLCompiler:\n         params = []\n         for part in args_parts:\n             params.extend(part)\n-        return (result, params)\n+        distinct_result = [self.connection.ops.quote_name(field) for field in result]\n+        return (distinct_result, params)\n     def as_sql(self, with_limits=True, with_col_aliases=False):\n         refcounts_before = self.query.alias_refcount.copy()\n         try:\n@@ -404,7 +405,8 @@ class SQLCompiler:\n                     r, p = self.compile(transform_function(target, alias))\n                     result.append(r)\n                     params.append(p)\n-        return (result, params)\n+        distinct_result = [self.connection.ops.quote_name(field) for field in result]\n+        return (distinct_result, params)\n     def find_ordering_name(self, name, opts, alias=None, default_order='ASC', already_seen=None):\n         name, order = get_order_dir(name, default_order)\n         descending = order == 'DESC'\n", "normalized_occurrence": 1}
