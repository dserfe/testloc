{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-7910", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 87c3fb8..7cbac63 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1410,6 +1410,9 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type:\n                 sig = stringify_signature(overload, **kwargs)\n                 sigs.append(sig)\n         else:\n+            # Unwrap the method to get the original __init__ method if it's decorated\n+            obj = unwrap_all(self.object)\n+            sig = super().format_signature(obj=obj, **kwargs)\n             sigs.append(sig)\n \n         return \"\\n\".join(sigs)\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 69b2ccc..c2b085c 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1026,6 +1026,8 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):\n                 sig = stringify_signature(overload, **kwargs)\n                 sigs.append(sig)\n         else:\n+            obj = unwrap_all(self.object)\n+            sig = super().format_signature(obj=obj, **kwargs)\n             sigs.append(sig)\n         return '\\n'.join(sigs)\n \n", "normalized_occurrence": 1}
