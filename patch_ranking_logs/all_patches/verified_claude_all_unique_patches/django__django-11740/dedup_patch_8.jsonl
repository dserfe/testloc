{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11740", "model_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 816737e..26c5ee0 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -963,6 +963,11 @@ class MigrationAutodetector:\n                             preserve_default = False\n                     else:\n                         field = new_field\n+                    # Get dependencies if converting to a ForeignKey\n+                    dependencies = []\n+                    if hasattr(field, 'remote_field') and field.remote_field is not None:\n+                        dependencies = self._get_dependencies_for_foreign_key(field)\n+                    \n                     self.add_operation(\n                         app_label,\n                         operations.AlterField(\n@@ -970,7 +975,8 @@ class MigrationAutodetector:\n                             name=field_name,\n                             field=field,\n                             preserve_default=preserve_default,\n-                        )\n+                        ),\n+                        dependencies=dependencies,\n                     )\n                 else:\n                     # We cannot alter between m2m and concrete fields\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 9fda64b..575dc25 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -468,7 +468,10 @@ class MigrationAutodetector:\n                             preserve_default = False\n                     else:\n                         field = new_field\n-                    self.add_operation(app_label, operations.AlterField(model_name=model_name, name=field_name, field=field, preserve_default=preserve_default))\n+                    dependencies = []\n+                    if hasattr(field, 'remote_field') and field.remote_field is not None:\n+                        dependencies = self._get_dependencies_for_foreign_key(field)\n+                    self.add_operation(app_label, operations.AlterField(model_name=model_name, name=field_name, field=field, preserve_default=preserve_default), dependencies=dependencies)\n                 else:\n                     self._generate_removed_field(app_label, model_name, field_name)\n                     self._generate_added_field(app_label, model_name, field_name)\n", "normalized_occurrence": 2}
