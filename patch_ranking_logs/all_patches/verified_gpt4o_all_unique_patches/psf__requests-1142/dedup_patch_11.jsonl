{"model_name_or_path": "agentless", "instance_id": "psf__requests-1142", "model_patch": "diff --git a/requests/models.py b/requests/models.py\nindex 0d4482a..98ede7d 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -377,7 +377,8 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n                     else:\n                         content_type = 'application/x-www-form-urlencoded'\n \n-            self.prepare_content_length(body)\n+            if self.method != 'GET':\n+                self.prepare_content_length(body)\n \n             # Add content-type if it wasn't explicitly provided.\n             if (content_type) and (not 'content-type' in self.headers):\n@@ -386,7 +387,8 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         self.body = body\n \n     def prepare_content_length(self, body):\n-        self.headers['Content-Length'] = '0'\n+        if self.method != 'GET':\n+            self.headers['Content-Length'] = '0'\n         if hasattr(body, 'seek') and hasattr(body, 'tell'):\n             body.seek(0, 2)\n             self.headers['Content-Length'] = str(body.tell())\n", "occurrence": 1, "normalized_patch": "diff --git a/requests/models.py b/requests/models.py\nindex 8a031b4..8a69ce0 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -204,12 +204,14 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n                     content_type = None\n                 else:\n                     content_type = 'application/x-www-form-urlencoded'\n-            self.prepare_content_length(body)\n+            if self.method != 'GET':\n+                self.prepare_content_length(body)\n             if content_type and (not 'content-type' in self.headers):\n                 self.headers['Content-Type'] = content_type\n         self.body = body\n     def prepare_content_length(self, body):\n-        self.headers['Content-Length'] = '0'\n+        if self.method != 'GET':\n+            self.headers['Content-Length'] = '0'\n         if hasattr(body, 'seek') and hasattr(body, 'tell'):\n             body.seek(0, 2)\n             self.headers['Content-Length'] = str(body.tell())\n", "normalized_occurrence": 1}
