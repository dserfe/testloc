{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-15346", "model_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex 9a2774b..5bb58b8 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -496,9 +496,13 @@ def trigsimp(expr, **opts):\n             if e.is_Function or e.is_Pow:\n                 args = [trigsimp_groebner(x, **opts) for x in args]\n             return e.func(*args)\n-        new = traverse(ex)\n-        if not isinstance(new, Expr):\n-            return new\n+        # Handle rational arguments in trig functions\n+        if isinstance(ex, (sin, cos)) and isinstance(ex.args[0], Rational):\n+            new = ex\n+        else:\n+            new = traverse(ex)\n+            if not isinstance(new, Expr):\n+                return new\n         return trigsimp_groebner(new, **opts)\n \n     trigsimpfunc = {\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex 79862a9..bb69092 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -166,9 +166,12 @@ def trigsimp(expr, **opts):\n             if e.is_Function or e.is_Pow:\n                 args = [trigsimp_groebner(x, **opts) for x in args]\n             return e.func(*args)\n-        new = traverse(ex)\n-        if not isinstance(new, Expr):\n-            return new\n+        if isinstance(ex, (sin, cos)) and isinstance(ex.args[0], Rational):\n+            new = ex\n+        else:\n+            new = traverse(ex)\n+            if not isinstance(new, Expr):\n+                return new\n         return trigsimp_groebner(new, **opts)\n     trigsimpfunc = {'fu': lambda x: fu(x, **opts), 'matching': lambda x: futrig(x), 'groebner': lambda x: groebnersimp(x, **opts), 'combined': lambda x: futrig(groebnersimp(x, polynomial=True, hints=[2, tan])), 'old': lambda x: trigsimp_old(x, **opts)}[method]\n     return trigsimpfunc(expr)\n", "normalized_occurrence": 1}
