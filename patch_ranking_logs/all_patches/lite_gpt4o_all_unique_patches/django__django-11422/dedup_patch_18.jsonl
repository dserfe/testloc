{"model_name_or_path": "agentless", "instance_id": "django__django-11422", "model_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex 2510c51..b1f4840 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -124,7 +124,9 @@ def iter_modules_and_files(modules, extra_files):\n             sys_file_paths.append(origin)\n \n     results = set()\n-    for filename in itertools.chain(sys_file_paths, extra_files):\n+    # Ensure manage.py is included in the files to be watched.\n+    manage_py_path = pathlib.Path(sys.argv[0]).resolve().absolute()\n+    for filename in itertools.chain(sys_file_paths, extra_files, [manage_py_path]):\n         if not filename:\n             continue\n         path = pathlib.Path(filename)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex bb4b189..ec263e4 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -82,7 +82,8 @@ def iter_modules_and_files(modules, extra_files):\n             origin = spec.loader.archive if isinstance(spec.loader, zipimporter) else spec.origin\n             sys_file_paths.append(origin)\n     results = set()\n-    for filename in itertools.chain(sys_file_paths, extra_files):\n+    manage_py_path = pathlib.Path(sys.argv[0]).resolve().absolute()\n+    for filename in itertools.chain(sys_file_paths, extra_files, [manage_py_path]):\n         if not filename:\n             continue\n         path = pathlib.Path(filename)\n", "normalized_occurrence": 1}
