{"model_name_or_path": "agentless", "instance_id": "django__django-11265", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 1309ca5..cda12ef 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1667,6 +1667,10 @@ class Query(BaseExpression):\n         # Generate the inner query.\n         query = Query(self.model)\n         query.add_filter(filter_expr)\n+        # Include annotations in subquery\n+        query.annotations = self.annotations\n+        query.annotation_select = self.annotation_select.copy()\n+        query._filtered_relations = self._filtered_relations\n         query.clear_ordering(True)\n         # Try to have as simple as possible subquery -> trim leading joins from\n         # the subquery.\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 60a9579..8cae7d0 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -890,6 +890,9 @@ class Query(BaseExpression):\n             filter_expr = (filter_lhs, OuterRef(filter_rhs.name))\n         query = Query(self.model)\n         query.add_filter(filter_expr)\n+        query.annotations = self.annotations\n+        query.annotation_select = self.annotation_select.copy()\n+        query._filtered_relations = self._filtered_relations\n         query.clear_ordering(True)\n         trimmed_prefix, contains_louter = query.trim_start(names_with_path)\n         col = query.select[0]\n", "normalized_occurrence": 1}
