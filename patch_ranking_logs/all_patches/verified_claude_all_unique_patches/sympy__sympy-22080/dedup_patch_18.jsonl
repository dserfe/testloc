{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-22080", "model_patch": "diff --git a/sympy/core/mod.py b/sympy/core/mod.py\nindex ca33049..89ceb65 100644\n--- a/sympy/core/mod.py\n+++ b/sympy/core/mod.py\n@@ -209,6 +209,11 @@ class Mod(Function):\n         # simple -1 extraction\n         if p.could_extract_minus_sign() and q.could_extract_minus_sign():\n             G, p, q = [-i for i in (G, p, q)]\n+        elif p.could_extract_minus_sign():\n+            # When only p is negative, keep the negative sign outside\n+            # to ensure correct behavior with Python's % operator\n+            G = -G\n+            p = -p\n \n         # check again to see if p and q can now be handled as numbers\n         rv = doit(p, q)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/mod.py b/sympy/core/mod.py\nindex 57d2396..2705d78 100644\n--- a/sympy/core/mod.py\n+++ b/sympy/core/mod.py\n@@ -139,6 +139,9 @@ class Mod(Function):\n                 q = cq * q\n         if p.could_extract_minus_sign() and q.could_extract_minus_sign():\n             G, p, q = [-i for i in (G, p, q)]\n+        elif p.could_extract_minus_sign():\n+            G = -G\n+            p = -p\n         rv = doit(p, q)\n         if rv is not None:\n             return rv * G\n", "normalized_occurrence": 1}
