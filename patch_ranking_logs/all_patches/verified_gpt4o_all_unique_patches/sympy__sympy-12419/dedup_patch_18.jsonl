{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-12419", "model_patch": "diff --git a/sympy/matrices/expressions/matmul.py b/sympy/matrices/expressions/matmul.py\nindex 639ff43..5f9fb8f 100644\n--- a/sympy/matrices/expressions/matmul.py\n+++ b/sympy/matrices/expressions/matmul.py\n@@ -62,8 +62,11 @@ class MatMul(MatrixExpr):\n         from sympy.matrices import ImmutableMatrix\n         k = Dummy('k', integer=True)\n         if X.has(ImmutableMatrix) or Y.has(ImmutableMatrix):\n-            return coeff*Add(*[X[i, k]*Y[k, j] for k in range(X.cols)])\n-        result = Sum(coeff*X[i, k]*Y[k, j], (k, 0, X.cols - 1))\n+            result = coeff*Add(*[X[i, k]*Y[k, j] for k in range(X.cols)])\n+        else:\n+            result = Sum(coeff*X[i, k]*Y[k, j], (k, 0, X.cols - 1))\n+        if X == Y and X.rows == X.cols:\n+            result = KroneckerDelta(i, j)\n         if not X.cols.is_number:\n             # Don't waste time in result.doit() if the sum bounds are symbolic\n             expand = False\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/expressions/matmul.py b/sympy/matrices/expressions/matmul.py\nindex 5b270b9..96276be 100644\n--- a/sympy/matrices/expressions/matmul.py\n+++ b/sympy/matrices/expressions/matmul.py\n@@ -37,8 +37,11 @@ class MatMul(MatrixExpr):\n         from sympy.matrices import ImmutableMatrix\n         k = Dummy('k', integer=True)\n         if X.has(ImmutableMatrix) or Y.has(ImmutableMatrix):\n-            return coeff * Add(*[X[i, k] * Y[k, j] for k in range(X.cols)])\n-        result = Sum(coeff * X[i, k] * Y[k, j], (k, 0, X.cols - 1))\n+            result = coeff * Add(*[X[i, k] * Y[k, j] for k in range(X.cols)])\n+        else:\n+            result = Sum(coeff * X[i, k] * Y[k, j], (k, 0, X.cols - 1))\n+        if X == Y and X.rows == X.cols:\n+            result = KroneckerDelta(i, j)\n         if not X.cols.is_number:\n             expand = False\n         return result.doit() if expand else result\n", "normalized_occurrence": 1}
