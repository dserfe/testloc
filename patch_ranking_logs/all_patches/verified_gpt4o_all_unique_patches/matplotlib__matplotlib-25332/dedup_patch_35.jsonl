{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25332", "model_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 973eb1a..ccd3e3c 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -3174,6 +3174,13 @@ None}, default: None\n         from matplotlib import _pylab_helpers\n         if self.canvas.manager in _pylab_helpers.Gcf.figs.values():\n             state['_restore_to_pylab'] = True\n+        \n+        # Remove weak references before pickling\n+        state['_align_label_groups'] = {\n+            key: [ref() for ref in refs if ref() is not None]\n+            for key, refs in state.get('_align_label_groups', {}).items()\n+        }\n+        \n         return state\n \n     def __setstate__(self, state):\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 7796fb8..45c453e 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -951,6 +951,7 @@ class Figure(FigureBase):\n         from matplotlib import _pylab_helpers\n         if self.canvas.manager in _pylab_helpers.Gcf.figs.values():\n             state['_restore_to_pylab'] = True\n+        state['_align_label_groups'] = {key: [ref() for ref in refs if ref() is not None] for key, refs in state.get('_align_label_groups', {}).items()}\n         return state\n     def __setstate__(self, state):\n         version = state.pop('__mpl_version__')\n", "normalized_occurrence": 1}
