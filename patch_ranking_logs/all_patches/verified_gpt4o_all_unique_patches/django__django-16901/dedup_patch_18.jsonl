{"model_name_or_path": "agentless", "instance_id": "django__django-16901", "model_patch": "diff --git a/django/db/models/query_utils.py b/django/db/models/query_utils.py\nindex 4465765..a4d3301 100644\n--- a/django/db/models/query_utils.py\n+++ b/django/db/models/query_utils.py\n@@ -60,6 +60,16 @@ class Q(tree.Node):\n         if not other and isinstance(other, Q):\n             return self.copy()\n \n+        if conn == self.XOR:\n+            obj = self.create(connector=self.OR)\n+            negated_self = self.create(connector=self.AND, negated=True)\n+            negated_other = self.create(connector=self.AND, negated=True)\n+            obj.add(self, self.OR)\n+            obj.add(other, self.OR)\n+            obj.add(negated_self, self.AND)\n+            obj.add(negated_other, self.AND)\n+            return obj\n+\n         obj = self.create(connector=conn)\n         obj.add(self, conn)\n         obj.add(other, conn)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query_utils.py b/django/db/models/query_utils.py\nindex 0f80339..83a1fc9 100644\n--- a/django/db/models/query_utils.py\n+++ b/django/db/models/query_utils.py\n@@ -27,6 +27,15 @@ class Q(tree.Node):\n             return other.copy()\n         if not other and isinstance(other, Q):\n             return self.copy()\n+        if conn == self.XOR:\n+            obj = self.create(connector=self.OR)\n+            negated_self = self.create(connector=self.AND, negated=True)\n+            negated_other = self.create(connector=self.AND, negated=True)\n+            obj.add(self, self.OR)\n+            obj.add(other, self.OR)\n+            obj.add(negated_self, self.AND)\n+            obj.add(negated_other, self.AND)\n+            return obj\n         obj = self.create(connector=conn)\n         obj.add(self, conn)\n         obj.add(other, conn)\n", "normalized_occurrence": 1}
