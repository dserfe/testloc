{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-25079", "model_patch": "diff --git a/lib/matplotlib/colors.py b/lib/matplotlib/colors.py\nindex 7f9101f..ea9811a 100644\n--- a/lib/matplotlib/colors.py\n+++ b/lib/matplotlib/colors.py\n@@ -1327,9 +1327,13 @@ class Normalize:\n \n         if self.vmin is None or self.vmax is None:\n             self.autoscale_None(result)\n-        # Convert at least to float, without losing precision.\n-        (vmin,), _ = self.process_value(self.vmin)\n-        (vmax,), _ = self.process_value(self.vmax)\n+        # For LogNorm, use the original vmin/vmax to preserve validity\n+        if isinstance(self, LogNorm):\n+            vmin, vmax = self.vmin, self.vmax\n+        else:\n+            # Convert at least to float, without losing precision.\n+            (vmin,), _ = self.process_value(self.vmin)\n+            (vmax,), _ = self.process_value(self.vmax)\n         if vmin == vmax:\n             result.fill(0)  # Or should it be all masked?  Or 0.5?\n         elif vmin > vmax:\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/colors.py b/lib/matplotlib/colors.py\nindex 3fa1488..767a672 100644\n--- a/lib/matplotlib/colors.py\n+++ b/lib/matplotlib/colors.py\n@@ -1125,8 +1125,11 @@ class Normalize:\n         result, is_scalar = self.process_value(value)\n         if self.vmin is None or self.vmax is None:\n             self.autoscale_None(result)\n-        (vmin,), _ = self.process_value(self.vmin)\n-        (vmax,), _ = self.process_value(self.vmax)\n+        if isinstance(self, LogNorm):\n+            vmin, vmax = (self.vmin, self.vmax)\n+        else:\n+            (vmin,), _ = self.process_value(self.vmin)\n+            (vmax,), _ = self.process_value(self.vmax)\n         if vmin == vmax:\n             result.fill(0)\n         elif vmin > vmax:\n", "normalized_occurrence": 1}
