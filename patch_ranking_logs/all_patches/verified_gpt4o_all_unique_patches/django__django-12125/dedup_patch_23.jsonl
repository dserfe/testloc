{"model_name_or_path": "agentless", "instance_id": "django__django-12125", "model_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex 824ab10..ad1aa51 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -95,8 +95,14 @@ class DeconstructableSerializer(BaseSerializer):\n             imports = {\"from django.db import models\"}\n             name = \"models.%s\" % name\n         else:\n-            imports = {\"import %s\" % module}\n-            name = path\n+            # Adjust the path to handle inner classes\n+            if '.' in name:\n+                outer_class, inner_class = name.split('.', 1)\n+                imports = {\"import %s\" % module}\n+                name = \"%s.%s\" % (outer_class, inner_class)\n+            else:\n+                imports = {\"import %s\" % module}\n+                name = path\n         return name, imports\n \n     def serialize(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex d663baf..e58f862 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -72,6 +72,10 @@ class DeconstructableSerializer(BaseSerializer):\n         if module == 'django.db.models':\n             imports = {'from django.db import models'}\n             name = 'models.%s' % name\n+        elif '.' in name:\n+            outer_class, inner_class = name.split('.', 1)\n+            imports = {'import %s' % module}\n+            name = '%s.%s' % (outer_class, inner_class)\n         else:\n             imports = {'import %s' % module}\n             name = path\n", "normalized_occurrence": 1}
