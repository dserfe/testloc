{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-24661", "model_patch": "diff --git a/sympy/core/relational.py b/sympy/core/relational.py\nindex c35b72b..086d48b 100644\n--- a/sympy/core/relational.py\n+++ b/sympy/core/relational.py\n@@ -830,6 +830,7 @@ class _Inequality(Relational):\n             # nor a subclass was able to reduce to boolean or raise an\n             # exception).  In that case, it must call us with\n             # `evaluate=False` to prevent infinite recursion.\n+            options['evaluate'] = evaluate  # Pass through the evaluate flag\n             return cls._eval_relation(lhs, rhs, **options)\n \n         # make a \"non-evaluated\" Expr for the inequality\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/relational.py b/sympy/core/relational.py\nindex 6f6b8fe..5ad5596 100644\n--- a/sympy/core/relational.py\n+++ b/sympy/core/relational.py\n@@ -354,6 +354,7 @@ class _Inequality(Relational):\n                     raise TypeError('Invalid comparison of non-real %s' % me)\n                 if me is S.NaN:\n                     raise TypeError('Invalid NaN comparison')\n+            options['evaluate'] = evaluate\n             return cls._eval_relation(lhs, rhs, **options)\n         return Relational.__new__(cls, lhs, rhs, **options)\n     @classmethod\n", "normalized_occurrence": 1}
