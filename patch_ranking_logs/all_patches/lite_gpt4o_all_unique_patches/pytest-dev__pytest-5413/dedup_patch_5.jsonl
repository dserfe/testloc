{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-5413", "model_patch": "diff --git a/src/_pytest/python_api.py b/src/_pytest/python_api.py\nindex 4c5d4d8..2552fd0 100644\n--- a/src/_pytest/python_api.py\n+++ b/src/_pytest/python_api.py\n@@ -710,6 +710,12 @@ class RaisesContext:\n     def __init__(self, expected_exception, message, match_expr):\n         self.expected_exception = expected_exception\n         self.message = message\n+        self.excinfo = None\n+\n+    def __str__(self):\n+        if self.excinfo:\n+            return str(self.excinfo.value)\n+        return '<RaisesContext instance without exception>'\n         self.match_expr = match_expr\n         self.excinfo = None\n \n@@ -725,4 +731,4 @@ class RaisesContext:\n         suppress_exception = issubclass(self.excinfo.type, self.expected_exception)\n         if self.match_expr is not None and suppress_exception:\n             self.excinfo.match(self.match_expr)\n-        return suppress_exception\n+        return suppress_exception\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/python_api.py b/src/_pytest/python_api.py\nindex 75af5d2..1f5a6c0 100644\n--- a/src/_pytest/python_api.py\n+++ b/src/_pytest/python_api.py\n@@ -217,6 +217,11 @@ class RaisesContext:\n     def __init__(self, expected_exception, message, match_expr):\n         self.expected_exception = expected_exception\n         self.message = message\n+        self.excinfo = None\n+    def __str__(self):\n+        if self.excinfo:\n+            return str(self.excinfo.value)\n+        return '<RaisesContext instance without exception>'\n         self.match_expr = match_expr\n         self.excinfo = None\n     def __enter__(self):\n", "normalized_occurrence": 1}
