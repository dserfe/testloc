{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7432", "model_patch": "diff --git a/src/_pytest/skipping.py b/src/_pytest/skipping.py\nindex 1e94c70..0a48dc7 100644\n--- a/src/_pytest/skipping.py\n+++ b/src/_pytest/skipping.py\n@@ -271,7 +271,10 @@ def pytest_runtest_makereport(item: Item, call: CallInfo[None]):\n             rep.longrepr = \"Unexpected success\"\n         rep.outcome = \"failed\"\n     elif item.config.option.runxfail:\n-        pass  # don't interfere\n+        if call.excinfo and isinstance(call.excinfo.value, skip.Exception):\n+            r = call.excinfo._getreprcrash()\n+            rep.longrepr = (str(r.path), r.lineno, r.message)\n+        pass  # don't interfere otherwise\n     elif call.excinfo and isinstance(call.excinfo.value, xfail.Exception):\n         assert call.excinfo.value.msg is not None\n         rep.wasxfail = \"reason: \" + call.excinfo.value.msg\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/skipping.py b/src/_pytest/skipping.py\nindex 5f70c26..fcc1f32 100644\n--- a/src/_pytest/skipping.py\n+++ b/src/_pytest/skipping.py\n@@ -149,6 +149,9 @@ def pytest_runtest_makereport(item: Item, call: CallInfo[None]):\n             rep.longrepr = 'Unexpected success'\n         rep.outcome = 'failed'\n     elif item.config.option.runxfail:\n+        if call.excinfo and isinstance(call.excinfo.value, skip.Exception):\n+            r = call.excinfo._getreprcrash()\n+            rep.longrepr = (str(r.path), r.lineno, r.message)\n         pass\n     elif call.excinfo and isinstance(call.excinfo.value, xfail.Exception):\n         assert call.excinfo.value.msg is not None\n", "normalized_occurrence": 1}
