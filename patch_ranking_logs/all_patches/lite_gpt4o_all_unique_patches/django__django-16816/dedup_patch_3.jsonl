{"model_name_or_path": "agentless", "instance_id": "django__django-16816", "model_patch": "diff --git a/django/contrib/admin/checks.py b/django/contrib/admin/checks.py\nindex e2f5674..1c481e2 100644\n--- a/django/contrib/admin/checks.py\n+++ b/django/contrib/admin/checks.py\n@@ -893,11 +893,11 @@ class ModelAdminChecks(BaseModelAdminChecks):\n     def _check_list_display_item(self, obj, item, label):\n         if callable(item):\n             return []\n-        elif hasattr(obj, item):\n-            return []\n         try:\n             field = obj.model._meta.get_field(item)\n         except FieldDoesNotExist:\n+            if hasattr(obj, item):\n+                return []\n             try:\n                 field = getattr(obj.model, item)\n             except AttributeError:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/checks.py b/django/contrib/admin/checks.py\nindex 4734fd9..ef9c566 100644\n--- a/django/contrib/admin/checks.py\n+++ b/django/contrib/admin/checks.py\n@@ -335,11 +335,11 @@ class ModelAdminChecks(BaseModelAdminChecks):\n     def _check_list_display_item(self, obj, item, label):\n         if callable(item):\n             return []\n-        elif hasattr(obj, item):\n-            return []\n         try:\n             field = obj.model._meta.get_field(item)\n         except FieldDoesNotExist:\n+            if hasattr(obj, item):\n+                return []\n             try:\n                 field = getattr(obj.model, item)\n             except AttributeError:\n", "normalized_occurrence": 1}
