{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-9461", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 00b90de..4b3b20c 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -2661,7 +2661,11 @@ class PropertyDocumenter(DocstringStripSignatureMixin, ClassLevelDocumenter):  #\n     @classmethod\n     def can_document_member(cls, member: Any, membername: str, isattr: bool, parent: Any\n                             ) -> bool:\n-        return inspect.isproperty(member) and isinstance(parent, ClassDocumenter)\n+        # Get the raw member from parent if possible to handle class properties\n+        raw_member = parent.__dict__.get(membername, member) if parent else member\n+        return (inspect.isproperty(raw_member) or\n+                (isinstance(raw_member, classmethod) and inspect.isproperty(raw_member.__get__(None, parent)))) \\\n+               and isinstance(parent, ClassDocumenter)\n \n     def document_members(self, all_members: bool = False) -> None:\n         pass\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex ee3bdad..c341b74 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1597,7 +1597,8 @@ class PropertyDocumenter(DocstringStripSignatureMixin, ClassLevelDocumenter):\n     priority = AttributeDocumenter.priority + 1\n     @classmethod\n     def can_document_member(cls, member: Any, membername: str, isattr: bool, parent: Any) -> bool:\n-        return inspect.isproperty(member) and isinstance(parent, ClassDocumenter)\n+        raw_member = parent.__dict__.get(membername, member) if parent else member\n+        return (inspect.isproperty(raw_member) or (isinstance(raw_member, classmethod) and inspect.isproperty(raw_member.__get__(None, parent)))) and isinstance(parent, ClassDocumenter)\n     def document_members(self, all_members: bool=False) -> None:\n         pass\n     def get_real_modname(self) -> str:\n", "normalized_occurrence": 1}
