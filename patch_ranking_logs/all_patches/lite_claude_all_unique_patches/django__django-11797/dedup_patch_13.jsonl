{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11797", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 946e695..70a771c 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -104,9 +104,18 @@ class SQLCompiler:\n                     expressions.append(self.query.resolve_ref(expr))\n                 else:\n                     expressions.append(expr)\n-        # Note that even if the group_by is set, it is only the minimal\n-        # set to group by. So, we need to add cols in select, order_by, and\n-        # having into the select in any case.\n+            # When group_by is explicitly set (not True), only use those expressions\n+            result = []\n+            seen = set()\n+            for expr in expressions:\n+                sql, params = self.compile(expr)\n+                params_hash = make_hashable(params)\n+                if (sql, params_hash) not in seen:\n+                    result.append((sql, params))\n+                    seen.add((sql, params_hash))\n+            return result\n+        # Note that for implicit grouping (group_by=True), we need to add cols in\n+        # select, order_by, and having into the group by in any case.\n         for expr, _, _ in select:\n             cols = expr.get_group_by_cols()\n             for col in cols:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex a6b66a9..385bd82 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -45,6 +45,15 @@ class SQLCompiler:\n                     expressions.append(self.query.resolve_ref(expr))\n                 else:\n                     expressions.append(expr)\n+            result = []\n+            seen = set()\n+            for expr in expressions:\n+                sql, params = self.compile(expr)\n+                params_hash = make_hashable(params)\n+                if (sql, params_hash) not in seen:\n+                    result.append((sql, params))\n+                    seen.add((sql, params_hash))\n+            return result\n         for expr, _, _ in select:\n             cols = expr.get_group_by_cols()\n             for col in cols:\n", "normalized_occurrence": 1}
