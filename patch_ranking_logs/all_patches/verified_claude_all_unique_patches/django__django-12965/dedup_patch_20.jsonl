{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12965", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 7c860dc..83b3eca 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -1423,8 +1423,11 @@ class SQLDeleteCompiler(SQLCompiler):\n         Create the SQL for this query. Return the SQL string and list of\n         parameters.\n         \"\"\"\n-        if self.single_alias:\n+        if self.single_alias and not (self.query.where or self.query.having):\n+            # If we're only deleting from one table and there are no where or having\n+            # clauses, we can skip the subquery and just do a simple DELETE.\n             return self._as_sql(self.query)\n+        # For other cases (multiple tables, where clauses, etc.), use the subquery approach\n         innerq = self.query.clone()\n         innerq.__class__ = Query\n         innerq.clear_select_clause()\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 8178df0..046e531 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -798,7 +798,7 @@ class SQLDeleteCompiler(SQLCompiler):\n             result.append('WHERE %s' % where)\n         return (' '.join(result), tuple(params))\n     def as_sql(self):\n-        if self.single_alias:\n+        if self.single_alias and (not (self.query.where or self.query.having)):\n             return self._as_sql(self.query)\n         innerq = self.query.clone()\n         innerq.__class__ = Query\n", "normalized_occurrence": 1}
