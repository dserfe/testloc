{"model_name_or_path": "agentless", "instance_id": "django__django-15525", "model_patch": "diff --git a/django/core/serializers/base.py b/django/core/serializers/base.py\nindex e82a744..e7a55a9 100644\n--- a/django/core/serializers/base.py\n+++ b/django/core/serializers/base.py\n@@ -343,7 +343,7 @@ def build_instance(Model, data, db):\n             )\n         except Model.DoesNotExist:\n             pass\n-    return Model(**data)\n+    return Model(**data, _state=Model._meta.apps.registry.get_model(Model._meta.label)._default_manager.db_manager(db))\n \n \n def deserialize_m2m_values(field, field_value, using, handle_forward_references):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/serializers/base.py b/django/core/serializers/base.py\nindex 65e3dcb..c430bdc 100644\n--- a/django/core/serializers/base.py\n+++ b/django/core/serializers/base.py\n@@ -149,7 +149,7 @@ def build_instance(Model, data, db):\n             data[Model._meta.pk.attname] = Model._meta.pk.to_python(default_manager.db_manager(db).get_by_natural_key(*natural_key).pk)\n         except Model.DoesNotExist:\n             pass\n-    return Model(**data)\n+    return Model(**data, _state=Model._meta.apps.registry.get_model(Model._meta.label)._default_manager.db_manager(db))\n def deserialize_m2m_values(field, field_value, using, handle_forward_references):\n     model = field.remote_field.model\n     if hasattr(model._default_manager, 'get_by_natural_key'):\n", "normalized_occurrence": 1}
