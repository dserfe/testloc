{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-16106", "model_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 59074b8..7ded03c 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -1012,8 +1012,13 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n         mi.appendChild(self.dom.createTextNode(self.mathml_tag(e)))\n         mrow.appendChild(mi)\n         brac = self.dom.createElement('mfenced')\n-        for arg in e.args:\n-            brac.appendChild(self._print(arg))\n+        if isinstance(e, sympy.Indexed):\n+            brac.appendChild(self._print(e.base))\n+            for index in e.indices:\n+                brac.appendChild(self._print(index))\n+        else:\n+            for arg in e.args:\n+                brac.appendChild(self._print(arg))\n         mrow.appendChild(brac)\n         return mrow\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 6d7dfb1..2b5d089 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -752,8 +752,13 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n         mi.appendChild(self.dom.createTextNode(self.mathml_tag(e)))\n         mrow.appendChild(mi)\n         brac = self.dom.createElement('mfenced')\n-        for arg in e.args:\n-            brac.appendChild(self._print(arg))\n+        if isinstance(e, sympy.Indexed):\n+            brac.appendChild(self._print(e.base))\n+            for index in e.indices:\n+                brac.appendChild(self._print(index))\n+        else:\n+            for arg in e.args:\n+                brac.appendChild(self._print(arg))\n         mrow.appendChild(brac)\n         return mrow\n     def _print_Tuple(self, e):\n", "normalized_occurrence": 1}
