{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12858", "model_patch": "diff --git a/django/core/checks/model_checks.py b/django/core/checks/model_checks.py\nindex 8f934b7..865a7bb 100644\n--- a/django/core/checks/model_checks.py\n+++ b/django/core/checks/model_checks.py\n@@ -9,6 +9,18 @@ from django.core.checks import Error, Tags, Warning, register\n \n \n @register(Tags.models)\n+def _is_valid_ordering_reference(field_name):\n+    \"\"\"\n+    Check if a field reference in ordering is valid, including lookup expressions.\n+    \"\"\"\n+    # Allow regular field references\n+    if not any(sep in field_name.lstrip('-+') for sep in '__.'): \n+        return True\n+    \n+    # Handle lookups and transforms\n+    parts = field_name.lstrip('-+').split('__')\n+    return parts[-1] in ('isnull', 'exact', 'lt', 'lte', 'gt', 'gte') or not parts[-1].startswith('_')\n+\n def check_all_models(app_configs=None, **kwargs):\n     db_table_models = defaultdict(list)\n     indexes = defaultdict(list)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/checks/model_checks.py b/django/core/checks/model_checks.py\nindex 50dfeb8..9800d04 100644\n--- a/django/core/checks/model_checks.py\n+++ b/django/core/checks/model_checks.py\n@@ -6,6 +6,11 @@ from django.apps import apps\n from django.conf import settings\n from django.core.checks import Error, Tags, Warning, register\n @register(Tags.models)\n+def _is_valid_ordering_reference(field_name):\n+    if not any((sep in field_name.lstrip('-+') for sep in '__.')):\n+        return True\n+    parts = field_name.lstrip('-+').split('__')\n+    return parts[-1] in ('isnull', 'exact', 'lt', 'lte', 'gt', 'gte') or not parts[-1].startswith('_')\n def check_all_models(app_configs=None, **kwargs):\n     db_table_models = defaultdict(list)\n     indexes = defaultdict(list)\n", "normalized_occurrence": 1}
