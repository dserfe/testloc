{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13647", "model_patch": "diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py\nindex fb4452b..b982a3a 100644\n--- a/sympy/matrices/common.py\n+++ b/sympy/matrices/common.py\n@@ -86,10 +86,9 @@ class MatrixShaping(MatrixRequired):\n                 return self[i, j]\n             elif pos <= j < pos + other.cols:\n                 return other[i, j - pos]\n-            return self[i, j - pos - other.cols]\n+            return self[i, j - other.cols]\n \n-        return self._new(self.rows, self.cols + other.cols,\n-                         lambda i, j: entry(i, j))\n+        return self._new(self.rows, self.cols + other.cols, entry)\n \n     def _eval_col_join(self, other):\n         rows = self.rows\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py\nindex 384852e..d2100f8 100644\n--- a/sympy/matrices/common.py\n+++ b/sympy/matrices/common.py\n@@ -47,8 +47,8 @@ class MatrixShaping(MatrixRequired):\n                 return self[i, j]\n             elif pos <= j < pos + other.cols:\n                 return other[i, j - pos]\n-            return self[i, j - pos - other.cols]\n-        return self._new(self.rows, self.cols + other.cols, lambda i, j: entry(i, j))\n+            return self[i, j - other.cols]\n+        return self._new(self.rows, self.cols + other.cols, entry)\n     def _eval_col_join(self, other):\n         rows = self.rows\n         def entry(i, j):\n", "normalized_occurrence": 1}
