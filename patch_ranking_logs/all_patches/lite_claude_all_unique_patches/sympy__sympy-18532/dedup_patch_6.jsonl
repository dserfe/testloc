{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-18532", "model_patch": "diff --git a/sympy/core/basic.py b/sympy/core/basic.py\nindex 97eb81a..3cdbede 100644\n--- a/sympy/core/basic.py\n+++ b/sympy/core/basic.py\n@@ -504,7 +504,12 @@ class Basic(metaclass=ManagedProperties):\n             types = tuple(\n                 [t if isinstance(t, type) else type(t) for t in types])\n         else:\n-            types = (Atom,)\n+            # Return objects that have no args instead of subclasses of Atom\n+            result = set()\n+            for expr in preorder_traversal(self):\n+                if not expr.args:\n+                    result.add(expr)\n+            return result\n         result = set()\n         for expr in preorder_traversal(self):\n             if isinstance(expr, types):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/basic.py b/sympy/core/basic.py\nindex eec7295..ef85579 100644\n--- a/sympy/core/basic.py\n+++ b/sympy/core/basic.py\n@@ -187,7 +187,11 @@ class Basic(metaclass=ManagedProperties):\n         if types:\n             types = tuple([t if isinstance(t, type) else type(t) for t in types])\n         else:\n-            types = (Atom,)\n+            result = set()\n+            for expr in preorder_traversal(self):\n+                if not expr.args:\n+                    result.add(expr)\n+            return result\n         result = set()\n         for expr in preorder_traversal(self):\n             if isinstance(expr, types):\n", "normalized_occurrence": 9}
