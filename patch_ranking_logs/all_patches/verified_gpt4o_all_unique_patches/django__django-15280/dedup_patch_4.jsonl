{"model_name_or_path": "agentless", "instance_id": "django__django-15280", "model_patch": "diff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py\nindex 2a14012..2ebc13d 100644\n--- a/django/db/models/fields/related_descriptors.py\n+++ b/django/db/models/fields/related_descriptors.py\n@@ -414,6 +414,9 @@ class ReverseOneToOneDescriptor:\n                     # Set the forward accessor cache on the related object to\n                     # the current instance to avoid an extra SQL query if it's\n                     # accessed later on.\n+                    # Ensure deferred fields are correctly set in the cache\n+                    if hasattr(instance, '_deferred') and instance._deferred:\n+                        rel_obj = instance._meta.model._base_manager.only(*instance.get_deferred_fields()).get(pk=rel_obj.pk)\n                     self.related.field.set_cached_value(rel_obj, instance)\n             self.related.set_cached_value(instance, rel_obj)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py\nindex bb07c3d..aee2f98 100644\n--- a/django/db/models/fields/related_descriptors.py\n+++ b/django/db/models/fields/related_descriptors.py\n@@ -151,6 +151,8 @@ class ReverseOneToOneDescriptor:\n                 except self.related.related_model.DoesNotExist:\n                     rel_obj = None\n                 else:\n+                    if hasattr(instance, '_deferred') and instance._deferred:\n+                        rel_obj = instance._meta.model._base_manager.only(*instance.get_deferred_fields()).get(pk=rel_obj.pk)\n                     self.related.field.set_cached_value(rel_obj, instance)\n             self.related.set_cached_value(instance, rel_obj)\n         if rel_obj is None:\n", "normalized_occurrence": 1}
