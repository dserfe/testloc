{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25960", "model_patch": "diff --git a/lib/matplotlib/gridspec.py b/lib/matplotlib/gridspec.py\nindex 169731e..1b07449 100644\n--- a/lib/matplotlib/gridspec.py\n+++ b/lib/matplotlib/gridspec.py\n@@ -367,6 +367,10 @@ class GridSpec(GridSpecBase):\n             If not given, all rows will have the same height.\n \n         \"\"\"\n+        super().__init__(nrows, ncols,\n+                         width_ratios=width_ratios,\n+                         height_ratios=height_ratios)\n+        \n         self.left = left\n         self.bottom = bottom\n         self.right = right\n@@ -375,9 +379,7 @@ class GridSpec(GridSpecBase):\n         self.hspace = hspace\n         self.figure = figure\n \n-        super().__init__(nrows, ncols,\n-                         width_ratios=width_ratios,\n-                         height_ratios=height_ratios)\n+        self.update(left=left, bottom=bottom, right=right, top=top, wspace=wspace, hspace=hspace)\n \n     _AllowedKeys = [\"left\", \"bottom\", \"right\", \"top\", \"wspace\", \"hspace\"]\n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/gridspec.py b/lib/matplotlib/gridspec.py\nindex 6f98ede..2525db3 100644\n--- a/lib/matplotlib/gridspec.py\n+++ b/lib/matplotlib/gridspec.py\n@@ -148,6 +148,7 @@ class GridSpecBase:\n             return axarr\n class GridSpec(GridSpecBase):\n     def __init__(self, nrows, ncols, figure=None, left=None, bottom=None, right=None, top=None, wspace=None, hspace=None, width_ratios=None, height_ratios=None):\n+        super().__init__(nrows, ncols, width_ratios=width_ratios, height_ratios=height_ratios)\n         self.left = left\n         self.bottom = bottom\n         self.right = right\n@@ -155,7 +156,7 @@ class GridSpec(GridSpecBase):\n         self.wspace = wspace\n         self.hspace = hspace\n         self.figure = figure\n-        super().__init__(nrows, ncols, width_ratios=width_ratios, height_ratios=height_ratios)\n+        self.update(left=left, bottom=bottom, right=right, top=top, wspace=wspace, hspace=hspace)\n     _AllowedKeys = ['left', 'bottom', 'right', 'top', 'wspace', 'hspace']\n     def update(self, **kwargs):\n         for k, v in kwargs.items():\n", "normalized_occurrence": 1}
