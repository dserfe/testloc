{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13033", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex f5fd96c..4c27d0e 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1909,12 +1909,27 @@ class Query(BaseExpression):\n                     continue\n                 if item == '?':\n                     continue\n+                \n+                # Handle direction prefix\n+                descending = False\n                 if item.startswith('-'):\n+                    descending = True\n                     item = item[1:]\n+                    \n                 if item in self.annotations:\n                     continue\n                 if self.extra and item in self.extra:\n                     continue\n+                \n+                # Handle _id suffix in field paths for foreign keys\n+                parts = item.split(LOOKUP_SEP)\n+                if len(parts) > 1 and parts[-1].endswith('_id'):\n+                    base = parts[-1][:-3]  # Remove _id suffix\n+                    parts[-1] = base\n+                    item = LOOKUP_SEP.join(parts)\n+                    if descending:\n+                        item = '-' + item\n+                \n                 # names_to_path() validates the lookup. A descriptive\n                 # FieldError will be raise if it's not.\n                 self.names_to_path(item.split(LOOKUP_SEP), self.model._meta)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 5d74201..8afaf02 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1015,12 +1015,21 @@ class Query(BaseExpression):\n                     continue\n                 if item == '?':\n                     continue\n+                descending = False\n                 if item.startswith('-'):\n+                    descending = True\n                     item = item[1:]\n                 if item in self.annotations:\n                     continue\n                 if self.extra and item in self.extra:\n                     continue\n+                parts = item.split(LOOKUP_SEP)\n+                if len(parts) > 1 and parts[-1].endswith('_id'):\n+                    base = parts[-1][:-3]\n+                    parts[-1] = base\n+                    item = LOOKUP_SEP.join(parts)\n+                    if descending:\n+                        item = '-' + item\n                 self.names_to_path(item.split(LOOKUP_SEP), self.model._meta)\n             elif not hasattr(item, 'resolve_expression'):\n                 errors.append(item)\n", "normalized_occurrence": 1}
