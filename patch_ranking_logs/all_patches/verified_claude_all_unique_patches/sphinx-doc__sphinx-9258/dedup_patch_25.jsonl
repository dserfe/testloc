{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-9258", "model_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex b8c505d..b726bf3 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -178,6 +178,15 @@ def _parse_annotation(annotation: str, env: BuildEnvironment = None) -> List[Nod\n                 result[i] = type_to_xref(str(node), env)\n         return result\n     except SyntaxError:\n+        # Handle simple union types with | operator in string form\n+        if '|' in annotation:\n+            parts = [part.strip() for part in annotation.split('|')]\n+            result = []\n+            for i, part in enumerate(parts):\n+                if i > 0:\n+                    result.extend([nodes.Text(' '), addnodes.desc_sig_punctuation('', '|'), nodes.Text(' ')])\n+                result.append(type_to_xref(part, env))\n+            return result\n         return [type_to_xref(annotation, env)]\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex c76b6ac..568ba68 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -121,6 +121,14 @@ def _parse_annotation(annotation: str, env: BuildEnvironment=None) -> List[Node]\n                 result[i] = type_to_xref(str(node), env)\n         return result\n     except SyntaxError:\n+        if '|' in annotation:\n+            parts = [part.strip() for part in annotation.split('|')]\n+            result = []\n+            for i, part in enumerate(parts):\n+                if i > 0:\n+                    result.extend([nodes.Text(' '), addnodes.desc_sig_punctuation('', '|'), nodes.Text(' ')])\n+                result.append(type_to_xref(part, env))\n+            return result\n         return [type_to_xref(annotation, env)]\n def _parse_arglist(arglist: str, env: BuildEnvironment=None) -> addnodes.desc_parameterlist:\n     params = addnodes.desc_parameterlist(arglist)\n", "normalized_occurrence": 2}
