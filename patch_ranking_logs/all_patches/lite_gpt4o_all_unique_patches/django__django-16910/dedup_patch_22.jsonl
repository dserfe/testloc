{"model_name_or_path": "agentless", "instance_id": "django__django-16910", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 364ef3b..b1c4338 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -1278,12 +1278,22 @@ class SQLCompiler:\n                 }\n                 related_klass_infos.append(klass_info)\n                 select_fields = []\n-                columns = self.get_default_columns(\n-                    related_select_mask,\n-                    start_alias=alias,\n-                    opts=model._meta,\n-                    from_parent=opts.model,\n-                )\n+                if related_select_mask:\n+                    columns = [\n+                        c for c in self.get_default_columns(\n+                            related_select_mask,\n+                            start_alias=alias,\n+                            opts=model._meta,\n+                            from_parent=opts.model,\n+                        ) if c[1] in related_select_mask.keys()\n+                    ]\n+                else:\n+                    columns = self.get_default_columns(\n+                        related_select_mask,\n+                        start_alias=alias,\n+                        opts=model._meta,\n+                        from_parent=opts.model,\n+                    )\n                 for col in columns:\n                     select_fields.append(len(select))\n                     select.append((col, None))\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 802130c..28dc5f7 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -637,7 +637,10 @@ class SQLCompiler:\n                 klass_info = {'model': model, 'field': related_field, 'reverse': True, 'local_setter': related_field.remote_field.set_cached_value, 'remote_setter': related_field.set_cached_value, 'from_parent': from_parent}\n                 related_klass_infos.append(klass_info)\n                 select_fields = []\n-                columns = self.get_default_columns(related_select_mask, start_alias=alias, opts=model._meta, from_parent=opts.model)\n+                if related_select_mask:\n+                    columns = [c for c in self.get_default_columns(related_select_mask, start_alias=alias, opts=model._meta, from_parent=opts.model) if c[1] in related_select_mask.keys()]\n+                else:\n+                    columns = self.get_default_columns(related_select_mask, start_alias=alias, opts=model._meta, from_parent=opts.model)\n                 for col in columns:\n                     select_fields.append(len(select))\n                     select.append((col, None))\n", "normalized_occurrence": 1}
