{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-11445", "model_patch": "diff --git a/sphinx/parsers.py b/sphinx/parsers.py\nindex 1ab7d44..73410ce 100644\n--- a/sphinx/parsers.py\n+++ b/sphinx/parsers.py\n@@ -82,7 +82,10 @@ class RSTParser(docutils.parsers.rst.Parser, Parser):\n \n     def decorate(self, content: StringList) -> None:\n         \"\"\"Preprocess reST content before parsing.\"\"\"\n-        prepend_prolog(content, self.config.rst_prolog)\n+        if self.config.rst_prolog:\n+            prolog = StringList(self.config.rst_prolog.split('\\n'), content.parent)\n+            content.insert(0, '', '<generated>')\n+            content.insert(1, prolog, '<generated>')\n         append_epilog(content, self.config.rst_epilog)\n \n \n@@ -93,4 +96,4 @@ def setup(app: Sphinx) -> dict[str, Any]:\n         'version': 'builtin',\n         'parallel_read_safe': True,\n         'parallel_write_safe': True,\n-    }\n+    }\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/parsers.py b/sphinx/parsers.py\nindex a99dedf..42808b8 100644\n--- a/sphinx/parsers.py\n+++ b/sphinx/parsers.py\n@@ -36,7 +36,10 @@ class RSTParser(docutils.parsers.rst.Parser, Parser):\n         self.statemachine.run(inputlines, document, inliner=self.inliner)\n         self.finish_parse()\n     def decorate(self, content: StringList) -> None:\n-        prepend_prolog(content, self.config.rst_prolog)\n+        if self.config.rst_prolog:\n+            prolog = StringList(self.config.rst_prolog.split('\\n'), content.parent)\n+            content.insert(0, '', '<generated>')\n+            content.insert(1, prolog, '<generated>')\n         append_epilog(content, self.config.rst_epilog)\n def setup(app: Sphinx) -> dict[str, Any]:\n     app.add_source_parser(RSTParser)\n", "normalized_occurrence": 1}
