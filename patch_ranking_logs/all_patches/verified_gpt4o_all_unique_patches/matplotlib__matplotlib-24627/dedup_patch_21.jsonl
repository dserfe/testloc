{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-24627", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex eec4e31..797b488 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1405,10 +1405,11 @@ class _AxesBase(martist.Artist):\n         \"\"\"Clear the Axes.\"\"\"\n         # Act as an alias, or as the superclass implementation depending on the\n         # subclass implementation.\n-        if self._subclass_uses_cla:\n-            self.__clear()\n-        else:\n-            self.clear()\n+        self.__clear()\n+\n+        # Unset the .axes attribute of deparented artists\n+        for artist in self.get_children():\n+            artist.axes = None\n \n     class ArtistList(MutableSequence):\n         \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex ec4e745..978eec6 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -601,10 +601,9 @@ class _AxesBase(martist.Artist):\n         else:\n             self.__clear()\n     def cla(self):\n-        if self._subclass_uses_cla:\n-            self.__clear()\n-        else:\n-            self.clear()\n+        self.__clear()\n+        for artist in self.get_children():\n+            artist.axes = None\n     class ArtistList(MutableSequence):\n         def __init__(self, axes, prop_name, add_name, valid_types=None, invalid_types=None):\n             self._axes = axes\n", "normalized_occurrence": 1}
