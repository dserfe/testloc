{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-26208", "model_patch": "diff --git a/lib/matplotlib/stackplot.py b/lib/matplotlib/stackplot.py\nindex 3c3cee4..1d90f96 100644\n--- a/lib/matplotlib/stackplot.py\n+++ b/lib/matplotlib/stackplot.py\n@@ -67,9 +67,12 @@ def stackplot(axes, x, *args,\n         A list of `.PolyCollection` instances, one for each element in the\n         stacked area plot.\n     \"\"\"\n-\n     y = np.row_stack(args)\n \n+    # Save original data limits\n+    original_xlim = axes.get_xlim()\n+    original_ylim = axes.get_ylim()\n+\n     labels = iter(labels)\n     if colors is not None:\n         colors = itertools.cycle(colors)\n@@ -124,4 +127,8 @@ def stackplot(axes, x, *args,\n                                    facecolor=next(colors),\n                                    label=next(labels, None),\n                                    **kwargs))\n-    return r\n+    # Restore original data limits\n+    axes.set_xlim(original_xlim)\n+    axes.set_ylim(original_ylim)\n+\n+    return r\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/stackplot.py b/lib/matplotlib/stackplot.py\nindex dc1c7c8..40b181d 100644\n--- a/lib/matplotlib/stackplot.py\n+++ b/lib/matplotlib/stackplot.py\n@@ -4,6 +4,8 @@ from matplotlib import _api\n __all__ = ['stackplot']\n def stackplot(axes, x, *args, labels=(), colors=None, baseline='zero', **kwargs):\n     y = np.row_stack(args)\n+    original_xlim = axes.get_xlim()\n+    original_ylim = axes.get_ylim()\n     labels = iter(labels)\n     if colors is not None:\n         colors = itertools.cycle(colors)\n@@ -40,4 +42,6 @@ def stackplot(axes, x, *args, labels=(), colors=None, baseline='zero', **kwargs)\n     r = [coll]\n     for i in range(len(y) - 1):\n         r.append(axes.fill_between(x, stack[i, :], stack[i + 1, :], facecolor=next(colors), label=next(labels, None), **kwargs))\n+    axes.set_xlim(original_xlim)\n+    axes.set_ylim(original_ylim)\n     return r\n\\ No newline at end of file\n", "normalized_occurrence": 1}
