{"model_name_or_path": "agentless", "instance_id": "django__django-11797", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 946e695..7ff7856 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -108,9 +108,10 @@ class SQLCompiler:\n         # set to group by. So, we need to add cols in select, order_by, and\n         # having into the select in any case.\n         for expr, _, _ in select:\n-            cols = expr.get_group_by_cols()\n-            for col in cols:\n-                expressions.append(col)\n+            if hasattr(expr, 'source_expressions'):\n+                cols = expr.get_group_by_cols()\n+                for col in cols:\n+                    expressions.append(col)\n         for expr, (sql, params, is_ref) in order_by:\n             # Skip References to the select clause, as all expressions in the\n             # select clause are already part of the group by.\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex a6b66a9..9a24d31 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -46,9 +46,10 @@ class SQLCompiler:\n                 else:\n                     expressions.append(expr)\n         for expr, _, _ in select:\n-            cols = expr.get_group_by_cols()\n-            for col in cols:\n-                expressions.append(col)\n+            if hasattr(expr, 'source_expressions'):\n+                cols = expr.get_group_by_cols()\n+                for col in cols:\n+                    expressions.append(col)\n         for expr, (sql, params, is_ref) in order_by:\n             if not expr.contains_aggregate and (not is_ref):\n                 expressions.extend(expr.get_source_expressions())\n", "normalized_occurrence": 1}
