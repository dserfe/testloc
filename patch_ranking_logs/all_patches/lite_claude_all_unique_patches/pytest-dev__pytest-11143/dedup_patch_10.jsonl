{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-11143", "model_patch": "diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py\nindex 13debe8..d2b08cd 100644\n--- a/src/_pytest/assertion/rewrite.py\n+++ b/src/_pytest/assertion/rewrite.py\n@@ -743,6 +743,8 @@ class AssertionRewriter(ast.NodeVisitor):\n \n     @staticmethod\n     def is_rewrite_disabled(docstring: str) -> bool:\n+        if not isinstance(docstring, str):\n+            return False\n         return \"PYTEST_DONT_REWRITE\" in docstring\n \n     def variable(self) -> str:\n", "occurrence": 2, "normalized_patch": "diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py\nindex ee7c041..a1a1408 100644\n--- a/src/_pytest/assertion/rewrite.py\n+++ b/src/_pytest/assertion/rewrite.py\n@@ -399,6 +399,8 @@ class AssertionRewriter(ast.NodeVisitor):\n                     nodes.append(field)\n     @staticmethod\n     def is_rewrite_disabled(docstring: str) -> bool:\n+        if not isinstance(docstring, str):\n+            return False\n         return 'PYTEST_DONT_REWRITE' in docstring\n     def variable(self) -> str:\n         name = '@py_assert' + str(next(self.variable_counter))\n", "normalized_occurrence": 2}
