{"model_name_or_path": "agentless", "instance_id": "django__django-12273", "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 07c5013..9cbcc9d 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -841,8 +841,11 @@ class Model(metaclass=ModelBase):\n \n         pk_val = self._get_pk_val(meta)\n         if pk_val is None:\n-            pk_val = meta.pk.get_pk_value_on_save(self)\n-            setattr(self, meta.pk.attname, pk_val)\n+            if isinstance(meta.pk, AutoField):\n+                self._state.adding = True\n+            else:\n+                pk_val = meta.pk.get_pk_value_on_save(self)\n+                setattr(self, meta.pk.attname, pk_val)\n         pk_set = pk_val is not None\n         if not pk_set and (force_update or update_fields):\n             raise ValueError(\"Cannot force an update in save() with no primary key.\")\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 9dcf0cd..99b3f8d 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -451,8 +451,11 @@ class Model(metaclass=ModelBase):\n             non_pks = [f for f in non_pks if f.name in update_fields or f.attname in update_fields]\n         pk_val = self._get_pk_val(meta)\n         if pk_val is None:\n-            pk_val = meta.pk.get_pk_value_on_save(self)\n-            setattr(self, meta.pk.attname, pk_val)\n+            if isinstance(meta.pk, AutoField):\n+                self._state.adding = True\n+            else:\n+                pk_val = meta.pk.get_pk_value_on_save(self)\n+                setattr(self, meta.pk.attname, pk_val)\n         pk_set = pk_val is not None\n         if not pk_set and (force_update or update_fields):\n             raise ValueError('Cannot force an update in save() with no primary key.')\n", "normalized_occurrence": 1}
