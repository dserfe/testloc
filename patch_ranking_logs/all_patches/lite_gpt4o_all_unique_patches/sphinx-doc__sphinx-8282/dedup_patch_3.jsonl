{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8282", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex cd0e9c6..219b920 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1248,7 +1248,7 @@ class FunctionDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # typ\n             sig = super().format_signature(**kwargs)\n             sigs.append(sig)\n \n-        if inspect.is_singledispatch_function(self.object):\n+        if self.env.config.autodoc_typehints != 'none' and inspect.is_singledispatch_function(self.object):\n             # append signature of singledispatch'ed functions\n             for typ, func in self.object.registry.items():\n                 if typ is object:\n@@ -1260,7 +1260,7 @@ class FunctionDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # typ\n                     documenter.object = func\n                     documenter.objpath = [None]\n                     sigs.append(documenter.format_signature())\n-        if overloaded:\n+        if overloaded and self.env.config.autodoc_typehints != 'none':\n             __globals__ = safe_getattr(self.object, '__globals__', {})\n             for overload in self.analyzer.overloads.get('.'.join(self.objpath)):\n                 overload = evaluate_signature(overload, __globals__,\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex be7144a..2af6623 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -687,7 +687,7 @@ class FunctionDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):\n             overloaded = False\n             sig = super().format_signature(**kwargs)\n             sigs.append(sig)\n-        if inspect.is_singledispatch_function(self.object):\n+        if self.env.config.autodoc_typehints != 'none' and inspect.is_singledispatch_function(self.object):\n             for typ, func in self.object.registry.items():\n                 if typ is object:\n                     pass\n@@ -697,7 +697,7 @@ class FunctionDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):\n                     documenter.object = func\n                     documenter.objpath = [None]\n                     sigs.append(documenter.format_signature())\n-        if overloaded:\n+        if overloaded and self.env.config.autodoc_typehints != 'none':\n             __globals__ = safe_getattr(self.object, '__globals__', {})\n             for overload in self.analyzer.overloads.get('.'.join(self.objpath)):\n                 overload = evaluate_signature(overload, __globals__, self.env.config.autodoc_type_aliases)\n", "normalized_occurrence": 1}
