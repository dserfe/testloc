{"model_name_or_path": "agentless", "instance_id": "django__django-12184", "model_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 1a3b6f6..7df7ffd 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -352,6 +352,11 @@ class URLPattern:\n         match = self.pattern.match(path)\n         if match:\n             new_path, args, kwargs = match\n+            # Ensure args and kwargs are correctly set.\n+            if args is None:\n+                args = ()\n+            if kwargs is None:\n+                kwargs = {}\n             # Pass any extra_kwargs as **kwargs.\n             kwargs.update(self.default_args)\n             return ResolverMatch(self.callback, args, kwargs, self.pattern.name, route=str(self.pattern))\n", "occurrence": 1, "normalized_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex a06ca7c..598ddfb 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -220,6 +220,10 @@ class URLPattern:\n         match = self.pattern.match(path)\n         if match:\n             new_path, args, kwargs = match\n+            if args is None:\n+                args = ()\n+            if kwargs is None:\n+                kwargs = {}\n             kwargs.update(self.default_args)\n             return ResolverMatch(self.callback, args, kwargs, self.pattern.name, route=str(self.pattern))\n     @cached_property\n", "normalized_occurrence": 1}
