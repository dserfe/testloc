{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11133", "model_patch": "diff --git a/django/http/response.py b/django/http/response.py\nindex 5126111..139cc94 100644\n--- a/django/http/response.py\n+++ b/django/http/response.py\n@@ -304,7 +304,9 @@ class HttpResponse(HttpResponseBase):\n \n     @property\n     def content(self):\n-        return b''.join(self._container)\n+        # Handle memoryview objects by converting them to bytes before joining\n+        return b''.join(bytes(chunk) if isinstance(chunk, memoryview) else chunk\n+                       for chunk in self._container)\n \n     @content.setter\n     def content(self, value):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/http/response.py b/django/http/response.py\nindex 1fade57..9ca72bc 100644\n--- a/django/http/response.py\n+++ b/django/http/response.py\n@@ -179,7 +179,7 @@ class HttpResponse(HttpResponseBase):\n     __bytes__ = serialize\n     @property\n     def content(self):\n-        return b''.join(self._container)\n+        return b''.join((bytes(chunk) if isinstance(chunk, memoryview) else chunk for chunk in self._container))\n     @content.setter\n     def content(self, value):\n         if hasattr(value, '__iter__') and (not isinstance(value, (bytes, str))):\n", "normalized_occurrence": 1}
