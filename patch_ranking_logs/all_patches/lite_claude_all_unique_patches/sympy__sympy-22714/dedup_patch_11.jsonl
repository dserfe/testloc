{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-22714", "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex b7f7a47..c6e668e 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -152,10 +152,10 @@ class Point(GeometryEntity):\n                         'warn' or 'ignore'.'''))\n         if any(coords[dim:]):\n             raise ValueError('Nonzero coordinates cannot be removed.')\n-        if any(a.is_number and im(a) for a in coords):\n-            raise ValueError('Imaginary coordinates are not permitted.')\n         if not all(isinstance(a, Expr) for a in coords):\n             raise TypeError('Coordinates must be valid SymPy expressions.')\n+        if evaluate and any(a.is_number and im(a) for a in coords):\n+            raise ValueError('Imaginary coordinates are not permitted.')\n \n         # pad with zeros appropriately\n         coords = coords[:dim] + (S.Zero,)*(dim - len(coords))\n", "occurrence": 2, "normalized_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex 4d7ea73..bbeb4b3 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -45,10 +45,10 @@ class Point(GeometryEntity):\n                 raise ValueError(filldedent(\"\\n                        on_morph value should be 'error',\\n                        'warn' or 'ignore'.\"))\n         if any(coords[dim:]):\n             raise ValueError('Nonzero coordinates cannot be removed.')\n-        if any((a.is_number and im(a) for a in coords)):\n-            raise ValueError('Imaginary coordinates are not permitted.')\n         if not all((isinstance(a, Expr) for a in coords)):\n             raise TypeError('Coordinates must be valid SymPy expressions.')\n+        if evaluate and any((a.is_number and im(a) for a in coords)):\n+            raise ValueError('Imaginary coordinates are not permitted.')\n         coords = coords[:dim] + (S.Zero,) * (dim - len(coords))\n         if evaluate:\n             coords = coords.xreplace({f: simplify(nsimplify(f, rational=True)) for f in coords.atoms(Float)})\n", "normalized_occurrence": 2}
