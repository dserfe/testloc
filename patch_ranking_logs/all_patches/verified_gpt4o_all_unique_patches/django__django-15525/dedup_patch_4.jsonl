{"model_name_or_path": "agentless", "instance_id": "django__django-15525", "model_patch": "diff --git a/django/core/serializers/base.py b/django/core/serializers/base.py\nindex e82a744..2f4514d 100644\n--- a/django/core/serializers/base.py\n+++ b/django/core/serializers/base.py\n@@ -312,7 +312,7 @@ class DeserializedObject:\n             elif isinstance(field.remote_field, models.ManyToOneRel):\n                 try:\n                     value = deserialize_fk_value(\n-                        field, field_value, using, handle_forward_references=False\n+                        field, field_value, db, handle_forward_references=False\n                     )\n                 except Exception as e:\n                     raise DeserializationError.WithData(\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/serializers/base.py b/django/core/serializers/base.py\nindex 65e3dcb..13177c1 100644\n--- a/django/core/serializers/base.py\n+++ b/django/core/serializers/base.py\n@@ -135,7 +135,7 @@ class DeserializedObject:\n                 self.m2m_data[field.name] = values\n             elif isinstance(field.remote_field, models.ManyToOneRel):\n                 try:\n-                    value = deserialize_fk_value(field, field_value, using, handle_forward_references=False)\n+                    value = deserialize_fk_value(field, field_value, db, handle_forward_references=False)\n                 except Exception as e:\n                     raise DeserializationError.WithData(e, label, self.object.pk, field_value)\n                 setattr(self.object, field.attname, value)\n", "normalized_occurrence": 1}
