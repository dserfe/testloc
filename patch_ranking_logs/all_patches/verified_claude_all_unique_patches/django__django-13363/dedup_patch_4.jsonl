{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13363", "model_patch": "diff --git a/django/db/models/functions/datetime.py b/django/db/models/functions/datetime.py\nindex 68c26c6..e2eb423 100644\n--- a/django/db/models/functions/datetime.py\n+++ b/django/db/models/functions/datetime.py\n@@ -292,7 +292,7 @@ class TruncDate(TruncBase):\n     def as_sql(self, compiler, connection):\n         # Cast to date rather than truncate to date.\n         lhs, lhs_params = compiler.compile(self.lhs)\n-        tzname = timezone.get_current_timezone_name() if settings.USE_TZ else None\n+        tzname = self._get_timezone_name() if settings.USE_TZ else None\n         sql = connection.ops.datetime_cast_date_sql(lhs, tzname)\n         return sql, lhs_params\n \n@@ -305,7 +305,7 @@ class TruncTime(TruncBase):\n     def as_sql(self, compiler, connection):\n         # Cast to time rather than truncate to time.\n         lhs, lhs_params = compiler.compile(self.lhs)\n-        tzname = timezone.get_current_timezone_name() if settings.USE_TZ else None\n+        tzname = self._get_timezone_name() if settings.USE_TZ else None\n         sql = connection.ops.datetime_cast_time_sql(lhs, tzname)\n         return sql, lhs_params\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/functions/datetime.py b/django/db/models/functions/datetime.py\nindex d4c9c7a..6ce8c36 100644\n--- a/django/db/models/functions/datetime.py\n+++ b/django/db/models/functions/datetime.py\n@@ -172,7 +172,7 @@ class TruncDate(TruncBase):\n     output_field = DateField()\n     def as_sql(self, compiler, connection):\n         lhs, lhs_params = compiler.compile(self.lhs)\n-        tzname = timezone.get_current_timezone_name() if settings.USE_TZ else None\n+        tzname = self._get_timezone_name() if settings.USE_TZ else None\n         sql = connection.ops.datetime_cast_date_sql(lhs, tzname)\n         return (sql, lhs_params)\n class TruncTime(TruncBase):\n@@ -181,7 +181,7 @@ class TruncTime(TruncBase):\n     output_field = TimeField()\n     def as_sql(self, compiler, connection):\n         lhs, lhs_params = compiler.compile(self.lhs)\n-        tzname = timezone.get_current_timezone_name() if settings.USE_TZ else None\n+        tzname = self._get_timezone_name() if settings.USE_TZ else None\n         sql = connection.ops.datetime_cast_time_sql(lhs, tzname)\n         return (sql, lhs_params)\n class TruncHour(TruncBase):\n", "normalized_occurrence": 1}
