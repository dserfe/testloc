{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-3151", "model_patch": "diff --git a/xarray/core/combine.py b/xarray/core/combine.py\nindex fe3f23b..4e76b1c 100644\n--- a/xarray/core/combine.py\n+++ b/xarray/core/combine.py\n@@ -66,9 +66,13 @@ def _infer_concat_order_from_coords(datasets):\n                 raise ValueError(\"Every dimension needs a coordinate for \"\n                                  \"inferring concatenation order\")\n \n-            # If dimension coordinate values are same on every dataset then\n-            # should be leaving this dimension alone (it's just a \"bystander\")\n-            if not all(index.equals(indexes[0]) for index in indexes[1:]):\n+            # If dimension coordinate values are same on every dataset or if\n+            # they are non-monotonic but equal, then this dimension should be\n+            # left alone (it's just a \"bystander\")\n+            if not all(index.equals(indexes[0]) for index in indexes[1:]) and (\n+                not all(index.equals(indexes[0]) for index in indexes) or\n+                all(index.is_monotonic_increasing for index in indexes) or\n+                all(index.is_monotonic_decreasing for index in indexes)):\n \n                 # Infer order datasets should be arranged in along this dim\n                 concat_dims.append(dim)\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/combine.py b/xarray/core/combine.py\nindex b8f5640..588652c 100644\n--- a/xarray/core/combine.py\n+++ b/xarray/core/combine.py\n@@ -27,7 +27,7 @@ def _infer_concat_order_from_coords(datasets):\n             indexes = [ds.indexes.get(dim) for ds in datasets]\n             if any((index is None for index in indexes)):\n                 raise ValueError('Every dimension needs a coordinate for inferring concatenation order')\n-            if not all((index.equals(indexes[0]) for index in indexes[1:])):\n+            if not all((index.equals(indexes[0]) for index in indexes[1:])) and (not all((index.equals(indexes[0]) for index in indexes)) or all((index.is_monotonic_increasing for index in indexes)) or all((index.is_monotonic_decreasing for index in indexes))):\n                 concat_dims.append(dim)\n                 if all((index.is_monotonic_increasing for index in indexes)):\n                     ascending = True\n", "normalized_occurrence": 1}
