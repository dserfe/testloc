{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-14248", "model_patch": "diff --git a/sympy/printing/str.py b/sympy/printing/str.py\nindex 29d16bd..f76f8a3 100644\n--- a/sympy/printing/str.py\n+++ b/sympy/printing/str.py\n@@ -54,17 +54,16 @@ class StrPrinter(Printer):\n \n         PREC = precedence(expr)\n         l = []\n-        for term in terms:\n+        for i, term in enumerate(terms):\n             t = self._print(term)\n-            if t.startswith('-'):\n-                sign = \"-\"\n-                t = t[1:]\n+            if i == 0:\n+                l.append(t)\n             else:\n-                sign = \"+\"\n-            if precedence(term) < PREC:\n-                l.extend([sign, \"(%s)\" % t])\n-            else:\n-                l.extend([sign, t])\n+                if _coeff_isneg(term):\n+                    t = self._print(-term)\n+                    l.append(\" - \" + (f\"({t})\" if precedence(term) < PREC else t))\n+                else:\n+                    l.append(\" + \" + (f\"({t})\" if precedence(term) < PREC else t))\n         sign = l.pop(0)\n         if sign == '+':\n             sign = \"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/str.py b/sympy/printing/str.py\nindex a98e2a9..d2236a9 100644\n--- a/sympy/printing/str.py\n+++ b/sympy/printing/str.py\n@@ -34,17 +34,15 @@ class StrPrinter(Printer):\n             terms = self._as_ordered_terms(expr, order=order)\n         PREC = precedence(expr)\n         l = []\n-        for term in terms:\n+        for i, term in enumerate(terms):\n             t = self._print(term)\n-            if t.startswith('-'):\n-                sign = '-'\n-                t = t[1:]\n+            if i == 0:\n+                l.append(t)\n+            elif _coeff_isneg(term):\n+                t = self._print(-term)\n+                l.append(' - ' + (f'({t})' if precedence(term) < PREC else t))\n             else:\n-                sign = '+'\n-            if precedence(term) < PREC:\n-                l.extend([sign, '(%s)' % t])\n-            else:\n-                l.extend([sign, t])\n+                l.append(' + ' + (f'({t})' if precedence(term) < PREC else t))\n         sign = l.pop(0)\n         if sign == '+':\n             sign = ''\n", "normalized_occurrence": 1}
