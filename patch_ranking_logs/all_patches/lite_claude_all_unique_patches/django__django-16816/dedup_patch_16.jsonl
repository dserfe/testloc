{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16816", "model_patch": "diff --git a/django/contrib/admin/checks.py b/django/contrib/admin/checks.py\nindex e2f5674..9925425 100644\n--- a/django/contrib/admin/checks.py\n+++ b/django/contrib/admin/checks.py\n@@ -895,9 +895,25 @@ class ModelAdminChecks(BaseModelAdminChecks):\n             return []\n         elif hasattr(obj, item):\n             return []\n+        \n+        # First check if it's a direct field\n         try:\n             field = obj.model._meta.get_field(item)\n+            try:\n+                # Validate that the field can be referenced as given\n+                _get_non_gfk_field(obj.model._meta, item)\n+                return []\n+            except (FieldDoesNotExist, FieldIsAForeignKeyColumnName):\n+                return [\n+                    checks.Error(\n+                        \"The value of '%s' refers to '%s', which is not a valid field reference.\"\n+                        % (label, item),\n+                        obj=obj.__class__,\n+                        id=\"admin.E108\",\n+                    )\n+                ]\n         except FieldDoesNotExist:\n+            # If not a field, check if it's a model attribute/method\n             try:\n                 field = getattr(obj.model, item)\n             except AttributeError:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/checks.py b/django/contrib/admin/checks.py\nindex 4734fd9..7558a5c 100644\n--- a/django/contrib/admin/checks.py\n+++ b/django/contrib/admin/checks.py\n@@ -339,6 +339,11 @@ class ModelAdminChecks(BaseModelAdminChecks):\n             return []\n         try:\n             field = obj.model._meta.get_field(item)\n+            try:\n+                _get_non_gfk_field(obj.model._meta, item)\n+                return []\n+            except (FieldDoesNotExist, FieldIsAForeignKeyColumnName):\n+                return [checks.Error(\"The value of '%s' refers to '%s', which is not a valid field reference.\" % (label, item), obj=obj.__class__, id='admin.E108')]\n         except FieldDoesNotExist:\n             try:\n                 field = getattr(obj.model, item)\n", "normalized_occurrence": 1}
