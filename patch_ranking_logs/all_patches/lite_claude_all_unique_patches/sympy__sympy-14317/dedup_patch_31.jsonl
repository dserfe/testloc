{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-14317", "model_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 408ff45..db0381a 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1854,7 +1854,25 @@ class LatexPrinter(Printer):\n \n     def _print_Poly(self, poly):\n         cls = poly.__class__.__name__\n-        expr = self._print(poly.as_expr())\n+        terms = poly.terms()\n+        terms_str = []\n+        for monom, coeff in terms:\n+            if len(monom) == 1:\n+                if coeff == 1:\n+                    if monom[0] == 0:\n+                        terms_str.append(\"1\")\n+                    elif monom[0] == 1:\n+                        terms_str.append(str(poly.gens[0]))\n+                    else:\n+                        terms_str.append(\"%s^{%d}\" % (str(poly.gens[0]), monom[0]))\n+                else:\n+                    if monom[0] == 0:\n+                        terms_str.append(self._print(coeff))\n+                    elif monom[0] == 1:\n+                        terms_str.append(\"%s %s\" % (self._print(coeff), str(poly.gens[0])))\n+                    else:\n+                        terms_str.append(\"%s %s^{%d}\" % (self._print(coeff), str(poly.gens[0]), monom[0]))\n+        expr = \" + \".join(terms_str)\n         gens = list(map(self._print, poly.gens))\n         domain = \"domain=%s\" % self._print(poly.get_domain())\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 5a18831..8748033 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1241,7 +1241,24 @@ class LatexPrinter(Printer):\n         return '%s%s\\\\left[%s\\\\right]' % (inv, domain, symbols)\n     def _print_Poly(self, poly):\n         cls = poly.__class__.__name__\n-        expr = self._print(poly.as_expr())\n+        terms = poly.terms()\n+        terms_str = []\n+        for monom, coeff in terms:\n+            if len(monom) == 1:\n+                if coeff == 1:\n+                    if monom[0] == 0:\n+                        terms_str.append('1')\n+                    elif monom[0] == 1:\n+                        terms_str.append(str(poly.gens[0]))\n+                    else:\n+                        terms_str.append('%s^{%d}' % (str(poly.gens[0]), monom[0]))\n+                elif monom[0] == 0:\n+                    terms_str.append(self._print(coeff))\n+                elif monom[0] == 1:\n+                    terms_str.append('%s %s' % (self._print(coeff), str(poly.gens[0])))\n+                else:\n+                    terms_str.append('%s %s^{%d}' % (self._print(coeff), str(poly.gens[0]), monom[0]))\n+        expr = ' + '.join(terms_str)\n         gens = list(map(self._print, poly.gens))\n         domain = 'domain=%s' % self._print(poly.get_domain())\n         args = ', '.join([expr] + gens + [domain])\n", "normalized_occurrence": 1}
