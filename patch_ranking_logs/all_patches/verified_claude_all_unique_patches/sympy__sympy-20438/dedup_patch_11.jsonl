{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-20438", "model_patch": "diff --git a/sympy/sets/sets.py b/sympy/sets/sets.py\nindex d2cbd5e..1adfa72 100644\n--- a/sympy/sets/sets.py\n+++ b/sympy/sets/sets.py\n@@ -775,6 +775,13 @@ class ProductSet(Set):\n                     yield s\n         return ProductSet(*_flatten(self.sets))\n \n+    def _eval_is_subset(self, other):\n+        if isinstance(other, FiniteSet):\n+            # Check if all elements in the cartesian product are in the FiniteSet\n+            from sympy.utilities.iterables import cartes\n+            products = cartes(*[sorted(s) for s in self.sets])\n+            return all(other.contains(Tuple(*p)) for p in products)\n+        return None\n \n \n     def _contains(self, element):\n", "occurrence": 1, "normalized_patch": "--- a/sympy/sets/sets.py\n+++ b/sympy/sets/sets.py\n+    def _eval_is_subset(self, other):\n+        if isinstance(other, FiniteSet):\n+            from sympy.utilities.iterables import cartes\n+            products = cartes(*[sorted(s) for s in self.sets])\n+            return all((other.contains(Tuple(*p)) for p in products))\n+        return None", "normalized_occurrence": 1}
