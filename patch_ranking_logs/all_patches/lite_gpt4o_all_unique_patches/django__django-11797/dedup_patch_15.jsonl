{"model_name_or_path": "agentless", "instance_id": "django__django-11797", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 946e695..97f6ff8 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -91,6 +91,8 @@ class SQLCompiler:\n         # (group by select fields), or a list of expressions to be added\n         # to the group by.\n         if self.query.group_by is None:\n+            if self.query.annotation_select:\n+                return [self.connection.ops.force_no_ordering()]\n             return []\n         expressions = []\n         if self.query.group_by is not True:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex a6b66a9..783c724 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -37,6 +37,8 @@ class SQLCompiler:\n         return (extra_select, order_by, group_by)\n     def get_group_by(self, select, order_by):\n         if self.query.group_by is None:\n+            if self.query.annotation_select:\n+                return [self.connection.ops.force_no_ordering()]\n             return []\n         expressions = []\n         if self.query.group_by is not True:\n", "normalized_occurrence": 1}
