{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13895", "model_patch": "diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py\nindex a6ca9db..398cdcd 100644\n--- a/sympy/simplify/simplify.py\n+++ b/sympy/simplify/simplify.py\n@@ -566,6 +566,12 @@ def simplify(expr, ratio=1.7, measure=count_ops, rational=False):\n     if not isinstance(expr, Basic):  # XXX: temporary hack\n         return expr\n \n+    # Prevent simplification of negative bases with fractional exponents\n+    if expr.has(Pow):\n+        expr = expr.replace(\n+            lambda p: p.is_Pow and p.base.is_negative and p.exp.is_rational and not p.exp.is_integer,\n+            lambda p: p)\n+    \n     expr = factor_terms(expr, sign=False)\n \n     # hyperexpand automatically only works on hypergeometric terms\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py\nindex 52e38cb..f208f31 100644\n--- a/sympy/simplify/simplify.py\n+++ b/sympy/simplify/simplify.py\n@@ -180,6 +180,8 @@ def simplify(expr, ratio=1.7, measure=count_ops, rational=False):\n         expr = shorter(expr2, expr1, expr)\n     if not isinstance(expr, Basic):\n         return expr\n+    if expr.has(Pow):\n+        expr = expr.replace(lambda p: p.is_Pow and p.base.is_negative and p.exp.is_rational and (not p.exp.is_integer), lambda p: p)\n     expr = factor_terms(expr, sign=False)\n     expr = hyperexpand(expr)\n     expr = piecewise_fold(expr)\n", "normalized_occurrence": 1}
