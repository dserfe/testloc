{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-7985", "model_patch": "diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py\nindex 4e6b0df..2160671 100644\n--- a/sphinx/builders/linkcheck.py\n+++ b/sphinx/builders/linkcheck.py\n@@ -213,7 +213,19 @@ class CheckExternalLinksBuilder(Builder):\n             if len(uri) == 0 or uri.startswith(('#', 'mailto:', 'ftp:')):\n                 return 'unchecked', '', 0\n             elif not uri.startswith(('http:', 'https:')):\n-                return 'local', '', 0\n+                if uri.startswith(('file:', '/')):\n+                    # handle file URIs and absolute paths\n+                    if path.isfile(uri) or path.isfile(path.join(self.env.srcdir, uri)):\n+                        return 'working', '', 0\n+                    else:\n+                        return 'broken', 'Local file not found', 0\n+                else:\n+                    # handle relative paths\n+                    filepath = path.join(self.env.srcdir, uri)\n+                    if path.isfile(filepath):\n+                        return 'working', '', 0\n+                    else:\n+                        return 'broken', 'Local file not found', 0\n             elif uri in self.good:\n                 return 'working', 'old', 0\n             elif uri in self.broken:\n@@ -315,7 +327,11 @@ class CheckExternalLinksBuilder(Builder):\n         # reference nodes\n         for refnode in doctree.traverse(nodes.reference):\n             if 'refuri' not in refnode:\n-                continue\n+                # If refuri is a local link, we should also check it\n+                uri = refnode.get('refuri')\n+                if uri and not uri.startswith(('http:', 'https:', 'mailto:', 'ftp:')):\n+                    self.wqueue.put((uri, docname, lineno), False)\n+                    n += 1\n             uri = refnode['refuri']\n             lineno = get_node_line(refnode)\n             self.wqueue.put((uri, docname, lineno), False)\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py\nindex f6c8f65..e0b5724 100644\n--- a/sphinx/builders/linkcheck.py\n+++ b/sphinx/builders/linkcheck.py\n@@ -133,7 +133,17 @@ class CheckExternalLinksBuilder(Builder):\n             if len(uri) == 0 or uri.startswith(('#', 'mailto:', 'ftp:')):\n                 return ('unchecked', '', 0)\n             elif not uri.startswith(('http:', 'https:')):\n-                return ('local', '', 0)\n+                if uri.startswith(('file:', '/')):\n+                    if path.isfile(uri) or path.isfile(path.join(self.env.srcdir, uri)):\n+                        return ('working', '', 0)\n+                    else:\n+                        return ('broken', 'Local file not found', 0)\n+                else:\n+                    filepath = path.join(self.env.srcdir, uri)\n+                    if path.isfile(filepath):\n+                        return ('working', '', 0)\n+                    else:\n+                        return ('broken', 'Local file not found', 0)\n             elif uri in self.good:\n                 return ('working', 'old', 0)\n             elif uri in self.broken:\n@@ -212,7 +222,10 @@ class CheckExternalLinksBuilder(Builder):\n         n = 0\n         for refnode in doctree.traverse(nodes.reference):\n             if 'refuri' not in refnode:\n-                continue\n+                uri = refnode.get('refuri')\n+                if uri and (not uri.startswith(('http:', 'https:', 'mailto:', 'ftp:'))):\n+                    self.wqueue.put((uri, docname, lineno), False)\n+                    n += 1\n             uri = refnode['refuri']\n             lineno = get_node_line(refnode)\n             self.wqueue.put((uri, docname, lineno), False)\n", "normalized_occurrence": 1}
