{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-8365", "model_patch": "diff --git a/src/_pytest/tmpdir.py b/src/_pytest/tmpdir.py\nindex cae5caf..2fabb33 100644\n--- a/src/_pytest/tmpdir.py\n+++ b/src/_pytest/tmpdir.py\n@@ -114,7 +114,8 @@ class TempPathFactory:\n             user = get_user() or \"unknown\"\n             # use a sub-directory in the temproot to speed-up\n             # make_numbered_dir() call\n-            rootdir = temproot.joinpath(f\"pytest-of-{user}\")\n+            sanitized_user = \"\".join([c if c.isalnum() or c in '-_.' else '_' for c in user])\n+            rootdir = temproot.joinpath(f\"pytest-of-{sanitized_user}\")\n             rootdir.mkdir(exist_ok=True)\n             basetemp = make_numbered_dir_with_cleanup(\n                 prefix=\"pytest-\", root=rootdir, keep=3, lock_timeout=LOCK_TIMEOUT\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/tmpdir.py b/src/_pytest/tmpdir.py\nindex 6f08c0a..9308c9c 100644\n--- a/src/_pytest/tmpdir.py\n+++ b/src/_pytest/tmpdir.py\n@@ -58,7 +58,8 @@ class TempPathFactory:\n             from_env = os.environ.get('PYTEST_DEBUG_TEMPROOT')\n             temproot = Path(from_env or tempfile.gettempdir()).resolve()\n             user = get_user() or 'unknown'\n-            rootdir = temproot.joinpath(f'pytest-of-{user}')\n+            sanitized_user = ''.join([c if c.isalnum() or c in '-_.' else '_' for c in user])\n+            rootdir = temproot.joinpath(f'pytest-of-{sanitized_user}')\n             rootdir.mkdir(exist_ok=True)\n             basetemp = make_numbered_dir_with_cleanup(prefix='pytest-', root=rootdir, keep=3, lock_timeout=LOCK_TIMEOUT)\n         assert basetemp is not None, basetemp\n", "normalized_occurrence": 1}
