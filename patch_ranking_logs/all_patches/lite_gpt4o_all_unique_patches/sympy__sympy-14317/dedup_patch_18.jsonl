{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-14317", "model_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 408ff45..84062b8 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1854,7 +1854,11 @@ class LatexPrinter(Printer):\n \n     def _print_Poly(self, poly):\n         cls = poly.__class__.__name__\n-        expr = self._print(poly.as_expr())\n+        from sympy.core import Mul\n+        terms = poly.terms()\n+        terms.sort(key=lambda term: -Mul(*[gen**exp for gen, exp in zip(poly.gens, term[0])]).as_expr().degree())\n+        sorted_expr = poly.func.from_dict(dict(terms), *poly.gens, domain=poly.get_domain())\n+        expr = self._print(sorted_expr.as_expr())\n         gens = list(map(self._print, poly.gens))\n         domain = \"domain=%s\" % self._print(poly.get_domain())\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 5a18831..03c7331 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1241,7 +1241,11 @@ class LatexPrinter(Printer):\n         return '%s%s\\\\left[%s\\\\right]' % (inv, domain, symbols)\n     def _print_Poly(self, poly):\n         cls = poly.__class__.__name__\n-        expr = self._print(poly.as_expr())\n+        from sympy.core import Mul\n+        terms = poly.terms()\n+        terms.sort(key=lambda term: -Mul(*[gen ** exp for gen, exp in zip(poly.gens, term[0])]).as_expr().degree())\n+        sorted_expr = poly.func.from_dict(dict(terms), *poly.gens, domain=poly.get_domain())\n+        expr = self._print(sorted_expr.as_expr())\n         gens = list(map(self._print, poly.gens))\n         domain = 'domain=%s' % self._print(poly.get_domain())\n         args = ', '.join([expr] + gens + [domain])\n", "normalized_occurrence": 1}
