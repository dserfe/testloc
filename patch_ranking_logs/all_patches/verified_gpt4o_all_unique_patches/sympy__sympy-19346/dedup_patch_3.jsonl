{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-19346", "model_patch": "diff --git a/sympy/printing/repr.py b/sympy/printing/repr.py\nindex b3c364b..2249112 100644\n--- a/sympy/printing/repr.py\n+++ b/sympy/printing/repr.py\n@@ -225,6 +225,14 @@ class ReprPrinter(Printer):\n     def _print_Symbol(self, expr):\n         d = expr._assumptions.generator\n         # print the dummy_index like it was an assumption\n+\n+    def _print_dict(self, expr):\n+        items = [\"%s: %s\" % (self._print(k), self._print(v)) for k, v in expr.items()]\n+        return \"{%s}\" % \", \".join(items)\n+\n+    def _print_set(self, expr):\n+        items = [self._print(item) for item in expr]\n+        return \"{%s}\" % \", \".join(items)\n         if expr.is_Dummy:\n             d['dummy_index'] = expr.dummy_index\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/repr.py b/sympy/printing/repr.py\nindex 98a297b..3cc70f6 100644\n--- a/sympy/printing/repr.py\n+++ b/sympy/printing/repr.py\n@@ -148,6 +148,12 @@ class ReprPrinter(Printer):\n         return 'Sum2(%s, (%s, %s, %s))' % (self._print(expr.f), self._print(expr.i), self._print(expr.a), self._print(expr.b))\n     def _print_Symbol(self, expr):\n         d = expr._assumptions.generator\n+    def _print_dict(self, expr):\n+        items = ['%s: %s' % (self._print(k), self._print(v)) for k, v in expr.items()]\n+        return '{%s}' % ', '.join(items)\n+    def _print_set(self, expr):\n+        items = [self._print(item) for item in expr]\n+        return '{%s}' % ', '.join(items)\n         if expr.is_Dummy:\n             d['dummy_index'] = expr.dummy_index\n         if d == {}:\n", "normalized_occurrence": 1}
