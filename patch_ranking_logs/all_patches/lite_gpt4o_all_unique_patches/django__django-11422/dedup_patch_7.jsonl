{"model_name_or_path": "agentless", "instance_id": "django__django-11422", "model_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex 2510c51..59f0e78 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -97,13 +97,16 @@ def ensure_echo_on():\n \n \n def iter_all_python_module_files():\n+    # Include the manage.py file explicitly in the watched files.\n+    manage_py_path = pathlib.Path(sys.argv[0]).resolve().absolute()\n     # This is a hot path during reloading. Create a stable sorted list of\n     # modules based on the module name and pass it to iter_modules_and_files().\n     # This ensures cached results are returned in the usual case that modules\n     # aren't loaded on the fly.\n     keys = sorted(sys.modules)\n     modules = tuple(m for m in map(sys.modules.__getitem__, keys) if not isinstance(m, weakref.ProxyTypes))\n-    return iter_modules_and_files(modules, frozenset(_error_files))\n+    extra_files = frozenset(_error_files).union({manage_py_path})\n+    return iter_modules_and_files(modules, extra_files)\n \n \n @functools.lru_cache(maxsize=1)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex bb4b189..8377c05 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -68,9 +68,11 @@ def ensure_echo_on():\n         if old_handler is not None:\n             signal.signal(signal.SIGTTOU, old_handler)\n def iter_all_python_module_files():\n+    manage_py_path = pathlib.Path(sys.argv[0]).resolve().absolute()\n     keys = sorted(sys.modules)\n     modules = tuple((m for m in map(sys.modules.__getitem__, keys) if not isinstance(m, weakref.ProxyTypes)))\n-    return iter_modules_and_files(modules, frozenset(_error_files))\n+    extra_files = frozenset(_error_files).union({manage_py_path})\n+    return iter_modules_and_files(modules, extra_files)\n @functools.lru_cache(maxsize=1)\n def iter_modules_and_files(modules, extra_files):\n     sys_file_paths = []\n", "normalized_occurrence": 1}
