{"model_name_or_path": "agentless", "instance_id": "django__django-12908", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex ccac780..1978b0d 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -994,6 +994,7 @@ class QuerySet:\n         clone.query.combined_queries = (self.query,) + tuple(qs.query for qs in other_qs)\n         clone.query.combinator = combinator\n         clone.query.combinator_all = all\n+        clone.query.distinct_fields = self.query.distinct_fields[:]\n         return clone\n \n     def union(self, *other_qs, all=False):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 23baba9..e37effd 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -585,6 +585,7 @@ class QuerySet:\n         clone.query.combined_queries = (self.query,) + tuple((qs.query for qs in other_qs))\n         clone.query.combinator = combinator\n         clone.query.combinator_all = all\n+        clone.query.distinct_fields = self.query.distinct_fields[:]\n         return clone\n     def union(self, *other_qs, all=False):\n         if isinstance(self, EmptyQuerySet):\n", "normalized_occurrence": 1}
