{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-25332", "model_patch": "diff --git a/lib/matplotlib/artist.py b/lib/matplotlib/artist.py\nindex f79f174..1632bdd 100644\n--- a/lib/matplotlib/artist.py\n+++ b/lib/matplotlib/artist.py\n@@ -218,6 +218,11 @@ class Artist:\n         # remove the unpicklable remove method, this will get re-added on load\n         # (by the Axes) if the artist lives on an Axes.\n         d['stale_callback'] = None\n+        # Clear any weak references that may have been created during label alignment\n+        if '_label_ref' in d:\n+            d['_label_ref'] = None\n+        if '_alignments' in d:\n+            d['_alignments'] = None\n         return d\n \n     def remove(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/artist.py b/lib/matplotlib/artist.py\nindex 7afacef..a1c52d1 100644\n--- a/lib/matplotlib/artist.py\n+++ b/lib/matplotlib/artist.py\n@@ -117,6 +117,10 @@ class Artist:\n     def __getstate__(self):\n         d = self.__dict__.copy()\n         d['stale_callback'] = None\n+        if '_label_ref' in d:\n+            d['_label_ref'] = None\n+        if '_alignments' in d:\n+            d['_alignments'] = None\n         return d\n     def remove(self):\n         if self._remove_method is not None:\n", "normalized_occurrence": 1}
