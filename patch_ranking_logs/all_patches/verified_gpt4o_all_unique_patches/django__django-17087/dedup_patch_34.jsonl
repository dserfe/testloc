{"model_name_or_path": "agentless", "instance_id": "django__django-17087", "model_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex 941a5ed..f013af3 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -104,9 +104,19 @@ class DeconstructableSerializer(BaseSerializer):\n         if module == \"django.db.models\":\n             imports = {\"from django.db import models\"}\n             name = \"models.%s\" % name\n-        else:\n+        elif module.endswith(\".models\"):\n             imports = {\"import %s\" % module}\n             name = path\n+        else:\n+            # Handle nested class methods\n+            parts = module.split(\".\")\n+            if len(parts) > 1 and parts[-2] == \"models\":\n+                module = \".\".join(parts[:-1])\n+                imports = {\"import %s\" % module}\n+                name = path\n+            else:\n+                imports = {\"import %s\" % module}\n+                name = path\n         return name, imports\n \n     def serialize(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex bd46ec1..e8c2dfb 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -74,9 +74,18 @@ class DeconstructableSerializer(BaseSerializer):\n         if module == 'django.db.models':\n             imports = {'from django.db import models'}\n             name = 'models.%s' % name\n-        else:\n+        elif module.endswith('.models'):\n             imports = {'import %s' % module}\n             name = path\n+        else:\n+            parts = module.split('.')\n+            if len(parts) > 1 and parts[-2] == 'models':\n+                module = '.'.join(parts[:-1])\n+                imports = {'import %s' % module}\n+                name = path\n+            else:\n+                imports = {'import %s' % module}\n+                name = path\n         return (name, imports)\n     def serialize(self):\n         return self.serialize_deconstructed(*self.value.deconstruct())\n", "normalized_occurrence": 1}
