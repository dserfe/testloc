{"model_name_or_path": "agentless", "instance_id": "django__django-12908", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex ccac780..0f49513 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -991,7 +991,9 @@ class QuerySet:\n         # Clear limits and ordering so they can be reapplied\n         clone.query.clear_ordering(True)\n         clone.query.clear_limits()\n-        clone.query.combined_queries = (self.query,) + tuple(qs.query for qs in other_qs)\n+        clone.query.combined_queries = (self.query.clone(),) + tuple(qs.query.clone() for qs in other_qs)\n+        if hasattr(self.query, 'distinct_fields'):\n+            clone.query.distinct_fields = self.query.distinct_fields[:]\n         clone.query.combinator = combinator\n         clone.query.combinator_all = all\n         return clone\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 23baba9..fa6a30b 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -582,7 +582,9 @@ class QuerySet:\n         clone = self._chain()\n         clone.query.clear_ordering(True)\n         clone.query.clear_limits()\n-        clone.query.combined_queries = (self.query,) + tuple((qs.query for qs in other_qs))\n+        clone.query.combined_queries = (self.query.clone(),) + tuple((qs.query.clone() for qs in other_qs))\n+        if hasattr(self.query, 'distinct_fields'):\n+            clone.query.distinct_fields = self.query.distinct_fields[:]\n         clone.query.combinator = combinator\n         clone.query.combinator_all = all\n         return clone\n", "normalized_occurrence": 1}
