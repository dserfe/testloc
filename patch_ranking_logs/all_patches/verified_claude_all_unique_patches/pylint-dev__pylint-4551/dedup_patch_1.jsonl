{"model_name_or_path": "agentless_claude", "instance_id": "pylint-dev__pylint-4551", "model_patch": "diff --git a/pylint/pyreverse/diagrams.py b/pylint/pyreverse/diagrams.py\nindex 0111bb1..1caa3a4 100644\n--- a/pylint/pyreverse/diagrams.py\n+++ b/pylint/pyreverse/diagrams.py\n@@ -84,6 +84,8 @@ class ClassDiagram(Figure, FilterMixIn):\n             for n, m in node.items()\n             if isinstance(m, astroid.FunctionDef) and decorated_with_property(m)\n         ]\n+        \n+        # Get types from instance attributes and locals\n         for node_name, associated_nodes in (\n             list(node.instance_attrs_type.items())\n             + list(node.locals_type.items())\n@@ -95,6 +97,26 @@ class ClassDiagram(Figure, FilterMixIn):\n             if names:\n                 node_name = \"{} : {}\".format(node_name, \", \".join(names))\n             attrs.append(node_name)\n+            \n+        # Get types from __init__ parameters\n+        init_method = node.locals.get('__init__')\n+        if init_method:\n+            init_method = init_method[0]\n+            if isinstance(init_method, astroid.FunctionDef):\n+                for arg in init_method.args.args[1:]:  # Skip 'self'\n+                    if not self.show_attr(arg.name):\n+                        continue\n+                    if hasattr(arg, 'annotation') and arg.annotation:\n+                        try:\n+                            type_name = arg.annotation.as_string()\n+                            # Strip 'typing.' prefix if present\n+                            type_name = type_name.replace('typing.', '')\n+                            attr_name = \"{} : {}\".format(arg.name, type_name)\n+                            if attr_name not in attrs:\n+                                attrs.append(attr_name)\n+                        except (AttributeError, TypeError):\n+                            continue\n+                            \n         return sorted(attrs)\n \n     def get_methods(self, node):\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/pyreverse/diagrams.py b/pylint/pyreverse/diagrams.py\nindex d9b60dc..0a99079 100644\n--- a/pylint/pyreverse/diagrams.py\n+++ b/pylint/pyreverse/diagrams.py\n@@ -64,6 +64,22 @@ class ClassDiagram(Figure, FilterMixIn):\n             if names:\n                 node_name = '{} : {}'.format(node_name, ', '.join(names))\n             attrs.append(node_name)\n+        init_method = node.locals.get('__init__')\n+        if init_method:\n+            init_method = init_method[0]\n+            if isinstance(init_method, astroid.FunctionDef):\n+                for arg in init_method.args.args[1:]:\n+                    if not self.show_attr(arg.name):\n+                        continue\n+                    if hasattr(arg, 'annotation') and arg.annotation:\n+                        try:\n+                            type_name = arg.annotation.as_string()\n+                            type_name = type_name.replace('typing.', '')\n+                            attr_name = '{} : {}'.format(arg.name, type_name)\n+                            if attr_name not in attrs:\n+                                attrs.append(attr_name)\n+                        except (AttributeError, TypeError):\n+                            continue\n         return sorted(attrs)\n \n     def get_methods(self, node):\n", "normalized_occurrence": 1}
