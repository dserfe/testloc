{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-6599", "model_patch": "diff --git a/xarray/core/duck_array_ops.py b/xarray/core/duck_array_ops.py\nindex 3ef7ed0..8fb5849 100644\n--- a/xarray/core/duck_array_ops.py\n+++ b/xarray/core/duck_array_ops.py\n@@ -444,8 +444,8 @@ def datetime_to_numeric(array, offset=None, datetime_unit=None, dtype=float):\n     # Convert np.NaT to np.nan\n     elif array.dtype.kind in \"mM\":\n \n-        # Convert to specified timedelta units.\n-        if datetime_unit:\n+        # Convert to specified timedelta units if array is not datetime64\n+        if array.dtype.kind == \"m\" and datetime_unit:\n             array = array / np.timedelta64(1, datetime_unit)\n         return np.where(isnull(array), np.nan, array.astype(dtype))\n \n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/duck_array_ops.py b/xarray/core/duck_array_ops.py\nindex 003b4fa..39be6ae 100644\n--- a/xarray/core/duck_array_ops.py\n+++ b/xarray/core/duck_array_ops.py\n@@ -237,7 +237,7 @@ def datetime_to_numeric(array, offset=None, datetime_unit=None, dtype=float):\n     if array.dtype.kind in 'O':\n         return py_timedelta_to_float(array, datetime_unit or 'ns').astype(dtype)\n     elif array.dtype.kind in 'mM':\n-        if datetime_unit:\n+        if array.dtype.kind == 'm' and datetime_unit:\n             array = array / np.timedelta64(1, datetime_unit)\n         return np.where(isnull(array), np.nan, array.astype(dtype))\n def timedelta_to_numeric(value, datetime_unit='ns', dtype=float):\n", "normalized_occurrence": 1}
