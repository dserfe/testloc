{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-7080", "model_patch": "diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py\nindex 440e6fe..c53883c 100644\n--- a/pylint/lint/pylinter.py\n+++ b/pylint/lint/pylinter.py\n@@ -595,7 +595,11 @@ class PyLinter(\n                 for root, _, files in os.walk(something):\n                     if any(root.startswith(s) for s in skip_subtrees):\n                         # Skip subtree of already discovered package.\n-                        continue\n+                        if self.config.ignore_paths:\n+                            for ignore_path in self.config.ignore_paths:\n+                                if re.match(ignore_path, root):\n+                                    skip_subtrees.append(root)\n+                                    break\n \n                     if _is_ignored_file(\n                         root,\n@@ -604,7 +608,11 @@ class PyLinter(\n                         self.config.ignore_paths,\n                     ):\n                         skip_subtrees.append(root)\n-                        continue\n+                        if self.config.ignore_paths:\n+                            for ignore_path in self.config.ignore_paths:\n+                                if re.match(ignore_path, root):\n+                                    skip_subtrees.append(root)\n+                                    break\n \n                     if \"__init__.py\" in files:\n                         skip_subtrees.append(root)\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py\nindex afb1178..d732b62 100644\n--- a/pylint/lint/pylinter.py\n+++ b/pylint/lint/pylinter.py\n@@ -229,10 +229,18 @@ class PyLinter(_ArgumentsManager, _MessageStateHandler, reporters.ReportsHandler\n                 skip_subtrees: list[str] = []\n                 for root, _, files in os.walk(something):\n                     if any((root.startswith(s) for s in skip_subtrees)):\n-                        continue\n+                        if self.config.ignore_paths:\n+                            for ignore_path in self.config.ignore_paths:\n+                                if re.match(ignore_path, root):\n+                                    skip_subtrees.append(root)\n+                                    break\n                     if _is_ignored_file(root, self.config.ignore, self.config.ignore_patterns, self.config.ignore_paths):\n                         skip_subtrees.append(root)\n-                        continue\n+                        if self.config.ignore_paths:\n+                            for ignore_path in self.config.ignore_paths:\n+                                if re.match(ignore_path, root):\n+                                    skip_subtrees.append(root)\n+                                    break\n                     if '__init__.py' in files:\n                         skip_subtrees.append(root)\n                         yield root\n", "normalized_occurrence": 1}
