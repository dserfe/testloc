{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-5221", "model_patch": "diff --git a/src/_pytest/fixtures.py b/src/_pytest/fixtures.py\nindex 8772615..d9587e5 100644\n--- a/src/_pytest/fixtures.py\n+++ b/src/_pytest/fixtures.py\n@@ -1208,6 +1208,11 @@ class FixtureManager(object):\n                 return fixturedefs[-1].scopenum\n \n         fixturenames_closure.sort(key=sort_by_scope)\n+\n+        # Add scope information to the fixturedefs\n+        for fixturedefs in arg2fixturedefs.values():\n+            for fixturedef in fixturedefs:\n+                fixturedef.scope_str = scopes[fixturedef.scopenum]\n         return initialnames, fixturenames_closure, arg2fixturedefs\n \n     def pytest_generate_tests(self, metafunc):\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/fixtures.py b/src/_pytest/fixtures.py\nindex f3fbe6f..7960ca3 100644\n--- a/src/_pytest/fixtures.py\n+++ b/src/_pytest/fixtures.py\n@@ -692,6 +692,9 @@ class FixtureManager(object):\n             else:\n                 return fixturedefs[-1].scopenum\n         fixturenames_closure.sort(key=sort_by_scope)\n+        for fixturedefs in arg2fixturedefs.values():\n+            for fixturedef in fixturedefs:\n+                fixturedef.scope_str = scopes[fixturedef.scopenum]\n         return (initialnames, fixturenames_closure, arg2fixturedefs)\n     def pytest_generate_tests(self, metafunc):\n         for argname in metafunc.fixturenames:\n", "normalized_occurrence": 1}
