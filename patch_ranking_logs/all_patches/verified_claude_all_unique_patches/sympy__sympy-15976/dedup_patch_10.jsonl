{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-15976", "model_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 85af872..463d72f 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -777,8 +777,21 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n         supers = [translate(sup) for sup in supers]\n         subs = [translate(sub) for sub in subs]\n \n-        mname = self.dom.createElement('mi')\n-        mname.appendChild(self.dom.createTextNode(name))\n+        # Handle names with trailing numbers by creating separate mi/mn elements\n+        import re\n+        match = re.match(r'([a-zA-Z_]+)([0-9]+)$', name)\n+        if match:\n+            mname = self.dom.createElement('mrow')\n+            mi = self.dom.createElement('mi')\n+            mi.appendChild(self.dom.createTextNode(match.group(1)))\n+            mn = self.dom.createElement('mn')\n+            mn.appendChild(self.dom.createTextNode(match.group(2)))\n+            mname.appendChild(mi)\n+            mname.appendChild(mn)\n+        else:\n+            mname = self.dom.createElement('mi')\n+            mname.appendChild(self.dom.createTextNode(name))\n+            \n         if len(supers) == 0:\n             if len(subs) == 0:\n                 x.appendChild(self.dom.createTextNode(name))\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 28d3e1a..a33acbd 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -544,8 +544,19 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n         name = translate(name)\n         supers = [translate(sup) for sup in supers]\n         subs = [translate(sub) for sub in subs]\n-        mname = self.dom.createElement('mi')\n-        mname.appendChild(self.dom.createTextNode(name))\n+        import re\n+        match = re.match('([a-zA-Z_]+)([0-9]+)$', name)\n+        if match:\n+            mname = self.dom.createElement('mrow')\n+            mi = self.dom.createElement('mi')\n+            mi.appendChild(self.dom.createTextNode(match.group(1)))\n+            mn = self.dom.createElement('mn')\n+            mn.appendChild(self.dom.createTextNode(match.group(2)))\n+            mname.appendChild(mi)\n+            mname.appendChild(mn)\n+        else:\n+            mname = self.dom.createElement('mi')\n+            mname.appendChild(self.dom.createTextNode(name))\n         if len(supers) == 0:\n             if len(subs) == 0:\n                 x.appendChild(self.dom.createTextNode(name))\n", "normalized_occurrence": 1}
