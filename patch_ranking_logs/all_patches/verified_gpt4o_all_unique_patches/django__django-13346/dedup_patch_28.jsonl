{"model_name_or_path": "agentless", "instance_id": "django__django-13346", "model_patch": "diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py\nindex a0dea96..f17cfd8 100644\n--- a/django/db/models/fields/json.py\n+++ b/django/db/models/fields/json.py\n@@ -292,6 +292,15 @@ class KeyTransform(Transform):\n         return (lhs, params, key_transforms) if not lhs_only else (lhs, params)\n \n     def as_mysql(self, compiler, connection):\n+        if isinstance(self.lhs.output_field, JSONField) and isinstance(self.rhs, list):\n+            lhs, params, key_transforms = self.preprocess_lhs(compiler, connection)\n+            json_path = compile_json_path(key_transforms)\n+            sqls, sqls_params = [], []\n+            for value in self.rhs:\n+                sql, sql_params = compiler.compile(Value(value))\n+                sqls.append(\"JSON_CONTAINS(%s, %%s)\" % lhs)\n+                sqls_params.extend(params + (json_path, sql_params))\n+            return ' OR '.join(sqls), tuple(sqls_params)\n         lhs, params, key_transforms = self.preprocess_lhs(compiler, connection)\n         json_path = compile_json_path(key_transforms)\n         return 'JSON_EXTRACT(%s, %%s)' % lhs, tuple(params) + (json_path,)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py\nindex 781245e..8eb1fc7 100644\n--- a/django/db/models/fields/json.py\n+++ b/django/db/models/fields/json.py\n@@ -200,6 +200,15 @@ class KeyTransform(Transform):\n             key_transforms = [key.replace('%', '%%') for key in key_transforms]\n         return (lhs, params, key_transforms) if not lhs_only else (lhs, params)\n     def as_mysql(self, compiler, connection):\n+        if isinstance(self.lhs.output_field, JSONField) and isinstance(self.rhs, list):\n+            lhs, params, key_transforms = self.preprocess_lhs(compiler, connection)\n+            json_path = compile_json_path(key_transforms)\n+            sqls, sqls_params = ([], [])\n+            for value in self.rhs:\n+                sql, sql_params = compiler.compile(Value(value))\n+                sqls.append('JSON_CONTAINS(%s, %%s)' % lhs)\n+                sqls_params.extend(params + (json_path, sql_params))\n+            return (' OR '.join(sqls), tuple(sqls_params))\n         lhs, params, key_transforms = self.preprocess_lhs(compiler, connection)\n         json_path = compile_json_path(key_transforms)\n         return ('JSON_EXTRACT(%s, %%s)' % lhs, tuple(params) + (json_path,))\n", "normalized_occurrence": 1}
