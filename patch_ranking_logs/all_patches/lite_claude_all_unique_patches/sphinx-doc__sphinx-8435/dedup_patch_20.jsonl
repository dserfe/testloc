{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-8435", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 77fd48c..9c1d865 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1721,8 +1721,8 @@ class DataDocumenter(ModuleLevelDocumenter):\n             else:\n                 key = ('.'.join(self.objpath[:-1]), self.objpath[-1])\n                 if self.analyzer and key in self.analyzer.annotations:\n-                    self.add_line('   :type: ' + self.analyzer.annotations[key],\n-                                  sourcename)\n+                    objrepr = stringify_typehint(self.analyzer.annotations[key])\n+                    self.add_line('   :type: ' + objrepr, sourcename)\n \n             try:\n                 if self.object is UNINITIALIZED_ATTR:\n@@ -2112,8 +2112,8 @@ class AttributeDocumenter(DocstringStripSignatureMixin, ClassLevelDocumenter):\n             else:\n                 key = ('.'.join(self.objpath[:-1]), self.objpath[-1])\n                 if self.analyzer and key in self.analyzer.annotations:\n-                    self.add_line('   :type: ' + self.analyzer.annotations[key],\n-                                  sourcename)\n+                    objrepr = stringify_typehint(self.analyzer.annotations[key])\n+                    self.add_line('   :type: ' + objrepr, sourcename)\n \n             # data descriptors do not have useful values\n             if not self._datadescriptor:\n", "occurrence": 6, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 2484638..c3973f6 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -970,7 +970,8 @@ class DataDocumenter(ModuleLevelDocumenter):\n             else:\n                 key = ('.'.join(self.objpath[:-1]), self.objpath[-1])\n                 if self.analyzer and key in self.analyzer.annotations:\n-                    self.add_line('   :type: ' + self.analyzer.annotations[key], sourcename)\n+                    objrepr = stringify_typehint(self.analyzer.annotations[key])\n+                    self.add_line('   :type: ' + objrepr, sourcename)\n             try:\n                 if self.object is UNINITIALIZED_ATTR:\n                     pass\n@@ -1228,7 +1229,8 @@ class AttributeDocumenter(DocstringStripSignatureMixin, ClassLevelDocumenter):\n             else:\n                 key = ('.'.join(self.objpath[:-1]), self.objpath[-1])\n                 if self.analyzer and key in self.analyzer.annotations:\n-                    self.add_line('   :type: ' + self.analyzer.annotations[key], sourcename)\n+                    objrepr = stringify_typehint(self.analyzer.annotations[key])\n+                    self.add_line('   :type: ' + objrepr, sourcename)\n             if not self._datadescriptor:\n                 try:\n                     if self.object is INSTANCEATTR:\n", "normalized_occurrence": 6}
