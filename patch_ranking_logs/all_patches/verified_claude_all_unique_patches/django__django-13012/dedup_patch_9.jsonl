{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13012", "model_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 48095d5..9ac019b 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -866,6 +866,13 @@ class ExpressionWrapper(Expression):\n     def as_sql(self, compiler, connection):\n         return self.expression.as_sql(compiler, connection)\n \n+    def get_group_by_cols(self, alias=None):\n+        # If the wrapped expression is a Value, we don't want it in GROUP BY\n+        if isinstance(self.expression, Value):\n+            return []\n+        # Otherwise, defer to the wrapped expression's grouping behavior\n+        return self.expression.get_group_by_cols(alias=alias)\n+\n     def __repr__(self):\n         return \"{}({})\".format(self.__class__.__name__, self.expression)\n \n", "occurrence": 1, "normalized_patch": "--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n+    def get_group_by_cols(self, alias=None):\n+        if isinstance(self.expression, Value):\n+            return []\n+        return self.expression.get_group_by_cols(alias=alias)", "normalized_occurrence": 1}
