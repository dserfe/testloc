{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7982", "model_patch": "diff --git a/src/_pytest/main.py b/src/_pytest/main.py\nindex e00a6f3..8dc8f98 100644\n--- a/src/_pytest/main.py\n+++ b/src/_pytest/main.py\n@@ -526,6 +526,9 @@ class Session(nodes.FSCollector):\n         norecursepatterns = self.config.getini(\"norecursedirs\")\n         if any(path.check(fnmatch=pat) for pat in norecursepatterns):\n             return False\n+        # Follow symlinks to directories\n+        if path.islink() and path.isdir():\n+            return True\n         return True\n \n     def _collectfile(\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/main.py b/src/_pytest/main.py\nindex df5c6f0..f1777b3 100644\n--- a/src/_pytest/main.py\n+++ b/src/_pytest/main.py\n@@ -314,6 +314,8 @@ class Session(nodes.FSCollector):\n         norecursepatterns = self.config.getini('norecursedirs')\n         if any((path.check(fnmatch=pat) for pat in norecursepatterns)):\n             return False\n+        if path.islink() and path.isdir():\n+            return True\n         return True\n \n     def _collectfile(self, path: py.path.local, handle_dupes: bool=True) -> Sequence[nodes.Collector]:\n", "normalized_occurrence": 1}
