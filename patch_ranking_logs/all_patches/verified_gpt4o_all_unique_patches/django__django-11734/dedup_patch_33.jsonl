{"model_name_or_path": "agentless", "instance_id": "django__django-11734", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 13129dd..6ad4368 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -908,7 +908,9 @@ class QuerySet:\n \n         clone = self._chain()\n         if negate:\n-            clone.query.add_q(~Q(*args, **kwargs))\n+            q = Q(*args, **kwargs)\n+            q.negated = True\n+            clone.query.add_q(q)\n         else:\n             clone.query.add_q(Q(*args, **kwargs))\n         return clone\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 1541d76..71b9f17 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -537,7 +537,9 @@ class QuerySet:\n             assert not self.query.is_sliced, 'Cannot filter a query once a slice has been taken.'\n         clone = self._chain()\n         if negate:\n-            clone.query.add_q(~Q(*args, **kwargs))\n+            q = Q(*args, **kwargs)\n+            q.negated = True\n+            clone.query.add_q(q)\n         else:\n             clone.query.add_q(Q(*args, **kwargs))\n         return clone\n", "normalized_occurrence": 1}
