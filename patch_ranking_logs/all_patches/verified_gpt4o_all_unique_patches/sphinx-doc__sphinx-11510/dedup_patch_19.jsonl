{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-11510", "model_patch": "diff --git a/sphinx/environment/__init__.py b/sphinx/environment/__init__.py\nindex 96f4a03..ac85013 100644\n--- a/sphinx/environment/__init__.py\n+++ b/sphinx/environment/__init__.py\n@@ -681,6 +681,14 @@ class BuildEnvironment:\n         finally:\n             self.temp_data = backup\n \n+        # emit 'source-read' event for the included files to ensure their source is transformed\n+        for pending_node in doctree.traverse(nodes.pending):\n+            if pending_node.get('reftarget'):\n+                include_docname = pending_node['reftarget']\n+                include_doc_source = self.get_doctree(include_docname).astext()\n+                self.events.emit('source-read', include_docname, [include_doc_source])\n+                pending_node.replace_self(nodes.raw('', include_doc_source, format='html'))\n+\n         # allow custom references to be resolved\n         self.events.emit('doctree-resolved', doctree, docname)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/environment/__init__.py b/sphinx/environment/__init__.py\nindex 3c422c4..216e8b2 100644\n--- a/sphinx/environment/__init__.py\n+++ b/sphinx/environment/__init__.py\n@@ -382,6 +382,12 @@ class BuildEnvironment:\n             transformer.apply_transforms()\n         finally:\n             self.temp_data = backup\n+        for pending_node in doctree.traverse(nodes.pending):\n+            if pending_node.get('reftarget'):\n+                include_docname = pending_node['reftarget']\n+                include_doc_source = self.get_doctree(include_docname).astext()\n+                self.events.emit('source-read', include_docname, [include_doc_source])\n+                pending_node.replace_self(nodes.raw('', include_doc_source, format='html'))\n         self.events.emit('doctree-resolved', doctree, docname)\n     def collect_relations(self) -> dict[str, list[str | None]]:\n         traversed: set[str] = set()\n", "normalized_occurrence": 1}
