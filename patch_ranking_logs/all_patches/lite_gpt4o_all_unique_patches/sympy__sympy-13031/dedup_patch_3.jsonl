{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13031", "model_patch": "diff --git a/sympy/matrices/dense.py b/sympy/matrices/dense.py\nindex 7b0ad01..2fb1f68 100644\n--- a/sympy/matrices/dense.py\n+++ b/sympy/matrices/dense.py\n@@ -170,11 +170,10 @@ class DenseMatrix(MatrixBase):\n         new_mat_cols = other.cols\n \n         # preallocate the array\n-        new_mat = [S.Zero]*new_mat_rows*new_mat_cols\n-\n-        # if we multiply an n x 0 with a 0 x m, the\n-        # expected behavior is to produce an n x m matrix of zeros\n-        if self.cols != 0 and other.rows != 0:\n+        if self.cols == 0 or other.rows == 0:\n+            new_mat = [S.Zero]*new_mat_rows*new_mat_cols\n+        else:\n+            new_mat = [S.Zero]*new_mat_rows*new_mat_cols\n             # cache self._mat and other._mat for performance\n             mat = self._mat\n             other_mat = other._mat\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/dense.py b/sympy/matrices/dense.py\nindex edd691e..c2476d6 100644\n--- a/sympy/matrices/dense.py\n+++ b/sympy/matrices/dense.py\n@@ -91,8 +91,10 @@ class DenseMatrix(MatrixBase):\n         other_len = other_rows * other_cols\n         new_mat_rows = self.rows\n         new_mat_cols = other.cols\n-        new_mat = [S.Zero] * new_mat_rows * new_mat_cols\n-        if self.cols != 0 and other.rows != 0:\n+        if self.cols == 0 or other.rows == 0:\n+            new_mat = [S.Zero] * new_mat_rows * new_mat_cols\n+        else:\n+            new_mat = [S.Zero] * new_mat_rows * new_mat_cols\n             mat = self._mat\n             other_mat = other._mat\n             for i in range(len(new_mat)):\n", "normalized_occurrence": 1}
