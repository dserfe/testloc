{"model_name_or_path": "agentless", "instance_id": "django__django-12589", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 56581f2..141c67d 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -563,16 +563,17 @@ class SQLCompiler:\n                     params.extend(w_params)\n \n                 grouping = []\n-                for g_sql, g_params in group_by:\n-                    grouping.append(g_sql)\n-                    params.extend(g_params)\n-                if grouping:\n-                    if distinct_fields:\n-                        raise NotImplementedError('annotate() + distinct(fields) is not implemented.')\n-                    order_by = order_by or self.connection.ops.force_no_ordering()\n-                    result.append('GROUP BY %s' % ', '.join(grouping))\n-                    if self._meta_ordering:\n-                        order_by = None\n+                if group_by:\n+                    for g_sql, g_params in group_by:\n+                        grouping.append(g_sql)\n+                        params.extend(g_params)\n+                    if grouping:\n+                        if distinct_fields:\n+                            raise NotImplementedError('annotate() + distinct(fields) is not implemented.')\n+                        order_by = order_by or self.connection.ops.force_no_ordering()\n+                        result.append('GROUP BY %s' % ', '.join(grouping))\n+                        if self._meta_ordering:\n+                            order_by = None\n                 if having:\n                     result.append('HAVING %s' % having)\n                     params.extend(h_params)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex aa7c887..176acb8 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -327,16 +327,17 @@ class SQLCompiler:\n                     result.append('WHERE %s' % where)\n                     params.extend(w_params)\n                 grouping = []\n-                for g_sql, g_params in group_by:\n-                    grouping.append(g_sql)\n-                    params.extend(g_params)\n-                if grouping:\n-                    if distinct_fields:\n-                        raise NotImplementedError('annotate() + distinct(fields) is not implemented.')\n-                    order_by = order_by or self.connection.ops.force_no_ordering()\n-                    result.append('GROUP BY %s' % ', '.join(grouping))\n-                    if self._meta_ordering:\n-                        order_by = None\n+                if group_by:\n+                    for g_sql, g_params in group_by:\n+                        grouping.append(g_sql)\n+                        params.extend(g_params)\n+                    if grouping:\n+                        if distinct_fields:\n+                            raise NotImplementedError('annotate() + distinct(fields) is not implemented.')\n+                        order_by = order_by or self.connection.ops.force_no_ordering()\n+                        result.append('GROUP BY %s' % ', '.join(grouping))\n+                        if self._meta_ordering:\n+                            order_by = None\n                 if having:\n                     result.append('HAVING %s' % having)\n                     params.extend(h_params)\n", "normalized_occurrence": 1}
