{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-14308", "model_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 81d644a..29df4f5 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -917,8 +917,16 @@ class PrettyPrinter(Printer):\n                 else:\n                     #We always wrap the measure numbers in\n                     #parentheses\n-                    arg_str = self._print(\n-                        v).parens()[0]\n+                    arg_str = self._print(v).parens()[0]\n+                    k_str = k._pretty_form\n+\n+                    # Correcting the baseline\n+                    if '\\n' in arg_str:\n+                        arg_str_lines = arg_str.split('\\n')\n+                        arg_str = '\\n'.join(' ' * (len(k_str) + 1) + line for line in arg_str_lines)\n+                        o1.append(arg_str + ' ' + k_str)\n+                    else:\n+                        o1.append(arg_str + ' ' + k_str)\n \n                     o1.append(arg_str + ' ' + k._pretty_form)\n                 vectstrs.append(k._pretty_form)\n@@ -951,6 +959,8 @@ class PrettyPrinter(Printer):\n                                            3*(len(lengths)-1)))\n                     if j == 0:\n                         strs[0] += parts[0] + ' + '\n+                    if len(parts[j]) < lengths[-1]:\n+                        parts[j] += ' ' * (lengths[-1] - len(parts[j]))\n                     else:\n                         strs[j] += parts[j] + ' '*(lengths[-1] -\n                                                    len(parts[j])+\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 35c3eb3..d14267b 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -661,6 +661,13 @@ class PrettyPrinter(Printer):\n                     o1.append(u'(-1) ' + k._pretty_form)\n                 else:\n                     arg_str = self._print(v).parens()[0]\n+                    k_str = k._pretty_form\n+                    if '\\n' in arg_str:\n+                        arg_str_lines = arg_str.split('\\n')\n+                        arg_str = '\\n'.join((' ' * (len(k_str) + 1) + line for line in arg_str_lines))\n+                        o1.append(arg_str + ' ' + k_str)\n+                    else:\n+                        o1.append(arg_str + ' ' + k_str)\n                     o1.append(arg_str + ' ' + k._pretty_form)\n                 vectstrs.append(k._pretty_form)\n         if o1[0].startswith(u' + '):\n@@ -685,6 +692,8 @@ class PrettyPrinter(Printer):\n                         strs.append(' ' * (sum(lengths[:-1]) + 3 * (len(lengths) - 1)))\n                     if j == 0:\n                         strs[0] += parts[0] + ' + '\n+                    if len(parts[j]) < lengths[-1]:\n+                        parts[j] += ' ' * (lengths[-1] - len(parts[j]))\n                     else:\n                         strs[j] += parts[j] + ' ' * (lengths[-1] - len(parts[j]) + 3)\n                 else:\n", "normalized_occurrence": 1}
