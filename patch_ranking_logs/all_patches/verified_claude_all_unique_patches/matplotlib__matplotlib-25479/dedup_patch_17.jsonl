{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-25479", "model_patch": "diff --git a/lib/matplotlib/image.py b/lib/matplotlib/image.py\nindex e8cc2cd..0f6d2e6 100644\n--- a/lib/matplotlib/image.py\n+++ b/lib/matplotlib/image.py\n@@ -257,7 +257,13 @@ class _ImageBase(martist.Artist, cm.ScalarMappable):\n                  **kwargs\n                  ):\n         martist.Artist.__init__(self)\n-        cm.ScalarMappable.__init__(self, norm, cmap)\n+        # If cmap is a string, use it directly, otherwise get the name from the colormap\n+        if isinstance(cmap, str):\n+            cmap_name = cmap\n+        elif cmap is not None:\n+            cmap_name = getattr(cmap, '_global_name', cmap.name)\n+            cmap = None  # Let ScalarMappable get it from the registry\n+        cm.ScalarMappable.__init__(self, norm, cmap_name if cmap is None else cmap)\n         if origin is None:\n             origin = mpl.rcParams['image.origin']\n         _api.check_in_list([\"upper\", \"lower\"], origin=origin)\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/image.py b/lib/matplotlib/image.py\nindex cfb0226..4506e31 100644\n--- a/lib/matplotlib/image.py\n+++ b/lib/matplotlib/image.py\n@@ -103,7 +103,12 @@ class _ImageBase(martist.Artist, cm.ScalarMappable):\n     zorder = 0\n     def __init__(self, ax, cmap=None, norm=None, interpolation=None, origin=None, filternorm=True, filterrad=4.0, resample=False, *, interpolation_stage=None, **kwargs):\n         martist.Artist.__init__(self)\n-        cm.ScalarMappable.__init__(self, norm, cmap)\n+        if isinstance(cmap, str):\n+            cmap_name = cmap\n+        elif cmap is not None:\n+            cmap_name = getattr(cmap, '_global_name', cmap.name)\n+            cmap = None\n+        cm.ScalarMappable.__init__(self, norm, cmap_name if cmap is None else cmap)\n         if origin is None:\n             origin = mpl.rcParams['image.origin']\n         _api.check_in_list(['upper', 'lower'], origin=origin)\n", "normalized_occurrence": 1}
