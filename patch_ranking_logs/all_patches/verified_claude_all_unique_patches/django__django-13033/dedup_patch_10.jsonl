{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13033", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex f5fd96c..5d632c4 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1898,18 +1898,12 @@ class Query(BaseExpression):\n         errors = []\n         for item in ordering:\n             if isinstance(item, str):\n-                if '.' in item:\n-                    warnings.warn(\n-                        'Passing column raw column aliases to order_by() is '\n-                        'deprecated. Wrap %r in a RawSQL expression before '\n-                        'passing it to order_by().' % item,\n-                        category=RemovedInDjango40Warning,\n-                        stacklevel=3,\n-                    )\n-                    continue\n                 if item == '?':\n                     continue\n+                # Handle negative sorting\n+                descending = False\n                 if item.startswith('-'):\n+                    descending = True\n                     item = item[1:]\n                 if item in self.annotations:\n                     continue\n@@ -1917,6 +1911,7 @@ class Query(BaseExpression):\n                     continue\n                 # names_to_path() validates the lookup. A descriptive\n                 # FieldError will be raise if it's not.\n+                # Handle both direct fields and relationship paths\n                 self.names_to_path(item.split(LOOKUP_SEP), self.model._meta)\n             elif not hasattr(item, 'resolve_expression'):\n                 errors.append(item)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 5d74201..e62f3ba 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1010,12 +1010,11 @@ class Query(BaseExpression):\n         errors = []\n         for item in ordering:\n             if isinstance(item, str):\n-                if '.' in item:\n-                    warnings.warn('Passing column raw column aliases to order_by() is deprecated. Wrap %r in a RawSQL expression before passing it to order_by().' % item, category=RemovedInDjango40Warning, stacklevel=3)\n-                    continue\n                 if item == '?':\n                     continue\n+                descending = False\n                 if item.startswith('-'):\n+                    descending = True\n                     item = item[1:]\n                 if item in self.annotations:\n                     continue\n", "normalized_occurrence": 1}
