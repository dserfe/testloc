{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-7521", "model_patch": "diff --git a/src/_pytest/capture.py b/src/_pytest/capture.py\nindex f40cad0..86dc1eb 100644\n--- a/src/_pytest/capture.py\n+++ b/src/_pytest/capture.py\n@@ -192,7 +192,7 @@ class EncodedFile(io.TextIOWrapper):\n \n class CaptureIO(io.TextIOWrapper):\n     def __init__(self) -> None:\n-        super().__init__(io.BytesIO(), encoding=\"UTF-8\", newline=\"\", write_through=True)\n+        super().__init__(io.BytesIO(), encoding=\"UTF-8\", newline=None, write_through=True)\n \n     def getvalue(self) -> str:\n         assert isinstance(self.buffer, io.BytesIO)\n", "occurrence": 32, "normalized_patch": "diff --git a/src/_pytest/capture.py b/src/_pytest/capture.py\nindex 230e591..518e082 100644\n--- a/src/_pytest/capture.py\n+++ b/src/_pytest/capture.py\n@@ -82,7 +82,7 @@ class EncodedFile(io.TextIOWrapper):\n         return self.buffer.mode.replace('b', '')\n class CaptureIO(io.TextIOWrapper):\n     def __init__(self) -> None:\n-        super().__init__(io.BytesIO(), encoding='UTF-8', newline='', write_through=True)\n+        super().__init__(io.BytesIO(), encoding='UTF-8', newline=None, write_through=True)\n     def getvalue(self) -> str:\n         assert isinstance(self.buffer, io.BytesIO)\n         return self.buffer.getvalue().decode('UTF-8')\n", "normalized_occurrence": 32}
