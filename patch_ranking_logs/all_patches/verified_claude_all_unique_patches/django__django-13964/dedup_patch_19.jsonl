{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13964", "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex dfd3a82..87ee6f2 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -925,7 +925,7 @@ class Model(metaclass=ModelBase):\n                 # database to raise an IntegrityError if applicable. If\n                 # constraints aren't supported by the database, there's the\n                 # unavoidable risk of data corruption.\n-                if obj.pk is None:\n+                if obj.pk is None or (isinstance(obj.pk, str) and not obj.pk):\n                     # Remove the object from a related instance cache.\n                     if not field.remote_field.multiple:\n                         field.remote_field.delete_cached_value(obj)\n", "occurrence": 5, "normalized_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex e6ddd1a..93b1789 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -489,7 +489,7 @@ class Model(metaclass=ModelBase):\n                 obj = getattr(self, field.name, None)\n                 if not obj:\n                     continue\n-                if obj.pk is None:\n+                if obj.pk is None or (isinstance(obj.pk, str) and (not obj.pk)):\n                     if not field.remote_field.multiple:\n                         field.remote_field.delete_cached_value(obj)\n                     raise ValueError(\"%s() prohibited to prevent data loss due to unsaved related object '%s'.\" % (operation_name, field.name))\n", "normalized_occurrence": 5}
