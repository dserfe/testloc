{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-19346", "model_patch": "diff --git a/sympy/printing/repr.py b/sympy/printing/repr.py\nindex b3c364b..3c27934 100644\n--- a/sympy/printing/repr.py\n+++ b/sympy/printing/repr.py\n@@ -218,6 +218,14 @@ class ReprPrinter(Printer):\n         r = mlib_to_str(expr._mpf_, repr_dps(expr._prec))\n         return \"%s('%s', precision=%i)\" % (expr.__class__.__name__, r, expr._prec)\n \n+    def _print_dict(self, expr):\n+        items = ', '.join(f\"{self._print(key)}: {self._print(value)}\" for key, value in expr.items())\n+        return f\"{{{items}}}\"\n+\n+    def _print_set(self, expr):\n+        items = ', '.join(self._print(item) for item in expr)\n+        return f\"{{{items}}}\"\n+\n     def _print_Sum2(self, expr):\n         return \"Sum2(%s, (%s, %s, %s))\" % (self._print(expr.f), self._print(expr.i),\n                                            self._print(expr.a), self._print(expr.b))\n", "occurrence": 1, "normalized_patch": "--- a/sympy/printing/repr.py\n+++ b/sympy/printing/repr.py\n+    def _print_dict(self, expr):\n+        items = ', '.join((f'{self._print(key)}: {self._print(value)}' for key, value in expr.items()))\n+        return f'{{{items}}}'\n+    def _print_set(self, expr):\n+        items = ', '.join((self._print(item) for item in expr))\n+        return f'{{{items}}}'", "normalized_occurrence": 1}
