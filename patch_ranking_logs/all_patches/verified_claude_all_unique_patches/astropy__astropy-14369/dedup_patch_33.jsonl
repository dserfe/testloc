{"model_name_or_path": "agentless_claude", "instance_id": "astropy__astropy-14369", "model_patch": "diff --git a/astropy/units/format/cds.py b/astropy/units/format/cds.py\nindex 761c4b8..ded30f0 100644\n--- a/astropy/units/format/cds.py\n+++ b/astropy/units/format/cds.py\n@@ -185,9 +185,21 @@ class CDS(Base):\n                               | unit_expression DIVISION combined_units\n             \"\"\"\n             if len(p) == 3:\n+                # Case: /unit_expression\n                 p[0] = p[2] ** -1\n             else:\n-                p[0] = p[1] / p[3]\n+                # Case: unit_expression/combined_units\n+                # Handle nested divisions properly by maintaining left-to-right order\n+                if hasattr(p[3], 'is_division'):\n+                    p[0] = (p[1] / p[3].left) / p[3].right\n+                    p[0].is_division = True\n+                    p[0].left = p[1]\n+                    p[0].right = p[3]\n+                else:\n+                    p[0] = p[1] / p[3]\n+                    p[0].is_division = True\n+                    p[0].left = p[1]\n+                    p[0].right = p[3]\n \n         def p_unit_expression(p):\n             \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/units/format/cds.py b/astropy/units/format/cds.py\nindex 829c8ad..8367b71 100644\n--- a/astropy/units/format/cds.py\n+++ b/astropy/units/format/cds.py\n@@ -81,8 +81,16 @@ class CDS(Base):\n         def p_division_of_units(p):\n             if len(p) == 3:\n                 p[0] = p[2] ** (-1)\n+            elif hasattr(p[3], 'is_division'):\n+                p[0] = p[1] / p[3].left / p[3].right\n+                p[0].is_division = True\n+                p[0].left = p[1]\n+                p[0].right = p[3]\n             else:\n                 p[0] = p[1] / p[3]\n+                p[0].is_division = True\n+                p[0].left = p[1]\n+                p[0].right = p[3]\n         def p_unit_expression(p):\n             if len(p) == 2:\n                 p[0] = p[1]\n", "normalized_occurrence": 1}
