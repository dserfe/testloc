{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-10949", "model_patch": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex 7e2fa63..c0d7736 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -546,8 +546,12 @@ def check_array(array, accept_sparse=False, accept_large_sparse=True,\n                 \"type np.float64 before passing it to check_array.\",\n                 FutureWarning)\n \n-        # make sure we actually converted to numeric:\n+        # make sure we actually converted to numeric and issue a warning if needed:\n         if dtype_numeric and array.dtype.kind == \"O\":\n+            if warn_on_dtype:\n+                msg = (\"Data with input dtype object was converted to float64%s.\"\n+                       % context)\n+                warnings.warn(msg, DataConversionWarning)\n             array = array.astype(np.float64)\n         if not allow_nd and array.ndim >= 3:\n             raise ValueError(\"Found array with dim %d. %s expected <= 2.\"\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex 7db8b51..1e6020d 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -167,6 +167,9 @@ def check_array(array, accept_sparse=False, accept_large_sparse=True, dtype='num\n         if dtype_numeric and np.issubdtype(array.dtype, np.flexible):\n             warnings.warn(\"Beginning in version 0.22, arrays of strings will be interpreted as decimal numbers if parameter 'dtype' is 'numeric'. It is recommended that you convert the array to type np.float64 before passing it to check_array.\", FutureWarning)\n         if dtype_numeric and array.dtype.kind == 'O':\n+            if warn_on_dtype:\n+                msg = 'Data with input dtype object was converted to float64%s.' % context\n+                warnings.warn(msg, DataConversionWarning)\n             array = array.astype(np.float64)\n         if not allow_nd and array.ndim >= 3:\n             raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim, estimator_name))\n", "normalized_occurrence": 1}
