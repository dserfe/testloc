{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-19487", "model_patch": "diff --git a/sympy/functions/elementary/miscellaneous.py b/sympy/functions/elementary/miscellaneous.py\nindex 6852819..65d519f 100644\n--- a/sympy/functions/elementary/miscellaneous.py\n+++ b/sympy/functions/elementary/miscellaneous.py\n@@ -643,6 +643,12 @@ class MinMaxBase(Expr, LatticeOp):\n             l.append(df * da)\n         return Add(*l)\n \n+    def _eval_rewrite_as_Abs(self, *args, **kwargs):\n+        from sympy.functions.elementary.complexes import Abs\n+        if args[0] == 0:\n+            return S.NaN\n+        return args[0] / Abs(args[0])\n+\n     def _eval_rewrite_as_Abs(self, *args, **kwargs):\n         from sympy.functions.elementary.complexes import Abs\n         s = (args[0] + self.func(*args[1:]))/2\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/miscellaneous.py b/sympy/functions/elementary/miscellaneous.py\nindex b26bc6b..3ad13a3 100644\n--- a/sympy/functions/elementary/miscellaneous.py\n+++ b/sympy/functions/elementary/miscellaneous.py\n@@ -230,6 +230,11 @@ class MinMaxBase(Expr, LatticeOp):\n                 df = Function.fdiff(self, i)\n             l.append(df * da)\n         return Add(*l)\n+    def _eval_rewrite_as_Abs(self, *args, **kwargs):\n+        from sympy.functions.elementary.complexes import Abs\n+        if args[0] == 0:\n+            return S.NaN\n+        return args[0] / Abs(args[0])\n     def _eval_rewrite_as_Abs(self, *args, **kwargs):\n         from sympy.functions.elementary.complexes import Abs\n         s = (args[0] + self.func(*args[1:])) / 2\n", "normalized_occurrence": 1}
