{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-23987", "model_patch": "diff --git a/lib/matplotlib/layout_engine.py b/lib/matplotlib/layout_engine.py\nindex 2a777f2..5e8b111 100644\n--- a/lib/matplotlib/layout_engine.py\n+++ b/lib/matplotlib/layout_engine.py\n@@ -191,6 +191,7 @@ class TightLayoutEngine(LayoutEngine):\n \n \n class ConstrainedLayoutEngine(LayoutEngine):\n+    _adjust_compatible = True  # Allow compatibility with subplots_adjust and tight_layout when constrained_layout=False\n     \"\"\"\n     Implements the ``constrained_layout`` geometry management.  See\n     :doc:`/tutorials/intermediate/constrainedlayout_guide` for details.\n@@ -247,6 +248,9 @@ class ConstrainedLayoutEngine(LayoutEngine):\n         ----------\n         fig : `.Figure` to perform layout on.\n         \"\"\"\n+        if not fig.get_constrained_layout():\n+            return  # Don't perform constrained layout if it's set to False\n+\n         width, height = fig.get_size_inches()\n         # pads are relative to the current state of the figure...\n         w_pad = self._params['w_pad'] / width\n@@ -283,4 +287,4 @@ class ConstrainedLayoutEngine(LayoutEngine):\n         \"\"\"\n         for td in self.set.__kwdefaults__:\n             if locals()[td] is not None:\n-                self._params[td] = locals()[td]\n+                self._params[td] = locals()[td]\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/layout_engine.py b/lib/matplotlib/layout_engine.py\nindex 2879487..70fcd33 100644\n--- a/lib/matplotlib/layout_engine.py\n+++ b/lib/matplotlib/layout_engine.py\n@@ -55,6 +55,7 @@ class TightLayoutEngine(LayoutEngine):\n             if locals()[td] is not None:\n                 self._params[td] = locals()[td]\n class ConstrainedLayoutEngine(LayoutEngine):\n+    _adjust_compatible = True\n     _adjust_compatible = False\n     _colorbar_gridspec = False\n     def __init__(self, *, h_pad=None, w_pad=None, hspace=None, wspace=None, rect=(0, 0, 1, 1), compress=False, **kwargs):\n@@ -63,6 +64,8 @@ class ConstrainedLayoutEngine(LayoutEngine):\n         self.set(w_pad=w_pad, h_pad=h_pad, wspace=wspace, hspace=hspace, rect=rect)\n         self._compress = compress\n     def execute(self, fig):\n+        if not fig.get_constrained_layout():\n+            return\n         width, height = fig.get_size_inches()\n         w_pad = self._params['w_pad'] / width\n         h_pad = self._params['h_pad'] / height\n", "normalized_occurrence": 1}
