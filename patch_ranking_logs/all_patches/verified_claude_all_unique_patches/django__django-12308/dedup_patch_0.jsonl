{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12308", "model_patch": "diff --git a/django/contrib/admin/utils.py b/django/contrib/admin/utils.py\nindex 07cdaa5..1d41b91 100644\n--- a/django/contrib/admin/utils.py\n+++ b/django/contrib/admin/utils.py\n@@ -377,29 +377,7 @@ def help_text_for_field(name, model):\n     return help_text\n \n \n-def display_for_field(value, field, empty_value_display):\n-    from django.contrib.admin.templatetags.admin_list import _boolean_icon\n \n-    if getattr(field, 'flatchoices', None):\n-        return dict(field.flatchoices).get(value, empty_value_display)\n-    # BooleanField needs special-case null-handling, so it comes before the\n-    # general null test.\n-    elif isinstance(field, models.BooleanField):\n-        return _boolean_icon(value)\n-    elif value is None:\n-        return empty_value_display\n-    elif isinstance(field, models.DateTimeField):\n-        return formats.localize(timezone.template_localtime(value))\n-    elif isinstance(field, (models.DateField, models.TimeField)):\n-        return formats.localize(value)\n-    elif isinstance(field, models.DecimalField):\n-        return formats.number_format(value, field.decimal_places)\n-    elif isinstance(field, (models.IntegerField, models.FloatField)):\n-        return formats.number_format(value)\n-    elif isinstance(field, models.FileField) and value:\n-        return format_html('<a href=\"{}\">{}</a>', value.url, value)\n-    else:\n-        return display_for_value(value, empty_value_display)\n \n \n def display_for_value(value, empty_value_display, boolean=False):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/utils.py b/django/contrib/admin/utils.py\nindex 3190d3c..968f62e 100644\n--- a/django/contrib/admin/utils.py\n+++ b/django/contrib/admin/utils.py\n@@ -233,26 +233,6 @@ def help_text_for_field(name, model):\n         if hasattr(field, 'help_text'):\n             help_text = field.help_text\n     return help_text\n-def display_for_field(value, field, empty_value_display):\n-    from django.contrib.admin.templatetags.admin_list import _boolean_icon\n-    if getattr(field, 'flatchoices', None):\n-        return dict(field.flatchoices).get(value, empty_value_display)\n-    elif isinstance(field, models.BooleanField):\n-        return _boolean_icon(value)\n-    elif value is None:\n-        return empty_value_display\n-    elif isinstance(field, models.DateTimeField):\n-        return formats.localize(timezone.template_localtime(value))\n-    elif isinstance(field, (models.DateField, models.TimeField)):\n-        return formats.localize(value)\n-    elif isinstance(field, models.DecimalField):\n-        return formats.number_format(value, field.decimal_places)\n-    elif isinstance(field, (models.IntegerField, models.FloatField)):\n-        return formats.number_format(value)\n-    elif isinstance(field, models.FileField) and value:\n-        return format_html('<a href=\"{}\">{}</a>', value.url, value)\n-    else:\n-        return display_for_value(value, empty_value_display)\n def display_for_value(value, empty_value_display, boolean=False):\n     from django.contrib.admin.templatetags.admin_list import _boolean_icon\n     if boolean:\n", "normalized_occurrence": 1}
