{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-23262", "model_patch": "diff --git a/sympy/printing/pycode.py b/sympy/printing/pycode.py\nindex 9b53255..77c5f2d 100644\n--- a/sympy/printing/pycode.py\n+++ b/sympy/printing/pycode.py\n@@ -739,4 +739,9 @@ class SymPyPrinter(AbstractPythonCodePrinter):\n                            ', '.join(map(lambda arg: self._print(arg), expr.args)))\n \n     def _print_Pow(self, expr, rational=False):\n-        return self._hprint_Pow(expr, rational=rational, sqrt='sympy.sqrt')\n+        return self._hprint_Pow(expr, rational=rational, sqrt='sympy.sqrt')\n+\n+    def _print_Tuple(self, expr):\n+        if len(expr) == 1:\n+            return \"(%s,)\" % self._print(expr[0])\n+        return \"(%s)\" % self.stringify(expr, \", \")\n", "occurrence": 1, "normalized_patch": "--- a/sympy/printing/pycode.py\n+++ b/sympy/printing/pycode.py\n-        return self._hprint_Pow(expr, rational=rational, sqrt='sympy.sqrt')\n+        return self._hprint_Pow(expr, rational=rational, sqrt='sympy.sqrt')\n+    def _print_Tuple(self, expr):\n+        if len(expr) == 1:\n+            return '(%s,)' % self._print(expr[0])\n+        return '(%s)' % self.stringify(expr, ', ')", "normalized_occurrence": 1}
