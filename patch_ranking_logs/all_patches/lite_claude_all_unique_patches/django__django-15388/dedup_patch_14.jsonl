{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15388", "model_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex dcf3cdd..6b6f029 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -284,6 +284,9 @@ class BaseReloader:\n                 exc_info=True,\n             )\n             return\n+        # Skip watching certain problematic directories\n+        if any(part in str(path) for part in ['__pycache__', '.git', 'node_modules', '.idea']):\n+            return\n         logger.debug('Watching dir %s with glob %s.', path, glob)\n         self.directory_globs[path].add(glob)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex 4cc598a..ffdea7d 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -177,6 +177,8 @@ class BaseReloader:\n         except FileNotFoundError:\n             logger.debug('Unable to watch directory %s as it cannot be resolved.', path, exc_info=True)\n             return\n+        if any((part in str(path) for part in ['__pycache__', '.git', 'node_modules', '.idea'])):\n+            return\n         logger.debug('Watching dir %s with glob %s.', path, glob)\n         self.directory_globs[path].add(glob)\n     def watched_files(self, include_globs=True):\n", "normalized_occurrence": 1}
