{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-15976", "model_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 85af872..9952051 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -778,10 +778,11 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n         subs = [translate(sub) for sub in subs]\n \n         mname = self.dom.createElement('mi')\n-        mname.appendChild(self.dom.createTextNode(name))\n+        # Ensure the entire name is preserved as one unit\n+        mname.appendChild(self.dom.createTextNode(str(name)))\n         if len(supers) == 0:\n             if len(subs) == 0:\n-                x.appendChild(self.dom.createTextNode(name))\n+                x.appendChild(self.dom.createTextNode(str(name)))\n             else:\n                 msub = self.dom.createElement('msub')\n                 msub.appendChild(mname)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 28d3e1a..13d6386 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -545,10 +545,10 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n         supers = [translate(sup) for sup in supers]\n         subs = [translate(sub) for sub in subs]\n         mname = self.dom.createElement('mi')\n-        mname.appendChild(self.dom.createTextNode(name))\n+        mname.appendChild(self.dom.createTextNode(str(name)))\n         if len(supers) == 0:\n             if len(subs) == 0:\n-                x.appendChild(self.dom.createTextNode(name))\n+                x.appendChild(self.dom.createTextNode(str(name)))\n             else:\n                 msub = self.dom.createElement('msub')\n                 msub.appendChild(mname)\n", "normalized_occurrence": 2}
