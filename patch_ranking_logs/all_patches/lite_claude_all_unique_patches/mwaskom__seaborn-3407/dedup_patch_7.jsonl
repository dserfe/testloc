{"model_name_or_path": "agentless_claude", "instance_id": "mwaskom__seaborn-3407", "model_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 29c361e..286490c 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -1665,8 +1665,20 @@ class PairGrid(Grid):\n         \"\"\"Find which variables in a DataFrame are numeric.\"\"\"\n         numeric_cols = []\n         for col in data:\n-            if variable_type(data[col]) == \"numeric\":\n-                numeric_cols.append(col)\n+            try:\n+                if variable_type(data[col]) == \"numeric\":\n+                    numeric_cols.append(col)\n+            except KeyError:\n+                # Handle the case where the column is part of a MultiIndex\n+                if isinstance(data.columns, pd.MultiIndex):\n+                    # Flatten the MultiIndex column names\n+                    data.columns = [\n+                        col if not isinstance(col, tuple)\n+                        else \"\".join(str(c) for c in col)\n+                        for col in data.columns\n+                    ]\n+                    # Retry with flattened columns\n+                    return self._find_numeric_cols(data)\n         return numeric_cols\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 039b44a..6440aab 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -793,8 +793,13 @@ class PairGrid(Grid):\n     def _find_numeric_cols(self, data):\n         numeric_cols = []\n         for col in data:\n-            if variable_type(data[col]) == 'numeric':\n-                numeric_cols.append(col)\n+            try:\n+                if variable_type(data[col]) == 'numeric':\n+                    numeric_cols.append(col)\n+            except KeyError:\n+                if isinstance(data.columns, pd.MultiIndex):\n+                    data.columns = [col if not isinstance(col, tuple) else ''.join((str(c) for c in col)) for col in data.columns]\n+                    return self._find_numeric_cols(data)\n         return numeric_cols\n class JointGrid(_BaseGrid):\n     def __init__(self, data=None, *, x=None, y=None, hue=None, height=6, ratio=5, space=0.2, palette=None, hue_order=None, hue_norm=None, dropna=False, xlim=None, ylim=None, marginal_ticks=False):\n", "normalized_occurrence": 1}
