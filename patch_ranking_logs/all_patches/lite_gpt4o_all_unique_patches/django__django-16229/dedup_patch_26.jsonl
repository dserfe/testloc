{"model_name_or_path": "agentless", "instance_id": "django__django-16229", "model_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 5264b71..7f9ee91 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -374,7 +374,11 @@ class BaseModelForm(BaseForm, AltersData):\n             use_required_attribute=use_required_attribute,\n             renderer=renderer,\n         )\n-        for formfield in self.fields.values():\n+        for name, formfield in self.fields.items():\n+            initial_prefixed = self.add_initial_prefix(name)\n+            initial_data = self._widget_data_value(formfield.widget, initial_prefixed)\n+            if not self.is_bound and initial_data != self.initial.get(name):\n+                self.initial[name] = initial_data\n             apply_limit_choices_to_to_formfield(formfield)\n \n     def _get_validation_exclusions(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex a9413ca..10ffb91 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -152,7 +152,11 @@ class BaseModelForm(BaseForm, AltersData):\n             object_data.update(initial)\n         self._validate_unique = False\n         super().__init__(data, files, auto_id, prefix, object_data, error_class, label_suffix, empty_permitted, use_required_attribute=use_required_attribute, renderer=renderer)\n-        for formfield in self.fields.values():\n+        for name, formfield in self.fields.items():\n+            initial_prefixed = self.add_initial_prefix(name)\n+            initial_data = self._widget_data_value(formfield.widget, initial_prefixed)\n+            if not self.is_bound and initial_data != self.initial.get(name):\n+                self.initial[name] = initial_data\n             apply_limit_choices_to_to_formfield(formfield)\n     def _get_validation_exclusions(self):\n         exclude = set()\n", "normalized_occurrence": 1}
