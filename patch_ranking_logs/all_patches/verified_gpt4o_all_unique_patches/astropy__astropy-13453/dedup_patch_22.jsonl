{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-13453", "model_patch": "diff --git a/astropy/io/ascii/html.py b/astropy/io/ascii/html.py\nindex 1220930..beeb1f9 100644\n--- a/astropy/io/ascii/html.py\n+++ b/astropy/io/ascii/html.py\n@@ -366,7 +366,14 @@ class HTML(core.BaseReader):\n         # Kwargs that get passed on to bleach.clean() if that is available.\n         raw_html_clean_kwargs = self.html.get('raw_html_clean_kwargs', {})\n \n-        # Use XMLWriter to output HTML to lines\n+        # Get the formats argument if provided\n+        formats = kwargs.get('formats', {})\n+\n+        # Prepare an iterator for column values, applying formats if specified\n+        def format_col_value(col, val):\n+            if col.info.name in formats:\n+                return formats[col.info.name](val)\n+            return val\n         w = writer.XMLWriter(ListWriter(lines))\n \n         with w.tag('html'):\n@@ -437,7 +444,7 @@ class HTML(core.BaseReader):\n                                     new_cols.append(new_col)\n                             else:\n \n-                                col_iter_str_vals = self.fill_values(col, col.info.iter_str_vals())\n+                                col_iter_str_vals = self.fill_values(col, (format_col_value(col, val) for val in col.info.iter_str_vals()))\n                                 col_str_iters.append(col_iter_str_vals)\n \n                                 new_cols_escaped.append(col_escaped)\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/io/ascii/html.py b/astropy/io/ascii/html.py\nindex 45fa153..60e71be 100644\n--- a/astropy/io/ascii/html.py\n+++ b/astropy/io/ascii/html.py\n@@ -162,6 +162,11 @@ class HTML(core.BaseReader):\n             raw_html_cols = [raw_html_cols]\n         cols_escaped = [col.info.name not in raw_html_cols for col in cols]\n         raw_html_clean_kwargs = self.html.get('raw_html_clean_kwargs', {})\n+        formats = kwargs.get('formats', {})\n+        def format_col_value(col, val):\n+            if col.info.name in formats:\n+                return formats[col.info.name](val)\n+            return val\n         w = writer.XMLWriter(ListWriter(lines))\n         with w.tag('html'):\n             with w.tag('head'):\n@@ -217,7 +222,7 @@ class HTML(core.BaseReader):\n                                     new_cols_escaped.append(col_escaped)\n                                     new_cols.append(new_col)\n                             else:\n-                                col_iter_str_vals = self.fill_values(col, col.info.iter_str_vals())\n+                                col_iter_str_vals = self.fill_values(col, (format_col_value(col, val) for val in col.info.iter_str_vals()))\n                                 col_str_iters.append(col_iter_str_vals)\n                                 new_cols_escaped.append(col_escaped)\n                     for row in zip(*col_str_iters):\n", "normalized_occurrence": 1}
