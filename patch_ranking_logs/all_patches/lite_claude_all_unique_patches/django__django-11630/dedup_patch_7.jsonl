{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11630", "model_patch": "diff --git a/django/core/checks/model_checks.py b/django/core/checks/model_checks.py\nindex 231b761..1fc1655 100644\n--- a/django/core/checks/model_checks.py\n+++ b/django/core/checks/model_checks.py\n@@ -1,3 +1,4 @@\n+\n import inspect\n import types\n from collections import defaultdict\n@@ -37,14 +38,24 @@ def check_all_models(app_configs=None, **kwargs):\n             constraints[model_constraint.name].append(model._meta.label)\n     for db_table, model_labels in db_table_models.items():\n         if len(model_labels) != 1:\n-            errors.append(\n-                Error(\n-                    \"db_table '%s' is used by multiple models: %s.\"\n-                    % (db_table, ', '.join(db_table_models[db_table])),\n-                    obj=db_table,\n-                    id='models.E028',\n-                )\n-            )\n+            # Group models by their database\n+            db_groups = {}\n+            for model_label in model_labels:\n+                model = apps.get_model(model_label)\n+                db = model._meta.app_config.default_database if hasattr(model._meta.app_config, 'default_database') else 'default'\n+                db_groups.setdefault(db, []).append(model_label)\n+            \n+            # Only raise error if multiple models share same table name in same database\n+            for db_models in db_groups.values():\n+                if len(db_models) > 1:\n+                    errors.append(\n+                        Error(\n+                            \"db_table '%s' is used by multiple models in the same database: %s.\"\n+                            % (db_table, ', '.join(db_models)),\n+                            obj=db_table,\n+                            id='models.E028',\n+                        )\n+                    )\n     for index_name, model_labels in indexes.items():\n         if len(model_labels) > 1:\n             model_labels = set(model_labels)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/checks/model_checks.py b/django/core/checks/model_checks.py\nindex 8001d47..f20e413 100644\n--- a/django/core/checks/model_checks.py\n+++ b/django/core/checks/model_checks.py\n@@ -27,7 +27,14 @@ def check_all_models(app_configs=None, **kwargs):\n             constraints[model_constraint.name].append(model._meta.label)\n     for db_table, model_labels in db_table_models.items():\n         if len(model_labels) != 1:\n-            errors.append(Error(\"db_table '%s' is used by multiple models: %s.\" % (db_table, ', '.join(db_table_models[db_table])), obj=db_table, id='models.E028'))\n+            db_groups = {}\n+            for model_label in model_labels:\n+                model = apps.get_model(model_label)\n+                db = model._meta.app_config.default_database if hasattr(model._meta.app_config, 'default_database') else 'default'\n+                db_groups.setdefault(db, []).append(model_label)\n+            for db_models in db_groups.values():\n+                if len(db_models) > 1:\n+                    errors.append(Error(\"db_table '%s' is used by multiple models in the same database: %s.\" % (db_table, ', '.join(db_models)), obj=db_table, id='models.E028'))\n     for index_name, model_labels in indexes.items():\n         if len(model_labels) > 1:\n             model_labels = set(model_labels)\n", "normalized_occurrence": 1}
