{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-24627", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex eec4e31..3ef6d48 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1403,8 +1403,22 @@ class _AxesBase(martist.Artist):\n \n     def cla(self):\n         \"\"\"Clear the Axes.\"\"\"\n-        # Act as an alias, or as the superclass implementation depending on the\n-        # subclass implementation.\n+        for artist in self.artists:\n+            artist.set_axes(None)\n+        for line in self.lines:\n+            line.set_axes(None)\n+        for text in self.texts:\n+            text.set_axes(None)\n+        for patch in self.patches:\n+            patch.set_axes(None)\n+        for collection in self.collections:\n+            collection.set_axes(None)\n+        for image in self.images:\n+            image.set_axes(None)\n+        for table in self.tables:\n+            table.set_axes(None)\n+        for container in self.containers:\n+            container.set_axes(None)\n         if self._subclass_uses_cla:\n             self.__clear()\n         else:\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex ec4e745..385362a 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -601,6 +601,22 @@ class _AxesBase(martist.Artist):\n         else:\n             self.__clear()\n     def cla(self):\n+        for artist in self.artists:\n+            artist.set_axes(None)\n+        for line in self.lines:\n+            line.set_axes(None)\n+        for text in self.texts:\n+            text.set_axes(None)\n+        for patch in self.patches:\n+            patch.set_axes(None)\n+        for collection in self.collections:\n+            collection.set_axes(None)\n+        for image in self.images:\n+            image.set_axes(None)\n+        for table in self.tables:\n+            table.set_axes(None)\n+        for container in self.containers:\n+            container.set_axes(None)\n         if self._subclass_uses_cla:\n             self.__clear()\n         else:\n", "normalized_occurrence": 1}
