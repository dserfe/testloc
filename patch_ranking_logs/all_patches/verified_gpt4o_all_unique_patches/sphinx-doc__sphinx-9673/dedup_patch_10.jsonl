{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9673", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 51811ca..6f27fcb 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -64,7 +64,13 @@ def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element\n             if app.config.autodoc_typehints_description_target == \"all\":\n                 modify_field_list(field_list, annotations[fullname])\n             else:\n-                augment_descriptions_with_types(field_list, annotations[fullname])\n+                if 'return' in annotations[fullname]:\n+                    return_field = nodes.field()\n+                    return_field += nodes.field_name(text='Return type')\n+                    return_field += nodes.field_body(text=annotations[fullname]['return'])\n+                    field_list += return_field\n+                else:\n+                    augment_descriptions_with_types(field_list, annotations[fullname])\n \n \n def insert_field_list(node: Element) -> nodes.field_list:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 03a755b..66930d2 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -41,6 +41,11 @@ def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element\n         for field_list in field_lists:\n             if app.config.autodoc_typehints_description_target == 'all':\n                 modify_field_list(field_list, annotations[fullname])\n+            elif 'return' in annotations[fullname]:\n+                return_field = nodes.field()\n+                return_field += nodes.field_name(text='Return type')\n+                return_field += nodes.field_body(text=annotations[fullname]['return'])\n+                field_list += return_field\n             else:\n                 augment_descriptions_with_types(field_list, annotations[fullname])\n def insert_field_list(node: Element) -> nodes.field_list:\n", "normalized_occurrence": 1}
