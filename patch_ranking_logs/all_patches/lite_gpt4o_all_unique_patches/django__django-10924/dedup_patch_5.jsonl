{"model_name_or_path": "agentless", "instance_id": "django__django-10924", "model_patch": "diff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py\nindex 73109d9..6b8c70f 100644\n--- a/django/db/models/fields/files.py\n+++ b/django/db/models/fields/files.py\n@@ -282,6 +282,11 @@ class FileField(Field):\n         return str(value)\n \n     def pre_save(self, model_instance, add):\n+        if callable(self.path):\n+            path = self.path(model_instance)\n+        else:\n+            path = self.path\n+        \n         file = super().pre_save(model_instance, add)\n         if file and not file._committed:\n             # Commit the file to storage prior to saving the model\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py\nindex 782a310..d4c6abe 100644\n--- a/django/db/models/fields/files.py\n+++ b/django/db/models/fields/files.py\n@@ -153,6 +153,10 @@ class FileField(Field):\n             return None\n         return str(value)\n     def pre_save(self, model_instance, add):\n+        if callable(self.path):\n+            path = self.path(model_instance)\n+        else:\n+            path = self.path\n         file = super().pre_save(model_instance, add)\n         if file and (not file._committed):\n             file.save(file.name, file.file, save=False)\n", "normalized_occurrence": 1}
