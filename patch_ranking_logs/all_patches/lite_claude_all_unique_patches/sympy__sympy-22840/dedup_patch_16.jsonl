{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-22840", "model_patch": "diff --git a/sympy/matrices/expressions/matexpr.py b/sympy/matrices/expressions/matexpr.py\nindex e84863b..fb990df 100644\n--- a/sympy/matrices/expressions/matexpr.py\n+++ b/sympy/matrices/expressions/matexpr.py\n@@ -684,7 +684,9 @@ class MatrixSymbol(MatrixExpr):\n         return self.args[0].name\n \n     def _entry(self, i, j, **kwargs):\n-        return MatrixElement(self, i, j)\n+        # Convert to linear indexing for proper code generation\n+        n = self.shape[1]\n+        return MatrixElement(self, i*n + j)\n \n     @property\n     def free_symbols(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/expressions/matexpr.py b/sympy/matrices/expressions/matexpr.py\nindex 7f0177d..91c6f5a 100644\n--- a/sympy/matrices/expressions/matexpr.py\n+++ b/sympy/matrices/expressions/matexpr.py\n@@ -397,7 +397,8 @@ class MatrixSymbol(MatrixExpr):\n     def name(self):\n         return self.args[0].name\n     def _entry(self, i, j, **kwargs):\n-        return MatrixElement(self, i, j)\n+        n = self.shape[1]\n+        return MatrixElement(self, i * n + j)\n     @property\n     def free_symbols(self):\n         return {self}\n", "normalized_occurrence": 1}
