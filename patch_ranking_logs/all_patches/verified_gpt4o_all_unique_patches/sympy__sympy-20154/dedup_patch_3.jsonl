{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-20154", "model_patch": "diff --git a/sympy/utilities/iterables.py b/sympy/utilities/iterables.py\nindex aef37ab..b6208e2 100644\n--- a/sympy/utilities/iterables.py\n+++ b/sympy/utilities/iterables.py\n@@ -1801,10 +1801,12 @@ def partitions(n, m=None, k=None, size=False):\n         ms[r] = 1\n         keys.append(r)\n     room = m - q - bool(r)\n+    from copy import deepcopy\n+    \n     if size:\n-        yield sum(ms.values()), ms\n+        yield sum(ms.values()), deepcopy(ms)\n     else:\n-        yield ms\n+        yield deepcopy(ms)\n \n     while keys != [1]:\n         # Reuse any 1's.\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/utilities/iterables.py b/sympy/utilities/iterables.py\nindex 0befff2..593c136 100644\n--- a/sympy/utilities/iterables.py\n+++ b/sympy/utilities/iterables.py\n@@ -602,10 +602,11 @@ def partitions(n, m=None, k=None, size=False):\n         ms[r] = 1\n         keys.append(r)\n     room = m - q - bool(r)\n+    from copy import deepcopy\n     if size:\n-        yield (sum(ms.values()), ms)\n+        yield (sum(ms.values()), deepcopy(ms))\n     else:\n-        yield ms\n+        yield deepcopy(ms)\n     while keys != [1]:\n         if keys[-1] == 1:\n             del keys[-1]\n", "normalized_occurrence": 1}
