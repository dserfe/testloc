{"model_name_or_path": "agentless", "instance_id": "django__django-15695", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex b086232..e1e220c 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -974,7 +974,11 @@ class RenameIndex(IndexOperation):\n             self.old_name_lower,\n             self.new_name_lower,\n         )\n+        # Preserve the old name for auto-generated name restoration\n+        original_old_name = self.old_name\n         self.new_name, self.old_name = self.old_name, self.new_name\n+        self.database_forwards(app_label, schema_editor, from_state, to_state)\n+        self.old_name = original_old_name\n \n         self.database_forwards(app_label, schema_editor, from_state, to_state)\n \n@@ -982,7 +986,11 @@ class RenameIndex(IndexOperation):\n             self.old_name_lower,\n             self.new_name_lower,\n         )\n+        # Preserve the old name for auto-generated name restoration\n+        original_old_name = self.old_name\n         self.new_name, self.old_name = self.old_name, self.new_name\n+        self.database_forwards(app_label, schema_editor, from_state, to_state)\n+        self.old_name = original_old_name\n \n     def describe(self):\n         if self.old_name:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 87ad28e..5ada5f5 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -438,10 +438,16 @@ class RenameIndex(IndexOperation):\n         if self.old_fields:\n             return\n         self.new_name_lower, self.old_name_lower = (self.old_name_lower, self.new_name_lower)\n+        original_old_name = self.old_name\n         self.new_name, self.old_name = (self.old_name, self.new_name)\n         self.database_forwards(app_label, schema_editor, from_state, to_state)\n+        self.old_name = original_old_name\n+        self.database_forwards(app_label, schema_editor, from_state, to_state)\n         self.new_name_lower, self.old_name_lower = (self.old_name_lower, self.new_name_lower)\n+        original_old_name = self.old_name\n         self.new_name, self.old_name = (self.old_name, self.new_name)\n+        self.database_forwards(app_label, schema_editor, from_state, to_state)\n+        self.old_name = original_old_name\n     def describe(self):\n         if self.old_name:\n             return f'Rename index {self.old_name} on {self.model_name} to {self.new_name}'\n", "normalized_occurrence": 1}
