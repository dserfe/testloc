{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-18087", "model_patch": "diff --git a/sympy/functions/elementary/trigonometric.py b/sympy/functions/elementary/trigonometric.py\nindex 5205b6e..64060c0 100644\n--- a/sympy/functions/elementary/trigonometric.py\n+++ b/sympy/functions/elementary/trigonometric.py\n@@ -571,7 +571,8 @@ class cos(TrigonometricFunction):\n             return arg._eval_func(cls)\n \n         if arg.could_extract_minus_sign():\n-            return cls(-arg)\n+            x = abs(arg)\n+            return cls(x) if x == arg else -cls(x)\n \n         i_coeff = arg.as_coefficient(S.ImaginaryUnit)\n         if i_coeff is not None:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/trigonometric.py b/sympy/functions/elementary/trigonometric.py\nindex bfdabb3..d75496c 100644\n--- a/sympy/functions/elementary/trigonometric.py\n+++ b/sympy/functions/elementary/trigonometric.py\n@@ -332,7 +332,8 @@ class cos(TrigonometricFunction):\n         elif isinstance(arg, SetExpr):\n             return arg._eval_func(cls)\n         if arg.could_extract_minus_sign():\n-            return cls(-arg)\n+            x = abs(arg)\n+            return cls(x) if x == arg else -cls(x)\n         i_coeff = arg.as_coefficient(S.ImaginaryUnit)\n         if i_coeff is not None:\n             return cosh(i_coeff)\n", "normalized_occurrence": 1}
