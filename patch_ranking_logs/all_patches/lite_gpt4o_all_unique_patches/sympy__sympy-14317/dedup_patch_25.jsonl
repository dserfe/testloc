{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-14317", "model_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 408ff45..b4a5ab2 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1854,7 +1854,23 @@ class LatexPrinter(Printer):\n \n     def _print_Poly(self, poly):\n         cls = poly.__class__.__name__\n-        expr = self._print(poly.as_expr())\n+        terms = []\n+        for monom, coeff in poly.terms():\n+            s_monom = []\n+            for gen, exp in zip(poly.gens, monom):\n+                if exp == 1:\n+                    s_monom.append(self._print(gen))\n+                elif exp > 1:\n+                    s_monom.append(f\"{self._print(gen)}^{exp}\")\n+            if coeff == 1 and s_monom:\n+                terms.append(\"*\".join(s_monom))\n+            elif coeff == -1 and s_monom:\n+                terms.append(\"-\" + \"*\".join(s_monom))\n+            elif s_monom:\n+                terms.append(f\"{self._print(coeff)}*{'*'.join(s_monom)}\")\n+            else:\n+                terms.append(self._print(coeff))\n+        expr = \" + \".join(terms)\n         gens = list(map(self._print, poly.gens))\n         domain = \"domain=%s\" % self._print(poly.get_domain())\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 5a18831..fb6437a 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1241,7 +1241,23 @@ class LatexPrinter(Printer):\n         return '%s%s\\\\left[%s\\\\right]' % (inv, domain, symbols)\n     def _print_Poly(self, poly):\n         cls = poly.__class__.__name__\n-        expr = self._print(poly.as_expr())\n+        terms = []\n+        for monom, coeff in poly.terms():\n+            s_monom = []\n+            for gen, exp in zip(poly.gens, monom):\n+                if exp == 1:\n+                    s_monom.append(self._print(gen))\n+                elif exp > 1:\n+                    s_monom.append(f'{self._print(gen)}^{exp}')\n+            if coeff == 1 and s_monom:\n+                terms.append('*'.join(s_monom))\n+            elif coeff == -1 and s_monom:\n+                terms.append('-' + '*'.join(s_monom))\n+            elif s_monom:\n+                terms.append(f\"{self._print(coeff)}*{'*'.join(s_monom)}\")\n+            else:\n+                terms.append(self._print(coeff))\n+        expr = ' + '.join(terms)\n         gens = list(map(self._print, poly.gens))\n         domain = 'domain=%s' % self._print(poly.get_domain())\n         args = ', '.join([expr] + gens + [domain])\n", "normalized_occurrence": 1}
