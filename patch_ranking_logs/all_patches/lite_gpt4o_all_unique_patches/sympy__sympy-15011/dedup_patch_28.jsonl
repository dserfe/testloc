{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-15011", "model_patch": "diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py\nindex 48d6783..ea13de4 100644\n--- a/sympy/utilities/lambdify.py\n+++ b/sympy/utilities/lambdify.py\n@@ -728,6 +728,15 @@ class _EvaluatorPrinter(object):\n             elif isinstance(arg, Symbol):\n                 argrep = self._argrepr(arg)\n \n+                # Allow symbols with curly braces to be dummified\n+                if dummify or not self._is_safe_ident(argrep) or '{' in argrep or '}' in argrep:\n+                    dummy = Dummy()\n+                    argstrs.append(self._argrepr(dummy))\n+                    expr = self._subexpr(expr, {arg: dummy})\n+                else:\n+                    argstrs.append(argrep)\n+                argrep = self._argrepr(arg)\n+\n                 if dummify or not self._is_safe_ident(argrep):\n                     dummy = Dummy()\n                     argstrs.append(self._argrepr(dummy))\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py\nindex 9997e01..f1cffff 100644\n--- a/sympy/utilities/lambdify.py\n+++ b/sympy/utilities/lambdify.py\n@@ -296,6 +296,13 @@ class _EvaluatorPrinter(object):\n                 argstrs.append(str(arg))\n             elif isinstance(arg, Symbol):\n                 argrep = self._argrepr(arg)\n+                if dummify or not self._is_safe_ident(argrep) or '{' in argrep or ('}' in argrep):\n+                    dummy = Dummy()\n+                    argstrs.append(self._argrepr(dummy))\n+                    expr = self._subexpr(expr, {arg: dummy})\n+                else:\n+                    argstrs.append(argrep)\n+                argrep = self._argrepr(arg)\n                 if dummify or not self._is_safe_ident(argrep):\n                     dummy = Dummy()\n                     argstrs.append(self._argrepr(dummy))\n", "normalized_occurrence": 1}
