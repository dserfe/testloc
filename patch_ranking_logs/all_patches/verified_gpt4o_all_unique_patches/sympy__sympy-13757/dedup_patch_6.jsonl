{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13757", "model_patch": "diff --git a/sympy/polys/polytools.py b/sympy/polys/polytools.py\nindex c4501f6..6e40458 100644\n--- a/sympy/polys/polytools.py\n+++ b/sympy/polys/polytools.py\n@@ -4049,13 +4049,13 @@ class Poly(Expr):\n \n     @_sympifyit('g', NotImplemented)\n     def __rmul__(f, g):\n-        if not g.is_Poly:\n+        if not isinstance(g, Poly):\n             try:\n                 g = f.__class__(g, *f.gens)\n             except PolynomialError:\n-                return g*f.as_expr()\n+                return f.as_expr() * g\n \n-        return g.mul(f)\n+        return g * f.as_expr()\n \n     @_sympifyit('n', NotImplemented)\n     def __pow__(f, n):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/polytools.py b/sympy/polys/polytools.py\nindex 69acdb8..1c66cdb 100644\n--- a/sympy/polys/polytools.py\n+++ b/sympy/polys/polytools.py\n@@ -1261,12 +1261,12 @@ class Poly(Expr):\n         return f.mul(g)\n     @_sympifyit('g', NotImplemented)\n     def __rmul__(f, g):\n-        if not g.is_Poly:\n+        if not isinstance(g, Poly):\n             try:\n                 g = f.__class__(g, *f.gens)\n             except PolynomialError:\n-                return g * f.as_expr()\n-        return g.mul(f)\n+                return f.as_expr() * g\n+        return g * f.as_expr()\n     @_sympifyit('n', NotImplemented)\n     def __pow__(f, n):\n         if n.is_Integer and n >= 0:\n", "normalized_occurrence": 1}
