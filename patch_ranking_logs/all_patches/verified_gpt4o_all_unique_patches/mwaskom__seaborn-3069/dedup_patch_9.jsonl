{"model_name_or_path": "agentless", "instance_id": "mwaskom__seaborn-3069", "model_patch": "diff --git a/seaborn/_core/scales.py b/seaborn/_core/scales.py\nindex 1e10d58..bf5158f 100644\n--- a/seaborn/_core/scales.py\n+++ b/seaborn/_core/scales.py\n@@ -184,13 +184,16 @@ class Nominal(Scale):\n                 # axis.set_major_formatter(major_formatter)\n \n         mpl_scale = CatScale(data.name)\n+        padding = (0.5, (len(units_seed) - 1) + 0.5)\n+        \n         if axis is None:\n             axis = PseudoAxis(mpl_scale)\n-\n-            # TODO Currently just used in non-Coordinate contexts, but should\n-            # we use this to (A) set the padding we want for categorial plots\n-            # and (B) allow the values parameter for a Coordinate to set xlim/ylim\n-            axis.set_view_interval(0, len(units_seed) - 1)\n+            \n+            # Set padding and margins for categorical plots\n+            axis.set_view_interval(*padding)\n+            axis.xaxis.grid(False)  # Ensure grid is not shown\n+            if axis.name == \"y\":\n+                axis.set_inverted(True)  # Invert y-axis if necessary\n \n         new._matplotlib_scale = mpl_scale\n \n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/_core/scales.py b/seaborn/_core/scales.py\nindex 58a2cdb..169b456 100644\n--- a/seaborn/_core/scales.py\n+++ b/seaborn/_core/scales.py\n@@ -92,9 +92,13 @@ class Nominal(Scale):\n             def set_default_locators_and_formatters(self, axis):\n                 ...\n         mpl_scale = CatScale(data.name)\n+        padding = (0.5, len(units_seed) - 1 + 0.5)\n         if axis is None:\n             axis = PseudoAxis(mpl_scale)\n-            axis.set_view_interval(0, len(units_seed) - 1)\n+            axis.set_view_interval(*padding)\n+            axis.xaxis.grid(False)\n+            if axis.name == 'y':\n+                axis.set_inverted(True)\n         new._matplotlib_scale = mpl_scale\n         axis.update_units(stringify(np.array(units_seed)))\n         def convert_units(x):\n", "normalized_occurrence": 1}
