{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-24562", "model_patch": "diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\nindex 1c28b44..7ba523c 100644\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -1603,7 +1603,10 @@ class Rational(Number):\n                     except (SympifyError, SyntaxError):\n                         pass  # error will raise below\n                 else:\n-                    if p.count('/') > 1:\n+                    if '.' in p:\n+                        p = float(p)\n+                        return Rational(*_as_integer_ratio(p))\n+                    elif p.count('/') > 1:\n                         raise TypeError('invalid input: %s' % p)\n                     p = p.replace(' ', '')\n                     pq = p.rsplit('/', 1)\n", "occurrence": 2, "normalized_patch": "diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\nindex c0e7188..7b0c4ac 100644\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -1389,7 +1389,10 @@ class Rational(Number):\n                     except (SympifyError, SyntaxError):\n                         pass\n                 else:\n-                    if p.count('/') > 1:\n+                    if '.' in p:\n+                        p = float(p)\n+                        return Rational(*_as_integer_ratio(p))\n+                    elif p.count('/') > 1:\n                         raise TypeError('invalid input: %s' % p)\n                     p = p.replace(' ', '')\n                     pq = p.rsplit('/', 1)\n", "normalized_occurrence": 2}
