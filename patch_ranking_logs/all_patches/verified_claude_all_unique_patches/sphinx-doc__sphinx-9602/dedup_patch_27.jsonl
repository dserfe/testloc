{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-9602", "model_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex fbfe7b9..d292b48 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -80,8 +80,12 @@ class ModuleEntry(NamedTuple):\n     deprecated: bool\n \n \n-def type_to_xref(text: str, env: BuildEnvironment = None) -> addnodes.pending_xref:\n+def type_to_xref(text: str, env: BuildEnvironment = None) -> Union[addnodes.pending_xref, nodes.Text]:\n     \"\"\"Convert a type string to a cross reference node.\"\"\"\n+    # Handle literal values - return them as plain text without creating a reference\n+    if text in ('True', 'False') or text.startswith(('\"', \"'\")) or text.isdigit():\n+        return nodes.Text(text)\n+    \n     if text == 'None':\n         reftype = 'obj'\n     else:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex 6040d43..d968721 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -42,7 +42,9 @@ class ModuleEntry(NamedTuple):\n     synopsis: str\n     platform: str\n     deprecated: bool\n-def type_to_xref(text: str, env: BuildEnvironment=None) -> addnodes.pending_xref:\n+def type_to_xref(text: str, env: BuildEnvironment=None) -> Union[addnodes.pending_xref, nodes.Text]:\n+    if text in ('True', 'False') or text.startswith(('\"', \"'\")) or text.isdigit():\n+        return nodes.Text(text)\n     if text == 'None':\n         reftype = 'obj'\n     else:\n", "normalized_occurrence": 1}
