{"model_name_or_path": "agentless", "instance_id": "django__django-15957", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 5314293..e34f045 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -1572,6 +1572,10 @@ class QuerySet:\n                     raise ValueError(\n                         \"prefetch_related() is not supported with FilteredRelation.\"\n                     )\n+                if isinstance(lookup, Prefetch):\n+                    if lookup.queryset.query.is_sliced:\n+                        clone._prefetch_related_lookups = clone._prefetch_related_lookups + (lookup,)\n+                        continue\n             clone._prefetch_related_lookups = clone._prefetch_related_lookups + lookups\n         return clone\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex cb06696..488df94 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -841,6 +841,10 @@ class QuerySet:\n                 lookup = lookup.split(LOOKUP_SEP, 1)[0]\n                 if lookup in self.query._filtered_relations:\n                     raise ValueError('prefetch_related() is not supported with FilteredRelation.')\n+                if isinstance(lookup, Prefetch):\n+                    if lookup.queryset.query.is_sliced:\n+                        clone._prefetch_related_lookups = clone._prefetch_related_lookups + (lookup,)\n+                        continue\n             clone._prefetch_related_lookups = clone._prefetch_related_lookups + lookups\n         return clone\n     def annotate(self, *args, **kwargs):\n", "normalized_occurrence": 1}
