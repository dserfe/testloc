{"model_name_or_path": "agentless", "instance_id": "django__django-16315", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 9211371..71bbcf6 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -733,7 +733,8 @@ class QuerySet(AltersData):\n                 )\n             if unique_fields:\n                 unique_fields = [\n-                    self.model._meta.get_field(name) for name in unique_fields\n+                    self.model._meta.get_field(name).db_column if self.model._meta.get_field(name).db_column else name\n+                    for name in unique_fields\n                 ]\n                 if any(not f.concrete or f.many_to_many for f in unique_fields):\n                     raise ValueError(\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 6f2160b..bfcdce2 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -379,7 +379,7 @@ class QuerySet(AltersData):\n             if any((f.primary_key for f in update_fields)):\n                 raise ValueError('bulk_create() cannot be used with primary keys in update_fields.')\n             if unique_fields:\n-                unique_fields = [self.model._meta.get_field(name) for name in unique_fields]\n+                unique_fields = [self.model._meta.get_field(name).db_column if self.model._meta.get_field(name).db_column else name for name in unique_fields]\n                 if any((not f.concrete or f.many_to_many for f in unique_fields)):\n                     raise ValueError('bulk_create() can only be used with concrete fields in unique_fields.')\n             return OnConflict.UPDATE\n", "normalized_occurrence": 1}
