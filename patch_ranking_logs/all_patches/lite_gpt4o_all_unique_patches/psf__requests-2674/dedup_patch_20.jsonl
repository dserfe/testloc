{"model_name_or_path": "agentless", "instance_id": "psf__requests-2674", "model_patch": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex 06b1117..cee5cb6 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -424,7 +424,11 @@ class HTTPAdapter(BaseAdapter):\n         except _ProxyError as e:\n             raise ProxyError(e)\n \n-        except (_SSLError, _HTTPError) as e:\n+        except (_SSLError, _HTTPError, DecodeError, TimeoutError) as e:\n+            if isinstance(e, DecodeError):\n+                raise requests.exceptions.ContentDecodingError(e, request=request)\n+            elif isinstance(e, TimeoutError):\n+                raise requests.exceptions.Timeout(e, request=request)\n             if isinstance(e, _SSLError):\n                 raise SSLError(e, request=request)\n             elif isinstance(e, ReadTimeoutError):\n@@ -432,4 +436,4 @@ class HTTPAdapter(BaseAdapter):\n             else:\n                 raise\n \n-        return self.build_response(request, resp)\n+        return self.build_response(request, resp)\n", "occurrence": 2, "normalized_patch": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex 9062cd5..d4c3911 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -175,7 +175,11 @@ class HTTPAdapter(BaseAdapter):\n             raise ConnectionError(e, request=request)\n         except _ProxyError as e:\n             raise ProxyError(e)\n-        except (_SSLError, _HTTPError) as e:\n+        except (_SSLError, _HTTPError, DecodeError, TimeoutError) as e:\n+            if isinstance(e, DecodeError):\n+                raise requests.exceptions.ContentDecodingError(e, request=request)\n+            elif isinstance(e, TimeoutError):\n+                raise requests.exceptions.Timeout(e, request=request)\n             if isinstance(e, _SSLError):\n                 raise SSLError(e, request=request)\n             elif isinstance(e, ReadTimeoutError):\n", "normalized_occurrence": 2}
