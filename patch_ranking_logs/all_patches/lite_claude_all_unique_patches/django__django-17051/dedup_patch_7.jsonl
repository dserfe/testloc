{"model_name_or_path": "agentless_claude", "instance_id": "django__django-17051", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 858b89a..5c34b63 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -1837,13 +1837,16 @@ class QuerySet(AltersData):\n         inserted_rows = []\n         bulk_return = connection.features.can_return_rows_from_bulk_insert\n         for item in [objs[i : i + batch_size] for i in range(0, len(objs), batch_size)]:\n-            if bulk_return and on_conflict is None:\n+            if bulk_return and (on_conflict is None or on_conflict == 'UPDATE'):\n                 inserted_rows.extend(\n                     self._insert(\n                         item,\n                         fields=fields,\n                         using=self.db,\n                         returning_fields=self.model._meta.db_returning_fields,\n+                        on_conflict=on_conflict,\n+                        update_fields=update_fields,\n+                        unique_fields=unique_fields,\n                     )\n                 )\n             else:\n", "occurrence": 2, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 0fe72c0..3306eb2 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -983,8 +983,8 @@ class QuerySet(AltersData):\n         inserted_rows = []\n         bulk_return = connection.features.can_return_rows_from_bulk_insert\n         for item in [objs[i:i + batch_size] for i in range(0, len(objs), batch_size)]:\n-            if bulk_return and on_conflict is None:\n-                inserted_rows.extend(self._insert(item, fields=fields, using=self.db, returning_fields=self.model._meta.db_returning_fields))\n+            if bulk_return and (on_conflict is None or on_conflict == 'UPDATE'):\n+                inserted_rows.extend(self._insert(item, fields=fields, using=self.db, returning_fields=self.model._meta.db_returning_fields, on_conflict=on_conflict, update_fields=update_fields, unique_fields=unique_fields))\n             else:\n                 self._insert(item, fields=fields, using=self.db, on_conflict=on_conflict, update_fields=update_fields, unique_fields=unique_fields)\n         return inserted_rows\n", "normalized_occurrence": 3}
