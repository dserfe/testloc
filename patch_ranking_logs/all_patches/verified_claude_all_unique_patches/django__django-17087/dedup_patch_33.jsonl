{"model_name_or_path": "agentless_claude", "instance_id": "django__django-17087", "model_patch": "diff --git a/django/db/migrations/writer.py b/django/db/migrations/writer.py\nindex 18bb763..97c7b4a 100644\n--- a/django/db/migrations/writer.py\n+++ b/django/db/migrations/writer.py\n@@ -282,8 +282,21 @@ class MigrationWriter:\n     def path(self):\n         return os.path.join(self.basedir, self.filename)\n \n+    @classmethod\n+    def __qualname_to_path(cls, obj):\n+        \"\"\"\n+        Convert a function or class's __qualname__ to its full import path.\n+        Handles nested classes by properly including all parent classes in the path.\n+        \"\"\"\n+        module_name = obj.__module__\n+        qualname = obj.__qualname__\n+        return f\"{module_name}.{qualname}\"\n+\n     @classmethod\n     def serialize(cls, value):\n+        if hasattr(value, '__qualname__') and '.' in value.__qualname__:\n+            # Handle nested class methods/attributes\n+            return cls.__qualname_to_path(value), set()\n         return serializer_factory(value).serialize()\n \n     @classmethod\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/writer.py b/django/db/migrations/writer.py\nindex e3d7891..913328d 100644\n--- a/django/db/migrations/writer.py\n+++ b/django/db/migrations/writer.py\n@@ -185,7 +185,14 @@ class MigrationWriter:\n     def path(self):\n         return os.path.join(self.basedir, self.filename)\n     @classmethod\n+    def __qualname_to_path(cls, obj):\n+        module_name = obj.__module__\n+        qualname = obj.__qualname__\n+        return f'{module_name}.{qualname}'\n+    @classmethod\n     def serialize(cls, value):\n+        if hasattr(value, '__qualname__') and '.' in value.__qualname__:\n+            return (cls.__qualname_to_path(value), set())\n         return serializer_factory(value).serialize()\n     @classmethod\n     def register_serializer(cls, type_, serializer):\n", "normalized_occurrence": 1}
