{"model_name_or_path": "agentless", "instance_id": "django__django-14500", "model_patch": "diff --git a/django/db/migrations/executor.py b/django/db/migrations/executor.py\nindex 9e05ef1..62d665d 100644\n--- a/django/db/migrations/executor.py\n+++ b/django/db/migrations/executor.py\n@@ -254,6 +254,15 @@ class MigrationExecutor:\n         if migration.replaces:\n             for app_label, name in migration.replaces:\n                 self.recorder.record_unapplied(app_label, name)\n+            # Check if all replaced migrations are unapplied before marking the squashed migration as unapplied\n+            replaced_migrations = [\n+                (app_label, name) for app_label, name in migration.replaces\n+            ]\n+            if all(\n+                (app_label, name) not in self.recorder.applied_migrations()\n+                for app_label, name in replaced_migrations\n+            ):\n+                self.recorder.record_unapplied(migration.app_label, migration.name)\n         else:\n             self.recorder.record_unapplied(migration.app_label, migration.name)\n         # Report progress\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/executor.py b/django/db/migrations/executor.py\nindex d5a1e7d..7a01a0b 100644\n--- a/django/db/migrations/executor.py\n+++ b/django/db/migrations/executor.py\n@@ -148,6 +148,9 @@ class MigrationExecutor:\n         if migration.replaces:\n             for app_label, name in migration.replaces:\n                 self.recorder.record_unapplied(app_label, name)\n+            replaced_migrations = [(app_label, name) for app_label, name in migration.replaces]\n+            if all(((app_label, name) not in self.recorder.applied_migrations() for app_label, name in replaced_migrations)):\n+                self.recorder.record_unapplied(migration.app_label, migration.name)\n         else:\n             self.recorder.record_unapplied(migration.app_label, migration.name)\n         if self.progress_callback:\n", "normalized_occurrence": 1}
