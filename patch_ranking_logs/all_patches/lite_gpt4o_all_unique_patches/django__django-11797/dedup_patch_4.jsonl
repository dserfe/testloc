{"model_name_or_path": "agentless", "instance_id": "django__django-11797", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 946e695..2e415ca 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -123,6 +123,15 @@ class SQLCompiler:\n         seen = set()\n         expressions = self.collapse_group_by(expressions, having_group_by)\n \n+        # Ensure that GROUP BY uses the correct internal query structure\n+        if self.query.group_by is not True and self.query.group_by is not None:\n+            expressions = []\n+            for expr in self.query.group_by:\n+                if hasattr(expr, 'as_sql'):\n+                    expressions.append(expr)\n+                else:\n+                    expressions.append(self.query.resolve_ref(expr))\n+\n         for expr in expressions:\n             sql, params = self.compile(expr)\n             params_hash = make_hashable(params)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex a6b66a9..b50ec8b 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -58,6 +58,13 @@ class SQLCompiler:\n         result = []\n         seen = set()\n         expressions = self.collapse_group_by(expressions, having_group_by)\n+        if self.query.group_by is not True and self.query.group_by is not None:\n+            expressions = []\n+            for expr in self.query.group_by:\n+                if hasattr(expr, 'as_sql'):\n+                    expressions.append(expr)\n+                else:\n+                    expressions.append(self.query.resolve_ref(expr))\n         for expr in expressions:\n             sql, params = self.compile(expr)\n             params_hash = make_hashable(params)\n", "normalized_occurrence": 1}
