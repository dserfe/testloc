{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-20859", "model_patch": "diff --git a/lib/matplotlib/legend.py b/lib/matplotlib/legend.py\nindex f63ebf0..d4b69aa 100644\n--- a/lib/matplotlib/legend.py\n+++ b/lib/matplotlib/legend.py\n@@ -434,11 +434,11 @@ class Legend(Artist):\n             self.isaxes = True\n             self.axes = parent\n             self.set_figure(parent.figure)\n-        elif isinstance(parent, Figure):\n+        elif isinstance(parent, FigureBase):\n             self.isaxes = False\n-            self.set_figure(parent)\n+            self.set_figure(parent.figure)\n         else:\n-            raise TypeError(\"Legend needs either Axes or Figure as parent\")\n+            raise TypeError(\"Legend needs either Axes or FigureBase as parent\")\n         self.parent = parent\n \n         self._loc_used_default = loc is None\n", "occurrence": 8, "normalized_patch": "diff --git a/lib/matplotlib/legend.py b/lib/matplotlib/legend.py\nindex 8dea438..675874d 100644\n--- a/lib/matplotlib/legend.py\n+++ b/lib/matplotlib/legend.py\n@@ -94,11 +94,11 @@ class Legend(Artist):\n             self.isaxes = True\n             self.axes = parent\n             self.set_figure(parent.figure)\n-        elif isinstance(parent, Figure):\n+        elif isinstance(parent, FigureBase):\n             self.isaxes = False\n-            self.set_figure(parent)\n+            self.set_figure(parent.figure)\n         else:\n-            raise TypeError('Legend needs either Axes or Figure as parent')\n+            raise TypeError('Legend needs either Axes or FigureBase as parent')\n         self.parent = parent\n         self._loc_used_default = loc is None\n         if loc is None:\n", "normalized_occurrence": 8}
