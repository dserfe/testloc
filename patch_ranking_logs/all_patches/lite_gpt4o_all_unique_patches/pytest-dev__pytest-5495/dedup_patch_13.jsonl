{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-5495", "model_patch": "diff --git a/src/_pytest/assertion/util.py b/src/_pytest/assertion/util.py\nindex c9b4ff0..5781622 100644\n--- a/src/_pytest/assertion/util.py\n+++ b/src/_pytest/assertion/util.py\n@@ -279,10 +279,16 @@ def _compare_eq_sequence(left, right, verbose=0):\n                 \"{} contains one more item: {}\".format(dir_with_more, extra)\n             ]\n         else:\n-            explanation += [\n-                \"%s contains %d more items, first extra item: %s\"\n-                % (dir_with_more, len_diff, extra)\n-            ]\n+            if isinstance(left, bytes) and isinstance(right, bytes):\n+                explanation += [\n+                    \"{} contains {} more items, first extra item: {} (ASCII ordinal: {})\"\n+                    .format(dir_with_more, len_diff, extra, ord(extra))\n+                ]\n+            else:\n+                explanation += [\n+                    \"%s contains %d more items, first extra item: %s\"\n+                    % (dir_with_more, len_diff, extra)\n+                ]\n     return explanation\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/assertion/util.py b/src/_pytest/assertion/util.py\nindex 855efef..0f47b3e 100644\n--- a/src/_pytest/assertion/util.py\n+++ b/src/_pytest/assertion/util.py\n@@ -174,6 +174,8 @@ def _compare_eq_sequence(left, right, verbose=0):\n             extra = saferepr(right[len_left])\n         if len_diff == 1:\n             explanation += ['{} contains one more item: {}'.format(dir_with_more, extra)]\n+        elif isinstance(left, bytes) and isinstance(right, bytes):\n+            explanation += ['{} contains {} more items, first extra item: {} (ASCII ordinal: {})'.format(dir_with_more, len_diff, extra, ord(extra))]\n         else:\n             explanation += ['%s contains %d more items, first extra item: %s' % (dir_with_more, len_diff, extra)]\n     return explanation\n", "normalized_occurrence": 1}
