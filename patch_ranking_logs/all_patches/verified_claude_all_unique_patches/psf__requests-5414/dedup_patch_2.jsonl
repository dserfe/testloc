{"model_name_or_path": "agentless_claude", "instance_id": "psf__requests-5414", "model_patch": "diff --git a/requests/models.py b/requests/models.py\nindex b6afac6..4e43180 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -341,6 +341,8 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         p._body_position = self._body_position\n         return p\n \n+    from .exceptions import InvalidUrl\n+\n     def prepare_method(self, method):\n         \"\"\"Prepares the given HTTP method.\"\"\"\n         self.method = method\n@@ -354,7 +356,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         try:\n             host = idna.encode(host, uts46=True).decode('utf-8')\n         except idna.IDNAError:\n-            raise UnicodeError\n+            raise InvalidUrl(\"URL has an invalid label.\")\n         return host\n \n     def prepare_url(self, url, params):\n", "occurrence": 1, "normalized_patch": "diff --git a/requests/models.py b/requests/models.py\nindex 0a92d68..e8e7c94 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -163,6 +163,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         p.hooks = self.hooks\n         p._body_position = self._body_position\n         return p\n+    from .exceptions import InvalidUrl\n     def prepare_method(self, method):\n         self.method = method\n         if self.method is not None:\n@@ -173,7 +174,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         try:\n             host = idna.encode(host, uts46=True).decode('utf-8')\n         except idna.IDNAError:\n-            raise UnicodeError\n+            raise InvalidUrl('URL has an invalid label.')\n         return host\n     def prepare_url(self, url, params):\n         if isinstance(url, bytes):\n", "normalized_occurrence": 1}
