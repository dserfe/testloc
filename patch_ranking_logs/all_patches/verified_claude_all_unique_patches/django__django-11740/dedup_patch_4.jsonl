{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11740", "model_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 816737e..18eb699 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -855,6 +855,10 @@ class MigrationAutodetector:\n         dependencies = []\n         if field.remote_field and field.remote_field.model:\n             dependencies.extend(self._get_dependencies_for_foreign_key(field))\n+        # Also check if we're converting from a non-relation field to a relation field\n+        old_field = self.old_apps.get_model(app_label, model_name)._meta.get_field(field_name)\n+        if (not old_field.remote_field and field.remote_field and field.remote_field.model):\n+            dependencies.extend(self._get_dependencies_for_foreign_key(field))\n         # You can't just add NOT NULL fields with no default or fields\n         # which don't allow empty strings as default.\n         time_fields = (models.DateField, models.DateTimeField, models.TimeField)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 9fda64b..4dc05b0 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -415,6 +415,9 @@ class MigrationAutodetector:\n         dependencies = []\n         if field.remote_field and field.remote_field.model:\n             dependencies.extend(self._get_dependencies_for_foreign_key(field))\n+        old_field = self.old_apps.get_model(app_label, model_name)._meta.get_field(field_name)\n+        if not old_field.remote_field and field.remote_field and field.remote_field.model:\n+            dependencies.extend(self._get_dependencies_for_foreign_key(field))\n         time_fields = (models.DateField, models.DateTimeField, models.TimeField)\n         preserve_default = field.null or field.has_default() or field.many_to_many or (field.blank and field.empty_strings_allowed) or (isinstance(field, time_fields) and field.auto_now)\n         if not preserve_default:\n", "normalized_occurrence": 1}
