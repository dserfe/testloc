{"model_name_or_path": "agentless", "instance_id": "django__django-15916", "model_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 646bf68..a6e0ec9 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -263,7 +263,7 @@ class ModelFormMetaclass(DeclarativeFieldsMetaclass):\n                 base_formfield_callback = b.Meta.formfield_callback\n                 break\n \n-        formfield_callback = attrs.pop(\"formfield_callback\", base_formfield_callback)\n+        formfield_callback = attrs.pop(\"formfield_callback\", None) or base_formfield_callback\n \n         new_class = super().__new__(mcs, name, bases, attrs)\n \n@@ -636,7 +636,7 @@ def modelform_factory(\n     class_name = model.__name__ + \"Form\"\n \n     # Class attributes for the new form class.\n-    form_class_attrs = {\"Meta\": Meta, \"formfield_callback\": formfield_callback}\n+    form_class_attrs = {\"Meta\": Meta}\n \n     if getattr(Meta, \"fields\", None) is None and getattr(Meta, \"exclude\", None) is None:\n         raise ImproperlyConfigured(\n", "occurrence": 2, "normalized_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 7070e66..da73a4d 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -114,7 +114,7 @@ class ModelFormMetaclass(DeclarativeFieldsMetaclass):\n             if hasattr(b, 'Meta') and hasattr(b.Meta, 'formfield_callback'):\n                 base_formfield_callback = b.Meta.formfield_callback\n                 break\n-        formfield_callback = attrs.pop('formfield_callback', base_formfield_callback)\n+        formfield_callback = attrs.pop('formfield_callback', None) or base_formfield_callback\n         new_class = super().__new__(mcs, name, bases, attrs)\n         if bases == (BaseModelForm,):\n             return new_class\n@@ -267,7 +267,7 @@ def modelform_factory(model, form=ModelForm, fields=None, exclude=None, formfiel\n     if formfield_callback:\n         Meta.formfield_callback = staticmethod(formfield_callback)\n     class_name = model.__name__ + 'Form'\n-    form_class_attrs = {'Meta': Meta, 'formfield_callback': formfield_callback}\n+    form_class_attrs = {'Meta': Meta}\n     if getattr(Meta, 'fields', None) is None and getattr(Meta, 'exclude', None) is None:\n         raise ImproperlyConfigured(\"Calling modelform_factory without defining 'fields' or 'exclude' explicitly is prohibited.\")\n     return type(form)(class_name, (form,), form_class_attrs)\n", "normalized_occurrence": 2}
