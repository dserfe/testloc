{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-13453", "model_patch": "diff --git a/astropy/io/ascii/html.py b/astropy/io/ascii/html.py\nindex 1220930..db3fe62 100644\n--- a/astropy/io/ascii/html.py\n+++ b/astropy/io/ascii/html.py\n@@ -346,6 +346,12 @@ class HTML(core.BaseReader):\n         # Check that table has only 1-d or 2-d columns. Above that fails.\n         self._check_multidim_table(table)\n \n+        # Apply column formats if provided\n+        if self.data.formats:\n+            for col in table.columns.values():\n+                if col.info.name in self.data.formats:\n+                    col.info.format = self.data.formats[col.info.name]\n+\n         cols = list(table.columns.values())\n \n         self.data.header.cols = cols\n@@ -474,4 +480,4 @@ class HTML(core.BaseReader):\n                     yield col.fill_values[col_str]\n                     continue\n \n-            yield col_str\n+            yield col_str\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/io/ascii/html.py b/astropy/io/ascii/html.py\nindex 45fa153..ed55f5d 100644\n--- a/astropy/io/ascii/html.py\n+++ b/astropy/io/ascii/html.py\n@@ -151,6 +151,10 @@ class HTML(core.BaseReader):\n         return super().read(table)\n     def write(self, table):\n         self._check_multidim_table(table)\n+        if self.data.formats:\n+            for col in table.columns.values():\n+                if col.info.name in self.data.formats:\n+                    col.info.format = self.data.formats[col.info.name]\n         cols = list(table.columns.values())\n         self.data.header.cols = cols\n         if isinstance(self.data.fill_values, tuple):\n", "normalized_occurrence": 1}
