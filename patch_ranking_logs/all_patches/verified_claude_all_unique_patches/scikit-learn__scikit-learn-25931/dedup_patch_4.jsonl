{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-25931", "model_patch": "diff --git a/sklearn/base.py b/sklearn/base.py\nindex e503bfe..376b372 100644\n--- a/sklearn/base.py\n+++ b/sklearn/base.py\n@@ -440,6 +440,10 @@ class BaseEstimator:\n             # no feature names seen in fit and in X\n             return\n \n+        # Skip validation if X is the same object as used in fit\n+        if hasattr(self, \"_fit_X\") and X is self._fit_X:\n+            return\n+\n         if X_feature_names is not None and fitted_feature_names is None:\n             warnings.warn(\n                 f\"X has feature names, but {self.__class__.__name__} was fitted without\"\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/base.py b/sklearn/base.py\nindex f53342c..43fef45 100644\n--- a/sklearn/base.py\n+++ b/sklearn/base.py\n@@ -169,6 +169,8 @@ class BaseEstimator:\n         X_feature_names = _get_feature_names(X)\n         if fitted_feature_names is None and X_feature_names is None:\n             return\n+        if hasattr(self, '_fit_X') and X is self._fit_X:\n+            return\n         if X_feature_names is not None and fitted_feature_names is None:\n             warnings.warn(f'X has feature names, but {self.__class__.__name__} was fitted without feature names')\n             return\n", "normalized_occurrence": 1}
