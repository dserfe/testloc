{"model_name_or_path": "agentless", "instance_id": "django__django-11728", "model_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 5b145cc..a9925ea 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -216,6 +216,20 @@ def _route_to_regex(route, is_endpoint=False):\n         match = _PATH_PARAMETER_COMPONENT_RE.search(route)\n         if not match:\n             parts.append(re.escape(route))\n+            # If there is any remaining route portion, ensure trailing named groups are processed\n+            if route:\n+                match = _PATH_PARAMETER_COMPONENT_RE.search(route)\n+                if match:\n+                    parameter = match.group('parameter')\n+                    raw_converter = match.group('converter') or 'str'\n+                    try:\n+                        converter = get_converter(raw_converter)\n+                    except KeyError as e:\n+                        raise ImproperlyConfigured(\n+                            \"URL route '%s' uses invalid converter %s.\" % (original_route, e)\n+                        )\n+                    converters[parameter] = converter\n+                    parts[-1] = re.escape(route[:match.start()]) + '(?P<' + parameter + '>' + converter.regex + ')'\n             break\n         parts.append(re.escape(route[:match.start()]))\n         route = route[match.end():]\n", "occurrence": 1, "normalized_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex ac39a99..c130679 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -125,6 +125,17 @@ def _route_to_regex(route, is_endpoint=False):\n         match = _PATH_PARAMETER_COMPONENT_RE.search(route)\n         if not match:\n             parts.append(re.escape(route))\n+            if route:\n+                match = _PATH_PARAMETER_COMPONENT_RE.search(route)\n+                if match:\n+                    parameter = match.group('parameter')\n+                    raw_converter = match.group('converter') or 'str'\n+                    try:\n+                        converter = get_converter(raw_converter)\n+                    except KeyError as e:\n+                        raise ImproperlyConfigured(\"URL route '%s' uses invalid converter %s.\" % (original_route, e))\n+                    converters[parameter] = converter\n+                    parts[-1] = re.escape(route[:match.start()]) + '(?P<' + parameter + '>' + converter.regex + ')'\n             break\n         parts.append(re.escape(route[:match.start()]))\n         route = route[match.end():]\n", "normalized_occurrence": 1}
