{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-12236", "model_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 03af2f5..f90685f 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -138,13 +138,16 @@ def apart(f, x=None, full=False, **options):\n         else:\n             partial = apart_full_decomposition(P, Q)\n \n+    # Ensure the partial fractions are properly simplified\n+    partial = partial.cancel()\n+\n     terms = S.Zero\n \n     for term in Add.make_args(partial):\n         if term.has(RootSum):\n             terms += term\n         else:\n-            terms += factor(term)\n+            terms += term.factor()\n \n     return common*(poly.as_expr() + terms)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 21c4bd7..6c7bd93 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -68,12 +68,13 @@ def apart(f, x=None, full=False, **options):\n         partial = apart_undetermined_coeffs(P, Q)\n     else:\n         partial = apart_full_decomposition(P, Q)\n+    partial = partial.cancel()\n     terms = S.Zero\n     for term in Add.make_args(partial):\n         if term.has(RootSum):\n             terms += term\n         else:\n-            terms += factor(term)\n+            terms += term.factor()\n     return common * (poly.as_expr() + terms)\n def apart_undetermined_coeffs(P, Q):\n     X = numbered_symbols(cls=Dummy)\n", "normalized_occurrence": 1}
