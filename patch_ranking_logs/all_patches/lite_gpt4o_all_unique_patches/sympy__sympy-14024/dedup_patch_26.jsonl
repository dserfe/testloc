{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-14024", "model_patch": "diff --git a/sympy/core/power.py b/sympy/core/power.py\nindex 0a340d5..c2e545d 100644\n--- a/sympy/core/power.py\n+++ b/sympy/core/power.py\n@@ -257,7 +257,7 @@ class Pow(Expr):\n             elif e is S.One:\n                 return b\n             # Only perform autosimplification if exponent or base is a Symbol or number\n-            elif (b.is_Symbol or b.is_number) and (e.is_Symbol or e.is_number) and\\\n+            elif (b.is_Symbol or b.is_number or b.is_Integer) and (e.is_Symbol or e.is_number) and\\\n                 e.is_integer and _coeff_isneg(b):\n                 if e.is_even:\n                     b = -b\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/power.py b/sympy/core/power.py\nindex f12eb85..58f1ff8 100644\n--- a/sympy/core/power.py\n+++ b/sympy/core/power.py\n@@ -101,7 +101,7 @@ class Pow(Expr):\n                 return S.One\n             elif e is S.One:\n                 return b\n-            elif (b.is_Symbol or b.is_number) and (e.is_Symbol or e.is_number) and e.is_integer and _coeff_isneg(b):\n+            elif (b.is_Symbol or b.is_number or b.is_Integer) and (e.is_Symbol or e.is_number) and e.is_integer and _coeff_isneg(b):\n                 if e.is_even:\n                     b = -b\n                 elif e.is_odd:\n", "normalized_occurrence": 2}
