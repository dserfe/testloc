{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-15976", "model_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 85af872..41e9cc8 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -778,6 +778,9 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n         subs = [translate(sub) for sub in subs]\n \n         mname = self.dom.createElement('mi')\n+        # Set mathvariant=\"normal\" if the symbol name contains numbers\n+        if any(c.isdigit() for c in name):\n+            mname.setAttribute('mathvariant', 'normal')\n         mname.appendChild(self.dom.createTextNode(name))\n         if len(supers) == 0:\n             if len(subs) == 0:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 28d3e1a..8abd1ee 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -545,6 +545,8 @@ class MathMLPresentationPrinter(MathMLPrinterBase):\n         supers = [translate(sup) for sup in supers]\n         subs = [translate(sub) for sub in subs]\n         mname = self.dom.createElement('mi')\n+        if any((c.isdigit() for c in name)):\n+            mname.setAttribute('mathvariant', 'normal')\n         mname.appendChild(self.dom.createTextNode(name))\n         if len(supers) == 0:\n             if len(subs) == 0:\n", "normalized_occurrence": 1}
