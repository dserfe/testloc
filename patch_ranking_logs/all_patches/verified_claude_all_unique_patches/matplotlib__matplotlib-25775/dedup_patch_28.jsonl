{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-25775", "model_patch": "diff --git a/lib/matplotlib/text.py b/lib/matplotlib/text.py\nindex c2b18d4..d3c08c0 100644\n--- a/lib/matplotlib/text.py\n+++ b/lib/matplotlib/text.py\n@@ -187,6 +187,7 @@ class Text(Artist):\n             linespacing = 1.2  # Maybe use rcParam later.\n         self.set_linespacing(linespacing)\n         self.set_rotation_mode(rotation_mode)\n+        self._antialiased = mpl.rcParams[\"text.antialiased\"]\n \n     def update(self, kwargs):\n         # docstring inherited\n@@ -736,6 +737,7 @@ class Text(Artist):\n             gc = renderer.new_gc()\n             gc.set_foreground(self.get_color())\n             gc.set_alpha(self.get_alpha())\n+            gc.set_antialiased(self.get_antialiased())\n             gc.set_url(self._url)\n             self._set_gc_clip(gc)\n \n@@ -1317,6 +1319,21 @@ class Text(Artist):\n         \"\"\"Return whether mathtext parsing is considered for this `Text`.\"\"\"\n         return self._parse_math\n \n+    def get_antialiased(self):\n+        \"\"\"Return whether the text is antialiased.\"\"\"\n+        return self._antialiased\n+\n+    def set_antialiased(self, aa):\n+        \"\"\"\n+        Set whether to use antialiased rendering.\n+\n+        Parameters\n+        ----------\n+        aa : bool\n+        \"\"\"\n+        self._antialiased = aa\n+        self.stale = True\n+\n     def set_fontname(self, fontname):\n         \"\"\"\n         Alias for `set_family`.\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/text.py b/lib/matplotlib/text.py\nindex 5c973cb..fa58bf4 100644\n--- a/lib/matplotlib/text.py\n+++ b/lib/matplotlib/text.py\n@@ -65,6 +65,7 @@ class Text(Artist):\n             linespacing = 1.2\n         self.set_linespacing(linespacing)\n         self.set_rotation_mode(rotation_mode)\n+        self._antialiased = mpl.rcParams['text.antialiased']\n     def update(self, kwargs):\n         kwargs = cbook.normalize_kwargs(kwargs, Text)\n         sentinel = object()\n@@ -369,6 +370,7 @@ class Text(Artist):\n             gc = renderer.new_gc()\n             gc.set_foreground(self.get_color())\n             gc.set_alpha(self.get_alpha())\n+            gc.set_antialiased(self.get_antialiased())\n             gc.set_url(self._url)\n             self._set_gc_clip(gc)\n             angle = self.get_rotation()\n@@ -546,6 +548,11 @@ class Text(Artist):\n         self._parse_math = bool(parse_math)\n     def get_parse_math(self):\n         return self._parse_math\n+    def get_antialiased(self):\n+        return self._antialiased\n+    def set_antialiased(self, aa):\n+        self._antialiased = aa\n+        self.stale = True\n     def set_fontname(self, fontname):\n         return self.set_family(fontname)\n class OffsetFrom:\n", "normalized_occurrence": 1}
