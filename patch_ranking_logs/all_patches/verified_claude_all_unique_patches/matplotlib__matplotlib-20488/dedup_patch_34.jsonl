{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-20488", "model_patch": "diff --git a/lib/matplotlib/image.py b/lib/matplotlib/image.py\nindex 7f3e359..fd67874 100644\n--- a/lib/matplotlib/image.py\n+++ b/lib/matplotlib/image.py\n@@ -533,8 +533,11 @@ class _ImageBase(martist.Artist, cm.ScalarMappable):\n                 # that may have moved input values in/out of range\n                 s_vmin, s_vmax = vrange\n                 if isinstance(self.norm, mcolors.LogNorm):\n-                    if s_vmin < 0:\n-                        s_vmin = max(s_vmin, np.finfo(scaled_dtype).eps)\n+                    # For log scale, ensure minimum value is positive and not too close to zero\n+                    min_pos = np.finfo(scaled_dtype).eps\n+                    if s_vmin <= min_pos:\n+                        s_vmin = min_pos\n+                    s_vmax = max(s_vmax, min_pos)\n                 with cbook._setattr_cm(self.norm,\n                                        vmin=s_vmin,\n                                        vmax=s_vmax,\n", "normalized_patch": "diff --git a/lib/matplotlib/image.py b/lib/matplotlib/image.py\nindex 21afb66..a4d9a41 100644\n--- a/lib/matplotlib/image.py\n+++ b/lib/matplotlib/image.py\n@@ -222,8 +222,10 @@ class _ImageBase(martist.Artist, cm.ScalarMappable):\n                 resampled_masked = np.ma.masked_array(A_resampled, out_mask)\n                 s_vmin, s_vmax = vrange\n                 if isinstance(self.norm, mcolors.LogNorm):\n-                    if s_vmin < 0:\n-                        s_vmin = max(s_vmin, np.finfo(scaled_dtype).eps)\n+                    min_pos = np.finfo(scaled_dtype).eps\n+                    if s_vmin <= min_pos:\n+                        s_vmin = min_pos\n+                    s_vmax = max(s_vmax, min_pos)\n                 with cbook._setattr_cm(self.norm, vmin=s_vmin, vmax=s_vmax):\n                     output = self.norm(resampled_masked)\n             else:\n", "normalized_occurrence": 1}
