{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-5859", "model_patch": "diff --git a/pylint/utils/utils.py b/pylint/utils/utils.py\nindex 030ec92..08a33f9 100644\n--- a/pylint/utils/utils.py\n+++ b/pylint/utils/utils.py\n@@ -319,7 +319,10 @@ def _unquote(string):\n def _check_csv(value):\n     if isinstance(value, (list, tuple)):\n         return value\n-    return _splitstrip(value)\n+    value = _splitstrip(value)\n+    if any(not tag.isalnum() for tag in value):\n+        return [tag for tag in value if not all(char in string.punctuation for char in tag)]\n+    return value\n \n \n def _comment(string: str) -> str:\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/utils/utils.py b/pylint/utils/utils.py\nindex 0221700..ee469e5 100644\n--- a/pylint/utils/utils.py\n+++ b/pylint/utils/utils.py\n@@ -139,7 +139,10 @@ def _unquote(string):\n def _check_csv(value):\n     if isinstance(value, (list, tuple)):\n         return value\n-    return _splitstrip(value)\n+    value = _splitstrip(value)\n+    if any((not tag.isalnum() for tag in value)):\n+        return [tag for tag in value if not all((char in string.punctuation for char in tag))]\n+    return value\n def _comment(string: str) -> str:\n     lines = [line.strip() for line in string.splitlines()]\n     sep = '\\n'\n", "normalized_occurrence": 1}
