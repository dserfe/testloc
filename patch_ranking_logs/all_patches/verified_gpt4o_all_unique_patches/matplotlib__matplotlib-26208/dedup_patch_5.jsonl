{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-26208", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex f9613d3..387cad9 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -4411,7 +4411,11 @@ class _AxesBase(martist.Artist):\n         self.set_adjustable('datalim')\n         twin.set_adjustable('datalim')\n         self._twinned_axes.join(self, twin)\n-        return twin\n+        # Ensure the original axis data limits are preserved\n+        original_dataLim = self.dataLim.frozen()\n+        result = twin\n+        self.dataLim.set(*original_dataLim)\n+        return result\n \n     def twinx(self):\n         \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex eb9da84..dc75283 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1691,7 +1691,10 @@ class _AxesBase(martist.Artist):\n         self.set_adjustable('datalim')\n         twin.set_adjustable('datalim')\n         self._twinned_axes.join(self, twin)\n-        return twin\n+        original_dataLim = self.dataLim.frozen()\n+        result = twin\n+        self.dataLim.set(*original_dataLim)\n+        return result\n     def twinx(self):\n         ax2 = self._make_twin_axes(sharex=self)\n         ax2.yaxis.tick_right()\n", "normalized_occurrence": 1}
