{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-15512", "model_patch": "diff --git a/sklearn/cluster/_affinity_propagation.py b/sklearn/cluster/_affinity_propagation.py\nindex 0511594..44821d3 100644\n--- a/sklearn/cluster/_affinity_propagation.py\n+++ b/sklearn/cluster/_affinity_propagation.py\n@@ -200,6 +200,13 @@ def affinity_propagation(S, preference=None, convergence_iter=15, max_iter=200,\n     else:\n         if verbose:\n             print(\"Did not converge\")\n+        # Return empty clusters and -1 labels when algorithm doesn't converge\n+        labels = np.array([-1] * n_samples)\n+        cluster_centers_indices = []\n+        if return_n_iter:\n+            return cluster_centers_indices, labels, it + 1\n+        else:\n+            return cluster_centers_indices, labels\n \n     I = np.flatnonzero(E)\n     K = I.size  # Identify exemplars\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/cluster/_affinity_propagation.py b/sklearn/cluster/_affinity_propagation.py\nindex b441de5..2714a3b 100644\n--- a/sklearn/cluster/_affinity_propagation.py\n+++ b/sklearn/cluster/_affinity_propagation.py\n@@ -71,6 +71,12 @@ def affinity_propagation(S, preference=None, convergence_iter=15, max_iter=200,\n     else:\n         if verbose:\n             print('Did not converge')\n+        labels = np.array([-1] * n_samples)\n+        cluster_centers_indices = []\n+        if return_n_iter:\n+            return (cluster_centers_indices, labels, it + 1)\n+        else:\n+            return (cluster_centers_indices, labels)\n     I = np.flatnonzero(E)\n     K = I.size\n     if K > 0:\n", "normalized_occurrence": 2}
