{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13809", "model_patch": "diff --git a/django/core/management/commands/runserver.py b/django/core/management/commands/runserver.py\nindex 85f7e9c..0e0b98c 100644\n--- a/django/core/management/commands/runserver.py\n+++ b/django/core/management/commands/runserver.py\n@@ -25,7 +25,7 @@ class Command(BaseCommand):\n     help = \"Starts a lightweight Web server for development.\"\n \n     # Validation is called explicitly each time the server is reloaded.\n-    requires_system_checks = []\n+    requires_system_checks = '__all__'\n     stealth_options = ('shutdown_message',)\n \n     default_addr = '127.0.0.1'\n@@ -114,8 +114,9 @@ class Command(BaseCommand):\n         shutdown_message = options.get('shutdown_message', '')\n         quit_command = 'CTRL-BREAK' if sys.platform == 'win32' else 'CONTROL-C'\n \n-        self.stdout.write(\"Performing system checks...\\n\\n\")\n-        self.check(display_num_errors=True)\n+        if not options.get('skip_checks'):\n+            self.stdout.write(\"Performing system checks...\\n\\n\")\n+            self.check(display_num_errors=True)\n         # Need to check migrations here, so can't use the\n         # requires_migrations_check attribute.\n         self.check_migrations()\n@@ -155,4 +156,4 @@ class Command(BaseCommand):\n         except KeyboardInterrupt:\n             if shutdown_message:\n                 self.stdout.write(shutdown_message)\n-            sys.exit(0)\n+            sys.exit(0)\n", "occurrence": 2, "normalized_patch": "diff --git a/django/core/management/commands/runserver.py b/django/core/management/commands/runserver.py\nindex 823b122..691e719 100644\n--- a/django/core/management/commands/runserver.py\n+++ b/django/core/management/commands/runserver.py\n@@ -12,7 +12,7 @@ from django.utils.regex_helper import _lazy_re_compile\n naiveip_re = _lazy_re_compile('^(?:\\n(?P<addr>\\n    (?P<ipv4>\\\\d{1,3}(?:\\\\.\\\\d{1,3}){3}) |         # IPv4 address\\n    (?P<ipv6>\\\\[[a-fA-F0-9:]+\\\\]) |               # IPv6 address\\n    (?P<fqdn>[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*) # FQDN\\n):)?(?P<port>\\\\d+)$', re.X)\n class Command(BaseCommand):\n     help = 'Starts a lightweight Web server for development.'\n-    requires_system_checks = []\n+    requires_system_checks = '__all__'\n     stealth_options = ('shutdown_message',)\n     default_addr = '127.0.0.1'\n     default_addr_ipv6 = '::1'\n@@ -69,8 +69,9 @@ class Command(BaseCommand):\n         threading = options['use_threading']\n         shutdown_message = options.get('shutdown_message', '')\n         quit_command = 'CTRL-BREAK' if sys.platform == 'win32' else 'CONTROL-C'\n-        self.stdout.write('Performing system checks...\\n\\n')\n-        self.check(display_num_errors=True)\n+        if not options.get('skip_checks'):\n+            self.stdout.write('Performing system checks...\\n\\n')\n+            self.check(display_num_errors=True)\n         self.check_migrations()\n         now = datetime.now().strftime('%B %d, %Y - %X')\n         self.stdout.write(now)\n", "normalized_occurrence": 2}
