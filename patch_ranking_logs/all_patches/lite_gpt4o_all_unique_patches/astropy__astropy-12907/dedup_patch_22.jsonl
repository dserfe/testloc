{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-12907", "model_patch": "diff --git a/astropy/modeling/separable.py b/astropy/modeling/separable.py\nindex d6e9246..a0f7702 100644\n--- a/astropy/modeling/separable.py\n+++ b/astropy/modeling/separable.py\n@@ -303,10 +303,12 @@ def _separable(transform):\n     \"\"\"\n     if (transform_matrix := transform._calculate_separability_matrix()) is not NotImplemented:\n         return transform_matrix\n-    elif isinstance(transform, CompoundModel):\n+    elif isinstance(transform, CompoundModel) and transform.op == '&':\n         sepleft = _separable(transform.left)\n         sepright = _separable(transform.right)\n-        return _operators[transform.op](sepleft, sepright)\n+        left_separability = _separable(transform.left)\n+        right_separability = _separable(transform.right)\n+        return _operators[transform.op](left_separability, right_separability)\n     elif isinstance(transform, Model):\n         return _coord_matrix(transform, 'left', transform.n_outputs)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/modeling/separable.py b/astropy/modeling/separable.py\nindex 198a838..753ff7c 100644\n--- a/astropy/modeling/separable.py\n+++ b/astropy/modeling/separable.py\n@@ -98,10 +98,12 @@ def _cdot(left, right):\n def _separable(transform):\n     if (transform_matrix := transform._calculate_separability_matrix()) is not NotImplemented:\n         return transform_matrix\n-    elif isinstance(transform, CompoundModel):\n+    elif isinstance(transform, CompoundModel) and transform.op == '&':\n         sepleft = _separable(transform.left)\n         sepright = _separable(transform.right)\n-        return _operators[transform.op](sepleft, sepright)\n+        left_separability = _separable(transform.left)\n+        right_separability = _separable(transform.right)\n+        return _operators[transform.op](left_separability, right_separability)\n     elif isinstance(transform, Model):\n         return _coord_matrix(transform, 'left', transform.n_outputs)\n _operators = {'&': _cstack, '|': _cdot, '+': _arith_oper, '-': _arith_oper, '*': _arith_oper, '/': _arith_oper, '**': _arith_oper}\n\\ No newline at end of file\n", "normalized_occurrence": 1}
