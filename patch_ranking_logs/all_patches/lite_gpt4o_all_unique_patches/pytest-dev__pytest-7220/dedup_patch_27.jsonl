{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7220", "model_patch": "diff --git a/src/_pytest/nodes.py b/src/_pytest/nodes.py\nindex 585fb01..af4b0b3 100644\n--- a/src/_pytest/nodes.py\n+++ b/src/_pytest/nodes.py\n@@ -361,11 +361,23 @@ class Node(metaclass=NodeMeta):\n         else:\n             truncate_locals = True\n \n+        original_dir = self.config.invocation_dir\n+\n+        cwd = os.getcwd()\n+        os.chdir(original_dir)\n         try:\n-            os.getcwd()\n             abspath = False\n-        except OSError:\n-            abspath = True\n+            result = excinfo.getrepr(\n+                funcargs=True,\n+                abspath=abspath,\n+                showlocals=self.config.getoption(\"showlocals\", False),\n+                style=style,\n+                tbfilter=False,  # pruned already, or in --fulltrace mode.\n+                truncate_locals=truncate_locals,\n+            )\n+        finally:\n+            os.chdir(cwd)\n+        return result\n \n         return excinfo.getrepr(\n             funcargs=True,\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/nodes.py b/src/_pytest/nodes.py\nindex e228031..9504297 100644\n--- a/src/_pytest/nodes.py\n+++ b/src/_pytest/nodes.py\n@@ -289,11 +289,15 @@ class Node(metaclass=NodeMeta):\n             truncate_locals = False\n         else:\n             truncate_locals = True\n+        original_dir = self.config.invocation_dir\n+        cwd = os.getcwd()\n+        os.chdir(original_dir)\n         try:\n-            os.getcwd()\n             abspath = False\n-        except OSError:\n-            abspath = True\n+            result = excinfo.getrepr(funcargs=True, abspath=abspath, showlocals=self.config.getoption('showlocals', False), style=style, tbfilter=False, truncate_locals=truncate_locals)\n+        finally:\n+            os.chdir(cwd)\n+        return result\n         return excinfo.getrepr(funcargs=True, abspath=abspath, showlocals=self.config.getoption('showlocals', False), style=style, tbfilter=False, truncate_locals=truncate_locals)\n \n     def repr_failure(self, excinfo, style=None) -> Union[str, ReprExceptionInfo, ExceptionChainRepr, FixtureLookupErrorRepr]:\n", "normalized_occurrence": 1}
