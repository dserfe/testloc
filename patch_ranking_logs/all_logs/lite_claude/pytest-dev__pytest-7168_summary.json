{
  "instance_id": "pytest-dev__pytest-7168",
  "container_id": "818ffdba619cbf89a06a7fb606c441ac00eeaec214b0804dd73a8714b4ab49d0",
  "regression": {
    "results": [
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7168/dedup_patch_0.jsonl",
        "inst": "pytest-dev__pytest-7168",
        "passed": 0,
        "failed": 1
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7168/dedup_patch_1.jsonl",
        "inst": "pytest-dev__pytest-7168",
        "passed": 0,
        "failed": 1
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7168/dedup_patch_10.jsonl",
        "inst": "pytest-dev__pytest-7168",
        "passed": 0,
        "failed": 1
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7168/dedup_patch_11.jsonl",
        "inst": "pytest-dev__pytest-7168",
        "passed": 0,
        "failed": 1
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7168/dedup_patch_12.jsonl",
        "inst": "pytest-dev__pytest-7168",
        "passed": 0,
        "failed": 1
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7168/dedup_patch_13.jsonl",
        "inst": "pytest-dev__pytest-7168",
        "passed": 0,
        "failed": 1
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7168/dedup_patch_14.jsonl",
        "inst": "pytest-dev__pytest-7168",
        "passed": 0,
        "failed": 1
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7168/dedup_patch_15.jsonl",
        "inst": "pytest-dev__pytest-7168",
        "passed": 0,
        "failed": 1
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7168/dedup_patch_16.jsonl",
        "inst": "pytest-dev__pytest-7168",
        "passed": 0,
        "failed": 1
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7168/dedup_patch_17.jsonl",
        "inst": "pytest-dev__pytest-7168",
        "passed": 0,
        "failed": 1
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7168/dedup_patch_18.jsonl",
        "inst": "pytest-dev__pytest-7168",
        "passed": 0,
        "failed": 1
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7168/dedup_patch_19.jsonl",
        "inst": "pytest-dev__pytest-7168",
        "passed": 0,
        "failed": 1
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7168/dedup_patch_2.jsonl",
        "inst": "pytest-dev__pytest-7168",
        "passed": 0,
        "failed": 1
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7168/dedup_patch_20.jsonl",
        "inst": "pytest-dev__pytest-7168",
        "passed": 0,
        "failed": 1
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7168/dedup_patch_21.jsonl",
        "inst": "pytest-dev__pytest-7168",
        "passed": 0,
        "failed": 1
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7168/dedup_patch_22.jsonl",
        "inst": "pytest-dev__pytest-7168",
        "passed": 0,
        "failed": 1
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7168/dedup_patch_23.jsonl",
        "inst": "pytest-dev__pytest-7168",
        "passed": 0,
        "failed": 1
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7168/dedup_patch_24.jsonl",
        "inst": "pytest-dev__pytest-7168",
        "passed": 0,
        "failed": 1
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7168/dedup_patch_25.jsonl",
        "inst": "pytest-dev__pytest-7168",
        "passed": 0,
        "failed": 1
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7168/dedup_patch_3.jsonl",
        "inst": "pytest-dev__pytest-7168",
        "passed": 0,
        "failed": 1
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7168/dedup_patch_4.jsonl",
        "inst": "pytest-dev__pytest-7168",
        "passed": 0,
        "failed": 1
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7168/dedup_patch_5.jsonl",
        "inst": "pytest-dev__pytest-7168",
        "passed": 0,
        "failed": 1
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7168/dedup_patch_6.jsonl",
        "inst": "pytest-dev__pytest-7168",
        "passed": 0,
        "failed": 1
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7168/dedup_patch_7.jsonl",
        "inst": "pytest-dev__pytest-7168",
        "passed": 0,
        "failed": 1
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7168/dedup_patch_8.jsonl",
        "inst": "pytest-dev__pytest-7168",
        "passed": 0,
        "failed": 1
      },
      {
        "patch_file": "all_patches/lite_claude_all_unique_patches/pytest-dev__pytest-7168/dedup_patch_9.jsonl",
        "inst": "pytest-dev__pytest-7168",
        "passed": 0,
        "failed": 1
      }
    ],
    "top_passed": 0,
    "top_subset_size": 26
  },
  "reproduction": {
    "testing/io/test_saferepr.py::test_exceptions#1": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "testing/io/test_saferepr.py::test_exceptions#2": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "testing/io/test_saferepr.py::test_exceptions#3": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "testing/io/test_saferepr.py::test_exceptions#4": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "testing/io/test_saferepr.py::test_unicode#5": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "testing/io/test_saferepr.py::test_unicode#6": {
      "repro_fails_on_clean": false,
      "outcomes": []
    }
  }
}