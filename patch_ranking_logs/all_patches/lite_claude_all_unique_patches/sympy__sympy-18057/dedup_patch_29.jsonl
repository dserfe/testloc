{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-18057", "model_patch": "diff --git a/sympy/core/expr.py b/sympy/core/expr.py\nindex b5265ce..f4a5c84 100644\n--- a/sympy/core/expr.py\n+++ b/sympy/core/expr.py\n@@ -120,8 +120,11 @@ class Expr(Basic, EvalfMixin):\n         return self._args\n \n     def __eq__(self, other):\n+        if not isinstance(other, Basic) and not hasattr(other, '_sympy_'):\n+            return False\n         try:\n-            other = sympify(other)\n+            # Only sympify Basic objects or objects with _sympy_ conversion method\n+            other = _sympify(other)\n             if not isinstance(other, Expr):\n                 return False\n         except (SympifyError, SyntaxError):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/expr.py b/sympy/core/expr.py\nindex e14d117..1f62c42 100644\n--- a/sympy/core/expr.py\n+++ b/sympy/core/expr.py\n@@ -46,8 +46,10 @@ class Expr(Basic, EvalfMixin):\n     def _hashable_content(self):\n         return self._args\n     def __eq__(self, other):\n+        if not isinstance(other, Basic) and (not hasattr(other, '_sympy_')):\n+            return False\n         try:\n-            other = sympify(other)\n+            other = _sympify(other)\n             if not isinstance(other, Expr):\n                 return False\n         except (SympifyError, SyntaxError):\n", "normalized_occurrence": 2}
