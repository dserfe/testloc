{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-20488", "model_patch": "diff --git a/lib/matplotlib/colors.py b/lib/matplotlib/colors.py\nindex bbcae54..1bf9b94 100644\n--- a/lib/matplotlib/colors.py\n+++ b/lib/matplotlib/colors.py\n@@ -1471,6 +1471,9 @@ def _make_norm_from_scale(scale_cls, base_norm_cls=None, *, init=None):\n                 clip = self.clip\n             if clip:\n                 value = np.clip(value, self.vmin, self.vmax)\n+            if isinstance(self, LogNorm):\n+                if self.vmin <= 0 or self.vmax <= 0:\n+                    raise ValueError(\"vmin and vmax must be positive for LogNorm\")\n             t_value = self._trf.transform(value).reshape(np.shape(value))\n             t_vmin, t_vmax = self._trf.transform([self.vmin, self.vmax])\n             if not np.isfinite([t_vmin, t_vmax]).all():\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/colors.py b/lib/matplotlib/colors.py\nindex 8344e52..137b90e 100644\n--- a/lib/matplotlib/colors.py\n+++ b/lib/matplotlib/colors.py\n@@ -1267,6 +1267,9 @@ def _make_norm_from_scale(scale_cls, base_norm_cls=None, *, init=None):\n                 clip = self.clip\n             if clip:\n                 value = np.clip(value, self.vmin, self.vmax)\n+            if isinstance(self, LogNorm):\n+                if self.vmin <= 0 or self.vmax <= 0:\n+                    raise ValueError('vmin and vmax must be positive for LogNorm')\n             t_value = self._trf.transform(value).reshape(np.shape(value))\n             t_vmin, t_vmax = self._trf.transform([self.vmin, self.vmax])\n             if not np.isfinite([t_vmin, t_vmax]).all():\n", "normalized_occurrence": 1}
