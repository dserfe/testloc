{"model_name_or_path": "agentless", "instance_id": "psf__requests-1963", "model_patch": "diff --git a/requests/sessions.py b/requests/sessions.py\nindex 7fdc4a9..ad4f326 100644\n--- a/requests/sessions.py\n+++ b/requests/sessions.py\n@@ -88,7 +88,7 @@ class SessionRedirectMixin(object):\n         i = 0\n \n         while resp.is_redirect:\n-            prepared_request = req.copy()\n+            prepared_request = resp.request.copy()\n \n             resp.content  # Consume socket so it can be released\n \n@@ -138,7 +138,7 @@ class SessionRedirectMixin(object):\n             prepared_request.method = method\n \n             # https://github.com/kennethreitz/requests/issues/1084\n-            if resp.status_code not in (codes.temporary, codes.resume):\n+            if resp.status_code not in (codes.temporary, codes.resume, codes.permanent):\n                 if 'Content-Length' in prepared_request.headers:\n                     del prepared_request.headers['Content-Length']\n \n", "occurrence": 1, "normalized_patch": "diff --git a/requests/sessions.py b/requests/sessions.py\nindex 3875307..9109bb2 100644\n--- a/requests/sessions.py\n+++ b/requests/sessions.py\n@@ -36,7 +36,7 @@ class SessionRedirectMixin(object):\n     def resolve_redirects(self, resp, req, stream=False, timeout=None, verify=True, cert=None, proxies=None):\n         i = 0\n         while resp.is_redirect:\n-            prepared_request = req.copy()\n+            prepared_request = resp.request.copy()\n             resp.content\n             if i >= self.max_redirects:\n                 raise TooManyRedirects('Exceeded %s redirects.' % self.max_redirects)\n@@ -60,7 +60,7 @@ class SessionRedirectMixin(object):\n             if resp.status_code == codes.moved and method == 'POST':\n                 method = 'GET'\n             prepared_request.method = method\n-            if resp.status_code not in (codes.temporary, codes.resume):\n+            if resp.status_code not in (codes.temporary, codes.resume, codes.permanent):\n                 if 'Content-Length' in prepared_request.headers:\n                     del prepared_request.headers['Content-Length']\n                 prepared_request.body = None\n", "normalized_occurrence": 1}
