{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-11445", "model_patch": "diff --git a/sphinx/environment/collectors/title.py b/sphinx/environment/collectors/title.py\nindex ec97f42..b349b39 100644\n--- a/sphinx/environment/collectors/title.py\n+++ b/sphinx/environment/collectors/title.py\n@@ -38,9 +38,13 @@ class TitleCollector(EnvironmentCollector):\n             longtitlenode += nodes.Text(doctree['title'])\n         # look for first section title and use that as the title\n         for node in doctree.findall(nodes.section):\n-            visitor = SphinxContentsFilter(doctree)\n-            node[0].walkabout(visitor)\n-            titlenode += visitor.get_entry_text()\n+            title_element = node[0]\n+            if len(title_element) > 0 and isinstance(title_element[0], nodes.Text):\n+                titlenode += title_element[0]\n+            else:\n+                visitor = SphinxContentsFilter(doctree)\n+                title_element.walkabout(visitor)\n+                titlenode += visitor.get_entry_text()\n             break\n         else:\n             # document has no title\n@@ -56,4 +60,4 @@ def setup(app: Sphinx) -> dict[str, Any]:\n         'version': 'builtin',\n         'parallel_read_safe': True,\n         'parallel_write_safe': True,\n-    }\n+    }\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/environment/collectors/title.py b/sphinx/environment/collectors/title.py\nindex 90c3ce6..6bcdfb2 100644\n--- a/sphinx/environment/collectors/title.py\n+++ b/sphinx/environment/collectors/title.py\n@@ -20,9 +20,13 @@ class TitleCollector(EnvironmentCollector):\n             longtitlenode = nodes.title()\n             longtitlenode += nodes.Text(doctree['title'])\n         for node in doctree.findall(nodes.section):\n-            visitor = SphinxContentsFilter(doctree)\n-            node[0].walkabout(visitor)\n-            titlenode += visitor.get_entry_text()\n+            title_element = node[0]\n+            if len(title_element) > 0 and isinstance(title_element[0], nodes.Text):\n+                titlenode += title_element[0]\n+            else:\n+                visitor = SphinxContentsFilter(doctree)\n+                title_element.walkabout(visitor)\n+                titlenode += visitor.get_entry_text()\n             break\n         else:\n             titlenode += nodes.Text(doctree.get('title', '<no title>'))\n", "normalized_occurrence": 1}
