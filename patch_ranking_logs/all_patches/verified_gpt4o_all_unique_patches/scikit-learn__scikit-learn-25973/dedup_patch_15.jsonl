{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-25973", "model_patch": "diff --git a/sklearn/model_selection/_validation.py b/sklearn/model_selection/_validation.py\nindex 295d6b7..9cad9d1 100644\n--- a/sklearn/model_selection/_validation.py\n+++ b/sklearn/model_selection/_validation.py\n@@ -1934,18 +1934,12 @@ def _aggregate_score_dicts(scores):\n         List of dicts of the scores for all scorers. This is a flat list,\n         assumed originally to be of row major order.\n \n-    Example\n-    -------\n-\n-    >>> scores = [{'a': 1, 'b':10}, {'a': 2, 'b':2}, {'a': 3, 'b':3},\n-    ...           {'a': 10, 'b': 10}]                         # doctest: +SKIP\n-    >>> _aggregate_score_dicts(scores)                        # doctest: +SKIP\n-    {'a': array([1, 2, 3, 10]),\n-     'b': array([10, 2, 3, 10])}\n     \"\"\"\n+    if not scores:\n+        raise ValueError(\"The 'scores' list is empty. Ensure that the cross-validation splits yield results.\")\n     return {\n         key: np.asarray([score[key] for score in scores])\n         if isinstance(scores[0][key], numbers.Number)\n         else [score[key] for score in scores]\n         for key in scores[0]\n-    }\n+    }\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/model_selection/_validation.py b/sklearn/model_selection/_validation.py\nindex c8c3425..56df30a 100644\n--- a/sklearn/model_selection/_validation.py\n+++ b/sklearn/model_selection/_validation.py\n@@ -422,4 +422,6 @@ def validation_curve(estimator, X, y, *, param_name, param_range, groups=None, c\n     test_scores = results['test_scores'].reshape(-1, n_params).T\n     return (train_scores, test_scores)\n def _aggregate_score_dicts(scores):\n+    if not scores:\n+        raise ValueError(\"The 'scores' list is empty. Ensure that the cross-validation splits yield results.\")\n     return {key: np.asarray([score[key] for score in scores]) if isinstance(scores[0][key], numbers.Number) else [score[key] for score in scores] for key in scores[0]}\n\\ No newline at end of file\n", "normalized_occurrence": 1}
