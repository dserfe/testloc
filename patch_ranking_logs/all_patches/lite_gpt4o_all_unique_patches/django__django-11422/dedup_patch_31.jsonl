{"model_name_or_path": "agentless", "instance_id": "django__django-11422", "model_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex 2510c51..ea8f2b8 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -575,6 +575,12 @@ def start_django(reloader, main_func, *args, **kwargs):\n \n \n def run_with_reloader(main_func, *args, **kwargs):\n+    # Ensure manage.py is tracked for changes\n+    extra_files = kwargs.get('extra_files', set())\n+    manage_py_path = pathlib.Path(__file__).parent.parent / 'manage.py'\n+    if manage_py_path.exists():\n+        extra_files.add(manage_py_path.resolve().absolute())\n+    kwargs['extra_files'] = extra_files\n     signal.signal(signal.SIGTERM, lambda *args: sys.exit(0))\n     try:\n         if os.environ.get(DJANGO_AUTORELOAD_ENV) == 'true':\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex bb4b189..d683e7c 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -383,6 +383,11 @@ def start_django(reloader, main_func, *args, **kwargs):\n             logger.error('Error connecting to Watchman: %s', ex)\n             logger.info('Watching for file changes with %s', reloader.__class__.__name__)\n def run_with_reloader(main_func, *args, **kwargs):\n+    extra_files = kwargs.get('extra_files', set())\n+    manage_py_path = pathlib.Path(__file__).parent.parent / 'manage.py'\n+    if manage_py_path.exists():\n+        extra_files.add(manage_py_path.resolve().absolute())\n+    kwargs['extra_files'] = extra_files\n     signal.signal(signal.SIGTERM, lambda *args: sys.exit(0))\n     try:\n         if os.environ.get(DJANGO_AUTORELOAD_ENV) == 'true':\n", "normalized_occurrence": 1}
