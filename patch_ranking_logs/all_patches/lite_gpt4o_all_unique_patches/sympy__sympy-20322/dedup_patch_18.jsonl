{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-20322", "model_patch": "diff --git a/sympy/core/sympify.py b/sympy/core/sympify.py\nindex 3bfc4b1..ace7aae 100644\n--- a/sympy/core/sympify.py\n+++ b/sympy/core/sympify.py\n@@ -436,14 +436,16 @@ def sympify(a, locals=None, convert_xor=True, strict=False, rational=False,\n     if iterable(a):\n         try:\n             return type(a)([sympify(x, locals=locals, convert_xor=convert_xor,\n-                rational=rational) for x in a])\n+                rational=rational,\n+                evaluate=evaluate) for x in a])\n         except TypeError:\n             # Not all iterables are rebuildable with their type.\n             pass\n     if isinstance(a, dict):\n         try:\n             return type(a)([sympify(x, locals=locals, convert_xor=convert_xor,\n-                rational=rational) for x in a.items()])\n+                rational=rational,\n+                evaluate=evaluate) for x in a.items()])\n         except TypeError:\n             # Not all iterables are rebuildable with their type.\n             pass\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/sympify.py b/sympy/core/sympify.py\nindex d4b8b6a..1048721 100644\n--- a/sympy/core/sympify.py\n+++ b/sympy/core/sympify.py\n@@ -98,12 +98,12 @@ def sympify(a, locals=None, convert_xor=True, strict=False, rational=False, eval\n         raise SympifyError(a)\n     if iterable(a):\n         try:\n-            return type(a)([sympify(x, locals=locals, convert_xor=convert_xor, rational=rational) for x in a])\n+            return type(a)([sympify(x, locals=locals, convert_xor=convert_xor, rational=rational, evaluate=evaluate) for x in a])\n         except TypeError:\n             pass\n     if isinstance(a, dict):\n         try:\n-            return type(a)([sympify(x, locals=locals, convert_xor=convert_xor, rational=rational) for x in a.items()])\n+            return type(a)([sympify(x, locals=locals, convert_xor=convert_xor, rational=rational, evaluate=evaluate) for x in a.items()])\n         except TypeError:\n             pass\n     if not isinstance(a, str):\n", "normalized_occurrence": 2}
