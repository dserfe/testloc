{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8269", "model_patch": "diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py\nindex 8266583..e85662e 100644\n--- a/sphinx/builders/linkcheck.py\n+++ b/sphinx/builders/linkcheck.py\n@@ -168,8 +168,9 @@ class CheckExternalLinksBuilder(Builder):\n                                             auth=auth_info, **kwargs)\n                     found = check_anchor(response, unquote(anchor))\n \n+                    response.raise_for_status()\n                     if not found:\n-                        raise Exception(__(\"Anchor '%s' not found\") % anchor)\n+                        raise Exception(__(\"Anchor '%s' not found\") % anchor, response.status_code)\n                 else:\n                     try:\n                         # try a HEAD request first, which should be easier on\n@@ -193,7 +194,9 @@ class CheckExternalLinksBuilder(Builder):\n                 else:\n                     return 'broken', str(err), 0\n             except Exception as err:\n-                if is_ssl_error(err):\n+                if isinstance(err, Exception) and hasattr(err, 'args') and len(err.args) == 2 and isinstance(err.args[1], int):\n+                    return 'broken', str(err.args[0]), err.args[1]\n+                elif is_ssl_error(err):\n                     return 'ignored', str(err), 0\n                 else:\n                     return 'broken', str(err), 0\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py\nindex ace1ed3..776bc3d 100644\n--- a/sphinx/builders/linkcheck.py\n+++ b/sphinx/builders/linkcheck.py\n@@ -98,8 +98,9 @@ class CheckExternalLinksBuilder(Builder):\n                 if anchor and self.app.config.linkcheck_anchors:\n                     response = requests.get(req_url, stream=True, config=self.app.config, auth=auth_info, **kwargs)\n                     found = check_anchor(response, unquote(anchor))\n+                    response.raise_for_status()\n                     if not found:\n-                        raise Exception(__(\"Anchor '%s' not found\") % anchor)\n+                        raise Exception(__(\"Anchor '%s' not found\") % anchor, response.status_code)\n                 else:\n                     try:\n                         response = requests.head(req_url, config=self.app.config, auth=auth_info, **kwargs)\n@@ -115,7 +116,9 @@ class CheckExternalLinksBuilder(Builder):\n                 else:\n                     return ('broken', str(err), 0)\n             except Exception as err:\n-                if is_ssl_error(err):\n+                if isinstance(err, Exception) and hasattr(err, 'args') and (len(err.args) == 2) and isinstance(err.args[1], int):\n+                    return ('broken', str(err.args[0]), err.args[1])\n+                elif is_ssl_error(err):\n                     return ('ignored', str(err), 0)\n                 else:\n                     return ('broken', str(err), 0)\n", "normalized_occurrence": 1}
