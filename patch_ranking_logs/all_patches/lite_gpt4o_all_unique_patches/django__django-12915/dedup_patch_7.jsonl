{"model_name_or_path": "agentless", "instance_id": "django__django-12915", "model_patch": "diff --git a/django/contrib/staticfiles/handlers.py b/django/contrib/staticfiles/handlers.py\nindex f289230..41bf7d1 100644\n--- a/django/contrib/staticfiles/handlers.py\n+++ b/django/contrib/staticfiles/handlers.py\n@@ -79,10 +79,16 @@ class ASGIStaticFilesHandler(StaticFilesHandlerMixin, ASGIHandler):\n         self.base_url = urlparse(self.get_base_url())\n \n     async def __call__(self, scope, receive, send):\n+        async def get_response_async(self, request):\n+            handler = self.file_response(request)\n+            if handler:\n+                return handler\n+            else:\n+                return await super().get_response_async(request)\n         # Only even look at HTTP requests\n         if scope['type'] == 'http' and self._should_handle(scope['path']):\n             # Serve static content\n             # (the one thing super() doesn't do is __call__, apparently)\n             return await super().__call__(scope, receive, send)\n         # Hand off to the main app\n-        return await self.application(scope, receive, send)\n+        return await self.application(scope, receive, send)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/staticfiles/handlers.py b/django/contrib/staticfiles/handlers.py\nindex 5a447be..b62de84 100644\n--- a/django/contrib/staticfiles/handlers.py\n+++ b/django/contrib/staticfiles/handlers.py\n@@ -40,6 +40,12 @@ class ASGIStaticFilesHandler(StaticFilesHandlerMixin, ASGIHandler):\n         self.application = application\n         self.base_url = urlparse(self.get_base_url())\n     async def __call__(self, scope, receive, send):\n+        async def get_response_async(self, request):\n+            handler = self.file_response(request)\n+            if handler:\n+                return handler\n+            else:\n+                return await super().get_response_async(request)\n         if scope['type'] == 'http' and self._should_handle(scope['path']):\n             return await super().__call__(scope, receive, send)\n         return await self.application(scope, receive, send)\n\\ No newline at end of file\n", "normalized_occurrence": 1}
