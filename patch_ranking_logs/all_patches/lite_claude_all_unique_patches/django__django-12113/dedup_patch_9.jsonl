{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12113", "model_patch": "diff --git a/django/db/backends/sqlite3/base.py b/django/db/backends/sqlite3/base.py\nindex 730e4b7..35679bf 100644\n--- a/django/db/backends/sqlite3/base.py\n+++ b/django/db/backends/sqlite3/base.py\n@@ -202,6 +202,10 @@ class DatabaseWrapper(BaseDatabaseWrapper):\n     @async_unsafe\n     def get_new_connection(self, conn_params):\n         conn = Database.connect(**conn_params)\n+        # Set a longer timeout (5 seconds) for handling locked database situations\n+        conn.execute('PRAGMA busy_timeout = 5000')\n+        # Use a less strict isolation level to handle concurrent access better\n+        conn.isolation_level = None\n         conn.create_function(\"django_date_extract\", 2, _sqlite_datetime_extract)\n         conn.create_function(\"django_date_trunc\", 2, _sqlite_date_trunc)\n         conn.create_function('django_datetime_cast_date', 3, _sqlite_datetime_cast_date)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/sqlite3/base.py b/django/db/backends/sqlite3/base.py\nindex f4e71e4..bf3c6a1 100644\n--- a/django/db/backends/sqlite3/base.py\n+++ b/django/db/backends/sqlite3/base.py\n@@ -72,6 +72,8 @@ class DatabaseWrapper(BaseDatabaseWrapper):\n     @async_unsafe\n     def get_new_connection(self, conn_params):\n         conn = Database.connect(**conn_params)\n+        conn.execute('PRAGMA busy_timeout = 5000')\n+        conn.isolation_level = None\n         conn.create_function('django_date_extract', 2, _sqlite_datetime_extract)\n         conn.create_function('django_date_trunc', 2, _sqlite_date_trunc)\n         conn.create_function('django_datetime_cast_date', 3, _sqlite_datetime_cast_date)\n", "normalized_occurrence": 1}
