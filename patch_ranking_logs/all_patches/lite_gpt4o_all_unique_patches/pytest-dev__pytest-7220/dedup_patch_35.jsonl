{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7220", "model_patch": "diff --git a/src/_pytest/nodes.py b/src/_pytest/nodes.py\nindex 585fb01..fc0713c 100644\n--- a/src/_pytest/nodes.py\n+++ b/src/_pytest/nodes.py\n@@ -361,11 +361,7 @@ class Node(metaclass=NodeMeta):\n         else:\n             truncate_locals = True\n \n-        try:\n-            os.getcwd()\n-            abspath = False\n-        except OSError:\n-            abspath = True\n+        abspath = True\n \n         return excinfo.getrepr(\n             funcargs=True,\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/nodes.py b/src/_pytest/nodes.py\nindex e228031..d5022ef 100644\n--- a/src/_pytest/nodes.py\n+++ b/src/_pytest/nodes.py\n@@ -289,11 +289,7 @@ class Node(metaclass=NodeMeta):\n             truncate_locals = False\n         else:\n             truncate_locals = True\n-        try:\n-            os.getcwd()\n-            abspath = False\n-        except OSError:\n-            abspath = True\n+        abspath = True\n         return excinfo.getrepr(funcargs=True, abspath=abspath, showlocals=self.config.getoption('showlocals', False), style=style, tbfilter=False, truncate_locals=truncate_locals)\n \n     def repr_failure(self, excinfo, style=None) -> Union[str, ReprExceptionInfo, ExceptionChainRepr, FixtureLookupErrorRepr]:\n", "normalized_occurrence": 2}
