{"model_name_or_path": "agentless", "instance_id": "django__django-16408", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 83f3a12..cbd0c5a 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -2244,10 +2244,15 @@ class Query(BaseExpression):\n             field_dict = {}\n         else:\n             field_dict = self.select_related\n-        for field in fields:\n-            d = field_dict\n-            for part in field.split(LOOKUP_SEP):\n-                d = d.setdefault(part, {})\n+        related_lookups = set(fields)\n+        for field in related_lookups:\n+            filtered_relation = self.alias_map.get(field.split(LOOKUP_SEP)[0])\n+            if filtered_relation and getattr(filtered_relation, 'join_type', None) == LOUTER:\n+                continue\n+            else:\n+                d = field_dict\n+                for part in field.split(LOOKUP_SEP):\n+                    d = d.setdefault(part, {})\n         self.select_related = field_dict\n \n     def add_extra(self, select, select_params, where, params, tables, order_by):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 0b42199..d4acaf2 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1123,10 +1123,15 @@ class Query(BaseExpression):\n             field_dict = {}\n         else:\n             field_dict = self.select_related\n-        for field in fields:\n-            d = field_dict\n-            for part in field.split(LOOKUP_SEP):\n-                d = d.setdefault(part, {})\n+        related_lookups = set(fields)\n+        for field in related_lookups:\n+            filtered_relation = self.alias_map.get(field.split(LOOKUP_SEP)[0])\n+            if filtered_relation and getattr(filtered_relation, 'join_type', None) == LOUTER:\n+                continue\n+            else:\n+                d = field_dict\n+                for part in field.split(LOOKUP_SEP):\n+                    d = d.setdefault(part, {})\n         self.select_related = field_dict\n     def add_extra(self, select, select_params, where, params, tables, order_by):\n         if select:\n", "normalized_occurrence": 1}
