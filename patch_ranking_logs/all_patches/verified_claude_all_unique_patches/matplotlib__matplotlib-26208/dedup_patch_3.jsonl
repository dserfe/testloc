{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-26208", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex f9613d3..22f24ba 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -4057,10 +4057,13 @@ class _AxesBase(martist.Artist):\n         xmin, xmax = np.clip(sorted([startx, stopx]), xmin0, xmax0)\n         ymin, ymax = np.clip(sorted([starty, stopy]), ymin0, ymax0)\n         # Don't double-zoom twinned axes or if zooming only the other axis.\n-        if twinx or mode == \"y\":\n-            xmin, xmax = xmin0, xmax0\n-        if twiny or mode == \"x\":\n-            ymin, ymax = ymin0, ymax0\n+        # For twinned axes, preserve the original limits unless explicitly zooming\n+        if mode != \"x\":  # Only adjust if not explicitly zooming x\n+            if twinx:\n+                xmin, xmax = xmin0, xmax0\n+        if mode != \"y\":  # Only adjust if not explicitly zooming y\n+            if twiny:\n+                ymin, ymax = ymin0, ymax0\n \n         if direction == \"in\":\n             new_xbound = xmin, xmax\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex eb9da84..490b11e 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1541,10 +1541,12 @@ class _AxesBase(martist.Artist):\n         (startx, starty), (stopx, stopy) = self.transData.inverted().transform([(startx, starty), (stopx, stopy)])\n         xmin, xmax = np.clip(sorted([startx, stopx]), xmin0, xmax0)\n         ymin, ymax = np.clip(sorted([starty, stopy]), ymin0, ymax0)\n-        if twinx or mode == 'y':\n-            xmin, xmax = (xmin0, xmax0)\n-        if twiny or mode == 'x':\n-            ymin, ymax = (ymin0, ymax0)\n+        if mode != 'x':\n+            if twinx:\n+                xmin, xmax = (xmin0, xmax0)\n+        if mode != 'y':\n+            if twiny:\n+                ymin, ymax = (ymin0, ymax0)\n         if direction == 'in':\n             new_xbound = (xmin, xmax)\n             new_ybound = (ymin, ymax)\n", "normalized_occurrence": 1}
