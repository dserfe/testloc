{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-21055", "model_patch": "diff --git a/sympy/functions/elementary/complexes.py b/sympy/functions/elementary/complexes.py\nindex fc56494..558e579 100644\n--- a/sympy/functions/elementary/complexes.py\n+++ b/sympy/functions/elementary/complexes.py\n@@ -760,6 +760,14 @@ class arg(Function):\n         if arg_ != arg:\n             return cls(arg_, evaluate=False)\n \n+    def _eval_refine(self, assumption):\n+        from sympy.assumptions.ask import ask, Q\n+        arg = self.args[0]\n+        if ask(Q.positive(arg), assumption):\n+            return S.Zero\n+        elif ask(Q.negative(arg), assumption):\n+            return S.Pi\n+\n     def _eval_derivative(self, t):\n         x, y = self.args[0].as_real_imag()\n         return (x * Derivative(y, t, evaluate=True) - y *\n", "occurrence": 1, "normalized_patch": "--- a/sympy/functions/elementary/complexes.py\n+++ b/sympy/functions/elementary/complexes.py\n+    def _eval_refine(self, assumption):\n+        from sympy.assumptions.ask import ask, Q\n+        arg = self.args[0]\n+        if ask(Q.positive(arg), assumption):\n+            return S.Zero\n+        elif ask(Q.negative(arg), assumption):\n+            return S.Pi", "normalized_occurrence": 1}
