{"model_name_or_path": "agentless", "instance_id": "django__django-12304", "model_patch": "diff --git a/django/db/models/enums.py b/django/db/models/enums.py\nindex ab625f8..c83884f 100644\n--- a/django/db/models/enums.py\n+++ b/django/db/models/enums.py\n@@ -59,6 +59,7 @@ class ChoicesMeta(enum.EnumMeta):\n \n \n class Choices(enum.Enum, metaclass=ChoicesMeta):\n+    do_not_call_in_templates = True\n     \"\"\"Class for creating enumerated choices.\"\"\"\n \n     def __str__(self):\n@@ -70,11 +71,13 @@ class Choices(enum.Enum, metaclass=ChoicesMeta):\n \n \n class IntegerChoices(int, Choices):\n+    do_not_call_in_templates = True\n     \"\"\"Class for creating enumerated integer choices.\"\"\"\n     pass\n \n \n class TextChoices(str, Choices):\n+    do_not_call_in_templates = True\n     \"\"\"Class for creating enumerated string choices.\"\"\"\n \n     def _generate_next_value_(name, start, count, last_values):\n", "occurrence": 3, "normalized_patch": "diff --git a/django/db/models/enums.py b/django/db/models/enums.py\nindex e323540..edfbe10 100644\n--- a/django/db/models/enums.py\n+++ b/django/db/models/enums.py\n@@ -36,10 +36,13 @@ class ChoicesMeta(enum.EnumMeta):\n     def values(cls):\n         return [value for value, _ in cls.choices]\n class Choices(enum.Enum, metaclass=ChoicesMeta):\n+    do_not_call_in_templates = True\n     def __str__(self):\n         return str(self.value)\n class IntegerChoices(int, Choices):\n+    do_not_call_in_templates = True\n     pass\n class TextChoices(str, Choices):\n+    do_not_call_in_templates = True\n     def _generate_next_value_(name, start, count, last_values):\n         return name\n\\ No newline at end of file\n", "normalized_occurrence": 4}
