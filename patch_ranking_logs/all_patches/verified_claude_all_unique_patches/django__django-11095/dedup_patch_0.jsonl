{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11095", "model_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 62b54f5..2d18f5b 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -554,6 +554,12 @@ class ModelAdmin(BaseModelAdmin):\n     preserve_filters = True\n     inlines = []\n \n+    def get_inlines(self, request, obj=None):\n+        \"\"\"\n+        Hook for specifying custom inlines based on the request or model instance.\n+        \"\"\"\n+        return self.inlines\n+\n     # Custom templates (designed to be over-ridden in subclasses)\n     add_form_template = None\n     change_form_template = None\n@@ -582,7 +588,7 @@ class ModelAdmin(BaseModelAdmin):\n \n     def get_inline_instances(self, request, obj=None):\n         inline_instances = []\n-        for inline_class in self.inlines:\n+        for inline_class in self.get_inlines(request, obj):\n             inline = inline_class(self.model, self.admin_site)\n             if request:\n                 if not (inline.has_view_or_change_permission(request, obj) or\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex bdbec4d..d94cde1 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -275,6 +275,8 @@ class ModelAdmin(BaseModelAdmin):\n     paginator = Paginator\n     preserve_filters = True\n     inlines = []\n+    def get_inlines(self, request, obj=None):\n+        return self.inlines\n     add_form_template = None\n     change_form_template = None\n     change_list_template = None\n@@ -297,7 +299,7 @@ class ModelAdmin(BaseModelAdmin):\n         return '%s.%s' % (self.model._meta.app_label, self.__class__.__name__)\n     def get_inline_instances(self, request, obj=None):\n         inline_instances = []\n-        for inline_class in self.inlines:\n+        for inline_class in self.get_inlines(request, obj):\n             inline = inline_class(self.model, self.admin_site)\n             if request:\n                 if not (inline.has_view_or_change_permission(request, obj) or inline.has_add_permission(request, obj) or inline.has_delete_permission(request, obj)):\n", "normalized_occurrence": 1}
