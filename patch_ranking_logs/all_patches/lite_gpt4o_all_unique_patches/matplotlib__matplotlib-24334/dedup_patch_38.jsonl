{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-24334", "model_patch": "diff --git a/lib/matplotlib/axis.py b/lib/matplotlib/axis.py\nindex d63d9ca..e44857f 100644\n--- a/lib/matplotlib/axis.py\n+++ b/lib/matplotlib/axis.py\n@@ -2021,9 +2021,19 @@ class Axis(martist.Artist):\n         other limits, you should set the limits explicitly after setting the\n         ticks.\n         \"\"\"\n+        from matplotlib.text import Text  # Import Text to validate kwargs\n+\n+        # Validate kwargs to make sure they are valid Text properties\n+        valid_text_props = {prop for prop in dir(Text) if not prop.startswith('_')}\n+        for kwarg in kwargs:\n+            if kwarg not in valid_text_props:\n+                raise TypeError(f\"{kwarg} is not a valid Text property\")\n+\n         result = self._set_tick_locations(ticks, minor=minor)\n         if labels is not None:\n             self.set_ticklabels(labels, minor=minor, **kwargs)\n+        elif kwargs:\n+            raise ValueError(\"kwargs can only be used if 'labels' is provided\")\n         return result\n \n     def _get_tick_boxes_siblings(self, renderer):\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axis.py b/lib/matplotlib/axis.py\nindex 95f7f71..d6c402c 100644\n--- a/lib/matplotlib/axis.py\n+++ b/lib/matplotlib/axis.py\n@@ -1650,9 +1650,16 @@ class Axis(martist.Artist):\n         other limits, you should set the limits explicitly after setting the\n         ticks.\n         \"\"\"\n+        from matplotlib.text import Text\n+        valid_text_props = {prop for prop in dir(Text) if not prop.startswith('_')}\n+        for kwarg in kwargs:\n+            if kwarg not in valid_text_props:\n+                raise TypeError(f'{kwarg} is not a valid Text property')\n         result = self._set_tick_locations(ticks, minor=minor)\n         if labels is not None:\n             self.set_ticklabels(labels, minor=minor, **kwargs)\n+        elif kwargs:\n+            raise ValueError(\"kwargs can only be used if 'labels' is provided\")\n         return result\n \n     def _get_tick_boxes_siblings(self, renderer):\n", "normalized_occurrence": 1}
