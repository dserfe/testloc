{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15957", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 5314293..cec144e 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -2160,7 +2160,14 @@ class Prefetch:\n                 lookup.split(LOOKUP_SEP)[:-1] + [to_attr]\n             )\n \n+        # Store slice information if the queryset is sliced\n         self.queryset = queryset\n+        if queryset is not None and queryset._result_cache is None:\n+            low_mark, high_mark = queryset.query.low_mark, queryset.query.high_mark\n+            if low_mark or high_mark:\n+                self.queryset = queryset.all()  # Remove slice\n+                self.queryset.query.set_limits(low_mark, high_mark)  # Re-apply slice limits\n+\n         self.to_attr = to_attr\n \n     def __getstate__(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex cb06696..8b08045 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -1122,6 +1122,11 @@ class Prefetch:\n         if to_attr:\n             self.prefetch_to = LOOKUP_SEP.join(lookup.split(LOOKUP_SEP)[:-1] + [to_attr])\n         self.queryset = queryset\n+        if queryset is not None and queryset._result_cache is None:\n+            low_mark, high_mark = (queryset.query.low_mark, queryset.query.high_mark)\n+            if low_mark or high_mark:\n+                self.queryset = queryset.all()\n+                self.queryset.query.set_limits(low_mark, high_mark)\n         self.to_attr = to_attr\n     def __getstate__(self):\n         obj_dict = self.__dict__.copy()\n", "normalized_occurrence": 1}
