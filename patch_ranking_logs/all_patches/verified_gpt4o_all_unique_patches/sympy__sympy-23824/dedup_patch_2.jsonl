{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-23824", "model_patch": "diff --git a/sympy/physics/hep/gamma_matrices.py b/sympy/physics/hep/gamma_matrices.py\nindex 8ce17be..4792323 100644\n--- a/sympy/physics/hep/gamma_matrices.py\n+++ b/sympy/physics/hep/gamma_matrices.py\n@@ -684,7 +684,7 @@ def kahane_simplify(expression):\n         # the `resulting_indices`:\n         else:\n             expr1 = prepend_indices\n-            expr2 = list(reversed(prepend_indices))\n+            expr2 = prepend_indices\n             resulting_indices = [expri + ri for ri in resulting_indices for expri in (expr1, expr2)]\n \n     # sign correction, as described in Kahane's paper:\n", "occurrence": 7, "normalized_patch": "diff --git a/sympy/physics/hep/gamma_matrices.py b/sympy/physics/hep/gamma_matrices.py\nindex a91f01b..2bc0771 100644\n--- a/sympy/physics/hep/gamma_matrices.py\n+++ b/sympy/physics/hep/gamma_matrices.py\n@@ -309,7 +309,7 @@ def kahane_simplify(expression):\n             resulting_coeff *= 2\n         else:\n             expr1 = prepend_indices\n-            expr2 = list(reversed(prepend_indices))\n+            expr2 = prepend_indices\n             resulting_indices = [expri + ri for ri in resulting_indices for expri in (expr1, expr2)]\n     resulting_coeff *= -1 if (number_of_contractions - connected_components + 1) % 2 else 1\n     resulting_coeff *= 2 ** number_of_contractions\n", "normalized_occurrence": 7}
