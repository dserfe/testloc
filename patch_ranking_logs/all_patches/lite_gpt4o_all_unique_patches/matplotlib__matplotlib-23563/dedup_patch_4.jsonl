{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-23563", "model_patch": "diff --git a/lib/mpl_toolkits/mplot3d/art3d.py b/lib/mpl_toolkits/mplot3d/art3d.py\nindex fa869c7..160a130 100644\n--- a/lib/mpl_toolkits/mplot3d/art3d.py\n+++ b/lib/mpl_toolkits/mplot3d/art3d.py\n@@ -165,7 +165,7 @@ class Line3D(lines.Line2D):\n         \"\"\"\n         Keyword arguments are passed onto :func:`~matplotlib.lines.Line2D`.\n         \"\"\"\n-        super().__init__([], [], *args, **kwargs)\n+        super().__init__(xs, ys, *args, **kwargs)\n         self._verts3d = xs, ys, zs\n \n     def set_3d_properties(self, zs=0, zdir='z'):\n@@ -211,7 +211,7 @@ class Line3D(lines.Line2D):\n \n     @artist.allow_rasterization\n     def draw(self, renderer):\n-        xs3d, ys3d, zs3d = self._verts3d\n+        xs3d, ys3d, zs3d = getattr(self, '_verts3d', ([], [], []))\n         xs, ys, zs = proj3d.proj_transform(xs3d, ys3d, zs3d, self.axes.M)\n         self.set_data(xs, ys)\n         super().draw(renderer)\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/mpl_toolkits/mplot3d/art3d.py b/lib/mpl_toolkits/mplot3d/art3d.py\nindex e39ff0d..b1959e3 100644\n--- a/lib/mpl_toolkits/mplot3d/art3d.py\n+++ b/lib/mpl_toolkits/mplot3d/art3d.py\n@@ -63,7 +63,7 @@ def text_2d_to_3d(obj, z=0, zdir='z'):\n     obj.set_3d_properties(z, zdir)\n class Line3D(lines.Line2D):\n     def __init__(self, xs, ys, zs, *args, **kwargs):\n-        super().__init__([], [], *args, **kwargs)\n+        super().__init__(xs, ys, *args, **kwargs)\n         self._verts3d = (xs, ys, zs)\n     def set_3d_properties(self, zs=0, zdir='z'):\n         xs = self.get_xdata()\n@@ -81,7 +81,7 @@ class Line3D(lines.Line2D):\n         return self._verts3d\n     @artist.allow_rasterization\n     def draw(self, renderer):\n-        xs3d, ys3d, zs3d = self._verts3d\n+        xs3d, ys3d, zs3d = getattr(self, '_verts3d', ([], [], []))\n         xs, ys, zs = proj3d.proj_transform(xs3d, ys3d, zs3d, self.axes.M)\n         self.set_data(xs, ys)\n         super().draw(renderer)\n", "normalized_occurrence": 1}
