{"model_name_or_path": "agentless_claude", "instance_id": "psf__requests-863", "model_patch": "diff --git a/requests/hooks.py b/requests/hooks.py\nindex 2c937f2..700f0cb 100644\n--- a/requests/hooks.py\n+++ b/requests/hooks.py\n@@ -35,15 +35,17 @@ def dispatch_hook(key, hooks, hook_data):\n     hooks = hooks or dict()\n \n     if key in hooks:\n-        hooks = hooks.get(key)\n+        hook_list = hooks.get(key)\n \n-        if hasattr(hooks, '__call__'):\n-            hooks = [hooks]\n+        if hasattr(hook_list, '__call__'):\n+            hook_list = [hook_list]\n+        elif not isinstance(hook_list, (list, tuple)):\n+            hook_list = [hook_list]\n \n-        for hook in hooks:\n+        for hook in hook_list:\n             _hook_data = hook(hook_data)\n             if _hook_data is not None:\n                 hook_data = _hook_data\n \n \n-    return hook_data\n+    return hook_data\n", "occurrence": 1, "normalized_patch": "diff --git a/requests/hooks.py b/requests/hooks.py\nindex 7057710..96bb663 100644\n--- a/requests/hooks.py\n+++ b/requests/hooks.py\n@@ -2,10 +2,12 @@ HOOKS = ('args', 'pre_request', 'pre_send', 'post_request', 'response')\n def dispatch_hook(key, hooks, hook_data):\n     hooks = hooks or dict()\n     if key in hooks:\n-        hooks = hooks.get(key)\n-        if hasattr(hooks, '__call__'):\n-            hooks = [hooks]\n-        for hook in hooks:\n+        hook_list = hooks.get(key)\n+        if hasattr(hook_list, '__call__'):\n+            hook_list = [hook_list]\n+        elif not isinstance(hook_list, (list, tuple)):\n+            hook_list = [hook_list]\n+        for hook in hook_list:\n             _hook_data = hook(hook_data)\n             if _hook_data is not None:\n                 hook_data = _hook_data\n", "normalized_occurrence": 2}
