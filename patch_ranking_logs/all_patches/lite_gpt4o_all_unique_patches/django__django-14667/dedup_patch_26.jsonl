{"model_name_or_path": "agentless", "instance_id": "django__django-14667", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 8635bf4..5457fdb 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -2068,7 +2068,7 @@ class Query(BaseExpression):\n         \"\"\"Remove any fields from the deferred loading set.\"\"\"\n         self.deferred_loading = (frozenset(), True)\n \n-    def add_deferred_loading(self, field_names):\n+    def add_deferred_loading(self, *field_names):\n         \"\"\"\n         Add the given list of model field names to the set of fields to\n         exclude from loading from the database when automatic column selection\n@@ -2080,13 +2080,18 @@ class Query(BaseExpression):\n         # format, so that we can use a set datastructure. We do the foo__bar\n         # splitting and handling when computing the SQL column names (as part of\n         # get_columns()).\n-        existing, defer = self.deferred_loading\n+        existing_deferred, defer = self.deferred_loading\n+        existing_only, only = self.immediate_loading\n         if defer:\n             # Add to existing deferred names.\n-            self.deferred_loading = existing.union(field_names), True\n+            new_deferred = existing_deferred.union(field_names)\n+            if only:\n+                new_deferred = new_deferred.difference(existing_only)\n+            self.deferred_loading = new_deferred, True\n         else:\n             # Remove names from the set of any existing \"immediate load\" names.\n-            self.deferred_loading = existing.difference(field_names), False\n+            new_deferred = existing_only.difference(field_names)\n+            self.deferred_loading = new_deferred, False\n \n     def add_immediate_loading(self, field_names):\n         \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex a07bc15..3d34f0a 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1135,12 +1135,17 @@ class Query(BaseExpression):\n             self.extra_order_by = order_by\n     def clear_deferred_loading(self):\n         self.deferred_loading = (frozenset(), True)\n-    def add_deferred_loading(self, field_names):\n-        existing, defer = self.deferred_loading\n+    def add_deferred_loading(self, *field_names):\n+        existing_deferred, defer = self.deferred_loading\n+        existing_only, only = self.immediate_loading\n         if defer:\n-            self.deferred_loading = (existing.union(field_names), True)\n+            new_deferred = existing_deferred.union(field_names)\n+            if only:\n+                new_deferred = new_deferred.difference(existing_only)\n+            self.deferred_loading = (new_deferred, True)\n         else:\n-            self.deferred_loading = (existing.difference(field_names), False)\n+            new_deferred = existing_only.difference(field_names)\n+            self.deferred_loading = (new_deferred, False)\n     def add_immediate_loading(self, field_names):\n         existing, defer = self.deferred_loading\n         field_names = set(field_names)\n", "normalized_occurrence": 1}
