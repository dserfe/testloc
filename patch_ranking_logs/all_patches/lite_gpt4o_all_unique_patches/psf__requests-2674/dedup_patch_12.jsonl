{"model_name_or_path": "agentless", "instance_id": "psf__requests-2674", "model_patch": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex 06b1117..6b9beae 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -424,12 +424,16 @@ class HTTPAdapter(BaseAdapter):\n         except _ProxyError as e:\n             raise ProxyError(e)\n \n-        except (_SSLError, _HTTPError) as e:\n+        except (_SSLError, _HTTPError, DecodeError, TimeoutError) as e:\n             if isinstance(e, _SSLError):\n                 raise SSLError(e, request=request)\n             elif isinstance(e, ReadTimeoutError):\n                 raise ReadTimeout(e, request=request)\n+            elif isinstance(e, DecodeError):\n+                raise requests.exceptions.DecodeError(e, request=request)\n+            elif isinstance(e, TimeoutError):\n+                raise requests.exceptions.Timeout(e, request=request)\n             else:\n                 raise\n \n-        return self.build_response(request, resp)\n+        return self.build_response(request, resp)\n", "occurrence": 1, "normalized_patch": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex 9062cd5..661192c 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -175,11 +175,15 @@ class HTTPAdapter(BaseAdapter):\n             raise ConnectionError(e, request=request)\n         except _ProxyError as e:\n             raise ProxyError(e)\n-        except (_SSLError, _HTTPError) as e:\n+        except (_SSLError, _HTTPError, DecodeError, TimeoutError) as e:\n             if isinstance(e, _SSLError):\n                 raise SSLError(e, request=request)\n             elif isinstance(e, ReadTimeoutError):\n                 raise ReadTimeout(e, request=request)\n+            elif isinstance(e, DecodeError):\n+                raise requests.exceptions.DecodeError(e, request=request)\n+            elif isinstance(e, TimeoutError):\n+                raise requests.exceptions.Timeout(e, request=request)\n             else:\n                 raise\n         return self.build_response(request, resp)\n\\ No newline at end of file\n", "normalized_occurrence": 1}
