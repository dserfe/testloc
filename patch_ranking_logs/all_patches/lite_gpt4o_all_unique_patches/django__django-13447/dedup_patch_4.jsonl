{"model_name_or_path": "agentless", "instance_id": "django__django-13447", "model_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex fbd994b..8ba2951 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -98,6 +98,36 @@ csrf_protect_m = method_decorator(csrf_protect)\n \n \n class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n+    def build_app_dict(self, request, app_label=None):\n+        \"\"\"\n+        Return a dictionary of the app's information.\n+        \"\"\"\n+        app_dict = {}\n+        user = request.user\n+        models = self.get_model_list(request, app_label)\n+        for model, model_admin in models:\n+            if not model_admin.has_view_permission(request):\n+                continue\n+            perms = model_admin.get_model_perms(request)\n+            if True not in perms.values():\n+                continue\n+            info = (model._meta.app_label, model._meta.model_name)\n+            app_dict[info] = {\n+                'name': capfirst(model._meta.verbose_name_plural),\n+                'object_name': model._meta.object_name,\n+                'perms': perms,\n+                'admin_url': reverse(\n+                    'admin:%s_%s_changelist' % info,\n+                    current_app=self.admin_site.name,\n+                ),\n+                'add_url': reverse(\n+                    'admin:%s_%s_add' % info,\n+                    current_app=self.admin_site.name,\n+                ),\n+                'view_only': not perms['change'],\n+                'model': model  # Include the model class in the context\n+            }\n+        return app_dict\n     \"\"\"Functionality common to both ModelAdmin and InlineAdmin.\"\"\"\n \n     autocomplete_fields = ()\n", "occurrence": 1, "normalized_patch": "--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n+    def build_app_dict(self, request, app_label=None):\n+        app_dict = {}\n+        user = request.user\n+        models = self.get_model_list(request, app_label)\n+        for model, model_admin in models:\n+            if not model_admin.has_view_permission(request):\n+                continue\n+            perms = model_admin.get_model_perms(request)\n+            if True not in perms.values():\n+                continue\n+            info = (model._meta.app_label, model._meta.model_name)\n+            app_dict[info] = {'name': capfirst(model._meta.verbose_name_plural), 'object_name': model._meta.object_name, 'perms': perms, 'admin_url': reverse('admin:%s_%s_changelist' % info, current_app=self.admin_site.name), 'add_url': reverse('admin:%s_%s_add' % info, current_app=self.admin_site.name), 'view_only': not perms['change'], 'model': model}\n+        return app_dict\n+    'Functionality common to both ModelAdmin and InlineAdmin.'", "normalized_occurrence": 1}
