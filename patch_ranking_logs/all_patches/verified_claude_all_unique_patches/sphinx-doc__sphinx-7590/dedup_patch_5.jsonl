{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-7590", "model_patch": "diff --git a/sphinx/domains/cpp.py b/sphinx/domains/cpp.py\nindex 71a23bd..5159412 100644\n--- a/sphinx/domains/cpp.py\n+++ b/sphinx/domains/cpp.py\n@@ -685,6 +685,9 @@ class ASTNestedName(ASTBase):\n             if tt in _id_shorthands_v1:\n                 return _id_shorthands_v1[tt]\n             else:\n+                # Handle UDL operators specially\n+                if any(n.is_operator() and str(n).startswith('operator\"\"') for n in self.names):\n+                    return str(self)  # Return the full literal including UDL\n                 return '::'.join(n.get_id(version) for n in self.names)\n \n         res = []\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/domains/cpp.py b/sphinx/domains/cpp.py\nindex 4396875..4faeccf 100644\n--- a/sphinx/domains/cpp.py\n+++ b/sphinx/domains/cpp.py\n@@ -146,6 +146,8 @@ class ASTNestedName(ASTBase):\n             if tt in _id_shorthands_v1:\n                 return _id_shorthands_v1[tt]\n             else:\n+                if any((n.is_operator() and str(n).startswith('operator\"\"') for n in self.names)):\n+                    return str(self)\n                 return '::'.join((n.get_id(version) for n in self.names))\n         res = []\n         if len(self.names) > 1 or len(modifiers) > 0:\n", "normalized_occurrence": 1}
