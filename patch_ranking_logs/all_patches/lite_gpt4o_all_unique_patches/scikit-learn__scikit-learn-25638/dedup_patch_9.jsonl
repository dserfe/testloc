{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-25638", "model_patch": "diff --git a/sklearn/utils/multiclass.py b/sklearn/utils/multiclass.py\nindex db3f82e..4384826 100644\n--- a/sklearn/utils/multiclass.py\n+++ b/sklearn/utils/multiclass.py\n@@ -312,7 +312,10 @@ def type_of_target(y, input_name=\"\"):\n                 # see NEP 34\n                 y = xp.asarray(y, dtype=object)\n \n-    # The old sequence of sequences format\n+    # Handle nullable pandas dtypes\n+    if isinstance(y, pd.Series):\n+        if y.dtype.name in [\"Int64\", \"Float64\", \"boolean\"]:\n+            y = y.to_numpy()\n     try:\n         if (\n             not hasattr(y[0], \"__array__\")\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/utils/multiclass.py b/sklearn/utils/multiclass.py\nindex dee4b2a..85dc14d 100644\n--- a/sklearn/utils/multiclass.py\n+++ b/sklearn/utils/multiclass.py\n@@ -80,6 +80,9 @@ def type_of_target(y, input_name=''):\n                 y = xp.asarray(y)\n             except (np.VisibleDeprecationWarning, ValueError):\n                 y = xp.asarray(y, dtype=object)\n+    if isinstance(y, pd.Series):\n+        if y.dtype.name in ['Int64', 'Float64', 'boolean']:\n+            y = y.to_numpy()\n     try:\n         if not hasattr(y[0], '__array__') and isinstance(y[0], Sequence) and (not isinstance(y[0], str)):\n             raise ValueError('You appear to be using a legacy multi-label data representation. Sequence of sequences are no longer supported; use a binary array or sparse matrix instead - the MultiLabelBinarizer transformer can convert to this format.')\n", "normalized_occurrence": 1}
