{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14351", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex e16dbc0..78a4bc2 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -226,6 +226,10 @@ class SQLCompiler:\n         assert not (self.query.select and self.query.default_cols)\n         if self.query.default_cols:\n             cols = self.get_default_columns()\n+            # When this is a subquery used for IN clause comparison,\n+            # we only need the primary key field\n+            if self.query.subquery and any(isinstance(col.field, models.AutoField) for col in cols):\n+                cols = [col for col in cols if isinstance(col.field, models.AutoField)]\n         else:\n             # self.query.select is a special case. These columns never go to\n             # any model.\n", "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex b3e101b..e9d4934 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -100,6 +100,8 @@ class SQLCompiler:\n         assert not (self.query.select and self.query.default_cols)\n         if self.query.default_cols:\n             cols = self.get_default_columns()\n+            if self.query.subquery and any((isinstance(col.field, models.AutoField) for col in cols)):\n+                cols = [col for col in cols if isinstance(col.field, models.AutoField)]\n         else:\n             cols = self.query.select\n         if cols:\n", "normalized_occurrence": 1}
