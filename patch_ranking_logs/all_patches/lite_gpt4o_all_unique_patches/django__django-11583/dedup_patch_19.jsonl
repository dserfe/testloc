{"model_name_or_path": "agentless", "instance_id": "django__django-11583", "model_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex f44661f..990d42a 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -138,8 +138,11 @@ def iter_modules_and_files(modules, extra_files):\n             continue\n         path = Path(filename)\n         try:\n+            # Ensure the path does not contain an embedded null byte\n+            if '\\x00' in str(path):\n+                continue\n             resolved_path = path.resolve(strict=True).absolute()\n-        except FileNotFoundError:\n+        except (FileNotFoundError, ValueError):\n             # The module could have been removed, don't fail loudly if this\n             # is the case.\n             continue\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex e37abac..559fca8 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -92,8 +92,10 @@ def iter_modules_and_files(modules, extra_files):\n             continue\n         path = Path(filename)\n         try:\n+            if '\\x00' in str(path):\n+                continue\n             resolved_path = path.resolve(strict=True).absolute()\n-        except FileNotFoundError:\n+        except (FileNotFoundError, ValueError):\n             continue\n         results.add(resolved_path)\n     return frozenset(results)\n", "normalized_occurrence": 1}
