{"model_name_or_path": "agentless", "instance_id": "django__django-11564", "model_patch": "diff --git a/django/contrib/staticfiles/storage.py b/django/contrib/staticfiles/storage.py\nindex 3fb83f0..1a56040 100644\n--- a/django/contrib/staticfiles/storage.py\n+++ b/django/contrib/staticfiles/storage.py\n@@ -145,7 +145,11 @@ class HashedFilesMixin:\n         \"\"\"\n         Return the non-hashed URL in DEBUG mode.\n         \"\"\"\n-        return self._url(self.stored_name, name, force)\n+        final_url = self._url(self.stored_name, name, force)\n+        script_name = getattr(settings, 'SCRIPT_NAME', '')\n+        if script_name:\n+            final_url = script_name.rstrip('/') + final_url\n+        return final_url\n \n     def url_converter(self, name, hashed_files, template=None):\n         \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/staticfiles/storage.py b/django/contrib/staticfiles/storage.py\nindex 510129c..2f048c5 100644\n--- a/django/contrib/staticfiles/storage.py\n+++ b/django/contrib/staticfiles/storage.py\n@@ -99,7 +99,11 @@ class HashedFilesMixin:\n             final_url = urlunsplit(urlparts)\n         return unquote(final_url)\n     def url(self, name, force=False):\n-        return self._url(self.stored_name, name, force)\n+        final_url = self._url(self.stored_name, name, force)\n+        script_name = getattr(settings, 'SCRIPT_NAME', '')\n+        if script_name:\n+            final_url = script_name.rstrip('/') + final_url\n+        return final_url\n     def url_converter(self, name, hashed_files, template=None):\n         if template is None:\n             template = self.default_template\n", "normalized_occurrence": 1}
