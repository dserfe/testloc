{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-8551", "model_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex f44a82b..f061247 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -1260,13 +1260,24 @@ class PythonDomain(Domain):\n                     if fullname in self.objects and self.objects[fullname].objtype in objtypes:\n                         newname = fullname\n                 if not newname:\n+                    # First try in current module\n                     if modname and modname + '.' + name in self.objects and \\\n                        self.objects[modname + '.' + name].objtype in objtypes:\n                         newname = modname + '.' + name\n+                    # Then try unqualified (for builtins/globals)\n                     elif name in self.objects and self.objects[name].objtype in objtypes:\n                         newname = name\n-                    else:\n-                        # \"fuzzy\" searching mode\n+                    # If still not found and we're in a submodule, try parent modules\n+                    elif modname and '.' in modname:\n+                        parent = modname\n+                        while '.' in parent and not newname:\n+                            parent = parent.rsplit('.', 1)[0]\n+                            fullname = parent + '.' + name\n+                            if fullname in self.objects and \\\n+                               self.objects[fullname].objtype in objtypes:\n+                                newname = fullname\n+                    # Only do fuzzy search as last resort\n+                    if not newname:\n                         searchname = '.' + name\n                         matches = [(oname, self.objects[oname]) for oname in self.objects\n                                    if oname.endswith(searchname) and\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex 2ce105a..df9e33f 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -763,7 +763,14 @@ class PythonDomain(Domain):\n                         newname = modname + '.' + name\n                     elif name in self.objects and self.objects[name].objtype in objtypes:\n                         newname = name\n-                    else:\n+                    elif modname and '.' in modname:\n+                        parent = modname\n+                        while '.' in parent and (not newname):\n+                            parent = parent.rsplit('.', 1)[0]\n+                            fullname = parent + '.' + name\n+                            if fullname in self.objects and self.objects[fullname].objtype in objtypes:\n+                                newname = fullname\n+                    if not newname:\n                         searchname = '.' + name\n                         matches = [(oname, self.objects[oname]) for oname in self.objects if oname.endswith(searchname) and self.objects[oname].objtype in objtypes]\n         elif name in self.objects:\n", "normalized_occurrence": 1}
