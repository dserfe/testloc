{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-7236", "model_patch": "diff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py\nindex 28ce115..6677247 100644\n--- a/src/_pytest/unittest.py\n+++ b/src/_pytest/unittest.py\n@@ -214,6 +214,12 @@ class TestCaseFunction(Function):\n         if is_async_function(self.obj):\n             self._testcase(self)\n         else:\n+            # Skip handling: if the test is marked as skipped, don't run it at all\n+            skip = getattr(self.obj, \"__unittest_skip__\", False)\n+            if skip:\n+                self._testcase(result=self)\n+                return\n+\n             # when --pdb is given, we want to postpone calling tearDown() otherwise\n             # when entering the pdb prompt, tearDown() would have probably cleaned up\n             # instance variables, which makes it difficult to debug\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py\nindex 4eb682f..9181b11 100644\n--- a/src/_pytest/unittest.py\n+++ b/src/_pytest/unittest.py\n@@ -152,6 +152,10 @@ class TestCaseFunction(Function):\n         if is_async_function(self.obj):\n             self._testcase(self)\n         else:\n+            skip = getattr(self.obj, '__unittest_skip__', False)\n+            if skip:\n+                self._testcase(result=self)\n+                return\n             if self.config.getoption('usepdb'):\n                 self._explicit_tearDown = self._testcase.tearDown\n                 setattr(self._testcase, 'tearDown', lambda *args: None)\n", "normalized_occurrence": 1}
