{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13031", "model_patch": "diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py\nindex 79b3d5e..18cb3f8 100644\n--- a/sympy/matrices/common.py\n+++ b/sympy/matrices/common.py\n@@ -377,8 +377,16 @@ class MatrixShaping(MatrixRequired):\n         if len(args) == 0:\n             return cls._new()\n \n-        kls = type(args[0])\n-        return reduce(kls.row_join, args)\n+        # Handle empty matrices properly by checking for zero-column matrices\n+        nonzero_args = [arg for arg in args if arg.cols != 0]\n+        if not nonzero_args:\n+            # If all matrices have zero columns, return a matrix with\n+            # appropriate number of rows and zero columns\n+            rows = args[0].rows if args else 0\n+            return cls.zeros(rows, 0)\n+\n+        kls = type(nonzero_args[0])\n+        return reduce(kls.row_join, nonzero_args)\n \n     def reshape(self, rows, cols):\n         \"\"\"Reshape the matrix. Total number of elements must remain the same.\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py\nindex 1e4e3f2..cb8e0d7 100644\n--- a/sympy/matrices/common.py\n+++ b/sympy/matrices/common.py\n@@ -151,8 +151,12 @@ class MatrixShaping(MatrixRequired):\n     def hstack(cls, *args):\n         if len(args) == 0:\n             return cls._new()\n-        kls = type(args[0])\n-        return reduce(kls.row_join, args)\n+        nonzero_args = [arg for arg in args if arg.cols != 0]\n+        if not nonzero_args:\n+            rows = args[0].rows if args else 0\n+            return cls.zeros(rows, 0)\n+        kls = type(nonzero_args[0])\n+        return reduce(kls.row_join, nonzero_args)\n     def reshape(self, rows, cols):\n         if self.rows * self.cols != rows * cols:\n             raise ValueError('Invalid reshape parameters %d %d' % (rows, cols))\n", "normalized_occurrence": 1}
