{"model_name_or_path": "agentless", "instance_id": "django__django-16820", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex cffcd20..f4ec652 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -636,16 +636,32 @@ class AlterUniqueTogether(AlterTogetherOptionOperation):\n         super().__init__(name, unique_together)\n \n \n-class AlterIndexTogether(AlterTogetherOptionOperation):\n-    \"\"\"\n-    Change the value of index_together to the target one.\n-    Input value of index_together must be a set of tuples.\n-    \"\"\"\n+# Deprecated in favor of AddIndex and RemoveIndex.\n+class AlterIndexTogether(Operation):\n+    option_name = \"indexes\"\n+\n+    def __init__(self, name, indexes):\n+        self.name = name\n+        self.indexes = indexes\n+\n+    def deconstruct(self):\n+        return (\n+            self.__class__.__name__,\n+            [self.name, self.indexes],\n+            {},\n+        )\n \n-    option_name = \"index_together\"\n+    def state_forwards(self, app_label, state):\n+        model_state = state.models[app_label, self.name.lower()]\n+        model_state.options[self.option_name] = self.indexes\n \n-    def __init__(self, name, index_together):\n-        super().__init__(name, index_together)\n+    def database_forwards(self, app_label, schema_editor, from_state, to_state):\n+        for index in self.indexes:\n+            schema_editor.add_index(from_state.apps.get_model(app_label, self.name), index)\n+\n+    def database_backwards(self, app_label, schema_editor, from_state, to_state):\n+        for index in self.indexes:\n+            schema_editor.remove_index(from_state.apps.get_model(app_label, self.name), index)\n \n \n class AlterOrderWithRespectTo(ModelOptionOperation):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 064ae1a..9d3efa7 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -274,10 +274,22 @@ class AlterUniqueTogether(AlterTogetherOptionOperation):\n     option_name = 'unique_together'\n     def __init__(self, name, unique_together):\n         super().__init__(name, unique_together)\n-class AlterIndexTogether(AlterTogetherOptionOperation):\n-    option_name = 'index_together'\n-    def __init__(self, name, index_together):\n-        super().__init__(name, index_together)\n+class AlterIndexTogether(Operation):\n+    option_name = 'indexes'\n+    def __init__(self, name, indexes):\n+        self.name = name\n+        self.indexes = indexes\n+    def deconstruct(self):\n+        return (self.__class__.__name__, [self.name, self.indexes], {})\n+    def state_forwards(self, app_label, state):\n+        model_state = state.models[app_label, self.name.lower()]\n+        model_state.options[self.option_name] = self.indexes\n+    def database_forwards(self, app_label, schema_editor, from_state, to_state):\n+        for index in self.indexes:\n+            schema_editor.add_index(from_state.apps.get_model(app_label, self.name), index)\n+    def database_backwards(self, app_label, schema_editor, from_state, to_state):\n+        for index in self.indexes:\n+            schema_editor.remove_index(from_state.apps.get_model(app_label, self.name), index)\n class AlterOrderWithRespectTo(ModelOptionOperation):\n     option_name = 'order_with_respect_to'\n     def __init__(self, name, order_with_respect_to):\n", "normalized_occurrence": 1}
