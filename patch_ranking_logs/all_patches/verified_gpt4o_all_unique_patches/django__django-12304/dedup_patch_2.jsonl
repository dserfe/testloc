{"model_name_or_path": "agentless", "instance_id": "django__django-12304", "model_patch": "diff --git a/django/db/models/enums.py b/django/db/models/enums.py\nindex ab625f8..67c71c7 100644\n--- a/django/db/models/enums.py\n+++ b/django/db/models/enums.py\n@@ -60,6 +60,8 @@ class ChoicesMeta(enum.EnumMeta):\n \n class Choices(enum.Enum, metaclass=ChoicesMeta):\n     \"\"\"Class for creating enumerated choices.\"\"\"\n+    do_not_call_in_templates = True\n+    \"\"\"Class for creating enumerated choices.\"\"\"\n \n     def __str__(self):\n         \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/enums.py b/django/db/models/enums.py\nindex e323540..da8cd44 100644\n--- a/django/db/models/enums.py\n+++ b/django/db/models/enums.py\n@@ -36,6 +36,7 @@ class ChoicesMeta(enum.EnumMeta):\n     def values(cls):\n         return [value for value, _ in cls.choices]\n class Choices(enum.Enum, metaclass=ChoicesMeta):\n+    do_not_call_in_templates = True\n     def __str__(self):\n         return str(self.value)\n class IntegerChoices(int, Choices):\n", "normalized_occurrence": 33}
