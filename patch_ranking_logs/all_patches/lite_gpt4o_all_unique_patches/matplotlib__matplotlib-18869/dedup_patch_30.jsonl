{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-18869", "model_patch": "diff --git a/lib/matplotlib/__init__.py b/lib/matplotlib/__init__.py\nindex 320d1a7..a7e91fa 100644\n--- a/lib/matplotlib/__init__.py\n+++ b/lib/matplotlib/__init__.py\n@@ -130,10 +130,13 @@ __bibtex__ = r\"\"\"@Article{Hunter:2007,\n }\"\"\"\n \n \n+import setuptools_scm\n+from pathlib import Path\n+from distutils.version import LooseVersion\n+\n def __getattr__(name):\n-    if name == \"__version__\":\n-        import setuptools_scm\n-        global __version__  # cache it.\n+    if name in (\"__version__\", \"version_info\", \"loose_version\"):\n+        global __version__, version_info, loose_version  # cache them.\n         # Only shell out to a git subprocess if really needed, and not on a\n         # shallow clone, such as those used by CI, as the latter would trigger\n         # a warning from setuptools_scm.\n@@ -147,7 +150,16 @@ def __getattr__(name):\n             )\n         else:  # Get the version from the _version.py setuptools_scm file.\n             __version__ = _version.version\n-        return __version__\n+\n+        version_info = tuple(int(x) for x in __version__.split(\".\") if x.isdigit())\n+        loose_version = LooseVersion(__version__)\n+        \n+        if name == \"__version__\":\n+            return __version__\n+        elif name == \"version_info\":\n+            return version_info\n+        elif name == \"loose_version\":\n+            return loose_version\n     raise AttributeError(f\"module {__name__!r} has no attribute {name!r}\")\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/__init__.py b/lib/matplotlib/__init__.py\nindex 4b4b135..1187aab 100644\n--- a/lib/matplotlib/__init__.py\n+++ b/lib/matplotlib/__init__.py\n@@ -25,16 +25,25 @@ from matplotlib.cbook import mplDeprecation\n from matplotlib.rcsetup import validate_backend, cycler\n _log = logging.getLogger(__name__)\n __bibtex__ = '@Article{Hunter:2007,\\n  Author    = {Hunter, J. D.},\\n  Title     = {Matplotlib: A 2D graphics environment},\\n  Journal   = {Computing in Science \\\\& Engineering},\\n  Volume    = {9},\\n  Number    = {3},\\n  Pages     = {90--95},\\n  abstract  = {Matplotlib is a 2D graphics package used for Python\\n  for application development, interactive scripting, and\\n  publication-quality image generation across user\\n  interfaces and operating systems.},\\n  publisher = {IEEE COMPUTER SOC},\\n  year      = 2007\\n}'\n+import setuptools_scm\n+from pathlib import Path\n+from distutils.version import LooseVersion\n def __getattr__(name):\n-    if name == '__version__':\n-        import setuptools_scm\n-        global __version__\n+    if name in ('__version__', 'version_info', 'loose_version'):\n+        global __version__, version_info, loose_version\n         root = Path(__file__).resolve().parents[2]\n         if (root / '.git').exists() and (not (root / '.git/shallow').exists()):\n             __version__ = setuptools_scm.get_version(root=root, version_scheme='post-release', local_scheme='node-and-date', fallback_version=_version.version)\n         else:\n             __version__ = _version.version\n-        return __version__\n+        version_info = tuple((int(x) for x in __version__.split('.') if x.isdigit()))\n+        loose_version = LooseVersion(__version__)\n+        if name == '__version__':\n+            return __version__\n+        elif name == 'version_info':\n+            return version_info\n+        elif name == 'loose_version':\n+            return loose_version\n     raise AttributeError(f'module {__name__!r} has no attribute {name!r}')\n def _check_versions():\n     from . import ft2font\n", "normalized_occurrence": 1}
