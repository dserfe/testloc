{"model_name_or_path": "agentless", "instance_id": "django__django-15098", "model_patch": "diff --git a/django/utils/translation/trans_real.py b/django/utils/translation/trans_real.py\nindex 488a2d8..aecb2ef 100644\n--- a/django/utils/translation/trans_real.py\n+++ b/django/utils/translation/trans_real.py\n@@ -488,12 +488,12 @@ def get_supported_language_variant(lang_code, strict=False):\n         supported_lang_codes = get_languages()\n \n         for code in possible_lang_codes:\n-            if code in supported_lang_codes and check_for_language(code):\n+            if code.lower() in supported_lang_codes and check_for_language(code):\n                 return code\n         if not strict:\n             # if fr-fr is not supported, try fr-ca.\n             for supported_code in supported_lang_codes:\n-                if supported_code.startswith(generic_lang_code + '-'):\n+                if supported_code.lower().startswith(generic_lang_code.lower() + '-'):\n                     return supported_code\n     raise LookupError(lang_code)\n \n@@ -508,7 +508,7 @@ def get_language_from_path(path, strict=False):\n     regex_match = language_code_prefix_re.match(path)\n     if not regex_match:\n         return None\n-    lang_code = regex_match[1]\n+    lang_code = regex_match[1].lower()\n     try:\n         return get_supported_language_variant(lang_code, strict=strict)\n     except LookupError:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/translation/trans_real.py b/django/utils/translation/trans_real.py\nindex 05d14a5..59a17e3 100644\n--- a/django/utils/translation/trans_real.py\n+++ b/django/utils/translation/trans_real.py\n@@ -260,18 +260,18 @@ def get_supported_language_variant(lang_code, strict=False):\n         generic_lang_code = possible_lang_codes[-1]\n         supported_lang_codes = get_languages()\n         for code in possible_lang_codes:\n-            if code in supported_lang_codes and check_for_language(code):\n+            if code.lower() in supported_lang_codes and check_for_language(code):\n                 return code\n         if not strict:\n             for supported_code in supported_lang_codes:\n-                if supported_code.startswith(generic_lang_code + '-'):\n+                if supported_code.lower().startswith(generic_lang_code.lower() + '-'):\n                     return supported_code\n     raise LookupError(lang_code)\n def get_language_from_path(path, strict=False):\n     regex_match = language_code_prefix_re.match(path)\n     if not regex_match:\n         return None\n-    lang_code = regex_match[1]\n+    lang_code = regex_match[1].lower()\n     try:\n         return get_supported_language_variant(lang_code, strict=strict)\n     except LookupError:\n", "normalized_occurrence": 1}
