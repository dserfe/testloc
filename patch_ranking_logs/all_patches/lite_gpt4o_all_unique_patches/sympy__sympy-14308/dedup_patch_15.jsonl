{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-14308", "model_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 81d644a..7872921 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -961,7 +961,12 @@ class PrettyPrinter(Printer):\n                                            3*(len(lengths)-1)))\n                     strs[j] += ' '*(lengths[-1]+3)\n \n-        return prettyForm(u'\\n'.join([s[:-3] for s in strs]))\n+        # Adjust the baseline alignment and join strings without extra spaces\n+        formatted_strs = []\n+        for s in strs:\n+            formatted_strs.append(s.rstrip(' + '))\n+\n+        return prettyForm(u'\\n'.join(formatted_strs))\n \n     def _print_NDimArray(self, expr):\n         from sympy import ImmutableMatrix\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 35c3eb3..87759ec 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -691,7 +691,10 @@ class PrettyPrinter(Printer):\n                     if j >= len(strs):\n                         strs.append(' ' * (sum(lengths[:-1]) + 3 * (len(lengths) - 1)))\n                     strs[j] += ' ' * (lengths[-1] + 3)\n-        return prettyForm(u'\\n'.join([s[:-3] for s in strs]))\n+        formatted_strs = []\n+        for s in strs:\n+            formatted_strs.append(s.rstrip(' + '))\n+        return prettyForm(u'\\n'.join(formatted_strs))\n     def _print_NDimArray(self, expr):\n         from sympy import ImmutableMatrix\n         if expr.rank() == 0:\n", "normalized_occurrence": 1}
