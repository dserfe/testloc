{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16454", "model_patch": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex f221176..5558f52 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -71,6 +71,24 @@ class CommandParser(ArgumentParser):\n         else:\n             raise CommandError(\"Error: %s\" % message)\n \n+    def add_subparsers(self, **kwargs):\n+        # Propagate the special command parser arguments to subparsers\n+        subparsers = super().add_subparsers(**kwargs)\n+        subparsers.required = kwargs.get(\"required\", False)\n+        \n+        # Save parser defaults for use by add_parser below\n+        self._subparsers = subparsers\n+        self._subparser_defaults = {\n+            \"missing_args_message\": self.missing_args_message,\n+            \"called_from_command_line\": self.called_from_command_line,\n+        }\n+        return subparsers\n+\n+    def add_parser(self, name, **kwargs):\n+        # Update kwargs with defaults\n+        kwargs.update(self._subparser_defaults)\n+        return super().add_parser(name, **kwargs)\n+\n \n def handle_default_options(options):\n     \"\"\"\n", "occurrence": 1, "normalized_patch": "--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n+    def add_subparsers(self, **kwargs):\n+        subparsers = super().add_subparsers(**kwargs)\n+        subparsers.required = kwargs.get('required', False)\n+        self._subparsers = subparsers\n+        self._subparser_defaults = {'missing_args_message': self.missing_args_message, 'called_from_command_line': self.called_from_command_line}\n+        return subparsers\n+    def add_parser(self, name, **kwargs):\n+        kwargs.update(self._subparser_defaults)\n+        return super().add_parser(name, **kwargs)", "normalized_occurrence": 1}
