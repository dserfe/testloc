{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-20590", "model_patch": "diff --git a/sympy/core/basic.py b/sympy/core/basic.py\nindex 87da872..2880bf5 100644\n--- a/sympy/core/basic.py\n+++ b/sympy/core/basic.py\n@@ -69,10 +69,10 @@ class Basic(Printable, metaclass=ManagedProperties):\n         >>> isinstance(B, Basic)\n         True\n     \"\"\"\n-    __slots__ = ('_mhash',              # hash value\n-                 '_args',               # arguments\n-                 '_assumptions'\n-                )\n+    __slots__ = ('_mhash',              # hash value,\n+                 '_args',               # arguments,\n+                 '_assumptions',        # assumptions,\n+                 '__weakref__')         # weak references\n \n     # To be overridden with True in the appropriate subclasses\n     is_number = False\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/basic.py b/sympy/core/basic.py\nindex d8b6046..198b93c 100644\n--- a/sympy/core/basic.py\n+++ b/sympy/core/basic.py\n@@ -14,7 +14,7 @@ def as_Basic(expr):\n     except SympifyError:\n         raise TypeError('Argument must be a Basic object, not `%s`' % func_name(expr))\n class Basic(Printable, metaclass=ManagedProperties):\n-    __slots__ = ('_mhash', '_args', '_assumptions')\n+    __slots__ = ('_mhash', '_args', '_assumptions', '__weakref__')\n     is_number = False\n     is_Atom = False\n     is_Symbol = False\n", "normalized_occurrence": 1}
