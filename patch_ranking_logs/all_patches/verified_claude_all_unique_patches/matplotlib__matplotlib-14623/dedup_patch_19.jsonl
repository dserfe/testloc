{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-14623", "model_patch": "diff --git a/lib/matplotlib/scale.py b/lib/matplotlib/scale.py\nindex bf0245b..a230839 100644\n--- a/lib/matplotlib/scale.py\n+++ b/lib/matplotlib/scale.py\n@@ -286,6 +286,10 @@ class LogTransform(Transform):\n         Transform.__init__(self)\n         self.base = base\n         self._clip = {\"clip\": True, \"mask\": False}[nonpos]\n+        self._inverted = False\n+\n+    def set_inverted(self, inverted):\n+        self._inverted = inverted\n \n     def __str__(self):\n         return \"{}(base={}, nonpos={!r})\".format(\n@@ -311,6 +315,10 @@ class LogTransform(Transform):\n                 #     np.log10(np.nextafter(0, 1)) ~ -323\n                 # so 1000 seems safe.\n                 out[a <= 0] = -1000\n+            \n+            # Handle inverted axis by checking if the axis limits are reversed\n+            if getattr(self, '_inverted', False):\n+                out = -out\n         return out\n \n     def inverted(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/scale.py b/lib/matplotlib/scale.py\nindex 029d689..da365cd 100644\n--- a/lib/matplotlib/scale.py\n+++ b/lib/matplotlib/scale.py\n@@ -256,6 +256,10 @@ class LogTransform(Transform):\n         Transform.__init__(self)\n         self.base = base\n         self._clip = {'clip': True, 'mask': False}[nonpos]\n+        self._inverted = False\n+\n+    def set_inverted(self, inverted):\n+        self._inverted = inverted\n \n     def __str__(self):\n         return '{}(base={}, nonpos={!r})'.format(type(self).__name__, self.base, 'clip' if self._clip else 'mask')\n@@ -270,6 +274,8 @@ class LogTransform(Transform):\n                 out /= np.log(self.base)\n             if self._clip:\n                 out[a <= 0] = -1000\n+            if getattr(self, '_inverted', False):\n+                out = -out\n         return out\n \n     def inverted(self):\n", "normalized_occurrence": 1}
