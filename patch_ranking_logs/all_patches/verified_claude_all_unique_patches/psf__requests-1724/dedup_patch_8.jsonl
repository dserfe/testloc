{"model_name_or_path": "agentless_claude", "instance_id": "psf__requests-1724", "model_patch": "diff --git a/requests/models.py b/requests/models.py\nindex 2a182e9..b82b9a8 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -307,7 +307,10 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         \"\"\"Prepares the given HTTP method.\"\"\"\n         self.method = method\n         if self.method is not None:\n-            self.method = self.method.upper()\n+            if isinstance(self.method, unicode):\n+                self.method = self.method.encode('ascii').upper()\n+            else:\n+                self.method = self.method.upper()\n \n     def prepare_url(self, url, params):\n         \"\"\"Prepares the given HTTP URL.\"\"\"\n", "occurrence": 7, "normalized_patch": "diff --git a/requests/models.py b/requests/models.py\nindex 69b69af..ea09786 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -151,7 +151,10 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n     def prepare_method(self, method):\n         self.method = method\n         if self.method is not None:\n-            self.method = self.method.upper()\n+            if isinstance(self.method, unicode):\n+                self.method = self.method.encode('ascii').upper()\n+            else:\n+                self.method = self.method.upper()\n     def prepare_url(self, url, params):\n         try:\n             url = unicode(url)\n", "normalized_occurrence": 7}
