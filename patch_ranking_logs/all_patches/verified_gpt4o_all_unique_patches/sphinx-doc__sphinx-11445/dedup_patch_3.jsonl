{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-11445", "model_patch": "diff --git a/sphinx/environment/collectors/title.py b/sphinx/environment/collectors/title.py\nindex ec97f42..91949ed 100644\n--- a/sphinx/environment/collectors/title.py\n+++ b/sphinx/environment/collectors/title.py\n@@ -37,6 +37,10 @@ class TitleCollector(EnvironmentCollector):\n             longtitlenode = nodes.title()\n             longtitlenode += nodes.Text(doctree['title'])\n         # look for first section title and use that as the title\n+        # skip over prolog if present\n+        for node in doctree.findall(nodes.section):\n+            if 'prolog' in node.get('classes', []):\n+                continue\n         for node in doctree.findall(nodes.section):\n             visitor = SphinxContentsFilter(doctree)\n             node[0].walkabout(visitor)\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/environment/collectors/title.py b/sphinx/environment/collectors/title.py\nindex 90c3ce6..439934d 100644\n--- a/sphinx/environment/collectors/title.py\n+++ b/sphinx/environment/collectors/title.py\n@@ -19,6 +19,9 @@ class TitleCollector(EnvironmentCollector):\n         if 'title' in doctree:\n             longtitlenode = nodes.title()\n             longtitlenode += nodes.Text(doctree['title'])\n+        for node in doctree.findall(nodes.section):\n+            if 'prolog' in node.get('classes', []):\n+                continue\n         for node in doctree.findall(nodes.section):\n             visitor = SphinxContentsFilter(doctree)\n             node[0].walkabout(visitor)\n", "normalized_occurrence": 1}
