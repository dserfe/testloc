{"model_name_or_path": "agentless", "instance_id": "django__django-11049", "model_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex 77ba99e..5b1bbbd 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -1587,8 +1587,9 @@ class DurationField(Field):\n     empty_strings_allowed = False\n     default_error_messages = {\n         'invalid': _(\"'%(value)s' value has an invalid format. It must be in \"\n-                     \"[DD] [HH:[MM:]]ss[.uuuuuu] format.\")\n+                     \"[DD] [[HH:]MM:]ss[.uuuuuu] format.\")\n     }\n+    default_help_text = _(\"Enter a valid duration in the format: [DD] [[HH:]MM:]ss[.uuuuuu]\")\n     description = _(\"Duration\")\n \n     def get_internal_type(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex 4e09144..284b140 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -800,7 +800,8 @@ class DecimalField(Field):\n         return super().formfield(**{'max_digits': self.max_digits, 'decimal_places': self.decimal_places, 'form_class': forms.DecimalField, **kwargs})\n class DurationField(Field):\n     empty_strings_allowed = False\n-    default_error_messages = {'invalid': _(\"'%(value)s' value has an invalid format. It must be in [DD] [HH:[MM:]]ss[.uuuuuu] format.\")}\n+    default_error_messages = {'invalid': _(\"'%(value)s' value has an invalid format. It must be in [DD] [[HH:]MM:]ss[.uuuuuu] format.\")}\n+    default_help_text = _('Enter a valid duration in the format: [DD] [[HH:]MM:]ss[.uuuuuu]')\n     description = _('Duration')\n     def get_internal_type(self):\n         return 'DurationField'\n", "normalized_occurrence": 1}
