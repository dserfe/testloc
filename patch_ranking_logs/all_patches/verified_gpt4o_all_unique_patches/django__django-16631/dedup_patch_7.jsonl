{"model_name_or_path": "agentless", "instance_id": "django__django-16631", "model_patch": "diff --git a/django/contrib/auth/base_user.py b/django/contrib/auth/base_user.py\nindex 718fbb5..35227fe 100644\n--- a/django/contrib/auth/base_user.py\n+++ b/django/contrib/auth/base_user.py\n@@ -136,11 +136,16 @@ class AbstractBaseUser(models.Model):\n         Return an HMAC of the password field.\n         \"\"\"\n         key_salt = \"django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash\"\n-        return salted_hmac(\n+        hashed = salted_hmac(\n             key_salt,\n             self.password,\n             algorithm=\"sha256\",\n         ).hexdigest()\n+        \n+        if any(salted_hmac(key_salt, self.password, secret=fallback_key, algorithm=\"sha256\").hexdigest() == hashed for fallback_key in settings.SECRET_KEY_FALLBACKS):\n+            return hashed\n+        \n+        return None\n \n     @classmethod\n     def get_email_field_name(cls):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/auth/base_user.py b/django/contrib/auth/base_user.py\nindex 04240b6..1c7980f 100644\n--- a/django/contrib/auth/base_user.py\n+++ b/django/contrib/auth/base_user.py\n@@ -64,7 +64,10 @@ class AbstractBaseUser(models.Model):\n         return is_password_usable(self.password)\n     def get_session_auth_hash(self):\n         key_salt = 'django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash'\n-        return salted_hmac(key_salt, self.password, algorithm='sha256').hexdigest()\n+        hashed = salted_hmac(key_salt, self.password, algorithm='sha256').hexdigest()\n+        if any((salted_hmac(key_salt, self.password, secret=fallback_key, algorithm='sha256').hexdigest() == hashed for fallback_key in settings.SECRET_KEY_FALLBACKS)):\n+            return hashed\n+        return None\n     @classmethod\n     def get_email_field_name(cls):\n         try:\n", "normalized_occurrence": 1}
