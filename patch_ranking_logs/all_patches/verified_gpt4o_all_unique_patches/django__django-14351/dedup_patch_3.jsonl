{"model_name_or_path": "agentless", "instance_id": "django__django-14351", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 9591387..1c44efc 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1322,7 +1322,8 @@ class Query(BaseExpression):\n             if len(targets) == 1:\n                 col = self._get_col(targets[0], join_info.final_field, alias)\n             else:\n-                col = MultiColSource(alias, targets, join_info.targets, join_info.final_field)\n+                # Ensure only a single column is selected for related fields in Q objects\n+                col = self._get_col(targets[0], join_info.final_field, alias)\n         else:\n             col = self._get_col(targets[0], join_info.final_field, alias)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex ec726d6..c631802 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -717,7 +717,7 @@ class Query(BaseExpression):\n             if len(targets) == 1:\n                 col = self._get_col(targets[0], join_info.final_field, alias)\n             else:\n-                col = MultiColSource(alias, targets, join_info.targets, join_info.final_field)\n+                col = self._get_col(targets[0], join_info.final_field, alias)\n         else:\n             col = self._get_col(targets[0], join_info.final_field, alias)\n         condition = self.build_lookup(lookups, col, value)\n", "normalized_occurrence": 2}
