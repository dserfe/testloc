{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-23563", "model_patch": "diff --git a/lib/mpl_toolkits/mplot3d/art3d.py b/lib/mpl_toolkits/mplot3d/art3d.py\nindex fa869c7..8f27a94 100644\n--- a/lib/mpl_toolkits/mplot3d/art3d.py\n+++ b/lib/mpl_toolkits/mplot3d/art3d.py\n@@ -209,6 +209,23 @@ class Line3D(lines.Line2D):\n         \"\"\"\n         return self._verts3d\n \n+    def set_data(self, *args):\n+        \"\"\"\n+        Set the x and y data.\n+\n+        Parameters\n+        ----------\n+        *args : (array-like, array-like)\n+            The x and y data.\n+        \"\"\"\n+        if len(args) == 1:\n+            self.set_xdata(args[0])\n+        elif len(args) == 2:\n+            self.set_xdata(args[0])\n+            self.set_ydata(args[1])\n+        else:\n+            raise ValueError(\"set_data takes 1 or 2 positional arguments\")\n+\n     @artist.allow_rasterization\n     def draw(self, renderer):\n         xs3d, ys3d, zs3d = self._verts3d\n", "occurrence": 1, "normalized_patch": "--- a/lib/mpl_toolkits/mplot3d/art3d.py\n+++ b/lib/mpl_toolkits/mplot3d/art3d.py\n+    def set_data(self, *args):\n+        if len(args) == 1:\n+            self.set_xdata(args[0])\n+        elif len(args) == 2:\n+            self.set_xdata(args[0])\n+            self.set_ydata(args[1])\n+        else:\n+            raise ValueError('set_data takes 1 or 2 positional arguments')", "normalized_occurrence": 1}
