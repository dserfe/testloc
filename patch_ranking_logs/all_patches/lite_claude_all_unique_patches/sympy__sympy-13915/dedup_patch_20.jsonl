{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13915", "model_patch": "diff --git a/sympy/core/function.py b/sympy/core/function.py\nindex 30870a1..242455f 100644\n--- a/sympy/core/function.py\n+++ b/sympy/core/function.py\n@@ -1848,6 +1848,11 @@ class Subs(Expr):\n     def __eq__(self, other):\n         if not isinstance(other, Subs):\n             return False\n+        # Check if substitution would lead to undefined expression\n+        try:\n+            self.doit()\n+        except ZeroDivisionError:\n+            return False\n         return self._expr == other._expr\n \n     def __ne__(self, other):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/function.py b/sympy/core/function.py\nindex 209c1c6..88a90af 100644\n--- a/sympy/core/function.py\n+++ b/sympy/core/function.py\n@@ -758,6 +758,10 @@ class Subs(Expr):\n     def __eq__(self, other):\n         if not isinstance(other, Subs):\n             return False\n+        try:\n+            self.doit()\n+        except ZeroDivisionError:\n+            return False\n         return self._expr == other._expr\n     def __ne__(self, other):\n         return not self == other\n", "normalized_occurrence": 1}
