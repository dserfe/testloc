{"model_name_or_path": "agentless", "instance_id": "django__django-13158", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex e0d8d05..08164ae 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -991,7 +991,13 @@ class QuerySet:\n         # Clear limits and ordering so they can be reapplied\n         clone.query.clear_ordering(True)\n         clone.query.clear_limits()\n-        clone.query.combined_queries = (self.query,) + tuple(qs.query for qs in other_qs)\n+        if self.query.combinator:\n+            combined_queries = tuple(qs.query for qs in other_qs if not qs.query.is_empty())\n+            if not combined_queries:\n+                return self.none()\n+            clone.query.combined_queries = (self.query,) + combined_queries\n+        else:\n+            clone.query.combined_queries = (self.query,) + tuple(qs.query for qs in other_qs)\n         clone.query.combinator = combinator\n         clone.query.combinator_all = all\n         return clone\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex be3ebe2..ecfbbd7 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -582,7 +582,13 @@ class QuerySet:\n         clone = self._chain()\n         clone.query.clear_ordering(True)\n         clone.query.clear_limits()\n-        clone.query.combined_queries = (self.query,) + tuple((qs.query for qs in other_qs))\n+        if self.query.combinator:\n+            combined_queries = tuple((qs.query for qs in other_qs if not qs.query.is_empty()))\n+            if not combined_queries:\n+                return self.none()\n+            clone.query.combined_queries = (self.query,) + combined_queries\n+        else:\n+            clone.query.combined_queries = (self.query,) + tuple((qs.query for qs in other_qs))\n         clone.query.combinator = combinator\n         clone.query.combinator_all = all\n         return clone\n", "normalized_occurrence": 1}
