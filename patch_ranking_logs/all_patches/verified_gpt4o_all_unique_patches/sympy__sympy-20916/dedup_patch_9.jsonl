{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-20916", "model_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 7d0c468..b5acf34 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -77,7 +77,25 @@ class PrettyPrinter(Printer):\n         return pform\n \n     def _print_Symbol(self, e, bold_name=False):\n-        symb = pretty_symbol(e.name, bold_name)\n+        from sympy.core.sympify import SympifyError\n+        from sympy.core.symbol import greek_symbols\n+\n+        def is_greek(letter):\n+            try:\n+                return letter in greek_symbols\n+            except SympifyError:\n+                return False\n+\n+        name = e.name\n+        subs = \"\"\n+        \n+        if \"_\" in name:\n+            base, subs = name.split(\"_\", 1)\n+            if is_greek(base):\n+                base = GSUB(base)\n+            name = f\"{base}_{subs}\"\n+\n+        symb = pretty_symbol(name, bold_name)\n         return prettyForm(symb)\n     _print_RandomSymbol = _print_Symbol\n     def _print_MatrixSymbol(self, e):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex f2c3eb4..0b81fbf 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -46,7 +46,21 @@ class PrettyPrinter(Printer):\n         pform = prettyForm(*pform.left('atan2'))\n         return pform\n     def _print_Symbol(self, e, bold_name=False):\n-        symb = pretty_symbol(e.name, bold_name)\n+        from sympy.core.sympify import SympifyError\n+        from sympy.core.symbol import greek_symbols\n+        def is_greek(letter):\n+            try:\n+                return letter in greek_symbols\n+            except SympifyError:\n+                return False\n+        name = e.name\n+        subs = ''\n+        if '_' in name:\n+            base, subs = name.split('_', 1)\n+            if is_greek(base):\n+                base = GSUB(base)\n+            name = f'{base}_{subs}'\n+        symb = pretty_symbol(name, bold_name)\n         return prettyForm(symb)\n     _print_RandomSymbol = _print_Symbol\n     def _print_MatrixSymbol(self, e):\n", "normalized_occurrence": 1}
