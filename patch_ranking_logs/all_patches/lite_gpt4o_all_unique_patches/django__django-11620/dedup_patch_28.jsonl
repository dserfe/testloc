{"model_name_or_path": "agentless", "instance_id": "django__django-11620", "model_patch": "diff --git a/django/views/debug.py b/django/views/debug.py\nindex fa06caa..a7f6740 100644\n--- a/django/views/debug.py\n+++ b/django/views/debug.py\n@@ -484,18 +484,19 @@ def technical_404_response(request, exception):\n     try:\n         resolver_match = resolve(request.path)\n     except Resolver404:\n-        pass\n-    else:\n-        obj = resolver_match.func\n+        if isinstance(exception, Http404):\n+            caller = 'Http404'\n+        else:\n+            obj = resolver_match.func\n \n-        if hasattr(obj, '__name__'):\n-            caller = obj.__name__\n-        elif hasattr(obj, '__class__') and hasattr(obj.__class__, '__name__'):\n-            caller = obj.__class__.__name__\n+            if hasattr(obj, '__name__'):\n+                caller = obj.__name__\n+            elif hasattr(obj.__class__, '__name__'):\n+                caller = obj.__class__.__name__\n \n-        if hasattr(obj, '__module__'):\n-            module = obj.__module__\n-            caller = '%s.%s' % (module, caller)\n+            if hasattr(obj, '__module__'):\n+                module = obj.__module__\n+                caller = '%s.%s' % (module, caller)\n \n     with Path(CURRENT_DIR, 'templates', 'technical_404.html').open(encoding='utf-8') as fh:\n         t = DEBUG_ENGINE.from_string(fh.read())\n", "occurrence": 1, "normalized_patch": "diff --git a/django/views/debug.py b/django/views/debug.py\nindex 9e5f1cd..2ddc77a 100644\n--- a/django/views/debug.py\n+++ b/django/views/debug.py\n@@ -280,16 +280,17 @@ def technical_404_response(request, exception):\n     try:\n         resolver_match = resolve(request.path)\n     except Resolver404:\n-        pass\n-    else:\n-        obj = resolver_match.func\n-        if hasattr(obj, '__name__'):\n-            caller = obj.__name__\n-        elif hasattr(obj, '__class__') and hasattr(obj.__class__, '__name__'):\n-            caller = obj.__class__.__name__\n-        if hasattr(obj, '__module__'):\n-            module = obj.__module__\n-            caller = '%s.%s' % (module, caller)\n+        if isinstance(exception, Http404):\n+            caller = 'Http404'\n+        else:\n+            obj = resolver_match.func\n+            if hasattr(obj, '__name__'):\n+                caller = obj.__name__\n+            elif hasattr(obj.__class__, '__name__'):\n+                caller = obj.__class__.__name__\n+            if hasattr(obj, '__module__'):\n+                module = obj.__module__\n+                caller = '%s.%s' % (module, caller)\n     with Path(CURRENT_DIR, 'templates', 'technical_404.html').open(encoding='utf-8') as fh:\n         t = DEBUG_ENGINE.from_string(fh.read())\n     c = Context({'urlconf': urlconf, 'root_urlconf': settings.ROOT_URLCONF, 'request_path': error_url, 'urlpatterns': tried, 'reason': str(exception), 'request': request, 'settings': get_safe_settings(), 'raising_view_name': caller})\n", "normalized_occurrence": 1}
