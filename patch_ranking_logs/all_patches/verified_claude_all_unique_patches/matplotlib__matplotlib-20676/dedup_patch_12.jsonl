{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-20676", "model_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex a6bed3c..43318d2 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -2184,7 +2184,11 @@ class SpanSelector(_SelectorWidget):\n             # visibility to False and extents to (v, v)\n             # update will be called when setting the extents\n             self.visible = False\n+            # Ensure we don't modify the axes limits when setting initial extents\n+            prev_autoscale = self.ax.get_autoscale_on()\n+            self.ax.set_autoscale_on(False)\n             self.extents = v, v\n+            self.ax.set_autoscale_on(prev_autoscale)\n             # We need to set the visibility back, so the span selector will be\n             # drawn when necessary (span width > 0)\n             self.visible = True\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex b2dd641..5cf1c0e 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -1784,7 +1784,10 @@ class SpanSelector(_SelectorWidget):\n         self._prev = self._get_data(event)\n         if self._active_handle is None:\n             self.visible = False\n+            prev_autoscale = self.ax.get_autoscale_on()\n+            self.ax.set_autoscale_on(False)\n             self.extents = (v, v)\n+            self.ax.set_autoscale_on(prev_autoscale)\n             self.visible = True\n         else:\n             self.set_visible(True)\n", "normalized_occurrence": 1}
