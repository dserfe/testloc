{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15213", "model_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 626b8ab..eb02c1c 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -979,6 +979,15 @@ class ExpressionWrapper(SQLiteNumericMixin, Expression):\n         return super().get_group_by_cols()\n \n     def as_sql(self, compiler, connection):\n+        if hasattr(self.expression, 'resolve_expression'):\n+            return compiler.compile(self.expression)\n+        # Handle Q objects by converting them to a literal SQL boolean\n+        if isinstance(self.expression, Q):\n+            if connection.features.has_native_boolean_field:\n+                sql = 'TRUE' if bool(self.expression) else 'FALSE'\n+            else:\n+                sql = '1' if bool(self.expression) else '0'\n+            return sql, []\n         return compiler.compile(self.expression)\n \n     def __repr__(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 7926e3e..28b95d7 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -590,6 +590,14 @@ class ExpressionWrapper(SQLiteNumericMixin, Expression):\n             return expression.get_group_by_cols(alias=alias)\n         return super().get_group_by_cols()\n     def as_sql(self, compiler, connection):\n+        if hasattr(self.expression, 'resolve_expression'):\n+            return compiler.compile(self.expression)\n+        if isinstance(self.expression, Q):\n+            if connection.features.has_native_boolean_field:\n+                sql = 'TRUE' if bool(self.expression) else 'FALSE'\n+            else:\n+                sql = '1' if bool(self.expression) else '0'\n+            return (sql, [])\n         return compiler.compile(self.expression)\n     def __repr__(self):\n         return '{}({})'.format(self.__class__.__name__, self.expression)\n", "normalized_occurrence": 1}
