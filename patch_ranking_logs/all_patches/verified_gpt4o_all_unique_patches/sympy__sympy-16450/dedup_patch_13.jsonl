{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-16450", "model_patch": "diff --git a/sympy/core/symbol.py b/sympy/core/symbol.py\nindex 9a1c686..9b35c24 100644\n--- a/sympy/core/symbol.py\n+++ b/sympy/core/symbol.py\n@@ -233,6 +233,15 @@ class Symbol(AtomicExpr, Boolean):\n         is_commutative = fuzzy_bool(assumptions.get('commutative', True))\n         assumptions['commutative'] = is_commutative\n         obj._assumptions = StdFactKB(assumptions)\n+        if 'finite' in tmp_asm_copy:\n+            obj._assumptions['finite'] = tmp_asm_copy['finite']\n+        # Add other assumptions preservation as necessary\n+        if 'finite' in tmp_asm_copy:\n+            obj._assumptions['finite'] = tmp_asm_copy['finite']\n+        # Preserve other assumptions as necessary\n+        for key in ['integer', 'rational', 'prime', 'even', 'odd']:\n+            if key in tmp_asm_copy:\n+                obj._assumptions[key] = tmp_asm_copy[key]\n         obj._assumptions._generator = tmp_asm_copy  # Issue #8873\n         return obj\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/symbol.py b/sympy/core/symbol.py\nindex 9bc1e52..f086eea 100644\n--- a/sympy/core/symbol.py\n+++ b/sympy/core/symbol.py\n@@ -79,6 +79,13 @@ class Symbol(AtomicExpr, Boolean):\n         is_commutative = fuzzy_bool(assumptions.get('commutative', True))\n         assumptions['commutative'] = is_commutative\n         obj._assumptions = StdFactKB(assumptions)\n+        if 'finite' in tmp_asm_copy:\n+            obj._assumptions['finite'] = tmp_asm_copy['finite']\n+        if 'finite' in tmp_asm_copy:\n+            obj._assumptions['finite'] = tmp_asm_copy['finite']\n+        for key in ['integer', 'rational', 'prime', 'even', 'odd']:\n+            if key in tmp_asm_copy:\n+                obj._assumptions[key] = tmp_asm_copy[key]\n         obj._assumptions._generator = tmp_asm_copy\n         return obj\n     __xnew__ = staticmethod(__new_stage2__)\n", "normalized_occurrence": 1}
