{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16454", "model_patch": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex f221176..10e128d 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -71,6 +71,26 @@ class CommandParser(ArgumentParser):\n         else:\n             raise CommandError(\"Error: %s\" % message)\n \n+    def add_subparsers(self, **kwargs):\n+        # Self-propagate the custom arguments to the subparser action\n+        subparsers_action = super().add_subparsers(**kwargs)\n+        subparsers_action.missing_args_message = self.missing_args_message\n+        subparsers_action.called_from_command_line = self.called_from_command_line\n+\n+        # Override the add_parser method to propagate custom arguments\n+        original_add_parser = subparsers_action.add_parser\n+        def add_parser(name, **kwargs):\n+            # Pass down custom attributes to the parser\n+            parser = original_add_parser(\n+                name,\n+                missing_args_message=self.missing_args_message,\n+                called_from_command_line=self.called_from_command_line,\n+                **kwargs\n+            )\n+            return parser\n+        subparsers_action.add_parser = add_parser\n+        return subparsers_action\n+\n \n def handle_default_options(options):\n     \"\"\"\n", "occurrence": 1, "normalized_patch": "--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n+    def add_subparsers(self, **kwargs):\n+        subparsers_action = super().add_subparsers(**kwargs)\n+        subparsers_action.missing_args_message = self.missing_args_message\n+        subparsers_action.called_from_command_line = self.called_from_command_line\n+        original_add_parser = subparsers_action.add_parser\n+        def add_parser(name, **kwargs):\n+            parser = original_add_parser(name, missing_args_message=self.missing_args_message, called_from_command_line=self.called_from_command_line, **kwargs)\n+            return parser\n+        subparsers_action.add_parser = add_parser\n+        return subparsers_action", "normalized_occurrence": 1}
