{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-20676", "model_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex a6bed3c..e7e5e8d 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -2101,6 +2101,10 @@ class SpanSelector(_SelectorWidget):\n         self.artists = []\n         self.new_axes(ax)\n \n+        # Disable autoscaling if interactive is True\n+        if self._interactive:\n+            self.ax.set_autoscale_on(False)\n+\n         # Setup handles\n         props = dict(color=rectprops.get('facecolor', 'r'))\n         props.update(cbook.normalize_kwargs(handle_props, Line2D._alias_map))\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex b2dd641..a56fc9e 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -1732,6 +1732,8 @@ class SpanSelector(_SelectorWidget):\n         self.canvas = None\n         self.artists = []\n         self.new_axes(ax)\n+        if self._interactive:\n+            self.ax.set_autoscale_on(False)\n         props = dict(color=rectprops.get('facecolor', 'r'))\n         props.update(cbook.normalize_kwargs(handle_props, Line2D._alias_map))\n         if self._interactive:\n", "normalized_occurrence": 1}
