{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-19495", "model_patch": "diff --git a/sympy/sets/conditionset.py b/sympy/sets/conditionset.py\nindex 934bff8..5d026df 100644\n--- a/sympy/sets/conditionset.py\n+++ b/sympy/sets/conditionset.py\n@@ -244,6 +244,8 @@ class ConditionSet(Set):\n         base = self.base_set.subs(old, new)\n         if cond is S.true:\n             return ConditionSet(new, Contains(new, base), base)\n+        if isinstance(base, ImageSet):\n+            base = base.subs(old, new)\n         return self.func(self.sym, cond, base)\n \n     def dummy_eq(self, other, symbol=None):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/sets/conditionset.py b/sympy/sets/conditionset.py\nindex c7937ea..2edfe25 100644\n--- a/sympy/sets/conditionset.py\n+++ b/sympy/sets/conditionset.py\n@@ -93,6 +93,8 @@ class ConditionSet(Set):\n         base = self.base_set.subs(old, new)\n         if cond is S.true:\n             return ConditionSet(new, Contains(new, base), base)\n+        if isinstance(base, ImageSet):\n+            base = base.subs(old, new)\n         return self.func(self.sym, cond, base)\n     def dummy_eq(self, other, symbol=None):\n         if not isinstance(other, self.func):\n", "normalized_occurrence": 1}
