{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-13241", "model_patch": "diff --git a/sklearn/decomposition/kernel_pca.py b/sklearn/decomposition/kernel_pca.py\nindex 650c24f..eae2db2 100644\n--- a/sklearn/decomposition/kernel_pca.py\n+++ b/sklearn/decomposition/kernel_pca.py\n@@ -215,6 +215,12 @@ class KernelPCA(BaseEstimator, TransformerMixin, _UnstableOn32BitMixin):\n         self.lambdas_ = self.lambdas_[indices]\n         self.alphas_ = self.alphas_[:, indices]\n \n+        # Ensure consistent sign of eigenvectors\n+        for i in range(self.alphas_.shape[1]):\n+            if np.abs(self.alphas_[:, i]).max() > 0:\n+                if self.alphas_[np.abs(self.alphas_[:, i]).argmax(), i] < 0:\n+                    self.alphas_[:, i] = -self.alphas_[:, i]\n+\n         # remove eigenvectors with a zero eigenvalue\n         if self.remove_zero_eig or self.n_components is None:\n             self.alphas_ = self.alphas_[:, self.lambdas_ > 0]\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/decomposition/kernel_pca.py b/sklearn/decomposition/kernel_pca.py\nindex 92bc5ab..27843c6 100644\n--- a/sklearn/decomposition/kernel_pca.py\n+++ b/sklearn/decomposition/kernel_pca.py\n@@ -57,6 +57,10 @@ class KernelPCA(BaseEstimator, TransformerMixin, _UnstableOn32BitMixin):\n         indices = self.lambdas_.argsort()[::-1]\n         self.lambdas_ = self.lambdas_[indices]\n         self.alphas_ = self.alphas_[:, indices]\n+        for i in range(self.alphas_.shape[1]):\n+            if np.abs(self.alphas_[:, i]).max() > 0:\n+                if self.alphas_[np.abs(self.alphas_[:, i]).argmax(), i] < 0:\n+                    self.alphas_[:, i] = -self.alphas_[:, i]\n         if self.remove_zero_eig or self.n_components is None:\n             self.alphas_ = self.alphas_[:, self.lambdas_ > 0]\n             self.lambdas_ = self.lambdas_[self.lambdas_ > 0]\n", "normalized_occurrence": 1}
