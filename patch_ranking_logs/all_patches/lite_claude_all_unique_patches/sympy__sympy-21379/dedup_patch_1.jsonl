{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-21379", "model_patch": "diff --git a/sympy/functions/elementary/hyperbolic.py b/sympy/functions/elementary/hyperbolic.py\nindex 1f2a00b..27780a5 100644\n--- a/sympy/functions/elementary/hyperbolic.py\n+++ b/sympy/functions/elementary/hyperbolic.py\n@@ -156,6 +156,10 @@ class sinh(HyperbolicFunction):\n                 x = arg.args[0]\n                 return 1/(sqrt(x - 1) * sqrt(x + 1))\n \n+            # Handle Piecewise arguments\n+            if arg.has(Piecewise):\n+                return Piecewise(*[(sinh(expr), cond) for expr, cond in arg.args])\n+\n     @staticmethod\n     @cacheit\n     def taylor_term(n, x, *previous_terms):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/hyperbolic.py b/sympy/functions/elementary/hyperbolic.py\nindex 1fd73fe..438d4af 100644\n--- a/sympy/functions/elementary/hyperbolic.py\n+++ b/sympy/functions/elementary/hyperbolic.py\n@@ -74,6 +74,8 @@ class sinh(HyperbolicFunction):\n             if arg.func == acoth:\n                 x = arg.args[0]\n                 return 1 / (sqrt(x - 1) * sqrt(x + 1))\n+            if arg.has(Piecewise):\n+                return Piecewise(*[(sinh(expr), cond) for expr, cond in arg.args])\n     @staticmethod\n     @cacheit\n     def taylor_term(n, x, *previous_terms):\n", "normalized_occurrence": 1}
