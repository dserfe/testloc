{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14122", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex be54ccd..ab61ff8 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -128,7 +128,8 @@ class SQLCompiler:\n         for expr, (sql, params, is_ref) in order_by:\n             # Skip References to the select clause, as all expressions in the\n             # select clause are already part of the group by.\n-            if not is_ref:\n+            # Also skip Meta.ordering fields to avoid wrong aggregation\n+            if not is_ref and not self.query.is_meta_ordering(expr):\n                 expressions.extend(expr.get_group_by_cols())\n         having_group_by = self.having.get_group_by_cols() if self.having else ()\n         for expr in having_group_by:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 4a5ff10..70f07d7 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -56,7 +56,7 @@ class SQLCompiler:\n             for col in cols:\n                 expressions.append(col)\n         for expr, (sql, params, is_ref) in order_by:\n-            if not is_ref:\n+            if not is_ref and (not self.query.is_meta_ordering(expr)):\n                 expressions.extend(expr.get_group_by_cols())\n         having_group_by = self.having.get_group_by_cols() if self.having else ()\n         for expr in having_group_by:\n", "normalized_occurrence": 1}
