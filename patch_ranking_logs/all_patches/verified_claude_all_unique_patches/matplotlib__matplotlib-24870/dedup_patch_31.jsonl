{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-24870", "model_patch": "diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py\nindex 908a24f..d28f200 100644\n--- a/lib/matplotlib/contour.py\n+++ b/lib/matplotlib/contour.py\n@@ -1462,7 +1462,11 @@ class QuadContourSet(ContourSet):\n             z = ma.masked_where(z <= 0, z)\n             _api.warn_external('Log scale: values of z <= 0 have been masked')\n             self.zmin = float(z.min())\n-        self._process_contour_level_args(args)\n+        # Auto-detect boolean arrays and set appropriate level\n+        if z.dtype == np.bool_:\n+            self.levels = [0.5]\n+        else:\n+            self._process_contour_level_args(args)\n         return (x, y, z)\n \n     def _check_xyz(self, args, kwargs):\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py\nindex 04dc867..ae825a8 100644\n--- a/lib/matplotlib/contour.py\n+++ b/lib/matplotlib/contour.py\n@@ -678,7 +678,10 @@ class QuadContourSet(ContourSet):\n             z = ma.masked_where(z <= 0, z)\n             _api.warn_external('Log scale: values of z <= 0 have been masked')\n             self.zmin = float(z.min())\n-        self._process_contour_level_args(args)\n+        if z.dtype == np.bool_:\n+            self.levels = [0.5]\n+        else:\n+            self._process_contour_level_args(args)\n         return (x, y, z)\n     def _check_xyz(self, args, kwargs):\n         x, y = args[:2]\n", "normalized_occurrence": 1}
