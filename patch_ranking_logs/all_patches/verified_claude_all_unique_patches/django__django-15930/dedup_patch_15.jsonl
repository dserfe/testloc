{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15930", "model_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 47df1a9..7795f82 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -1258,7 +1258,8 @@ class When(Expression):\n                 \"When() supports a Q object, a boolean expression, or lookups \"\n                 \"as a condition.\"\n             )\n-        if isinstance(condition, Q) and not condition:\n+        if (isinstance(condition, Q) and not condition and \n+            not hasattr(condition, 'negated') and not condition.negated):\n             raise ValueError(\"An empty Q() can't be used as a When() condition.\")\n         super().__init__(output_field=None)\n         self.condition = condition\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 1b947ba..277d4ff 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -633,7 +633,7 @@ class When(Expression):\n                 condition, lookups = (Q(condition, **lookups), None)\n         if condition is None or not getattr(condition, 'conditional', False) or lookups:\n             raise TypeError('When() supports a Q object, a boolean expression, or lookups as a condition.')\n-        if isinstance(condition, Q) and (not condition):\n+        if isinstance(condition, Q) and (not condition) and (not hasattr(condition, 'negated')) and (not condition.negated):\n             raise ValueError(\"An empty Q() can't be used as a When() condition.\")\n         super().__init__(output_field=None)\n         self.condition = condition\n", "normalized_occurrence": 1}
