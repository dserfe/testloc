{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7168", "model_patch": "diff --git a/src/_pytest/python.py b/src/_pytest/python.py\nindex 9d0f83e..81c8146 100644\n--- a/src/_pytest/python.py\n+++ b/src/_pytest/python.py\n@@ -1543,7 +1543,10 @@ class Function(PyobjMixin, nodes.Item):\n         style = self.config.getoption(\"tbstyle\", \"auto\")\n         if style == \"auto\":\n             style = \"long\"\n-        return self._repr_failure_py(excinfo, style=style)\n+        try:\n+            return self._repr_failure_py(excinfo, style=style)\n+        except Exception as repr_exc:\n+            return f\"<repr_failure failed with {repr_exc.__class__.__name__}: {repr_exc}>\"\n \n \n class FunctionDefinition(Function):\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/python.py b/src/_pytest/python.py\nindex b0f60e4..ae4719d 100644\n--- a/src/_pytest/python.py\n+++ b/src/_pytest/python.py\n@@ -813,7 +813,10 @@ class Function(PyobjMixin, nodes.Item):\n         style = self.config.getoption('tbstyle', 'auto')\n         if style == 'auto':\n             style = 'long'\n-        return self._repr_failure_py(excinfo, style=style)\n+        try:\n+            return self._repr_failure_py(excinfo, style=style)\n+        except Exception as repr_exc:\n+            return f'<repr_failure failed with {repr_exc.__class__.__name__}: {repr_exc}>'\n class FunctionDefinition(Function):\n     def runtest(self) -> None:\n         raise RuntimeError('function definitions are not supposed to be used')\n", "normalized_occurrence": 1}
