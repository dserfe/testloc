{"model_name_or_path": "agentless", "instance_id": "django__django-13346", "model_patch": "diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py\nindex a0dea96..c7bfeb2 100644\n--- a/django/db/models/fields/json.py\n+++ b/django/db/models/fields/json.py\n@@ -315,6 +315,9 @@ class KeyTransform(Transform):\n         return '(%s %s %%s)' % (lhs, self.postgres_operator), tuple(params) + (lookup,)\n \n     def as_sqlite(self, compiler, connection):\n+        if isinstance(self.rhs, list):\n+            placeholders, params = zip(*[compiler.compile(KeyTransform(key_name=self.key_name, lhs=self.lhs)) for key in self.rhs])\n+            return '%s IN (%s)' % (self.lhs, ', '.join(placeholders)), params\n         lhs, params, key_transforms = self.preprocess_lhs(compiler, connection)\n         json_path = compile_json_path(key_transforms)\n         return 'JSON_EXTRACT(%s, %%s)' % lhs, tuple(params) + (json_path,)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py\nindex 781245e..b460ad4 100644\n--- a/django/db/models/fields/json.py\n+++ b/django/db/models/fields/json.py\n@@ -217,6 +217,9 @@ class KeyTransform(Transform):\n             lookup = self.key_name\n         return ('(%s %s %%s)' % (lhs, self.postgres_operator), tuple(params) + (lookup,))\n     def as_sqlite(self, compiler, connection):\n+        if isinstance(self.rhs, list):\n+            placeholders, params = zip(*[compiler.compile(KeyTransform(key_name=self.key_name, lhs=self.lhs)) for key in self.rhs])\n+            return ('%s IN (%s)' % (self.lhs, ', '.join(placeholders)), params)\n         lhs, params, key_transforms = self.preprocess_lhs(compiler, connection)\n         json_path = compile_json_path(key_transforms)\n         return ('JSON_EXTRACT(%s, %%s)' % lhs, tuple(params) + (json_path,))\n", "normalized_occurrence": 1}
