{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-12236", "model_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 03af2f5..8648bed 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -72,7 +72,10 @@ def apart(f, x=None, full=False, **options):\n \n     f = sympify(f)\n \n-    if f.is_Atom:\n+    if x is None:\n+        raise ValueError(\"x must be given for apart to decompose the expression\")\n+        \n+    if f.is_Atom or not f.has(x):\n         return f\n     else:\n         P, Q = f.as_numer_denom()\n@@ -117,7 +120,7 @@ def apart(f, x=None, full=False, **options):\n                     pass\n             return f.xreplace(dict(reps))\n \n-    if P.is_multivariate:\n+    if P.is_multivariate or not P.has(x):\n         fc = f.cancel()\n         if fc != f:\n             return apart(fc, x=x, full=full, **_options)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 21c4bd7..6436035 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -12,7 +12,9 @@ from sympy.core.compatibility import range\n def apart(f, x=None, full=False, **options):\n     allowed_flags(options, [])\n     f = sympify(f)\n-    if f.is_Atom:\n+    if x is None:\n+        raise ValueError('x must be given for apart to decompose the expression')\n+    if f.is_Atom or not f.has(x):\n         return f\n     else:\n         P, Q = f.as_numer_denom()\n@@ -54,7 +56,7 @@ def apart(f, x=None, full=False, **options):\n                 except NotImplementedError:\n                     pass\n             return f.xreplace(dict(reps))\n-    if P.is_multivariate:\n+    if P.is_multivariate or not P.has(x):\n         fc = f.cancel()\n         if fc != f:\n             return apart(fc, x=x, full=full, **_options)\n", "normalized_occurrence": 1}
