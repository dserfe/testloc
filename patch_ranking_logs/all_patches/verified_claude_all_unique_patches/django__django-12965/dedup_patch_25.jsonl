{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12965", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 7c860dc..b3ccadb 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -1423,7 +1423,13 @@ class SQLDeleteCompiler(SQLCompiler):\n         Create the SQL for this query. Return the SQL string and list of\n         parameters.\n         \"\"\"\n-        if self.single_alias:\n+        # Use simple DELETE without subquery if we're deleting all rows\n+        # or if the query is already simple enough\n+        if self.single_alias or (\n+            not self.query.where.children and\n+            not self.query.annotation_select and\n+            not self.query.distinct\n+        ):\n             return self._as_sql(self.query)\n         innerq = self.query.clone()\n         innerq.__class__ = Query\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 8178df0..bc5ff1a 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -798,7 +798,7 @@ class SQLDeleteCompiler(SQLCompiler):\n             result.append('WHERE %s' % where)\n         return (' '.join(result), tuple(params))\n     def as_sql(self):\n-        if self.single_alias:\n+        if self.single_alias or (not self.query.where.children and (not self.query.annotation_select) and (not self.query.distinct)):\n             return self._as_sql(self.query)\n         innerq = self.query.clone()\n         innerq.__class__ = Query\n", "normalized_occurrence": 2}
