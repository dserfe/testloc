{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16454", "model_patch": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex f221176..d3664cb 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -71,6 +71,14 @@ class CommandParser(ArgumentParser):\n         else:\n             raise CommandError(\"Error: %s\" % message)\n \n+    def add_subparsers(self, **kwargs):\n+        # Propagate the custom command line parser arguments\n+        parser_class = kwargs.pop(\"parser_class\", type(self))\n+        if issubclass(parser_class, CommandParser):\n+            kwargs.setdefault(\"missing_args_message\", self.missing_args_message)\n+            kwargs.setdefault(\"called_from_command_line\", self.called_from_command_line)\n+        return super().add_subparsers(parser_class=parser_class, **kwargs)\n+\n \n def handle_default_options(options):\n     \"\"\"\n", "occurrence": 1, "normalized_patch": "--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n+    def add_subparsers(self, **kwargs):\n+        parser_class = kwargs.pop('parser_class', type(self))\n+        if issubclass(parser_class, CommandParser):\n+            kwargs.setdefault('missing_args_message', self.missing_args_message)\n+            kwargs.setdefault('called_from_command_line', self.called_from_command_line)\n+        return super().add_subparsers(parser_class=parser_class, **kwargs)", "normalized_occurrence": 1}
