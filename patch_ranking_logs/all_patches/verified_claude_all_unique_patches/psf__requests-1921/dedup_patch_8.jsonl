{"model_name_or_path": "agentless_claude", "instance_id": "psf__requests-1921", "model_patch": "diff --git a/requests/sessions.py b/requests/sessions.py\nindex 4ec0f7c..be038a2 100644\n--- a/requests/sessions.py\n+++ b/requests/sessions.py\n@@ -52,9 +52,15 @@ def merge_setting(request_setting, session_setting, dict_class=OrderedDict):\n         return request_setting\n \n     merged_setting = dict_class(to_key_val_list(session_setting))\n+    \n+    # Remove None values from session_setting\n+    for (k, v) in session_setting.items():\n+        if v is None:\n+            del merged_setting[k]\n+            \n     merged_setting.update(to_key_val_list(request_setting))\n \n-    # Remove keys that are set to None.\n+    # Remove None values from request_setting\n     for (k, v) in request_setting.items():\n         if v is None:\n             del merged_setting[k]\n", "occurrence": 1, "normalized_patch": "diff --git a/requests/sessions.py b/requests/sessions.py\nindex 1467bfc..991e018 100644\n--- a/requests/sessions.py\n+++ b/requests/sessions.py\n@@ -20,6 +20,9 @@ def merge_setting(request_setting, session_setting, dict_class=OrderedDict):\n     if not (isinstance(session_setting, Mapping) and isinstance(request_setting, Mapping)):\n         return request_setting\n     merged_setting = dict_class(to_key_val_list(session_setting))\n+    for k, v in session_setting.items():\n+        if v is None:\n+            del merged_setting[k]\n     merged_setting.update(to_key_val_list(request_setting))\n     for k, v in request_setting.items():\n         if v is None:\n", "normalized_occurrence": 5}
