{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-23191", "model_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 4e979d2..80252df 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -1144,22 +1144,27 @@ class PrettyPrinter(Printer):\n             if '\\n' in partstr:\n                 tempstr = partstr\n                 tempstr = tempstr.replace(vectstrs[i], '')\n-                if '\\N{right parenthesis extension}' in tempstr:   # If scalar is a fraction\n+                if '\\N{right parenthesis extension}' in tempstr:  # If scalar is a fraction\n                     for paren in range(len(tempstr)):\n                         flag[i] = 1\n                         if tempstr[paren] == '\\N{right parenthesis extension}':\n-                            tempstr = tempstr[:paren] + '\\N{right parenthesis extension}'\\\n-                                         + ' '  + vectstrs[i] + tempstr[paren + 1:]\n+                            tempstr = tempstr[:paren] + '\\N{right parenthesis extension}' \\\n+                                     + ' ' + vectstrs[i] + tempstr[paren + 1:]\n                             break\n-                elif '\\N{RIGHT PARENTHESIS LOWER HOOK}' in tempstr:\n+                elif '\\N{RIGHT PARENTHESIS LOWER HOOK}' in tempstr or '\\N{RIGHT PARENTHESIS UPPER HOOK}' in tempstr:\n                     flag[i] = 1\n-                    tempstr = tempstr.replace('\\N{RIGHT PARENTHESIS LOWER HOOK}',\n-                                        '\\N{RIGHT PARENTHESIS LOWER HOOK}'\n-                                        + ' ' + vectstrs[i])\n+                    if '\\N{RIGHT PARENTHESIS LOWER HOOK}' in tempstr:\n+                        tempstr = tempstr.replace('\\N{RIGHT PARENTHESIS LOWER HOOK}',\n+                                                  '\\N{RIGHT PARENTHESIS LOWER HOOK}'\n+                                                  + ' ' + vectstrs[i])\n+                    else:\n+                        tempstr = tempstr.replace('\\N{RIGHT PARENTHESIS UPPER HOOK}',\n+                                                  '\\N{RIGHT PARENTHESIS UPPER HOOK}'\n+                                                  + ' ' + vectstrs[i])\n                 else:\n-                    tempstr = tempstr.replace('\\N{RIGHT PARENTHESIS UPPER HOOK}',\n-                                        '\\N{RIGHT PARENTHESIS UPPER HOOK}'\n-                                        + ' ' + vectstrs[i])\n+                    tempstr = tempstr.replace(' ',\n+                                              ' ' + vectstrs[i] + ' ',\n+                                              1)\n                 o1[i] = tempstr\n \n         o1 = [x.split('\\n') for x in o1]\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex b00c794..0d4f41f 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -840,11 +840,14 @@ class PrettyPrinter(Printer):\n                         if tempstr[paren] == '⎟':\n                             tempstr = tempstr[:paren] + '⎟' + ' ' + vectstrs[i] + tempstr[paren + 1:]\n                             break\n-                elif '⎠' in tempstr:\n+                elif '⎠' in tempstr or '⎞' in tempstr:\n                     flag[i] = 1\n-                    tempstr = tempstr.replace('⎠', '⎠' + ' ' + vectstrs[i])\n+                    if '⎠' in tempstr:\n+                        tempstr = tempstr.replace('⎠', '⎠' + ' ' + vectstrs[i])\n+                    else:\n+                        tempstr = tempstr.replace('⎞', '⎞' + ' ' + vectstrs[i])\n                 else:\n-                    tempstr = tempstr.replace('⎞', '⎞' + ' ' + vectstrs[i])\n+                    tempstr = tempstr.replace(' ', ' ' + vectstrs[i] + ' ', 1)\n                 o1[i] = tempstr\n         o1 = [x.split('\\n') for x in o1]\n         n_newlines = max([len(x) for x in o1])\n", "normalized_occurrence": 1}
