{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-21055", "model_patch": "diff --git a/sympy/assumptions/refine.py b/sympy/assumptions/refine.py\nindex a2076bf..ba35182 100644\n--- a/sympy/assumptions/refine.py\n+++ b/sympy/assumptions/refine.py\n@@ -1,3 +1,4 @@\n+\n from typing import Dict, Callable\n \n from sympy.core import S, Add, Expr, Basic, Mul\n@@ -103,6 +104,9 @@ def refine_abs(expr, assumptions):\n             else:\n                 non_abs.append(i)\n         return Mul(*non_abs) * Abs(Mul(*in_abs))\n+    # if arg is complex\n+    if ask(Q.complex(arg), assumptions):\n+        return Abs(arg)\n \n \n def refine_Pow(expr, assumptions):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/assumptions/refine.py b/sympy/assumptions/refine.py\nindex 6dc9fb1..57e3ea9 100644\n--- a/sympy/assumptions/refine.py\n+++ b/sympy/assumptions/refine.py\n@@ -40,6 +40,8 @@ def refine_abs(expr, assumptions):\n             else:\n                 non_abs.append(i)\n         return Mul(*non_abs) * Abs(Mul(*in_abs))\n+    if ask(Q.complex(arg), assumptions):\n+        return Abs(arg)\n def refine_Pow(expr, assumptions):\n     from sympy.core import Pow, Rational\n     from sympy.functions.elementary.complexes import Abs\n", "normalized_occurrence": 1}
