{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15738", "model_patch": "diff --git a/django/db/migrations/state.py b/django/db/migrations/state.py\nindex 5562d34..e32bc67 100644\n--- a/django/db/migrations/state.py\n+++ b/django/db/migrations/state.py\n@@ -180,7 +180,11 @@ class ProjectState:\n \n     def alter_model_options(self, app_label, model_name, options, option_keys=None):\n         model_state = self.models[app_label, model_name]\n-        model_state.options = {**model_state.options, **options}\n+        for key, value in options.items():\n+            if value is None or value == []:\n+                model_state.options.pop(key, None)\n+            else:\n+                model_state.options[key] = value\n         if option_keys:\n             for key in option_keys:\n                 if key not in options:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/state.py b/django/db/migrations/state.py\nindex 18747a4..97f8451 100644\n--- a/django/db/migrations/state.py\n+++ b/django/db/migrations/state.py\n@@ -115,7 +115,11 @@ class ProjectState:\n         self.reload_model(app_label, new_name_lower, delay=True)\n     def alter_model_options(self, app_label, model_name, options, option_keys=None):\n         model_state = self.models[app_label, model_name]\n-        model_state.options = {**model_state.options, **options}\n+        for key, value in options.items():\n+            if value is None or value == []:\n+                model_state.options.pop(key, None)\n+            else:\n+                model_state.options[key] = value\n         if option_keys:\n             for key in option_keys:\n                 if key not in options:\n", "normalized_occurrence": 1}
