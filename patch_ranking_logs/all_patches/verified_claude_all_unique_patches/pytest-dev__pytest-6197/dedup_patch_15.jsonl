{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-6197", "model_patch": "diff --git a/src/_pytest/main.py b/src/_pytest/main.py\nindex 56dcb06..f54e1b2 100644\n--- a/src/_pytest/main.py\n+++ b/src/_pytest/main.py\n@@ -290,6 +290,13 @@ def pytest_ignore_collect(path, config):\n     if py.path.local(path) in ignore_paths:\n         return True\n \n+    # Don't collect __init__.py files unless they are in test directories\n+    if path.basename == \"__init__.py\" and not any(\n+        part.startswith(\"test_\") or part == \"tests\"\n+        for part in path.dirname.split(path.sep)\n+    ):\n+        return True\n+\n     ignore_globs = config._getconftest_pathlist(\n         \"collect_ignore_glob\", path=path.dirpath()\n     )\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/main.py b/src/_pytest/main.py\nindex 694cf6b..66383b9 100644\n--- a/src/_pytest/main.py\n+++ b/src/_pytest/main.py\n@@ -141,6 +141,8 @@ def pytest_ignore_collect(path, config):\n         ignore_paths.extend([py.path.local(x) for x in excludeopt])\n     if py.path.local(path) in ignore_paths:\n         return True\n+    if path.basename == '__init__.py' and (not any((part.startswith('test_') or part == 'tests' for part in path.dirname.split(path.sep)))):\n+        return True\n     ignore_globs = config._getconftest_pathlist('collect_ignore_glob', path=path.dirpath())\n     ignore_globs = ignore_globs or []\n     excludeglobopt = config.getoption('ignore_glob')\n", "normalized_occurrence": 1}
