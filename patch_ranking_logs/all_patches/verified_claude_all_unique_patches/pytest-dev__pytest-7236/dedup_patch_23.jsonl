{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-7236", "model_patch": "diff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py\nindex 28ce115..857e9c7 100644\n--- a/src/_pytest/unittest.py\n+++ b/src/_pytest/unittest.py\n@@ -221,8 +221,11 @@ class TestCaseFunction(Function):\n             # TestCase instance interacts with the results object, so better to only do it\n             # when absolutely needed\n             if self.config.getoption(\"usepdb\"):\n-                self._explicit_tearDown = self._testcase.tearDown\n-                setattr(self._testcase, \"tearDown\", lambda *args: None)\n+                # Only replace tearDown for non-skipped tests\n+                skip_marker = self.obj.__dict__.get('__unittest_skip__', False)\n+                if not skip_marker:\n+                    self._explicit_tearDown = self._testcase.tearDown\n+                    setattr(self._testcase, \"tearDown\", lambda *args: None)\n \n             # we need to update the actual bound method with self.obj, because\n             # wrap_pytest_function_for_tracing replaces self.obj by a wrapper\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py\nindex 4eb682f..125f990 100644\n--- a/src/_pytest/unittest.py\n+++ b/src/_pytest/unittest.py\n@@ -153,8 +153,10 @@ class TestCaseFunction(Function):\n             self._testcase(self)\n         else:\n             if self.config.getoption('usepdb'):\n-                self._explicit_tearDown = self._testcase.tearDown\n-                setattr(self._testcase, 'tearDown', lambda *args: None)\n+                skip_marker = self.obj.__dict__.get('__unittest_skip__', False)\n+                if not skip_marker:\n+                    self._explicit_tearDown = self._testcase.tearDown\n+                    setattr(self._testcase, 'tearDown', lambda *args: None)\n             setattr(self._testcase, self.name, self.obj)\n             try:\n                 self._testcase(result=self)\n", "normalized_occurrence": 1}
