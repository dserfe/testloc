{"model_name_or_path": "agentless", "instance_id": "django__django-13220", "model_patch": "diff --git a/django/core/exceptions.py b/django/core/exceptions.py\nindex 7969d41..4c21010 100644\n--- a/django/core/exceptions.py\n+++ b/django/core/exceptions.py\n@@ -174,7 +174,10 @@ class ValidationError(Exception):\n                     message %= error.params\n                 yield str(message)\n \n-    def __str__(self):\n+    def __eq__(self, other):\n+        if not isinstance(other, ValidationError):\n+            return NotImplemented\n+        return self.messages == other.messages\n         if hasattr(self, 'error_dict'):\n             return repr(dict(self))\n         return repr(list(self))\n@@ -190,4 +193,4 @@ class EmptyResultSet(Exception):\n \n class SynchronousOnlyOperation(Exception):\n     \"\"\"The user tried to call a sync-only function from an async context.\"\"\"\n-    pass\n+    pass\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/exceptions.py b/django/core/exceptions.py\nindex 7691d44..bc45688 100644\n--- a/django/core/exceptions.py\n+++ b/django/core/exceptions.py\n@@ -147,7 +147,10 @@ class ValidationError(Exception):\n                     message %= error.params\n                 yield str(message)\n \n-    def __str__(self):\n+    def __eq__(self, other):\n+        if not isinstance(other, ValidationError):\n+            return NotImplemented\n+        return self.messages == other.messages\n         if hasattr(self, 'error_dict'):\n             return repr(dict(self))\n         return repr(list(self))\n", "normalized_occurrence": 1}
