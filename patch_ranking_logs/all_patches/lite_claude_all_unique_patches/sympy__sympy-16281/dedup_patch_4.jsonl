{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-16281", "model_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex b70dcf9..1dfb025 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -490,11 +490,16 @@ class PrettyPrinter(Printer):\n         sign_height = 0\n \n         for lim in expr.limits:\n-            width = (func_height + 2) * 5 // 3 - 2\n+            width = (func_height + 2) * 3 // 2 - 2\n             sign_lines = []\n-            sign_lines.append(corner_chr + (horizontal_chr*width) + corner_chr)\n-            for i in range(func_height + 1):\n-                sign_lines.append(vertical_chr + (' '*width) + vertical_chr)\n+            if self._use_unicode:\n+                sign_lines.append(u'\\N{BOX DRAWINGS LIGHT DOWN AND HORIZONTAL}' + (horizontal_chr*(width+2)) + u'\\N{BOX DRAWINGS LIGHT DOWN AND HORIZONTAL}')\n+                for i in range(func_height):\n+                    sign_lines.append(u'\\N{BOX DRAWINGS LIGHT VERTICAL}' + (' '*width) + u'\\N{BOX DRAWINGS LIGHT VERTICAL}')\n+            else:\n+                sign_lines.append(corner_chr + (horizontal_chr*width) + corner_chr)\n+                for i in range(func_height):\n+                    sign_lines.append(vertical_chr + (' '*width) + vertical_chr)\n \n             pretty_sign = stringPict('')\n             pretty_sign = prettyForm(*pretty_sign.stack(*sign_lines))\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\nindex 0b99bb2..f7f0bb1 100644\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -359,11 +359,16 @@ class PrettyPrinter(Printer):\n         max_upper = 0\n         sign_height = 0\n         for lim in expr.limits:\n-            width = (func_height + 2) * 5 // 3 - 2\n+            width = (func_height + 2) * 3 // 2 - 2\n             sign_lines = []\n-            sign_lines.append(corner_chr + horizontal_chr * width + corner_chr)\n-            for i in range(func_height + 1):\n-                sign_lines.append(vertical_chr + ' ' * width + vertical_chr)\n+            if self._use_unicode:\n+                sign_lines.append(u'\u252c' + horizontal_chr * (width + 2) + u'\u252c')\n+                for i in range(func_height):\n+                    sign_lines.append(u'\u2502' + ' ' * width + u'\u2502')\n+            else:\n+                sign_lines.append(corner_chr + horizontal_chr * width + corner_chr)\n+                for i in range(func_height):\n+                    sign_lines.append(vertical_chr + ' ' * width + vertical_chr)\n             pretty_sign = stringPict('')\n             pretty_sign = prettyForm(*pretty_sign.stack(*sign_lines))\n             pretty_upper = self._print(lim[2])\n", "normalized_occurrence": 1}
