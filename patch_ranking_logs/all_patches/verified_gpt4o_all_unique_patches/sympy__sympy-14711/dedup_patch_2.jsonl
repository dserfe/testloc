{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-14711", "model_patch": "diff --git a/sympy/physics/vector/vector.py b/sympy/physics/vector/vector.py\nindex 77e79b6..14c863c 100644\n--- a/sympy/physics/vector/vector.py\n+++ b/sympy/physics/vector/vector.py\n@@ -722,5 +722,8 @@ class VectorTypeError(TypeError):\n \n def _check_vector(other):\n     if not isinstance(other, Vector):\n-        raise TypeError('A Vector must be supplied')\n+        if other == 0:\n+            return Vector(0)\n+        else:\n+            raise TypeError('A Vector must be supplied')\n     return other\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/physics/vector/vector.py b/sympy/physics/vector/vector.py\nindex 22f61ec..982b42c 100644\n--- a/sympy/physics/vector/vector.py\n+++ b/sympy/physics/vector/vector.py\n@@ -300,5 +300,8 @@ class VectorTypeError(TypeError):\n         super(VectorTypeError, self).__init__(msg)\n def _check_vector(other):\n     if not isinstance(other, Vector):\n-        raise TypeError('A Vector must be supplied')\n+        if other == 0:\n+            return Vector(0)\n+        else:\n+            raise TypeError('A Vector must be supplied')\n     return other\n\\ No newline at end of file\n", "normalized_occurrence": 1}
