{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-17630", "model_patch": "diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py\nindex 5a4ea29..57b389c 100644\n--- a/sympy/matrices/expressions/blockmatrix.py\n+++ b/sympy/matrices/expressions/blockmatrix.py\n@@ -465,6 +465,8 @@ def bc_matmul(expr):\n         A, B = matrices[i:i+2]\n         if isinstance(A, BlockMatrix) and isinstance(B, BlockMatrix):\n             matrices[i] = A._blockmul(B)\n+            if isinstance(matrices[i], Matrix) and matrices[i].is_ZeroMatrix:\n+                matrices[i] = ZeroMatrix(matrices[i].rows, matrices[i].cols)\n             matrices.pop(i+1)\n         elif isinstance(A, BlockMatrix):\n             matrices[i] = A._blockmul(BlockMatrix([[B]]))\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py\nindex c0f9049..408fd65 100644\n--- a/sympy/matrices/expressions/blockmatrix.py\n+++ b/sympy/matrices/expressions/blockmatrix.py\n@@ -238,6 +238,8 @@ def bc_matmul(expr):\n         A, B = matrices[i:i + 2]\n         if isinstance(A, BlockMatrix) and isinstance(B, BlockMatrix):\n             matrices[i] = A._blockmul(B)\n+            if isinstance(matrices[i], Matrix) and matrices[i].is_ZeroMatrix:\n+                matrices[i] = ZeroMatrix(matrices[i].rows, matrices[i].cols)\n             matrices.pop(i + 1)\n         elif isinstance(A, BlockMatrix):\n             matrices[i] = A._blockmul(BlockMatrix([[B]]))\n", "normalized_occurrence": 1}
