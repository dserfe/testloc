{"model_name_or_path": "agentless", "instance_id": "django__django-11620", "model_patch": "diff --git a/django/views/debug.py b/django/views/debug.py\nindex fa06caa..ecf06b7 100644\n--- a/django/views/debug.py\n+++ b/django/views/debug.py\n@@ -456,7 +456,7 @@ class ExceptionReporter:\n         return frames\n \n \n-def technical_404_response(request, exception):\n+def technical_404_response(request, exception, resolver_match=None):\n     \"\"\"Create a technical 404 error response. `exception` is the Http404.\"\"\"\n     try:\n         error_url = exception.args[0]['path']\n@@ -481,11 +481,13 @@ def technical_404_response(request, exception):\n         urlconf = urlconf.__name__\n \n     caller = ''\n-    try:\n-        resolver_match = resolve(request.path)\n-    except Resolver404:\n-        pass\n-    else:\n+    if resolver_match is None:\n+        try:\n+            resolver_match = resolve(request.path)\n+        except Resolver404:\n+            pass\n+\n+    if resolver_match:\n         obj = resolver_match.func\n \n         if hasattr(obj, '__name__'):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/views/debug.py b/django/views/debug.py\nindex 9e5f1cd..db36a9c 100644\n--- a/django/views/debug.py\n+++ b/django/views/debug.py\n@@ -261,7 +261,7 @@ class ExceptionReporter:\n             else:\n                 tb = tb.tb_next\n         return frames\n-def technical_404_response(request, exception):\n+def technical_404_response(request, exception, resolver_match=None):\n     try:\n         error_url = exception.args[0]['path']\n     except (IndexError, TypeError, KeyError):\n@@ -277,11 +277,12 @@ def technical_404_response(request, exception):\n     if isinstance(urlconf, types.ModuleType):\n         urlconf = urlconf.__name__\n     caller = ''\n-    try:\n-        resolver_match = resolve(request.path)\n-    except Resolver404:\n-        pass\n-    else:\n+    if resolver_match is None:\n+        try:\n+            resolver_match = resolve(request.path)\n+        except Resolver404:\n+            pass\n+    if resolver_match:\n         obj = resolver_match.func\n         if hasattr(obj, '__name__'):\n             caller = obj.__name__\n", "normalized_occurrence": 1}
