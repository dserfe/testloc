{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-11445", "model_patch": "diff --git a/sphinx/parsers.py b/sphinx/parsers.py\nindex 1ab7d44..e01763c 100644\n--- a/sphinx/parsers.py\n+++ b/sphinx/parsers.py\n@@ -82,8 +82,12 @@ class RSTParser(docutils.parsers.rst.Parser, Parser):\n \n     def decorate(self, content: StringList) -> None:\n         \"\"\"Preprocess reST content before parsing.\"\"\"\n-        prepend_prolog(content, self.config.rst_prolog)\n-        append_epilog(content, self.config.rst_epilog)\n+        if self.config.rst_prolog:\n+            prolog_lines = StringList(self.config.rst_prolog.splitlines())\n+            prolog_lines.extend(content)\n+            content = prolog_lines\n+        if self.config.rst_epilog:\n+            content.extend(self.config.rst_epilog.splitlines())\n \n \n def setup(app: Sphinx) -> dict[str, Any]:\n@@ -93,4 +97,4 @@ def setup(app: Sphinx) -> dict[str, Any]:\n         'version': 'builtin',\n         'parallel_read_safe': True,\n         'parallel_write_safe': True,\n-    }\n+    }\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/parsers.py b/sphinx/parsers.py\nindex a99dedf..c05bf97 100644\n--- a/sphinx/parsers.py\n+++ b/sphinx/parsers.py\n@@ -36,8 +36,12 @@ class RSTParser(docutils.parsers.rst.Parser, Parser):\n         self.statemachine.run(inputlines, document, inliner=self.inliner)\n         self.finish_parse()\n     def decorate(self, content: StringList) -> None:\n-        prepend_prolog(content, self.config.rst_prolog)\n-        append_epilog(content, self.config.rst_epilog)\n+        if self.config.rst_prolog:\n+            prolog_lines = StringList(self.config.rst_prolog.splitlines())\n+            prolog_lines.extend(content)\n+            content = prolog_lines\n+        if self.config.rst_epilog:\n+            content.extend(self.config.rst_epilog.splitlines())\n def setup(app: Sphinx) -> dict[str, Any]:\n     app.add_source_parser(RSTParser)\n     return {'version': 'builtin', 'parallel_read_safe': True, 'parallel_write_safe': True}\n\\ No newline at end of file\n", "normalized_occurrence": 1}
