{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-9281", "model_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex da040b3..088b26d 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -122,6 +122,11 @@ def _parse_annotation(annotation: str, env: BuildEnvironment = None) -> List[Nod\n             if node.value is Ellipsis:\n                 return [addnodes.desc_sig_punctuation('', \"...\")]\n             else:\n+                # Handle Enum values specially to show just the enum member access\n+                if hasattr(node.value, '__module__') and hasattr(node.value, '__class__') and \\\n+                   hasattr(node.value.__class__, '__module__') and \\\n+                   node.value.__class__.__module__ == 'enum':\n+                    return [nodes.Text(f\"{node.value.__class__.__name__}.{node.value.name}\")]\n                 return [nodes.Text(node.value)]\n         elif isinstance(node, ast.Expr):\n             return unparse(node.value)\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex 5b8a917..464ba72 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -71,6 +71,8 @@ def _parse_annotation(annotation: str, env: BuildEnvironment=None) -> List[Node]\n             if node.value is Ellipsis:\n                 return [addnodes.desc_sig_punctuation('', '...')]\n             else:\n+                if hasattr(node.value, '__module__') and hasattr(node.value, '__class__') and hasattr(node.value.__class__, '__module__') and (node.value.__class__.__module__ == 'enum'):\n+                    return [nodes.Text(f'{node.value.__class__.__name__}.{node.value.name}')]\n                 return [nodes.Text(node.value)]\n         elif isinstance(node, ast.Expr):\n             return unparse(node.value)\n", "normalized_occurrence": 1}
