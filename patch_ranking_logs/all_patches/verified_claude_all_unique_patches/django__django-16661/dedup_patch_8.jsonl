{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16661", "model_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 20a301b..b352263 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -464,11 +464,8 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n             # It is allowed to filter on values that would be found from local\n             # model anyways. For example, if you filter on employee__department__id,\n             # then the id value would be found already from employee__department_id.\n-            if not prev_field or (\n-                prev_field.is_relation\n-                and field not in prev_field.path_infos[-1].target_fields\n-            ):\n-                relation_parts.append(part)\n+            # All relation parts should be included for proper lookup validation\n+            relation_parts.append(part)\n             if not getattr(field, \"path_infos\", None):\n                 # This is not a relational field, so further parts\n                 # must be transforms.\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 061e1b9..247e0b3 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -205,8 +205,7 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n                 field = model._meta.get_field(part)\n             except FieldDoesNotExist:\n                 break\n-            if not prev_field or (prev_field.is_relation and field not in prev_field.path_infos[-1].target_fields):\n-                relation_parts.append(part)\n+            relation_parts.append(part)\n             if not getattr(field, 'path_infos', None):\n                 break\n             prev_field = field\n", "normalized_occurrence": 1}
