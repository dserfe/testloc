{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14999", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 165c6f5..d58f7d8 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -320,11 +320,17 @@ class RenameModel(ModelOperation):\n         new_model = to_state.apps.get_model(app_label, self.new_name)\n         if self.allow_migrate_model(schema_editor.connection.alias, new_model):\n             old_model = from_state.apps.get_model(app_label, self.old_name)\n+            # If the db_table is explicitly set and is the same for both models,\n+            # then no database changes are needed.\n+            old_db_table = old_model._meta.db_table\n+            new_db_table = new_model._meta.db_table\n+            if getattr(old_model._meta, 'db_table', None) and old_db_table == new_db_table:\n+                return\n             # Move the main table\n             schema_editor.alter_db_table(\n                 new_model,\n-                old_model._meta.db_table,\n-                new_model._meta.db_table,\n+                old_db_table,\n+                new_db_table,\n             )\n             # Alter the fields pointing to us\n             for related_object in old_model._meta.related_objects:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 8445d8b..d40d400 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -152,7 +152,11 @@ class RenameModel(ModelOperation):\n         new_model = to_state.apps.get_model(app_label, self.new_name)\n         if self.allow_migrate_model(schema_editor.connection.alias, new_model):\n             old_model = from_state.apps.get_model(app_label, self.old_name)\n-            schema_editor.alter_db_table(new_model, old_model._meta.db_table, new_model._meta.db_table)\n+            old_db_table = old_model._meta.db_table\n+            new_db_table = new_model._meta.db_table\n+            if getattr(old_model._meta, 'db_table', None) and old_db_table == new_db_table:\n+                return\n+            schema_editor.alter_db_table(new_model, old_db_table, new_db_table)\n             for related_object in old_model._meta.related_objects:\n                 if related_object.related_model == old_model:\n                     model = new_model\n", "normalized_occurrence": 1}
