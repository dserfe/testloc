{"model_name_or_path": "agentless", "instance_id": "django__django-17029", "model_patch": "diff --git a/django/apps/registry.py b/django/apps/registry.py\nindex ca85962..61b5345 100644\n--- a/django/apps/registry.py\n+++ b/django/apps/registry.py\n@@ -376,6 +376,7 @@ class Apps:\n         # Call expire cache on each model. This will purge\n         # the relation tree and the fields cache.\n         self.get_models.cache_clear()\n+        self.get_swappable_settings_name.cache_clear()\n         if self.ready:\n             # Circumvent self.get_models() to prevent that the cache is refilled.\n             # This particularly prevents that an empty value is cached while cloning.\n", "occurrence": 38, "normalized_patch": "diff --git a/django/apps/registry.py b/django/apps/registry.py\nindex 057d99d..2cf3dbe 100644\n--- a/django/apps/registry.py\n+++ b/django/apps/registry.py\n@@ -155,6 +155,7 @@ class Apps:\n         self.clear_cache()\n     def clear_cache(self):\n         self.get_models.cache_clear()\n+        self.get_swappable_settings_name.cache_clear()\n         if self.ready:\n             for app_config in self.app_configs.values():\n                 for model in app_config.get_models(include_auto_created=True):\n", "normalized_occurrence": 38}
