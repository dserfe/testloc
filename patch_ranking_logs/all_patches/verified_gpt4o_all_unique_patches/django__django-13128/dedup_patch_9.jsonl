{"model_name_or_path": "agentless", "instance_id": "django__django-13128", "model_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 215532d..539a91d 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -425,6 +425,11 @@ class Expression(BaseExpression, Combinable):\n class CombinedExpression(SQLiteNumericMixin, Expression):\n \n     def __init__(self, lhs, connector, rhs, output_field=None):\n+        if output_field is None:\n+            lhs_type = getattr(lhs.output_field, 'get_internal_type', lambda: None)()\n+            rhs_type = getattr(rhs.output_field, 'get_internal_type', lambda: None)()\n+            if connector == self.SUB and lhs_type == 'DateTimeField' and rhs_type == 'DateTimeField':\n+                output_field = fields.DurationField()\n         super().__init__(output_field=output_field)\n         self.connector = connector\n         self.lhs = lhs\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex ae5c73e..60853eb 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -226,6 +226,11 @@ class Expression(BaseExpression, Combinable):\n     pass\n class CombinedExpression(SQLiteNumericMixin, Expression):\n     def __init__(self, lhs, connector, rhs, output_field=None):\n+        if output_field is None:\n+            lhs_type = getattr(lhs.output_field, 'get_internal_type', lambda: None)()\n+            rhs_type = getattr(rhs.output_field, 'get_internal_type', lambda: None)()\n+            if connector == self.SUB and lhs_type == 'DateTimeField' and (rhs_type == 'DateTimeField'):\n+                output_field = fields.DurationField()\n         super().__init__(output_field=output_field)\n         self.connector = connector\n         self.lhs = lhs\n", "normalized_occurrence": 1}
