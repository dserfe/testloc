{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-15100", "model_patch": "diff --git a/sklearn/feature_extraction/text.py b/sklearn/feature_extraction/text.py\nindex d954f48..f6d64db 100644\n--- a/sklearn/feature_extraction/text.py\n+++ b/sklearn/feature_extraction/text.py\n@@ -130,10 +130,7 @@ def strip_accents_unicode(s):\n         ASCII equivalent.\n     \"\"\"\n     normalized = unicodedata.normalize('NFKD', s)\n-    if normalized == s:\n-        return s\n-    else:\n-        return ''.join([c for c in normalized if not unicodedata.combining(c)])\n+    return ''.join([c for c in normalized if not unicodedata.combining(c)])\n \n \n def strip_accents_ascii(s):\n", "occurrence": 40, "normalized_patch": "diff --git a/sklearn/feature_extraction/text.py b/sklearn/feature_extraction/text.py\nindex 55fdc23..4703bae 100644\n--- a/sklearn/feature_extraction/text.py\n+++ b/sklearn/feature_extraction/text.py\n@@ -42,10 +42,7 @@ def _analyze(doc, analyzer=None, tokenizer=None, ngrams=None, preprocessor=None,\n     return doc\n def strip_accents_unicode(s):\n     normalized = unicodedata.normalize('NFKD', s)\n-    if normalized == s:\n-        return s\n-    else:\n-        return ''.join([c for c in normalized if not unicodedata.combining(c)])\n+    return ''.join([c for c in normalized if not unicodedata.combining(c)])\n def strip_accents_ascii(s):\n     nkfd_form = unicodedata.normalize('NFKD', s)\n     return nkfd_form.encode('ASCII', 'ignore').decode('ASCII')\n", "normalized_occurrence": 40}
