{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12470", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 4b61f66..8b1f8a8 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1904,7 +1904,15 @@ class Query(BaseExpression):\n         if errors:\n             raise FieldError('Invalid order_by arguments: %s' % errors)\n         if ordering:\n-            self.order_by += ordering\n+            # Convert the ordering to a list to handle any modifications\n+            current_ordering = list(self.order_by)\n+            for item in ordering:\n+                if isinstance(item, str) and item.startswith('-'):\n+                    # For string items starting with '-', ensure the minus is preserved\n+                    current_ordering.append(item)\n+                else:\n+                    current_ordering.append(item)\n+            self.order_by = tuple(current_ordering)\n         else:\n             self.default_ordering = False\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 4386979..abbabcb 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1014,7 +1014,13 @@ class Query(BaseExpression):\n         if errors:\n             raise FieldError('Invalid order_by arguments: %s' % errors)\n         if ordering:\n-            self.order_by += ordering\n+            current_ordering = list(self.order_by)\n+            for item in ordering:\n+                if isinstance(item, str) and item.startswith('-'):\n+                    current_ordering.append(item)\n+                else:\n+                    current_ordering.append(item)\n+            self.order_by = tuple(current_ordering)\n         else:\n             self.default_ordering = False\n     def clear_ordering(self, force_empty):\n", "normalized_occurrence": 1}
