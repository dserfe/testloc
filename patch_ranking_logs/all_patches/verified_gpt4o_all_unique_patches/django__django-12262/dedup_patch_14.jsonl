{"model_name_or_path": "agentless", "instance_id": "django__django-12262", "model_patch": "diff --git a/django/template/library.py b/django/template/library.py\nindex e9453ed..7a6a48f 100644\n--- a/django/template/library.py\n+++ b/django/template/library.py\n@@ -301,11 +301,19 @@ def parse_bits(parser, bits, params, varargs, varkw, defaults,\n         # Consider the last n params handled, where n is the\n         # number of defaults.\n         unhandled_params = unhandled_params[:-len(defaults)]\n+    for kwarg in kwonly:\n+        if kwarg in kwargs:\n+            continue\n+        if kwonly_defaults and kwarg in kwonly_defaults:\n+            kwargs[kwarg] = parser.compile_filter(kwonly_defaults[kwarg])\n+        else:\n+            unhandled_kwargs.append(kwarg)\n+\n     if unhandled_params or unhandled_kwargs:\n-        # Some positional arguments were not supplied\n+        missing_params = unhandled_params + unhandled_kwargs\n         raise TemplateSyntaxError(\n             \"'%s' did not receive value(s) for the argument(s): %s\" %\n-            (name, \", \".join(\"'%s'\" % p for p in unhandled_params + unhandled_kwargs)))\n+            (name, \", \".join(\"'%s'\" % p for p in missing_params)))\n     return args, kwargs\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/template/library.py b/django/template/library.py\nindex fb58a77..08d926f 100644\n--- a/django/template/library.py\n+++ b/django/template/library.py\n@@ -172,8 +172,16 @@ def parse_bits(parser, bits, params, varargs, varkw, defaults, kwonly, kwonly_de\n                     raise TemplateSyntaxError(\"'%s' received too many positional arguments\" % name)\n     if defaults is not None:\n         unhandled_params = unhandled_params[:-len(defaults)]\n+    for kwarg in kwonly:\n+        if kwarg in kwargs:\n+            continue\n+        if kwonly_defaults and kwarg in kwonly_defaults:\n+            kwargs[kwarg] = parser.compile_filter(kwonly_defaults[kwarg])\n+        else:\n+            unhandled_kwargs.append(kwarg)\n     if unhandled_params or unhandled_kwargs:\n-        raise TemplateSyntaxError(\"'%s' did not receive value(s) for the argument(s): %s\" % (name, ', '.join((\"'%s'\" % p for p in unhandled_params + unhandled_kwargs))))\n+        missing_params = unhandled_params + unhandled_kwargs\n+        raise TemplateSyntaxError(\"'%s' did not receive value(s) for the argument(s): %s\" % (name, ', '.join((\"'%s'\" % p for p in missing_params))))\n     return (args, kwargs)\n def import_library(name):\n     try:\n", "normalized_occurrence": 1}
