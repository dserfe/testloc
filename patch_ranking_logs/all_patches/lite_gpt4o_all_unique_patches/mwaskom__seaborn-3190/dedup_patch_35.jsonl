{"model_name_or_path": "agentless", "instance_id": "mwaskom__seaborn-3190", "model_patch": "diff --git a/seaborn/_core/scales.py b/seaborn/_core/scales.py\nindex 9be3959..da85b9d 100644\n--- a/seaborn/_core/scales.py\n+++ b/seaborn/_core/scales.py\n@@ -348,10 +348,16 @@ class ContinuousBase(Scale):\n                 vmin, vmax = new.norm\n             vmin, vmax = axis.convert_units((vmin, vmax))\n             a = forward(vmin)\n-            b = forward(vmax) - forward(vmin)\n+            if isinstance(vmin, (bool, np.bool_)):  # Check if vmin is a boolean\n+                b = forward(vmax) ^ forward(vmin)  # Use XOR for boolean values\n+            else:\n+                b = forward(vmax) - forward(vmin)\n \n             def normalize(x):\n-                return (x - a) / b\n+                if isinstance(vmin, (bool, np.bool_)):  # Adjust normalization for boolean values\n+                    return (x ^ a) / b\n+                else:\n+                    return (x - a) / b\n \n         else:\n             normalize = vmin = vmax = None\n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/_core/scales.py b/seaborn/_core/scales.py\nindex b2a020b..6aae3ed 100644\n--- a/seaborn/_core/scales.py\n+++ b/seaborn/_core/scales.py\n@@ -162,9 +162,15 @@ class ContinuousBase(Scale):\n                 vmin, vmax = new.norm\n             vmin, vmax = axis.convert_units((vmin, vmax))\n             a = forward(vmin)\n-            b = forward(vmax) - forward(vmin)\n+            if isinstance(vmin, (bool, np.bool_)):\n+                b = forward(vmax) ^ forward(vmin)\n+            else:\n+                b = forward(vmax) - forward(vmin)\n             def normalize(x):\n-                return (x - a) / b\n+                if isinstance(vmin, (bool, np.bool_)):\n+                    return (x ^ a) / b\n+                else:\n+                    return (x - a) / b\n         else:\n             normalize = vmin = vmax = None\n         new._pipeline = [axis.convert_units, forward, normalize, prop.get_mapping(new, data)]\n", "normalized_occurrence": 1}
