{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13146", "model_patch": "diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py\nindex 1ed5a09..94b625b 100644\n--- a/sympy/simplify/simplify.py\n+++ b/sympy/simplify/simplify.py\n@@ -507,6 +507,13 @@ def simplify(expr, ratio=1.7, measure=count_ops, fu=False):\n     \"\"\"\n     expr = sympify(expr)\n \n+    # Convert any Float exponents to Rational before simplification\n+    def convert_float_exp(expr):\n+        if expr.is_Pow and isinstance(expr.exp, Float):\n+            return expr.func(expr.base, Rational(str(expr.exp)))\n+        return expr\n+    expr = expr.replace(lambda x: x.is_Pow, convert_float_exp)\n+\n     try:\n         return expr._eval_simplify(ratio=ratio, measure=measure)\n     except AttributeError:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py\nindex 6ee9e94..6bd6bea 100644\n--- a/sympy/simplify/simplify.py\n+++ b/sympy/simplify/simplify.py\n@@ -146,6 +146,11 @@ def signsimp(expr, evaluate=None):\n     return e\n def simplify(expr, ratio=1.7, measure=count_ops, fu=False):\n     expr = sympify(expr)\n+    def convert_float_exp(expr):\n+        if expr.is_Pow and isinstance(expr.exp, Float):\n+            return expr.func(expr.base, Rational(str(expr.exp)))\n+        return expr\n+    expr = expr.replace(lambda x: x.is_Pow, convert_float_exp)\n     try:\n         return expr._eval_simplify(ratio=ratio, measure=measure)\n     except AttributeError:\n", "normalized_occurrence": 1}
