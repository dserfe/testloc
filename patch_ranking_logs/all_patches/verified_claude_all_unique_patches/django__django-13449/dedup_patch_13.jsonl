{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13449", "model_patch": "diff --git a/django/db/models/functions/window.py b/django/db/models/functions/window.py\nindex 01e5980..46c8549 100644\n--- a/django/db/models/functions/window.py\n+++ b/django/db/models/functions/window.py\n@@ -19,6 +19,9 @@ class DenseRank(Func):\n     window_compatible = True\n \n \n+from django.db.models import DecimalField\n+from django.db.models.functions import Cast\n+\n class FirstValue(Func):\n     arity = 1\n     function = 'FIRST_VALUE'\n@@ -51,6 +54,14 @@ class LagLeadFunction(Func):\n \n class Lag(LagLeadFunction):\n     function = 'LAG'\n+    \n+    def get_source_expressions(self):\n+        # Cast decimals explicitly to work around SQLite casting issues\n+        sources = super().get_source_expressions()\n+        if (sources and sources[0].output_field and \n+            isinstance(sources[0].output_field, DecimalField)):\n+            sources[0] = Cast(sources[0], output_field=sources[0].output_field)\n+        return sources\n \n \n class LastValue(Func):\n", "normalized_patch": "--- a/django/db/models/functions/window.py\n+++ b/django/db/models/functions/window.py\n+from django.db.models import DecimalField\n+from django.db.models.functions import Cast\n+    def get_source_expressions(self):\n+        sources = super().get_source_expressions()\n+        if sources and sources[0].output_field and isinstance(sources[0].output_field, DecimalField):\n+            sources[0] = Cast(sources[0], output_field=sources[0].output_field)\n+        return sources", "normalized_occurrence": 1}
