{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-7748", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 5ead82c..1863667 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1064,11 +1064,11 @@ class DocstringSignatureMixin:\n                 continue\n             # re-prepare docstring to ignore more leading indentation\n             tab_width = self.directive.state.document.settings.tab_width  # type: ignore\n-            self._new_docstrings[i] = prepare_docstring('\\n'.join(doclines[1:]),\n-                                                        tabsize=tab_width)\n+            self._new_docstrings[i] = prepare_docstring(\n+                '\\n'.join([doclines[0].strip()] + doclines[1:]).strip(),\n+                tabsize=tab_width)\n             result = args, retann\n-            # don't look any further\n-            break\n+            # continue to look for more signatures\n         return result\n \n     def get_doc(self, encoding: str = None, ignore: int = None) -> List[List[str]]:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 4087d22..61eef18 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -775,9 +775,8 @@ class DocstringSignatureMixin:\n             if base not in valid_names:\n                 continue\n             tab_width = self.directive.state.document.settings.tab_width\n-            self._new_docstrings[i] = prepare_docstring('\\n'.join(doclines[1:]), tabsize=tab_width)\n+            self._new_docstrings[i] = prepare_docstring('\\n'.join([doclines[0].strip()] + doclines[1:]).strip(), tabsize=tab_width)\n             result = (args, retann)\n-            break\n         return result\n \n     def get_doc(self, encoding: str=None, ignore: int=None) -> List[List[str]]:\n", "normalized_occurrence": 1}
