{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-10451", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex c6bab1b..9744c78 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -117,11 +117,12 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str],\n \n         arg = arguments.get(name, {})\n         if not arg.get('type'):\n-            field = nodes.field()\n-            field += nodes.field_name('', 'type ' + name)\n-            field += nodes.field_body('', nodes.paragraph('', annotation))\n-            node += field\n-        if not arg.get('param'):\n+            if not (name.startswith('*') and arg.get('param')):\n+                field = nodes.field()\n+                field += nodes.field_name('', 'type ' + name)\n+                field += nodes.field_body('', nodes.paragraph('', annotation))\n+                node += field\n+        if not arg.get('param') and not name.startswith('*'):\n             field = nodes.field()\n             field += nodes.field_name('', 'param ' + name)\n             field += nodes.field_body('', nodes.paragraph('', ''))\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 5da2ea8..faad92f 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -87,11 +87,12 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str], suppr\n             continue\n         arg = arguments.get(name, {})\n         if not arg.get('type'):\n-            field = nodes.field()\n-            field += nodes.field_name('', 'type ' + name)\n-            field += nodes.field_body('', nodes.paragraph('', annotation))\n-            node += field\n-        if not arg.get('param'):\n+            if not (name.startswith('*') and arg.get('param')):\n+                field = nodes.field()\n+                field += nodes.field_name('', 'type ' + name)\n+                field += nodes.field_body('', nodes.paragraph('', annotation))\n+                node += field\n+        if not arg.get('param') and (not name.startswith('*')):\n             field = nodes.field()\n             field += nodes.field_name('', 'param ' + name)\n             field += nodes.field_body('', nodes.paragraph('', ''))\n", "normalized_occurrence": 1}
