{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13915", "model_patch": "diff --git a/sympy/core/basic.py b/sympy/core/basic.py\nindex 0977e81..3c96e29 100644\n--- a/sympy/core/basic.py\n+++ b/sympy/core/basic.py\n@@ -898,6 +898,9 @@ class Basic(with_metaclass(ManagedProperties)):\n                 sequence = sorted([(k, v) for (k, v) in sequence.items()],\n                                   key=default_sort_key)\n \n+        def is_undefined(expr):\n+            return expr.has(S.NaN, S.Infinity, S.NegativeInfinity, S.ComplexInfinity)\n+\n         if kwargs.pop('simultaneous', False):  # XXX should this be the default for dict subs?\n             reps = {}\n             rv = self\n@@ -909,6 +912,8 @@ class Basic(with_metaclass(ManagedProperties)):\n                 # in things like Derivative(f(x, y), x) in which x\n                 # is both free and bound\n                 rv = rv._subs(old, d*m, **kwargs)\n+                if is_undefined(rv):\n+                    return rv.limit(old, new)\n                 if not isinstance(rv, Basic):\n                     break\n                 reps[d] = new\n@@ -918,6 +923,8 @@ class Basic(with_metaclass(ManagedProperties)):\n             rv = self\n             for old, new in sequence:\n                 rv = rv._subs(old, new, **kwargs)\n+                if is_undefined(rv):\n+                    return rv.limit(old, new)\n                 if not isinstance(rv, Basic):\n                     break\n             return rv\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/basic.py b/sympy/core/basic.py\nindex 782db85..d3d7c96 100644\n--- a/sympy/core/basic.py\n+++ b/sympy/core/basic.py\n@@ -310,6 +310,8 @@ class Basic(with_metaclass(ManagedProperties)):\n                 del newseq, d\n             else:\n                 sequence = sorted([(k, v) for k, v in sequence.items()], key=default_sort_key)\n+        def is_undefined(expr):\n+            return expr.has(S.NaN, S.Infinity, S.NegativeInfinity, S.ComplexInfinity)\n         if kwargs.pop('simultaneous', False):\n             reps = {}\n             rv = self\n@@ -318,6 +320,8 @@ class Basic(with_metaclass(ManagedProperties)):\n             for old, new in sequence:\n                 d = Dummy(commutative=new.is_commutative)\n                 rv = rv._subs(old, d * m, **kwargs)\n+                if is_undefined(rv):\n+                    return rv.limit(old, new)\n                 if not isinstance(rv, Basic):\n                     break\n                 reps[d] = new\n@@ -327,6 +331,8 @@ class Basic(with_metaclass(ManagedProperties)):\n             rv = self\n             for old, new in sequence:\n                 rv = rv._subs(old, new, **kwargs)\n+                if is_undefined(rv):\n+                    return rv.limit(old, new)\n                 if not isinstance(rv, Basic):\n                     break\n             return rv\n", "normalized_occurrence": 1}
