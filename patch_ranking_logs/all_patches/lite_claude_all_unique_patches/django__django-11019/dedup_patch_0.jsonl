{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11019", "model_patch": "diff --git a/django/forms/widgets.py b/django/forms/widgets.py\nindex b9c8e61..00d9223 100644\n--- a/django/forms/widgets.py\n+++ b/django/forms/widgets.py\n@@ -119,29 +119,36 @@ class Media:\n         \"\"\"\n         Merge two lists while trying to keep the relative order of the elements.\n         Warn if the lists have the same two elements in a different relative\n-        order.\n+        order, but only if they appear in both original lists.\n \n         For static assets it can be important to have them included in the DOM\n         in a certain order. In JavaScript you may not be able to reference a\n         global or in CSS you might want to override a style.\n         \"\"\"\n-        # Start with a copy of list_1.\n+        # Create sets for O(1) lookups\n+        set_1 = set(list_1)\n+        set_2 = set(list_2)\n+        common = set_1 & set_2\n+\n+        # Start with a copy of list_1\n         combined_list = list(list_1)\n         last_insert_index = len(list_1)\n+\n         # Walk list_2 in reverse, inserting each element into combined_list if\n-        # it doesn't already exist.\n+        # it doesn't already exist\n         for path in reversed(list_2):\n             try:\n                 # Does path already exist in the list?\n                 index = combined_list.index(path)\n             except ValueError:\n-                # Add path to combined_list since it doesn't exist.\n+                # Add path to combined_list since it doesn't exist\n                 combined_list.insert(last_insert_index, path)\n             else:\n-                if index > last_insert_index:\n+                # Only warn if both files were in both original lists\n+                if index > last_insert_index and path in common and combined_list[last_insert_index] in common:\n                     warnings.warn(\n                         'Detected duplicate Media files in an opposite order:\\n'\n-                        '%s\\n%s' % (combined_list[last_insert_index], combined_list[index]),\n+                        '%s\\n%s' % (path, combined_list[last_insert_index]),\n                         MediaOrderConflictWarning,\n                     )\n                 # path already exists in the list. Update last_insert_index so\n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/widgets.py b/django/forms/widgets.py\nindex cd0e6f4..e958b39 100644\n--- a/django/forms/widgets.py\n+++ b/django/forms/widgets.py\n@@ -63,6 +63,9 @@ class Media:\n         raise KeyError('Unknown media type \"%s\"' % name)\n     @staticmethod\n     def merge(list_1, list_2):\n+        set_1 = set(list_1)\n+        set_2 = set(list_2)\n+        common = set_1 & set_2\n         combined_list = list(list_1)\n         last_insert_index = len(list_1)\n         for path in reversed(list_2):\n@@ -71,8 +74,8 @@ class Media:\n             except ValueError:\n                 combined_list.insert(last_insert_index, path)\n             else:\n-                if index > last_insert_index:\n-                    warnings.warn('Detected duplicate Media files in an opposite order:\\n%s\\n%s' % (combined_list[last_insert_index], combined_list[index]), MediaOrderConflictWarning)\n+                if index > last_insert_index and path in common and (combined_list[last_insert_index] in common):\n+                    warnings.warn('Detected duplicate Media files in an opposite order:\\n%s\\n%s' % (path, combined_list[last_insert_index]), MediaOrderConflictWarning)\n                 last_insert_index = index\n         return combined_list\n     def __add__(self, other):\n", "normalized_occurrence": 1}
