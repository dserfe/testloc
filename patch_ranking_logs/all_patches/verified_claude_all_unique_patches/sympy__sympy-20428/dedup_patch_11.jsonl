{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-20428", "model_patch": "diff --git a/sympy/polys/polyclasses.py b/sympy/polys/polyclasses.py\nindex 3cf530f..e76c129 100644\n--- a/sympy/polys/polyclasses.py\n+++ b/sympy/polys/polyclasses.py\n@@ -138,7 +138,11 @@ from sympy.polys.polyerrors import (\n \n \n def init_normal_DMP(rep, lev, dom):\n-    return DMP(dmp_normal(rep, lev, dom), dom, lev)\n+    normal_rep = dmp_normal(rep, lev, dom)\n+    # Normalize zero polynomials to empty list representation\n+    if not normal_rep or (len(normal_rep) == 1 and not normal_rep[0]):\n+        return DMP([], dom, lev)\n+    return DMP(normal_rep, dom, lev)\n \n \n class DMP(PicklableWithSlots, CantSympify):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/polyclasses.py b/sympy/polys/polyclasses.py\nindex 3348dd4..ccbc4d5 100644\n--- a/sympy/polys/polyclasses.py\n+++ b/sympy/polys/polyclasses.py\n@@ -29,7 +29,10 @@ from sympy.polys.factortools import dup_cyclotomic_p, dmp_irreducible_p, dmp_fac\n from sympy.polys.rootisolation import dup_isolate_real_roots_sqf, dup_isolate_real_roots, dup_isolate_all_roots_sqf, dup_isolate_all_roots, dup_refine_real_root, dup_count_real_roots, dup_count_complex_roots, dup_sturm\n from sympy.polys.polyerrors import UnificationFailed, PolynomialError\n def init_normal_DMP(rep, lev, dom):\n-    return DMP(dmp_normal(rep, lev, dom), dom, lev)\n+    normal_rep = dmp_normal(rep, lev, dom)\n+    if not normal_rep or (len(normal_rep) == 1 and (not normal_rep[0])):\n+        return DMP([], dom, lev)\n+    return DMP(normal_rep, dom, lev)\n class DMP(PicklableWithSlots, CantSympify):\n     __slots__ = ('rep', 'lev', 'dom', 'ring')\n     def __init__(self, rep, dom, lev=None, ring=None):\n", "normalized_occurrence": 1}
