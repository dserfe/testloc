{"model_name_or_path": "agentless", "instance_id": "django__django-16041", "model_patch": "diff --git a/django/forms/formsets.py b/django/forms/formsets.py\nindex cdecbc8..4bfdb1c 100644\n--- a/django/forms/formsets.py\n+++ b/django/forms/formsets.py\n@@ -214,7 +214,10 @@ class BaseFormSet(RenderableFormMixin):\n         index will be None if the form being constructed is a new empty\n         form.\n         \"\"\"\n-        return self.form_kwargs.copy()\n+        form_kwargs = self.form_kwargs.copy()\n+        if index is None and 'empty_permitted' in form_kwargs:\n+            del form_kwargs['empty_permitted']\n+        return form_kwargs\n \n     def _construct_form(self, i, **kwargs):\n         \"\"\"Instantiate and return the i-th form instance in a formset.\"\"\"\n@@ -257,6 +260,9 @@ class BaseFormSet(RenderableFormMixin):\n \n     @property\n     def empty_form(self):\n+        form_kwargs = self.get_form_kwargs(None)\n+        if 'empty_permitted' in form_kwargs:\n+            del form_kwargs['empty_permitted']\n         form = self.form(\n             auto_id=self.auto_id,\n             prefix=self.add_prefix(\"__prefix__\"),\n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/formsets.py b/django/forms/formsets.py\nindex f7204a9..43cef9b 100644\n--- a/django/forms/formsets.py\n+++ b/django/forms/formsets.py\n@@ -95,7 +95,10 @@ class BaseFormSet(RenderableFormMixin):\n     def forms(self):\n         return [self._construct_form(i, **self.get_form_kwargs(i)) for i in range(self.total_form_count())]\n     def get_form_kwargs(self, index):\n-        return self.form_kwargs.copy()\n+        form_kwargs = self.form_kwargs.copy()\n+        if index is None and 'empty_permitted' in form_kwargs:\n+            del form_kwargs['empty_permitted']\n+        return form_kwargs\n     def _construct_form(self, i, **kwargs):\n         defaults = {'auto_id': self.auto_id, 'prefix': self.add_prefix(i), 'error_class': self.error_class, 'use_required_attribute': False, 'renderer': self.renderer}\n         if self.is_bound:\n@@ -120,6 +123,9 @@ class BaseFormSet(RenderableFormMixin):\n         return self.forms[self.initial_form_count():]\n     @property\n     def empty_form(self):\n+        form_kwargs = self.get_form_kwargs(None)\n+        if 'empty_permitted' in form_kwargs:\n+            del form_kwargs['empty_permitted']\n         form = self.form(auto_id=self.auto_id, prefix=self.add_prefix('__prefix__'), empty_permitted=True, use_required_attribute=False, **self.get_form_kwargs(None), renderer=self.renderer)\n         self.add_fields(form, None)\n         return form\n", "normalized_occurrence": 1}
