{"model_name_or_path": "agentless", "instance_id": "django__django-16136", "model_patch": "diff --git a/django/core/handlers/base.py b/django/core/handlers/base.py\nindex 940d12d..fcb53f4 100644\n--- a/django/core/handlers/base.py\n+++ b/django/core/handlers/base.py\n@@ -169,6 +169,13 @@ class BaseHandler:\n                 response=response,\n                 request=request,\n             )\n+        elif isinstance(response, HttpResponseNotAllowed):\n+            log_response(\n+                \"Method Not Allowed (405): %s\",\n+                request.path,\n+                response=response,\n+                request=request,\n+            )\n         return response\n \n     def _get_response(self, request):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/handlers/base.py b/django/core/handlers/base.py\nindex 5df17b3..4c1a55f 100644\n--- a/django/core/handlers/base.py\n+++ b/django/core/handlers/base.py\n@@ -85,6 +85,8 @@ class BaseHandler:\n         response._resource_closers.append(request.close)\n         if response.status_code >= 400:\n             await sync_to_async(log_response, thread_sensitive=False)('%s: %s', response.reason_phrase, request.path, response=response, request=request)\n+        elif isinstance(response, HttpResponseNotAllowed):\n+            log_response('Method Not Allowed (405): %s', request.path, response=response, request=request)\n         return response\n     def _get_response(self, request):\n         response = None\n", "normalized_occurrence": 1}
