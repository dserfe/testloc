{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-23913", "model_patch": "diff --git a/lib/matplotlib/legend.py b/lib/matplotlib/legend.py\nindex c34b2ad..81318e1 100644\n--- a/lib/matplotlib/legend.py\n+++ b/lib/matplotlib/legend.py\n@@ -341,6 +341,7 @@ class Legend(Artist):\n         handler_map=None,\n         title_fontproperties=None,  # properties for the legend title\n         alignment=\"center\",       # control the alignment within the legend box\n+        draggable=False,    # whether the legend can be dragged\n         *,\n         ncol=1  # synonym for ncols (backward compatibility)\n     ):\n@@ -372,6 +373,8 @@ class Legend(Artist):\n         The legend location can be specified by setting *loc* with a tuple of\n         2 floats, which is interpreted as the lower-left corner of the legend\n         in the normalized axes coordinate.\n+\n+        The legend can be made draggable by setting *draggable* to True.\n         \"\"\"\n         # local import only to avoid circularity\n         from matplotlib.axes import Axes\n@@ -574,6 +577,10 @@ class Legend(Artist):\n         else:\n             raise ValueError(f\"Invalid labelcolor: {labelcolor!r}\")\n \n+        # Enable dragging if requested\n+        if draggable:\n+            self.set_draggable(True)\n+\n     def _set_artist_props(self, a):\n         \"\"\"\n         Set the boilerplate props for artists added to axes.\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/legend.py b/lib/matplotlib/legend.py\nindex 2840dfb..6322d21 100644\n--- a/lib/matplotlib/legend.py\n+++ b/lib/matplotlib/legend.py\n@@ -45,7 +45,7 @@ class Legend(Artist):\n         return 'Legend'\n     @_api.make_keyword_only('3.6', 'loc')\n     @_docstring.dedent_interpd\n-    def __init__(self, parent, handles, labels, loc=None, numpoints=None, markerscale=None, markerfirst=True, scatterpoints=None, scatteryoffsets=None, prop=None, fontsize=None, labelcolor=None, borderpad=None, labelspacing=None, handlelength=None, handleheight=None, handletextpad=None, borderaxespad=None, columnspacing=None, ncols=1, mode=None, fancybox=None, shadow=None, title=None, title_fontsize=None, framealpha=None, edgecolor=None, facecolor=None, bbox_to_anchor=None, bbox_transform=None, frameon=None, handler_map=None, title_fontproperties=None, alignment='center', *, ncol=1):\n+    def __init__(self, parent, handles, labels, loc=None, numpoints=None, markerscale=None, markerfirst=True, scatterpoints=None, scatteryoffsets=None, prop=None, fontsize=None, labelcolor=None, borderpad=None, labelspacing=None, handlelength=None, handleheight=None, handletextpad=None, borderaxespad=None, columnspacing=None, ncols=1, mode=None, fancybox=None, shadow=None, title=None, title_fontsize=None, framealpha=None, edgecolor=None, facecolor=None, bbox_to_anchor=None, bbox_transform=None, frameon=None, handler_map=None, title_fontproperties=None, alignment='center', draggable=False, *, ncol=1):\n         from matplotlib.axes import Axes\n         from matplotlib.figure import FigureBase\n         super().__init__()\n@@ -174,6 +174,8 @@ class Legend(Artist):\n                 text.set_color(color)\n         else:\n             raise ValueError(f'Invalid labelcolor: {labelcolor!r}')\n+        if draggable:\n+            self.set_draggable(True)\n     def _set_artist_props(self, a):\n         a.set_figure(self.figure)\n         if self.isaxes:\n", "normalized_occurrence": 2}
