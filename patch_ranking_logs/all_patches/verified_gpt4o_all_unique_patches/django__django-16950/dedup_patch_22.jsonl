{"model_name_or_path": "agentless", "instance_id": "django__django-16950", "model_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex f9e6a6e..b5b767d 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -224,6 +224,10 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n                 kwargs = {**copy.deepcopy(self.formfield_overrides[klass]), **kwargs}\n                 return db_field.formfield(**kwargs)\n \n+        # Ensure UUIDFields get their default value applied\n+        if isinstance(db_field, models.UUIDField) and db_field.default:\n+            kwargs['initial'] = db_field.default\n+\n         # For any other type of field, just call its formfield() method.\n         return db_field.formfield(**kwargs)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 7be1ef7..32248af 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -100,6 +100,8 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n             if klass in self.formfield_overrides:\n                 kwargs = {**copy.deepcopy(self.formfield_overrides[klass]), **kwargs}\n                 return db_field.formfield(**kwargs)\n+        if isinstance(db_field, models.UUIDField) and db_field.default:\n+            kwargs['initial'] = db_field.default\n         return db_field.formfield(**kwargs)\n     def formfield_for_choice_field(self, db_field, request, **kwargs):\n         if db_field.name in self.radio_fields:\n", "normalized_occurrence": 1}
