{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-24661", "model_patch": "diff --git a/sympy/parsing/sympy_parser.py b/sympy/parsing/sympy_parser.py\nindex 2ec3cf6..c0bc87e 100644\n--- a/sympy/parsing/sympy_parser.py\n+++ b/sympy/parsing/sympy_parser.py\n@@ -1075,7 +1075,7 @@ def parse_expr(s: str, local_dict: Optional[DICT] = None,\n         code = compile(evaluateFalse(code), '<string>', 'eval')\n \n     try:\n-        rv = eval_expr(code, local_dict, global_dict)\n+        rv = eval_expr(code, local_dict, global_dict, evaluate=evaluate)\n         # restore neutral definitions for names\n         for i in local_dict.pop(null, ()):\n             local_dict[i] = null\n", "occurrence": 2, "normalized_patch": "diff --git a/sympy/parsing/sympy_parser.py b/sympy/parsing/sympy_parser.py\nindex 0c06cf1..03ff862 100644\n--- a/sympy/parsing/sympy_parser.py\n+++ b/sympy/parsing/sympy_parser.py\n@@ -513,7 +513,7 @@ def parse_expr(s: str, local_dict: Optional[DICT]=None, transformations: tUnion[\n     if not evaluate:\n         code = compile(evaluateFalse(code), '<string>', 'eval')\n     try:\n-        rv = eval_expr(code, local_dict, global_dict)\n+        rv = eval_expr(code, local_dict, global_dict, evaluate=evaluate)\n         for i in local_dict.pop(null, ()):\n             local_dict[i] = null\n         return rv\n", "normalized_occurrence": 2}
