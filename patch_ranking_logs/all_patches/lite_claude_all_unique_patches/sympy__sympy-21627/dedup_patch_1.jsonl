{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-21627", "model_patch": "diff --git a/sympy/functions/elementary/hyperbolic.py b/sympy/functions/elementary/hyperbolic.py\nindex db125b2..0b97f62 100644\n--- a/sympy/functions/elementary/hyperbolic.py\n+++ b/sympy/functions/elementary/hyperbolic.py\n@@ -265,9 +265,23 @@ class sinh(HyperbolicFunction):\n         return arg.is_finite\n \n     def _eval_is_zero(self):\n+        from sympy import pi, I\n         arg = self.args[0]\n-        if arg.is_zero:\n-            return True\n+        # cosh(x) is zero only at complex values (2n+1)*pi*I/2\n+        if arg.is_real:\n+            return False\n+        # Try to identify if arg = (2n+1)*pi*I/2\n+        if arg.is_imaginary:\n+            imarg = -I * arg\n+            half_period = pi/2\n+            # Check if arg/(pi*I/2) is an odd integer\n+            n = imarg/half_period\n+            if n.is_integer:\n+                return n.is_odd\n+        return None\n+\n+    def _eval_is_zero(self):\n+        return None\n \n \n class cosh(HyperbolicFunction):\n@@ -499,6 +513,22 @@ class cosh(HyperbolicFunction):\n         arg = self.args[0]\n         return arg.is_finite\n \n+    def _eval_is_zero(self):\n+        from sympy import pi, I\n+        arg = self.args[0]\n+        # cosh(x) is zero only at complex values (2n+1)*pi*I/2\n+        if arg.is_real:\n+            return False\n+        # Try to identify if arg = (2n+1)*pi*I/2\n+        if arg.is_imaginary:\n+            imarg = -I * arg\n+            half_period = pi/2\n+            # Check if arg/(pi*I/2) is an odd integer\n+            n = imarg/half_period\n+            if n.is_integer:\n+                return n.is_odd\n+        return None\n+\n \n class tanh(HyperbolicFunction):\n     r\"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/hyperbolic.py b/sympy/functions/elementary/hyperbolic.py\nindex f81ffb5..0a81966 100644\n--- a/sympy/functions/elementary/hyperbolic.py\n+++ b/sympy/functions/elementary/hyperbolic.py\n@@ -158,9 +158,19 @@ class sinh(HyperbolicFunction):\n         arg = self.args[0]\n         return arg.is_finite\n     def _eval_is_zero(self):\n+        from sympy import pi, I\n         arg = self.args[0]\n-        if arg.is_zero:\n-            return True\n+        if arg.is_real:\n+            return False\n+        if arg.is_imaginary:\n+            imarg = -I * arg\n+            half_period = pi / 2\n+            n = imarg / half_period\n+            if n.is_integer:\n+                return n.is_odd\n+        return None\n+    def _eval_is_zero(self):\n+        return None\n class cosh(HyperbolicFunction):\n     def fdiff(self, argindex=1):\n         if argindex == 1:\n@@ -301,6 +311,18 @@ class cosh(HyperbolicFunction):\n     def _eval_is_finite(self):\n         arg = self.args[0]\n         return arg.is_finite\n+    def _eval_is_zero(self):\n+        from sympy import pi, I\n+        arg = self.args[0]\n+        if arg.is_real:\n+            return False\n+        if arg.is_imaginary:\n+            imarg = -I * arg\n+            half_period = pi / 2\n+            n = imarg / half_period\n+            if n.is_integer:\n+                return n.is_odd\n+        return None\n class tanh(HyperbolicFunction):\n     def fdiff(self, argindex=1):\n         if argindex == 1:\n", "normalized_occurrence": 1}
