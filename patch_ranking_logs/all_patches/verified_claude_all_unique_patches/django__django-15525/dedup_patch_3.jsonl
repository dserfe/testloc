{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15525", "model_patch": "diff --git a/django/core/serializers/base.py b/django/core/serializers/base.py\nindex e82a744..22bde9b 100644\n--- a/django/core/serializers/base.py\n+++ b/django/core/serializers/base.py\n@@ -336,7 +336,20 @@ def build_instance(Model, data, db):\n         and hasattr(default_manager, \"get_by_natural_key\")\n         and hasattr(Model, \"natural_key\")\n     ):\n-        natural_key = Model(**data).natural_key()\n+        if hasattr(Model, \"natural_key_fields\"):\n+            natural_key = tuple(data[field] for field in Model.natural_key_fields())\n+        else:\n+            # Fall back to constructing the natural key from foreign key fields\n+            natural_key = []\n+            for field in Model._meta.fields:\n+                if field.name in data:\n+                    if hasattr(field, \"get_by_natural_key\"):\n+                        # Handle foreign key natural keys\n+                        if isinstance(data[field.name], (list, tuple)):\n+                            natural_key.extend(data[field.name])\n+                    else:\n+                        natural_key.append(data[field.name])\n+            natural_key = tuple(natural_key)\n         try:\n             data[Model._meta.pk.attname] = Model._meta.pk.to_python(\n                 default_manager.db_manager(db).get_by_natural_key(*natural_key).pk\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/serializers/base.py b/django/core/serializers/base.py\nindex 65e3dcb..4bc8ab2 100644\n--- a/django/core/serializers/base.py\n+++ b/django/core/serializers/base.py\n@@ -144,7 +144,18 @@ def build_instance(Model, data, db):\n     default_manager = Model._meta.default_manager\n     pk = data.get(Model._meta.pk.attname)\n     if pk is None and hasattr(default_manager, 'get_by_natural_key') and hasattr(Model, 'natural_key'):\n-        natural_key = Model(**data).natural_key()\n+        if hasattr(Model, 'natural_key_fields'):\n+            natural_key = tuple((data[field] for field in Model.natural_key_fields()))\n+        else:\n+            natural_key = []\n+            for field in Model._meta.fields:\n+                if field.name in data:\n+                    if hasattr(field, 'get_by_natural_key'):\n+                        if isinstance(data[field.name], (list, tuple)):\n+                            natural_key.extend(data[field.name])\n+                    else:\n+                        natural_key.append(data[field.name])\n+            natural_key = tuple(natural_key)\n         try:\n             data[Model._meta.pk.attname] = Model._meta.pk.to_python(default_manager.db_manager(db).get_by_natural_key(*natural_key).pk)\n         except Model.DoesNotExist:\n", "normalized_occurrence": 1}
