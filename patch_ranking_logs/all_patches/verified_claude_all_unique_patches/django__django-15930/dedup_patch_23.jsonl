{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15930", "model_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 47df1a9..d7c2ea0 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -1298,7 +1298,14 @@ class When(Expression):\n         connection.ops.check_expression_support(self)\n         template_params = extra_context\n         sql_params = []\n-        condition_sql, condition_params = compiler.compile(self.condition)\n+        \n+        # Handle negated empty Q objects by converting them to TRUE\n+        if isinstance(self.condition, Q) and not self.condition.children and self.condition.negated:\n+            condition_sql = \"TRUE\"\n+            condition_params = []\n+        else:\n+            condition_sql, condition_params = compiler.compile(self.condition)\n+            \n         template_params[\"condition\"] = condition_sql\n         sql_params.extend(condition_params)\n         result_sql, result_params = compiler.compile(self.result)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 1b947ba..aa2f15e 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -659,7 +659,11 @@ class When(Expression):\n         connection.ops.check_expression_support(self)\n         template_params = extra_context\n         sql_params = []\n-        condition_sql, condition_params = compiler.compile(self.condition)\n+        if isinstance(self.condition, Q) and (not self.condition.children) and self.condition.negated:\n+            condition_sql = 'TRUE'\n+            condition_params = []\n+        else:\n+            condition_sql, condition_params = compiler.compile(self.condition)\n         template_params['condition'] = condition_sql\n         sql_params.extend(condition_params)\n         result_sql, result_params = compiler.compile(self.result)\n", "normalized_occurrence": 5}
