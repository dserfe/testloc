{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-10449", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 671dde0..04584a0 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -61,9 +61,15 @@ def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element\n             if app.config.autodoc_typehints_description_target == \"all\":\n                 modify_field_list(field_list, annotations[fullname])\n             elif app.config.autodoc_typehints_description_target == \"documented_params\":\n-                augment_descriptions_with_types(\n-                    field_list, annotations[fullname], force_rtype=True\n-                )\n+                # Avoid adding return type for class constructors\n+                if objtype == 'class' and '__init__' in fullname:\n+                    augment_descriptions_with_types(\n+                        field_list, annotations[fullname], force_rtype=False\n+                    )\n+                else:\n+                    augment_descriptions_with_types(\n+                        field_list, annotations[fullname], force_rtype=True\n+                    )\n             else:\n                 augment_descriptions_with_types(\n                     field_list, annotations[fullname], force_rtype=False\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 3ffed84..130ec9a 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -46,7 +46,10 @@ def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element\n             if app.config.autodoc_typehints_description_target == 'all':\n                 modify_field_list(field_list, annotations[fullname])\n             elif app.config.autodoc_typehints_description_target == 'documented_params':\n-                augment_descriptions_with_types(field_list, annotations[fullname], force_rtype=True)\n+                if objtype == 'class' and '__init__' in fullname:\n+                    augment_descriptions_with_types(field_list, annotations[fullname], force_rtype=False)\n+                else:\n+                    augment_descriptions_with_types(field_list, annotations[fullname], force_rtype=True)\n             else:\n                 augment_descriptions_with_types(field_list, annotations[fullname], force_rtype=False)\n def insert_field_list(node: Element) -> nodes.field_list:\n", "normalized_occurrence": 1}
