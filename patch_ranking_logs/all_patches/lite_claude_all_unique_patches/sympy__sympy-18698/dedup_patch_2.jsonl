{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-18698", "model_patch": "diff --git a/sympy/polys/sqfreetools.py b/sympy/polys/sqfreetools.py\nindex fbdbcb2..14526ea 100644\n--- a/sympy/polys/sqfreetools.py\n+++ b/sympy/polys/sqfreetools.py\n@@ -420,6 +420,15 @@ def dmp_sqf_list(f, u, K, all=False):\n \n         i += 1\n \n+    # Combine factors with equal multiplicities\n+    combined = {}\n+    for factor, mult in result:\n+        if mult in combined:\n+            combined[mult] = dmp_mul(combined[mult], factor, u, K)\n+        else:\n+            combined[mult] = factor\n+\n+    result = [(factor, mult) for mult, factor in sorted(combined.items())]\n     return coeff, result\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/sqfreetools.py b/sympy/polys/sqfreetools.py\nindex 09fb2b6..5acb10d 100644\n--- a/sympy/polys/sqfreetools.py\n+++ b/sympy/polys/sqfreetools.py\n@@ -154,6 +154,13 @@ def dmp_sqf_list(f, u, K, all=False):\n         if all or dmp_degree(g, u) > 0:\n             result.append((g, i))\n         i += 1\n+    combined = {}\n+    for factor, mult in result:\n+        if mult in combined:\n+            combined[mult] = dmp_mul(combined[mult], factor, u, K)\n+        else:\n+            combined[mult] = factor\n+    result = [(factor, mult) for mult, factor in sorted(combined.items())]\n     return (coeff, result)\n def dmp_sqf_list_include(f, u, K, all=False):\n     if not u:\n", "normalized_occurrence": 2}
