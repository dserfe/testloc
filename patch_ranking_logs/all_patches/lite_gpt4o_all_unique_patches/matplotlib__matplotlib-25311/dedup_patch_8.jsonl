{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25311", "model_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 08e0049..b526187 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -3174,6 +3174,14 @@ None}, default: None\n         from matplotlib import _pylab_helpers\n         if self.canvas.manager in _pylab_helpers.Gcf.figs.values():\n             state['_restore_to_pylab'] = True\n+        # Handle draggable legend and annotations before returning the state.\n+        for ax in self.axes:\n+            if ax.get_legend() and ax.get_legend().get_draggable():\n+                ax.get_legend().set_draggable(False)\n+            for annotation in ax.texts:\n+                if hasattr(annotation, 'draggable') and annotation.draggable:\n+                    annotation.draggable = False\n+\n         return state\n \n     def __setstate__(self, state):\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 7796fb8..ca0889f 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -951,6 +951,12 @@ class Figure(FigureBase):\n         from matplotlib import _pylab_helpers\n         if self.canvas.manager in _pylab_helpers.Gcf.figs.values():\n             state['_restore_to_pylab'] = True\n+        for ax in self.axes:\n+            if ax.get_legend() and ax.get_legend().get_draggable():\n+                ax.get_legend().set_draggable(False)\n+            for annotation in ax.texts:\n+                if hasattr(annotation, 'draggable') and annotation.draggable:\n+                    annotation.draggable = False\n         return state\n     def __setstate__(self, state):\n         version = state.pop('__mpl_version__')\n", "normalized_occurrence": 1}
