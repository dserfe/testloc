{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13915", "model_patch": "diff --git a/sympy/core/basic.py b/sympy/core/basic.py\nindex 0977e81..53f2f6d 100644\n--- a/sympy/core/basic.py\n+++ b/sympy/core/basic.py\n@@ -917,7 +917,11 @@ class Basic(with_metaclass(ManagedProperties)):\n         else:\n             rv = self\n             for old, new in sequence:\n-                rv = rv._subs(old, new, **kwargs)\n+                # Check if substitution results in undefined expression\n+                try:\n+                    rv = rv._subs(old, new, **kwargs)\n+                except ZeroDivisionError:\n+                    rv = rv.limit(old, new)\n                 if not isinstance(rv, Basic):\n                     break\n             return rv\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/basic.py b/sympy/core/basic.py\nindex 782db85..2ca1871 100644\n--- a/sympy/core/basic.py\n+++ b/sympy/core/basic.py\n@@ -326,7 +326,10 @@ class Basic(with_metaclass(ManagedProperties)):\n         else:\n             rv = self\n             for old, new in sequence:\n-                rv = rv._subs(old, new, **kwargs)\n+                try:\n+                    rv = rv._subs(old, new, **kwargs)\n+                except ZeroDivisionError:\n+                    rv = rv.limit(old, new)\n                 if not isinstance(rv, Basic):\n                     break\n             return rv\n", "normalized_occurrence": 1}
