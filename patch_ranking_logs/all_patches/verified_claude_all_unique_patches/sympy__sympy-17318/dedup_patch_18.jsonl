{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-17318", "model_patch": "diff --git a/sympy/simplify/sqrtdenest.py b/sympy/simplify/sqrtdenest.py\nindex ea8922d..f672307 100644\n--- a/sympy/simplify/sqrtdenest.py\n+++ b/sympy/simplify/sqrtdenest.py\n@@ -156,7 +156,7 @@ def _sqrt_match(p):\n         res = (p, S.Zero, S.Zero)\n     elif p.is_Add:\n         pargs = sorted(p.args, key=default_sort_key)\n-        if all((x**2).is_Rational for x in pargs):\n+        if all((x**2).is_Rational and not (x**2).has(I) for x in pargs):\n             r, b, a = split_surds(p)\n             res = a, b, r\n             return list(res)\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/sqrtdenest.py b/sympy/simplify/sqrtdenest.py\nindex d4a8177..f6e5133 100644\n--- a/sympy/simplify/sqrtdenest.py\n+++ b/sympy/simplify/sqrtdenest.py\n@@ -56,7 +56,7 @@ def _sqrt_match(p):\n         res = (p, S.Zero, S.Zero)\n     elif p.is_Add:\n         pargs = sorted(p.args, key=default_sort_key)\n-        if all(((x ** 2).is_Rational for x in pargs)):\n+        if all(((x ** 2).is_Rational and (not (x ** 2).has(I)) for x in pargs)):\n             r, b, a = split_surds(p)\n             res = (a, b, r)\n             return list(res)\n", "normalized_occurrence": 1}
