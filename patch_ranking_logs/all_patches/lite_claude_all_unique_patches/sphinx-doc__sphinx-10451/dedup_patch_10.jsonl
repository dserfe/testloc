{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-10451", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex c6bab1b..76e6683 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -115,6 +115,18 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str],\n         if name == 'return':\n             continue\n \n+        # Skip adding duplicate fields for *args and **kwargs if they already exist\n+        is_special_arg = name in ('*args', '**kwargs')\n+        if is_special_arg:\n+            has_field = False\n+            for field in fields:\n+                field_name = field[0].astext()\n+                if name in field_name:\n+                    has_field = True\n+                    break\n+            if has_field:\n+                continue\n+\n         arg = arguments.get(name, {})\n         if not arg.get('type'):\n             field = nodes.field()\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 5da2ea8..79fd41a 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -85,6 +85,16 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str], suppr\n     for name, annotation in annotations.items():\n         if name == 'return':\n             continue\n+        is_special_arg = name in ('*args', '**kwargs')\n+        if is_special_arg:\n+            has_field = False\n+            for field in fields:\n+                field_name = field[0].astext()\n+                if name in field_name:\n+                    has_field = True\n+                    break\n+            if has_field:\n+                continue\n         arg = arguments.get(name, {})\n         if not arg.get('type'):\n             field = nodes.field()\n", "normalized_occurrence": 1}
