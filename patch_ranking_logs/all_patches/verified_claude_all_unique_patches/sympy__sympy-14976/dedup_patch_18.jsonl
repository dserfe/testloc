{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-14976", "model_patch": "diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py\nindex 48d6783..e2619c5 100644\n--- a/sympy/utilities/lambdify.py\n+++ b/sympy/utilities/lambdify.py\n@@ -398,6 +398,11 @@ def lambdify(args, expr, modules=None, printer=None, use_imps=True,\n     if printer is None:\n         if _module_present('mpmath', namespaces):\n             from sympy.printing.pycode import MpmathPrinter as Printer\n+            # Ensure rationals are converted to high-precision mpmath objects\n+            class MpmathRationalPrinter(Printer):\n+                def _print_Rational(self, expr):\n+                    return f'mpmath.mpf({expr.p}) / mpmath.mpf({expr.q})'\n+            Printer = MpmathRationalPrinter\n         elif _module_present('numpy', namespaces):\n             from sympy.printing.pycode import NumPyPrinter as Printer\n         elif _module_present('numexpr', namespaces):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py\nindex 9997e01..73311c1 100644\n--- a/sympy/utilities/lambdify.py\n+++ b/sympy/utilities/lambdify.py\n@@ -88,6 +88,10 @@ def lambdify(args, expr, modules=None, printer=None, use_imps=True, dummify=Fals\n     if printer is None:\n         if _module_present('mpmath', namespaces):\n             from sympy.printing.pycode import MpmathPrinter as Printer\n+            class MpmathRationalPrinter(Printer):\n+                def _print_Rational(self, expr):\n+                    return f'mpmath.mpf({expr.p}) / mpmath.mpf({expr.q})'\n+            Printer = MpmathRationalPrinter\n         elif _module_present('numpy', namespaces):\n             from sympy.printing.pycode import NumPyPrinter as Printer\n         elif _module_present('numexpr', namespaces):\n", "normalized_occurrence": 1}
