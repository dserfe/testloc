{"model_name_or_path": "agentless", "instance_id": "django__django-11265", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 1309ca5..7567b13 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1661,7 +1661,11 @@ class Query(BaseExpression):\n         saner null handling, and is easier for the backend's optimizer to\n         handle.\n         \"\"\"\n-        filter_lhs, filter_rhs = filter_expr\n+        if isinstance(filter_expr[0], str) and filter_expr[0] in self._filtered_relations:\n+            filtered_relation = self._filtered_relations[filter_expr[0]]\n+            filter_lhs, filter_rhs = (filtered_relation.relation_name, filter_expr[1])\n+        else:\n+            filter_lhs, filter_rhs = filter_expr\n         if isinstance(filter_rhs, F):\n             filter_expr = (filter_lhs, OuterRef(filter_rhs.name))\n         # Generate the inner query.\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 60a9579..038a811 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -885,7 +885,11 @@ class Query(BaseExpression):\n             col = _get_col(targets[0], join_info.targets[0], join_list[-1], simple_col)\n             return col\n     def split_exclude(self, filter_expr, can_reuse, names_with_path):\n-        filter_lhs, filter_rhs = filter_expr\n+        if isinstance(filter_expr[0], str) and filter_expr[0] in self._filtered_relations:\n+            filtered_relation = self._filtered_relations[filter_expr[0]]\n+            filter_lhs, filter_rhs = (filtered_relation.relation_name, filter_expr[1])\n+        else:\n+            filter_lhs, filter_rhs = filter_expr\n         if isinstance(filter_rhs, F):\n             filter_expr = (filter_lhs, OuterRef(filter_rhs.name))\n         query = Query(self.model)\n", "normalized_occurrence": 1}
