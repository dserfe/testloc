{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-8638", "model_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex ec7a051..3d77250 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -782,6 +782,10 @@ class PyAttribute(PyObject):\n     def handle_signature(self, sig: str, signode: desc_signature) -> Tuple[str, str]:\n         fullname, prefix = super().handle_signature(sig, signode)\n \n+        # Add a target node with fully qualified name to prevent cross-linking\n+        signode['ids'].append(fullname)\n+        signode['names'].append(fullname)\n+\n         typ = self.options.get('type')\n         if typ:\n             annotations = _parse_annotation(typ, self.env)\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex 06b9e34..c744b71 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -480,6 +480,8 @@ class PyAttribute(PyObject):\n     option_spec.update({'type': directives.unchanged, 'value': directives.unchanged})\n     def handle_signature(self, sig: str, signode: desc_signature) -> Tuple[str, str]:\n         fullname, prefix = super().handle_signature(sig, signode)\n+        signode['ids'].append(fullname)\n+        signode['names'].append(fullname)\n         typ = self.options.get('type')\n         if typ:\n             annotations = _parse_annotation(typ, self.env)\n", "normalized_occurrence": 1}
