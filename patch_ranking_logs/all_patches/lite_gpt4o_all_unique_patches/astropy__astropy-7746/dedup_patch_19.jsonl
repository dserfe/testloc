{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-7746", "model_patch": "diff --git a/astropy/wcs/wcs.py b/astropy/wcs/wcs.py\nindex 369cdd2..7648fa7 100644\n--- a/astropy/wcs/wcs.py\n+++ b/astropy/wcs/wcs.py\n@@ -1243,6 +1243,8 @@ reduce these to 2 dimensions using the naxis kwarg.\n             return result\n \n         if len(args) == 2:\n+            if len(args[0]) == 0:\n+                return np.array([]), np.array([])\n             try:\n                 xy, origin = args\n                 xy = np.asarray(xy)\n@@ -1256,6 +1258,8 @@ reduce these to 2 dimensions using the naxis kwarg.\n             return _return_single_array(xy, origin)\n \n         elif len(args) == self.naxis + 1:\n+            if all(len(axis) == 0 for axis in args[:-1]):\n+                return [np.array([]) for _ in range(self.naxis)]\n             axes = args[:-1]\n             origin = args[-1]\n             try:\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/wcs/wcs.py b/astropy/wcs/wcs.py\nindex 3d9c35a..6cf8ee9 100644\n--- a/astropy/wcs/wcs.py\n+++ b/astropy/wcs/wcs.py\n@@ -616,6 +616,8 @@ class WCS(WCSBase):\n                 result = self._normalize_sky(result)\n             return result\n         if len(args) == 2:\n+            if len(args[0]) == 0:\n+                return (np.array([]), np.array([]))\n             try:\n                 xy, origin = args\n                 xy = np.asarray(xy)\n@@ -626,6 +628,8 @@ class WCS(WCSBase):\n                 return _return_list_of_arrays([xy], origin)\n             return _return_single_array(xy, origin)\n         elif len(args) == self.naxis + 1:\n+            if all((len(axis) == 0 for axis in args[:-1])):\n+                return [np.array([]) for _ in range(self.naxis)]\n             axes = args[:-1]\n             origin = args[-1]\n             try:\n", "normalized_occurrence": 1}
