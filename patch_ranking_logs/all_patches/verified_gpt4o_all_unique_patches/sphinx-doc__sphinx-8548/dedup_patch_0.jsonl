{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8548", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 60d49fe..09bf32c 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -695,7 +695,8 @@ class Documenter:\n             # if isattr is True, the member is documented as an attribute\n             if member is INSTANCEATTR:\n                 isattr = True\n-            else:\n+            elif is_filtered_inherited_member(membername):\n+                keep = has_doc or self.options.undoc_members\n                 isattr = False\n \n             doc = getdoc(member, self.get_attr, self.config.autodoc_inherit_docstrings,\n@@ -725,7 +726,8 @@ class Documenter:\n             elif 'public' in metadata:\n                 # consider a member public if docstring has \"public\" metadata\n                 isprivate = False\n-            else:\n+            elif is_filtered_inherited_member(membername):\n+                keep = has_doc or self.options.undoc_members\n                 isprivate = membername.startswith('_')\n \n             keep = False\n@@ -756,7 +758,7 @@ class Documenter:\n                     # keep documented attributes\n                     keep = True\n                 isattr = True\n-            elif want_all and isprivate:\n+            elif want_all and isprivate and not is_filtered_inherited_member(membername):\n                 if has_doc or self.options.undoc_members:\n                     if self.options.private_members is None:\n                         keep = False\n@@ -766,7 +768,8 @@ class Documenter:\n                         keep = membername in self.options.private_members\n                 else:\n                     keep = False\n-            else:\n+            elif is_filtered_inherited_member(membername):\n+                keep = has_doc or self.options.undoc_members\n                 if self.options.members is ALL and is_filtered_inherited_member(membername):\n                     keep = False\n                 else:\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex c754f31..ef29c69 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -360,7 +360,8 @@ class Documenter:\n             membername, member = obj\n             if member is INSTANCEATTR:\n                 isattr = True\n-            else:\n+            elif is_filtered_inherited_member(membername):\n+                keep = has_doc or self.options.undoc_members\n                 isattr = False\n             doc = getdoc(member, self.get_attr, self.config.autodoc_inherit_docstrings, self.parent, self.object_name)\n             if not isinstance(doc, str):\n@@ -378,7 +379,8 @@ class Documenter:\n                 isprivate = True\n             elif 'public' in metadata:\n                 isprivate = False\n-            else:\n+            elif is_filtered_inherited_member(membername):\n+                keep = has_doc or self.options.undoc_members\n                 isprivate = membername.startswith('_')\n             keep = False\n             if safe_getattr(member, '__sphinx_mock__', None) is not None:\n@@ -404,7 +406,7 @@ class Documenter:\n                 else:\n                     keep = True\n                 isattr = True\n-            elif want_all and isprivate:\n+            elif want_all and isprivate and (not is_filtered_inherited_member(membername)):\n                 if has_doc or self.options.undoc_members:\n                     if self.options.private_members is None:\n                         keep = False\n@@ -414,10 +416,12 @@ class Documenter:\n                         keep = membername in self.options.private_members\n                 else:\n                     keep = False\n-            elif self.options.members is ALL and is_filtered_inherited_member(membername):\n-                keep = False\n-            else:\n+            elif is_filtered_inherited_member(membername):\n                 keep = has_doc or self.options.undoc_members\n+                if self.options.members is ALL and is_filtered_inherited_member(membername):\n+                    keep = False\n+                else:\n+                    keep = has_doc or self.options.undoc_members\n             if isinstance(obj, ObjectMember) and obj.skipped:\n                 keep = False\n             if self.env.app:\n", "normalized_occurrence": 1}
