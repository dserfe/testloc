{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-25775", "model_patch": "diff --git a/lib/matplotlib/text.py b/lib/matplotlib/text.py\nindex c2b18d4..bfd9d4b 100644\n--- a/lib/matplotlib/text.py\n+++ b/lib/matplotlib/text.py\n@@ -171,6 +171,7 @@ class Text(Artist):\n         self.set_text(text)\n         self.set_color(\n             color if color is not None else mpl.rcParams[\"text.color\"])\n+        self._antialiased = mpl.rcParams[\"text.antialiased\"]\n         self.set_fontproperties(fontproperties)\n         self.set_usetex(usetex)\n         self.set_parse_math(parse_math if parse_math is not None else\n@@ -774,6 +775,21 @@ class Text(Artist):\n         \"\"\"Return the color of the text.\"\"\"\n         return self._color\n \n+    def get_antialiased(self):\n+        \"\"\"Return whether the text should be drawn with antialiased rendering.\"\"\"\n+        return self._antialiased\n+\n+    def set_antialiased(self, aa):\n+        \"\"\"\n+        Set whether to use antialiased rendering.\n+\n+        Parameters\n+        ----------\n+        aa : bool\n+        \"\"\"\n+        self._antialiased = aa\n+        self.stale = True\n+\n     def get_fontproperties(self):\n         \"\"\"Return the `.font_manager.FontProperties`.\"\"\"\n         return self._fontproperties\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/text.py b/lib/matplotlib/text.py\nindex 5c973cb..853fe80 100644\n--- a/lib/matplotlib/text.py\n+++ b/lib/matplotlib/text.py\n@@ -50,6 +50,7 @@ class Text(Artist):\n     def _reset_visual_defaults(self, text='', color=None, fontproperties=None, usetex=None, parse_math=None, wrap=False, verticalalignment='baseline', horizontalalignment='left', multialignment=None, rotation=None, transform_rotates_text=False, linespacing=None, rotation_mode=None):\n         self.set_text(text)\n         self.set_color(color if color is not None else mpl.rcParams['text.color'])\n+        self._antialiased = mpl.rcParams['text.antialiased']\n         self.set_fontproperties(fontproperties)\n         self.set_usetex(usetex)\n         self.set_parse_math(parse_math if parse_math is not None else mpl.rcParams['text.parse_math'])\n@@ -393,6 +394,11 @@ class Text(Artist):\n         self.stale = False\n     def get_color(self):\n         return self._color\n+    def get_antialiased(self):\n+        return self._antialiased\n+    def set_antialiased(self, aa):\n+        self._antialiased = aa\n+        self.stale = True\n     def get_fontproperties(self):\n         return self._fontproperties\n     def get_fontfamily(self):\n", "normalized_occurrence": 1}
