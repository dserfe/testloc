{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9591", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 51811ca..36b994b 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -45,10 +45,14 @@ def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element\n \n     try:\n         signature = cast(addnodes.desc_signature, contentnode.parent[0])\n-        if signature['module']:\n-            fullname = '.'.join([signature['module'], signature['fullname']])\n+        if 'module' in signature:\n+            if signature['module']:\n+                fullname = '.'.join([signature['module'], signature['fullname']])\n+            else:\n+                fullname = signature['fullname']\n         else:\n-            fullname = signature['fullname']\n+            # Handle properties\n+            fullname = signature.get('fullname', '')\n     except KeyError:\n         # signature node does not have valid context info for the target object\n         return\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 03a755b..0d8ad75 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -26,10 +26,13 @@ def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element\n         return\n     try:\n         signature = cast(addnodes.desc_signature, contentnode.parent[0])\n-        if signature['module']:\n-            fullname = '.'.join([signature['module'], signature['fullname']])\n+        if 'module' in signature:\n+            if signature['module']:\n+                fullname = '.'.join([signature['module'], signature['fullname']])\n+            else:\n+                fullname = signature['fullname']\n         else:\n-            fullname = signature['fullname']\n+            fullname = signature.get('fullname', '')\n     except KeyError:\n         return\n     annotations = app.env.temp_data.get('annotations', {})\n", "normalized_occurrence": 1}
