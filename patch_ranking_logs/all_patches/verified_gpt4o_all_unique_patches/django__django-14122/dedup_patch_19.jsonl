{"model_name_or_path": "agentless", "instance_id": "django__django-14122", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 325a36c..96f7ea9 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -2035,7 +2035,15 @@ class Query(BaseExpression):\n                     alias = None\n                 group_by_cols = annotation.get_group_by_cols(alias=alias)\n                 group_by.extend(group_by_cols)\n-        self.group_by = tuple(group_by)\n+        # Exclude Meta.ordering fields from group_by\n+        ordering_fields = set()\n+        if self.model and hasattr(self.model._meta, 'ordering'):\n+            ordering_fields.update(self.model._meta.ordering)\n+        \n+        self.group_by = tuple(\n+            col for col in group_by\n+            if not hasattr(col, 'field') or col.field.name not in ordering_fields\n+        )\n \n     def add_select_related(self, fields):\n         \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 9216162..618a874 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1102,7 +1102,10 @@ class Query(BaseExpression):\n                     alias = None\n                 group_by_cols = annotation.get_group_by_cols(alias=alias)\n                 group_by.extend(group_by_cols)\n-        self.group_by = tuple(group_by)\n+        ordering_fields = set()\n+        if self.model and hasattr(self.model._meta, 'ordering'):\n+            ordering_fields.update(self.model._meta.ordering)\n+        self.group_by = tuple((col for col in group_by if not hasattr(col, 'field') or col.field.name not in ordering_fields))\n     def add_select_related(self, fields):\n         if isinstance(self.select_related, bool):\n             field_dict = {}\n", "normalized_occurrence": 1}
