{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9320", "model_patch": "diff --git a/sphinx/cmd/quickstart.py b/sphinx/cmd/quickstart.py\nindex 9978773..a607fe8 100644\n--- a/sphinx/cmd/quickstart.py\n+++ b/sphinx/cmd/quickstart.py\n@@ -95,7 +95,10 @@ def is_path(x: str) -> str:\n     return x\n \n \n-def allow_empty(x: str) -> str:\n+def allow_empty_path(x: str) -> str:\n+    if x == '':\n+        return x\n+    return is_path(x)\n     return x\n \n \n@@ -223,9 +226,9 @@ def ask_user(d: Dict) -> None:\n         print(__('sphinx-quickstart will not overwrite existing Sphinx projects.'))\n         print()\n         d['path'] = do_prompt(__('Please enter a new root path (or just Enter to exit)'),\n-                              '', is_path)\n+                              '', allow_empty_path)\n         if not d['path']:\n-            sys.exit(1)\n+            sys.exit(0)\n \n     if 'sep' not in d:\n         print()\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/cmd/quickstart.py b/sphinx/cmd/quickstart.py\nindex 05935f2..ef4e690 100644\n--- a/sphinx/cmd/quickstart.py\n+++ b/sphinx/cmd/quickstart.py\n@@ -57,7 +57,10 @@ def is_path(x: str) -> str:\n         raise ValidationError(__('Please enter a valid path name.'))\n     return x\n \n-def allow_empty(x: str) -> str:\n+def allow_empty_path(x: str) -> str:\n+    if x == '':\n+        return x\n+    return is_path(x)\n     return x\n \n def nonempty(x: str) -> str:\n@@ -168,9 +171,9 @@ def ask_user(d: Dict) -> None:\n         print(bold(__('Error: an existing conf.py has been found in the selected root path.')))\n         print(__('sphinx-quickstart will not overwrite existing Sphinx projects.'))\n         print()\n-        d['path'] = do_prompt(__('Please enter a new root path (or just Enter to exit)'), '', is_path)\n+        d['path'] = do_prompt(__('Please enter a new root path (or just Enter to exit)'), '', allow_empty_path)\n         if not d['path']:\n-            sys.exit(1)\n+            sys.exit(0)\n     if 'sep' not in d:\n         print()\n         print(__('You have two options for placing the build directory for Sphinx output.\\nEither, you use a directory \"_build\" within the root path, or you separate\\n\"source\" and \"build\" directories within the root path.'))\n", "normalized_occurrence": 1}
