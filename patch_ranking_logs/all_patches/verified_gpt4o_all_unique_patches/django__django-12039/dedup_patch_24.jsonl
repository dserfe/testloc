{"model_name_or_path": "agentless", "instance_id": "django__django-12039", "model_patch": "diff --git a/django/db/backends/ddl_references.py b/django/db/backends/ddl_references.py\nindex 1e5b986..d39320d 100644\n--- a/django/db/backends/ddl_references.py\n+++ b/django/db/backends/ddl_references.py\n@@ -84,7 +84,8 @@ class Columns(TableColumns):\n     def __str__(self):\n         def col_str(column, idx):\n             try:\n-                return self.quote_name(column) + self.col_suffixes[idx]\n+                suffix = self.col_suffixes[idx].strip()\n+                return self.quote_name(column) + (' ' + suffix if suffix else '')\n             except IndexError:\n                 return self.quote_name(column)\n \n@@ -112,9 +113,11 @@ class IndexColumns(Columns):\n         def col_str(column, idx):\n             # Index.__init__() guarantees that self.opclasses is the same\n             # length as self.columns.\n-            col = '{} {}'.format(self.quote_name(column), self.opclasses[idx])\n+            opclass = self.opclasses[idx].strip()\n+            col = '{} {}'.format(self.quote_name(column), opclass)\n             try:\n-                col = '{} {}'.format(col, self.col_suffixes[idx])\n+                suffix = self.col_suffixes[idx].strip()\n+                col = '{} {}'.format(col, suffix)\n             except IndexError:\n                 pass\n             return col\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/backends/ddl_references.py b/django/db/backends/ddl_references.py\nindex 285a76a..09619ea 100644\n--- a/django/db/backends/ddl_references.py\n+++ b/django/db/backends/ddl_references.py\n@@ -41,7 +41,8 @@ class Columns(TableColumns):\n     def __str__(self):\n         def col_str(column, idx):\n             try:\n-                return self.quote_name(column) + self.col_suffixes[idx]\n+                suffix = self.col_suffixes[idx].strip()\n+                return self.quote_name(column) + (' ' + suffix if suffix else '')\n             except IndexError:\n                 return self.quote_name(column)\n         return ', '.join((col_str(column, idx) for idx, column in enumerate(self.columns)))\n@@ -58,9 +59,11 @@ class IndexColumns(Columns):\n         super().__init__(table, columns, quote_name, col_suffixes)\n     def __str__(self):\n         def col_str(column, idx):\n-            col = '{} {}'.format(self.quote_name(column), self.opclasses[idx])\n+            opclass = self.opclasses[idx].strip()\n+            col = '{} {}'.format(self.quote_name(column), opclass)\n             try:\n-                col = '{} {}'.format(col, self.col_suffixes[idx])\n+                suffix = self.col_suffixes[idx].strip()\n+                col = '{} {}'.format(col, suffix)\n             except IndexError:\n                 pass\n             return col\n", "normalized_occurrence": 1}
