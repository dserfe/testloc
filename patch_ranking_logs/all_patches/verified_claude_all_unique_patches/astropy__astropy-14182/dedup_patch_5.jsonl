{"model_name_or_path": "agentless_claude", "instance_id": "astropy__astropy-14182", "model_patch": "diff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py\nindex 00bbbaf..5ffa398 100644\n--- a/astropy/io/ascii/rst.py\n+++ b/astropy/io/ascii/rst.py\n@@ -57,10 +57,29 @@ class RST(FixedWidth):\n     data_class = SimpleRSTData\n     header_class = SimpleRSTHeader\n \n-    def __init__(self):\n+    def __init__(self, header_rows=None):\n         super().__init__(delimiter_pad=None, bookend=False)\n+        self.header_rows = header_rows\n \n     def write(self, lines):\n         lines = super().write(lines)\n-        lines = [lines[1]] + lines + [lines[1]]\n-        return lines\n+        if self.header_rows:\n+            # Insert additional header rows after the column names\n+            header_line = lines[0]  # Save the header separator line\n+            header_lines = []\n+            for row_type in self.header_rows:\n+                if row_type == 'unit':\n+                    header_lines.append(self.splitter.join(col.info.unit.to_string() if col.info.unit else '' \n+                                                         for col in self.cols))\n+                elif row_type == 'name':\n+                    header_lines.append(self.splitter.join(col.info.name for col in self.cols))\n+                elif row_type == 'format':\n+                    header_lines.append(self.splitter.join(col.info.format if col.info.format else ''\n+                                                         for col in self.cols))\n+                elif row_type == 'description':\n+                    header_lines.append(self.splitter.join(col.info.description if col.info.description else ''\n+                                                         for col in self.cols))\n+            lines = [header_line] + header_lines + [header_line] + lines[2:]\n+        else:\n+            lines = [lines[1]] + lines + [lines[1]]\n+        return lines\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py\nindex 65d6c1d..0b2a7db 100644\n--- a/astropy/io/ascii/rst.py\n+++ b/astropy/io/ascii/rst.py\n@@ -18,9 +18,24 @@ class RST(FixedWidth):\n     _description = 'reStructuredText simple table'\n     data_class = SimpleRSTData\n     header_class = SimpleRSTHeader\n-    def __init__(self):\n+    def __init__(self, header_rows=None):\n         super().__init__(delimiter_pad=None, bookend=False)\n+        self.header_rows = header_rows\n     def write(self, lines):\n         lines = super().write(lines)\n-        lines = [lines[1]] + lines + [lines[1]]\n+        if self.header_rows:\n+            header_line = lines[0]\n+            header_lines = []\n+            for row_type in self.header_rows:\n+                if row_type == 'unit':\n+                    header_lines.append(self.splitter.join((col.info.unit.to_string() if col.info.unit else '' for col in self.cols)))\n+                elif row_type == 'name':\n+                    header_lines.append(self.splitter.join((col.info.name for col in self.cols)))\n+                elif row_type == 'format':\n+                    header_lines.append(self.splitter.join((col.info.format if col.info.format else '' for col in self.cols)))\n+                elif row_type == 'description':\n+                    header_lines.append(self.splitter.join((col.info.description if col.info.description else '' for col in self.cols)))\n+            lines = [header_line] + header_lines + [header_line] + lines[2:]\n+        else:\n+            lines = [lines[1]] + lines + [lines[1]]\n         return lines\n\\ No newline at end of file\n", "normalized_occurrence": 1}
