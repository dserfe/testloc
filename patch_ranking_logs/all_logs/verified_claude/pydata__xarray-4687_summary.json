{
  "instance_id": "pydata__xarray-4687",
  "container_id": "9be5ac71ff1513eb676fe188f19e9cde9fb253c5849652794d60b0816ad62f76",
  "regression": {
    "results": [
      {
        "patch_file": "all_patches/verified_claude_all_unique_patches/pydata__xarray-4687/dedup_patch_0.jsonl",
        "inst": "pydata__xarray-4687",
        "passed": 14,
        "failed": 0
      },
      {
        "patch_file": "all_patches/verified_claude_all_unique_patches/pydata__xarray-4687/dedup_patch_1.jsonl",
        "inst": "pydata__xarray-4687",
        "passed": 14,
        "failed": 0
      },
      {
        "patch_file": "all_patches/verified_claude_all_unique_patches/pydata__xarray-4687/dedup_patch_2.jsonl",
        "inst": "pydata__xarray-4687",
        "passed": 14,
        "failed": 0
      },
      {
        "patch_file": "all_patches/verified_claude_all_unique_patches/pydata__xarray-4687/dedup_patch_3.jsonl",
        "inst": "pydata__xarray-4687",
        "passed": 14,
        "failed": 0
      },
      {
        "patch_file": "all_patches/verified_claude_all_unique_patches/pydata__xarray-4687/dedup_patch_4.jsonl",
        "inst": "pydata__xarray-4687",
        "passed": 14,
        "failed": 0
      },
      {
        "patch_file": "all_patches/verified_claude_all_unique_patches/pydata__xarray-4687/dedup_patch_5.jsonl",
        "inst": "pydata__xarray-4687",
        "passed": 14,
        "failed": 0
      },
      {
        "patch_file": "all_patches/verified_claude_all_unique_patches/pydata__xarray-4687/dedup_patch_6.jsonl",
        "inst": "pydata__xarray-4687",
        "passed": 14,
        "failed": 0
      },
      {
        "patch_file": "all_patches/verified_claude_all_unique_patches/pydata__xarray-4687/dedup_patch_7.jsonl",
        "inst": "pydata__xarray-4687",
        "passed": 14,
        "failed": 0
      }
    ],
    "top_passed": 14,
    "top_subset_size": 8
  },
  "reproduction": {
    "xarray/tests/test_computation.py::test_where#1": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "xarray/tests/test_computation.py::test_where#2": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "xarray/tests/test_computation.py::test_where#3": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "xarray/tests/test_computation.py::test_where#4": {
      "repro_fails_on_clean": false,
      "outcomes": []
    },
    "xarray/tests/test_computation.py::test_where#5": {
      "repro_fails_on_clean": false,
      "outcomes": []
    }
  }
}