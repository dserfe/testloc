{"model_name_or_path": "agentless", "instance_id": "django__django-11095", "model_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 62b54f5..f04d1dd 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -580,7 +580,25 @@ class ModelAdmin(BaseModelAdmin):\n     def __str__(self):\n         return \"%s.%s\" % (self.model._meta.app_label, self.__class__.__name__)\n \n+    def get_inlines(self, request, obj=None):\n+        \"\"\"\n+        Hook to return the list of inline classes for the given request and object.\n+        \"\"\"\n+        return self.inlines\n+\n     def get_inline_instances(self, request, obj=None):\n+        inline_instances = []\n+        for inline_class in self.get_inlines(request, obj):\n+            inline = inline_class(self.model, self.admin_site)\n+            if request:\n+                if not (inline.has_view_or_change_permission(request, obj) or\n+                        inline.has_add_permission(request, obj) or\n+                        inline.has_delete_permission(request, obj)):\n+                    continue\n+                if not inline.has_add_permission(request, obj):\n+                    inline.max_num = 0\n+            inline_instances.append(inline)\n+        return inline_instances\n         inline_instances = []\n         for inline_class in self.inlines:\n             inline = inline_class(self.model, self.admin_site)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex bdbec4d..a329777 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -295,7 +295,19 @@ class ModelAdmin(BaseModelAdmin):\n         super().__init__()\n     def __str__(self):\n         return '%s.%s' % (self.model._meta.app_label, self.__class__.__name__)\n+    def get_inlines(self, request, obj=None):\n+        return self.inlines\n     def get_inline_instances(self, request, obj=None):\n+        inline_instances = []\n+        for inline_class in self.get_inlines(request, obj):\n+            inline = inline_class(self.model, self.admin_site)\n+            if request:\n+                if not (inline.has_view_or_change_permission(request, obj) or inline.has_add_permission(request, obj) or inline.has_delete_permission(request, obj)):\n+                    continue\n+                if not inline.has_add_permission(request, obj):\n+                    inline.max_num = 0\n+            inline_instances.append(inline)\n+        return inline_instances\n         inline_instances = []\n         for inline_class in self.inlines:\n             inline = inline_class(self.model, self.admin_site)\n", "normalized_occurrence": 2}
