{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-23299", "model_patch": "diff --git a/lib/matplotlib/pyplot.py b/lib/matplotlib/pyplot.py\nindex 9ba243c..7a72ebb 100644\n--- a/lib/matplotlib/pyplot.py\n+++ b/lib/matplotlib/pyplot.py\n@@ -198,11 +198,24 @@ def _get_backend_mod():\n \n     This is currently private, but may be made public in the future.\n     \"\"\"\n+    global _backend_mod\n     if _backend_mod is None:\n-        # Use __getitem__ here to avoid going through the fallback logic (which\n-        # will (re)import pyplot and then call switch_backend if we need to\n-        # resolve the auto sentinel)\n-        switch_backend(dict.__getitem__(rcParams, \"backend\"))\n+        backend = dict.__getitem__(rcParams, \"backend\")\n+        if backend is rcsetup._auto_backend_sentinel:\n+            # Don't call switch_backend() which would close all figures.\n+            # Instead, directly try to find and load the desired backend.\n+            current_framework = cbook._get_running_interactive_framework()\n+            mapping = {'qt': 'qtagg',\n+                      'gtk3': 'gtk3agg',\n+                      'gtk4': 'gtk4agg',\n+                      'wx': 'wxagg',\n+                      'tk': 'tkagg',\n+                      'macosx': 'macosx',\n+                      'headless': 'agg'}\n+            backend = mapping.get(current_framework, 'agg')\n+\n+        backend_name = cbook._backend_module_name(backend)\n+        _backend_mod = importlib.import_module(backend_name)\n     return _backend_mod\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/pyplot.py b/lib/matplotlib/pyplot.py\nindex a3f363f..a77eac8 100644\n--- a/lib/matplotlib/pyplot.py\n+++ b/lib/matplotlib/pyplot.py\n@@ -96,8 +96,15 @@ def _get_required_interactive_framework(backend_mod):\n     return backend_mod.FigureCanvas.required_interactive_framework\n _backend_mod = None\n def _get_backend_mod():\n+    global _backend_mod\n     if _backend_mod is None:\n-        switch_backend(dict.__getitem__(rcParams, 'backend'))\n+        backend = dict.__getitem__(rcParams, 'backend')\n+        if backend is rcsetup._auto_backend_sentinel:\n+            current_framework = cbook._get_running_interactive_framework()\n+            mapping = {'qt': 'qtagg', 'gtk3': 'gtk3agg', 'gtk4': 'gtk4agg', 'wx': 'wxagg', 'tk': 'tkagg', 'macosx': 'macosx', 'headless': 'agg'}\n+            backend = mapping.get(current_framework, 'agg')\n+        backend_name = cbook._backend_module_name(backend)\n+        _backend_mod = importlib.import_module(backend_name)\n     return _backend_mod\n def switch_backend(newbackend):\n     global _backend_mod\n", "normalized_occurrence": 1}
