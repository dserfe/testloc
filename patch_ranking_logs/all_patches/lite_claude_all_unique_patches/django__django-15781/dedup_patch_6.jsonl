{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15781", "model_patch": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex 778cb1c..38ede7a 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -130,6 +130,23 @@ class DjangoHelpFormatter(HelpFormatter):\n     def add_arguments(self, actions):\n         super().add_arguments(self._reordered_actions(actions))\n \n+    def _split_lines(self, text, width):\n+        \"\"\"\n+        Preserve line breaks in help text.\n+        \"\"\"\n+        text = self._whitespace_matcher.sub(' ', text).strip()\n+        # Preserve newlines in the help text\n+        paragraphs = text.split('\\n')\n+        lines = []\n+        for paragraph in paragraphs:\n+            if paragraph:\n+                # Wrap each paragraph individually\n+                lines.extend(textwrap.wrap(paragraph, width))\n+            else:\n+                # Preserve empty lines\n+                lines.append('')\n+        return lines\n+\n \n class OutputWrapper(TextIOBase):\n     \"\"\"\n", "occurrence": 1, "normalized_patch": "--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n+    def _split_lines(self, text, width):\n+        text = self._whitespace_matcher.sub(' ', text).strip()\n+        paragraphs = text.split('\\n')\n+        lines = []\n+        for paragraph in paragraphs:\n+            if paragraph:\n+                lines.extend(textwrap.wrap(paragraph, width))\n+            else:\n+                lines.append('')\n+        return lines", "normalized_occurrence": 1}
