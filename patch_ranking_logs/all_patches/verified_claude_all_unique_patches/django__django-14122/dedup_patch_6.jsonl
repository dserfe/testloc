{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14122", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex be54ccd..666f22f 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -57,7 +57,9 @@ class SQLCompiler:\n         self.where, self.having = self.query.where.split_having()\n         extra_select = self.get_extra_select(order_by, self.select)\n         self.has_extra_select = bool(extra_select)\n-        group_by = self.get_group_by(self.select + extra_select, order_by)\n+        # Don't pass order_by to get_group_by if it's from Meta.ordering\n+        group_by_order = [] if hasattr(self, '_meta_ordering') else order_by\n+        group_by = self.get_group_by(self.select + extra_select, group_by_order)\n         return extra_select, order_by, group_by\n \n     def get_group_by(self, select, order_by):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 4a5ff10..ac22efb 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -36,7 +36,8 @@ class SQLCompiler:\n         self.where, self.having = self.query.where.split_having()\n         extra_select = self.get_extra_select(order_by, self.select)\n         self.has_extra_select = bool(extra_select)\n-        group_by = self.get_group_by(self.select + extra_select, order_by)\n+        group_by_order = [] if hasattr(self, '_meta_ordering') else order_by\n+        group_by = self.get_group_by(self.select + extra_select, group_by_order)\n         return (extra_select, order_by, group_by)\n     def get_group_by(self, select, order_by):\n         if self.query.group_by is None:\n", "normalized_occurrence": 1}
