{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-22871", "model_patch": "diff --git a/lib/matplotlib/dates.py b/lib/matplotlib/dates.py\nindex cc65fc1..83b861e 100644\n--- a/lib/matplotlib/dates.py\n+++ b/lib/matplotlib/dates.py\n@@ -798,7 +798,7 @@ class ConciseDateFormatter(ticker.Formatter):\n         for level in range(5, -1, -1):\n             if len(np.unique(tickdate[:, level])) > 1:\n                 if level < 2:\n-                    show_offset = False\n+                    show_offset = True\n                 break\n             elif level == 0:\n                 # all tickdate are the same, so only micros might be different\n@@ -840,7 +840,10 @@ class ConciseDateFormatter(ticker.Formatter):\n \n         if show_offset:\n             # set the offset string:\n-            self.offset_string = tickdatetime[-1].strftime(offsetfmts[level])\n+            if level < 2:\n+                self.offset_string = tickdatetime[-1].strftime('%Y')\n+            else:\n+                self.offset_string = tickdatetime[-1].strftime(offsetfmts[level])\n             if self._usetex:\n                 self.offset_string = _wrap_in_tex(self.offset_string)\n         else:\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/dates.py b/lib/matplotlib/dates.py\nindex 6ad34f7..f1141aa 100644\n--- a/lib/matplotlib/dates.py\n+++ b/lib/matplotlib/dates.py\n@@ -198,7 +198,7 @@ class ConciseDateFormatter(ticker.Formatter):\n         for level in range(5, -1, -1):\n             if len(np.unique(tickdate[:, level])) > 1:\n                 if level < 2:\n-                    show_offset = False\n+                    show_offset = True\n                 break\n             elif level == 0:\n                 level = 5\n@@ -222,7 +222,10 @@ class ConciseDateFormatter(ticker.Formatter):\n                     if '.' in labels[nn]:\n                         labels[nn] = labels[nn][:-trailing_zeros].rstrip('.')\n         if show_offset:\n-            self.offset_string = tickdatetime[-1].strftime(offsetfmts[level])\n+            if level < 2:\n+                self.offset_string = tickdatetime[-1].strftime('%Y')\n+            else:\n+                self.offset_string = tickdatetime[-1].strftime(offsetfmts[level])\n             if self._usetex:\n                 self.offset_string = _wrap_in_tex(self.offset_string)\n         else:\n", "normalized_occurrence": 1}
