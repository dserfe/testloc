{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-15011", "model_patch": "diff --git a/sympy/printing/lambdarepr.py b/sympy/printing/lambdarepr.py\nindex 9830637..4882e35 100644\n--- a/sympy/printing/lambdarepr.py\n+++ b/sympy/printing/lambdarepr.py\n@@ -17,6 +17,13 @@ class LambdaPrinter(PythonCodePrinter):\n     \"\"\"\n     printmethod = \"_lambdacode\"\n \n+    def _print_MatrixSymbol(self, expr):\n+        # Handle MatrixSymbol names with special characters\n+        name = expr.name\n+        if not name.isidentifier():\n+            name = 'MatrixSymbol_' + ''.join(c if c.isalnum() else '_' for c in name)\n+        return name\n+\n \n     def _print_And(self, expr):\n         result = ['(']\n", "occurrence": 1, "normalized_patch": "--- a/sympy/printing/lambdarepr.py\n+++ b/sympy/printing/lambdarepr.py\n+    def _print_MatrixSymbol(self, expr):\n+        name = expr.name\n+        if not name.isidentifier():\n+            name = 'MatrixSymbol_' + ''.join((c if c.isalnum() else '_' for c in name))\n+        return name", "normalized_occurrence": 1}
