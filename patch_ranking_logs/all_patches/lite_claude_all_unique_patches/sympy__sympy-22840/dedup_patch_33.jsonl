{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-22840", "model_patch": "diff --git a/sympy/simplify/cse_main.py b/sympy/simplify/cse_main.py\nindex fa99708..dc570fb 100644\n--- a/sympy/simplify/cse_main.py\n+++ b/sympy/simplify/cse_main.py\n@@ -774,6 +774,7 @@ def cse(exprs, symbols=None, optimizations=None, postprocess=None,\n     \"\"\"\n     from sympy.matrices import (MatrixBase, Matrix, ImmutableMatrix,\n                                 SparseMatrix, ImmutableSparseMatrix)\n+    from sympy.matrices.expressions import MatrixSymbol\n \n     if not list:\n         return _cse_homogeneous(exprs,\n@@ -794,6 +795,9 @@ def cse(exprs, symbols=None, optimizations=None, postprocess=None,\n             temp.append(Tuple(*e.flat()))\n         elif isinstance(e, (SparseMatrix, ImmutableSparseMatrix)):\n             temp.append(Tuple(*e.todok().items()))\n+        elif isinstance(e, MatrixSymbol):\n+            # Don't treat MatrixSymbol as a whole expression to avoid unnecessary copies\n+            temp.append(e)\n         else:\n             temp.append(e)\n     exprs = temp\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/cse_main.py b/sympy/simplify/cse_main.py\nindex d5cc8d7..6bb0116 100644\n--- a/sympy/simplify/cse_main.py\n+++ b/sympy/simplify/cse_main.py\n@@ -304,6 +304,7 @@ def tree_cse(exprs, symbols, opt_subs=None, order='canonical', ignore=()):\n     return (replacements, reduced_exprs)\n def cse(exprs, symbols=None, optimizations=None, postprocess=None, order='canonical', ignore=(), list=True):\n     from sympy.matrices import MatrixBase, Matrix, ImmutableMatrix, SparseMatrix, ImmutableSparseMatrix\n+    from sympy.matrices.expressions import MatrixSymbol\n     if not list:\n         return _cse_homogeneous(exprs, symbols=symbols, optimizations=optimizations, postprocess=postprocess, order=order, ignore=ignore)\n     if isinstance(exprs, (int, float)):\n@@ -317,6 +318,8 @@ def cse(exprs, symbols=None, optimizations=None, postprocess=None, order='canoni\n             temp.append(Tuple(*e.flat()))\n         elif isinstance(e, (SparseMatrix, ImmutableSparseMatrix)):\n             temp.append(Tuple(*e.todok().items()))\n+        elif isinstance(e, MatrixSymbol):\n+            temp.append(e)\n         else:\n             temp.append(e)\n     exprs = temp\n", "normalized_occurrence": 1}
