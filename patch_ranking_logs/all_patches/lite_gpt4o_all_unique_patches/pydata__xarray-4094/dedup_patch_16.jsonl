{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-4094", "model_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex 1e17b93..c69d83c 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -3455,7 +3455,7 @@ class Dataset(Mapping, ImplementsDatasetReduce, DataWithCoords):\n             assign_coords = {variable_dim: val.name}\n             for dim in stacking_dims:\n                 if dim not in val.dims:\n-                    assign_coords[dim] = None\n+                    assign_coords[dim] = np.nan\n \n             expand_dims = set(stacking_dims).difference(set(val.dims))\n             expand_dims.add(variable_dim)\n@@ -3464,7 +3464,7 @@ class Dataset(Mapping, ImplementsDatasetReduce, DataWithCoords):\n \n             return (\n                 val.assign_coords(**assign_coords)\n-                .expand_dims(expand_dims)\n+                .expand_dims(expand_dims, axis=-1)\n                 .stack({new_dim: (variable_dim,) + stacking_dims})\n             )\n \n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex 21ef2a4..4198ba8 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -1149,11 +1149,11 @@ class Dataset(Mapping, ImplementsDatasetReduce, DataWithCoords):\n             assign_coords = {variable_dim: val.name}\n             for dim in stacking_dims:\n                 if dim not in val.dims:\n-                    assign_coords[dim] = None\n+                    assign_coords[dim] = np.nan\n             expand_dims = set(stacking_dims).difference(set(val.dims))\n             expand_dims.add(variable_dim)\n             expand_dims = list(expand_dims)\n-            return val.assign_coords(**assign_coords).expand_dims(expand_dims).stack({new_dim: (variable_dim,) + stacking_dims})\n+            return val.assign_coords(**assign_coords).expand_dims(expand_dims, axis=-1).stack({new_dim: (variable_dim,) + stacking_dims})\n         stackable_vars = [ensure_stackable(self[key]) for key in self.data_vars]\n         data_array = xr.concat(stackable_vars, dim=new_dim)\n         idx = data_array.indexes[new_dim]\n", "normalized_occurrence": 1}
