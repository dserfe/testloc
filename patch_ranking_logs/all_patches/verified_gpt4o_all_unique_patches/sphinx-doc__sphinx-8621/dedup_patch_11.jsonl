{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8621", "model_patch": "diff --git a/sphinx/roles.py b/sphinx/roles.py\nindex 307975f..5515d3c 100644\n--- a/sphinx/roles.py\n+++ b/sphinx/roles.py\n@@ -35,7 +35,7 @@ if False:\n generic_docroles = {\n     'command': addnodes.literal_strong,\n     'dfn': nodes.emphasis,\n-    'kbd': nodes.literal,\n+    'kbd': lambda rawtext, text, **options: handle_kbd_role(rawtext, text, **options),\n     'mailheader': addnodes.literal_emphasis,\n     'makevar': addnodes.literal_strong,\n     'manpage': addnodes.manpage,\n@@ -45,6 +45,14 @@ generic_docroles = {\n     'regexp': nodes.literal,\n }\n \n+def handle_kbd_role(rawtext, text, **options):\n+    if '-' in text or '+' in text or '^' in text:\n+        keystrokes = re.split(r'([-+^])', text)\n+        nodes_list = [nodes.literal(rawtext, keystroke, **options) if keystroke not in '-+^' else nodes.Text(keystroke) for keystroke in keystrokes]\n+        return nodes.literal(rawtext, '', *nodes_list, **options)\n+    else:\n+        return nodes.literal(rawtext, text, **options)\n+\n \n # -- generic cross-reference role ----------------------------------------------\n \n", "occurrence": 1, "normalized_patch": "--- a/sphinx/roles.py\n+++ b/sphinx/roles.py\n-generic_docroles = {'command': addnodes.literal_strong, 'dfn': nodes.emphasis, 'kbd': nodes.literal, 'mailheader': addnodes.literal_emphasis, 'makevar': addnodes.literal_strong, 'manpage': addnodes.manpage, 'mimetype': addnodes.literal_emphasis, 'newsgroup': addnodes.literal_emphasis, 'program': addnodes.literal_strong, 'regexp': nodes.literal}\n+generic_docroles = {'command': addnodes.literal_strong, 'dfn': nodes.emphasis, 'kbd': lambda rawtext, text, **options: handle_kbd_role(rawtext, text, **options), 'mailheader': addnodes.literal_emphasis, 'makevar': addnodes.literal_strong, 'manpage': addnodes.manpage, 'mimetype': addnodes.literal_emphasis, 'newsgroup': addnodes.literal_emphasis, 'program': addnodes.literal_strong, 'regexp': nodes.literal}\n+def handle_kbd_role(rawtext, text, **options):\n+    if '-' in text or '+' in text or '^' in text:\n+        keystrokes = re.split('([-+^])', text)\n+        nodes_list = [nodes.literal(rawtext, keystroke, **options) if keystroke not in '-+^' else nodes.Text(keystroke) for keystroke in keystrokes]\n+        return nodes.literal(rawtext, '', *nodes_list, **options)\n+    else:\n+        return nodes.literal(rawtext, text, **options)", "normalized_occurrence": 1}
