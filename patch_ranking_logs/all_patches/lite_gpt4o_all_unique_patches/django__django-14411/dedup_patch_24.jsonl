{"model_name_or_path": "agentless", "instance_id": "django__django-14411", "model_patch": "diff --git a/django/contrib/admin/utils.py b/django/contrib/admin/utils.py\nindex ab619c1..a533791 100644\n--- a/django/contrib/admin/utils.py\n+++ b/django/contrib/admin/utils.py\n@@ -324,7 +324,9 @@ def label_for_field(name, model, model_admin=None, return_attr=False, form=None)\n             # field is likely a ForeignObjectRel\n             label = field.related_model._meta.verbose_name\n     except FieldDoesNotExist:\n-        if name == \"__str__\":\n+        if name == \"password\" and form and isinstance(form.fields.get(name), ReadOnlyPasswordHashWidget):\n+            label = pretty_name(name)\n+        elif name == \"__str__\":\n             label = str(model._meta.verbose_name)\n             attr = str\n         else:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/utils.py b/django/contrib/admin/utils.py\nindex 2428fd0..0dc341a 100644\n--- a/django/contrib/admin/utils.py\n+++ b/django/contrib/admin/utils.py\n@@ -187,7 +187,9 @@ def label_for_field(name, model, model_admin=None, return_attr=False, form=None)\n         except AttributeError:\n             label = field.related_model._meta.verbose_name\n     except FieldDoesNotExist:\n-        if name == '__str__':\n+        if name == 'password' and form and isinstance(form.fields.get(name), ReadOnlyPasswordHashWidget):\n+            label = pretty_name(name)\n+        elif name == '__str__':\n             label = str(model._meta.verbose_name)\n             attr = str\n         else:\n", "normalized_occurrence": 1}
