{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-14182", "model_patch": "diff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py\nindex 00bbbaf..8ca9998 100644\n--- a/astropy/io/ascii/rst.py\n+++ b/astropy/io/ascii/rst.py\n@@ -57,10 +57,26 @@ class RST(FixedWidth):\n     data_class = SimpleRSTData\n     header_class = SimpleRSTHeader\n \n-    def __init__(self):\n+    def __init__(self, header_rows=None):\n         super().__init__(delimiter_pad=None, bookend=False)\n-\n-    def write(self, lines):\n-        lines = super().write(lines)\n+        self.header_rows = header_rows\n+\n+    def write(self, table):\n+        lines = super().write(table)\n+\n+        if self.header_rows:\n+            headers = []\n+            if \"name\" in self.header_rows:\n+                headers.append(\" \".join(table.colnames))\n+            if \"unit\" in self.header_rows:\n+                units = [str(col.unit or '') for col in table.columns.values()]\n+                headers.append(\" \".join(units))\n+                \n+            header_lines = [\" \".join([\"=\" * len(header) for header in headers[0].split()])]\n+            header_lines.extend(headers)\n+            header_lines.append(header_lines[0])\n+            \n+            lines = header_lines + lines\n+        \n         lines = [lines[1]] + lines + [lines[1]]\n-        return lines\n+        return lines\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py\nindex 65d6c1d..800bcd4 100644\n--- a/astropy/io/ascii/rst.py\n+++ b/astropy/io/ascii/rst.py\n@@ -18,9 +18,21 @@ class RST(FixedWidth):\n     _description = 'reStructuredText simple table'\n     data_class = SimpleRSTData\n     header_class = SimpleRSTHeader\n-    def __init__(self):\n+    def __init__(self, header_rows=None):\n         super().__init__(delimiter_pad=None, bookend=False)\n-    def write(self, lines):\n-        lines = super().write(lines)\n+        self.header_rows = header_rows\n+    def write(self, table):\n+        lines = super().write(table)\n+        if self.header_rows:\n+            headers = []\n+            if 'name' in self.header_rows:\n+                headers.append(' '.join(table.colnames))\n+            if 'unit' in self.header_rows:\n+                units = [str(col.unit or '') for col in table.columns.values()]\n+                headers.append(' '.join(units))\n+            header_lines = [' '.join(['=' * len(header) for header in headers[0].split()])]\n+            header_lines.extend(headers)\n+            header_lines.append(header_lines[0])\n+            lines = header_lines + lines\n         lines = [lines[1]] + lines + [lines[1]]\n         return lines\n\\ No newline at end of file\n", "normalized_occurrence": 1}
