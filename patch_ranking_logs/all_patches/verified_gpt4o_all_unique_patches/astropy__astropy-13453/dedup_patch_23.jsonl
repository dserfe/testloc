{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-13453", "model_patch": "diff --git a/astropy/io/ascii/html.py b/astropy/io/ascii/html.py\nindex 1220930..c2c853b 100644\n--- a/astropy/io/ascii/html.py\n+++ b/astropy/io/ascii/html.py\n@@ -423,7 +423,17 @@ class HTML(core.BaseReader):\n                         # requires that the weakref info._parent be maintained.\n                         new_cols = []\n \n+                        # Format columns according to 'formats' argument\n+                        col_format_funcs = {}\n+                        for col_name in table.colnames:\n+                            if col_name in table.meta.get('formats', {}):\n+                                col_format_funcs[col_name] = table.meta['formats'][col_name]\n+                                \n                         for col, col_escaped in zip(cols, cols_escaped):\n+                            if col.info.name in col_format_funcs:\n+                                col_iter_str_vals = (col_format_funcs[col.info.name](x) for x in col)\n+                            else:\n+                                col_iter_str_vals = col.info.iter_str_vals()\n                             if len(col.shape) > 1 and self.html['multicol']:\n                                 span = col.shape[1]\n                                 for i in range(span):\n@@ -474,4 +484,4 @@ class HTML(core.BaseReader):\n                     yield col.fill_values[col_str]\n                     continue\n \n-            yield col_str\n+            yield col_str\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/io/ascii/html.py b/astropy/io/ascii/html.py\nindex 45fa153..0416c04 100644\n--- a/astropy/io/ascii/html.py\n+++ b/astropy/io/ascii/html.py\n@@ -207,7 +207,15 @@ class HTML(core.BaseReader):\n                         col_str_iters = []\n                         new_cols_escaped = []\n                         new_cols = []\n+                        col_format_funcs = {}\n+                        for col_name in table.colnames:\n+                            if col_name in table.meta.get('formats', {}):\n+                                col_format_funcs[col_name] = table.meta['formats'][col_name]\n                         for col, col_escaped in zip(cols, cols_escaped):\n+                            if col.info.name in col_format_funcs:\n+                                col_iter_str_vals = (col_format_funcs[col.info.name](x) for x in col)\n+                            else:\n+                                col_iter_str_vals = col.info.iter_str_vals()\n                             if len(col.shape) > 1 and self.html['multicol']:\n                                 span = col.shape[1]\n                                 for i in range(span):\n", "normalized_occurrence": 1}
