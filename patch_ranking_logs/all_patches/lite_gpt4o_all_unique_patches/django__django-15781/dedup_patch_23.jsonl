{"model_name_or_path": "agentless", "instance_id": "django__django-15781", "model_patch": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex 778cb1c..c89e68f 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -121,14 +121,19 @@ class DjangoHelpFormatter(HelpFormatter):\n \n     def _reordered_actions(self, actions):\n         return sorted(\n-            actions, key=lambda a: set(a.option_strings) & self.show_last != set()\n+            actions, key=lambda a: (set(a.option_strings) & self.show_last != set(), a.option_strings)\n         )\n \n     def add_usage(self, usage, actions, *args, **kwargs):\n+        if usage is not None:\n+            usage = usage.replace('\\n', '\\n  ').strip()\n         super().add_usage(usage, self._reordered_actions(actions), *args, **kwargs)\n \n     def add_arguments(self, actions):\n-        super().add_arguments(self._reordered_actions(actions))\n+        for action in self._reordered_actions(actions):\n+            if action.help:\n+                action.help = action.help.replace('\\n', '\\n  ').strip()\n+        super().add_arguments(actions)\n \n \n class OutputWrapper(TextIOBase):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex 2883dc3..98c1dc9 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -49,11 +49,16 @@ def no_translations(handle_func):\n class DjangoHelpFormatter(HelpFormatter):\n     show_last = {'--version', '--verbosity', '--traceback', '--settings', '--pythonpath', '--no-color', '--force-color', '--skip-checks'}\n     def _reordered_actions(self, actions):\n-        return sorted(actions, key=lambda a: set(a.option_strings) & self.show_last != set())\n+        return sorted(actions, key=lambda a: (set(a.option_strings) & self.show_last != set(), a.option_strings))\n     def add_usage(self, usage, actions, *args, **kwargs):\n+        if usage is not None:\n+            usage = usage.replace('\\n', '\\n  ').strip()\n         super().add_usage(usage, self._reordered_actions(actions), *args, **kwargs)\n     def add_arguments(self, actions):\n-        super().add_arguments(self._reordered_actions(actions))\n+        for action in self._reordered_actions(actions):\n+            if action.help:\n+                action.help = action.help.replace('\\n', '\\n  ').strip()\n+        super().add_arguments(actions)\n class OutputWrapper(TextIOBase):\n     @property\n     def style_func(self):\n", "normalized_occurrence": 1}
