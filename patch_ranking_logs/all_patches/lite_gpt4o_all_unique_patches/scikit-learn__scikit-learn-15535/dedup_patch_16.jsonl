{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-15535", "model_patch": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex be26d08..61f7794 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -539,7 +539,7 @@ def check_array(array, accept_sparse=False, accept_large_sparse=True,\n                     \"if it contains a single sample.\".format(array))\n \n         # in the future np.flexible dtypes will be handled like object dtypes\n-        if dtype_numeric and np.issubdtype(array.dtype, np.flexible):\n+        if dtype_numeric and (np.issubdtype(array.dtype, np.flexible) or array.dtype.kind == \"O\"):\n             warnings.warn(\n                 \"Beginning in version 0.22, arrays of bytes/strings will be \"\n                 \"converted to decimal numbers if dtype='numeric'. \"\n@@ -551,7 +551,10 @@ def check_array(array, accept_sparse=False, accept_large_sparse=True,\n \n         # make sure we actually converted to numeric:\n         if dtype_numeric and array.dtype.kind == \"O\":\n-            array = array.astype(np.float64)\n+            try:\n+                array = array.astype(np.float64)\n+            except ValueError as e:\n+                raise ValueError(f\"Unable to convert array to float. Original error: {e}\")\n         if not allow_nd and array.ndim >= 3:\n             raise ValueError(\"Found array with dim %d. %s expected <= 2.\"\n                              % (array.ndim, estimator_name))\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex 8ce0584..cdfd788 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -177,10 +177,13 @@ def check_array(array, accept_sparse=False, accept_large_sparse=True, dtype='num\n                 raise ValueError('Expected 2D array, got scalar array instead:\\narray={}.\\nReshape your data either using array.reshape(-1, 1) if your data has a single feature or array.reshape(1, -1) if it contains a single sample.'.format(array))\n             if array.ndim == 1:\n                 raise ValueError('Expected 2D array, got 1D array instead:\\narray={}.\\nReshape your data either using array.reshape(-1, 1) if your data has a single feature or array.reshape(1, -1) if it contains a single sample.'.format(array))\n-        if dtype_numeric and np.issubdtype(array.dtype, np.flexible):\n+        if dtype_numeric and (np.issubdtype(array.dtype, np.flexible) or array.dtype.kind == 'O'):\n             warnings.warn(\"Beginning in version 0.22, arrays of bytes/strings will be converted to decimal numbers if dtype='numeric'. It is recommended that you convert the array to a float dtype before using it in scikit-learn, for example by using your_array = your_array.astype(np.float64).\", FutureWarning, stacklevel=2)\n         if dtype_numeric and array.dtype.kind == 'O':\n-            array = array.astype(np.float64)\n+            try:\n+                array = array.astype(np.float64)\n+            except ValueError as e:\n+                raise ValueError(f'Unable to convert array to float. Original error: {e}')\n         if not allow_nd and array.ndim >= 3:\n             raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim, estimator_name))\n         if force_all_finite:\n", "normalized_occurrence": 1}
