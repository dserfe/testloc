{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-10508", "model_patch": "diff --git a/sklearn/preprocessing/label.py b/sklearn/preprocessing/label.py\nindex 8d1b39c..dbeb1cb 100644\n--- a/sklearn/preprocessing/label.py\n+++ b/sklearn/preprocessing/label.py\n@@ -126,7 +126,10 @@ class LabelEncoder(BaseEstimator, TransformerMixin):\n         \"\"\"\n         check_is_fitted(self, 'classes_')\n         y = column_or_1d(y, warn=True)\n-\n+        \n+        if len(y) == 0:\n+            return np.array([], dtype=int)\n+            \n         classes = np.unique(y)\n         if len(np.intersect1d(classes, self.classes_)) < len(classes):\n             diff = np.setdiff1d(classes, self.classes_)\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/preprocessing/label.py b/sklearn/preprocessing/label.py\nindex 7e12a65..6a28d52 100644\n--- a/sklearn/preprocessing/label.py\n+++ b/sklearn/preprocessing/label.py\n@@ -27,6 +27,8 @@ class LabelEncoder(BaseEstimator, TransformerMixin):\n     def transform(self, y):\n         check_is_fitted(self, 'classes_')\n         y = column_or_1d(y, warn=True)\n+        if len(y) == 0:\n+            return np.array([], dtype=int)\n         classes = np.unique(y)\n         if len(np.intersect1d(classes, self.classes_)) < len(classes):\n             diff = np.setdiff1d(classes, self.classes_)\n", "normalized_occurrence": 3}
