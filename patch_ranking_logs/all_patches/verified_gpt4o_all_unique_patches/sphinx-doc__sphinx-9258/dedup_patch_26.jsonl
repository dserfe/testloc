{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9258", "model_patch": "diff --git a/sphinx/util/docstrings.py b/sphinx/util/docstrings.py\nindex 6895942..178cfe0 100644\n--- a/sphinx/util/docstrings.py\n+++ b/sphinx/util/docstrings.py\n@@ -36,6 +36,11 @@ def separate_metadata(s: str) -> Tuple[str, Dict[str, str]]:\n         else:\n             matched = field_list_item_re.match(line)\n             if matched and not in_other_element:\n+                # Check if the field is a ':type' field with union types\n+                field_name = matched.group()[1:].split(':', 1)[0]\n+                if field_name.startswith('type '):\n+                    types = line[matched.end():].split('|')\n+                    line = f':type {field_name[5:]}: {\" or \".join(t.strip() for t in types)}'\n                 field_name = matched.group()[1:].split(':', 1)[0]\n                 if field_name.startswith('meta '):\n                     name = field_name[5:].strip()\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/util/docstrings.py b/sphinx/util/docstrings.py\nindex 6c9466f..23ebc41 100644\n--- a/sphinx/util/docstrings.py\n+++ b/sphinx/util/docstrings.py\n@@ -19,6 +19,10 @@ def separate_metadata(s: str) -> Tuple[str, Dict[str, str]]:\n             matched = field_list_item_re.match(line)\n             if matched and (not in_other_element):\n                 field_name = matched.group()[1:].split(':', 1)[0]\n+                if field_name.startswith('type '):\n+                    types = line[matched.end():].split('|')\n+                    line = f\":type {field_name[5:]}: {' or '.join((t.strip() for t in types))}\"\n+                field_name = matched.group()[1:].split(':', 1)[0]\n                 if field_name.startswith('meta '):\n                     name = field_name[5:].strip()\n                     metadata[name] = line[matched.end():].strip()\n", "normalized_occurrence": 1}
