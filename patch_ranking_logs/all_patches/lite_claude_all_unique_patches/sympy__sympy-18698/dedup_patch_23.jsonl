{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-18698", "model_patch": "diff --git a/sympy/polys/sqfreetools.py b/sympy/polys/sqfreetools.py\nindex fbdbcb2..ce45ec4 100644\n--- a/sympy/polys/sqfreetools.py\n+++ b/sympy/polys/sqfreetools.py\n@@ -416,7 +416,14 @@ def dmp_sqf_list(f, u, K, all=False):\n         g, p, q = dmp_inner_gcd(p, h, u, K)\n \n         if all or dmp_degree(g, u) > 0:\n-            result.append((g, i))\n+            # Check if there's an existing factor with the same multiplicity\n+            for j, (existing_factor, mult) in enumerate(result):\n+                if mult == i:\n+                    # Combine factors with same multiplicity\n+                    result[j] = (dmp_mul(existing_factor, g, u, K), i)\n+                    break\n+            else:\n+                result.append((g, i))\n \n         i += 1\n \n", "occurrence": 2, "normalized_patch": "diff --git a/sympy/polys/sqfreetools.py b/sympy/polys/sqfreetools.py\nindex 09fb2b6..8dea1ba 100644\n--- a/sympy/polys/sqfreetools.py\n+++ b/sympy/polys/sqfreetools.py\n@@ -152,7 +152,12 @@ def dmp_sqf_list(f, u, K, all=False):\n             break\n         g, p, q = dmp_inner_gcd(p, h, u, K)\n         if all or dmp_degree(g, u) > 0:\n-            result.append((g, i))\n+            for j, (existing_factor, mult) in enumerate(result):\n+                if mult == i:\n+                    result[j] = (dmp_mul(existing_factor, g, u, K), i)\n+                    break\n+            else:\n+                result.append((g, i))\n         i += 1\n     return (coeff, result)\n def dmp_sqf_list_include(f, u, K, all=False):\n", "normalized_occurrence": 5}
