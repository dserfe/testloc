{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12184", "model_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex 1a3b6f6..43851f1 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -352,6 +352,8 @@ class URLPattern:\n         match = self.pattern.match(path)\n         if match:\n             new_path, args, kwargs = match\n+            # Filter out None/empty values from positional arguments\n+            args = [arg for arg in args if arg is not None and arg != '']\n             # Pass any extra_kwargs as **kwargs.\n             kwargs.update(self.default_args)\n             return ResolverMatch(self.callback, args, kwargs, self.pattern.name, route=str(self.pattern))\n", "occurrence": 1, "normalized_patch": "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py\nindex a06ca7c..e3556b1 100644\n--- a/django/urls/resolvers.py\n+++ b/django/urls/resolvers.py\n@@ -220,6 +220,7 @@ class URLPattern:\n         match = self.pattern.match(path)\n         if match:\n             new_path, args, kwargs = match\n+            args = [arg for arg in args if arg is not None and arg != '']\n             kwargs.update(self.default_args)\n             return ResolverMatch(self.callback, args, kwargs, self.pattern.name, route=str(self.pattern))\n     @cached_property\n", "normalized_occurrence": 1}
