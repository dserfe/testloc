{"model_name_or_path": "agentless_claude", "instance_id": "astropy__astropy-14508", "model_patch": "diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py\nindex 471c162..f59a2ac 100644\n--- a/astropy/io/fits/card.py\n+++ b/astropy/io/fits/card.py\n@@ -1299,10 +1299,19 @@ def _format_value(value):\n \n def _format_float(value):\n     \"\"\"Format a floating number to make sure it gets the decimal point.\"\"\"\n-    value_str = f\"{value:.16G}\"\n+    # Try the default string representation first\n+    value_str = str(value)\n     if \".\" not in value_str and \"E\" not in value_str:\n         value_str += \".0\"\n-    elif \"E\" in value_str:\n+    \n+    # If the default representation is too long or doesn't include a decimal point,\n+    # fall back to the old formatting\n+    if len(value_str) > 20:\n+        value_str = f\"{value:.16G}\"\n+        if \".\" not in value_str and \"E\" not in value_str:\n+            value_str += \".0\"\n+    \n+    if \"E\" in value_str:\n         # On some Windows builds of Python (and possibly other platforms?) the\n         # exponent is zero-padded out to, it seems, three digits.  Normalize\n         # the format to pad only to two digits.\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py\nindex 2109132..e4deb9d 100644\n--- a/astropy/io/fits/card.py\n+++ b/astropy/io/fits/card.py\n@@ -655,10 +655,14 @@ def _format_value(value):\n     else:\n         return ''\n def _format_float(value):\n-    value_str = f'{value:.16G}'\n+    value_str = str(value)\n     if '.' not in value_str and 'E' not in value_str:\n         value_str += '.0'\n-    elif 'E' in value_str:\n+    if len(value_str) > 20:\n+        value_str = f'{value:.16G}'\n+        if '.' not in value_str and 'E' not in value_str:\n+            value_str += '.0'\n+    if 'E' in value_str:\n         significand, exponent = value_str.split('E')\n         if exponent[0] in ('+', '-'):\n             sign = exponent[0]\n", "normalized_occurrence": 4}
