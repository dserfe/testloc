[
  {
    "instance_id": "django__django-10914",
    "file_function": {
      "tests/file_storage/tests.py": [
        "test_file_get_modified_time_timezone",
        "test_files",
        "test_delete_deletes_directories",
        "test_save_doesnt_close",
        "test_file_chunks_error",
        "test_remove_race_handling",
        "test_makedirs_race_handling",
        "test_base_url",
        "test_file_get_accessed_time_timezone",
        "test_listdir",
        "test_file_upload_directory_permissions",
        "test_setting_changed",
        "test_file_get_created_time_timezone",
        "test_file_upload_permissions",
        "test_race_condition"
      ],
      "tests/file_uploads/tests.py": [
        "test_not_a_directory"
      ],
      "tests/files/tests.py": [
        "test_open_resets_file_to_start_and_returns_context_manager"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-13480",
    "file_function": {
      "sympy/functions/elementary/tests/test_hyperbolic.py": [
        "test_coth",
        "test_simplifications"
      ]
    }
  },
  {
    "instance_id": "django__django-16139",
    "file_function": {
      "tests/auth_tests/test_forms.py": [
        "test_username_field_autocapitalize_none",
        "test_bug_17944_empty_password"
      ],
      "tests/admin_views/tests.py": [
        "test_user_permission_performance"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-21379",
    "file_function": {
      "sympy/functions/elementary/tests/test_piecewise.py": [
        "test_piecewise1",
        "test_piecewise_fold"
      ]
    }
  },
  {
    "instance_id": "django__django-11790",
    "file_function": {
      "tests/auth_tests/test_forms.py": [
        "test_inactive_user_i18n",
        "test_custom_form",
        "test_inactive_user"
      ],
      "tests/auth_tests/test_views.py": [
        "test_password_change_succeeds"
      ]
    }
  },
  {
    "instance_id": "django__django-16667",
    "file_function": {
      "tests/forms_tests/widget_tests/test_selectdatewidget/SelectDateWidgetTest/test_value_from_datadict.py": [
        "test_value_from_datadict"
      ]
    }
  },
  {
    "instance_id": "django__django-15569",
    "file_function": {
      "tests/custom_lookups/tests.py": [
        "test_call_order",
        "test_bilateral_inner_qs",
        "test_bilateral_order"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-7985",
    "file_function": {
      "tests/test_build.py": [
        "test_build_all"
      ],
      "tests/test_build_linkcheck.py": [
        "test_linkcheck_request_headers",
        "test_anchors_ignored",
        "test_auth",
        "test_defaults_json",
        "test_defaults"
      ]
    }
  },
  {
    "instance_id": "django__django-14855",
    "file_function": {
      "tests/admin_inlines/tests.py": [
        "test_inline_change_m2m_view_only_perm",
        "test_inlines_are_rendered_as_read_only"
      ],
      "tests/admin_views/tests.py": [
        "test_view_subtitle_per_object",
        "test_readonly_get",
        "test_readonly_manytomany_forwards_ref",
        "test_view",
        "test_label_suffix_translated",
        "test_readonly_text_field"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-25747",
    "file_function": {
      "sklearn/tests/test_pipeline.py": [
        "test_feature_union_set_output",
        "test_feature_union_feature_names_in_",
        "test_feature_union_fit_params",
        "test_verbose",
        "test_feature_union_feature_names",
        "test_set_feature_union_passthrough",
        "test_feature_union_check_if_fitted",
        "test_feature_union_warns_unknown_transformer_weight",
        "test_feature_union_getitem",
        "test_feature_union",
        "test_n_features_in_feature_union",
        "test_feature_union_getitem_error",
        "test_set_feature_union_step_drop"
      ],
      "sklearn/utils/tests/test_set_output.py": [
        "test__wrap_in_pandas_container_error_validation",
        "test__wrap_in_pandas_container_column_errors"
      ],
      "sklearn/compose/tests/test_column_transformer.py": [
        "test_transformers_with_pandas_out_but_not_feature_names_out"
      ]
    }
  },
  {
    "instance_id": "django__django-14034",
    "file_function": {
      "tests/forms_tests/field_tests/test_multivaluefield.py": [
        "test_clean_disabled_multivalue"
      ],
      "tests/forms_tests/tests/test_forms.py": [
        "test_multivalue_optional_subfields"
      ]
    }
  },
  {
    "instance_id": "django__django-13925",
    "file_function": {
      "tests/model_options/test_default_pk.py": [
        "test_app_default_auto_field_nonexistent",
        "test_m2m_default_auto_field_setting",
        "test_default_auto_field_setting_non_auto",
        "test_m2m_app_default_auto_field",
        "test_default_auto_field_setting_none"
      ],
      "tests/model_inheritance/test_abstract_inheritance.py": [
        "test_shadow_related_name_when_set_to_none",
        "test_multiple_inheritance_cannot_shadow_concrete_inherited_field",
        "test_multi_inheritance_field_clashes",
        "test_virtual_field",
        "test_cannot_override_indirect_abstract_field",
        "test_override_one2one_relation_auto_field_clashes"
      ],
      "tests/model_inheritance/tests.py": [
        "test_unique",
        "test_parent_cache_reuse",
        "test_eq",
        "test_inherited_ordering_pk_desc",
        "test_related_objects_for_inherited_models",
        "test_init_subclass",
        "test_abstract_parent_link",
        "test_unique_together"
      ],
      "tests/model_fields/test_foreignkey.py": [
        "test_warning_when_unique_true_on_fk"
      ],
      "tests/model_fields/tests.py": [
        "test_overriding_inherited_FIELD_display",
        "test_check"
      ],
      "tests/model_inheritance_regress/tests.py": [
        "test_create_new_instance_with_pk_equals_none_multi_inheritance",
        "test_issue_7276",
        "test_filter_with_parent_fk",
        "test_id_field_update_on_ancestor_change",
        "test_related_filtering_query_efficiency_ticket_15844",
        "test_create_new_instance_with_pk_equals_none"
      ],
      "tests/model_meta/tests.py": [
        "test_related_objects_local",
        "test_get_data_field",
        "test_abstract_model_not_instantiated",
        "test_get_fields_only_searches_forward_on_apps_not_ready"
      ],
      "tests/model_fields/test_integerfield.py": [
        "test_types"
      ]
    }
  },
  {
    "instance_id": "django__django-11880",
    "file_function": {
      "tests/forms_tests/tests/test_forms.py": [
        "test_multivalue_deep_copy",
        "test_hidden_data"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-8459",
    "file_function": {
      "tests/test_ext_autodoc.py": [
        "test_autodoc_GenericAlias",
        "test_final",
        "test_autodoc_warnings",
        "test_autodoc_inherited_members_None",
        "test_abstractmethods",
        "test_singledispatch",
        "test_coroutine",
        "test_singledispatchmethod",
        "test_overload",
        "test_format_signature",
        "test_autodoc_typed_instance_variables",
        "test_autodoc_TypeVar",
        "test_enum_class",
        "test_autodoc_imported_members"
      ],
      "tests/test_ext_autodoc_configs.py": [
        "test_autodoc_typehints_none_for_overload",
        "test_autodoc_type_aliases",
        "test_autodoc_typehints_description_for_invalid_node",
        "test_autodoc_default_options",
        "test_autodoc_typehints_none",
        "test_autodoc_typehints_description"
      ],
      "tests/test_ext_autodoc_autoattribute.py": [
        "test_autoattribute_instance_variable",
        "test_autoattribute_typed_variable",
        "test_autoattribute_novalue"
      ],
      "tests/test_ext_autodoc_autodata.py": [
        "test_autodata_novalue"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-14141",
    "file_function": {
      "sklearn/utils/tests/test_show_versions.py": [
        "test_show_versions_with_blas",
        "test_get_deps_info"
      ]
    }
  },
  {
    "instance_id": "django__django-15382",
    "file_function": {
      "tests/queries/tests.py": [
        "test_exclude_subquery",
        "test_empty_sliced_subquery_exclude",
        "test_empty_nodes",
        "test_ticket24525",
        "test_tickets_7087_12242"
      ],
      "tests/aggregation/tests.py": [
        "test_exists_extra_where_with_aggregate",
        "test_even_more_aggregate",
        "test_aggregation_default_passed_another_aggregate"
      ],
      "tests/expressions/tests.py": [
        "test_subquery_filter_by_aggregate",
        "test_aggregate_subquery_annotation",
        "test_subquery"
      ],
      "tests/annotations/tests.py": [
        "test_annotation_filter_with_subquery"
      ],
      "tests/filtered_relation/tests.py": [
        "test_extra"
      ]
    }
  },
  {
    "instance_id": "django__django-12308",
    "file_function": {
      "tests/admin_changelist/tests.py": [
        "test_computed_list_display_localization"
      ],
      "tests/admin_views/tests.py": [
        "test_multiple_sort_same_field",
        "test_change_list_sorting_callable",
        "test_change_list_column_field_classes",
        "test_change_list_sorting_model"
      ],
      "tests/admin_utils/tests.py": [
        "test_number_formats_display_for_field",
        "test_number_formats_with_thousand_separator_display_for_field",
        "test_null_display_for_field",
        "test_list_display_for_value",
        "test_list_display_for_value_boolean"
      ],
      "tests/admin_widgets/tests.py": [
        "test_readonly_fields"
      ]
    }
  },
  {
    "instance_id": "psf__requests-2931",
    "file_function": {
      "tests/test_requests.py": [
        "test_params_bytes_are_encoded",
        "test_data_argument_accepts_tuples",
        "test_basic_auth_str_is_always_native",
        "test_prepared_request_complete_copy",
        "test_long_authinfo_in_url",
        "test_prepared_request_no_cookies_copy"
      ]
    }
  },
  {
    "instance_id": "django__django-11820",
    "file_function": {
      "tests/invalid_models_tests/test_relative_fields.py": [
        "test_foreign_key_to_abstract_model",
        "test_to_fields_exist",
        "test_missing_relationship_model",
        "test_relationship_model_missing_foreign_key",
        "test_on_delete_set_null_on_non_nullable_field",
        "test_explicit_field_names",
        "test_invalid_order",
        "test_ambiguous_relationship_model",
        "test_hidden_m2m_to_fk",
        "test_m2m_to_abstract_model",
        "test_referencing_to_swapped_model",
        "test_invalid_related_query_name",
        "test_no_clash_for_hidden_related_name",
        "test_complex_clash",
        "test_on_delete_set_default_without_default_value",
        "test_foreign_object_to_non_unique_fields",
        "test_relationship_model_with_foreign_key_to_wrong_model",
        "test_foreign_key_to_non_unique_field",
        "test_many_to_many_with_useless_options",
        "test_many_to_many_to_missing_model",
        "test_related_field_has_invalid_related_name",
        "test_foreign_key_to_non_unique_field_under_explicit_model",
        "test_unique_m2m",
        "test_invalid_field",
        "test_too_many_foreign_keys_in_self_referential_model",
        "test_intersection_foreign_object"
      ],
      "tests/model_inheritance/tests.py": [
        "test_unique",
        "test_parent_cache_reuse",
        "test_custompk_m2m",
        "test_related_objects_for_inherited_models"
      ],
      "tests/invalid_models_tests/test_models.py": [
        "test_swappable_missing_app_name",
        "test_missing_parent_link",
        "test_m2m_table_name_clash",
        "test_pointing_to_non_local_field",
        "test_m2m_field_table_name_clash",
        "test_multiinheritance_clash",
        "test_pointing_to_m2m",
        "test_pointing_to_m2m_field",
        "test_ending_with_underscore",
        "test_ordering_with_order_with_respect_to",
        "test_m2m_to_concrete_and_proxy_allowed"
      ],
      "tests/model_fields/test_foreignkey.py": [
        "test_recursive_fks_get_col",
        "test_empty_string_fk"
      ],
      "tests/check_framework/test_model_checks.py": [
        "test_collision_across_apps",
        "test_no_collision_for_proxy_models"
      ],
      "tests/model_formsets/tests.py": [
        "test_inline_formsets_with_nullable_unique_together",
        "test_commit_false",
        "test_modelformset_factory_error_messages_overrides",
        "test_inlineformset_factory_error_messages_overrides",
        "test_custom_pk",
        "test_model_inheritance"
      ],
      "tests/model_fields/test_manytomanyfield.py": [
        "test_value_from_object_instance_with_pk"
      ]
    }
  },
  {
    "instance_id": "django__django-11179",
    "file_function": {
      "tests/delete/tests.py": [
        "test_do_nothing_qscount",
        "test_m2m",
        "test_setnull",
        "test_setvalue"
      ],
      "tests/model_forms/tests.py": [
        "test_image_field",
        "test_file_field_data"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-22719",
    "file_function": {
      "lib/matplotlib/tests/test_category.py": [
        "test_convert_one_number",
        "test_convert_float_array",
        "test_plot_numlike",
        "test_plot_bytes"
      ],
      "lib/matplotlib/tests/test_axes.py": [
        "test_boxplot_dates_pandas",
        "test_bar_decimal_center",
        "test_barh_decimal_center",
        "test_bar_pandas",
        "test_plot_decimal"
      ],
      "lib/matplotlib/tests/test_units.py": [
        "test_empty_arrays"
      ]
    }
  },
  {
    "instance_id": "django__django-14122",
    "file_function": {
      "tests/ordering/tests.py": [
        "test_order_by_constant_value",
        "test_extra_ordering_with_table_name",
        "test_reverse_meta_ordering_pure",
        "test_order_by_nulls_first"
      ],
      "tests/queries/test_qs_combinators.py": [
        "test_order_raises_on_non_selected_column",
        "test_union_with_values_list_and_order_on_annotation"
      ],
      "tests/aggregation_regress/tests.py": [
        "test_name_expressions",
        "test_more_more_more",
        "test_having_group_by"
      ],
      "tests/queries/tests.py": [
        "test_extra_values_order_multiple",
        "test_ordering"
      ],
      "tests/aggregation/tests.py": [
        "test_expression_on_aggregation"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-14053",
    "file_function": {
      "sklearn/tree/tests/test_export.py": [
        "test_graphviz_toy",
        "test_export_text_errors",
        "test_graphviz_errors",
        "test_export_text"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-18698",
    "file_function": {
      "sympy/polys/tests/test_sqfreetools.py": [
        "test_dup_sqf",
        "test_dmp_sqf"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-19783",
    "file_function": {
      "sympy/physics/quantum/tests/test_operator.py": [
        "test_operator_dagger",
        "test_identity",
        "test_operator"
      ],
      "sympy/physics/quantum/tests/test_qapply.py": [
        "test_basic"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-15875",
    "file_function": {
      "sympy/core/tests/test_expr.py": [
        "test_as_independent",
        "test_is_constant"
      ],
      "sympy/functions/elementary/tests/test_complexes.py": [
        "test_derivatives_issue_4757"
      ],
      "sympy/core/tests/test_evalf.py": [
        "test_issue_4956_5204"
      ],
      "sympy/core/tests/test_arit.py": [
        "test_ncmul"
      ],
      "sympy/simplify/tests/test_simplify.py": [
        "test_simplify_expr"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-3151",
    "file_function": {
      "xarray/tests/test_combine.py": [
        "test_empty_input",
        "test_combine_by_coords",
        "test_manual_concat",
        "test_invalid_hypercube_input",
        "test_manual_combine_but_need_auto_combine",
        "test_combine_by_coords_previously_failed",
        "test_check_for_impossible_ordering"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-7748",
    "file_function": {
      "tests/test_ext_autodoc_configs.py": [
        "test_autodoc_docstring_signature",
        "test_autodoc_typehints_none"
      ],
      "tests/test_ext_autodoc.py": [
        "test_autodoc_warnings",
        "test_autodoc_inherited_members_None",
        "test_final",
        "test_abstractmethods",
        "test_singledispatchmethod"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-7236",
    "file_function": {
      "testing/test_debugging.py": [
        "test_raises_bdbquit_with_eoferror"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-16450",
    "file_function": {
      "sympy/functions/elementary/tests/test_complexes.py": [
        "test_issue_15893"
      ],
      "sympy/core/tests/test_assumptions.py": [
        "test_special_assumptions",
        "test_issues_8632_8633_8638_8675_8992"
      ]
    }
  },
  {
    "instance_id": "django__django-11815",
    "file_function": {
      "tests/model_fields/test_charfield.py": [
        "test_lookup_integer_in_charfield",
        "test_max_length_passed_to_formfield"
      ],
      "tests/migrations/test_writer.py": [
        "test_migration_file_header_comments",
        "test_register_serializer",
        "test_migration_path"
      ],
      "tests/migrations/test_commands.py": [
        "test_makemigrations_migrations_modules_nonexistent_toplevel_package",
        "test_migrate_with_system_checks",
        "test_squashmigrations_optimizes",
        "test_squashmigrations_squashes",
        "test_squashmigrations_initial_attribute",
        "test_makemigrations_disabled_migrations_for_app",
        "test_makemigrations_with_custom_name"
      ]
    }
  },
  {
    "instance_id": "django__django-11999",
    "file_function": {
      "tests/model_forms/tests.py": [
        "test_default_not_populated_on_non_empty_value_in_cleaned_data",
        "test_prefixed_form_with_default_field",
        "test_default_filefield",
        "test_custom_error_messages"
      ],
      "tests/validation/tests.py": [
        "test_invalid_v6_ip_raises_error",
        "test_invalid_generic_ip_raises_error",
        "test_missing_required_field_raises_error"
      ],
      "tests/model_fields/test_charfield.py": [
        "test_enum_choices_invalid_input",
        "test_charfield_cleans_empty_string_when_blank_true",
        "test_charfield_with_choices_raises_error_on_invalid_choice"
      ],
      "tests/model_fields/tests.py": [
        "test_blank_in_grouped_choices",
        "test_field_str",
        "test_get_choices",
        "test_choices_and_field_display",
        "test_check",
        "test_invalid_choice",
        "test_formfield",
        "test_flatchoices",
        "test_field_repr"
      ],
      "tests/model_regress/tests.py": [
        "test_chained_fks",
        "test_metaclass_can_access_attribute_dict"
      ],
      "tests/model_formsets/tests.py": [
        "test_inline_formsets",
        "test_outdated_deletion"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-5787",
    "file_function": {
      "testing/test_reports.py": [
        "test_extended_report_deserialization",
        "test_invalid_report_types",
        "test_reprentries_serialization_170",
        "test_collectreport_fail",
        "test_reprentries_serialization_196",
        "test_test_report",
        "test_collect_report",
        "test_xdist_report_longrepr_reprcrash_130",
        "test_paths_support",
        "test_unserialization_failure",
        "test_itemreport_outcomes"
      ],
      "testing/test_junitxml.py": [
        "test_summing_simple_with_errors",
        "test_setup_error_captures_stdout",
        "test_unicode_issue368",
        "test_setup_error_captures_stderr",
        "test_avoid_double_stdout"
      ],
      "testing/test_runner.py": [
        "test_failure_in_teardown_function",
        "test_unicode_in_longrepr",
        "test_report_extra_parameters"
      ],
      "testing/test_terminal.py": [
        "test_skip_counting_towards_summary",
        "test_pass_output_reporting"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-8548",
    "file_function": {
      "tests/test_ext_autodoc_configs.py": [
        "test_autoclass_content_init",
        "test_autodoc_typehints_none_for_overload",
        "test_autodoc_default_options_with_values",
        "test_autoclass_content_and_docstring_signature_init"
      ],
      "tests/test_ext_autodoc.py": [
        "test_autodoc_inner_class",
        "test_overload",
        "test_final",
        "test_autodoc_imported_members",
        "test_autodoc_inherited_members",
        "test_slots",
        "test_overload2",
        "test_autodoc_typed_inherited_instance_variables",
        "test_format_signature",
        "test_autodoc_typed_instance_variables",
        "test_autodoc_inherited_members_Base"
      ],
      "tests/test_ext_autodoc_autoclass.py": [
        "test_slots_attribute",
        "test_show_inheritance_for_subclass_of_generic_type"
      ]
    }
  },
  {
    "instance_id": "django__django-11133",
    "file_function": {
      "tests/responses/tests.py": [
        "test_generator_cache"
      ],
      "tests/httpwrappers/tests.py": [
        "test_file_interface",
        "test_non_string_content"
      ]
    }
  },
  {
    "instance_id": "django__django-12774",
    "file_function": {
      "tests/lookup/tests.py": [
        "test_in_bulk",
        "test_in_bulk_lots_of_ids",
        "test_in_bulk_non_unique_field"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-12973",
    "file_function": {
      "sklearn/linear_model/tests/test_least_angle.py": [
        "test_lasso_lars_ic"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-7454",
    "file_function": {
      "tests/test_domain_py.py": [
        "test_pyobject_prefix",
        "test_pyfunction",
        "test_optional_pyfunction_signature",
        "test_pydata_signature_old",
        "test_domain_py_xrefs",
        "test_parse_annotation"
      ]
    }
  },
  {
    "instance_id": "django__django-15252",
    "file_function": {
      "tests/migrations/test_executor.py": [
        "test_alter_id_type_with_fk",
        "test_migrate_marks_replacement_unapplied",
        "test_migrate_backward_to_squashed_migration"
      ],
      "tests/backends/base/test_creation.py": [
        "test_migrate_test_setting_true",
        "test_migrate_test_setting_false"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-14598",
    "file_function": {
      "astropy/io/fits/tests/test_checksum.py": [
        "test_compressed_image_data_float32",
        "test_failing_compressed_datasum"
      ],
      "astropy/io/fits/tests/test_header.py": [
        "test_header_fromstring_bytes",
        "test_fix_hierarch_with_invalid_value",
        "test_invalid_characters",
        "test_header_set_value_to_none",
        "test_specify_undefined_value",
        "test_update_invalid_card",
        "test_string_value_card",
        "test_update_numeric",
        "test_fix_invalid_equal_sign",
        "test_card_from_bytes",
        "test_fixable_non_fsc",
        "test_pattern_matching_keys",
        "test_complex_value_card"
      ]
    }
  },
  {
    "instance_id": "django__django-15851",
    "file_function": {
      "tests/dbshell/test_postgresql.py": [
        "test_passfile",
        "test_ssl_certificate",
        "test_crash_password_does_not_leak"
      ]
    }
  },
  {
    "instance_id": "django__django-15930",
    "file_function": {
      "tests/expressions_case/tests.py": [
        "test_aggregation_empty_cases",
        "test_condition_with_lookups",
        "test_in_subquery",
        "test_invalid_when_constructor_args",
        "test_annotate_with_empty_when",
        "test_empty_q_object",
        "test_annotate_with_aggregation_in_value",
        "test_annotate_with_aggregation_in_condition",
        "test_filter_with_aggregation_in_predicate"
      ]
    }
  },
  {
    "instance_id": "django__django-14608",
    "file_function": {
      "tests/forms_tests/tests/test_formsets.py": [
        "test_formset_total_error_count_with_non_form_errors"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-22865",
    "file_function": {
      "lib/matplotlib/tests/test_colorbar.py": [
        "test_colorbar_positioning",
        "test_contour_colorbar",
        "test_colorbar_minorticks_on_off",
        "test_colorbar_closed_patch",
        "test_colorbar_extension_shape"
      ],
      "lib/matplotlib/tests/test_contour.py": [
        "test_given_colors_levels_and_extends"
      ]
    }
  },
  {
    "instance_id": "django__django-14500",
    "file_function": {
      "tests/migrations/test_loader.py": [
        "test_load_module_file",
        "test_load_empty_dir",
        "test_loading_squashed_complex_multi_apps_partially_applied",
        "test_check_consistent_history"
      ],
      "tests/migrations/test_commands.py": [
        "test_unknown_prefix",
        "test_makemigrations_auto_merge_name",
        "test_migrations_no_operations",
        "test_sqlmigrate_ambiguous_prefix_squashed_migrations",
        "test_migrate_nonexistent_app_label",
        "test_migrate_app_name_specified_as_label",
        "test_sqlmigrate_replaced_migration",
        "test_migrate_fake_initial_case_insensitive",
        "test_sqlmigrate_nonexistent_app_label",
        "test_sqlmigrate_squashed_migration",
        "test_showmigrations_list_squashed"
      ],
      "tests/migrations/test_executor.py": [
        "test_alter_id_type_with_fk"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-13142",
    "file_function": {
      "sklearn/mixture/tests/test_gaussian_mixture.py": [
        "test_gaussian_mixture_attributes",
        "test_gaussian_mixture_fit_predict"
      ],
      "sklearn/mixture/tests/test_bayesian_mixture.py": [
        "test_bayesian_mixture_fit_predict"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-14496",
    "file_function": {
      "sklearn/cluster/tests/test_optics.py": [
        "test_wrong_cluster_method",
        "test_min_cluster_size_invalid",
        "test_min_samples_edge_case",
        "test_minimum_number_of_sample_check",
        "test_extract_dbscan",
        "test_dbscan_optics_parity",
        "test_close_extract",
        "test_min_cluster_size_invalid2",
        "test_bad_extract"
      ],
      "sklearn/tests/test_common.py": [
        "test_estimators"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-17318",
    "file_function": {
      "sympy/simplify/tests/test_sqrtdenest.py": [
        "test_sqrtdenest",
        "test_sqrtdenest3",
        "test_sqrtdenest2",
        "test_sqrtdenest4"
      ],
      "sympy/simplify/tests/test_radsimp.py": [
        "test_radsimp"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-14087",
    "file_function": {
      "sklearn/linear_model/tests/test_logistic.py": [
        "test_logistic_regression_sample_weights",
        "test_error",
        "test_logistic_regression_class_weights",
        "test_LogisticRegressionCV_no_refit",
        "test_logistic_cv_mock_scorer",
        "test_logistic_regressioncv_class_weights",
        "test_consistency_path",
        "test_l1_ratios_param",
        "test_ovr_multinomial_iris",
        "test_logistic_regression_multi_class_auto",
        "test_penalty_none",
        "test_logistic_regression_path_coefs_multinomial",
        "test_logistic_cv_score_does_not_warn_by_default"
      ]
    }
  },
  {
    "instance_id": "django__django-15103",
    "file_function": {
      "tests/template_tests/filter_tests/test_json_script.py": [
        "test_basic"
      ]
    }
  },
  {
    "instance_id": "django__django-14238",
    "file_function": {
      "tests/model_fields/test_integerfield.py": [
        "test_rel_db_type",
        "test_types"
      ],
      "tests/invalid_models_tests/test_models.py": [
        "test_pk"
      ],
      "tests/model_fields/test_autofield.py": [
        "test_isinstance_of_autofield"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-23950",
    "file_function": {
      "sympy/sets/tests/test_contains.py": [
        "test_as_set"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-13878",
    "file_function": {
      "sympy/stats/tests/test_continuous_rv.py": [
        "test_frechet",
        "test_studentt",
        "test_kumaraswamy",
        "test_laplace",
        "test_gamma_inverse",
        "test_nakagami",
        "test_prefab_sampling",
        "test_arcsin",
        "test_dagum",
        "test_logistic",
        "test_gamma"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-9673",
    "file_function": {
      "tests/test_ext_napoleon_docstring.py": [
        "test_section_header_formatting",
        "test_docstrings",
        "test_class_data_member",
        "test_class_data_member_inline",
        "test_list_in_parameter_description",
        "test_parameters_with_class_reference",
        "test_section_header_underline_length",
        "test_code_block_in_returns_section",
        "test_preprocess_types",
        "test_sphinx_admonitions",
        "test_see_also_refs",
        "test_raises_types",
        "test_custom_generic_sections",
        "test_noindex",
        "test_pep526_annotations",
        "test_underscore_in_attribute_strip_signature_backslash",
        "test_keywords_with_types"
      ],
      "tests/test_domain_py.py": [
        "test_info_field_list"
      ],
      "tests/test_ext_autodoc_configs.py": [
        "test_autodoc_typehints_description_no_undoc",
        "test_autodoc_typehints_description_for_invalid_node",
        "test_autodoc_typehints_description",
        "test_autodoc_typehints_description_and_type_aliases"
      ],
      "tests/test_ext_autodoc.py": [
        "test_format_signature",
        "test_autodoc",
        "test_autodoc_exception"
      ]
    }
  },
  {
    "instance_id": "django__django-16569",
    "file_function": {
      "tests/forms_tests/tests/test_formsets/FormsFormsetTestCase/test_empty_permitted_ignored_empty_form.py": [
        "test_empty_permitted_ignored_empty_form"
      ],
      "tests/forms_tests/tests/test_formsets.py": [
        "test_empty_formset_is_multipart",
        "test_formset_with_ordering_and_deletion"
      ],
      "tests/forms_tests/tests/test_formsets/FormsFormsetTestCase/test_absolute_max_invalid.py": [
        "test_absolute_max_invalid"
      ],
      "tests/forms_tests/tests/test_formsets/FormsFormsetTestCase/test_form_kwargs_empty_form.py": [
        "test_form_kwargs_empty_form"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-25102",
    "file_function": {
      "sklearn/utils/tests/test_set_output.py": [
        "test_auto_wrap_output_keys_errors_with_incorrect_input",
        "test__safe_set_output",
        "test_set_output_mro",
        "test_set_output_method"
      ],
      "sklearn/tests/test_base.py": [
        "test_clone_pandas_dataframe",
        "test_feature_names_in"
      ],
      "sklearn/compose/tests/test_column_transformer.py": [
        "test_transformers_with_pandas_out_but_not_feature_names_out"
      ],
      "sklearn/tests/test_common.py": [
        "test_global_output_transform_pandas",
        "test_set_output_transform_pandas"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-21847",
    "file_function": {
      "sympy/polys/tests/test_monomials.py": [
        "test_monomials"
      ]
    }
  },
  {
    "instance_id": "django__django-15277",
    "file_function": {
      "tests/expressions/tests.py": [
        "test_new_object_save"
      ],
      "tests/model_fields/test_charfield.py": [
        "test_lookup_integer_in_charfield",
        "test_deconstruct"
      ],
      "tests/expressions_case/tests.py": [
        "test_update_string",
        "test_simple_example"
      ],
      "tests/queries/test_query.py": [
        "test_iterable_lookup_value"
      ]
    }
  },
  {
    "instance_id": "pylint-dev__pylint-8898",
    "file_function": {
      "tests/config/test_config.py": [
        "test_csv_regex_error"
      ]
    }
  },
  {
    "instance_id": "psf__requests-2317",
    "file_function": {
      "tests/test_requests.py": [
        "test_json_param_post_content_type_works",
        "test_params_are_merged_case_sensitive",
        "test_request_cookie_overrides_session_cookie"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-23412",
    "file_function": {
      "lib/matplotlib/tests/test_path.py": [
        "test_arrow_contains_point"
      ],
      "lib/matplotlib/tests/test_axes.py": [
        "test_automatic_legend",
        "test_box_aspect",
        "test_stairs_options",
        "test_bar_uint8"
      ],
      "lib/matplotlib/tests/test_patches.py": [
        "test_default_capstyle",
        "test_patch_str",
        "test_degenerate_polygon",
        "test_negative_rect",
        "test_corner_center",
        "test_color_override_warning",
        "test_default_antialiased",
        "test_rotate_rect_draw",
        "test_default_joinstyle",
        "test_contains_points",
        "test_default_linestyle",
        "test_rotate_rect",
        "test_empty_verts",
        "test_patch_linestyle_none"
      ],
      "lib/matplotlib/tests/test_collections.py": [
        "test_pathcollection_legend_elements"
      ],
      "lib/matplotlib/tests/test_image.py": [
        "test_minimized_rasterized"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-16792",
    "file_function": {
      "sympy/utilities/tests/test_autowrap.py": [
        "test_cython_wrapper_inoutarg",
        "test_autowrap_args",
        "test_cython_wrapper_scalar_function",
        "test_cython_wrapper_compile_flags"
      ],
      "sympy/utilities/tests/test_codegen.py": [
        "test_ccode_cse",
        "test_output_arg_c",
        "test_multiple_results_c",
        "test_numbersymbol_c_code",
        "test_ccode_results_named_ordered",
        "test_dummy_loops_c"
      ],
      "sympy/external/tests/test_codegen.py": [
        "test_complicated_codegen",
        "test_intrinsic_math1_codegen",
        "test_basic_codegen"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-12481",
    "file_function": {
      "sympy/combinatorics/tests/test_perm_groups.py": [
        "test_coset_transvesal",
        "test_coset_table"
      ],
      "sympy/combinatorics/tests/test_permutations.py": [
        "test_args",
        "test_Permutation",
        "test_ranking",
        "test_printing_cyclic",
        "test_mul",
        "test_from_sequence",
        "test_printing_non_cyclic"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-12096",
    "file_function": {
      "sympy/core/tests/test_expr.py": [
        "test_leadterm2",
        "test_is_constant",
        "test_as_ordered_terms"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-24066",
    "file_function": {
      "sympy/physics/units/tests/test_quantities.py": [
        "test_units",
        "test_quantity_abs"
      ],
      "sympy/physics/units/tests/test_dimensions.py": [
        "test_Dimension_mul_div_exp",
        "test_Dimension_add_sub",
        "test_Dimension_functions",
        "test_Dimension_properties"
      ],
      "sympy/physics/units/tests/test_dimensionsystem.py": [
        "test_extend",
        "test_print_dim_base",
        "test_is_consistent",
        "test_dim"
      ],
      "sympy/physics/units/tests/test_unit_system_cgs_gauss.py": [
        "test_cgs_gauss_convert_constants"
      ]
    }
  },
  {
    "instance_id": "django__django-13794",
    "file_function": {
      "tests/template_tests/filter_tests/test_add.py": [
        "test_add03",
        "test_add02"
      ]
    }
  },
  {
    "instance_id": "django__django-16901",
    "file_function": {
      "tests/queries/tests/QuerySetBitwiseOperationTests/test_xor_with_both_slice.py": [
        "test_xor_with_both_slice"
      ],
      "tests/queries/tests/QuerySetBitwiseOperationTests/test_xor_with_both_slice_and_ordering.py": [
        "test_xor_with_both_slice_and_ordering"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-4094",
    "file_function": {
      "xarray/tests/test_dataarray.py": [
        "test_to_unstacked_dataset_raises_value_error",
        "test_stack_unstack"
      ],
      "xarray/tests/test_dataset.py": [
        "test_unstack_fill_value",
        "test_unstack_sparse",
        "test_to_stacked_array_to_unstacked_dataset",
        "test_to_stacked_array_to_unstacked_dataset_different_dimension"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-23299",
    "file_function": {
      "lib/matplotlib/tests/test_figure.py": [
        "test_too_many_figures",
        "test_clf_keyword",
        "test_figure",
        "test_figure_label"
      ],
      "lib/matplotlib/tests/test_rcparams.py": [
        "test_rcparams"
      ],
      "lib/matplotlib/tests/test_pyplot.py": [
        "test_pyplot_box",
        "test_ion",
        "test_ioff",
        "test_nested_ion_ioff"
      ],
      "lib/matplotlib/tests/test_backend_template.py": [
        "test_new_manager"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-10908",
    "file_function": {
      "sklearn/feature_extraction/tests/test_text.py": [
        "test_count_vectorizer_max_features",
        "test_tfidfvectorizer_binary",
        "test_vectorizer_inverse_transform",
        "test_vectorizer_max_features",
        "test_vectorizer_min_df",
        "test_non_unique_vocab",
        "test_countvectorizer_empty_vocabulary",
        "test_vectorizer_string_object_as_input",
        "test_vectorizer",
        "test_countvectorizer_vocab_sets_when_pickling"
      ]
    }
  },
  {
    "instance_id": "django__django-16485",
    "file_function": {
      "tests/template_tests/filter_tests/test_floatformat/FunctionTests/test_unlocalize.py": [
        "test_unlocalize"
      ],
      "tests/template_tests/filter_tests/test_floatformat/FunctionTests/test_force_grouping.py": [
        "test_force_grouping"
      ],
      "tests/template_tests/filter_tests/test_floatformat/FunctionTests/test_infinity.py": [
        "test_infinity"
      ],
      "tests/template_tests/filter_tests/test_floatformat/FunctionTests/test_inputs.py": [
        "test_inputs"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-7336",
    "file_function": {
      "astropy/units/tests/test_quantity_decorator.py": [
        "test_args_nonquantity",
        "test_kwargs_extra",
        "test_args_None_kwarg",
        "test_unused_kwargs",
        "test_args_None",
        "test_kwargs"
      ]
    }
  },
  {
    "instance_id": "django__django-13033",
    "file_function": {
      "tests/queries/tests.py": [
        "test_tickets_7087_12242",
        "test_ticket7098",
        "test_ticket7791",
        "test_ticket10432",
        "test_tickets_5324_6704",
        "test_field_error_values_list",
        "test_error_raised_on_filter_with_dictionary",
        "test_subquery_exclude_outerref",
        "test_extra_values_order_multiple",
        "test_ticket7096",
        "test_ticket7155"
      ],
      "tests/ordering/tests.py": [
        "test_random_ordering",
        "test_order_by_constant_value"
      ],
      "tests/queries/test_query.py": [
        "test_foreign_key",
        "test_filter_non_conditional"
      ],
      "tests/foreign_object/test_agnostic_order_trimjoin.py": [
        "test_deep_mixed_backward"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-9602",
    "file_function": {
      "tests/test_domain_py.py": [
        "test_canonical_definition_skip",
        "test_python_python_use_unqualified_type_names_disabled",
        "test_parse_annotation",
        "test_get_full_qualified_name",
        "test_pydata_with_union_type_operator",
        "test_canonical_duplicated",
        "test_optional_pyfunction_signature",
        "test_canonical_definition_overrides",
        "test_python_python_use_unqualified_type_names",
        "test_domain_py_canonical",
        "test_pyfunction_with_union_type_operator"
      ],
      "tests/test_ext_autodoc_configs.py": [
        "test_autodoc_typehints_description",
        "test_autodoc_typehints_description_no_undoc"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-14096",
    "file_function": {
      "astropy/coordinates/tests/test_sky_coord.py": [
        "test_multiple_aliases"
      ],
      "astropy/coordinates/tests/test_api_ape5.py": [
        "test_highlevel_api"
      ]
    }
  },
  {
    "instance_id": "django__django-13109",
    "file_function": {
      "tests/validation/tests.py": [
        "test_limited_FK_raises_error",
        "test_wrong_FK_value_raises_error"
      ]
    }
  },
  {
    "instance_id": "django__django-14580",
    "file_function": {
      "tests/migrations/test_commands.py": [
        "test_makemigrations_auto_merge_name",
        "test_makemigrations_migrations_modules_nonexistent_toplevel_package",
        "test_squashmigrations_initial_attribute",
        "test_makemigrations_default_merge_name",
        "test_makemigrations_empty_connections",
        "test_files_content"
      ],
      "tests/migrations/test_writer.py": [
        "test_migration_path",
        "test_register_serializer"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-3095",
    "file_function": {
      "xarray/tests/test_variable.py": [
        "test_quantile",
        "test_coarsen",
        "test_getitem_fancy",
        "test_no_conflicts",
        "test_repr_lazy_data",
        "test_getitem_1d_fancy",
        "test_isel",
        "test_inplace_math",
        "test_rank_dask_raises",
        "test_unstack_errors",
        "test_stack_errors",
        "test_squeeze",
        "test_data",
        "test_data_and_values",
        "test_broadcast_equals",
        "test_rank",
        "test_shift",
        "test_concat_periods",
        "test_stack",
        "test_quantile_dask_raises",
        "test_set_dims",
        "test_roll",
        "test_reduce_keepdims",
        "test_reduce",
        "test_roll_consistency",
        "test_get_level_variable",
        "test_name",
        "test_setitem_fancy",
        "test_equals_and_identical",
        "test_as_variable",
        "test_getitem_with_mask_nd_indexer"
      ],
      "xarray/tests/test_dataarray.py": [
        "test_rolling_wrapped_dask_nochunk",
        "test_upsample_interpolate",
        "test_to_and_from_dict",
        "test_copy_with_data",
        "test_upsample_interpolate_dask",
        "test_isel_fancy",
        "test_rolling_wrapped_dask",
        "test_properties",
        "test_math",
        "test_fillna",
        "test_groupby_math",
        "test_groupby_multidim_apply",
        "test_real_and_imag",
        "test_rank",
        "test_reduce_keepdims_bottleneck"
      ],
      "xarray/tests/test_dask.py": [
        "test_persist_DataArray",
        "test_persist_Dataset",
        "test_concat",
        "test_chunk",
        "test_compute",
        "test_dask_layers_and_dependencies",
        "test_bivariate_ufunc",
        "test_roll",
        "test_univariate_ufunc",
        "test_shift"
      ],
      "xarray/tests/test_merge.py": [
        "test_merge_no_conflicts_single_var",
        "test_merge_no_conflicts"
      ],
      "xarray/tests/test_dataset.py": [
        "test_coarsen",
        "test_differentiate_datetime",
        "test_lazy_load",
        "test_to_stacked_array_to_unstacked_dataset",
        "test_coarsen_coords",
        "test_copy_with_data",
        "test_stack_unstack_fast",
        "test_dataset_array_math",
        "test_to_and_from_dict",
        "test_dataset_math_errors"
      ],
      "xarray/tests/test_indexing.py": [
        "test_outer_indexer_consistency_with_broadcast_indexes_vectorized"
      ]
    }
  },
  {
    "instance_id": "django__django-14315",
    "file_function": {
      "tests/dbshell/test_postgresql.py": [
        "test_ssl_certificate",
        "test_crash_password_does_not_leak",
        "test_passfile"
      ],
      "tests/backends/base/test_client.py": [
        "test_settings_to_cmd_args_env"
      ],
      "tests/dbshell/tests.py": [
        "test_command_missing"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-24627",
    "file_function": {
      "lib/matplotlib/tests/test_artist.py": [
        "test_callbacks",
        "test_set_alpha",
        "test_clipping",
        "test_properties",
        "test_format_cursor_data_BoundaryNorm",
        "test_set_is_overwritten",
        "test_set_alpha_for_array",
        "test_None_zorder"
      ],
      "lib/matplotlib/tests/test_axes.py": [
        "test_subclass_clear_cla",
        "test_automatic_legend",
        "test_imshow_clip",
        "test_stairs_options",
        "test_as_mpl_axes_api",
        "test_hist_zorder"
      ],
      "lib/matplotlib/tests/test_figure.py": [
        "test_ginput",
        "test_align_labels_stray_axes",
        "test_animated_with_canvas_change",
        "test_add_artist",
        "test_picking_does_not_stale",
        "test_figure_legend",
        "test_deepcopy"
      ],
      "lib/matplotlib/tests/test_pyplot.py": [
        "test_subplot_projection_reuse"
      ],
      "lib/matplotlib/tests/test_transforms.py": [
        "test_external_transform_api"
      ],
      "lib/matplotlib/tests/test_collections.py": [
        "test_alpha_validation"
      ]
    }
  },
  {
    "instance_id": "django__django-15315",
    "file_function": {
      "tests/validation/test_unique.py": [
        "test_unique_errors"
      ],
      "tests/model_fields/test_field_flags.py": [
        "test_hidden_flag"
      ],
      "tests/model_fields/tests.py": [
        "test_overriding_inherited_FIELD_display"
      ],
      "tests/model_fields/test_foreignkey.py": [
        "test_warning_when_unique_true_on_fk"
      ],
      "tests/validation/tests.py": [
        "test_wrong_FK_value_raises_error"
      ]
    }
  },
  {
    "instance_id": "django__django-13158",
    "file_function": {
      "tests/model_forms/tests.py": [
        "test_m2m_editing",
        "test_initial_values",
        "test_model_multiple_choice_field",
        "test_validate_foreign_key_to_model_with_overridden_manager"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-13439",
    "file_function": {
      "sklearn/tests/test_pipeline.py": [
        "test_pipeline_index",
        "test_pipeline_memory",
        "test_pipeline_transform",
        "test_pipeline_init",
        "test_fit_predict_with_intermediate_fit_params",
        "test_pipeline_with_cache_attribute",
        "test_pipeline_methods_preprocessing_svm",
        "test_pipeline_slice",
        "test_set_pipeline_step_passthrough",
        "test_pipeline_sample_weight_supported",
        "test_classes_property"
      ],
      "sklearn/model_selection/tests/test_search.py": [
        "test_grid_search_allows_nans"
      ],
      "sklearn/model_selection/tests/test_validation.py": [
        "test_cross_val_score_allow_nans"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-7590",
    "file_function": {
      "tests/test_domain_py.py": [
        "test_domain_py_objects"
      ],
      "tests/test_domain_cpp.py": [
        "test_fundamental_types",
        "test_concept_definitions",
        "test_xref_parsing",
        "test_attributes",
        "test_initializers",
        "test_operators",
        "test_templates",
        "test_template_args",
        "test_expressions",
        "test_build_domain_cpp_backslash_ok",
        "test_function_definitions",
        "test_member_definitions",
        "test_class_definitions"
      ],
      "tests/test_domain_js.py": [
        "test_domain_js_objects"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-19495",
    "file_function": {
      "sympy/sets/tests/test_conditionset.py": [
        "test_subs_CondSet_tebr",
        "test_subs_CondSet"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-3677",
    "file_function": {
      "xarray/tests/test_merge.py": [
        "test_merge_fill_value",
        "test_merge_wrong_input_error"
      ],
      "xarray/tests/test_dataset.py": [
        "test_constructor_pandas_single"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-14182",
    "file_function": {
      "astropy/io/ascii/tests/test_write.py": [
        "test_roundtrip_masked"
      ]
    }
  },
  {
    "instance_id": "django__django-15916",
    "file_function": {
      "tests/model_formsets/tests.py": [
        "test_unique_together_with_inlineformset_factory",
        "test_inline_formsets_with_custom_save_method",
        "test_modelformset_factory_labels_overrides",
        "test_modelformset_factory_widgets",
        "test_unique_validation",
        "test_modelformset_factory_help_text_overrides",
        "test_modelformset_factory_field_class_overrides",
        "test_modelformset_factory_error_messages_overrides"
      ],
      "tests/forms_tests/tests/tests.py": [
        "test_m2m_field_exclusion",
        "test_formfield_initial"
      ],
      "tests/model_forms/tests.py": [
        "test_m2m_editing",
        "test_custom_error_messages",
        "test_model_clean_error_messages",
        "test_missing_fields_attribute",
        "test_no_model_class",
        "test_extra_field_modelform_factory",
        "test_limit_fields_with_string",
        "test_inherit_after_custom_callback",
        "test_exclude_fields_with_string",
        "test_initial_values",
        "test_model_form_refuses_arbitrary_string",
        "test_override_unique_together_message",
        "test_validates_with_replaced_field_excluded",
        "test_save_with_data_errors",
        "test_subset_fields",
        "test_extra_field_model_form"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-15017",
    "file_function": {
      "sympy/tensor/array/tests/test_mutable_ndim_array.py": [
        "test_ndim_array_initiation"
      ],
      "sympy/tensor/array/tests/test_ndim_array_conversions.py": [
        "test_NDim_array_conv"
      ],
      "sympy/tensor/array/tests/test_immutable_ndim_array.py": [
        "test_ndim_array_initiation"
      ]
    }
  },
  {
    "instance_id": "django__django-13346",
    "file_function": {
      "tests/model_fields/test_jsonfield.py": [
        "test_deep_lookup_mixed",
        "test_formfield",
        "test_formfield_custom_encoder_decoder",
        "test_deconstruct_custom_encoder_decoder",
        "test_validation_error",
        "test_get_transforms",
        "test_key_transform_expression",
        "test_dumping",
        "test_invalid_decoder",
        "test_none_key_and_exact_lookup",
        "test_invalid_encoder"
      ]
    }
  },
  {
    "instance_id": "django__django-16950",
    "file_function": {
      "tests/model_forms/tests/UniqueTest/test_inherited_unique.py": [
        "test_inherited_unique"
      ],
      "tests/model_formsets/tests/ModelFormsetTest/test_unique_together_with_inlineformset_factory.py": [
        "test_unique_together_with_inlineformset_factory"
      ],
      "tests/admin_views/tests/SaveAsTests/test_save_as_new_with_validation_errors_with_inlines.py": [
        "test_save_as_new_with_validation_errors_with_inlines"
      ],
      "tests/admin_inlines/tests.py": [
        "test_stacked_inline_hidden_field_with_view_only_permissions",
        "test_inline_hidden_field_no_column"
      ],
      "tests/admin_views/tests.py": [
        "test_char_pk_inline",
        "test_change_view_with_view_and_delete_inlines",
        "test_integer_pk_inline",
        "test_edit_save_as_delete_inline"
      ],
      "tests/model_forms/tests.py": [
        "test_setattr_raises_validation_error_non_field",
        "test_empty_fields_to_construct_instance"
      ],
      "tests/model_formsets/tests/ModelFormsetTest/test_inlineformset_with_arrayfield.py": [
        "test_inlineformset_with_arrayfield"
      ],
      "tests/model_formsets/tests/ModelFormsetTest/test_custom_pk.py": [
        "test_custom_pk"
      ],
      "tests/model_formsets/tests/ModelFormsetTest/test_commit_false.py": [
        "test_commit_false"
      ],
      "tests/model_forms/tests/ModelFormBaseTest/test_invalid_meta_model.py": [
        "test_invalid_meta_model"
      ],
      "tests/model_formsets/tests/ModelFormsetTest/test_edit_only.py": [
        "test_edit_only"
      ],
      "tests/model_forms/tests/ModelFormBaseTest/test_no_model_class.py": [
        "test_no_model_class"
      ],
      "tests/model_forms/tests/FileAndImageFieldTests/test_file_field_data.py": [
        "test_file_field_data"
      ],
      "tests/model_formsets/tests/ModelFormsetTest/test_prevent_duplicates_from_with_the_same_formset.py": [
        "test_prevent_duplicates_from_with_the_same_formset"
      ],
      "tests/modeladmin/tests.py": [
        "test_raw_id_fields_widget_override"
      ],
      "tests/model_forms/tests/UniqueTest/test_override_unique_together_message.py": [
        "test_override_unique_together_message"
      ],
      "tests/model_formsets/tests/ModelFormsetTest/test_validation_with_invalid_id.py": [
        "test_validation_with_invalid_id"
      ],
      "tests/model_forms/tests/ValidationTest/test_validates_with_replaced_field_excluded.py": [
        "test_validates_with_replaced_field_excluded"
      ],
      "tests/model_formsets/tests/ModelFormsetTest/test_simple_save.py": [
        "test_simple_save"
      ],
      "tests/model_forms/tests/ModelFormBasicTests/test_save_with_data_errors.py": [
        "test_save_with_data_errors"
      ],
      "tests/model_formsets/tests/ModelFormsetTest/test_model_formset_with_custom_pk.py": [
        "test_model_formset_with_custom_pk"
      ],
      "tests/model_forms/tests/ModelFormBasicTests/test_subset_fields.py": [
        "test_subset_fields"
      ],
      "tests/admin_views/tests/SaveAsTests/test_save_as_new_with_inlines_with_validation_errors.py": [
        "test_save_as_new_with_inlines_with_validation_errors"
      ],
      "tests/model_formsets/tests/ModelFormsetTest/test_model_formset_with_initial_model_instance.py": [
        "test_model_formset_with_initial_model_instance"
      ],
      "tests/admin_views/tests/UserAdminTest/test_save_button.py": [
        "test_save_button"
      ],
      "tests/model_formsets/tests/ModelFormsetTest/test_model_formset_with_initial_queryset.py": [
        "test_model_formset_with_initial_queryset"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-25973",
    "file_function": {
      "sklearn/model_selection/tests/test_validation.py": [
        "test_cross_validate",
        "test_cross_val_score_mask",
        "test_cross_validate_return_indices"
      ],
      "sklearn/feature_selection/tests/test_sequential.py": [
        "test_n_features_to_select",
        "test_n_features_to_select_auto",
        "test_forward_neg_tol_error",
        "test_n_features_to_select_float",
        "test_raise_deprecation_warning",
        "test_n_features_to_select_stopping_criterion",
        "test_bad_n_features_to_select"
      ],
      "sklearn/model_selection/tests/test_split.py": [
        "test_check_cv",
        "test_cv_iterable_wrapper"
      ]
    }
  },
  {
    "instance_id": "django__django-16256",
    "file_function": {
      "tests/many_to_many/tests.py": [
        "test_assign_forward",
        "test_related_manager_refresh",
        "test_assign_reverse",
        "test_add",
        "test_set",
        "test_add_then_remove_after_prefetch",
        "test_clear_after_prefetch",
        "test_remove",
        "test_reverse_assign_with_queryset",
        "test_forward_assign_with_queryset"
      ],
      "tests/many_to_one/tests.py": [
        "test_assign",
        "test_add_remove_set_by_pk_raises",
        "test_add_then_remove_after_prefetch",
        "test_clear_after_prefetch",
        "test_set_after_prefetch",
        "test_reverse_assignment_deprecation",
        "test_relation_unsaved",
        "test_add"
      ],
      "tests/m2m_through_regress/tests.py": [
        "test_m2m_relations_unusable_on_null_pk_obj",
        "test_add_related_null",
        "test_add_null_reverse"
      ],
      "tests/m2m_regress/tests.py": [
        "test_m2m_inheritance_symmetry",
        "test_multiple_m2m"
      ],
      "tests/model_fields/test_manytomanyfield.py": [
        "test_abstract_model_app_relative_foreign_key",
        "test_value_from_object_instance_with_pk"
      ]
    }
  },
  {
    "instance_id": "django__django-13741",
    "file_function": {
      "tests/auth_tests/test_views.py": [
        "test_user_not_change",
        "test_user_change_email"
      ],
      "tests/auth_tests/test_forms.py": [
        "test_bug_19349_bound_password_field",
        "test_readonly_field_has_changed"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-14539",
    "file_function": {
      "astropy/io/fits/tests/test_diff.py": [
        "test_different_table_field_counts",
        "test_ignore_table_fields",
        "test_different_table_data",
        "test_diff_empty_tables",
        "test_different_table_field_names"
      ],
      "astropy/io/fits/tests/test_convenience.py": [
        "test_printdiff"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-20916",
    "file_function": {
      "sympy/printing/pretty/tests/test_pretty.py": [
        "test_upretty_greek",
        "test_pretty_unicode_str",
        "test_pretty_sqrt_char_knob"
      ]
    }
  },
  {
    "instance_id": "django__django-15572",
    "file_function": {
      "tests/template_tests/test_autoreloader.py": [
        "test_watch_for_template_changes",
        "test_non_template_changed_in_template_directory",
        "test_template_changed",
        "test_non_template_changed"
      ]
    }
  },
  {
    "instance_id": "django__django-11206",
    "file_function": {
      "tests/utils_tests/test_numberformat.py": [
        "test_format_number",
        "test_decimal_numbers"
      ],
      "tests/i18n/tests.py": [
        "test_locale_independent",
        "test_l10n_enabled"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-8265",
    "file_function": {
      "tests/test_domain_py.py": [
        "test_pydata_signature_old",
        "test_pyobject_prefix",
        "test_pyfunction",
        "test_pyfunction_signature_full",
        "test_pymethod_options",
        "test_optional_pyfunction_signature",
        "test_domain_py_xrefs",
        "test_pyfunction_signature_full_py38"
      ],
      "tests/test_ext_autodoc_configs.py": [
        "test_autodoc_typehints_description_for_invalid_node"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-15599",
    "file_function": {
      "sympy/core/tests/test_arit.py": [
        "test_Mod",
        "test_Pow_is_real",
        "test_Mod_is_integer"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-8721",
    "file_function": {
      "tests/test_ext_viewcode.py": [
        "test_local_source_files"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-11618",
    "file_function": {
      "sympy/geometry/tests/test_point.py": [
        "test_point3D",
        "test_point"
      ],
      "sympy/geometry/tests/test_util.py": [
        "test_farthest_points_closest_points"
      ]
    }
  },
  {
    "instance_id": "django__django-12858",
    "file_function": {
      "tests/check_framework/test_model_checks.py": [
        "test_collision_across_apps_database_routers_installed",
        "test_collision_in_same_app_database_routers_installed",
        "test_collision_in_same_model",
        "test_collision_across_apps"
      ],
      "tests/ordering/tests.py": [
        "test_orders_nulls_first_on_filtered_subquery"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-10051",
    "file_function": {
      "testing/logging/test_fixture.py": [
        "test_caplog_captures_for_all_stages",
        "test_clear"
      ]
    }
  },
  {
    "instance_id": "django__django-11400",
    "file_function": {
      "tests/admin_filters/tests.py": [
        "test_relatedonlyfieldlistfilter_foreignkey",
        "test_relatedfieldlistfilter_manytomany",
        "test_relatedfieldlistfilter_foreignkey_ordering_reverse",
        "test_relatedfieldlistfilter_foreignkey",
        "test_relatedonlyfieldlistfilter_underscorelookup_foreignkey",
        "test_relatedonlyfieldlistfilter_manytomany"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-3305",
    "file_function": {
      "xarray/tests/test_computation.py": [
        "test_apply_input_core_dimension",
        "test_output_wrong_number",
        "test_apply_exclude",
        "test_output_wrong_dim_size",
        "test_apply_dask",
        "test_apply_output_core_dimension",
        "test_output_wrong_dims"
      ],
      "xarray/tests/test_dataset.py": [
        "test_quantile"
      ],
      "xarray/tests/test_ufuncs.py": [
        "test_numpy_ufuncs"
      ],
      "xarray/tests/test_dataarray.py": [
        "test_isin",
        "test_quantile"
      ],
      "xarray/tests/test_missing.py": [
        "test_ffill_dask",
        "test_interpolate_dask"
      ]
    }
  },
  {
    "instance_id": "django__django-16938",
    "file_function": {
      "tests/serializers/tests.py": [
        "test_serialize_no_only_pk_with_natural_keys"
      ],
      "tests/fixtures/tests/FixtureLoadingTests/test_loading_and_dumping.py": [
        "test_loading_and_dumping"
      ],
      "tests/fixtures/tests/ForwardReferenceTests/test_forward_reference_m2m_natural_key.py": [
        "test_forward_reference_m2m_natural_key"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-20488",
    "file_function": {
      "lib/matplotlib/tests/test_colors.py": [
        "test_ndarray_subclass_norm"
      ],
      "lib/matplotlib/tests/test_image.py": [
        "test_format_cursor_data",
        "test_imshow_float128",
        "test_jpeg_alpha",
        "test_empty_imshow",
        "test_respects_bbox",
        "test_full_invalid",
        "test_image_preserve_size2",
        "test_composite",
        "test_mask_image_all"
      ],
      "lib/matplotlib/tests/test_colorbar.py": [
        "test_colorbar_format"
      ],
      "lib/matplotlib/tests/test_axes.py": [
        "test_hexbin_log"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-25931",
    "file_function": {
      "sklearn/ensemble/tests/test_iforest.py": [
        "test_max_samples_attribute",
        "test_iforest_error",
        "test_iforest"
      ],
      "sklearn/tests/test_common.py": [
        "test_set_output_transform_pandas",
        "test_global_output_transform_pandas",
        "test_estimators",
        "test_pandas_column_name_consistency"
      ],
      "sklearn/tests/test_base.py": [
        "test_feature_names_in"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-25287",
    "file_function": {
      "lib/matplotlib/tests/test_axes.py": [
        "test_remove_shared_axes",
        "test_bar_timedelta",
        "test_inset_polar",
        "test_matshow",
        "test_spy",
        "test_date_timezone_x_and_y",
        "test_autoscale_log_shared",
        "test_secondary_xy",
        "test_twinx_cla",
        "test_offset_text_visible",
        "test_offset_label_color"
      ],
      "lib/matplotlib/tests/test_ticker.py": [
        "test_polar_axes"
      ],
      "lib/matplotlib/tests/test_figure.py": [
        "test_align_labels_stray_axes"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-10673",
    "file_function": {
      "tests/test_build.py": [
        "test_build_all",
        "test_circular_toctree",
        "test_numbered_circular_toctree"
      ],
      "tests/test_build_html.py": [
        "test_html_sidebar",
        "test_html_baseurl"
      ],
      "tests/test_toctree.py": [
        "test_relations",
        "test_numbered_toctree",
        "test_singlehtml_toctree"
      ],
      "tests/test_config.py": [
        "test_nitpick_base"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-20590",
    "file_function": {
      "sympy/core/tests/test_basic.py": [
        "test_call",
        "test_as_dummy",
        "test_replace_exceptions",
        "test_rewrite",
        "test_matches_basic",
        "test_doit",
        "test_subs",
        "test_sorted_args"
      ],
      "sympy/core/tests/test_match.py": [
        "test_match_bound",
        "test_derivative2",
        "test_match_deriv_bug1",
        "test_complex"
      ],
      "sympy/core/tests/test_expr.py": [
        "test_issue_11877",
        "test_replace",
        "test_is_constant",
        "test_find",
        "test_leadterm"
      ],
      "sympy/core/tests/test_subs.py": [
        "test_issue_2877",
        "test_issue_8886",
        "test_subs_Matrix",
        "test_dict_set",
        "test_subs_dict1"
      ],
      "sympy/core/tests/test_symbol.py": [
        "test_Dummy_force_dummy_index",
        "test_unicode",
        "test_Wild_properties",
        "test_Str"
      ],
      "sympy/core/tests/test_assumptions.py": [
        "test_sanitize_assumptions"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-26342",
    "file_function": {
      "lib/matplotlib/tests/test_collections.py": [
        "test_set_offsets_late",
        "test__EventCollection__set_positions",
        "test_blended_collection_autolim"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-13496",
    "file_function": {
      "sklearn/ensemble/tests/test_iforest.py": [
        "test_iforest_subsampled_features",
        "test_iforest_error",
        "test_iforest_chunks_works1",
        "test_iforest_sparse",
        "test_iforest_chunks_works2",
        "test_iforest_works"
      ]
    }
  },
  {
    "instance_id": "django__django-13786",
    "file_function": {
      "tests/migrations/test_optimizer.py": [
        "test_create_alter_model_options",
        "test_create_alter_index_field",
        "test_optimize_through_fields",
        "test_create_alter_owrt_delete_model",
        "test_create_alter_unique_field",
        "test_create_alter_owrt_field",
        "test_optimize_elidable_operation"
      ],
      "tests/migrations/test_operations.py": [
        "test_alter_model_options_emptying",
        "test_alter_model_options"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-9461",
    "file_function": {
      "tests/test_ext_autodoc_configs.py": [
        "test_autoclass_content_both",
        "test_autoclass_content_init",
        "test_autodoc_default_options",
        "test_autodoc_class_signature_separated_init",
        "test_autodoc_typehints_description_with_documented_init_no_undoc",
        "test_autodoc_class_signature_separated_new",
        "test_autodoc_typehints_description_with_documented_init",
        "test_autodoc_typehints_signature"
      ],
      "tests/test_ext_autodoc.py": [
        "test_singledispatchmethod",
        "test_autodoc_warnings",
        "test_overload",
        "test_abstractmethods",
        "test_autodoc_inner_class",
        "test_format_signature",
        "test_final",
        "test_canonical",
        "test_singledispatchmethod_automethod",
        "test_autodoc_inherited_members_None",
        "test_autodoc_imported_members",
        "test_autodoc"
      ],
      "tests/test_ext_autodoc_autoclass.py": [
        "test_show_inheritance_for_subclass_of_generic_type",
        "test_properties",
        "test_autodoc_process_bases"
      ]
    }
  },
  {
    "instance_id": "django__django-16877",
    "file_function": {
      "tests/template_tests/filter_tests/test_safeseq/SafeseqTests/test_safeseq02.py": [
        "test_safeseq02"
      ],
      "tests/template_tests/filter_tests/test_force_escape/ForceEscapeTests/test_force_escape07.py": [
        "test_force_escape07"
      ],
      "tests/template_tests/filter_tests/test_safeseq/SafeseqTests/test_safeseq01.py": [
        "test_safeseq01"
      ],
      "tests/template_tests/filter_tests/test_force_escape/ForceEscapeTests/test_force_escape08.py": [
        "test_force_escape08"
      ],
      "tests/template_tests/filter_tests/test_force_escape/ForceEscapeTests/test_force_escape05.py": [
        "test_force_escape05"
      ]
    }
  },
  {
    "instance_id": "django__django-15863",
    "file_function": {
      "tests/template_tests/filter_tests/test_floatformat.py": [
        "test_unlocalize",
        "test_infinity",
        "test_force_grouping",
        "test_inputs"
      ]
    }
  },
  {
    "instance_id": "django__django-12713",
    "file_function": {
      "tests/admin_widgets/tests.py": [
        "test_nonexistent_target_id",
        "test_invalid_target_id",
        "test_choices_with_radio_fields",
        "test_field_with_choices"
      ],
      "tests/admin_views/tests.py": [
        "test_user_permission_performance",
        "test_changelist_input_html",
        "test_change_view",
        "test_add_view"
      ],
      "tests/admin_inlines/tests.py": [
        "test_inline_primary"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-6599",
    "file_function": {
      "xarray/tests/test_duck_array_ops.py": [
        "test_datetime_to_numeric_cftime",
        "test_datetime_to_numeric_datetime64",
        "test_timedelta_to_numeric",
        "test_pd_timedelta_to_float",
        "test_cftime_datetime_mean"
      ]
    }
  },
  {
    "instance_id": "django__django-11451",
    "file_function": {
      "tests/auth_tests/test_remote_user.py": [
        "test_user_switch_forces_new_login",
        "test_no_remote_user"
      ],
      "tests/auth_tests/test_forms.py": [
        "test_inactive_user"
      ],
      "tests/auth_tests/test_auth_backends.py": [
        "test_authenticate"
      ],
      "tests/auth_tests/test_views.py": [
        "test_permission_required_logged_in"
      ]
    }
  },
  {
    "instance_id": "django__django-15278",
    "file_function": {
      "tests/schema/tests.py": [
        "test_alter_not_unique_field_to_primary_key",
        "test_m2m",
        "test_add_field_default_dropped",
        "test_m2m_repoint_inherited",
        "test_db_collation_charfield",
        "test_m2m_repoint_custom",
        "test_remove_unique_together_does_not_remove_meta_constraints",
        "test_rename_referenced_field",
        "test_m2m_repoint",
        "test_alter_field_db_collation"
      ],
      "tests/migrations/test_executor.py": [
        "test_alter_id_type_with_fk",
        "test_migrate_backward_to_squashed_migration"
      ],
      "tests/migrations/test_operations.py": [
        "test_rename_field_case",
        "test_repoint_field_m2m",
        "test_add_partial_unique_constraint"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-13647",
    "file_function": {
      "sympy/matrices/tests/test_matrices.py": [
        "test_errors",
        "test_issue_10770",
        "test_col_insert"
      ],
      "sympy/matrices/tests/test_commonmatrix.py": [
        "test_col_insert"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-8707",
    "file_function": {
      "astropy/io/fits/tests/test_image.py": [
        "test_bzero_mishandled_info"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-23534",
    "file_function": {
      "sympy/core/tests/test_symbol.py": [
        "test_symbols",
        "test_unicode"
      ],
      "sympy/core/tests/test_function.py": [
        "test_function_assumptions",
        "test_function__eval_nseries"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-11578",
    "file_function": {
      "sklearn/linear_model/tests/test_logistic.py": [
        "test_logistic_regression_sample_weights",
        "test_error",
        "test_logistic_regressioncv_class_weights",
        "test_logreg_predict_proba_multinomial",
        "test_lr_liblinear_warning",
        "test_ovr_multinomial_iris",
        "test_logistic_regression_class_weights",
        "test_logistic_cv_mock_scorer",
        "test_n_iter",
        "test_logreg_l1",
        "test_consistency_path",
        "test_logistic_regression_path_convergence_fail",
        "test_warm_start_converge_LR",
        "test_logistic_cv_score_does_not_warn_by_default"
      ],
      "sklearn/model_selection/tests/test_validation.py": [
        "test_cross_val_predict_with_method"
      ]
    }
  },
  {
    "instance_id": "django__django-15467",
    "file_function": {
      "tests/admin_ordering/tests.py": [
        "test_admin_ordering_beats_model_ordering"
      ],
      "tests/admin_views/tests.py": [
        "test_change_list_sorting_callable_query_expression_reverse",
        "test_change_list_column_field_classes"
      ],
      "tests/modeladmin/tests.py": [
        "test_get_autocomplete_fields",
        "test_foreign_key_as_radio_field"
      ]
    }
  },
  {
    "instance_id": "django__django-11740",
    "file_function": {
      "tests/migrations/test_autodetector.py": [
        "test_proxy_to_mti_with_fk_to_proxy",
        "test_rename_m2m_through_model",
        "test_rename_related_field_preserved_db_column",
        "test_swappable",
        "test_create_with_through_model",
        "test_managed_to_unmanaged",
        "test_unmanaged_delete",
        "test_unmanaged_to_managed",
        "test_rename_model_with_renamed_rel_field",
        "test_rename_field_foreign_key_to_field",
        "test_concrete_field_changed_to_many_to_many",
        "test_swappable_changed",
        "test_alter_fk_before_model_deletion",
        "test_alter_field_to_not_null_oneoff_default",
        "test_circular_dependency_swappable"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-9367",
    "file_function": {
      "tests/test_pycode_ast.py": [
        "test_unparse",
        "test_unparse_py38"
      ]
    }
  },
  {
    "instance_id": "django__django-14089",
    "file_function": {
      "tests/admin_views/tests.py": [
        "test_non_form_errors",
        "test_perms_needed",
        "test_change"
      ],
      "tests/utils_tests/test_datastructures.py": [
        "test_remove",
        "test_contains"
      ]
    }
  },
  {
    "instance_id": "django__django-16032",
    "file_function": {
      "tests/queries/tests.py": [
        "test_ticket24525",
        "test_ticket7235",
        "test_ticket_20955",
        "test_slicing_cannot_filter_queryset_once_sliced",
        "test_exclude_nullable_fields",
        "test_ticket14511",
        "test_ticket_20250",
        "test_ticket10432",
        "test_error_raised_on_filter_with_dictionary",
        "test_distinct_ordered_sliced_subquery"
      ],
      "tests/aggregation/tests.py": [
        "test_exists_none_with_aggregate",
        "test_empty_result_optimization",
        "test_complex_aggregations_require_kwarg"
      ],
      "tests/queries/test_query.py": [
        "test_q_annotation",
        "test_filter_non_conditional",
        "test_foreign_key",
        "test_subquery_annotation",
        "test_rawsql_annotation"
      ],
      "tests/lookup/tests.py": [
        "test_exact_query_rhs_with_selected_columns",
        "test_isnull_non_boolean_value",
        "test_relation_nested_lookup_error"
      ],
      "tests/annotations/tests.py": [
        "test_empty_expression_annotation",
        "test_filter_alias_agg_with_double_f",
        "test_empty_queryset_annotation"
      ],
      "tests/expressions/tests.py": [
        "test_subquery"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-14369",
    "file_function": {
      "astropy/units/tests/test_format.py": [
        "test_roundtrip",
        "test_cds_grammar_fail"
      ]
    }
  },
  {
    "instance_id": "django__django-13212",
    "file_function": {
      "tests/validators/tests.py": [
        "test_decimal_equality",
        "test_whitelist",
        "test_basic_equality",
        "test_validators",
        "test_file_extension_equality",
        "test_domain_whitelist",
        "test_prohibit_null_characters_validator_equality",
        "test_regex_equality",
        "test_regex_validator_flags",
        "test_email_equality",
        "test_max_length_validator_message"
      ]
    }
  },
  {
    "instance_id": "django__django-11299",
    "file_function": {
      "tests/schema/tests.py": [
        "test_unique_together_with_fk_with_existing_index",
        "test_alter_not_unique_field_to_primary_key",
        "test_add_foreign_key_long_names",
        "test_remove_field_check_does_not_remove_meta_constraints"
      ],
      "tests/migrations/test_operations.py": [
        "test_add_partial_unique_constraint",
        "test_alter_order_with_respect_to",
        "test_remove_partial_unique_constraint"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-13372",
    "file_function": {
      "sympy/core/tests/test_evalf.py": [
        "test_to_mpmath",
        "test_subs",
        "test_AssocOp_Function",
        "test_evalf_bugs",
        "test_evalf_trig_zero_detection",
        "test_chop_value"
      ],
      "sympy/functions/elementary/tests/test_complexes.py": [
        "test_principal_branch"
      ],
      "sympy/functions/elementary/tests/test_miscellaneous.py": [
        "test_Min"
      ],
      "sympy/core/tests/test_arit.py": [
        "test_pow_im"
      ]
    }
  },
  {
    "instance_id": "django__django-15973",
    "file_function": {
      "tests/m2m_multiple/tests.py": [
        "test_multiple"
      ],
      "tests/m2m_through_regress/test_multitable.py": [
        "test_m2m_reverse_query",
        "test_m2m_query"
      ],
      "tests/model_fields/test_manytomanyfield.py": [
        "test_abstract_model_app_relative_foreign_key",
        "test_value_from_object_instance_with_pk",
        "test_invalid_to_parameter",
        "test_through_db_table_mutually_exclusive"
      ],
      "tests/m2m_regress/tests.py": [
        "test_add_m2m_with_base_class"
      ]
    }
  },
  {
    "instance_id": "django__django-11477",
    "file_function": {
      "tests/urlpatterns_reverse/tests.py": [
        "test_invalid_regex",
        "test_resolver_repr",
        "test_404_tried_urls_have_names",
        "test_ambiguous_object",
        "test_no_handler_exception",
        "test_view_detail_as_method",
        "test_mixing_args_and_kwargs",
        "test_urlpattern_reverse",
        "test_namespaced_view_detail",
        "test_resolver_reverse",
        "test_redirect_view_object"
      ],
      "tests/urlpatterns/tests.py": [
        "test_converter_reverse_with_second_layer_instance_namespace",
        "test_resolve_value_error_means_no_match"
      ],
      "tests/i18n/patterns/tests.py": [
        "test_translate_url_utility"
      ],
      "tests/resolve_url/tests.py": [
        "test_non_view_callable_raises_no_reverse_match"
      ],
      "tests/view_tests/tests/test_i18n.py": [
        "test_lang_from_translated_i18n_pattern",
        "test_setlang"
      ]
    }
  },
  {
    "instance_id": "django__django-11265",
    "file_function": {
      "tests/queries/tests.py": [
        "test_exclude_many_to_many",
        "test_exclude_reverse_fk_field_ref",
        "test_correct_lookup",
        "test_error_raised_on_filter_with_dictionary",
        "test_ticket_23605",
        "test_tickets_7087_12242"
      ],
      "tests/aggregation/tests.py": [
        "test_filtering"
      ],
      "tests/queries/test_query.py": [
        "test_foreign_key"
      ],
      "tests/annotations/tests.py": [
        "test_filter_annotation_with_f"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-25332",
    "file_function": {
      "lib/matplotlib/tests/test_text.py": [
        "test_set_position",
        "test_annotation_contains",
        "test_annotate_errors"
      ],
      "lib/matplotlib/testing/decorators.py": [
        "test_pickle_load_from_subprocess"
      ],
      "lib/matplotlib/tests/test_axes.py": [
        "test_annotate_default_arrow"
      ],
      "lib/matplotlib/tests/test_figure.py": [
        "test_subfigure_pdf",
        "test_deepcopy"
      ],
      "lib/matplotlib/tests/test_bbox_tight.py": [
        "test_only_on_non_finite_bbox"
      ],
      "lib/matplotlib/tests/test_pickle.py": [
        "test_polar",
        "test_inset_and_secondary"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-9288",
    "file_function": {
      "sklearn/cluster/tests/test_k_means.py": [
        "test_k_means_precompute_distances_flag",
        "test_k_means_n_init",
        "test_max_iter_error",
        "test_less_centers_than_unique_points",
        "test_k_means_copyx",
        "test_k_means_function",
        "test_k_means_plus_plus_init_2_jobs",
        "test_k_means_random_init_not_precomputed",
        "test_k_means_plus_plus_init_not_precomputed"
      ],
      "sklearn/tests/test_common.py": [
        "test_estimators"
      ]
    }
  },
  {
    "instance_id": "django__django-16116",
    "file_function": {
      "tests/migrations/test_commands.py": [
        "test_makemigrations_update_dependency_migration",
        "test_makemigrations_scriptable_merge",
        "test_makemigrations_auto_merge_name",
        "test_makemigrations_inconsistent_history_db_failure",
        "test_makemigrations_continues_number_sequence_after_squash",
        "test_makemigrations_empty_connections",
        "test_makemigrations_update_manual_porting",
        "test_makemigrations_update_squash_migration",
        "test_makemigrations_update_existing_name",
        "test_makemigrations_default_merge_name",
        "test_makemigrations_app_name_specified_as_label",
        "test_makemigrations_update_no_migration",
        "test_makemigrations_update_applied_migration",
        "test_makemigrations_with_invalid_custom_name"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-5631",
    "file_function": {
      "testing/test_collection.py": [
        "test_collect_protocol_method",
        "test_collect_invalid_signature_message"
      ],
      "testing/test_mark.py": [
        "test_mark_decorator_baseclasses_merged"
      ],
      "testing/test_unittest.py": [
        "test_function_item_obj_is_instance"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-4075",
    "file_function": {
      "xarray/tests/test_weighted.py": [
        "test_weighted_operations_3D",
        "test_weighted_operations_different_shapes",
        "test_weighted_mean_no_nan"
      ]
    }
  },
  {
    "instance_id": "django__django-15380",
    "file_function": {
      "tests/migrations/test_commands.py": [
        "test_makemigrations_model_rename_interactive"
      ],
      "tests/migrations/test_autodetector.py": [
        "test_unmanaged_delete",
        "test_unmanaged_to_managed",
        "test_managed_to_unmanaged",
        "test_proxy_to_mti_with_fk_to_proxy_proxy",
        "test_proxy_to_mti_with_fk_to_proxy",
        "test_rename_related_field_preserved_db_column"
      ]
    }
  },
  {
    "instance_id": "django__django-16899",
    "file_function": {
      "tests/admin_checks/tests/SystemChecksTestCase/test_readonly_fields_not_list_or_tuple.py": [
        "test_readonly_fields_not_list_or_tuple"
      ],
      "tests/modeladmin/test_checks/FieldsetsCheckTests/test_valid_case.py": [
        "test_valid_case"
      ],
      "tests/modeladmin/test_checks.py": [
        "test_missing_field",
        "test_valid_case",
        "test_invalid_field",
        "test_not_iterable",
        "test_readonly_field_not_list_or_tuple",
        "test_readonly_field_missing"
      ],
      "tests/admin_checks/tests/SystemChecksTestCase/test_nonexistent_field.py": [
        "test_nonexistent_field"
      ],
      "tests/admin_checks/tests/SystemChecksTestCase/test_readonly_dynamic_attribute_on_modeladmin.py": [
        "test_readonly_dynamic_attribute_on_modeladmin"
      ],
      "tests/admin_checks/tests/SystemChecksTestCase/test_readonly_on_modeladmin.py": [
        "test_readonly_on_modeladmin"
      ],
      "tests/admin_checks/tests/SystemChecksTestCase/test_readonly_lambda.py": [
        "test_readonly_lambda"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-18199",
    "file_function": {
      "sympy/ntheory/tests/test_residue.py": [
        "test_residue"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-19346",
    "file_function": {
      "sympy/printing/tests/test_repr.py": [
        "test_Cycle",
        "test_DMP",
        "test_Naturals0",
        "test_Permutation",
        "test_BooleanAtom",
        "test_PolyElement",
        "test_Matrix",
        "test_FractionField",
        "test_Singletons",
        "test_matrix_expressions",
        "test_AlgebraicNumber",
        "test_Naturals",
        "test_Function",
        "test_FracElement",
        "test_diffgeom",
        "test_Integers",
        "test_ExtensionElement",
        "test_Reals",
        "test_more_than_255_args_issue_10259",
        "test_WildFunction",
        "test_Float",
        "test_empty_Matrix",
        "test_Dummy"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-13757",
    "file_function": {
      "sympy/core/tests/test_arit.py": [
        "test_issue_6611a",
        "test_ncmul",
        "test_pow_im",
        "test_mul_flatten_oo"
      ],
      "sympy/core/tests/test_expr.py": [
        "test_eval_interval_zoo",
        "test_equals",
        "test_issue_10161",
        "test_eval_interval",
        "test_as_numer_denom"
      ],
      "sympy/polys/tests/test_polytools.py": [
        "test_Poly_mul"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-14976",
    "file_function": {
      "sympy/utilities/tests/test_lambdify.py": [
        "test_own_namespace_1",
        "test_lambdify_dummy_arg",
        "test_special_printers",
        "test_lambdify_docstring",
        "test_lambdify_imps",
        "test_matrix",
        "test_issue_14941",
        "test_dummification",
        "test_mpmath_precision"
      ],
      "sympy/printing/tests/test_lambdarepr.py": [
        "test_piecewise"
      ]
    }
  },
  {
    "instance_id": "django__django-11433",
    "file_function": {
      "tests/model_forms/tests.py": [
        "test_setattr_raises_validation_error_non_field",
        "test_save_with_data_errors",
        "test_validates_with_replaced_field_not_specified",
        "test_setattr_raises_validation_error_field_specific",
        "test_empty_fields_to_construct_instance",
        "test_image_field",
        "test_validates_with_replaced_field_excluded"
      ],
      "tests/inline_formsets/tests.py": [
        "test_save_new"
      ],
      "tests/model_formsets/tests.py": [
        "test_inline_formsets_with_custom_save_method",
        "test_inline_formsets_with_custom_save_method_related_instance"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-10844",
    "file_function": {
      "sklearn/metrics/cluster/tests/test_supervised.py": [
        "test_fowlkes_mallows_score",
        "test_fowlkes_mallows_score_properties"
      ],
      "sklearn/metrics/cluster/tests/test_common.py": [
        "test_format_invariance"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-17630",
    "file_function": {
      "sympy/matrices/expressions/tests/test_blockmatrix.py": [
        "test_BlockMatrix_Determinant",
        "test_BlockDiagMatrix",
        "test_BlockMatrix",
        "test_blockcut",
        "test_BlockMatrix_trace",
        "test_reblock_2x2",
        "test_bc_matmul",
        "test_squareBlockMatrix"
      ]
    }
  },
  {
    "instance_id": "django__django-14170",
    "file_function": {
      "tests/db_functions/datetime/test_extract_trunc.py": [
        "test_extract_year_lessthan_lookup",
        "test_extract_year_greaterthan_lookup"
      ],
      "tests/lookup/test_lookups.py": [
        "test_get_bound_params"
      ]
    }
  },
  {
    "instance_id": "django__django-13569",
    "file_function": {
      "tests/aggregation/tests.py": [
        "test_group_by_subquery_annotation",
        "test_group_by_exists_annotation"
      ],
      "tests/aggregation_regress/tests.py": [
        "test_having_group_by"
      ]
    }
  },
  {
    "instance_id": "django__django-11087",
    "file_function": {
      "tests/delete/tests.py": [
        "test_fast_delete_instance_set_pk_none",
        "test_do_nothing_qscount",
        "test_deletion_order",
        "test_do_nothing",
        "test_delete_with_keeping_parents",
        "test_fast_delete_large_batch",
        "test_setnull_from_parent",
        "test_large_delete"
      ],
      "tests/delete_regress/tests.py": [
        "test_generic_relation_cascade",
        "test_meta_ordered_delete"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-16597",
    "file_function": {
      "sympy/core/tests/test_assumptions.py": [
        "test_issues_8632_8633_8638_8675_8992",
        "test_issue_16313",
        "test_special_assumptions"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-7910",
    "file_function": {
      "tests/test_ext_autodoc_configs.py": [
        "test_autodoc_typehints_none",
        "test_autoclass_content_init",
        "test_autoclass_content_both"
      ],
      "tests/test_ext_autodoc.py": [
        "test_imported_partialfunction_should_not_shown_without_imported_members",
        "test_final",
        "test_singledispatchmethod",
        "test_overload",
        "test_autodoc_warnings",
        "test_partialfunction",
        "test_autodoc_inherited_members_None",
        "test_autodoc_imported_members",
        "test_abstractmethods",
        "test_enum_class",
        "test_coroutine",
        "test_autodoc_inner_class"
      ],
      "tests/test_ext_napoleon.py": [
        "test_namedtuple",
        "test_modify_in_place",
        "test_class_special_doc",
        "test_class_private_doc",
        "test_exception_private_doc"
      ],
      "tests/test_ext_autodoc_autofunction.py": [
        "test_wrapped_function_contextmanager"
      ]
    }
  },
  {
    "instance_id": "django__django-13590",
    "file_function": {
      "tests/queries/tests.py": [
        "test_exclude_in"
      ],
      "tests/expressions/tests.py": [
        "test_complex_expressions_do_not_introduce_sql_injection_via_untrusted_string_inclusion",
        "test_in_lookup_allows_F_expressions_and_expressions_for_integers"
      ]
    }
  },
  {
    "instance_id": "django__django-16662",
    "file_function": {
      "tests/migrations/test_commands/OptimizeMigrationTests/test_creates_replace_migration_manual_porting.py": [
        "test_creates_replace_migration_manual_porting"
      ],
      "tests/migrations/test_commands.py": [
        "test_makemigrations_with_custom_name",
        "test_makemigrations_disabled_migrations_for_app"
      ],
      "tests/migrations/test_commands/OptimizeMigrationTests/test_fails_squash_migration_manual_porting.py": [
        "test_fails_squash_migration_manual_porting"
      ],
      "tests/migrations/test_writer.py": [
        "test_migration_file_header_comments"
      ],
      "tests/migrations/test_writer/WriterTests/test_register_serializer.py": [
        "test_register_serializer"
      ],
      "tests/migrations/test_commands/MakeMigrationsTests/test_makemigrations_migrations_modules_nonexistent_toplevel_package.py": [
        "test_makemigrations_migrations_modules_nonexistent_toplevel_package"
      ],
      "tests/migrations/test_commands/SquashMigrationsTests/test_squashmigrations_manual_porting.py": [
        "test_squashmigrations_manual_porting"
      ],
      "tests/migrations/test_writer/WriterTests/test_migration_path.py": [
        "test_migration_path"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-14894",
    "file_function": {
      "sklearn/svm/tests/test_sparse.py": [
        "test_sparse_realdata",
        "test_sparse_oneclasssvm",
        "test_svc",
        "test_sparse_decision_function"
      ]
    }
  },
  {
    "instance_id": "django__django-16527",
    "file_function": {
      "tests/admin_views/tests.py": [
        "test_change_view"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-9229",
    "file_function": {
      "tests/test_ext_autodoc.py": [
        "test_autodoc_typed_instance_variables",
        "test_autodoc_imported_members",
        "test_hide_value",
        "test_enum_class",
        "test_autodoc_GenericAlias"
      ],
      "tests/test_ext_autodoc_configs.py": [
        "test_autodoc_default_options",
        "test_autodoc_default_options_with_values"
      ]
    }
  },
  {
    "instance_id": "django__django-15128",
    "file_function": {
      "tests/queries/tests.py": [
        "test_ticket2496",
        "test_exclude_subquery",
        "test_BA_BCA__BAB_BAC_BCA",
        "test_heterogeneous_qs_combination",
        "test_ticket_10790_combine",
        "test_slicing_cannot_combine_queries_once_sliced",
        "test_ticket7045"
      ],
      "tests/aggregation/tests.py": [
        "test_aggregation_nested_subquery_outerref"
      ]
    }
  },
  {
    "instance_id": "django__django-14631",
    "file_function": {
      "tests/forms_tests/tests/test_forms.py": [
        "test_auto_id_on_form_and_field",
        "test_boundfield_slice",
        "test_hidden_initial_gets_id",
        "test_error_html_required_html_classes",
        "test_widget_output",
        "test_boundfield_css_classes",
        "test_auto_id_true",
        "test_validating_multiple_fields",
        "test_form_with_disabled_fields",
        "test_forms_with_radio",
        "test_datetime_changed_data_callable_with_microseconds",
        "test_boundfield_id_for_label",
        "test_forms_with_file_fields",
        "test_boundfield_widget_type",
        "test_boundfield_invalid_index",
        "test_templates_with_forms",
        "test_changed_data"
      ],
      "tests/model_forms/tests.py": [
        "test_callable_field_default"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-9258",
    "file_function": {
      "tests/test_ext_autodoc_configs.py": [
        "test_autodoc_typehints_description_with_documented_init",
        "test_autodoc_typehints_description_for_invalid_node",
        "test_autodoc_typehints_both",
        "test_autodoc_typehints_description_no_undoc"
      ],
      "tests/test_domain_py.py": [
        "test_pydata_with_union_type_operator",
        "test_pyfunction_with_union_type_operator",
        "test_python_python_use_unqualified_type_names",
        "test_optional_pyfunction_signature",
        "test_parse_annotation"
      ],
      "tests/test_ext_autodoc.py": [
        "test_format_signature"
      ]
    }
  },
  {
    "instance_id": "django__django-13551",
    "file_function": {
      "tests/auth_tests/test_views.py": [
        "test_invalid_link_if_going_directly_to_the_final_reset_password_url"
      ],
      "tests/auth_tests/test_tokens.py": [
        "test_check_token_with_nonexistent_token_and_user",
        "test_token_with_different_secret"
      ]
    }
  },
  {
    "instance_id": "django__django-13121",
    "file_function": {
      "tests/aggregation/tests.py": [
        "test_avg_duration_field",
        "test_sum_duration_field"
      ],
      "tests/expressions/tests.py": [
        "test_duration_with_datetime"
      ]
    }
  },
  {
    "instance_id": "psf__requests-1766",
    "file_function": {
      "tests/test_requests.py": [
        "test_DIGEST_STREAM"
      ]
    }
  },
  {
    "instance_id": "django__django-17087",
    "file_function": {
      "tests/migrations/test_writer.py": [
        "test_serialize_class_based_validators",
        "test_simple_migration"
      ],
      "tests/migrations/test_writer/WriterTests/test_serialize_path_like.py": [
        "test_serialize_path_like"
      ],
      "tests/migrations/test_writer/WriterTests/test_serialize_fields.py": [
        "test_serialize_fields"
      ],
      "tests/migrations/test_writer/WriterTests/test_serialize_managers.py": [
        "test_serialize_managers"
      ],
      "tests/migrations/test_writer/WriterTests/test_serialize_numbers.py": [
        "test_serialize_numbers"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-10323",
    "file_function": {
      "tests/test_builder.py": [
        "test_incremental_reading_for_missing_files",
        "test_incremental_reading"
      ],
      "tests/test_directive_code.py": [
        "test_LiteralIncludeReader_dedent",
        "test_LiteralIncludeReader_start_at",
        "test_LiteralIncludeReader_missing_start_and_end",
        "test_LiteralIncludeReader_lines_and_lineno_match3",
        "test_LiteralIncludeReader_lines_and_lineno_match2",
        "test_code_block",
        "test_LiteralIncludeReader_end_before"
      ],
      "tests/test_build_html.py": [
        "test_html4_output",
        "test_html_warnings",
        "test_html5_output"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-24149",
    "file_function": {
      "lib/matplotlib/tests/test_axes.py": [
        "test_bar_timedelta",
        "test_hist_log",
        "test_bar_edgecolor_none_alpha",
        "test_bar_color_none_alpha",
        "test_bar_ticklabel_fail",
        "test_bar_labels_length",
        "test_bar_errbar_zorder",
        "test_hist_log_2",
        "test_bar_broadcast_args",
        "test_bar_tick_label_single"
      ],
      "lib/matplotlib/tests/test_cbook.py": [
        "test_safe_first_element_with_none",
        "test_flatiter"
      ]
    }
  },
  {
    "instance_id": "django__django-10554",
    "file_function": {
      "tests/aggregation_regress/tests.py": [
        "test_more_more_more",
        "test_empty"
      ],
      "tests/queries/tests.py": [
        "test_ticket7235",
        "test_ticket10205",
        "test_related_sliced_subquery",
        "test_ordering",
        "test_ticket_18414",
        "test_extra_values_order_multiple",
        "test_distinct_ordered_sliced_subquery",
        "test_distinct_ordered_sliced_subquery_aggregation",
        "test_invalid_order_by"
      ],
      "tests/aggregation/tests.py": [
        "test_aggregate_in_order_by"
      ],
      "tests/ordering/tests.py": [
        "test_order_by_constant_value",
        "test_order_by_nulls_first",
        "test_order_by_nulls_last",
        "test_orders_nulls_first_on_filtered_subquery",
        "test_random_ordering",
        "test_order_by_f_expression_duplicates",
        "test_deprecated_values_annotate"
      ],
      "tests/queries/test_qs_combinators.py": [
        "test_ordering_by_f_expression",
        "test_order_raises_on_non_selected_column"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-15809",
    "file_function": {
      "sympy/functions/elementary/tests/test_miscellaneous.py": [
        "test_rewrite_as_Abs",
        "test_Min",
        "test_instantiation_evaluation",
        "test_rewrite_MaxMin_as_Piecewise",
        "test_Max",
        "test_rewrite_MaxMin_as_Heaviside"
      ]
    }
  },
  {
    "instance_id": "django__django-12273",
    "file_function": {
      "tests/model_inheritance/test_abstract_inheritance.py": [
        "test_shadowed_fkey_id",
        "test_multi_inheritance_field_clashes"
      ],
      "tests/custom_pk/tests.py": [
        "test_custom_field_pk"
      ],
      "tests/update/tests.py": [
        "test_update_m2m_field",
        "test_update_annotated_queryset"
      ],
      "tests/basic/tests.py": [
        "test_create_relation_with_gettext_lazy",
        "test_select_on_save",
        "test_save_primary_with_default"
      ],
      "tests/model_forms/tests.py": [
        "test_exclude_and_validation",
        "test_custom_error_messages",
        "test_setattr_raises_validation_error_field_specific",
        "test_recleaning_model_form_instance",
        "test_bad_form",
        "test_default_not_populated_on_non_empty_value_in_cleaned_data",
        "test_default_filefield",
        "test_prefixed_form_with_default_field",
        "test_mixmodel_form"
      ],
      "tests/model_fields/test_autofield.py": [
        "test_issubclass_of_autofield"
      ],
      "tests/model_inheritance/tests.py": [
        "test_update_parent_filtering",
        "test_filter_inherited_on_null"
      ],
      "tests/validation/test_unique.py": [
        "test_unique_for_date"
      ],
      "tests/model_formsets/tests.py": [
        "test_custom_pk"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-7671",
    "file_function": {
      "astropy/utils/tests/test_introspection.py": [
        "test_minversion"
      ]
    }
  },
  {
    "instance_id": "django__django-10973",
    "file_function": {
      "tests/dbshell/test_postgresql.py": [
        "test_escape_characters",
        "test_accent",
        "test_basic"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-9698",
    "file_function": {
      "tests/test_domain_py.py": [
        "test_domain_py_canonical",
        "test_pyproperty",
        "test_domain_py_xrefs",
        "test_pymethod_options",
        "test_pydecoratormethod_signature"
      ],
      "tests/test_environment.py": [
        "test_images"
      ]
    }
  },
  {
    "instance_id": "django__django-12708",
    "file_function": {
      "tests/schema/tests.py": [
        "test_unique_together",
        "test_index_together"
      ],
      "tests/migrations/test_operations.py": [
        "test_alter_unique_together"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-8621",
    "file_function": {
      "tests/test_build_html.py": [
        "test_html4_output",
        "test_html5_output"
      ],
      "tests/test_markup.py": [
        "test_inline"
      ]
    }
  },
  {
    "instance_id": "django__django-11555",
    "file_function": {
      "tests/queries/tests.py": [
        "test_fk_reuse",
        "test_infinite_loop",
        "test_ordering",
        "test_extra_values_order_multiple",
        "test_flat_values_list"
      ],
      "tests/ordering/tests.py": [
        "test_order_by_nulls_first",
        "test_random_ordering",
        "test_reverse_ordering_pure",
        "test_order_by_f_expression_duplicates",
        "test_order_by_constant_value"
      ],
      "tests/expressions/test_queryset_values.py": [
        "test_values_expression"
      ]
    }
  },
  {
    "instance_id": "django__django-13363",
    "file_function": {
      "tests/db_functions/datetime/test_extract_trunc.py": [
        "test_trunc_time_func",
        "test_trunc_none",
        "test_trunc_func",
        "test_trunc_func_with_timezone",
        "test_trunc_time_none",
        "test_trunc_timezone_applied_before_truncation"
      ]
    }
  },
  {
    "instance_id": "django__django-12754",
    "file_function": {
      "tests/migrations/test_autodetector.py": [
        "test_add_model_order_with_respect_to",
        "test_unmanaged_delete",
        "test_create_with_through_model",
        "test_foreign_key_removed_before_target_model",
        "test_unmanaged_to_managed",
        "test_managed_to_unmanaged",
        "test_proxy_to_mti_with_fk_to_proxy_proxy",
        "test_proxy_to_mti_with_fk_to_proxy",
        "test_same_app_circular_fk_dependency_with_unique_together_and_indexes",
        "test_many_to_many_removed_before_through_model"
      ],
      "tests/migrations/test_commands.py": [
        "test_makemigrations_inconsistent_history_db_failure",
        "test_makemigrations_with_custom_name",
        "test_migrate_syncdb_deferred_sql_executed_with_schemaeditor",
        "test_makemigrations_non_interactive_not_null_alteration"
      ]
    }
  },
  {
    "instance_id": "django__django-16801",
    "file_function": {
      "tests/model_fields/test_imagefield.py": [
        "test_field_save_and_delete_methods",
        "test_dimensions",
        "test_size_method"
      ]
    }
  },
  {
    "instance_id": "django__django-15563",
    "file_function": {
      "tests/model_inheritance/tests.py": [
        "test_unique",
        "test_abstract_parent_link",
        "test_unique_together",
        "test_eq",
        "test_init_subclass"
      ],
      "tests/model_inheritance/test_abstract_inheritance.py": [
        "test_cannot_override_indirect_abstract_field",
        "test_multiple_inheritance_cannot_shadow_concrete_inherited_field",
        "test_shadow_related_name_when_set_to_none",
        "test_virtual_field",
        "test_override_one2one_relation_auto_field_clashes"
      ],
      "tests/queries/tests.py": [
        "test_ticket_21203",
        "test_tickets_1878_2939",
        "test_ticket7778",
        "test_ticket11811"
      ],
      "tests/queries/test_bulk_update.py": [
        "test_falsey_pk_value",
        "test_nullable_fk_after_related_save",
        "test_set_field_to_null",
        "test_unsaved_parent"
      ],
      "tests/model_inheritance_regress/tests.py": [
        "test_create_new_instance_with_pk_equals_none",
        "test_issue_7276",
        "test_id_field_update_on_ancestor_change"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-6721",
    "file_function": {
      "xarray/tests/test_dask.py": [
        "test_map_blocks_error",
        "test_unify_chunks"
      ]
    }
  },
  {
    "instance_id": "django__django-14787",
    "file_function": {
      "tests/decorators/tests.py": [
        "test_preserve_attributes"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-14531",
    "file_function": {
      "sympy/printing/tests/test_str.py": [
        "test_Poly",
        "test_Limit",
        "test_AccumBounds",
        "test_sqrt",
        "test_tuple",
        "test_FiniteSet",
        "test_Function",
        "test_Permutation_Cycle",
        "test_RootSum",
        "test_Integral",
        "test_set",
        "test_Float",
        "test_Complement",
        "test_Quantity_str",
        "test_Tr",
        "test_MatrixElement_printing",
        "test_categories",
        "test_CRootOf",
        "test_MatrixSlice",
        "test_FracField",
        "test_Dict",
        "test_empty_printer",
        "test_Interval",
        "test_sstrrepr",
        "test_Sum",
        "test_GroebnerBasis",
        "test_Exp",
        "test_Catalan",
        "test_Geometry",
        "test_FracElement",
        "test_full_prec",
        "test_RandomDomain",
        "test_Order",
        "test_Lambda",
        "test_Quaternion_str_printer",
        "test_Matrix_str",
        "test_MatrixSymbol_printing",
        "test_PolyRing",
        "test_GoldenRatio",
        "test_Rational",
        "test_UnevaluatedExpr",
        "test_wild_str",
        "test_EulerGamma",
        "test_Derivative",
        "test_true_false"
      ],
      "sympy/printing/tests/test_python.py": [
        "test_python_functions",
        "test_python_keyword_function_name_escaping",
        "test_python_integrals",
        "test_python_keyword_symbol_name_escaping",
        "test_python_derivatives",
        "test_python_basic"
      ],
      "sympy/core/tests/test_function.py": [
        "test_nfloat"
      ],
      "sympy/core/tests/test_numbers.py": [
        "test_comparisons_with_unknown_type"
      ]
    }
  },
  {
    "instance_id": "django__django-14725",
    "file_function": {
      "tests/forms_tests/tests/test_formsets.py": [
        "test_form_kwargs_empty_form",
        "test_html_safe",
        "test_repr",
        "test_empty_forms_are_unbound",
        "test_formsets_with_ordering_custom_widget",
        "test_formset_validate_min_excludes_empty_forms",
        "test_absolute_max_invalid",
        "test_disable_delete_extra_formset_forms",
        "test_formset_total_error_count_with_non_form_errors",
        "test_customize_management_form_error"
      ],
      "tests/model_formsets/tests.py": [
        "test_validation_with_invalid_id",
        "test_simple_save",
        "test_model_formset_with_initial_model_instance",
        "test_validation_without_id",
        "test_max_num"
      ]
    }
  },
  {
    "instance_id": "django__django-12143",
    "file_function": {
      "tests/admin_changelist/tests.py": [
        "test_get_list_editable_queryset"
      ],
      "tests/admin_views/tests.py": [
        "test_change_view_with_view_only_inlines"
      ],
      "tests/admin_inlines/tests.py": [
        "test_inline_change_fk_all_perms",
        "test_all_inline_media",
        "test_inline_editable_pk"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-24539",
    "file_function": {
      "sympy/polys/tests/test_rings.py": [
        "test_PolyElement__str__",
        "test_PolyElement___pow__",
        "test_PolyElement_terms",
        "test_PolyElement_sqf_norm",
        "test_PolyRing___getitem__",
        "test_PolyElement_as_expr",
        "test_PolyRing___init__",
        "test_PolyElement_div",
        "test_PolyRing_ring_new",
        "test_PolyRing_drop",
        "test_PolyRing_add",
        "test_PolyElement_degree",
        "test_PolyRing_is_",
        "test_PolyElement_tail_degree",
        "test_PolyRing_mul"
      ],
      "sympy/polys/tests/test_fields.py": [
        "test_FracField_nested"
      ],
      "sympy/polys/tests/test_polytools.py": [
        "test_Poly_eval",
        "test_poly"
      ]
    }
  },
  {
    "instance_id": "django__django-14434",
    "file_function": {
      "tests/schema/tests.py": [
        "test_remove_unique_together_does_not_remove_meta_constraints",
        "test_composite_func_unique_constraint",
        "test_func_unique_constraint_partial",
        "test_func_unique_constraint"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-20676",
    "file_function": {
      "lib/matplotlib/tests/test_widgets.py": [
        "test_ellipse",
        "test_lasso_selector",
        "test_span_selector",
        "test_polygon_selector",
        "test_rect_visibility",
        "test_span_selector_direction",
        "test_span_selector_drag"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-19637",
    "file_function": {
      "sympy/core/tests/test_sympify.py": [
        "test_sympify_raises",
        "test_sympify1",
        "test_sympyify_iterables",
        "test_kernS",
        "test_issue_4798_None",
        "test_issue_16859"
      ],
      "sympy/core/tests/test_expr.py": [
        "test_equals",
        "test_action_verbs",
        "test_SAGE1"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-24443",
    "file_function": {
      "sympy/combinatorics/tests/test_homomorphisms.py": [
        "test_check_homomorphism",
        "test_isomorphisms",
        "test_homomorphism"
      ],
      "sympy/combinatorics/tests/test_perm_groups.py": [
        "test_sylow_subgroup"
      ]
    }
  },
  {
    "instance_id": "pylint-dev__pylint-7080",
    "file_function": {
      "tests/lint/unittest_expand_modules.py": [
        "test_expand_modules_with_ignore"
      ],
      "tests/test_functional.py": [
        "test_functional"
      ],
      "tests/test_regr.py": [
        "test_package"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-13852",
    "file_function": {
      "sympy/functions/special/tests/test_zeta_functions.py": [
        "test_rewriting",
        "test_polylog_expansion",
        "test_lerchphi_expansion"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-23314",
    "file_function": {
      "lib/mpl_toolkits/tests/test_mplot3d.py": [
        "test_add_collection3d_zs_scalar",
        "test_axes3d_focal_length_checks",
        "test_errorbar3d",
        "test_bar3d_shaded",
        "test_shared_axes_retick",
        "test_simple",
        "test_bar3d",
        "test_axes3d_isometric",
        "test_contour3d_1d_input",
        "test_contourf3d",
        "test_trisurf3d",
        "test_tricontour",
        "test_quiver3d",
        "test_scatter3d",
        "test_bar3d_notshaded",
        "test_add_collection3d_zs_array",
        "test_autoscale",
        "test_plotsurface_1d_raises",
        "test_mixedsamplesraises",
        "test_quiver3d_empty",
        "test_computed_zorder",
        "test_aspect_equal_error",
        "test_contour3d",
        "test_contourf3d_extend",
        "test_quiver3d_masked",
        "test_surface3d_masked",
        "test_pan",
        "test_wireframe3dzerostrideraises",
        "test_colorbar_pos",
        "test_wireframe3d",
        "test_view_init_vertical_axis",
        "test_errorbar3d_errorevery",
        "test_bar3d_lightsource",
        "test_xyz",
        "test_patch_modification",
        "test_text3d",
        "test_stem3d",
        "test_surface3d"
      ],
      "lib/matplotlib/tests/test_collections.py": [
        "test_polycollection_close"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-9281",
    "file_function": {
      "tests/test_domain_py.py": [
        "test_pydata_with_union_type_operator",
        "test_pyobject_prefix",
        "test_pyfunction",
        "test_pyfunction_with_union_type_operator",
        "test_domain_py_canonical",
        "test_canonical_definition_overrides",
        "test_domain_py_xrefs",
        "test_python_python_use_unqualified_type_names",
        "test_pyfunction_signature_full",
        "test_pyfunction_signature_full_py38",
        "test_optional_pyfunction_signature",
        "test_parse_annotation",
        "test_pydata_signature_old"
      ],
      "tests/test_ext_autodoc_configs.py": [
        "test_autodoc_typehints_description_for_invalid_node"
      ],
      "tests/test_ext_autodoc.py": [
        "test_autodoc"
      ]
    }
  },
  {
    "instance_id": "django__django-13279",
    "file_function": {
      "tests/sessions_tests/tests.py": [
        "test_sessionmanager_save",
        "test_session_get_decoded",
        "test_clearsessions_command"
      ]
    }
  },
  {
    "instance_id": "mwaskom__seaborn-3187",
    "file_function": {
      "tests/_core/test_scales.py": [
        "test_log_tick_default",
        "test_label_like_function",
        "test_symlog_tick_default",
        "test_label_unit",
        "test_coordinate_transform",
        "test_label_formatter",
        "test_label_like_string",
        "test_label_like_pattern",
        "test_label_empty_unit",
        "test_label_unit_with_sep"
      ],
      "tests/_marks/test_dot.py": [
        "test_filled_unfilled_mix",
        "test_map_color",
        "test_fill"
      ],
      "tests/_core/test_plot.py": [
        "test_no_orient_variance",
        "test_identity_mapping_linewidth",
        "test_mark_data_log_transform_is_inverted",
        "test_identity_scale_ignored",
        "test_identity_mapping_color_tuples"
      ]
    }
  },
  {
    "instance_id": "django__django-10880",
    "file_function": {
      "tests/aggregation/test_filter_argument.py": [
        "test_filtered_aggregate_on_annotate",
        "test_sum_star_exception",
        "test_filtered_reused_subquery"
      ],
      "tests/aggregation_regress/tests.py": [
        "test_more_more_more",
        "test_allow_distinct"
      ],
      "tests/aggregation/tests.py": [
        "test_multi_arg_aggregate",
        "test_complex_aggregations_require_kwarg"
      ],
      "tests/expressions/tests.py": [
        "test_filtered_aggregates"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-14629",
    "file_function": {
      "sklearn/tests/test_multioutput.py": [
        "test_multi_target_sample_weights",
        "test_multi_output_classification_sample_weights",
        "test_multi_output_exceptions",
        "test_multi_output_classification_partial_fit_sample_weights",
        "test_multi_output_predict_proba"
      ]
    }
  },
  {
    "instance_id": "django__django-15104",
    "file_function": {
      "tests/migrations/test_autodetector.py": [
        "test_swappable",
        "test_arrange_for_graph_with_multiple_initial",
        "test_swappable_circular_multi_mti"
      ]
    }
  },
  {
    "instance_id": "django__django-16819",
    "file_function": {
      "tests/migrations/test_operations/OperationTests/test_rename_index_arguments.py": [
        "test_rename_index_arguments"
      ],
      "tests/migrations/test_operations.py": [
        "test_add_index",
        "test_remove_index"
      ],
      "tests/migrations/test_operations/OperationTests/test_remove_func_index.py": [
        "test_remove_func_index"
      ],
      "tests/migrations/test_optimizer/OptimizerTests/test_rename_index.py": [
        "test_rename_index"
      ],
      "tests/migrations/test_operations/OperationTests/test_rename_index_unknown_unnamed_index.py": [
        "test_rename_index_unknown_unnamed_index"
      ],
      "tests/migrations/test_autodetector/AutodetectorIndexTogetherTests/test_rename_index_together_to_index.py": [
        "test_rename_index_together_to_index"
      ],
      "tests/migrations/test_operations/OperationTests/test_add_func_index.py": [
        "test_add_func_index"
      ],
      "tests/migrations/test_operations/OperationTests/test_rename_index.py": [
        "test_rename_index"
      ],
      "tests/migrations/test_autodetector/AutodetectorTests/test_rename_indexes.py": [
        "test_rename_indexes"
      ],
      "tests/migrations/test_autodetector.py": [
        "test_order_fields_indexes"
      ],
      "tests/migrations/test_operations/OperationTests/test_rename_index_unnamed_index.py": [
        "test_rename_index_unnamed_index"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-7440",
    "file_function": {
      "tests/test_domain_std.py": [
        "test_glossary_warning",
        "test_get_full_qualified_name",
        "test_glossary_comment"
      ],
      "tests/test_build_html.py": [
        "test_numfig_without_numbered_toctree_warn",
        "test_html5_output",
        "test_html_math_renderer_is_duplicated",
        "test_enumerable_node",
        "test_html_math_renderer_is_mismatched",
        "test_numfig_disabled_warn"
      ],
      "tests/test_environment.py": [
        "test_config_status"
      ]
    }
  },
  {
    "instance_id": "django__django-15098",
    "file_function": {
      "tests/i18n/tests.py": [
        "test_get_language_from_path_real",
        "test_specific_language_codes",
        "test_unprefixed_language_other_than_accept_language",
        "test_page_with_dash"
      ],
      "tests/i18n/patterns/tests.py": [
        "test_nl_redirect",
        "test_en_redirect",
        "test_pl_pl_redirect"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-4356",
    "file_function": {
      "xarray/tests/test_duck_array_ops.py": [
        "test_reduce",
        "test_min_count"
      ],
      "xarray/tests/test_dataarray.py": [
        "test_groupby_sum"
      ],
      "xarray/tests/test_variable.py": [
        "test_big_endian_reduce"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-4687",
    "file_function": {
      "xarray/tests/test_computation.py": [
        "test_apply_dask",
        "test_where",
        "test_output_wrong_dims",
        "test_apply_two_outputs",
        "test_output_wrong_dim_size",
        "test_apply_output_core_dimension",
        "test_dot",
        "test_output_wrong_number",
        "test_dot_align_coords",
        "test_apply_input_core_dimension",
        "test_apply_exclude",
        "test_vectorize_dask_new_output_dims"
      ],
      "xarray/tests/test_missing.py": [
        "test_interpolate_dask"
      ],
      "xarray/tests/test_variable.py": [
        "test_quantile_chunked_dim_error"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-26323",
    "file_function": {
      "sklearn/compose/tests/test_column_transformer.py": [
        "test_feature_name_validation_missing_columns_drop_passthough",
        "test_2D_transformer_output",
        "test_column_transformer_verbose",
        "test_column_transformer_invalid_transformer",
        "test_sk_visual_block_remainder_drop",
        "test_column_transformer_error_msg_1D",
        "test_2D_transformer_output_pandas",
        "test_sk_visual_block_remainder",
        "test_column_transformer_no_estimators",
        "test_column_transformer_mixed_cols_sparse",
        "test_verbose_feature_names_out_false_errors",
        "test_column_transformer_get_set_params_with_remainder",
        "test_column_transformer_empty_columns",
        "test_column_transformer_set_output",
        "test_sk_visual_block_remainder_fitted_pandas",
        "test_transformers_with_pandas_out_but_not_feature_names_out",
        "test_column_transformer_get_set_params",
        "test_verbose_feature_names_out_true",
        "test_column_transformer_get_feature_names",
        "test_raise_error_if_index_not_aligned",
        "test_column_transformer_reordered_column_names_remainder"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-14248",
    "file_function": {
      "sympy/printing/tests/test_str.py": [
        "test_Poly",
        "test_Limit",
        "test_AccumBounds",
        "test_sqrt",
        "test_issue_3103",
        "test_Function",
        "test_Complement",
        "test_FracField",
        "test_empty_printer",
        "test_RandomDomain",
        "test_Matrix_str",
        "test_PolyRing",
        "test_UnevaluatedExpr",
        "test_PolyElement",
        "test_tuple",
        "test_NaN",
        "test_categories",
        "test_MatrixSlice",
        "test_MatMul_MatAdd",
        "test_GroebnerBasis",
        "test_RootSum",
        "test_set",
        "test_Float",
        "test_Quantity_str",
        "test_CRootOf",
        "test_sstrrepr",
        "test_Exp",
        "test_Quaternion_str_printer",
        "test_Rational",
        "test_Derivative",
        "test_FiniteSet",
        "test_Permutation_Cycle",
        "test_Integral",
        "test_Tr",
        "test_Dict",
        "test_Interval",
        "test_Catalan",
        "test_FracElement",
        "test_Order",
        "test_Lambda",
        "test_factorial"
      ],
      "sympy/printing/tests/test_latex.py": [
        "test_Modules",
        "test_latex_productset",
        "test_latex_functions",
        "test_QuotientRing",
        "test_latex_numbers",
        "test_categories",
        "test_latex_log",
        "test_latex_LeviCivita",
        "test_issue_12886",
        "test_latex_Range",
        "test_latex_intervals",
        "test_latex_fresnel",
        "test_Tr",
        "test_latex_basic",
        "test_latex_commutator",
        "test_latex_Complement",
        "test_issue_10489",
        "test_latex_AccumuBounds",
        "test_latex_SingularityFunction",
        "test_latex_Float",
        "test_latex_union",
        "test_latex_derivatives",
        "test_latex_Poly",
        "test_MatrixElement_printing",
        "test_latex_euler",
        "test_latex_UnevaluatedExpr",
        "test_latex_builtins",
        "test_latex_Contains",
        "test_builtin_no_args",
        "test_TensorProduct_printing",
        "test_latex_subs",
        "test_latex_product",
        "test_latex_permutation",
        "test_latex_vector_expressions",
        "test_boolean_args_order",
        "test_Adjoint",
        "test_latex_Matrix",
        "test_latex_symmetric_difference",
        "test_latex_integrals",
        "test_PolynomialRingBase",
        "test_latex_ConditionSet",
        "test_units",
        "test_issue_7117",
        "test_builtins_without_args",
        "test_latex_RandomDomain",
        "test_latex_Integers",
        "test_Hadamard",
        "test_latex_KroneckerDelta",
        "test_hyper_printing",
        "test_latex_ImageSet",
        "test_latex_FourierSeries",
        "test_latex_bessel",
        "test_latex",
        "test_ZeroMatrix",
        "test_latex_sum",
        "test_latex_MatrixSlice",
        "test_latex_limits",
        "test_latex_Naturals0",
        "test_latex_Piecewise",
        "test_latex_FracElement",
        "test_WedgeProduct_printing",
        "test_Quaternion_latex_printing",
        "test_latex_DiracDelta",
        "test_latex_sequences",
        "test_latex_NDimArray",
        "test_latex_indexed",
        "test_latex_Complexes",
        "test_latex_degree",
        "test_latex_ComplexRootOf",
        "test_latex_FormalPowerSeries",
        "test_latex_Heaviside",
        "test_latex_RootSum",
        "test_issue_7180",
        "test_integral_transforms",
        "test_latex_ComplexRegion",
        "test_latex_Lambda",
        "test_issue_13651"
      ],
      "sympy/printing/pretty/tests/test_pretty.py": [
        "test_issue_6359",
        "test_expint",
        "test_pretty_FormalPowerSeries",
        "test_categories",
        "test_pretty_Trace_issue_9044",
        "test_pretty_primenu",
        "test_vector_expr_pretty_printing",
        "test_deltas",
        "test_pretty_seq",
        "test_pretty_ComplexRootOf",
        "test_pretty_matrix",
        "test_diffgeom_print_WedgeProduct",
        "test_pretty_lambda",
        "test_pretty_SymmetricDifference",
        "test_pretty_derivatives",
        "test_issue_7117",
        "test_pretty_primeomega",
        "test_RandomDomain",
        "test_pretty_Subs",
        "test_GoldenRatio",
        "test_MatrixExpressions",
        "test_pretty_ndim_arrays",
        "test_issue_7927",
        "test_pretty_order",
        "test_Tr",
        "test_pretty_sum",
        "test_pretty_integrals",
        "test_pretty_piecewise",
        "test_GroebnerBasis",
        "test_issue_9877",
        "test_pretty_ComplexRegion",
        "test_PrettyPoly",
        "test_pretty_FourierSeries",
        "test_pretty_functions",
        "test_pretty_limits",
        "test_units",
        "test_pretty_Cycle",
        "test_elliptic_functions",
        "test_issue_7179",
        "test_print_builtin_set",
        "test_Adjoint",
        "test_pretty_ImageSet",
        "test_pretty_basic",
        "test_pretty_sets",
        "test_MatrixElement_printing",
        "test_meijerg",
        "test_pretty_KroneckerDelta",
        "test_pretty_Complement",
        "test_gammas",
        "test_pretty_special_functions",
        "test_pretty_Domain",
        "test_pretty_Boolean",
        "test_QuotientRing",
        "test_Homomorphism",
        "test_pretty_SetExpr",
        "test_EulerGamma",
        "test_SingularityFunction",
        "test_pretty_sequences",
        "test_negative_fractions",
        "test_tensor_TensorProduct",
        "test_pretty_ConditionSet",
        "test_beta",
        "test_pretty_Contains",
        "test_hyper",
        "test_pretty_geometry",
        "test_pretty_ITE",
        "test_ProductSet_paranthesis",
        "test_pretty_Mod",
        "test_pretty_prec",
        "test_pretty_RootSum",
        "test_pretty_UnevaluatedExpr",
        "test_pretty_dotproduct",
        "test_pretty_sqrt",
        "test_degree_printing"
      ],
      "sympy/matrices/expressions/tests/test_matexpr.py": [
        "test_ZeroMatrix",
        "test_matrixelement_diff",
        "test_addition"
      ],
      "sympy/matrices/expressions/tests/test_indexing.py": [
        "test_errors"
      ]
    }
  },
  {
    "instance_id": "django__django-11066",
    "file_function": {
      "tests/contenttypes_tests/test_operations.py": [
        "test_missing_content_type_rename_ignore",
        "test_content_type_rename_conflict"
      ]
    }
  },
  {
    "instance_id": "django__django-14007",
    "file_function": {
      "tests/bulk_create/tests.py": [
        "test_non_auto_increment_pk_efficiency",
        "test_nullable_fk_after_parent",
        "test_simple",
        "test_non_auto_increment_pk",
        "test_set_state_with_pk_specified",
        "test_multi_table_inheritance_unsupported"
      ],
      "tests/from_db_value/tests.py": [
        "test_defer"
      ],
      "tests/model_fields/tests.py": [
        "test_get_choices",
        "test_field_str",
        "test_blank_in_grouped_choices",
        "test_check",
        "test_overriding_inherited_FIELD_display",
        "test_invalid_choice",
        "test_flatchoices"
      ],
      "tests/model_fields/test_integerfield.py": [
        "test_types",
        "test_rel_db_type",
        "test_enum_choices_invalid_input",
        "test_integerfield_validates_zero_against_choices",
        "test_nullable_integerfield_cleans_none_on_null_and_blank_true",
        "test_choices_validation_supports_named_groups"
      ],
      "tests/model_forms/tests.py": [
        "test_validate_foreign_key_uses_default_manager",
        "test_custom_error_messages",
        "test_limit_choices_to_no_duplicates",
        "test_validate_foreign_key_to_model_with_overridden_manager",
        "test_default_not_populated_on_non_empty_value_in_cleaned_data",
        "test_default_filefield",
        "test_prefixed_form_with_default_field",
        "test_m2m_editing"
      ],
      "tests/validation/tests.py": [
        "test_missing_required_field_raises_error"
      ]
    }
  },
  {
    "instance_id": "pylint-dev__pylint-6528",
    "file_function": {
      "tests/test_functional.py": [
        "test_functional"
      ],
      "tests/lint/unittest_lint.py": [
        "test_custom_should_analyze_file",
        "test_analyze_explicit_script",
        "test_by_module_statement_value"
      ],
      "tests/lint/test_pylinter.py": [
        "test_check_deprecation"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-22914",
    "file_function": {
      "sympy/printing/tests/test_pycode.py": [
        "test_PythonCodePrinter",
        "test_frac",
        "test_sqrt"
      ],
      "sympy/printing/tests/test_lambdarepr.py": [
        "test_sqrt"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-14995",
    "file_function": {
      "astropy/nddata/mixins/tests/test_ndarithmetic.py": [
        "test_arithmetics_meta_func",
        "test_psf_warning",
        "test_arithmetics_handle_switches",
        "test_arithmetics_data_masks",
        "test_arithmetics_wcs_func"
      ],
      "astropy/nddata/tests/test_nddata.py": [
        "test_collapse"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-15976",
    "file_function": {
      "sympy/printing/tests/test_mathml.py": [
        "test_presentation_symbol",
        "test_print_matrix_symbol",
        "test_presentation_mathml_greek"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-11510",
    "file_function": {
      "tests/test_build_html.py": [
        "test_numfig_without_numbered_toctree_warn",
        "test_html_sidebar"
      ],
      "tests/test_build.py": [
        "test_build_all"
      ]
    }
  },
  {
    "instance_id": "django__django-16333",
    "file_function": {
      "tests/auth_tests/test_forms.py": [
        "test_normalize_username",
        "test_unicode_username",
        "test_success"
      ]
    }
  },
  {
    "instance_id": "django__django-13807",
    "file_function": {
      "tests/fixtures_regress/tests.py": [
        "test_loaddata_raises_error_when_fixture_has_invalid_foreign_key"
      ],
      "tests/schema/tests.py": [
        "test_alter_field_type_and_db_collation",
        "test_alter_fk",
        "test_m2m_create"
      ],
      "tests/backends/sqlite/tests.py": [
        "test_pathlib_name"
      ]
    }
  },
  {
    "instance_id": "django__django-15499",
    "file_function": {
      "tests/migrations/test_commands.py": [
        "test_makemigrations_model_rename_interactive",
        "test_makemigrations_non_interactive_unique_callable_default_addition"
      ],
      "tests/migrations/test_optimizer.py": [
        "test_create_alter_owrt_delete_model",
        "test_create_alter_unique_field",
        "test_create_alter_model_options",
        "test_create_alter_owrt_field",
        "test_optimize_elidable_operation",
        "test_create_alter_index_field"
      ],
      "tests/migrations/test_autodetector.py": [
        "test_proxy_to_mti_with_fk_to_proxy_proxy",
        "test_bases_first_mixed_case_app_label"
      ],
      "tests/migrations/test_executor.py": [
        "test_migrate_backward_to_squashed_migration"
      ],
      "tests/migrations/test_operations.py": [
        "test_create_model_with_constraint",
        "test_create_model_with_deferred_unique_constraint"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-12419",
    "file_function": {
      "sympy/matrices/tests/test_commonmatrix.py": [
        "test_refine"
      ],
      "sympy/matrices/tests/test_matrices.py": [
        "test_refine"
      ],
      "sympy/matrices/expressions/tests/test_matmul.py": [
        "test_refine"
      ]
    }
  },
  {
    "instance_id": "django__django-12965",
    "file_function": {
      "tests/delete/tests.py": [
        "test_fast_delete_large_batch"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-13236",
    "file_function": {
      "astropy/table/tests/test_operations.py": [
        "test_sort_indexed_table",
        "test_bad_input_type"
      ],
      "astropy/table/tests/test_init_table.py": [
        "test_init",
        "test_add_none_object_column"
      ],
      "astropy/table/tests/test_item_access.py": [
        "test_row",
        "test_column_slice"
      ],
      "astropy/table/tests/test_mixin.py": [
        "test_ndarray_mixin",
        "test_io_time_write_fits_local"
      ],
      "astropy/table/tests/test_table.py": [
        "test_add_duplicate_column",
        "test_rows_with_mixins"
      ],
      "astropy/table/tests/test_masked.py": [
        "test_mask_false_if_input_mask_not_true"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-20859",
    "file_function": {
      "lib/matplotlib/tests/test_legend.py": [
        "test_legend_labelcolor_markerfacecolor",
        "test_legend_title_fontprop_fontsize",
        "test_legend_labelcolor_rcparam_single",
        "test_legend_handler_map",
        "test_multiple_keys",
        "test_fancy",
        "test_cross_figure_patch_legend",
        "test_legend_labelcolor_markeredgecolor",
        "test_shadow_framealpha",
        "test_legend_auto2",
        "test_get_set_draggable",
        "test_legend_labelcolor_linecolor",
        "test_window_extent_cached_renderer",
        "test_warn_big_data_best_loc",
        "test_alpha_handles",
        "test_rc"
      ]
    }
  },
  {
    "instance_id": "django__django-13344",
    "file_function": {
      "tests/middleware_exceptions/tests.py": [
        "test_process_view_return_response",
        "test_process_template_response",
        "test_exception_in_async_render_passed_to_process_exception"
      ],
      "tests/handlers/tests.py": [
        "test_suspiciousop_in_view_returns_400"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-13977",
    "file_function": {
      "astropy/units/tests/test_quantity_array_methods.py": [
        "test_fill",
        "test_std",
        "test_ediff1d",
        "test_not_implemented",
        "test_argmin",
        "test_dot_meth",
        "test_var_inplace",
        "test_diff",
        "test_flat",
        "test_median",
        "test_item",
        "test_trace_func",
        "test_nansum_where"
      ],
      "astropy/units/tests/test_quantity.py": [
        "test_arrays",
        "test_deepcopy",
        "test_non_quantity_with_unit",
        "test_quantity_initialisation_from_string",
        "test_decompose",
        "test_to_string",
        "test_preserve_dtype",
        "test_scalar_quantity_repr",
        "test_subok",
        "test_creation_via_view",
        "test_implicit_conversion",
        "test_regression_12964",
        "test_repr_latex",
        "test_masked_quantity_str_repr",
        "test_rshift_warns",
        "test_quantity_ilshift",
        "test_implicit_conversion_autocomplete",
        "test_quantity_pickelability",
        "test_quantity_from_table",
        "test_comparison",
        "test_scalar_quantity_format",
        "test_creation",
        "test_numeric_converters",
        "test_quantity_value_views",
        "test_insert",
        "test_dimensionless_quantity_format"
      ],
      "astropy/units/tests/test_units.py": [
        "test_fractional_powers"
      ],
      "astropy/units/tests/test_quantity_non_ufuncs.py": [
        "test_putmask",
        "test_ix_",
        "test_trace",
        "test_squeeze",
        "test_histogramdd",
        "test_put",
        "test_round_",
        "test_piecewise",
        "test_argsort",
        "test_argmax"
      ],
      "astropy/units/tests/test_quantity_ufuncs.py": [
        "test_two_argument_ufunc_inplace_1",
        "test_ufunc_inplace_non_standard_dtype"
      ],
      "astropy/units/tests/test_structured.py": [
        "test_setitem",
        "test_initialization_without_unit",
        "test_quantity_si",
        "test_cgs",
        "test_equality",
        "test_inplace_conversion"
      ],
      "astropy/units/tests/test_equivalencies.py": [
        "test_spectral3"
      ]
    }
  },
  {
    "instance_id": "django__django-11119",
    "file_function": {
      "tests/template_tests/test_engine.py": [
        "test_basic_context"
      ],
      "tests/template_tests/syntax_tests/test_autoescape.py": [
        "test_autoescape_filters01",
        "test_autoescape_tag01"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-6202",
    "file_function": {
      "testing/test_collection.py": [
        "test_getparent"
      ],
      "testing/test_junitxml.py": [
        "test_classname_instance"
      ],
      "testing/test_terminal.py": [
        "test_itemreport_subclasses_show_subclassed_file"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-18189",
    "file_function": {
      "sympy/solvers/tests/test_diophantine.py": [
        "test_no_square_ternary_quadratic",
        "test_diop_sum_of_even_powers",
        "test_input_format",
        "test_diophantine",
        "test_diop_ternary_quadratic",
        "test_general_pythagorean",
        "test_classify_diop",
        "test_sum_of_three_squares",
        "test_sum_of_four_squares",
        "test_issue_9538",
        "test_issue_8943",
        "test_diophantine_permute_sign",
        "test_diop_general_sum_of_squares_quick"
      ]
    }
  },
  {
    "instance_id": "django__django-15732",
    "file_function": {
      "tests/migrations/test_operations.py": [
        "test_alter_unique_together_remove",
        "test_alter_index_together_remove_with_unique_together"
      ]
    }
  },
  {
    "instance_id": "django__django-16631",
    "file_function": {
      "tests/auth_tests/test_views.py": [
        "test_user_password_change_updates_session",
        "test_session_key_flushed_on_login_after_password_change"
      ],
      "tests/auth_tests/test_middleware/TestAuthenticationMiddleware/test_changed_password_invalidates_session.py": [
        "test_changed_password_invalidates_session"
      ]
    }
  },
  {
    "instance_id": "django__django-16612",
    "file_function": {
      "tests/admin_views/tests.py": [
        "test_trailing_slash_required"
      ],
      "tests/admin_views/tests/AdminSiteFinalCatchAllPatternTests/test_missing_slash_append_slash_true_unknown_url.py": [
        "test_missing_slash_append_slash_true_unknown_url"
      ],
      "tests/admin_views/tests/AdminSiteFinalCatchAllPatternTests/test_missing_slash_append_slash_true.py": [
        "test_missing_slash_append_slash_true"
      ]
    }
  },
  {
    "instance_id": "django__django-14915",
    "file_function": {
      "tests/model_forms/test_modelchoicefield.py": [
        "test_choices_bool",
        "test_disabled_modelmultiplechoicefield_has_changed",
        "test_choices",
        "test_disabled_modelchoicefield_has_changed",
        "test_disabled_modelchoicefield_initial_model_instance",
        "test_basics"
      ],
      "tests/model_forms/tests.py": [
        "test_initial_values",
        "test_callable_called_each_time_form_is_instantiated",
        "test_show_hidden_initial_changed_queries_efficiently",
        "test_model_multiple_choice_field",
        "test_fields_for_model_applies_limit_choices_to"
      ],
      "tests/model_formsets/tests.py": [
        "test_commit_false"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-13398",
    "file_function": {
      "astropy/coordinates/tests/test_icrs_observed_transformations.py": [
        "test_icrs_altaz_consistency",
        "test_icrs_hadec_consistency"
      ],
      "astropy/coordinates/tests/test_intermediate_transformations.py": [
        "test_gcrs_hadec",
        "test_tete_transforms",
        "test_gcrs_altaz_moonish"
      ],
      "astropy/coordinates/tests/test_frames.py": [
        "test_eloc_attributes"
      ],
      "astropy/coordinates/tests/accuracy/test_altaz_icrs.py": [
        "test_against_pyephem",
        "test_against_jpl_horizons",
        "test_against_hor2eq"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-24562",
    "file_function": {
      "sympy/core/tests/test_expr.py": [
        "test_eval_interval_zoo",
        "test_cooperative_operations",
        "test_equals",
        "test_basic"
      ],
      "sympy/core/tests/test_arit.py": [
        "test_Mod"
      ],
      "sympy/core/tests/test_numbers.py": [
        "test_seterr",
        "test_as_content_primitive",
        "test_Rational_gcd_lcm_cofactors",
        "test_divmod",
        "test_conversion_to_mpmath",
        "test_Float_eq",
        "test_powers_Rational",
        "test_Rational_new",
        "test_abc"
      ],
      "sympy/core/tests/test_evalf.py": [
        "test_subs",
        "test_evalf_real_alg_num",
        "test_evalf_product"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-20428",
    "file_function": {
      "sympy/polys/tests/test_polytools.py": [
        "test_Poly_properties",
        "test_Poly_homogenize",
        "test_Poly_inject",
        "test_cancel",
        "test_revert",
        "test_refine_root",
        "test_Poly_homogeneous_order",
        "test_reduced",
        "test_resultant",
        "test_terms_gcd",
        "test_factor",
        "test_poly",
        "test_Poly_is_irreducible",
        "test_as_list",
        "test_norm",
        "test_Poly_eject",
        "test_poly_from_domain_element",
        "test_Poly_LC",
        "test_transform",
        "test_Poly_sub_ground",
        "test_div",
        "test_Poly_strip",
        "test_Poly_all_coeffs",
        "test_Poly_to_exact",
        "test_gff",
        "test_Poly__unify",
        "test_count_roots",
        "test_Poly_deflate",
        "test_dispersion",
        "test_Poly_all_monoms",
        "test_Poly_integrate",
        "test_sqf",
        "test_Poly_lift",
        "test_Poly_slice",
        "test_sturm",
        "test_Poly_exclude",
        "test_intervals",
        "test_Poly_all_terms"
      ],
      "sympy/polys/tests/test_polyclasses.py": [
        "test_DMP_exclude",
        "test_DMP_arithmetics",
        "test_DMP_functionality",
        "test_DMP___eq__"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-5840",
    "file_function": {
      "testing/test_session.py": [
        "test_collect_only_with_various_situations",
        "test_syntax_error_module",
        "test_nested_import_error"
      ],
      "testing/test_collection.py": [
        "test_custom_repr_failure",
        "test_collectignore_exclude_on_option"
      ],
      "testing/test_conftest.py": [
        "test_conftest_symlink",
        "test_fixture_dependency"
      ],
      "testing/test_config.py": [
        "test_pytest_plugins_in_non_top_level_conftest_unsupported_pyargs"
      ]
    }
  },
  {
    "instance_id": "django__django-12406",
    "file_function": {
      "tests/model_forms/tests.py": [
        "test_m2m_initial_callable",
        "test_model_form_applies_localize_to_all_fields",
        "test_override_unique_message",
        "test_bad_callback",
        "test_exclude_fields",
        "test_runtime_choicefield_populated",
        "test_modelform_non_editable_field",
        "test_fields_for_model_applies_limit_choices_to"
      ],
      "tests/model_formsets/tests.py": [
        "test_modelformset_factory_help_text_overrides",
        "test_inlineformset_factory_widgets",
        "test_inlineformset_factory_help_text_overrides",
        "test_modelformset_factory_field_class_overrides",
        "test_inlineformset_factory_labels_overrides",
        "test_prevent_duplicates_from_with_the_same_formset"
      ],
      "tests/model_forms/test_modelchoicefield.py": [
        "test_disabled_modelchoicefield_initial_model_instance",
        "test_disabled_modelchoicefield_has_changed",
        "test_clean_model_instance"
      ]
    }
  },
  {
    "instance_id": "django__django-12419",
    "file_function": {
      "tests/middleware/test_security.py": [
        "test_referrer_policy_on",
        "test_ssl_redirect_on",
        "test_redirect_ssl_host",
        "test_xss_filter_on",
        "test_content_type_already_present",
        "test_sts_subdomains_and_preload",
        "test_referrer_policy_already_present"
      ],
      "tests/check_framework/test_security.py": [
        "test_with_referrer_policy",
        "test_with_invalid_referrer_policy",
        "test_no_referrer_policy"
      ]
    }
  },
  {
    "instance_id": "django__django-11141",
    "file_function": {
      "tests/migrations/test_loader.py": [
        "test_explicit_missing_module",
        "test_load_empty_dir",
        "test_load_module_file",
        "test_invalid",
        "test_load_import_error"
      ],
      "tests/migrations/test_commands.py": [
        "test_migrate_nonexistent_app_label"
      ]
    }
  },
  {
    "instance_id": "psf__requests-1142",
    "file_function": {
      "tests/test_requests.py": [
        "test_path_is_not_double_encoded",
        "test_entry_points",
        "test_basic_building",
        "test_invalid_url",
        "test_params_are_added_before_fragment"
      ]
    }
  },
  {
    "instance_id": "django__django-15161",
    "file_function": {
      "tests/expressions_window/tests.py": [
        "test_window_frame_repr",
        "test_unsupported_backend",
        "test_window_repr",
        "test_lag_decimalfield",
        "test_invalid_order_by",
        "test_empty_group_by_cols",
        "test_subquery_row_range_rank",
        "test_window_expression_within_subquery",
        "test_frame_window_frame_notimplemented",
        "test_frame_empty_group_by_cols",
        "test_range_n_preceding_and_following",
        "test_invalid_source_expression"
      ],
      "tests/expressions_case/tests.py": [
        "test_update_binary",
        "test_filter_with_aggregation_in_condition",
        "test_invalid_when_constructor_args",
        "test_aggregation_empty_cases",
        "test_in_subquery",
        "test_filter_with_aggregation_in_predicate",
        "test_only_when_arguments",
        "test_empty_q_object",
        "test_condition_with_lookups",
        "test_annotate_with_empty_when"
      ],
      "tests/aggregation/tests.py": [
        "test_aggregation_default_unsupported_by_count",
        "test_annotated_aggregate_over_annotated_aggregate",
        "test_aggregation_default_expression",
        "test_aggregation_default_integer",
        "test_aggregation_subquery_annotation_exists",
        "test_multi_arg_aggregate"
      ],
      "tests/expressions/tests.py": [
        "test_annotate_values_filter",
        "test_filtered_aggregates",
        "test_exists_in_filter",
        "test_filtering_on_annotate_that_uses_q",
        "test_nested_outerref_with_function",
        "test_subquery",
        "test_empty_group_by",
        "test_resolve_output_field",
        "test_expressions",
        "test_aggregate_subquery_annotation"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-14983",
    "file_function": {
      "sklearn/model_selection/tests/test_split.py": [
        "test_leave_one_p_group_out",
        "test_get_n_splits_for_repeated_stratified_kfold",
        "test_repeated_cv_value_errors",
        "test_get_n_splits_for_repeated_kfold",
        "test_2d_y",
        "test_cross_validator_with_default_params"
      ]
    }
  },
  {
    "instance_id": "django__django-13820",
    "file_function": {
      "tests/migrations/test_loader.py": [
        "test_explicit_missing_module",
        "test_load_empty_dir",
        "test_load_module_file",
        "test_invalid"
      ],
      "tests/migrations/test_commands.py": [
        "test_migrate_nonexistent_app_label"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-25960",
    "file_function": {
      "lib/matplotlib/tests/test_constrainedlayout.py": [
        "test_colorbar_align",
        "test_constrained_layout7",
        "test_compressed1"
      ],
      "lib/matplotlib/tests/test_figure.py": [
        "test_subfigure_ticks"
      ]
    }
  },
  {
    "instance_id": "django__django-13023",
    "file_function": {
      "tests/model_fields/test_decimalfield.py": [
        "test_filter_with_strings",
        "test_to_python",
        "test_max_decimal_places_validation",
        "test_max_digits_validation",
        "test_max_whole_digits_validation",
        "test_get_prep_value"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-14623",
    "file_function": {
      "lib/matplotlib/tests/test_ticker.py": [
        "test_offset_value"
      ],
      "lib/matplotlib/tests/test_scale.py": [
        "test_logscale_invert_transform",
        "test_extra_kwargs_raise"
      ],
      "lib/matplotlib/tests/test_transforms.py": [
        "test_nonsingular"
      ],
      "lib/matplotlib/tests/test_axes.py": [
        "test_log_scales"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-20438",
    "file_function": {
      "sympy/sets/tests/test_sets.py": [
        "test_issue_10337",
        "test_is_subset",
        "test_finite_basic",
        "test_difference",
        "test_product_basic",
        "test_issue_11827",
        "test_boundary_ProductSet_line",
        "test_imageset",
        "test_issue_20379",
        "test_measure",
        "test_Complement",
        "test_ProductSet",
        "test_complement"
      ],
      "sympy/sets/tests/test_fancysets.py": [
        "test_halfcircle"
      ]
    }
  },
  {
    "instance_id": "django__django-15554",
    "file_function": {
      "tests/queries/tests.py": [
        "test_ticket7045",
        "test_ticket2496"
      ],
      "tests/filtered_relation/tests.py": [
        "test_condition_deeper_relation_name",
        "test_condition_outside_relation_name",
        "test_with_m2m_multijoin",
        "test_with_join_and_complex_condition",
        "test_nested_chained_relations",
        "test_multiple_times",
        "test_relation_name_lookup"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-7606",
    "file_function": {
      "astropy/units/tests/test_units.py": [
        "test_unknown_unit3"
      ]
    }
  },
  {
    "instance_id": "django__django-12276",
    "file_function": {
      "tests/forms_tests/tests/test_forms.py": [
        "test_forms_with_file_fields"
      ],
      "tests/forms_tests/widget_tests/test_clearablefileinput.py": [
        "test_use_required_attribute"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-23262",
    "file_function": {
      "sympy/printing/tests/test_pycode.py": [
        "test_codegen_ast_nodes",
        "test_sqrt",
        "test_PythonCodePrinter",
        "test_frac",
        "test_issue_14283",
        "test_PythonCodePrinter_standard"
      ],
      "sympy/utilities/tests/test_lambdify.py": [
        "test_str_args",
        "test_deprecated_set",
        "test_atoms",
        "test_lambdify_cse",
        "test_lambdify_Derivative_arg_issue_16468",
        "test_sym_integral",
        "test_lambdify_dummy_arg",
        "test_lambdify",
        "test_issue_14941",
        "test_ITE",
        "test_special_printers",
        "test_matrix"
      ],
      "sympy/printing/tests/test_lambdarepr.py": [
        "test_sum__1",
        "test_numexpr",
        "test_sum__2",
        "test_multiple_sums",
        "test_matrix"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-22714",
    "file_function": {
      "sympy/core/tests/test_sympify.py": [
        "test_issue_17811",
        "test_evaluate_false",
        "test_issue_6046"
      ],
      "sympy/parsing/tests/test_sympy_parser.py": [
        "test_issue_10773",
        "test_parsing_definitions",
        "test_function_evaluate_false",
        "test_sympy_parser"
      ],
      "sympy/geometry/tests/test_line.py": [
        "test_bisectors"
      ],
      "sympy/geometry/tests/test_point.py": [
        "test_point3D",
        "test_arguments",
        "test_transform",
        "test_unit",
        "test_Point2D",
        "test_point",
        "test_dot"
      ]
    }
  },
  {
    "instance_id": "pylint-dev__pylint-4970",
    "file_function": {
      "tests/checkers/unittest_similar.py": [
        "test_ignore_docstrings",
        "test_get_map_data"
      ],
      "tests/test_self.py": [
        "test_parallel_execution",
        "test_regression_parallel_mode_without_filepath",
        "test_jobs_score",
        "test_duplicate_code_raw_strings"
      ]
    }
  },
  {
    "instance_id": "django__django-13012",
    "file_function": {
      "tests/expressions/tests.py": [
        "test_expressions",
        "test_filtering_on_q_that_is_boolean",
        "test_datetime_subtraction"
      ],
      "tests/aggregation/tests.py": [
        "test_complex_values_aggregation"
      ],
      "tests/annotations/tests.py": [
        "test_mixed_type_annotation_numbers",
        "test_annotate_with_aggregation"
      ]
    }
  },
  {
    "instance_id": "django__django-11239",
    "file_function": {
      "tests/dbshell/test_postgresql.py": [
        "test_basic",
        "test_accent",
        "test_column"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-14365",
    "file_function": {
      "astropy/io/ascii/tests/test_qdp.py": [
        "test_roundtrip",
        "test_read_write_simple"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-6744",
    "file_function": {
      "xarray/tests/test_rolling.py": [
        "test_rolling_wrapped_dask",
        "test_rolling_keep_attrs",
        "test_rolling_properties",
        "test_rolling_reduce",
        "test_rolling_iter",
        "test_rolling_repr",
        "test_ndrolling_construct"
      ]
    }
  },
  {
    "instance_id": "django__django-11095",
    "file_function": {
      "tests/admin_views/tests.py": [
        "test_simple_inline_permissions",
        "test_inline"
      ],
      "tests/admin_inlines/tests.py": [
        "test_all_inline_media",
        "test_inline_change_fk_all_perms"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-9711",
    "file_function": {
      "tests/test_config.py": [
        "test_needs_sphinx"
      ],
      "tests/test_environment.py": [
        "test_config_status"
      ]
    }
  },
  {
    "instance_id": "django__django-17084",
    "file_function": {
      "tests/aggregation/test_filter_argument/FilteredAggregateTests/test_filtered_aggregate_full_condition.py": [
        "test_filtered_aggregate_full_condition"
      ],
      "tests/aggregation/tests/AggregateTestCase/test_annotated_aggregate_over_annotated_aggregate.py": [
        "test_annotated_aggregate_over_annotated_aggregate"
      ],
      "tests/aggregation/tests/AggregateTestCase/test_aggregate_over_aggregate.py": [
        "test_aggregate_over_aggregate"
      ],
      "tests/aggregation/tests/AggregateTestCase/test_aggregation_default_passed_another_aggregate.py": [
        "test_aggregation_default_passed_another_aggregate"
      ],
      "tests/aggregation/tests/AggregateTestCase/test_aggregation_default_compound_expression.py": [
        "test_aggregation_default_compound_expression"
      ],
      "tests/aggregation/tests/AggregateTestCase/test_multi_arg_aggregate.py": [
        "test_multi_arg_aggregate"
      ],
      "tests/aggregation/tests/AggregateTestCase/test_aggregation_default_unsupported_by_count.py": [
        "test_aggregation_default_unsupported_by_count"
      ],
      "tests/aggregation/tests/AggregateTestCase/test_complex_aggregations_require_kwarg.py": [
        "test_complex_aggregations_require_kwarg"
      ],
      "tests/expressions/tests/ReprTests/test_filtered_aggregates.py": [
        "test_filtered_aggregates"
      ]
    }
  },
  {
    "instance_id": "django__django-15561",
    "file_function": {
      "tests/schema/tests.py": [
        "test_add_field_default_dropped",
        "test_rename_referenced_field",
        "test_alter_field_fk_keeps_index",
        "test_add_textfield_unhashable_default",
        "test_alter_not_unique_field_to_primary_key",
        "test_alter_text_field",
        "test_add_field_db_collation"
      ],
      "tests/migrations/test_executor.py": [
        "test_alter_id_type_with_fk"
      ],
      "tests/migrations/test_operations.py": [
        "test_rename_field_case",
        "test_rename_model_with_m2m",
        "test_alter_field_m2m"
      ]
    }
  },
  {
    "instance_id": "django__django-13406",
    "file_function": {
      "tests/queryset_pickle/tests.py": [
        "test_missing_django_version_unpickling",
        "test_pickle_exists_queryset_still_usable",
        "test_unsupported_unpickle",
        "test_specialized_queryset"
      ],
      "tests/queries/tests.py": [
        "test_correct_lookup",
        "test_named_values_list_with_fields",
        "test_named_values_list_expression_with_default_alias",
        "test_named_values_list_flat",
        "test_named_values_list_without_fields"
      ],
      "tests/aggregation_regress/tests.py": [
        "test_more_more_more",
        "test_annotation"
      ],
      "tests/annotations/tests.py": [
        "test_annotation_exists_aggregate_values_chaining",
        "test_annotation_filter_with_subquery"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-7462",
    "file_function": {
      "tests/test_domain_py.py": [
        "test_pyfunction_signature_full_py38",
        "test_parse_annotation",
        "test_pyobject_prefix",
        "test_pyfunction_signature_full",
        "test_pydata_signature_old",
        "test_domain_py_xrefs",
        "test_optional_pyfunction_signature",
        "test_pyfunction"
      ],
      "tests/test_ext_autodoc.py": [
        "test_autodoc"
      ]
    }
  },
  {
    "instance_id": "django__django-13837",
    "file_function": {
      "tests/utils_tests/test_autoreload.py": [
        "test_calls_sys_exit",
        "test_manage_py",
        "test_watchman_available",
        "test_entrypoint_fallback",
        "test_calls_start_django",
        "test_run_as_module",
        "test_watch_dir_with_unresolvable_path",
        "test_run_loop_catches_stopiteration",
        "test_wait_for_apps_ready_without_exception",
        "test_watch_files_with_recursive_glob",
        "test_exe_fallback",
        "test_watch_with_glob",
        "test_raises_runtimeerror",
        "test_watchman_becomes_unavailable",
        "test_wait_for_apps_ready_checks_for_exception",
        "test_swallows_keyboard_interrupt",
        "test_run_loop_stop_and_return"
      ]
    }
  },
  {
    "instance_id": "django__django-16429",
    "file_function": {
      "tests/utils_tests/test_timesince.py": [
        "test_naive_datetime_with_tzinfo_attribute",
        "test_leap_year_new_years_eve",
        "test_depth_invalid",
        "test_leap_year"
      ],
      "tests/template_tests/filter_tests/test_timesince.py": [
        "test_timesince19"
      ]
    }
  },
  {
    "instance_id": "django__django-15280",
    "file_function": {
      "tests/model_inheritance/tests.py": [
        "test_parent_cache_reuse",
        "test_related_objects_for_inherited_models",
        "test_abstract_parent_link",
        "test_parent_child_one_to_one_link_on_nonrelated_objects"
      ],
      "tests/queries/tests.py": [
        "test_ticket_20955",
        "test_ticket22023",
        "test_ticket7778"
      ],
      "tests/prefetch_related/tests.py": [
        "test_invalid_final_lookup",
        "test_forward_m2m_to_attr_conflict",
        "test_prefetch_reverse_foreign_key",
        "test_prefetch_eq",
        "test_prefetch_GFK_fk_pk",
        "test_ambiguous",
        "test_using_is_honored_inheritance",
        "test_clear",
        "test_named_values_list",
        "test_raw_queryset",
        "test_custom_qs",
        "test_traverse_nullable",
        "test_parent_link_prefetch"
      ],
      "tests/select_related_onetoone/tests.py": [
        "test_follow_inheritance"
      ]
    }
  },
  {
    "instance_id": "django__django-13315",
    "file_function": {
      "tests/model_forms/tests.py": [
        "test_validate_foreign_key_uses_default_manager",
        "test_foreignkeys_which_use_to_field",
        "test_callable_called_each_time_form_is_instantiated",
        "test_fields_for_model_applies_limit_choices_to",
        "test_limit_choices_to_callable_for_fk_rel"
      ],
      "tests/model_forms/test_modelchoicefield.py": [
        "test_disabled_modelchoicefield"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-7571",
    "file_function": {
      "testing/test_fixture.py": [
        "test_record_tuples",
        "test_caplog_captures_for_all_stages",
        "test_messages",
        "test_caplog_can_override_global_log_level",
        "test_clear"
      ],
      "testing/test_reporting.py": [
        "test_logging_emit_error"
      ]
    }
  },
  {
    "instance_id": "django__django-15375",
    "file_function": {
      "tests/aggregation_regress/tests.py": [
        "test_empty_filter_aggregate"
      ],
      "tests/aggregation/tests.py": [
        "test_empty_result_optimization",
        "test_empty_aggregate"
      ],
      "tests/annotations/tests.py": [
        "test_filter_alias_agg_with_double_f"
      ],
      "tests/queries/tests.py": [
        "test_empty_sliced_subquery"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-25775",
    "file_function": {
      "lib/matplotlib/tests/test_text.py": [
        "test_text_repr",
        "test_transform_rotates_text",
        "test_wrap",
        "test_annotation_contains",
        "test_invalid_rotation_values",
        "test_contains",
        "test_char_index_at",
        "test_parse_math",
        "test_annotation_update",
        "test_bbox_clipping",
        "test_font_styles",
        "test_annotate_offset_fontsize",
        "test_update_mutate_input",
        "test_get_rotation_raises",
        "test_null_rotation_with_rotation_mode",
        "test_get_window_extent_wrapped",
        "test_annotate_errors",
        "test_nonfinite_pos",
        "test_set_position"
      ],
      "lib/matplotlib/tests/test_bbox_tight.py": [
        "test_only_on_non_finite_bbox"
      ],
      "lib/matplotlib/tests/test_axes.py": [
        "test_tick_param_labelfont",
        "test_annotate_default_arrow",
        "test_bar_label_location_center"
      ],
      "lib/matplotlib/tests/test_usetex.py": [
        "test_usetex_with_underscore"
      ],
      "lib/matplotlib/tests/test_mathtext.py": [
        "test_mathtext_rendering_lightweight"
      ],
      "lib/matplotlib/tests/test_texmanager.py": [
        "test_unicode_characters"
      ],
      "lib/matplotlib/tests/test_figure.py": [
        "test_deepcopy"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-13877",
    "file_function": {
      "sympy/matrices/tests/test_matrices.py": [
        "test_determinant",
        "test_errors",
        "test_inv_block",
        "test_inverse",
        "test_matrix_inverse_mod",
        "test_det_LU_decomposition"
      ],
      "sympy/matrices/tests/test_commonmatrix.py": [
        "test_det"
      ]
    }
  },
  {
    "instance_id": "django__django-11848",
    "file_function": {
      "tests/utils_tests/test_http.py": [
        "test_parsing_rfc850",
        "test_parsing_year_less_than_70"
      ]
    }
  },
  {
    "instance_id": "psf__requests-1724",
    "file_function": {
      "tests/test_requests.py": [
        "test_params_are_added_before_fragment",
        "test_basic_building",
        "test_DIGESTAUTH_WRONG_HTTP_401_GET",
        "test_unicode_multipart_post_fieldnames",
        "test_can_send_nonstring_objects_with_files",
        "test_unicode_header_name",
        "test_HTTP_200_OK_PUT",
        "test_autoset_header_values_are_native",
        "test_invalid_url",
        "test_DIGEST_AUTH_RETURNS_COOKIE",
        "test_long_authinfo_in_url"
      ]
    }
  },
  {
    "instance_id": "django__django-14404",
    "file_function": {
      "tests/middleware_exceptions/tests.py": [
        "test_async_and_sync_middleware_chain_async_call",
        "test_log_custom_message",
        "test_process_view_return_response",
        "test_exception_in_async_render_passed_to_process_exception",
        "test_process_template_response",
        "test_async_process_template_response_returns_none_with_sync_client",
        "test_not_sync_or_async_middleware",
        "test_async_middleware",
        "test_exception_in_render_passed_to_process_exception"
      ],
      "tests/handlers/tests.py": [
        "test_suspiciousop_in_view_returns_400",
        "test_auto_transaction",
        "test_unawaited_response",
        "test_middleware_returns_none",
        "test_bad_request_in_view_returns_400",
        "test_auto_transaction_async_view",
        "test_no_response"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-13033",
    "file_function": {
      "astropy/timeseries/tests/test_sampled.py": [
        "test_required_columns",
        "test_empty_initialization"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-7757",
    "file_function": {
      "tests/test_domain_py.py": [
        "test_pyfunction_signature_full_py38",
        "test_function_signatures",
        "test_pyfunction_signature_full",
        "test_pydata_signature_old",
        "test_domain_py_xrefs",
        "test_pyfunction",
        "test_optional_pyfunction_signature",
        "test_pyobject_prefix"
      ],
      "tests/test_ext_autodoc.py": [
        "test_autodoc"
      ]
    }
  },
  {
    "instance_id": "django__django-15127",
    "file_function": {
      "tests/messages_tests/tests.py": [
        "test_eq"
      ],
      "tests/messages_tests/test_mixins.py": [
        "test_set_messages_success_on_delete"
      ]
    }
  },
  {
    "instance_id": "django__django-11211",
    "file_function": {
      "tests/generic_relations/tests.py": [
        "test_multiple_gfk",
        "test_cache_invalidation_for_content_type_id",
        "test_cache_invalidation_for_object_id"
      ],
      "tests/contenttypes_tests/test_fields.py": [
        "test_incorrect_get_prefetch_queryset_arguments"
      ],
      "tests/prefetch_related/tests.py": [
        "test_nullable_GFK"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-4966",
    "file_function": {
      "xarray/tests/test_backends.py": [
        "test_complex"
      ],
      "xarray/tests/test_coding.py": [
        "test_CFMaskCoder_encode_missing_fill_values_conflict",
        "test_CFMaskCoder_missing_value"
      ]
    }
  },
  {
    "instance_id": "pylint-dev__pylint-4551",
    "file_function": {
      "tests/unittest_pyreverse_diadefs.py": [
        "test_exctract_relations",
        "test_functional_relation_extraction"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-24870",
    "file_function": {
      "lib/matplotlib/tests/test_contour.py": [
        "test_contour_legend_elements",
        "test_labels",
        "test_contour_closed_line_loop",
        "test_contour_remove",
        "test_given_colors_levels_and_extends",
        "test_contour_uniform_z",
        "test_all_algorithms",
        "test_contourf_log_extension",
        "test_find_nearest_contour_no_filled",
        "test_contourf_legend_elements",
        "test_contourf_symmetric_locator",
        "test_contour_badlevel_fmt",
        "test_contour_manual_labels",
        "test_contour_shape_error",
        "test_contourf_decreasing_levels",
        "test_contour_manual",
        "test_find_nearest_contour",
        "test_quadcontourset_reuse"
      ],
      "lib/matplotlib/tests/test_axes.py": [
        "test_contour_colorbar",
        "test_contour_hatching"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-13974",
    "file_function": {
      "sympy/physics/quantum/tests/test_tensorproduct.py": [
        "test_tensor_product_dagger",
        "test_eval_trace",
        "test_tensor_product_commutator"
      ]
    }
  },
  {
    "instance_id": "django__django-16100",
    "file_function": {
      "tests/admin_changelist/tests.py": [
        "test_get_list_editable_queryset"
      ],
      "tests/admin_views/tests.py": [
        "test_missing_slash_append_slash_true",
        "test_list_editable_action_submit",
        "test_disallowed_filtering",
        "test_post_messages",
        "test_disallowed_to_field",
        "test_change"
      ],
      "tests/admin_views/test_actions.py": [
        "test_model_admin_default_delete_action"
      ]
    }
  },
  {
    "instance_id": "django__django-14534",
    "file_function": {
      "tests/forms_tests/tests/test_forms.py": [
        "test_boundfield_slice",
        "test_hidden_initial_gets_id",
        "test_widget_output",
        "test_auto_id_true",
        "test_boundfield_css_classes",
        "test_templates_with_forms",
        "test_forms_with_radio",
        "test_boundfield_widget_type",
        "test_boundfield_id_for_label",
        "test_form_with_iterable_boundfield_id",
        "test_boundfield_invalid_index",
        "test_error_html_required_html_classes",
        "test_changed_data"
      ],
      "tests/forms_tests/field_tests/test_choicefield.py": [
        "test_choicefield_disabled"
      ]
    }
  },
  {
    "instance_id": "django__django-11603",
    "file_function": {
      "tests/aggregation_regress/tests.py": [
        "test_more_more_more",
        "test_allow_distinct"
      ],
      "tests/aggregation/test_filter_argument.py": [
        "test_filtered_aggregate_on_annotate"
      ],
      "tests/aggregation/tests.py": [
        "test_multi_arg_aggregate",
        "test_complex_aggregations_require_kwarg"
      ],
      "tests/expressions/tests.py": [
        "test_filtered_aggregates"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-25122",
    "file_function": {
      "lib/matplotlib/tests/test_mlab.py": [
        "test_csd_padding",
        "test_specgram",
        "test_spectral_helper_raises",
        "test_psd_windowarray_scale_by_freq"
      ]
    }
  },
  {
    "instance_id": "django__django-14765",
    "file_function": {
      "tests/migrations/test_operations.py": [
        "test_rename_m2m_through_model",
        "test_alter_field_pk_mti_fk",
        "test_remove_constraint",
        "test_rename_model_with_self_referential_m2m",
        "test_remove_field_m2m_with_through",
        "test_rename_referenced_field_state_forward",
        "test_remove_field_m2m",
        "test_remove_index_state_forwards",
        "test_remove_func_unique_constraint",
        "test_rename_missing_field",
        "test_alter_index_together_remove_with_unique_together"
      ],
      "tests/migrations/test_commands.py": [
        "test_migrate_with_system_checks",
        "test_migrate_fake_initial_case_insensitive",
        "test_migrate_not_reflected_changes"
      ],
      "tests/migrations/test_executor.py": [
        "test_alter_id_type_with_fk"
      ],
      "tests/migrations/test_state.py": [
        "test_repr",
        "test_dangling_references_throw_error"
      ],
      "tests/migrations/test_autodetector.py": [
        "test_proxy_to_mti_with_fk_to_proxy_proxy"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-24026",
    "file_function": {
      "lib/matplotlib/tests/test_axes.py": [
        "test_stackplot_baseline"
      ]
    }
  },
  {
    "instance_id": "django__django-16642",
    "file_function": {
      "tests/responses/test_fileresponse/FileResponseTests/test_content_disposition_file.py": [
        "test_content_disposition_file"
      ],
      "tests/responses/test_fileresponse/FileResponseTests/test_file_from_named_pipe_response.py": [
        "test_file_from_named_pipe_response"
      ],
      "tests/responses/test_fileresponse/FileResponseTests/test_content_length_nonzero_starting_position_buffer.py": [
        "test_content_length_nonzero_starting_position_buffer"
      ],
      "tests/middleware/tests.py": [
        "test_compress_file_response"
      ],
      "tests/responses/test_fileresponse/FileResponseTests/test_content_length_nonzero_starting_position_file_seekable_no_tell.py": [
        "test_content_length_nonzero_starting_position_file_seekable_no_tell"
      ],
      "tests/responses/test_fileresponse/FileResponseTests/test_content_length_nonzero_starting_position_file.py": [
        "test_content_length_nonzero_starting_position_file"
      ],
      "tests/responses/test_fileresponse/FileResponseTests/test_response_nonzero_starting_position.py": [
        "test_response_nonzero_starting_position"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-8399",
    "file_function": {
      "testing/test_unittest.py": [
        "test_do_class_cleanups_on_setupclass_failure",
        "test_no_teardown_if_setupclass_failed",
        "test_class_method_containing_test_issue1558",
        "test_setup",
        "test_runTest_method"
      ]
    }
  },
  {
    "instance_id": "django__django-14792",
    "file_function": {
      "tests/utils_tests/test_timezone.py": [
        "test_override_string_tz",
        "test_override_fixed_offset",
        "test_get_default_timezone"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-18763",
    "file_function": {
      "sympy/printing/tests/test_latex.py": [
        "test_set_operators_parenthesis",
        "test_latex_subs",
        "test_latex_derivatives",
        "test_latex_basic"
      ]
    }
  },
  {
    "instance_id": "django__django-13513",
    "file_function": {
      "tests/view_tests/tests/test_debug.py": [
        "test_unfrozen_importlib",
        "test_reporting_frames_for_cyclic_reference",
        "test_request_with_items_key",
        "test_reporting_frames_source_not_match",
        "test_template_encoding",
        "test_reporting_frames_without_source"
      ]
    }
  },
  {
    "instance_id": "django__django-12325",
    "file_function": {
      "tests/model_inheritance/test_abstract_inheritance.py": [
        "test_multi_inheritance_field_clashes",
        "test_cannot_override_indirect_abstract_field",
        "test_virtual_field",
        "test_override_one2one_relation_auto_field_clashes"
      ],
      "tests/proxy_models/tests.py": [
        "test_swappable",
        "test_abstract_base_with_model_fields",
        "test_too_many_concrete_classes",
        "test_no_base_classes"
      ],
      "tests/model_inheritance_regress/tests.py": [
        "test_issue_6755",
        "test_abstract_base_class_m2m_relation_inheritance",
        "test_id_field_update_on_ancestor_change",
        "test_inherited_unique_field_with_form"
      ],
      "tests/model_inheritance/tests.py": [
        "test_exclude_inherited_on_null",
        "test_init_subclass",
        "test_custompk_m2m"
      ],
      "tests/one_to_one/tests.py": [
        "test_related_object"
      ],
      "tests/proxy_model_inheritance/tests.py": [
        "test_table_exists"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-2905",
    "file_function": {
      "xarray/tests/test_variable.py": [
        "test_masked_array",
        "test_0d_datetime",
        "test_reduce_funcs",
        "test_0d_timedelta",
        "test_timedelta64_conversion_scalar",
        "test_setitem_fancy",
        "test_set_dims_object_dtype"
      ],
      "xarray/tests/test_missing.py": [
        "test_interpolate_na_max_gap_time_specifier"
      ],
      "xarray/tests/test_dataset.py": [
        "test_from_dataframe_sparse",
        "test_sel"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-25311",
    "file_function": {
      "lib/matplotlib/tests/test_legend.py": [
        "test_fancy",
        "test_legend_labelcolor_markeredgecolor",
        "test_reverse_legend_handles_and_labels",
        "test_legend_labelcolor_single",
        "test_get_set_draggable",
        "test_legend_auto4",
        "test_reverse_legend_display",
        "test_legend_pathcollection_labelcolor_linecolor_iterable",
        "test_legend_labelcolor_rcparam_single",
        "test_warn_big_data_best_loc",
        "test_legend_labelcolor_markerfacecolor",
        "test_legend_title_fontprop_fontsize",
        "test_legend_set_alignment",
        "test_legend_auto5",
        "test_legend_pathcollection_labelcolor_markeredgecolor_cmap",
        "test_legend_pathcollection_labelcolor_markeredgecolor_iterable",
        "test_legend_pathcollection_labelcolor_markerfacecolor_iterable",
        "test_legend_label_with_leading_underscore",
        "test_setting_alpha_keeps_polycollection_color",
        "test_legend_pathcollection_labelcolor_linecolor_cmap",
        "test_rc",
        "test_legend_markers_from_line2d",
        "test_legend_labelcolor_linecolor",
        "test_legend_pathcollection_labelcolor_linecolor",
        "test_figure_legend_outside"
      ],
      "lib/matplotlib/tests/test_axes.py": [
        "test_pie_nolabel_but_legend"
      ]
    }
  },
  {
    "instance_id": "django__django-11964",
    "file_function": {
      "tests/model_fields/test_promises.py": [
        "test_CharField",
        "test_SlugField"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-21930",
    "file_function": {
      "sympy/physics/tests/test_secondquant.py": [
        "test_commutator",
        "test_commutation",
        "test_basic_apply",
        "test_create",
        "test_complex_apply",
        "test_annihilate",
        "test_dagger"
      ]
    }
  },
  {
    "instance_id": "django__django-15268",
    "file_function": {
      "tests/migrations/test_autodetector.py": [
        "test_rename_foreign_object_fields",
        "test_create_model_and_unique_together"
      ],
      "tests/migrations/test_optimizer.py": [
        "test_alter_alter_unique_model"
      ],
      "tests/migrations/test_operations.py": [
        "test_alter_unique_together_remove",
        "test_alter_index_together_remove",
        "test_alter_index_together_remove_with_unique_together"
      ]
    }
  },
  {
    "instance_id": "django__django-11532",
    "file_function": {
      "tests/mail/tests.py": [
        "test_recipients_with_empty_strings",
        "test_header_injection",
        "test_sanitize_address_invalid",
        "test_recipients_as_string",
        "test_unicode_headers",
        "test_console_stream_kwarg",
        "test_dont_base64_encode_message_rfc822",
        "test_safe_mime_multipart",
        "test_attachments_MIMEText",
        "test_attach_file",
        "test_validate_multiline_headers",
        "test_attachments_two_tuple"
      ],
      "tests/mail/test_sendtestemail.py": [
        "test_admin_receivers"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-17655",
    "file_function": {
      "sympy/geometry/tests/test_point.py": [
        "test_point"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-10356",
    "file_function": {
      "testing/test_mark.py": [
        "test_parametrized_with_kwargs",
        "test_marked_class_run_twice",
        "test_mark_with_wrong_marker",
        "test_aliases",
        "test_parametrize_iterator"
      ],
      "testing/test_collection.py": [
        "test_no_under",
        "test_duplicates_handled_correctly",
        "test_unpacked_marks_added_to_keywords"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-13031",
    "file_function": {
      "sympy/matrices/tests/test_matrices.py": [
        "test_gauss_jordan_solve",
        "test_issue_5320",
        "test_issue_11944"
      ],
      "sympy/matrices/tests/test_commonmatrix.py": [
        "test_vstack",
        "test_hstack"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-3993",
    "file_function": {
      "xarray/tests/test_dataset.py": [
        "test_integrate",
        "test_trapz_datetime"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-10614",
    "file_function": {
      "tests/test_ext_inheritance_diagram.py": [
        "test_inheritance_diagram",
        "test_inheritance_diagram_latex_alias"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-13615",
    "file_function": {
      "sympy/sets/tests/test_sets.py": [
        "test_issue_9637",
        "test_Complement",
        "test_issue_9808",
        "test_complement"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-24661",
    "file_function": {
      "sympy/core/tests/test_relational.py": [
        "test_weak_strict",
        "test_relational_bool_output",
        "test_simplify_relational",
        "test_improved_canonical",
        "test_trigsimp",
        "test_issue_18188",
        "test_equals",
        "test_rel_args",
        "test_canonical",
        "test_new_relational",
        "test_nan_complex_inequalities"
      ],
      "sympy/parsing/tests/test_sympy_parser.py": [
        "test_issue_10773",
        "test_function_evaluate_false",
        "test_issue_22822",
        "test_parsing_definitions",
        "test_sympy_parser"
      ],
      "sympy/simplify/tests/test_simplify.py": [
        "test_issue_21869"
      ],
      "sympy/core/tests/test_sympify.py": [
        "test_issue_17811",
        "test_evaluate_false",
        "test_issue_6046"
      ],
      "sympy/core/tests/test_evalf.py": [
        "test_evalf_relational"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-9320",
    "file_function": {
      "tests/test_quickstart.py": [
        "test_generated_files_eol",
        "test_quickstart_and_build",
        "test_do_prompt",
        "test_extensions",
        "test_quickstart_defaults",
        "test_quickstart_all_answers"
      ]
    }
  },
  {
    "instance_id": "django__django-15525",
    "file_function": {
      "tests/fixtures/tests.py": [
        "test_circular_reference",
        "test_forward_reference_fk",
        "test_forward_reference_fk_natural_key",
        "test_circular_reference_natural_key"
      ]
    }
  },
  {
    "instance_id": "django__django-14999",
    "file_function": {
      "tests/migrations/test_operations.py": [
        "test_rename_model_with_self_referential_m2m",
        "test_rename_model_with_m2m",
        "test_rename_m2m_target_model"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-24637",
    "file_function": {
      "lib/matplotlib/tests/test_offsetbox.py": [
        "test_annotationbbox_extents",
        "test_picking"
      ]
    }
  },
  {
    "instance_id": "django__django-14752",
    "file_function": {
      "tests/admin_views/test_autocomplete_view.py": [
        "test_limit_choices_to",
        "test_field_does_not_exist",
        "test_success",
        "test_custom_to_field",
        "test_custom_to_field_permission_denied",
        "test_field_does_not_allowed",
        "test_missing_search_fields",
        "test_field_no_related_field"
      ]
    }
  },
  {
    "instance_id": "django__django-13410",
    "file_function": {
      "tests/file_storage/tests.py": [
        "test_file_save_with_path",
        "test_makedirs_race_handling",
        "test_remove_race_handling"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-6197",
    "file_function": {
      "testing/test_collection.py": [
        "test_collect_sub_with_symlinks",
        "test_collect_protocol_method",
        "test_find_byid_without_instance_parents",
        "test_global_file",
        "test_ignored_virtualenvs",
        "test_collect_with_chdir_during_import",
        "test_matchnodes_two_collections_same_file",
        "test_collectignore_exclude_on_option",
        "test_collect_pkg_init_only"
      ],
      "testing/test_conftest.py": [
        "test_conftest_uppercase",
        "test_conftest_symlink"
      ],
      "testing/test_config.py": [
        "test_override_ini_pathlist",
        "test_pytest_plugins_in_non_top_level_conftest_unsupported_pyargs"
      ],
      "testing/test_session.py": [
        "test_exclude_glob",
        "test_minus_x_import_error",
        "test_exclude"
      ]
    }
  },
  {
    "instance_id": "pylint-dev__pylint-6386",
    "file_function": {
      "tests/config/test_functional_config_loading.py": [
        "test_functional_config_loading"
      ],
      "tests/lint/unittest_lint.py": [
        "test_load_plugin_command_line",
        "test_load_plugin_config_file"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-22871",
    "file_function": {
      "lib/matplotlib/tests/test_dates.py": [
        "test_concise_formatter_formats",
        "test_concise_formatter_zformats",
        "test_concise_formatter_subsecond",
        "test_concise_formatter_exceptions",
        "test_concise_formatter_call",
        "test_concise_formatter_show_offset",
        "test_concise_formatter_usetex",
        "test_concise_formatter"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-8269",
    "file_function": {
      "tests/test_build_linkcheck.py": [
        "test_defaults",
        "test_anchors_ignored",
        "test_defaults_json"
      ],
      "tests/test_build.py": [
        "test_build_all"
      ]
    }
  },
  {
    "instance_id": "django__django-12304",
    "file_function": {
      "tests/model_enums/tests.py": [
        "test_str",
        "test_integerchoices_containment",
        "test_textchoices_containment",
        "test_textchoices_blank_value",
        "test_textchoices_functional_api"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-23824",
    "file_function": {
      "sympy/physics/hep/tests/test_gamma_matrices.py": [
        "test_kahane_algorithm",
        "test_gamma_matrix_class"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-13989",
    "file_function": {
      "lib/matplotlib/tests/test_axes.py": [
        "test_hist_labels",
        "test_hist_density",
        "test_hist_step_log_bottom",
        "test_hist_normed_density",
        "test_hist_stacked_bar",
        "test_hist_unequal_bins_density",
        "test_hist_steplog",
        "test_hist_stacked_weighted",
        "test_hist_stacked_density",
        "test_length_one_hist"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-10466",
    "file_function": {
      "tests/test_build_gettext.py": [
        "test_gettext_template",
        "test_gettext_template_msgid_order_in_sphinxpot"
      ],
      "tests/test_intl.py": [
        "test_gettext_section",
        "test_gettext_dont_rebuild_mo"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-15100",
    "file_function": {
      "sklearn/feature_extraction/tests/test_text.py": [
        "test_tfidf_vectorizer_type",
        "test_vectorizer_string_object_as_input",
        "test_countvectorizer_custom_vocabulary",
        "test_tfidfvectorizer_binary",
        "test_vectorizer_min_df",
        "test_pickling_vectorizer",
        "test_vectorizer_inverse_transform",
        "test_tfidfvectorizer_invalid_idf_attr",
        "test_countvectorizer_empty_vocabulary",
        "test_tfidf_vectorizer_setters",
        "test_tfidf_vectorizer_setter",
        "test_count_vectorizer_max_features",
        "test_tfidf_vectorizer_deprecationwarning",
        "test_char_ngram_analyzer"
      ]
    }
  },
  {
    "instance_id": "django__django-13449",
    "file_function": {
      "tests/expressions_window/tests.py": [
        "test_lead_default"
      ],
      "tests/db_functions/window/test_validation.py": [
        "test_null_source_lag",
        "test_lag_negative_offset",
        "test_null_source_lead"
      ]
    }
  },
  {
    "instance_id": "django__django-14373",
    "file_function": {
      "tests/utils_tests/test_dateformat.py": [
        "test_dateformat"
      ],
      "tests/i18n/tests.py": [
        "test_all_format_strings"
      ],
      "tests/template_tests/filter_tests/test_date.py": [
        "test_date02"
      ]
    }
  },
  {
    "instance_id": "django__django-13821",
    "file_function": {
      "tests/backends/base/test_creation.py": [
        "test_self_reference",
        "test_circular_reference",
        "test_circular_reference_with_natural_key"
      ],
      "tests/backends/sqlite/tests.py": [
        "test_check_sqlite_version",
        "test_pathlib_name",
        "test_constraint_checks_disabled_atomic_allowed"
      ]
    }
  },
  {
    "instance_id": "django__django-13810",
    "file_function": {
      "tests/handlers/tests.py": [
        "test_no_response",
        "test_middleware_returns_none"
      ],
      "tests/middleware_exceptions/tests.py": [
        "test_not_sync_or_async_middleware",
        "test_log",
        "test_sync_middleware_async",
        "test_view_exception_handled_by_process_exception",
        "test_exception_in_render_passed_to_process_exception",
        "test_templateresponse_from_process_view_passed_to_process_template_response",
        "test_log_custom_message",
        "test_exception_in_async_render_passed_to_process_exception",
        "test_async_middleware"
      ],
      "tests/asgi/tests.py": [
        "test_get_asgi_application"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-5809",
    "file_function": {
      "testing/test_pastebin.py": [
        "test_failed",
        "test_create_new_paste",
        "test_non_ascii_paste_text"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-4695",
    "file_function": {
      "xarray/tests/test_dataarray.py": [
        "test_selection_multiindex"
      ],
      "xarray/tests/test_indexing.py": [
        "test_get_dim_indexers",
        "test_convert_unsorted_datetime_index_raises",
        "test_convert_label_indexer"
      ],
      "xarray/tests/test_dataset.py": [
        "test_selection_multiindex",
        "test_sel",
        "test_sel_dataarray_mindex",
        "test_categorical_index",
        "test_sel_method"
      ]
    }
  },
  {
    "instance_id": "django__django-14053",
    "file_function": {
      "tests/staticfiles_tests/test_storage.py": [
        "test_clear_empties_manifest",
        "test_file_change_after_collectstatic"
      ]
    }
  },
  {
    "instance_id": "mwaskom__seaborn-3069",
    "file_function": {
      "tests/_core/test_scales.py": [
        "test_tick_locator",
        "test_tick_every",
        "test_symlog_tick_default",
        "test_color_named_palette",
        "test_label_unit_with_sep",
        "test_tick_upto",
        "test_log_tick_upto",
        "test_color_with_transform",
        "test_tick_at",
        "test_label_like_pattern",
        "test_coordinate_transform_error",
        "test_log_tick_count",
        "test_interval_with_range_norm_and_transform",
        "test_object_order_subset",
        "test_label_formatter",
        "test_label_type_checks",
        "test_coordinate_transform_with_parameter",
        "test_tick_locator_input_check",
        "test_label_concise",
        "test_label_empty_unit",
        "test_tick_count_between",
        "test_tick_minor",
        "test_label_like_function",
        "test_tick_every_between",
        "test_label_unit",
        "test_label_like_string",
        "test_log_tick_every"
      ],
      "tests/_core/test_plot.py": [
        "test_on_axes_with_subplots_error",
        "test_limits",
        "test_variable_list",
        "test_axis_sharing_with_facets",
        "test_type_checks",
        "test_positional_and_named_xy",
        "test_faceted_log_scale",
        "test_cross_mismatched_lengths",
        "test_show",
        "test_theme_error",
        "test_positional_too_many",
        "test_2d_with_order",
        "test_positional_and_named_data",
        "test_theme_params",
        "test_1d_with_order",
        "test_stat_nondefault",
        "test_layout_algo",
        "test_layout_size",
        "test_axis_sharing",
        "test_on_type_check",
        "test_save",
        "test_single_variable_key_raises",
        "test_png_repr",
        "test_positional_data_x",
        "test_unknown_keywords",
        "test_labels_facets",
        "test_title_facet_function",
        "test_methods_clone",
        "test_two_variables_single_order_error"
      ]
    }
  },
  {
    "instance_id": "pylint-dev__pylint-7277",
    "file_function": {
      "tests/test_pylint_runners.py": [
        "test_runner",
        "test_runner_with_arguments"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-6461",
    "file_function": {
      "xarray/tests/test_computation.py": [
        "test_dot",
        "test_where_attrs",
        "test_dot_align_coords",
        "test_where"
      ]
    }
  },
  {
    "instance_id": "django__django-11149",
    "file_function": {
      "tests/admin_views/tests.py": [
        "test_simple_inline_permissions",
        "test_edit_save_as_delete_inline"
      ],
      "tests/admin_inlines/tests.py": [
        "test_inline_change_m2m_change_perm",
        "test_inline_editable_pk",
        "test_deleting_inline_with_protected_delete_does_not_validate"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-8551",
    "file_function": {
      "tests/test_domain_py.py": [
        "test_domain_py_xrefs"
      ]
    }
  },
  {
    "instance_id": "django__django-13401",
    "file_function": {
      "tests/model_inheritance/test_abstract_inheritance.py": [
        "test_multi_inheritance_field_clashes",
        "test_multiple_inheritance_cannot_shadow_concrete_inherited_field"
      ],
      "tests/model_inheritance/tests.py": [
        "test_exclude_inherited_on_null",
        "test_filter_inherited_on_null"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-15349",
    "file_function": {
      "sympy/algebras/tests/test_quaternion.py": [
        "test_quaternion_conversions"
      ]
    }
  },
  {
    "instance_id": "django__django-11490",
    "file_function": {
      "tests/queries/tests.py": [
        "test_exclude_many_to_many",
        "test_exclude_reverse_fk_field_ref",
        "test_ticket24525",
        "test_ticket7235",
        "test_infinite_loop",
        "test_field_error_values_list",
        "test_ticket_20955",
        "test_ticket_21203",
        "test_tickets_7087_12242",
        "test_empty_sliced_subquery",
        "test_slicing_cannot_combine_queries_once_sliced",
        "test_evaluated_proxy_count",
        "test_related_sliced_subquery",
        "test_ticket2496",
        "test_ordering",
        "test_extra_values",
        "test_ticket_18414",
        "test_wrong_type_lookup",
        "test_correct_lookup",
        "test_join_reuse_order",
        "test_iter_exceptions",
        "test_invalid_qs_list",
        "test_avoid_infinite_loop_on_too_many_subqueries",
        "test_extra_multiple_select_params_values_order_by",
        "test_invalid_queryset_model",
        "test_error_raised_on_filter_with_dictionary",
        "test_distinct_ordered_sliced_subquery",
        "test_ticket2253",
        "test_slice_subquery_and_query",
        "test_heterogeneous_qs_combination",
        "test_ticket2306",
        "test_ticket_23605",
        "test_distinct_ordered_sliced_subquery_aggregation",
        "test_invalid_order_by"
      ],
      "tests/aggregation_regress/tests.py": [
        "test_more_more_more",
        "test_annotated_conditional_aggregate",
        "test_field_error",
        "test_aggregate_fexpr",
        "test_more",
        "test_conditional_aggregate_on_complex_condition"
      ],
      "tests/queries/test_query.py": [
        "test_foreign_key_f",
        "test_transform",
        "test_foreign_key"
      ],
      "tests/aggregation/tests.py": [
        "test_combine_different_types",
        "test_empty_aggregate",
        "test_aggregate_in_order_by"
      ],
      "tests/select_related/tests.py": [
        "test_generic_relations",
        "test_non_relational_field",
        "test_select_related_with_extra",
        "test_chaining"
      ],
      "tests/queries/test_qs_combinators.py": [
        "test_unsupported_ordering_slicing_raises_db_error",
        "test_union_with_two_annotated_values_list",
        "test_difference_with_empty_qs",
        "test_union_distinct",
        "test_count_union_empty_result",
        "test_qs_with_subcompound_qs",
        "test_order_raises_on_non_selected_column"
      ],
      "tests/ordering/tests.py": [
        "test_order_by_constant_value",
        "test_random_ordering",
        "test_orders_nulls_first_on_filtered_subquery",
        "test_order_by_f_expression_duplicates"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-7490",
    "file_function": {
      "testing/test_skipping.py": [
        "test_xfail_condition_keyword",
        "test_dynamic_xfail_no_run",
        "test_strict_xfail",
        "test_xfail_imperative",
        "test_strict_xfail_default_from_file",
        "test_xfail_raises"
      ],
      "testing/test_reports.py": [
        "test_itemreport_outcomes"
      ],
      "testing/test_mark.py": [
        "test_keyword_added_for_session",
        "test_addmarker_order"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-20826",
    "file_function": {
      "lib/matplotlib/tests/test_axes.py": [
        "test_reset_grid",
        "test_aitoff_proj",
        "test_mollweide_forward_inverse_closure",
        "test_mollweide_grid",
        "test_twinx_cla",
        "test_minorticks_on_rcParams_both"
      ],
      "lib/matplotlib/tests/test_ticker.py": [
        "test_minorticks_rc"
      ],
      "lib/matplotlib/tests/test_figure.py": [
        "test_subfigure_double"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-26208",
    "file_function": {
      "lib/matplotlib/tests/test_figure.py": [
        "test_align_labels_stray_axes",
        "test_subfigure"
      ],
      "lib/matplotlib/tests/test_axes.py": [
        "test_twinx_knows_limits",
        "test_twin_spines_on_top",
        "test_contour_colorbar"
      ]
    }
  },
  {
    "instance_id": "django__django-13658",
    "file_function": {
      "tests/bash_completion/tests.py": [
        "test_manage_py",
        "test_django_admin_py",
        "test_completed_subcommand",
        "test_subcommands"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-23476",
    "file_function": {
      "lib/matplotlib/tests/test_figure.py": [
        "test_savefig_pixel_ratio",
        "test_deepcopy"
      ],
      "lib/matplotlib/tests/test_pickle.py": [
        "test_complete",
        "test_polar"
      ]
    }
  },
  {
    "instance_id": "django__django-15022",
    "file_function": {
      "tests/admin_changelist/tests.py": [
        "test_custom_lookup_with_pk_shortcut",
        "test_custom_lookup_in_search_fields",
        "test_spanning_relations_with_custom_lookup_in_search_fields",
        "test_pk_in_search_fields"
      ],
      "tests/admin_views/tests.py": [
        "test_search_with_spaces",
        "test_exact_matches",
        "test_pluggable_search"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-11310",
    "file_function": {
      "sklearn/model_selection/tests/test_search.py": [
        "test_grid_search_cv_results",
        "test_fit_grid_point",
        "test_search_train_scores_set_to_false",
        "test_unsupervised_grid_search",
        "test_grid_search_fit_params_deprecation",
        "test_transform_inverse_transform_round_trip",
        "test_random_search_cv_results_multimetric",
        "test_random_search_cv_results",
        "test_no_refit",
        "test_grid_search_fit_params_two_places",
        "test_grid_search"
      ],
      "sklearn/model_selection/tests/test_validation.py": [
        "test_gridsearchcv_cross_val_predict_with_method"
      ],
      "sklearn/tests/test_metaestimators.py": [
        "test_metaestimator_delegation"
      ]
    }
  },
  {
    "instance_id": "django__django-14017",
    "file_function": {
      "tests/expressions/tests.py": [
        "test_filtering_on_annotate_that_uses_q",
        "test_aggregate_subquery_annotation",
        "test_filtering_on_q_that_is_boolean",
        "test_subquery"
      ],
      "tests/queries/test_q.py": [
        "test_combine_and_empty",
        "test_deconstruct_or",
        "test_combine_not_q_object",
        "test_reconstruct_or"
      ],
      "tests/queries/tests.py": [
        "test_ticket5261"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-14711",
    "file_function": {
      "sympy/physics/vector/tests/test_functions.py": [
        "test_operator_match"
      ]
    }
  },
  {
    "instance_id": "django__django-12193",
    "file_function": {
      "tests/forms_tests/widget_tests/test_checkboxinput.py": [
        "test_render_check_test",
        "test_render_int",
        "test_value_from_datadict",
        "test_value_omitted_from_data",
        "test_render_value"
      ],
      "tests/forms_tests/tests/test_forms.py": [
        "test_various_boolean_values",
        "test_boundfield_id_for_label",
        "test_forms_with_radio",
        "test_form_with_noniterable_boundfield",
        "test_hidden_widget"
      ],
      "tests/forms_tests/widget_tests/test_widget.py": [
        "test_value_omitted_from_data"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-13328",
    "file_function": {
      "sklearn/tests/test_common.py": [
        "test_estimators"
      ],
      "sklearn/linear_model/tests/test_huber.py": [
        "test_huber_warm_start",
        "test_huber_and_sgd_same_results",
        "test_huber_scaling_invariant"
      ],
      "sklearn/linear_model/tests/test_base.py": [
        "test_preprocess_data_multioutput",
        "test_raises_value_error_if_sample_weights_greater_than_1d",
        "test_sparse_preprocess_data_with_return_mean",
        "test_preprocess_copy_data_no_checks",
        "test_linear_regression_sparse_equal_dense"
      ]
    }
  },
  {
    "instance_id": "django__django-13516",
    "file_function": {
      "tests/migrations/test_commands.py": [
        "test_migrations_no_operations",
        "test_sqlmigrate_forwards",
        "test_makemigrations_nonexistent_app_label",
        "test_sqlmigrate_replaced_migration",
        "test_makemigrations_app_name_specified_as_label",
        "test_migrate_with_system_checks",
        "test_sqlmigrate_backwards"
      ]
    }
  },
  {
    "instance_id": "django__django-9296",
    "file_function": {
      "tests/pagination/tests.py": [
        "test_first_page",
        "test_paginate_misc_classes",
        "test_invalid_page_number",
        "test_paginator",
        "test_get_page",
        "test_paginating_unordered_object_list_raises_warning"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-14309",
    "file_function": {
      "astropy/io/registry/tests/test_registries.py": [
        "test_write_noformat_arbitrary_file"
      ],
      "astropy/io/fits/tests/test_connect.py": [
        "test_simple",
        "test_with_units",
        "test_masked",
        "test_read_from_hdulist",
        "test_read_from_hdulist_with_hdu_missing"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-21568",
    "file_function": {
      "lib/matplotlib/tests/test_dates.py": [
        "test_concise_formatter_formats",
        "test_concise_formatter_zformats",
        "test_concise_formatter_subsecond",
        "test_locator_set_formatter",
        "test_concise_formatter_show_offset",
        "test_concise_formatter_usetex",
        "test_date_formatter_callable",
        "test_concise_formatter"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-9658",
    "file_function": {
      "tests/test_ext_autodoc_mock.py": [
        "test_MockObject"
      ],
      "tests/test_ext_autodoc_configs.py": [
        "test_mocked_module_imports"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-26291",
    "file_function": {
      "lib/matplotlib/tests/test_offsetbox.py": [
        "test_paddedbox_default_values",
        "test_picking",
        "test_annotationbbox_extents"
      ],
      "lib/mpl_toolkits/axes_grid1/tests/test_axes_grid1.py": [
        "test_inset_axes_complete"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-10297",
    "file_function": {
      "sklearn/linear_model/tests/test_ridge.py": [
        "test_ridgecv_store_cv_values",
        "test_class_weights_cv",
        "test_ridgecv_sample_weight"
      ]
    }
  },
  {
    "instance_id": "django__django-16595",
    "file_function": {
      "tests/migrations/test_operations.py": [
        "test_alter_field",
        "test_alter_field_pk_fk",
        "test_alter_field_pk"
      ],
      "tests/migrations/test_optimizer.py": [
        "test_alter_field_delete_field",
        "test_alter_field_rename_field"
      ],
      "tests/migrations/test_commands.py": [
        "test_makemigrations_interactive_not_null_alteration"
      ],
      "tests/migrations/test_operations/FieldOperationTests/test_references_field_by_from_fields.py": [
        "test_references_field_by_from_fields"
      ]
    }
  },
  {
    "instance_id": "django__django-12663",
    "file_function": {
      "tests/queries/tests.py": [
        "test_ticket7096",
        "test_ticket24525",
        "test_invalid_values",
        "test_ticket14511"
      ],
      "tests/queries/test_bulk_update.py": [
        "test_ipaddressfield",
        "test_field_references"
      ],
      "tests/model_fields/test_integerfield.py": [
        "test_invalid_value"
      ],
      "tests/lookup/tests.py": [
        "test_regex_null",
        "test_chain_date_time_lookups"
      ],
      "tests/queries/test_query.py": [
        "test_transform"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-14508",
    "file_function": {
      "astropy/io/fits/tests/test_header.py": [
        "test_pattern_matching_keys",
        "test_fix_hierarch_with_invalid_value",
        "test_floating_point_value_card",
        "test_complex_value_card",
        "test_update_field_specifier",
        "test_rvkc_insert_after"
      ],
      "astropy/io/fits/tests/test_image.py": [
        "test_scale_back_compressed"
      ]
    }
  },
  {
    "instance_id": "django__django-11276",
    "file_function": {
      "tests/utils_tests/test_html.py": [
        "test_conditional_escape"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-10435",
    "file_function": {
      "tests/test_build_latex.py": [
        "test_latex_raw_directive",
        "test_latex_container",
        "test_latex_images",
        "test_latex_toplevel_sectioning_is_part",
        "test_numref",
        "test_latex_labels",
        "test_latex_obey_numfig_but_math_numfig_false",
        "test_latex_figure_in_admonition",
        "test_writer",
        "test_latex_toplevel_sectioning_is_chapter_with_howto",
        "test_footnote",
        "test_toctree_with_deeper_maxdepth",
        "test_latex_obey_numfig_secnum_depth_is_zero",
        "test_babel_with_language_ja",
        "test_latex_title_after_admonitions",
        "test_latex_image_in_parsed_literal",
        "test_babel_with_unknown_language",
        "test_latex_show_urls_is_footnote",
        "test_image_in_section",
        "test_latex_code_role",
        "test_latex_show_urls_footnote_and_substitutions",
        "test_latex_nested_tables",
        "test_latex_table_custom_template_caseA"
      ],
      "tests/test_markup.py": [
        "test_inline"
      ],
      "tests/test_directive_code.py": [
        "test_code_block_caption_latex"
      ]
    }
  },
  {
    "instance_id": "django__django-14539",
    "file_function": {
      "tests/utils_tests/test_html.py": [
        "test_smart_urlquote",
        "test_urlize_unchanged_inputs",
        "test_urlize"
      ],
      "tests/template_tests/filter_tests/test_urlizetrunc.py": [
        "test_urlizetrunc01",
        "test_urlizetrunc02"
      ],
      "tests/template_tests/filter_tests/test_urlize.py": [
        "test_wrapping_characters",
        "test_word_with_dot"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-22080",
    "file_function": {
      "sympy/core/tests/test_args.py": [
        "test_sympy__series__formal__FormalPowerSeriesCompose",
        "test_sympy__series__formal__FormalPowerSeriesProduct"
      ],
      "sympy/printing/tests/test_python.py": [
        "test_python_keyword_symbol_name_escaping",
        "test_python_functions"
      ],
      "sympy/core/tests/test_numbers.py": [
        "test_mod"
      ],
      "sympy/utilities/tests/test_lambdify.py": [
        "test_lambdify_dummy_arg",
        "test_special_printers",
        "test_lambdify_imps",
        "test_issue_14941",
        "test_dummification",
        "test_lambdify_cse",
        "test_sym_integral",
        "test_lambdify_Derivative_arg_issue_16468"
      ],
      "sympy/core/tests/test_function.py": [
        "test_issue_17382"
      ]
    }
  },
  {
    "instance_id": "django__django-13343",
    "file_function": {
      "tests/field_deconstruction/tests.py": [
        "test_image_field",
        "test_file_field"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-21596",
    "file_function": {
      "sympy/sets/tests/test_sets.py": [
        "test_is_disjoint",
        "test_is_subset",
        "test_finite_basic",
        "test_union",
        "test_product_basic",
        "test_is_proper_subset",
        "test_intersect1",
        "test_SymmetricDifference",
        "test_Complement",
        "test_is_superset",
        "test_issue_9623",
        "test_issue_10248",
        "test_intersection",
        "test_is_finiteset",
        "test_ProductSet",
        "test_boundary_Union",
        "test_Intersection_as_relational",
        "test_closure",
        "test_is_proper_superset",
        "test_boundary_ProductSet"
      ],
      "sympy/sets/tests/test_fancysets.py": [
        "test_naturals",
        "test_Range_set"
      ]
    }
  },
  {
    "instance_id": "django__django-14771",
    "file_function": {
      "tests/utils_tests/test_autoreload.py": [
        "test_calls_sys_exit",
        "test_manage_py",
        "test_watchman_available",
        "test_python_m_django",
        "test_calls_start_django",
        "test_entrypoint_fallback",
        "test_watch_dir_with_unresolvable_path",
        "test_run_loop_catches_stopiteration",
        "test_wait_for_apps_ready_without_exception",
        "test_watch_files_with_recursive_glob",
        "test_exe_fallback",
        "test_run_as_non_django_module_non_package",
        "test_watch_with_glob",
        "test_raises_runtimeerror",
        "test_wait_for_apps_ready_checks_for_exception",
        "test_swallows_keyboard_interrupt",
        "test_run_loop_stop_and_return"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-8638",
    "file_function": {
      "tests/test_domain_py.py": [
        "test_resolve_xref_for_properties",
        "test_pyattribute",
        "test_pydata_signature",
        "test_pydata",
        "test_get_full_qualified_name",
        "test_noindexentry",
        "test_domain_py_xrefs"
      ],
      "tests/test_ext_autodoc.py": [
        "test_autodoc_imported_members",
        "test_partialmethod_undoc_members",
        "test_autodoc_noindex",
        "test_autodoc_member_order",
        "test_format_signature",
        "test_autodoc_special_members",
        "test_new_documenter",
        "test_partialmethod",
        "test_name_mangling",
        "test_autodoc_exclude_members",
        "test_hide_value",
        "test_autodoc_inner_class",
        "test_autodoc_inherited_members_Base",
        "test_autodoc_warnings",
        "test_final",
        "test_autodoc_typed_instance_variables",
        "test_overload",
        "test_enum_class",
        "test_autodoc_GenericAlias"
      ],
      "tests/test_ext_autodoc_autoclass.py": [
        "test_show_inheritance_for_subclass_of_generic_type"
      ],
      "tests/test_ext_autodoc_events.py": [
        "test_skip_module_member",
        "test_process_docstring"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-22456",
    "file_function": {
      "sympy/codegen/tests/test_ast.py": [
        "test_FunctionCall",
        "test_Declaration",
        "test_String",
        "test_Variable",
        "test_none"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-24177",
    "file_function": {
      "lib/matplotlib/tests/test_axes.py": [
        "test_hist_range_and_density",
        "test_hist_stacked_weighted",
        "test_hist_stacked_bar",
        "test_hist_unequal_bins_density",
        "test_hist_log_2",
        "test_hist_step_horiz",
        "test_hist_zorder",
        "test_hist_stacked_density"
      ]
    }
  },
  {
    "instance_id": "django__django-14351",
    "file_function": {
      "tests/queries/tests.py": [
        "test_exclude_many_to_many",
        "test_infinite_loop",
        "test_field_error_values_list",
        "test_ticket_20955",
        "test_ticket_10790_combine",
        "test_tickets_7087_12242",
        "test_slicing_cannot_combine_queries_once_sliced",
        "test_tickets_5324_6704",
        "test_slicing_can_slice_again_after_slicing",
        "test_ticket2496",
        "test_exclude_subquery",
        "test_ordering",
        "test_tickets_7698_10202",
        "test_exclude_nullable_fields",
        "test_iter_exceptions",
        "test_tickets_3045_3288",
        "test_excluded_intermediary_m2m_table_joined",
        "test_extra_values_order_multiple",
        "test_avoid_infinite_loop_on_too_many_subqueries",
        "test_ticket10432",
        "test_invalid_queryset_model",
        "test_error_raised_on_filter_with_dictionary",
        "test_distinct_ordered_sliced_subquery",
        "test_subquery_exclude_outerref",
        "test_BAB_BACB",
        "test_heterogeneous_qs_combination",
        "test_ticket_23605",
        "test_distinct_ordered_sliced_subquery_aggregation"
      ],
      "tests/lookup/tests.py": [
        "test_none",
        "test_exact_query_rhs_with_selected_columns",
        "test_nested_outerref_lhs",
        "test_isnull_non_boolean_value",
        "test_relation_nested_lookup_error",
        "test_chain_date_time_lookups",
        "test_values",
        "test_unsupported_lookups"
      ],
      "tests/aggregation_regress/tests.py": [
        "test_more_more_more",
        "test_annotated_conditional_aggregate",
        "test_having_group_by",
        "test_conditional_aggregate_on_complex_condition",
        "test_aggregate_annotation"
      ],
      "tests/filtered_relation/tests.py": [
        "test_with_join_and_complex_condition",
        "test_difference",
        "test_deep_nested_foreign_key",
        "test_condition_deeper_relation_name",
        "test_condition_outside_relation_name",
        "test_defer",
        "test_union",
        "test_relation_name_lookup",
        "test_intersection"
      ],
      "tests/aggregation/tests.py": [
        "test_aggregation_nested_subquery_outerref",
        "test_empty_aggregate",
        "test_aggregate_in_order_by",
        "test_aggregation_subquery_annotation_exists",
        "test_annotate_values_list",
        "test_aggregation_order_by_not_selected_annotation_values"
      ],
      "tests/queries/test_query.py": [
        "test_multiple_fields",
        "test_filter_non_conditional",
        "test_transform",
        "test_foreign_key",
        "test_clone_select_related",
        "test_filter_conditional_join"
      ]
    }
  },
  {
    "instance_id": "django__django-15741",
    "file_function": {
      "tests/i18n/tests.py": [
        "test_all_format_strings",
        "test_l10n_enabled",
        "test_format_arbitrary_settings"
      ],
      "tests/template_tests/filter_tests/test_date.py": [
        "test_date01"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-7205",
    "file_function": {
      "testing/test_setuponly.py": [
        "test_show_fixtures_with_parameters",
        "test_show_fixtures_with_parameter_ids"
      ]
    }
  },
  {
    "instance_id": "django__django-13128",
    "file_function": {
      "tests/expressions/tests.py": [
        "test_expressions",
        "test_negative_timedelta_update",
        "test_equal",
        "test_not_equal_Value",
        "test_time_subtraction",
        "test_hash",
        "test_empty_group_by"
      ],
      "tests/aggregation/tests.py": [
        "test_complex_values_aggregation",
        "test_aggregation_order_by_not_selected_annotation_values",
        "test_aggregate_over_complex_annotation"
      ],
      "tests/expressions_case/tests.py": [
        "test_update_binary"
      ],
      "tests/expressions_window/tests.py": [
        "test_lead",
        "test_function_list_of_values"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-25479",
    "file_function": {
      "lib/matplotlib/tests/test_colors.py": [
        "test_colormaps_get_cmap",
        "test_double_register_builtin_cmap",
        "test_register_cmap",
        "test_unregister_builtin_cmap"
      ],
      "lib/matplotlib/tests/test_image.py": [
        "test_unclipped",
        "test_empty_imshow",
        "test_cursor_data",
        "test_large_image",
        "test_composite",
        "test_imshow_clips_rgb_to_valid_range",
        "test_imshow_10_10_1",
        "test_axesimage_get_shape",
        "test_image_array_alpha_validation",
        "test_str_norms",
        "test_imshow_10_10_2",
        "test_jpeg_2d",
        "test_imsave_pil_kwargs_png",
        "test_jpeg_alpha",
        "test_get_window_extent_for_AxisImage",
        "test_respects_bbox",
        "test_imshow_no_warn_invalid",
        "test_image_preserve_size2",
        "test_imshow_float128",
        "test_mask_image_all",
        "test_imsave_fspath"
      ],
      "lib/matplotlib/tests/test_axes.py": [
        "test_extent_units",
        "test_contour_colorbar",
        "test_hexbin_log_clim",
        "test_scatter_norm_vminvmax"
      ],
      "lib/matplotlib/tests/test_colorbar.py": [
        "test_colorbar_axes_kw",
        "test_colorbar_format",
        "test_parentless_mappable",
        "test_colorbarbase",
        "test_colorbar_positioning",
        "test_colorbar_single_ax_panchor_east"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-11445",
    "file_function": {
      "tests/test_toctree.py": [
        "test_numbered_toctree"
      ],
      "tests/test_environment_toctree.py": [
        "test_process_doc"
      ],
      "tests/test_directive_other.py": [
        "test_toctree"
      ],
      "tests/test_build_html.py": [
        "test_docutils_output",
        "test_html5_output"
      ],
      "tests/test_environment.py": [
        "test_images"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-7393",
    "file_function": {
      "xarray/tests/test_dataarray.py": [
        "test_selection_multiindex_remove_unused",
        "test_repr_multiindex_long",
        "test_repr_multiindex",
        "test_error_on_ellipsis_without_list",
        "test_stack_unstack"
      ],
      "xarray/tests/test_indexing.py": [
        "test_stacked_multiindex_min_max"
      ],
      "xarray/tests/test_dataset.py": [
        "test_sel_dataarray_mindex",
        "test_to_stacked_array_to_unstacked_dataset",
        "test_stack_multi_index",
        "test_repr_multiindex"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-9591",
    "file_function": {
      "tests/test_ext_autodoc.py": [
        "test_autodoc_cached_property",
        "test_abstractmethods"
      ],
      "tests/test_domain_py.py": [
        "test_domain_py_canonical",
        "test_pyproperty",
        "test_domain_py_xrefs"
      ],
      "tests/test_ext_autodoc_autoproperty.py": [
        "test_cached_properties"
      ],
      "tests/test_ext_autodoc_autoclass.py": [
        "test_properties"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-8595",
    "file_function": {
      "tests/test_ext_autodoc.py": [
        "test_autodoc_typed_instance_variables",
        "test_autodoc_module_member_order",
        "test_autodoc_ignore_module_all",
        "test_parse_name",
        "test_cython",
        "test_autodoc_attributes"
      ],
      "tests/test_ext_autodoc_configs.py": [
        "test_autodoc_default_options",
        "test_autodoc_type_aliases"
      ]
    }
  },
  {
    "instance_id": "psf__requests-1921",
    "file_function": {
      "tests/test_requests.py": [
        "test_request_and_response_are_pickleable",
        "test_DIGEST_STREAM",
        "test_cannot_send_unprepared_requests",
        "test_header_remove_is_case_insensitive",
        "test_transport_adapter_ordering"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-13453",
    "file_function": {
      "astropy/io/ascii/tests/test_write.py": [
        "test_write_table"
      ],
      "astropy/io/ascii/tests/test_html.py": [
        "test_write_table_html_fill_values_masked",
        "test_multicolumn_table_html_fill_values",
        "test_multi_column_write_table_html_fill_values_masked"
      ]
    }
  },
  {
    "instance_id": "django__django-14311",
    "file_function": {
      "tests/utils_tests/test_autoreload.py": [
        "test_watchman_available",
        "test_wait_for_apps_ready_without_exception",
        "test_exe_fallback",
        "test_raises_runtimeerror",
        "test_swallows_keyboard_interrupt",
        "test_tick_does_not_trigger_twice",
        "test_calls_start_django",
        "test_run_as_module",
        "test_run_loop_catches_stopiteration",
        "test_watch_files_with_recursive_glob",
        "test_run_as_non_django_module",
        "test_watch_with_glob",
        "test_snapshot_files_ignores_missing_files",
        "test_wait_for_apps_ready_checks_for_exception",
        "test_calls_sys_exit",
        "test_python_m_django",
        "test_run_loop_stop_and_return",
        "test_entrypoint_fallback",
        "test_watch_dir_with_unresolvable_path",
        "test_snapshot_files_with_duplicates",
        "test_manage_py"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-26194",
    "file_function": {
      "sklearn/metrics/tests/test_common.py": [
        "test_multiclass_sample_weight_invariance",
        "test_binary_sample_weight_invariance"
      ],
      "sklearn/metrics/_plot/tests/test_roc_curve_display.py": [
        "test_roc_curve_display_plotting"
      ],
      "sklearn/metrics/tests/test_ranking.py": [
        "test_roc_curve_one_label",
        "test_roc_curve_multi",
        "test_binary_clf_curve_multiclass_error",
        "test_roc_curve_toydata"
      ]
    }
  },
  {
    "instance_id": "django__django-13028",
    "file_function": {
      "tests/queries/tests.py": [
        "test_correct_lookup",
        "test_subquery_exclude_outerref",
        "test_ticket_23605",
        "test_error_raised_on_filter_with_dictionary"
      ],
      "tests/queries/test_query.py": [
        "test_foreign_key",
        "test_filter_non_conditional"
      ],
      "tests/aggregation_regress/tests.py": [
        "test_ticket_11293_q_immutable"
      ]
    }
  },
  {
    "instance_id": "django__django-15731",
    "file_function": {
      "tests/model_forms/tests.py": [
        "test_basic_creation"
      ],
      "tests/model_forms/test_modelchoicefield.py": [
        "test_choices"
      ],
      "tests/model_inheritance/tests.py": [
        "test_abstract"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-12682",
    "file_function": {
      "sklearn/decomposition/tests/test_dict_learning.py": [
        "test_dict_learning_split",
        "test_unknown_method",
        "test_sparse_encode_shapes_omp",
        "test_dict_learning_positivity",
        "test_sparse_coder_parallel_mmap"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-13124",
    "file_function": {
      "sklearn/model_selection/tests/test_split.py": [
        "test_shufflesplit_errors",
        "test_train_test_split_errors",
        "test_2d_y",
        "test_kfold_valueerrors",
        "test_train_test_default_warning"
      ],
      "sklearn/tests/test_common.py": [
        "test_non_meta_estimators"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-24213",
    "file_function": {
      "sympy/physics/units/tests/test_quantities.py": [
        "test_check_unit_consistency",
        "test_dimensional_expr_of_derivative",
        "test_factor_and_dimension",
        "test_issue_20288",
        "test_issue_24062"
      ]
    }
  },
  {
    "instance_id": "pylint-dev__pylint-4661",
    "file_function": {
      "tests/test_self.py": [
        "test_jobs_score",
        "test_json_report_when_file_is_missing",
        "test_error_mode_shows_no_score",
        "test_relative_imports",
        "test_allow_import_of_files_found_in_modules_during_parallel_check",
        "test_fail_on",
        "test_parallel_execution_bug_2674",
        "test_parallel_execution_missing_arguments"
      ],
      "tests/lint/unittest_lint.py": [
        "test_errors_only",
        "test_list_msgs_enabled",
        "test_set_unsupported_reporter",
        "test_pylintrc_parentdir",
        "test_pylintrc",
        "test_load_plugin_configuration"
      ],
      "tests/test_functional.py": [
        "test_functional"
      ],
      "tests/test_check_parallel.py": [
        "test_worker_check_sequential_checker",
        "test_worker_check_single_file_no_checkers",
        "test_sequential_checkers_work"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-7432",
    "file_function": {
      "testing/test_unittest.py": [
        "test_unittest_expected_failure_for_passing_test_is_fail"
      ],
      "testing/test_reports.py": [
        "test_itemreport_outcomes"
      ],
      "testing/test_skipping.py": [
        "test_xfail_imperative_in_setup_function",
        "test_strict_xfail",
        "test_xfail_imperative",
        "test_strict_xfail_default_from_file",
        "test_xfail_raises"
      ]
    }
  },
  {
    "instance_id": "django__django-12209",
    "file_function": {
      "tests/force_insert_update/tests.py": [
        "test_force_update_on_proxy_model",
        "test_force_update_on_inherited_model",
        "test_force_update"
      ],
      "tests/queries/tests.py": [
        "test_ticket7778",
        "test_21001",
        "test_evaluated_proxy_count"
      ]
    }
  },
  {
    "instance_id": "django__django-11292",
    "file_function": {
      "tests/admin_scripts/tests.py": [
        "test_no_color_force_color_mutually_exclusive_execute",
        "test_run_from_argv_closes_connections",
        "test_no_database",
        "test_custom_stderr",
        "test_params_to_runserver",
        "test_migration_warning_multiple_apps",
        "test_no_color_force_color_mutually_exclusive_command_init",
        "test_base_run_from_argv",
        "test_readonly_database",
        "test_force_color_execute",
        "test_migration_warning_one_app"
      ],
      "tests/user_commands/tests.py": [
        "test_check_migrations",
        "test_output_transaction",
        "test_subparser_invalid_option"
      ]
    }
  },
  {
    "instance_id": "django__django-11749",
    "file_function": {
      "tests/admin_scripts/tests.py": [
        "test_runner_addrport_ipv6",
        "test_command_color",
        "test_custom_stderr"
      ],
      "tests/user_commands/tests.py": [
        "test_subparser_invalid_option"
      ]
    }
  },
  {
    "instance_id": "django__django-12155",
    "file_function": {
      "tests/admin_docs/test_views.py": [
        "test_templatefilter_index"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-19040",
    "file_function": {
      "sympy/polys/tests/test_factortools.py": [
        "test_dmp_factor_list",
        "test_dmp_ext_factor",
        "test_dup_ext_factor"
      ],
      "sympy/polys/tests/test_polytools.py": [
        "test_factor"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-7889",
    "file_function": {
      "tests/test_ext_autodoc_mock.py": [
        "test_MockObject",
        "test_abc_MockObject"
      ],
      "tests/test_ext_autodoc_configs.py": [
        "test_mocked_module_imports"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-4629",
    "file_function": {
      "xarray/tests/test_merge.py": [
        "test_merge",
        "test_merge_arrays_attrs",
        "test_merge_wrong_input_error",
        "test_merge_compat"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-6938",
    "file_function": {
      "xarray/tests/test_dataset.py": [
        "test_swap_dims"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-6992",
    "file_function": {
      "xarray/tests/test_dataset.py": [
        "test_real_and_imag",
        "test_chunk",
        "test_expand_dims_error",
        "test_dataset_diff_n2",
        "test_drop_multiindex_level",
        "test_selection_multiindex",
        "test_cumulative_integrate",
        "test_apply_pending_deprecated_map",
        "test_unstack_errors",
        "test_roll_no_coords",
        "test_reset_index",
        "test_reduce_non_numeric",
        "test_roll_coords",
        "test_query",
        "test_rank_use_bottleneck",
        "test_from_dask",
        "test_rename_vars",
        "test_trapz_datetime",
        "test_shift",
        "test_rename",
        "test_drop_index_labels",
        "test_reduce_cumsum_test_dims",
        "test_reindex_method",
        "test_from_dataframe_multiindex",
        "test_sortby",
        "test_stack_multi_index",
        "test_setitem_using_list_errors",
        "test_ipython_key_completion",
        "test_rename_dimension_coord_warnings",
        "test_reindex",
        "test_fillna",
        "test_binary_op_join_setting",
        "test_to_pandas",
        "test_reduce_argmin",
        "test_tail",
        "test_swap_dims",
        "test_drop_labels_by_keyword",
        "test_rank",
        "test_combine_first",
        "test_to_stacked_array_to_unstacked_dataset",
        "test_equals_failures",
        "test_reduce_strings",
        "test_dataset_diff_exception_n_neg",
        "test_coords_set",
        "test_pad",
        "test_quantile_interpolation_deprecated",
        "test_to_stacked_array_invalid_sample_dims",
        "test_unary_ops",
        "test_to_and_from_dataframe",
        "test_dataset_diff_n1_label",
        "test_head",
        "test_differentiate",
        "test_reorder_levels",
        "test_drop_duplicates_1d",
        "test_reduce",
        "test_asarray",
        "test_to_and_from_dict",
        "test_data_vars_properties",
        "test_constructor_with_coords",
        "test_rename_dims",
        "test_polyfit_output",
        "test_thin",
        "test_differentiate_datetime",
        "test_setitem_using_list",
        "test_quantile",
        "test_isel_fancy",
        "test_to_stacked_array_name",
        "test_setitem",
        "test_dataset_number_math",
        "test_properties",
        "test_expand_dims_int",
        "test_from_dataframe_sparse",
        "test_to_stacked_array_to_unstacked_dataset_different_dimension",
        "test_virtual_variables_default_coords",
        "test_filter_by_attrs",
        "test_drop_dims",
        "test_coords_modify",
        "test_dataset_math_auto_align",
        "test_info",
        "test_rename_dimension_coord",
        "test_unstack_fill_value",
        "test_where_other",
        "test_dataset_dataset_math",
        "test_copy_with_data_errors",
        "test_from_dataframe_non_unique_columns",
        "test_expand_dims_kwargs_python36plus",
        "test_dataset_math_errors",
        "test_drop_variables",
        "test_dropna",
        "test_copy",
        "test_drop_labels_by_position",
        "test_rename_multiindex",
        "test_broadcast_like",
        "test_set_index",
        "test_dataset_diff_exception_label_str",
        "test_dask_is_lazy"
      ],
      "xarray/tests/test_dataarray.py": [
        "test_tail",
        "test_curvefit",
        "test_error_on_ellipsis_without_list",
        "test_pad_coords",
        "test_pad_reflect",
        "test_selection_multiindex_remove_unused",
        "test_set_index",
        "test_drop_duplicates_2d",
        "test_stack_unstack",
        "test_drop_multiindex_level",
        "test_reset_index",
        "test_idxmax",
        "test_idxmin",
        "test_reorder_levels",
        "test_polyfit",
        "test_expand_dims_error",
        "test_quantile_interpolation_deprecated"
      ]
    }
  },
  {
    "instance_id": "django__django-13112",
    "file_function": {
      "tests/migrations/test_commands.py": [
        "test_migrations_no_operations",
        "test_sqlmigrate_backwards",
        "test_makemigrations_handle_merge",
        "test_makemigrations_inconsistent_history",
        "test_makemigrations_no_common_ancestor",
        "test_showmigrations_plan",
        "test_makemigrations_merge_dont_output_dependency_operations",
        "test_unknown_prefix",
        "test_ambiguous_prefix"
      ],
      "tests/migrations/test_loader.py": [
        "test_explicit_missing_module",
        "test_invalid",
        "test_loading_squashed_complex_multi_apps_partially_applied",
        "test_check_consistent_history_squashed",
        "test_load_module_file",
        "test_load_empty_dir",
        "test_run_before",
        "test_check_consistent_history"
      ],
      "tests/migrations/test_executor.py": [
        "test_run_with_squashed",
        "test_minimize_rollbacks_branchy"
      ]
    }
  },
  {
    "instance_id": "django__django-14011",
    "file_function": {
      "tests/servers/test_basehttp.py": [
        "test_log_message",
        "test_https"
      ],
      "tests/servers/tests.py": [
        "test_keep_alive_connection_clears_previous_request_data"
      ]
    }
  },
  {
    "instance_id": "django__django-11551",
    "file_function": {
      "tests/modeladmin/test_checks.py": [
        "test_invalid_field_type",
        "test_missing_field",
        "test_valid_case"
      ]
    }
  },
  {
    "instance_id": "django__django-16502",
    "file_function": {
      "tests/servers/tests.py": [
        "test_closes_connection_with_content_length",
        "test_keep_alive_on_connection_with_content_length"
      ],
      "tests/servers/test_basehttp.py": [
        "test_strips_underscore_headers"
      ],
      "tests/servers/test_basehttp/WSGIRequestHandlerTestCase/test_log_message.py": [
        "test_log_message"
      ],
      "tests/servers/test_basehttp/WSGIRequestHandlerTestCase/test_https.py": [
        "test_https"
      ],
      "tests/servers/tests/LiveServerViews/test_keep_alive_connection_clears_previous_request_data.py": [
        "test_keep_alive_connection_clears_previous_request_data"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-15345",
    "file_function": {
      "sympy/printing/tests/test_mathematica.py": [
        "test_Integral",
        "test_constants",
        "test_Sum",
        "test_Pow",
        "test_Function",
        "test_Mul",
        "test_Derivative"
      ]
    }
  },
  {
    "instance_id": "django__django-13195",
    "file_function": {
      "tests/messages_tests/test_cookie.py": [
        "test_max_cookie_length",
        "test_get_bad_cookie",
        "test_legacy_hash_decode",
        "test_cookie_setings"
      ],
      "tests/responses/test_cookie.py": [
        "test_invalid_samesite"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-13135",
    "file_function": {
      "sklearn/preprocessing/tests/test_discretization.py": [
        "test_invalid_strategy_option",
        "test_same_min_max",
        "test_inverse_transform",
        "test_invalid_encode_option"
      ],
      "sklearn/tests/test_common.py": [
        "test_non_meta_estimators"
      ]
    }
  },
  {
    "instance_id": "django__django-13089",
    "file_function": {
      "tests/cache/tests.py": [
        "test_zero_cull"
      ]
    }
  },
  {
    "instance_id": "django__django-13964",
    "file_function": {
      "tests/model_inheritance/test_abstract_inheritance.py": [
        "test_multi_inheritance_field_clashes",
        "test_shadow_related_name_when_set_to_none",
        "test_multiple_inheritance_cannot_shadow_concrete_inherited_field"
      ],
      "tests/model_inheritance/tests.py": [
        "test_eq",
        "test_unique",
        "test_inherited_ordering_pk_desc",
        "test_unique_together",
        "test_related_objects_for_inherited_models"
      ],
      "tests/foreign_object/test_forms.py": [
        "test_foreign_object_form"
      ],
      "tests/model_fields/tests.py": [
        "test_check",
        "test_get_choices",
        "test_overriding_inherited_FIELD_display"
      ],
      "tests/foreign_object/tests.py": [
        "test_double_nested_query",
        "test_inheritance"
      ],
      "tests/validation/test_unique.py": [
        "test_unique_for_date"
      ],
      "tests/model_fields/test_foreignkey.py": [
        "test_warning_when_unique_true_on_fk"
      ],
      "tests/validation/tests.py": [
        "test_custom_validate_method"
      ]
    }
  },
  {
    "instance_id": "django__django-13933",
    "file_function": {
      "tests/model_forms/test_modelchoicefield.py": [
        "test_disabled_modelmultiplechoicefield_has_changed",
        "test_disabled_modelchoicefield_initial_model_instance",
        "test_choices_radio_blank",
        "test_disabled_modelchoicefield_has_changed",
        "test_clean_model_instance",
        "test_basics"
      ],
      "tests/model_forms/tests.py": [
        "test_initial_values",
        "test_callable_called_each_time_form_is_instantiated",
        "test_show_hidden_initial_changed_queries_efficiently",
        "test_model_multiple_choice_field",
        "test_fields_for_model_applies_limit_choices_to"
      ],
      "tests/forms_tests/tests/test_error_messages.py": [
        "test_modelchoicefield"
      ]
    }
  },
  {
    "instance_id": "django__django-11734",
    "file_function": {
      "tests/queries/tests.py": [
        "test_exclude_many_to_many",
        "test_exclude_reverse_fk_field_ref",
        "test_ticket10432",
        "test_ticket_23605",
        "test_error_raised_on_filter_with_dictionary"
      ],
      "tests/queries/test_query.py": [
        "test_foreign_key"
      ],
      "tests/lookup/tests.py": [
        "test_relation_nested_lookup_error"
      ],
      "tests/expressions/tests.py": [
        "test_exists_in_filter"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-9230",
    "file_function": {
      "tests/test_domain_py.py": [
        "test_pydata_with_union_type_operator",
        "test_pyobject_prefix",
        "test_pyfunction_with_union_type_operator",
        "test_domain_py_canonical",
        "test_function_signatures",
        "test_canonical_definition_overrides",
        "test_python_python_use_unqualified_type_names_disabled",
        "test_domain_py_xrefs",
        "test_python_python_use_unqualified_type_names",
        "test_pyfunction_signature_full",
        "test_pyfunction_signature_full_py38",
        "test_optional_pyfunction_signature",
        "test_parse_annotation",
        "test_pydata_signature_old"
      ],
      "tests/test_ext_autodoc.py": [
        "test_autodoc"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-13798",
    "file_function": {
      "sympy/printing/tests/test_latex.py": [
        "test_latex_Piecewise",
        "test_latex_Matrix",
        "test_latex_union",
        "test_Modules",
        "test_latex_productset",
        "test_latex_symmetric_difference",
        "test_latex_functions",
        "test_latex_integrals",
        "test_PolynomialRingBase",
        "test_latex_derivatives",
        "test_latex_ConditionSet",
        "test_QuotientRing",
        "test_issue_7117",
        "test_builtins_without_args",
        "test_latex_RandomDomain",
        "test_latex_Poly",
        "test_latex_FracElement",
        "test_WedgeProduct_printing",
        "test_MatrixElement_printing",
        "test_latex_euler",
        "test_latex_numbers",
        "test_Quaternion_latex_printing",
        "test_latex_UnevaluatedExpr",
        "test_latex_Integers",
        "test_latex_DiracDelta",
        "test_Hadamard",
        "test_latex_sequences",
        "test_latex_KroneckerDelta",
        "test_hyper_printing",
        "test_latex_builtins",
        "test_latex_ImageSet",
        "test_latex_FourierSeries",
        "test_latex_bessel",
        "test_categories",
        "test_latex",
        "test_builtin_no_args",
        "test_latex_Contains",
        "test_latex_NDimArray",
        "test_latex_indexed",
        "test_latex_LeviCivita",
        "test_TensorProduct_printing",
        "test_latex_subs",
        "test_latex_Complexes",
        "test_issue_12886",
        "test_latex_Range",
        "test_latex_ComplexRootOf",
        "test_latex_intervals",
        "test_latex_product",
        "test_ZeroMatrix",
        "test_latex_sum",
        "test_latex_mul_symbol",
        "test_latex_MatrixSlice",
        "test_latex_permutation",
        "test_latex_FormalPowerSeries",
        "test_latex_fresnel",
        "test_latex_limits",
        "test_latex_basic",
        "test_latex_commutator",
        "test_latex_Heaviside",
        "test_Tr",
        "test_issue_13651",
        "test_issue_7180",
        "test_latex_Complement",
        "test_latex_RootSum",
        "test_latex_vector_expressions",
        "test_issue_10489",
        "test_boolean_args_order",
        "test_latex_AccumuBounds",
        "test_integral_transforms",
        "test_latex_ComplexRegion",
        "test_latex_Lambda",
        "test_latex_SingularityFunction",
        "test_latex_Naturals0",
        "test_latex_Float",
        "test_Adjoint"
      ]
    }
  },
  {
    "instance_id": "django__django-15368",
    "file_function": {
      "tests/queries/test_bulk_update.py": [
        "test_update_custom_primary_key",
        "test_unsaved_models",
        "test_custom_db_columns",
        "test_empty_objects",
        "test_only_concrete_fields_allowed",
        "test_no_fields",
        "test_invalid_batch_size",
        "test_batch_size",
        "test_update_primary_key",
        "test_multiple_fields"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-18211",
    "file_function": {
      "sympy/solvers/tests/test_solveset.py": [
        "test_garbage_input",
        "test_conditionset",
        "test_solveset",
        "test_issue_10158",
        "test_solve_modular",
        "test_solve_hyperbolic",
        "test_issue_12429",
        "test__solveset_multi",
        "test_solve_trig",
        "test_solveset_arg",
        "test_no_sol",
        "test_solveset_sqrt_2",
        "test_issue_11064"
      ]
    }
  },
  {
    "instance_id": "django__django-12050",
    "file_function": {
      "tests/queries/tests.py": [
        "test_correct_lookup",
        "test_ticket10432",
        "test_null_in_exclude_qs"
      ],
      "tests/aggregation/tests.py": [
        "test_filtering"
      ],
      "tests/lookup/tests.py": [
        "test_in",
        "test_in_different_database"
      ],
      "tests/custom_lookups/tests.py": [
        "test_div3_bilateral_extract"
      ]
    }
  },
  {
    "instance_id": "django__django-12125",
    "file_function": {
      "tests/migrations/test_writer.py": [
        "test_serialize_class_based_validators",
        "test_deconstruct_class_arguments",
        "test_simple_migration",
        "test_serialize_fields"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-24570",
    "file_function": {
      "lib/matplotlib/tests/test_offsetbox.py": [
        "test_anchoredtext_horizontal_alignment",
        "test_offsetbox_clip_children",
        "test_picking",
        "test_offsetbox_loc_codes"
      ],
      "lib/matplotlib/tests/test_axes.py": [
        "test_automatic_legend"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-25232",
    "file_function": {
      "sklearn/impute/tests/test_common.py": [
        "test_keep_empty_features"
      ],
      "sklearn/impute/tests/test_impute.py": [
        "test_iterative_imputer_clip",
        "test_iterative_imputer_all_missing",
        "test_iterative_imputer_estimators"
      ]
    }
  },
  {
    "instance_id": "django__django-11885",
    "file_function": {
      "tests/delete/tests.py": [
        "test_fast_delete_instance_set_pk_none",
        "test_do_nothing_qscount",
        "test_deletion_order",
        "test_only_referenced_fields_selected",
        "test_fast_delete_qs",
        "test_can_defer_constraint_checks",
        "test_delete_with_keeping_parents",
        "test_setnull_from_parent"
      ],
      "tests/many_to_many/tests.py": [
        "test_clear"
      ],
      "tests/delete_regress/tests.py": [
        "test_generic_relation_cascade"
      ]
    }
  },
  {
    "instance_id": "django__django-13297",
    "file_function": {
      "tests/generic_views/test_base.py": [
        "test_named_url_pattern_using_args",
        "test_template_name_required",
        "test_extra_context"
      ],
      "tests/template_tests/tests.py": [
        "test_super_errors",
        "test_url_reverse_view_name"
      ],
      "tests/view_tests/tests/test_i18n.py": [
        "test_setlang_decodes_http_referer_url",
        "test_lang_from_translated_i18n_pattern",
        "test_setlang_redirect_to_referer",
        "test_setlang"
      ],
      "tests/view_tests/tests/test_defaults.py": [
        "test_csrf_token_in_404"
      ]
    }
  },
  {
    "instance_id": "django__django-14559",
    "file_function": {
      "tests/queries/test_bulk_update.py": [
        "test_unsaved_models",
        "test_simple",
        "test_update_primary_key",
        "test_empty_objects",
        "test_only_concrete_fields_allowed",
        "test_no_fields",
        "test_invalid_batch_size",
        "test_batch_size",
        "test_multiple_fields"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-20801",
    "file_function": {
      "sympy/core/tests/test_arit.py": [
        "test_Mod",
        "test_Pow_is_zero",
        "test_issue_5160_6087_6089_6090",
        "test_Pow_is_integer",
        "test_float_int_round"
      ],
      "sympy/core/tests/test_evalf.py": [
        "test_evalf_sum",
        "test_evalf_logs"
      ],
      "sympy/core/tests/test_numbers.py": [
        "test_latex",
        "test_ComplexInfinity",
        "test_zoo",
        "test_NaN",
        "test_Infinity_2",
        "test_Float_from_tuple",
        "test_Infinity_floor_ceiling_power",
        "test_issue_10020",
        "test_NegativeInfinity",
        "test_powers_Integer",
        "test_mod",
        "test_float_mpf",
        "test_Integer_factors",
        "test_Float",
        "test_issue_7742",
        "test_Infinity"
      ],
      "sympy/core/tests/test_sympify.py": [
        "test_sympify_mpmath"
      ],
      "sympy/core/tests/test_expr.py": [
        "test_cooperative_operations",
        "test_as_coeff_Mul",
        "test_leadterm"
      ],
      "sympy/core/tests/test_relational.py": [
        "test_univariate_relational_as_set",
        "test_issues_13081_12583_12534",
        "test_inequalities_symbol_name_same"
      ]
    }
  },
  {
    "instance_id": "django__django-14672",
    "file_function": {
      "tests/model_fields/test_manytomanyfield.py": [
        "test_abstract_model_app_relative_foreign_key"
      ]
    }
  },
  {
    "instance_id": "django__django-14155",
    "file_function": {
      "tests/urlpatterns_reverse/tests.py": [
        "test_repr",
        "test_urlpattern_resolve"
      ],
      "tests/handlers/tests.py": [
        "test_unawaited_response",
        "test_no_response"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-21612",
    "file_function": {
      "sympy/parsing/tests/test_latex_deps.py": [
        "test_no_import"
      ]
    }
  },
  {
    "instance_id": "django__django-13670",
    "file_function": {
      "tests/utils_tests/test_dateformat.py": [
        "test_time_formats"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-26466",
    "file_function": {
      "lib/matplotlib/tests/test_text.py": [
        "test_annotate_offset_fontsize",
        "test_set_position",
        "test_annotation_update",
        "test_annotation_contains",
        "test_annotation_antialiased",
        "test_annotation_units",
        "test_annotate_errors"
      ],
      "lib/matplotlib/tests/test_axes.py": [
        "test_annotate_default_arrow",
        "test_preset_clip_paths",
        "test_centered_bar_label_label_beyond_limits"
      ],
      "lib/matplotlib/tests/test_figure.py": [
        "test_subfigure_pdf"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-8056",
    "file_function": {
      "tests/test_ext_napoleon_docstring.py": [
        "test_see_also_refs",
        "test_list_in_parameter_description",
        "test_code_block_in_returns_section",
        "test_docstrings",
        "test_sphinx_admonitions",
        "test_noindex",
        "test_raises_types",
        "test_section_header_underline_length",
        "test_class_data_member",
        "test_class_data_member_inline",
        "test_section_header_formatting",
        "test_attributes_docstring",
        "test_attributes_with_class_reference",
        "test_custom_generic_sections",
        "test_underscore_in_attribute_strip_signature_backslash",
        "test_keywords_with_types",
        "test_parameter_types"
      ]
    }
  },
  {
    "instance_id": "django__django-16136",
    "file_function": {
      "tests/generic_views/test_base.py": [
        "test_overridden_setup"
      ],
      "tests/generic_views/test_detail.py": [
        "test_invalid_url"
      ],
      "tests/generic_views/test_edit.py": [
        "test_delete_by_post"
      ]
    }
  },
  {
    "instance_id": "django__django-14493",
    "file_function": {
      "tests/staticfiles_tests/test_storage.py": [
        "test_missing_entry",
        "test_clear_empties_manifest"
      ],
      "tests/staticfiles_tests/test_management.py": [
        "test_verbosity_1_with_post_process",
        "test_verbosity_2_with_post_process"
      ]
    }
  },
  {
    "instance_id": "pylint-dev__pylint-4604",
    "file_function": {
      "tests/checkers/unittest_variables.py": [
        "test_no_name_in_module_skipped",
        "test_import_as_underscore",
        "test_custom_callback_string"
      ],
      "tests/test_functional.py": [
        "test_functional"
      ],
      "tests/test_import_graph.py": [
        "test_checker_dep_graphs"
      ]
    }
  },
  {
    "instance_id": "django__django-11333",
    "file_function": {
      "tests/admin_docs/test_views.py": [
        "test_app_not_found",
        "test_no_sites_framework",
        "test_model_with_many_to_one",
        "test_index",
        "test_namespaced_view_detail",
        "test_model_not_found"
      ],
      "tests/resolve_url/tests.py": [
        "test_non_view_callable_raises_no_reverse_match",
        "test_domain",
        "test_lazy_reverse"
      ],
      "tests/check_framework/test_urls.py": [
        "test_check_resolver_recursive",
        "test_bad_handlers_invalid_path",
        "test_bad_handlers"
      ],
      "tests/middleware/tests.py": [
        "test_append_slash_redirect"
      ],
      "tests/handlers/tests.py": [
        "test_no_response"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-7521",
    "file_function": {
      "testing/test_debugging.py": [
        "test_raises_bdbquit_with_eoferror",
        "test_pdb_custom_cls",
        "test_pdb_on_fail",
        "test_pdb_on_KeyboardInterrupt"
      ],
      "testing/test_capture.py": [
        "test_reset_twice_error",
        "test_fixture_use_by_other_fixtures_teardown"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-13551",
    "file_function": {
      "sympy/concrete/tests/test_sums_products.py": [
        "test_simple_products"
      ],
      "sympy/concrete/tests/test_products.py": [
        "test_issue_9983",
        "test_reverse_order",
        "test_special_products",
        "test__eval_product",
        "test_rewrite_Sum",
        "test_conjugate_transpose"
      ]
    }
  },
  {
    "instance_id": "django__django-15814",
    "file_function": {
      "tests/queries/tests.py": [
        "test_exclude_many_to_many",
        "test_ticket24525",
        "test_ticket7235",
        "test_col_alias_quoted",
        "test_named_values_list_expression_with_default_alias",
        "test_field_error_values_list",
        "test_ticket14876",
        "test_empty_sliced_subquery_exclude",
        "test_tickets_7087_12242",
        "test_slicing_cannot_combine_queries_once_sliced",
        "test_slicing_can_slice_again_after_slicing",
        "test_parallel_iterators",
        "test_ticket22023",
        "test_ticket2496",
        "test_exclude_subquery",
        "test_extra_values",
        "test_slicing_cannot_filter_queryset_once_sliced",
        "test_tickets_7698_10202",
        "test_named_values_list_flat",
        "test_exclude_nullable_fields",
        "test_ticket7791",
        "test_ticket9997",
        "test_ticket14511",
        "test_ticket9848",
        "test_ticket_21366",
        "test_or_with_both_slice_and_ordering",
        "test_excluded_intermediary_m2m_table_joined",
        "test_extra_values_order_in_extra",
        "test_slicing_cannot_reorder_queryset_once_sliced",
        "test_avoid_infinite_loop_on_too_many_subqueries",
        "test_tickets_1878_2939",
        "test_ticket10432",
        "test_ticket14729",
        "test_deferred_load_qs_pickling",
        "test_xor_with_both_slice_and_ordering",
        "test_tickets_6180_6203",
        "test_invalid_queryset_model",
        "test_error_raised_on_filter_with_dictionary",
        "test_distinct_ordered_sliced_subquery",
        "test_empty_string_promotion",
        "test_order_by_rawsql",
        "test_ticket7759",
        "test_subquery_exclude_outerref",
        "test_invalid_index",
        "test_heterogeneous_qs_combination",
        "test_ticket_23605",
        "test_extra_select_alias_sql_injection",
        "test_ticket7181",
        "test_empty_queryset"
      ],
      "tests/model_inheritance/tests.py": [
        "test_parent_cache_reuse",
        "test_queryset_class_getitem",
        "test_related_objects_for_inherited_models",
        "test_inherited_multiple_objects_returned_exception",
        "test_reverse_relation_for_different_hierarchy_tree"
      ],
      "tests/defer/tests.py": [
        "test_defer_only_chaining",
        "test_only",
        "test_defer_none_to_clear_deferred_set",
        "test_only_none_raises_error"
      ],
      "tests/queries/test_query.py": [
        "test_multiple_fields",
        "test_filter_non_conditional",
        "test_names_to_path_field",
        "test_transform",
        "test_foreign_key",
        "test_clone_select_related",
        "test_filter_conditional_join",
        "test_subquery_annotation"
      ],
      "tests/select_related_onetoone/tests.py": [
        "test_inheritance_deferred2",
        "test_multiinheritance_two_subclasses",
        "test_reverse_related_validation_with_filtered_relation"
      ],
      "tests/proxy_model_inheritance/tests.py": [
        "test_table_exists"
      ],
      "tests/proxy_models/tests.py": [
        "test_proxy_bug"
      ],
      "tests/select_related/tests.py": [
        "test_none_clears_list",
        "test_chaining"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-12907",
    "file_function": {
      "astropy/modeling/tests/test_models.py": [
        "test_custom_separability_matrix"
      ],
      "astropy/modeling/tests/test_separable.py": [
        "test_cstack",
        "test_cdot",
        "test_separable"
      ]
    }
  },
  {
    "instance_id": "django__django-11951",
    "file_function": {
      "tests/queries/test_bulk_update.py": [
        "test_large_batch",
        "test_update_custom_primary_key",
        "test_no_fields",
        "test_empty_objects",
        "test_only_concrete_fields_allowed",
        "test_invalid_batch_size",
        "test_unsaved_models"
      ],
      "tests/bulk_create/tests.py": [
        "test_non_auto_increment_pk",
        "test_simple",
        "test_set_state_with_pk_specified",
        "test_multi_table_inheritance_unsupported",
        "test_large_batch_mixed"
      ]
    }
  },
  {
    "instance_id": "django__django-16560",
    "file_function": {
      "tests/constraints/tests/BaseConstraintTests/test_contains_expressions.py": [
        "test_contains_expressions"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_deferrable_with_opclasses.py": [
        "test_deferrable_with_opclasses"
      ],
      "tests/constraints/tests/CheckConstraintTests/test_repr_with_violation_error_message.py": [
        "test_repr_with_violation_error_message"
      ],
      "tests/constraints/tests/BaseConstraintTests/test_name_required.py": [
        "test_name_required"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_eq_with_expressions.py": [
        "test_eq_with_expressions"
      ],
      "tests/constraints/tests/BaseConstraintTests/test_create_sql.py": [
        "test_create_sql"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_requires_field_or_expression.py": [
        "test_requires_field_or_expression"
      ],
      "tests/constraints/tests/BaseConstraintTests/test_deconstruction.py": [
        "test_deconstruction"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_eq.py": [
        "test_eq"
      ],
      "tests/constraints/tests/BaseConstraintTests/test_constraint_sql.py": [
        "test_constraint_sql"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_repr_with_violation_error_message.py": [
        "test_repr_with_violation_error_message"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_validate.py": [
        "test_validate"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_requires_name.py": [
        "test_requires_name"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_condition_must_be_q.py": [
        "test_condition_must_be_q"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_deferrable_with_condition.py": [
        "test_deferrable_with_condition"
      ],
      "tests/constraints/tests/BaseConstraintTests/test_positional_arguments.py": [
        "test_positional_arguments"
      ],
      "tests/constraints/tests/BaseConstraintTests/test_remove_sql.py": [
        "test_remove_sql"
      ],
      "tests/constraints/tests/BaseConstraintTests/test_validate.py": [
        "test_validate"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_deferrable_with_include.py": [
        "test_deferrable_with_include"
      ],
      "tests/invalid_models_tests/test_models/ConstraintsTests/test_check_constraints.py": [
        "test_check_constraints"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_invalid_defer_argument.py": [
        "test_invalid_defer_argument"
      ],
      "tests/constraints/tests/CheckConstraintTests/test_invalid_check_types.py": [
        "test_invalid_check_types"
      ],
      "tests/constraints/tests/CheckConstraintTests/test_validate.py": [
        "test_validate"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_invalid_include_argument.py": [
        "test_invalid_include_argument"
      ],
      "tests/constraints/tests/CheckConstraintTests/test_eq.py": [
        "test_eq"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_invalid_opclasses_argument.py": [
        "test_invalid_opclasses_argument"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_validate_expression_condition.py": [
        "test_validate_expression_condition"
      ],
      "tests/constraints/tests/CheckConstraintTests/test_deconstruction.py": [
        "test_deconstruction"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_deferrable_with_expressions.py": [
        "test_deferrable_with_expressions"
      ],
      "tests/invalid_models_tests/test_models/ConstraintsTests/test_unique_constraint_with_condition.py": [
        "test_unique_constraint_with_condition"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_opclasses_and_fields_same_length.py": [
        "test_opclasses_and_fields_same_length"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_expressions_with_opclasses.py": [
        "test_expressions_with_opclasses"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_deconstruction_with_deferrable.py": [
        "test_deconstruction_with_deferrable"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_validate_expression_str.py": [
        "test_validate_expression_str"
      ],
      "tests/invalid_models_tests/test_models/ConstraintsTests/test_unique_constraint_with_include.py": [
        "test_unique_constraint_with_include"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_expressions_and_fields_mutually_exclusive.py": [
        "test_expressions_and_fields_mutually_exclusive"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_validate_ordered_expression.py": [
        "test_validate_ordered_expression"
      ],
      "tests/constraints/tests/UniqueConstraintTests/test_deconstruction_with_opclasses.py": [
        "test_deconstruction_with_opclasses"
      ]
    }
  },
  {
    "instance_id": "django__django-14140",
    "file_function": {
      "tests/queries/test_q.py": [
        "test_combine_or_empty",
        "test_combine_and_empty",
        "test_deconstruct_or",
        "test_combine_not_q_object",
        "test_reconstruct_or"
      ],
      "tests/queries/tests.py": [
        "test_ticket5261"
      ],
      "tests/aggregation_regress/tests.py": [
        "test_conditional_aggregate_on_complex_condition"
      ],
      "tests/expressions_case/tests.py": [
        "test_combined_q_object"
      ]
    }
  },
  {
    "instance_id": "django__django-12262",
    "file_function": {
      "tests/template_tests/test_library.py": [
        "test_filter_name_arg",
        "test_tag_invalid",
        "test_tag_name_kwarg",
        "test_inclusion_tag_wrapped",
        "test_simple_tag_wrapped",
        "test_tag",
        "test_tag_parens",
        "test_filter",
        "test_simple_tag_invalid",
        "test_inclusion_tag_name",
        "test_filter_invalid",
        "test_simple_tag",
        "test_filter_parens",
        "test_inclusion_tag"
      ],
      "tests/template_tests/test_custom.py": [
        "test_simple_tags",
        "test_inclusion_tag_errors",
        "test_include_tag_missing_context",
        "test_load_annotated_function",
        "test_inclusion_tags_from_template",
        "test_simple_tag_errors",
        "test_inclusion_tags"
      ]
    }
  },
  {
    "instance_id": "django__django-16493",
    "file_function": {
      "tests/file_storage/tests.py": [
        "test_deconstruction"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-10449",
    "file_function": {
      "tests/test_ext_autodoc_configs.py": [
        "test_autodoc_typehints_description_for_invalid_node",
        "test_autodoc_class_signature_separated_new",
        "test_autodoc_typehints_description_with_documented_init_no_undoc",
        "test_autodoc_typehints_both",
        "test_autodoc_typehints_format_fully_qualified_for_class_alias",
        "test_autodoc_typehints_description_with_documented_init_no_undoc_doc_rtype",
        "test_autodoc_typehints_description_no_undoc_doc_rtype",
        "test_autoclass_content_and_docstring_signature_init",
        "test_autodoc_typehints_description",
        "test_autodoc_class_signature_separated_init",
        "test_autodoc_typehints_description_no_undoc"
      ],
      "tests/test_ext_autodoc.py": [
        "test_autodoc_imported_members",
        "test_format_signature",
        "test_autodoc_inherited_members",
        "test_overload2",
        "test_canonical",
        "test_autodoc",
        "test_autodoc_inner_class",
        "test_final",
        "test_overload",
        "test_enum_class"
      ],
      "tests/test_ext_autodoc_autoclass.py": [
        "test_show_inheritance_for_subclass_of_generic_type",
        "test_autodoc_process_bases",
        "test_class_alias_for_imported_object_having_doccomment"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-8120",
    "file_function": {
      "tests/test_intl.py": [
        "test_gettext_dont_rebuild_mo"
      ],
      "tests/test_locale.py": [
        "test_init"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-12585",
    "file_function": {
      "sklearn/tests/test_pipeline.py": [
        "test_pipeline_init"
      ],
      "sklearn/tests/test_base.py": [
        "test_clone_buggy"
      ],
      "sklearn/tests/test_common.py": [
        "test_parameters_default_constructible"
      ]
    }
  },
  {
    "instance_id": "django__django-16661",
    "file_function": {
      "tests/admin_views/test_actions.py": [
        "test_popup_template_response_on_add",
        "test_default_redirect",
        "test_model_admin_no_delete_permission",
        "test_user_message_on_none_selected"
      ],
      "tests/admin_inlines/tests/TestInlinePermissions/test_inline_add_fk_noperm.py": [
        "test_inline_add_fk_noperm"
      ],
      "tests/admin_views/tests/AdminViewPermissionsTest/test_history_view_bad_url.py": [
        "test_history_view_bad_url"
      ],
      "tests/admin_views/tests/AdminViewBasicTest/test_add_with_GET_args.py": [
        "test_add_with_GET_args"
      ],
      "tests/admin_views/tests.py": [
        "test_popup_dismiss_related",
        "test_list_editable_pagination",
        "test_change_view",
        "test_delete_view_with_no_default_permissions",
        "test_allows_attributeerror_to_bubble_up",
        "test_change_view_with_view_and_delete_inlines",
        "test_change_view_save_as_new",
        "test_unicode_delete",
        "test_change_view_with_view_only_inlines",
        "test_basic_inheritance_GET_string_PK",
        "test_user_fk_delete_popup",
        "test_with_fk_to_field",
        "test_incorrect_lookup_parameters",
        "test_save_as_new_with_validation_errors",
        "test_allowed_filtering_15103",
        "test_history_view",
        "test_basic_edit_GET_string_PK",
        "test_limit_choices_to",
        "test_user_fk_change_popup",
        "test_delete_view"
      ],
      "tests/admin_views/tests/AdminUserMessageTest/test_message_debug.py": [
        "test_message_debug"
      ],
      "tests/modeladmin/tests/ModelAdminTests/test_modeladmin_str.py": [
        "test_modeladmin_str"
      ],
      "tests/admin_views/test_actions/AdminActionsTest/test_popup_template_response_on_change.py": [
        "test_popup_template_response_on_change"
      ],
      "tests/admin_views/tests/AdminViewPermissionsTest/test_delete_view_nonexistent_obj.py": [
        "test_delete_view_nonexistent_obj"
      ],
      "tests/admin_views/test_actions/AdminActionsTest/test_popup_template_response_on_delete.py": [
        "test_popup_template_response_on_delete"
      ],
      "tests/admin_views/tests/AdminSearchTest/test_search_with_spaces.py": [
        "test_search_with_spaces"
      ],
      "tests/admin_inlines/tests/TestInlinePermissions/test_inline_change_m2m_change_perm.py": [
        "test_inline_change_m2m_change_perm"
      ],
      "tests/admin_views/test_actions/AdminActionsTest/test_model_admin_default_delete_action.py": [
        "test_model_admin_default_delete_action"
      ],
      "tests/admin_views/tests/AdminSearchTest/test_exact_matches.py": [
        "test_exact_matches"
      ],
      "tests/admin_views/tests/AdminViewListEditable/test_post_submission.py": [
        "test_post_submission"
      ],
      "tests/admin_filters/tests/ListFiltersTests/test_multi_all_values_field_filter.py": [
        "test_multi_all_values_field_filter"
      ],
      "tests/admin_views/tests/AdminCustomTemplateTests/test_custom_model_admin_templates.py": [
        "test_custom_model_admin_templates"
      ],
      "tests/admin_inlines/tests/TestInlinePermissions/test_inline_change_fk_all_perms.py": [
        "test_inline_change_fk_all_perms"
      ],
      "tests/admin_inlines/tests.py": [
        "test_callable_lookup"
      ],
      "tests/admin_views/tests/AdminKeepChangeListFiltersTests/test_add_view.py": [
        "test_add_view"
      ],
      "tests/modeladmin/tests/ModelAdminTests/test_modeladmin_repr.py": [
        "test_modeladmin_repr"
      ],
      "tests/admin_inlines/tests/TestReadOnlyChangeViewInlinePermissions/test_get_to_change_url_is_allowed.py": [
        "test_get_to_change_url_is_allowed"
      ],
      "tests/admin_views/tests/AdminSearchTest/test_pluggable_search.py": [
        "test_pluggable_search"
      ],
      "tests/admin_views/tests/AdminKeepChangeListFiltersTests/test_change_view.py": [
        "test_change_view"
      ],
      "tests/modeladmin/tests/ModelAdminTests/test_foreign_key_as_radio_field.py": [
        "test_foreign_key_as_radio_field"
      ],
      "tests/admin_views/tests/AdminViewDeletedObjectsTest/test_protected.py": [
        "test_protected"
      ],
      "tests/admin_views/tests/AdminViewListEditable/test_list_editable_action_submit.py": [
        "test_list_editable_action_submit"
      ],
      "tests/admin_views/tests/AdminViewBasicTest/test_disallowed_to_field.py": [
        "test_disallowed_to_field"
      ],
      "tests/admin_registration/tests/TestRegistration/test_prevent_double_registration_for_custom_admin.py": [
        "test_prevent_double_registration_for_custom_admin"
      ],
      "tests/admin_registration/tests/TestRegistration/test_prevent_double_registration.py": [
        "test_prevent_double_registration"
      ],
      "tests/admin_views/tests/AdminUserMessageTest/test_message_error.py": [
        "test_message_error"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-7229",
    "file_function": {
      "xarray/tests/test_computation.py": [
        "test_where",
        "test_where_attrs"
      ],
      "xarray/tests/test_dataarray.py": [
        "test_argmin_dim"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-8035",
    "file_function": {
      "tests/test_ext_autodoc_private_members.py": [
        "test_private_field_and_private_members"
      ],
      "tests/test_ext_autodoc.py": [
        "test_parse_name",
        "test_autodoc_member_order",
        "test_autodoc_noindex",
        "test_final",
        "test_autodoc_module_member_order",
        "test_overload",
        "test_autodoc_attributes",
        "test_autodoc_warnings",
        "test_autodoc_imported_members",
        "test_autodoc_inherited_members_Base",
        "test_autoattribute_instance_attributes",
        "test_autodoc_ignore_module_all",
        "test_format_signature",
        "test_autodoc_inner_class"
      ],
      "tests/test_ext_autodoc_configs.py": [
        "test_autoclass_content_init",
        "test_autoclass_content_both",
        "test_autodoc_typehints_description",
        "test_autodoc_default_options_with_values"
      ]
    }
  },
  {
    "instance_id": "django__django-15503",
    "file_function": {
      "tests/model_fields/test_jsonfield.py": [
        "test_lookups_with_key_transform"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-19954",
    "file_function": {
      "sympy/combinatorics/tests/test_perm_groups.py": [
        "test_minimal_blocks",
        "test_sylow_subgroup"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-8872",
    "file_function": {
      "astropy/units/tests/test_quantity_ufuncs.py": [
        "test_testexcs",
        "test_comparison_valid_units",
        "test_two_argument_ufunc_inplace_1",
        "test_floor_divide_remainder_and_divmod"
      ],
      "astropy/units/tests/test_quantity_array_methods.py": [
        "test_not_implemented",
        "test_nansum_inplace",
        "test_argmin",
        "test_ediff1d",
        "test_var",
        "test_sort",
        "test_diff",
        "test_flat",
        "test_squeeze",
        "test_slice",
        "test_item",
        "test_fill",
        "test_trace_func",
        "test_take_put",
        "test_dot_meth",
        "test_si_copies",
        "test_round",
        "test_std",
        "test_slice_to_quantity",
        "test_trace_meth",
        "test_argmax",
        "test_median"
      ],
      "astropy/units/tests/test_equivalencies.py": [
        "test_equivalency_context"
      ],
      "astropy/units/tests/test_units.py": [
        "test_compose_into_arbitrary_units",
        "test_fractional_powers",
        "test_long_int",
        "test_dimensionless_to_si",
        "test_radian_base",
        "test_invalid_scale"
      ],
      "astropy/units/tests/test_format.py": [
        "test_ogip_grammar",
        "test_scale_effectively_unity"
      ]
    }
  },
  {
    "instance_id": "django__django-13417",
    "file_function": {
      "tests/aggregation/tests.py": [
        "test_aggregation_subquery_annotation_values",
        "test_expression_on_aggregation",
        "test_group_by_subquery_annotation"
      ],
      "tests/ordering/tests.py": [
        "test_random_ordering",
        "test_orders_nulls_first_on_filtered_subquery",
        "test_order_by_f_expression_duplicates",
        "test_order_by_constant_value"
      ],
      "tests/annotations/tests.py": [
        "test_alias_default_alias_expression",
        "test_alias_annotate_with_aggregation",
        "test_annotation_filter_with_subquery"
      ],
      "tests/queries/tests.py": [
        "test_extra_values_list",
        "test_ordering",
        "test_extra_values",
        "test_extra_multiple_select_params_values_order_by",
        "test_empty_queryset"
      ],
      "tests/expressions_case/tests.py": [
        "test_filter_with_aggregation_in_condition"
      ]
    }
  },
  {
    "instance_id": "django__django-10999",
    "file_function": {
      "tests/utils_tests/test_dateparse.py": [
        "test_parse_postgresql_format",
        "test_negative"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-12489",
    "file_function": {
      "sympy/combinatorics/tests/test_permutations.py": [
        "test_args",
        "test_mul",
        "test_from_sequence",
        "test_Permutation",
        "test_printing_non_cyclic",
        "test_ranking",
        "test_printing_cyclic"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-13091",
    "file_function": {
      "sympy/core/tests/test_relational.py": [
        "test_equals"
      ],
      "sympy/core/tests/test_basic.py": [
        "test_equality"
      ],
      "sympy/core/tests/test_expr.py": [
        "test_equals"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-20154",
    "file_function": {
      "sympy/utilities/tests/test_iterables.py": [
        "test_partitions"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-26113",
    "file_function": {
      "lib/matplotlib/tests/test_axes.py": [
        "test_hexbin_extent",
        "test_hexbin_log",
        "test_hexbin_pickable",
        "test_hexbin_linear"
      ]
    }
  },
  {
    "instance_id": "django__django-13568",
    "file_function": {
      "tests/auth_tests/test_checks.py": [
        "test_username_non_unique",
        "test_is_anonymous_authenticated_methods"
      ]
    }
  },
  {
    "instance_id": "pydata__xarray-7233",
    "file_function": {
      "xarray/tests/test_coarsen.py": [
        "test_coarsen_keep_attrs",
        "test_coarsen_da_reduce",
        "test_coarsen_absent_dims_error",
        "test_coarsen_construct",
        "test_coarsen_da_keep_attrs",
        "test_coarsen_coords",
        "test_coarsen_dataset"
      ]
    }
  },
  {
    "instance_id": "django__django-15957",
    "file_function": {
      "tests/prefetch_related/tests.py": [
        "test_ambiguous",
        "test_invalid_final_lookup",
        "test_forward_m2m_to_attr_conflict",
        "test_prefetch_reverse_foreign_key",
        "test_custom_qs",
        "test_traverse_nullable",
        "test_prefetch_eq",
        "test_clear",
        "test_named_values_list",
        "test_reverse_m2m_to_attr_conflict",
        "test_raw_queryset",
        "test_values_queryset"
      ]
    }
  },
  {
    "instance_id": "django__django-16454",
    "file_function": {
      "tests/test_runner/tests/SQLiteInMemoryTestDbs/test_transaction_support.py": [
        "test_transaction_support"
      ],
      "tests/test_runner/tests/ManageCommandTests/test_time_recorded.py": [
        "test_time_recorded"
      ],
      "tests/test_runner/tests/ManageCommandTests/test_custom_test_runner.py": [
        "test_custom_test_runner"
      ]
    }
  },
  {
    "instance_id": "django__django-15037",
    "file_function": {
      "tests/inspectdb/tests.py": [
        "test_attribute_name_not_python_keyword"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-10081",
    "file_function": {
      "testing/test_debugging.py": [
        "test_raises_bdbquit_with_eoferror"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-8593",
    "file_function": {
      "tests/test_ext_autodoc.py": [
        "test_autodoc_GenericAlias",
        "test_autodoc_typed_instance_variables",
        "test_autodoc_module_member_order",
        "test_autodoc_ignore_module_all",
        "test_autodoc_imported_members",
        "test_parse_name",
        "test_autodoc_TypeVar",
        "test_attrgetter_using",
        "test_enum_class",
        "test_autodoc_attributes"
      ],
      "tests/test_ext_autodoc_configs.py": [
        "test_autodoc_default_options",
        "test_autodoc_default_options_with_values"
      ],
      "tests/test_ext_autodoc_events.py": [
        "test_skip_module_member"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-16766",
    "file_function": {
      "sympy/printing/tests/test_pycode.py": [
        "test_PythonCodePrinter",
        "test_pycode_reserved_words",
        "test_codegen_ast_nodes"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-7324",
    "file_function": {
      "testing/test_assertrewrite.py": [
        "test_dont_rewrite",
        "test_boolop",
        "test_place_initial_imports",
        "test_get_assertion_exprs",
        "test_hook_call",
        "test_many_brackets",
        "test_long_case",
        "test_call"
      ],
      "testing/test_debugging.py": [
        "test_raises_bdbquit_with_eoferror"
      ]
    }
  },
  {
    "instance_id": "django__django-15695",
    "file_function": {
      "tests/migrations/test_operations.py": [
        "test_rename_index_arguments",
        "test_rename_index_unnamed_index",
        "test_rename_index_unknown_unnamed_index",
        "test_rename_index"
      ]
    }
  },
  {
    "instance_id": "django__django-12741",
    "file_function": {
      "tests/backends/base/test_operations.py": [
        "test_execute_sql_flush_statements",
        "test_sql_flush"
      ],
      "tests/backends/tests.py": [
        "test_sequence_name_length_limits_flush"
      ]
    }
  },
  {
    "instance_id": "psf__requests-6028",
    "file_function": {
      "tests/test_requests.py": [
        "test_non_prepared_request_error",
        "test_proxy_auth_empty_pass",
        "test_proxy_error",
        "test_total_timeout_connect",
        "test_invalid_url",
        "test_session_get_adapter_prefix_matching",
        "test_connect_timeout",
        "test_proxy_auth",
        "test_transport_adapter_ordering"
      ],
      "tests/test_lowlevel.py": [
        "test_chunked_upload_uses_only_specified_host_header",
        "test_digestauth_401_count_reset_on_redirect",
        "test_chunked_upload_doesnt_skip_host_header",
        "test_conflicting_content_lengths",
        "test_chunked_upload"
      ],
      "tests/test_testserver.py": [
        "test_multiple_requests"
      ]
    }
  },
  {
    "instance_id": "matplotlib__matplotlib-24970",
    "file_function": {
      "lib/matplotlib/tests/test_colors.py": [
        "test_colormap_reversing",
        "test_hex_shorthand_notation",
        "test_to_rgba_array_alpha_array",
        "test_resampled",
        "test_2d_to_rgba",
        "test_failed_conversions",
        "test_SymLogNorm_colorbar",
        "test_conversions_masked",
        "test_colormap_alpha_array",
        "test_colormap_endian",
        "test_conversions",
        "test_colormap_bad_data_with_alpha"
      ],
      "lib/matplotlib/tests/test_collections.py": [
        "test_scatter_alpha_array"
      ],
      "lib/matplotlib/tests/test_axes.py": [
        "test_contour_colorbar",
        "test_parse_scatter_color_args_error",
        "test_scatter_color",
        "test_scatter_c",
        "test_pcolormesh_alpha"
      ],
      "lib/matplotlib/testing/decorators/check_figures_equal/<locals>/decorator/<locals>.py": [
        "wrapper"
      ],
      "lib/matplotlib/tests/test_colorbar.py": [
        "test_proportional_colorbars"
      ],
      "lib/matplotlib/tests/test_contour.py": [
        "test_contour_manual"
      ]
    }
  },
  {
    "instance_id": "sphinx-doc__sphinx-8475",
    "file_function": {
      "tests/test_build.py": [
        "test_build_all"
      ],
      "tests/test_build_linkcheck.py": [
        "test_follows_redirects_on_GET",
        "test_defaults_json",
        "test_defaults",
        "test_linkcheck_request_headers_no_slash",
        "test_auth_header_uses_first_match",
        "test_follows_redirects_on_HEAD",
        "test_anchors_ignored",
        "test_linkcheck_request_headers_default",
        "test_linkcheck_request_headers"
      ]
    }
  },
  {
    "instance_id": "django__django-15987",
    "file_function": {
      "tests/fixtures_regress/tests.py": [
        "test_relative_path_in_fixture_dirs",
        "test_fixtures_dir_pathlib"
      ],
      "tests/fixtures/tests.py": [
        "test_circular_reference_natural_key",
        "test_loaddata_app_option",
        "test_circular_reference",
        "test_loaddata_verbosity_three",
        "test_ambiguous_compressed_fixture",
        "test_format_discovery"
      ]
    }
  },
  {
    "instance_id": "django__django-13512",
    "file_function": {
      "tests/model_fields/test_jsonfield.py": [
        "test_formfield",
        "test_formfield_custom_encoder_decoder"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-16886",
    "file_function": {
      "sympy/crypto/tests/test_crypto.py": [
        "test_encode_morse",
        "test_decode_morse"
      ]
    }
  },
  {
    "instance_id": "django__django-16263",
    "file_function": {
      "tests/aggregation_regress/tests.py": [
        "test_fk_attname_conflict",
        "test_more_more_more",
        "test_duplicate_alias",
        "test_field_name_conflict",
        "test_m2m_name_conflict"
      ],
      "tests/annotations/tests.py": [
        "test_alias_annotation_expression",
        "test_annotation_and_alias_filter_in_subquery"
      ],
      "tests/prefetch_related/tests.py": [
        "test_count"
      ],
      "tests/aggregation/tests.py": [
        "test_multi_arg_aggregate",
        "test_complex_aggregations_require_kwarg"
      ]
    }
  },
  {
    "instance_id": "django__django-17029",
    "file_function": {
      "tests/migrations/test_executor.py": [
        "test_custom_user"
      ]
    }
  },
  {
    "instance_id": "django__django-11163",
    "file_function": {
      "tests/model_forms/test_modelchoicefield.py": [
        "test_disabled_multiplemodelchoicefield"
      ],
      "tests/model_forms/tests.py": [
        "test_to_field_name_with_initial_data",
        "test_subset_fields"
      ],
      "tests/forms_tests/tests/tests.py": [
        "test_m2m_field_exclusion"
      ]
    }
  },
  {
    "instance_id": "astropy__astropy-7166",
    "file_function": {
      "astropy/utils/tests/test_misc.py": [
        "test_inherit_docstrings"
      ],
      "astropy/modeling/tests/test_parameters.py": [
        "test_non_broadcasting_parameters"
      ]
    }
  },
  {
    "instance_id": "django__django-12039",
    "file_function": {
      "tests/backends/test_ddl_references.py": [
        "test_repr"
      ],
      "tests/indexes/tests.py": [
        "test_partial_index"
      ],
      "tests/schema/tests.py": [
        "test_indexes"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-14710",
    "file_function": {
      "sklearn/ensemble/_hist_gradient_boosting/tests/test_warm_start.py": [
        "test_warm_start_yields_identical_results",
        "test_max_iter_with_warm_start_validation"
      ],
      "sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py": [
        "test_invalid_classification_loss",
        "test_early_stopping_classification",
        "test_init_parameters_validation",
        "test_small_trainset"
      ]
    }
  },
  {
    "instance_id": "psf__requests-5414",
    "file_function": {
      "tests/test_requests.py": [
        "test_preparing_bad_url",
        "test_params_bytes_are_encoded",
        "test_parameters_for_nonstandard_schemes",
        "test_invalid_url",
        "test_long_authinfo_in_url",
        "test_errors",
        "test_params_are_added_before_fragment"
      ]
    }
  },
  {
    "instance_id": "scikit-learn__scikit-learn-13779",
    "file_function": {
      "sklearn/ensemble/tests/test_voting.py": [
        "test_set_estimator_none",
        "test_multilabel",
        "test_estimator_init",
        "test_transform",
        "test_sample_weight",
        "test_predict_proba_on_toy_problem",
        "test_predictproba_hardvoting",
        "test_notfitted",
        "test_weights_regressor"
      ]
    }
  },
  {
    "instance_id": "django__django-14349",
    "file_function": {
      "tests/forms_tests/field_tests/test_urlfield.py": [
        "test_urlfield_1",
        "test_urlfield_2",
        "test_url_regex_ticket11198"
      ],
      "tests/forms_tests/tests/test_validators.py": [
        "test_value_placeholder_with_char_field",
        "test_value_placeholder_with_integer_field"
      ]
    }
  },
  {
    "instance_id": "django__django-16315",
    "file_function": {
      "tests/backends/postgresql/tests.py": [
        "test_lookup_cast"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-23413",
    "file_function": {
      "sympy/polys/matrices/tests/test_normalforms.py": [
        "test_hermite_normal"
      ],
      "sympy/matrices/tests/test_normalforms.py": [
        "test_hermite_normal"
      ]
    }
  },
  {
    "instance_id": "sympy__sympy-17139",
    "file_function": {
      "sympy/simplify/tests/test_fu.py": [
        "test_TR6"
      ]
    }
  },
  {
    "instance_id": "pylint-dev__pylint-6903",
    "file_function": {
      "tests/conftest.py": [
        "pytest_collection_modifyitems"
      ]
    }
  },
  {
    "instance_id": "django__django-13809",
    "file_function": {
      "tests/user_commands/tests.py": [
        "test_requires_system_checks_invalid",
        "test_requires_system_checks_warning",
        "handle"
      ],
      "tests/admin_scripts/tests.py": [
        "handle"
      ]
    }
  },
  {
    "instance_id": "django__django-10097",
    "file_function": {
      "tests/validators/tests.py": [
        "create_path"
      ]
    }
  },
  {
    "instance_id": "pallets__flask-5014",
    "file_function": {
      "tests/test_async.py": [
        "_async_app",
        "index"
      ],
      "tests/test_cli.py": [
        "test_cli_blueprints",
        "test_cli_empty"
      ]
    }
  },
  {
    "instance_id": "django__django-11138",
    "file_function": {
      "tests/backends/postgresql/tests.py": [
        "test_lookup_cast"
      ]
    }
  },
  {
    "instance_id": "django__django-16255",
    "file_function": {
      "tests/sitemaps_tests/test_http.py": [
        "test_sitemap_get_urls_no_site_1",
        "test_sitemap_get_urls_no_site_2",
        "test_sitemap_item"
      ]
    }
  },
  {
    "instance_id": "django__django-7530",
    "file_function": {
      "tests/admin_scripts/tests.py": [
        "monkey_run",
        "setUp",
        "handle"
      ]
    }
  },
  {
    "instance_id": "django__django-14376",
    "file_function": {
      "tests/backends/sqlite/tests.py": [
        "test_memory_db_test_name"
      ],
      "tests/backends/postgresql/tests.py": [
        "test_database_name_too_long",
        "test_database_name_empty",
        "test_service_name",
        "test_service_name_default_db"
      ]
    }
  },
  {
    "instance_id": "pytest-dev__pytest-5262",
    "file_function": {
      "testing/test_capture.py": [
        "test_dupfile",
        "test_dupfile_on_bytesio",
        "test_dupfile_on_textio"
      ]
    }
  },
  {
    "instance_id": "django__django-16145",
    "file_function": {
      "tests/user_commands/tests.py": [
        "test_requires_system_checks_invalid"
      ],
      "tests/admin_scripts/tests.py": [
        "handle"
      ]
    }
  },
  {
    "instance_id": "django__django-16082",
    "file_function": {
      "tests/db_functions/math/test_mod.py": [
        "test_null",
        "test_decimal",
        "test_float",
        "test_integer"
      ]
    }
  }
]