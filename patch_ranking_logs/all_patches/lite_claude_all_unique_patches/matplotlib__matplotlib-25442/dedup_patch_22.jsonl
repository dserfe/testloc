{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-25442", "model_patch": "diff --git a/lib/matplotlib/offsetbox.py b/lib/matplotlib/offsetbox.py\nindex db0cc2e..99fcd6a 100644\n--- a/lib/matplotlib/offsetbox.py\n+++ b/lib/matplotlib/offsetbox.py\n@@ -1550,11 +1550,15 @@ class DraggableBase:\n                 self.ref_artist.set_animated(False)\n \n     def _check_still_parented(self):\n+        # Get canvas reference before checking figure\n+        # to avoid NoneType error during cleanup\n+        canvas = getattr(self.ref_artist.figure, 'canvas', None)\n         if self.ref_artist.figure is None:\n-            self.disconnect()\n+            if canvas is not None:\n+                # Only disconnect if we still have a valid canvas\n+                self.disconnect()\n             return False\n-        else:\n-            return True\n+        return True\n \n     def disconnect(self):\n         \"\"\"Disconnect the callbacks.\"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/offsetbox.py b/lib/matplotlib/offsetbox.py\nindex f94319f..0964661 100644\n--- a/lib/matplotlib/offsetbox.py\n+++ b/lib/matplotlib/offsetbox.py\n@@ -1301,11 +1301,12 @@ class DraggableBase:\n                 self.ref_artist.set_animated(False)\n \n     def _check_still_parented(self):\n+        canvas = getattr(self.ref_artist.figure, 'canvas', None)\n         if self.ref_artist.figure is None:\n-            self.disconnect()\n+            if canvas is not None:\n+                self.disconnect()\n             return False\n-        else:\n-            return True\n+        return True\n \n     def disconnect(self):\n         \"\"\"Disconnect the callbacks.\"\"\"\n", "normalized_occurrence": 1}
