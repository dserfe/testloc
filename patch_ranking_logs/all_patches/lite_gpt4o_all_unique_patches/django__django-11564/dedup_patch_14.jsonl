{"model_name_or_path": "agentless", "instance_id": "django__django-11564", "model_patch": "diff --git a/django/contrib/staticfiles/storage.py b/django/contrib/staticfiles/storage.py\nindex 3fb83f0..c0a732c 100644\n--- a/django/contrib/staticfiles/storage.py\n+++ b/django/contrib/staticfiles/storage.py\n@@ -127,6 +127,13 @@ class HashedFilesMixin:\n                 hashed_name = hashed_name_func(*args)\n \n         final_url = super().url(hashed_name)\n+        \n+        # Prepend SCRIPT_NAME if present in request context\n+        request = context.get('request')\n+        if request:\n+            script_name = request.META.get('SCRIPT_NAME', '')\n+            if script_name:\n+                final_url = script_name.rstrip('/') + final_url\n \n         # Special casing for a @font-face hack, like url(myfont.eot?#iefix\")\n         # http://www.fontspring.com/blog/the-new-bulletproof-font-face-syntax\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/staticfiles/storage.py b/django/contrib/staticfiles/storage.py\nindex 510129c..167a2eb 100644\n--- a/django/contrib/staticfiles/storage.py\n+++ b/django/contrib/staticfiles/storage.py\n@@ -89,6 +89,11 @@ class HashedFilesMixin:\n                     args += (hashed_files,)\n                 hashed_name = hashed_name_func(*args)\n         final_url = super().url(hashed_name)\n+        request = context.get('request')\n+        if request:\n+            script_name = request.META.get('SCRIPT_NAME', '')\n+            if script_name:\n+                final_url = script_name.rstrip('/') + final_url\n         query_fragment = '?#' in name\n         if fragment or query_fragment:\n             urlparts = list(urlsplit(final_url))\n", "normalized_occurrence": 1}
