{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15554", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex b69bf1f..8a235b8 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -795,10 +795,11 @@ class Query(BaseExpression):\n         new alias or not.\n \n         If 'create' is true, a new alias is always created. Otherwise, the\n-        most recently created alias for the table (if one exists) is reused.\n+        most recently created alias for the table (if one exists) is reused,\n+        unless a filtered_relation is provided.\n         \"\"\"\n         alias_list = self.table_map.get(table_name)\n-        if not create and alias_list:\n+        if not create and alias_list and filtered_relation is None:\n             alias = alias_list[0]\n             self.alias_refcount[alias] += 1\n             return alias, False\n", "occurrence": 2, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex b4ac641..6c7ca2a 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -426,7 +426,7 @@ class Query(BaseExpression):\n                 callback(target, model, values)\n     def table_alias(self, table_name, create=False, filtered_relation=None):\n         alias_list = self.table_map.get(table_name)\n-        if not create and alias_list:\n+        if not create and alias_list and (filtered_relation is None):\n             alias = alias_list[0]\n             self.alias_refcount[alias] += 1\n             return (alias, False)\n", "normalized_occurrence": 9}
