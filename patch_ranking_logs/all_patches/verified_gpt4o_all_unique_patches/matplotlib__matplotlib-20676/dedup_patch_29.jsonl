{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-20676", "model_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex a6bed3c..d3f10c6 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -2270,6 +2270,10 @@ class SpanSelector(_SelectorWidget):\n             if vmin > vmax:\n                 vmin, vmax = vmax, vmin\n \n+        # Ensure vmin and vmax stay within current axis limits to avoid expanding to include 0.\n+        vmin, vmax = sorted([max(self.ax.get_ylim()[0], vmin), min(self.ax.get_ylim()[1], vmax)])\n+        # Ensure vmin and vmax stay within current axis limits to avoid expanding to include 0.\n+        vmin, vmax = sorted([max(self.ax.get_xlim()[0], vmin), min(self.ax.get_xlim()[1], vmax)])\n         self.extents = vmin, vmax\n \n         if self.onmove_callback is not None:\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex b2dd641..99cdb19 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -1850,6 +1850,8 @@ class SpanSelector(_SelectorWidget):\n             vmin, vmax = (vpress, v)\n             if vmin > vmax:\n                 vmin, vmax = (vmax, vmin)\n+        vmin, vmax = sorted([max(self.ax.get_ylim()[0], vmin), min(self.ax.get_ylim()[1], vmax)])\n+        vmin, vmax = sorted([max(self.ax.get_xlim()[0], vmin), min(self.ax.get_xlim()[1], vmax)])\n         self.extents = (vmin, vmax)\n         if self.onmove_callback is not None:\n             self.onmove_callback(vmin, vmax)\n", "normalized_occurrence": 1}
