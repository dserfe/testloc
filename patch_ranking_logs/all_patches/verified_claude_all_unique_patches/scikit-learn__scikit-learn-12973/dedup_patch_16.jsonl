{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-12973", "model_patch": "diff --git a/sklearn/linear_model/least_angle.py b/sklearn/linear_model/least_angle.py\nindex b1d16f1..be61ff5 100644\n--- a/sklearn/linear_model/least_angle.py\n+++ b/sklearn/linear_model/least_angle.py\n@@ -1479,7 +1479,7 @@ class LassoLarsIC(LassoLars):\n         self.eps = eps\n         self.fit_path = True\n \n-    def fit(self, X, y, copy_X=True):\n+    def fit(self, X, y, copy_X=None):\n         \"\"\"Fit the model using X, y as training data.\n \n         Parameters\n@@ -1490,6 +1490,10 @@ class LassoLarsIC(LassoLars):\n         y : array-like, shape (n_samples,)\n             target values. Will be cast to X's dtype if necessary\n \n+        copy_X : bool or None, default=None\n+            If None, use the `copy_X` parameter that was passed to the constructor.\n+            Otherwise, use the provided value.\n+\n         copy_X : boolean, optional, default True\n             If ``True``, X will be copied; else, it may be overwritten.\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/linear_model/least_angle.py b/sklearn/linear_model/least_angle.py\nindex 04326da..8a00689 100644\n--- a/sklearn/linear_model/least_angle.py\n+++ b/sklearn/linear_model/least_angle.py\n@@ -383,7 +383,7 @@ class LassoLarsIC(LassoLars):\n         self.precompute = precompute\n         self.eps = eps\n         self.fit_path = True\n-    def fit(self, X, y, copy_X=True):\n+    def fit(self, X, y, copy_X=None):\n         X, y = check_X_y(X, y, y_numeric=True)\n         X, y, Xmean, ymean, Xstd = LinearModel._preprocess_data(X, y, self.fit_intercept, self.normalize, self.copy_X)\n         max_iter = self.max_iter\n", "normalized_occurrence": 9}
