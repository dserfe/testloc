{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13043", "model_patch": "diff --git a/sympy/integrals/intpoly.py b/sympy/integrals/intpoly.py\nindex 1e4efa0..af051a9 100644\n--- a/sympy/integrals/intpoly.py\n+++ b/sympy/integrals/intpoly.py\n@@ -569,8 +569,10 @@ def decompose(expr, separate=False):\n             degrees = [(sum(degree_list(monom, *symbols)), monom)\n                        for monom in expr.args]\n             if separate:\n+                # Return monomials in their original order from the expression\n                 return [monom[1] for monom in degrees]\n             else:\n+                # Group terms by degree\n                 for monom in degrees:\n                     degree, term = monom\n                     if poly_dict.get(degree):\n@@ -593,7 +595,8 @@ def decompose(expr, separate=False):\n         poly_dict[0] = expr\n \n     if separate:\n-        return list(poly_dict.values())\n+        # For non-Add expressions, still need to maintain consistent order\n+        return sorted(poly_dict.values(), key=str)\n     return poly_dict\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/integrals/intpoly.py b/sympy/integrals/intpoly.py\nindex 5b23da9..34a2435 100644\n--- a/sympy/integrals/intpoly.py\n+++ b/sympy/integrals/intpoly.py\n@@ -258,7 +258,7 @@ def decompose(expr, separate=False):\n     else:\n         poly_dict[0] = expr\n     if separate:\n-        return list(poly_dict.values())\n+        return sorted(poly_dict.values(), key=str)\n     return poly_dict\n def clockwise_sort(poly):\n     n = len(poly.vertices)\n", "normalized_occurrence": 4}
