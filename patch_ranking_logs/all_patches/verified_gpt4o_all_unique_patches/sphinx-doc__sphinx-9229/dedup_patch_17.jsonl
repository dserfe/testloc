{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-9229", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 8cd9189..a545ab3 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -561,7 +561,7 @@ class Documenter:\n                           RemovedInSphinx50Warning, stacklevel=2)\n         docstring = getdoc(self.object, self.get_attr, self.config.autodoc_inherit_docstrings,\n                            self.parent, self.object_name)\n-        if docstring:\n+        if docstring and not isinstance(self.object, type):\n             tab_width = self.directive.state.document.settings.tab_width\n             return [prepare_docstring(docstring, ignore, tab_width)]\n         return []\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 7792226..1f3d18e 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -287,7 +287,7 @@ class Documenter:\n         if ignore is not None:\n             warnings.warn(\"The 'ignore' argument to autodoc.%s.get_doc() is deprecated.\" % self.__class__.__name__, RemovedInSphinx50Warning, stacklevel=2)\n         docstring = getdoc(self.object, self.get_attr, self.config.autodoc_inherit_docstrings, self.parent, self.object_name)\n-        if docstring:\n+        if docstring and (not isinstance(self.object, type)):\n             tab_width = self.directive.state.document.settings.tab_width\n             return [prepare_docstring(docstring, ignore, tab_width)]\n         return []\n", "normalized_occurrence": 1}
