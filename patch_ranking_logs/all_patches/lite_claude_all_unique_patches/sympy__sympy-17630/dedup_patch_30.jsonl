{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-17630", "model_patch": "diff --git a/sympy/matrices/expressions/matmul.py b/sympy/matrices/expressions/matmul.py\nindex bc38a10..63cbb18 100644\n--- a/sympy/matrices/expressions/matmul.py\n+++ b/sympy/matrices/expressions/matmul.py\n@@ -220,7 +220,12 @@ def any_zeros(mul):\n     if any([arg.is_zero or (arg.is_Matrix and arg.is_ZeroMatrix)\n                        for arg in mul.args]):\n         matrices = [arg for arg in mul.args if arg.is_Matrix]\n-        return ZeroMatrix(matrices[0].rows, matrices[-1].cols)\n+        if not matrices:  # If no matrices found, look for BlockMatrix\n+            matrices = [arg for arg in mul.args if isinstance(arg, BlockMatrix)]\n+            if matrices:\n+                return ZeroMatrix(matrices[0].rows, matrices[-1].cols)\n+        else:\n+            return ZeroMatrix(matrices[0].rows, matrices[-1].cols)\n     return mul\n \n def merge_explicit(matmul):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/expressions/matmul.py b/sympy/matrices/expressions/matmul.py\nindex e0bcc69..39a7250 100644\n--- a/sympy/matrices/expressions/matmul.py\n+++ b/sympy/matrices/expressions/matmul.py\n@@ -133,7 +133,12 @@ def newmul(*args):\n def any_zeros(mul):\n     if any([arg.is_zero or (arg.is_Matrix and arg.is_ZeroMatrix) for arg in mul.args]):\n         matrices = [arg for arg in mul.args if arg.is_Matrix]\n-        return ZeroMatrix(matrices[0].rows, matrices[-1].cols)\n+        if not matrices:\n+            matrices = [arg for arg in mul.args if isinstance(arg, BlockMatrix)]\n+            if matrices:\n+                return ZeroMatrix(matrices[0].rows, matrices[-1].cols)\n+        else:\n+            return ZeroMatrix(matrices[0].rows, matrices[-1].cols)\n     return mul\n def merge_explicit(matmul):\n     if not any((isinstance(arg, MatrixBase) for arg in matmul.args)):\n", "normalized_occurrence": 1}
