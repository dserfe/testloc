{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-19495", "model_patch": "diff --git a/sympy/sets/conditionset.py b/sympy/sets/conditionset.py\nindex 934bff8..d3d9ff8 100644\n--- a/sympy/sets/conditionset.py\n+++ b/sympy/sets/conditionset.py\n@@ -242,6 +242,8 @@ class ConditionSet(Set):\n             return self.func(sym, cond, base)\n         cond = self.condition.subs(old, new)\n         base = self.base_set.subs(old, new)\n+        if isinstance(base, ImageSet):\n+            base = base.subs(old, new)\n         if cond is S.true:\n             return ConditionSet(new, Contains(new, base), base)\n         return self.func(self.sym, cond, base)\n", "occurrence": 2, "normalized_patch": "diff --git a/sympy/sets/conditionset.py b/sympy/sets/conditionset.py\nindex c7937ea..7e90e5f 100644\n--- a/sympy/sets/conditionset.py\n+++ b/sympy/sets/conditionset.py\n@@ -91,6 +91,8 @@ class ConditionSet(Set):\n             return self.func(sym, cond, base)\n         cond = self.condition.subs(old, new)\n         base = self.base_set.subs(old, new)\n+        if isinstance(base, ImageSet):\n+            base = base.subs(old, new)\n         if cond is S.true:\n             return ConditionSet(new, Contains(new, base), base)\n         return self.func(self.sym, cond, base)\n", "normalized_occurrence": 2}
