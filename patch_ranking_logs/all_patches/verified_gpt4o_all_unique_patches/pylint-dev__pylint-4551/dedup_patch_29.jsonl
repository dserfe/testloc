{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-4551", "model_patch": "diff --git a/pylint/pyreverse/inspector.py b/pylint/pyreverse/inspector.py\nindex 4a79e89..ca7921a 100644\n--- a/pylint/pyreverse/inspector.py\n+++ b/pylint/pyreverse/inspector.py\n@@ -219,6 +219,9 @@ class Linker(IdGeneratorMixIn, utils.LocalsVisitor):\n \n             current = frame.locals_type[node.name]\n             values = set(node.infer())\n+            annotation = node.annotation()\n+            if annotation:\n+                values.add(annotation)\n             frame.locals_type[node.name] = list(set(current) | values)\n         except astroid.InferenceError:\n             pass\n@@ -231,6 +234,9 @@ class Linker(IdGeneratorMixIn, utils.LocalsVisitor):\n         \"\"\"\n         try:\n             values = set(node.infer())\n+            annotation = node.annotation()\n+            if annotation:\n+                values.add(annotation)\n             current = set(parent.instance_attrs_type[node.attrname])\n             parent.instance_attrs_type[node.attrname] = list(current | values)\n         except astroid.InferenceError:\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/pyreverse/inspector.py b/pylint/pyreverse/inspector.py\nindex 540b86a..c62fcc2 100644\n--- a/pylint/pyreverse/inspector.py\n+++ b/pylint/pyreverse/inspector.py\n@@ -111,6 +111,9 @@ class Linker(IdGeneratorMixIn, utils.LocalsVisitor):\n                     self.visit_module(frame)\n             current = frame.locals_type[node.name]\n             values = set(node.infer())\n+            annotation = node.annotation()\n+            if annotation:\n+                values.add(annotation)\n             frame.locals_type[node.name] = list(set(current) | values)\n         except astroid.InferenceError:\n             pass\n@@ -118,6 +121,9 @@ class Linker(IdGeneratorMixIn, utils.LocalsVisitor):\n     def handle_assignattr_type(node, parent):\n         try:\n             values = set(node.infer())\n+            annotation = node.annotation()\n+            if annotation:\n+                values.add(annotation)\n             current = set(parent.instance_attrs_type[node.attrname])\n             parent.instance_attrs_type[node.attrname] = list(current | values)\n         except astroid.InferenceError:\n", "normalized_occurrence": 1}
