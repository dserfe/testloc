{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-21379", "model_patch": "diff --git a/sympy/functions/elementary/piecewise.py b/sympy/functions/elementary/piecewise.py\nindex 218f537..1002a26 100644\n--- a/sympy/functions/elementary/piecewise.py\n+++ b/sympy/functions/elementary/piecewise.py\n@@ -138,7 +138,11 @@ class Piecewise(Function):\n             r = None\n \n         if r is None:\n-            return Basic.__new__(cls, *newargs, **options)\n+            result = Basic.__new__(cls, *newargs, **options)\n+            # Ensure assumptions are carried over correctly\n+            if any(isinstance(arg, Symbol) and arg.is_real for arg in args):\n+                result = result.xreplace({arg: arg for arg in args if isinstance(arg, Symbol) and arg.is_real})\n+            return result\n         else:\n             return r\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/piecewise.py b/sympy/functions/elementary/piecewise.py\nindex e1c61a2..4000a18 100644\n--- a/sympy/functions/elementary/piecewise.py\n+++ b/sympy/functions/elementary/piecewise.py\n@@ -55,7 +55,10 @@ class Piecewise(Function):\n         else:\n             r = None\n         if r is None:\n-            return Basic.__new__(cls, *newargs, **options)\n+            result = Basic.__new__(cls, *newargs, **options)\n+            if any((isinstance(arg, Symbol) and arg.is_real for arg in args)):\n+                result = result.xreplace({arg: arg for arg in args if isinstance(arg, Symbol) and arg.is_real})\n+            return result\n         else:\n             return r\n     @classmethod\n", "normalized_occurrence": 1}
