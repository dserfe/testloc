{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-7910", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 87c3fb8..93ba9f1 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1346,6 +1346,8 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type:\n         # Finally, we should have at least __init__ implemented\n         init = get_user_defined_function_or_method(self.object, '__init__')\n         if init is not None:\n+            # Unwrap the decorated method to get the original function\n+            init = sphinx.util.inspect.unwrap(init)\n             self.env.app.emit('autodoc-before-process-signature', init, True)\n             try:\n                 sig = inspect.signature(init, bound_method=True)\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 69b2ccc..775bebc 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -982,6 +982,7 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):\n                 pass\n         init = get_user_defined_function_or_method(self.object, '__init__')\n         if init is not None:\n+            init = sphinx.util.inspect.unwrap(init)\n             self.env.app.emit('autodoc-before-process-signature', init, True)\n             try:\n                 sig = inspect.signature(init, bound_method=True)\n", "normalized_occurrence": 1}
