{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-25960", "model_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex eeb18de..11bb078 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -1586,10 +1586,19 @@ default: %(va)s\n                       width_ratios=width_ratios,\n                       height_ratios=height_ratios)\n \n+        # Get the figure-relative coordinates from GridSpec\n+        gs_boxes = gs.get_grid_positions(self)\n+        \n         sfarr = np.empty((nrows, ncols), dtype=object)\n         for i in range(ncols):\n             for j in range(nrows):\n-                sfarr[j, i] = self.add_subfigure(gs[j, i], **kwargs)\n+                # Get the position for this subfigure from GridSpec\n+                box = gs[j, i].get_position(self)\n+                # Create subfigure with explicit position\n+                sfarr[j, i] = self.add_subfigure(\n+                    gridspec=None,\n+                    bbox=box,\n+                    **kwargs)\n \n         if squeeze:\n             # Discarding unneeded dimensions that equal 1.  If we only have one\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 19ec421..b02a382 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -411,10 +411,12 @@ class FigureBase(Artist):\n         return gs\n     def subfigures(self, nrows=1, ncols=1, squeeze=True, wspace=None, hspace=None, width_ratios=None, height_ratios=None, **kwargs):\n         gs = GridSpec(nrows=nrows, ncols=ncols, figure=self, wspace=wspace, hspace=hspace, width_ratios=width_ratios, height_ratios=height_ratios)\n+        gs_boxes = gs.get_grid_positions(self)\n         sfarr = np.empty((nrows, ncols), dtype=object)\n         for i in range(ncols):\n             for j in range(nrows):\n-                sfarr[j, i] = self.add_subfigure(gs[j, i], **kwargs)\n+                box = gs[j, i].get_position(self)\n+                sfarr[j, i] = self.add_subfigure(gridspec=None, bbox=box, **kwargs)\n         if squeeze:\n             return sfarr.item() if sfarr.size == 1 else sfarr.squeeze()\n         else:\n", "normalized_occurrence": 1}
