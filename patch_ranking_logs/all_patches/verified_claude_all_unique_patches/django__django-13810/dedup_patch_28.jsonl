{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13810", "model_patch": "diff --git a/django/core/handlers/base.py b/django/core/handlers/base.py\nindex 2cbbab1..ea6950a 100644\n--- a/django/core/handlers/base.py\n+++ b/django/core/handlers/base.py\n@@ -85,6 +85,11 @@ class BaseHandler:\n                     self.adapt_method_mode(False, mw_instance.process_exception),\n                 )\n \n+            # Adapt handler after we know the middleware will be used\n+            handler = self.adapt_method_mode(\n+                middleware_is_async, handler, handler_is_async,\n+                debug=settings.DEBUG, name='middleware %s' % middleware_path,\n+            )\n             handler = convert_exception_to_response(mw_instance)\n             handler_is_async = middleware_is_async\n \n@@ -345,4 +350,4 @@ def reset_urlconf(sender, **kwargs):\n     set_urlconf(None)\n \n \n-request_finished.connect(reset_urlconf)\n+request_finished.connect(reset_urlconf)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/core/handlers/base.py b/django/core/handlers/base.py\nindex db9e015..30fbde8 100644\n--- a/django/core/handlers/base.py\n+++ b/django/core/handlers/base.py\n@@ -51,6 +51,7 @@ class BaseHandler:\n                 self._template_response_middleware.append(self.adapt_method_mode(is_async, mw_instance.process_template_response))\n             if hasattr(mw_instance, 'process_exception'):\n                 self._exception_middleware.append(self.adapt_method_mode(False, mw_instance.process_exception))\n+            handler = self.adapt_method_mode(middleware_is_async, handler, handler_is_async, debug=settings.DEBUG, name='middleware %s' % middleware_path)\n             handler = convert_exception_to_response(mw_instance)\n             handler_is_async = middleware_is_async\n         handler = self.adapt_method_mode(is_async, handler, handler_is_async)\n", "normalized_occurrence": 1}
