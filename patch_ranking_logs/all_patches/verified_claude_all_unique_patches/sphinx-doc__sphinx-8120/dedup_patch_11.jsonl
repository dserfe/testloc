{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-8120", "model_patch": "diff --git a/sphinx/locale/__init__.py b/sphinx/locale/__init__.py\nindex 9fb0da9..6484b11 100644\n--- a/sphinx/locale/__init__.py\n+++ b/sphinx/locale/__init__.py\n@@ -127,14 +127,15 @@ def init(locale_dirs: List[str], language: str,\n     else:\n         languages = [language]\n \n-    # loading\n-    for dir_ in locale_dirs:\n+    # loading - process locale_dirs in reverse order to prioritize custom translations\n+    for dir_ in reversed(locale_dirs):\n         try:\n             trans = gettext.translation(catalog, localedir=dir_, languages=languages)\n             if translator is None:\n                 translator = trans\n             else:\n-                translator.add_fallback(trans)\n+                trans.add_fallback(translator)\n+                translator = trans\n         except Exception:\n             # Language couldn't be found in the specified path\n             pass\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/locale/__init__.py b/sphinx/locale/__init__.py\nindex 2cba107..bfe1821 100644\n--- a/sphinx/locale/__init__.py\n+++ b/sphinx/locale/__init__.py\n@@ -67,13 +67,14 @@ def init(locale_dirs: List[str], language: str, catalog: str='sphinx', namespace\n         languages = [language, language.split('_')[0]]\n     else:\n         languages = [language]\n-    for dir_ in locale_dirs:\n+    for dir_ in reversed(locale_dirs):\n         try:\n             trans = gettext.translation(catalog, localedir=dir_, languages=languages)\n             if translator is None:\n                 translator = trans\n             else:\n-                translator.add_fallback(trans)\n+                trans.add_fallback(translator)\n+                translator = trans\n         except Exception:\n             pass\n     if translator is None:\n", "normalized_occurrence": 15}
