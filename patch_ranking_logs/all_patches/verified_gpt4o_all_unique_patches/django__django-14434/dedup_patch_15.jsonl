{"model_name_or_path": "agentless", "instance_id": "django__django-14434", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 9591387..82ff11f 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1546,8 +1546,11 @@ class Query(BaseExpression):\n                 names_with_path.append(cur_names_with_path)\n             else:\n                 # Local non-relational field.\n-                final_field = field\n-                targets = (field,)\n+                if isinstance(field, Table):\n+                    final_field = field.to_column()\n+                else:\n+                    final_field = field\n+                targets = (final_field,)\n                 if fail_on_missing and pos + 1 != len(names):\n                     raise FieldError(\n                         \"Cannot resolve keyword %r into field. Join on '%s'\"\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex ec726d6..7702b7a 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -843,8 +843,11 @@ class Query(BaseExpression):\n                 cur_names_with_path[1].extend(pathinfos)\n                 names_with_path.append(cur_names_with_path)\n             else:\n-                final_field = field\n-                targets = (field,)\n+                if isinstance(field, Table):\n+                    final_field = field.to_column()\n+                else:\n+                    final_field = field\n+                targets = (final_field,)\n                 if fail_on_missing and pos + 1 != len(names):\n                     raise FieldError(\"Cannot resolve keyword %r into field. Join on '%s' not permitted.\" % (names[pos + 1], name))\n                 break\n", "normalized_occurrence": 1}
