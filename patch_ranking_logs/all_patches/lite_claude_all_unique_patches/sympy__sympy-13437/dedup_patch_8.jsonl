{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13437", "model_patch": "diff --git a/sympy/functions/combinatorial/numbers.py b/sympy/functions/combinatorial/numbers.py\nindex 70a655c..9cbe65c 100644\n--- a/sympy/functions/combinatorial/numbers.py\n+++ b/sympy/functions/combinatorial/numbers.py\n@@ -454,6 +454,11 @@ class bell(Function):\n         k = Dummy('k', integer=True, nonnegative=True)\n         return 1 / E * Sum(k**n / factorial(k), (k, 0, S.Infinity))\n \n+    def _eval_limit(self, x, xlim):\n+        from sympy import oo\n+        if x.free_symbols and xlim is oo:\n+            return oo\n+\n #----------------------------------------------------------------------------#\n #                                                                            #\n #                           Harmonic numbers                                 #\n", "occurrence": 1, "normalized_patch": "--- a/sympy/functions/combinatorial/numbers.py\n+++ b/sympy/functions/combinatorial/numbers.py\n+    def _eval_limit(self, x, xlim):\n+        from sympy import oo\n+        if x.free_symbols and xlim is oo:\n+            return oo", "normalized_occurrence": 1}
