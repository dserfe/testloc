{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-9288", "model_patch": "diff --git a/sklearn/cluster/k_means_.py b/sklearn/cluster/k_means_.py\nindex 915d041..858ff27 100644\n--- a/sklearn/cluster/k_means_.py\n+++ b/sklearn/cluster/k_means_.py\n@@ -663,7 +663,7 @@ def _labels_inertia(X, sample_weight, x_squared_norms, centers,\n     # easily\n     labels = np.full(n_samples, -1, np.int32)\n     if distances is None:\n-        distances = np.zeros(shape=(0,), dtype=X.dtype)\n+        distances = np.zeros(shape=(n_samples,), dtype=X.dtype)\n     # distances will be changed in-place\n     if sp.issparse(X):\n         inertia = _k_means._assign_labels_csr(\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/cluster/k_means_.py b/sklearn/cluster/k_means_.py\nindex abcc315..1e1c506 100644\n--- a/sklearn/cluster/k_means_.py\n+++ b/sklearn/cluster/k_means_.py\n@@ -194,7 +194,7 @@ def _labels_inertia(X, sample_weight, x_squared_norms, centers, precompute_dista\n     sample_weight = _check_normalize_sample_weight(sample_weight, X)\n     labels = np.full(n_samples, -1, np.int32)\n     if distances is None:\n-        distances = np.zeros(shape=(0,), dtype=X.dtype)\n+        distances = np.zeros(shape=(n_samples,), dtype=X.dtype)\n     if sp.issparse(X):\n         inertia = _k_means._assign_labels_csr(X, sample_weight, x_squared_norms, centers, labels, distances=distances)\n     else:\n", "normalized_occurrence": 1}
