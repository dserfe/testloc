{"model_name_or_path": "agentless_claude", "instance_id": "pylint-dev__pylint-6528", "model_patch": "diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py\nindex 6763a6f..2bb4086 100644\n--- a/pylint/lint/pylinter.py\n+++ b/pylint/lint/pylinter.py\n@@ -605,7 +605,14 @@ class PyLinter(\n             )\n             files_or_modules = (files_or_modules,)  # type: ignore[assignment]\n         if self.config.recursive:\n-            files_or_modules = tuple(self._discover_files(files_or_modules))\n+            # Discover files recursively while respecting ignore patterns\n+            discovered = []\n+            for module in files_or_modules:\n+                if os.path.isdir(module):\n+                    discovered.extend(self._discover_files([module]))\n+                else:\n+                    discovered.append(module)\n+            files_or_modules = tuple(discovered)\n         if self.config.from_stdin:\n             if len(files_or_modules) != 1:\n                 raise exceptions.InvalidArgsError(\n", "normalized_patch": "diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py\nindex 16c7088..47b1ef3 100644\n--- a/pylint/lint/pylinter.py\n+++ b/pylint/lint/pylinter.py\n@@ -241,7 +241,13 @@ class PyLinter(_ArgumentsManager, _MessageStateHandler, reporters.ReportsHandler\n             warnings.warn('In pylint 3.0, the checkers check function will only accept sequence of string', DeprecationWarning)\n             files_or_modules = (files_or_modules,)\n         if self.config.recursive:\n-            files_or_modules = tuple(self._discover_files(files_or_modules))\n+            discovered = []\n+            for module in files_or_modules:\n+                if os.path.isdir(module):\n+                    discovered.extend(self._discover_files([module]))\n+                else:\n+                    discovered.append(module)\n+            files_or_modules = tuple(discovered)\n         if self.config.from_stdin:\n             if len(files_or_modules) != 1:\n                 raise exceptions.InvalidArgsError('Missing filename required for --from-stdin')\n", "normalized_occurrence": 1}
