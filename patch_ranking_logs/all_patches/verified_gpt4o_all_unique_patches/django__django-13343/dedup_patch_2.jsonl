{"model_name_or_path": "agentless", "instance_id": "django__django-13343", "model_patch": "diff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py\nindex 4e9ee79..16ef026 100644\n--- a/django/db/models/fields/files.py\n+++ b/django/db/models/fields/files.py\n@@ -278,7 +278,9 @@ class FileField(Field):\n         if kwargs.get(\"max_length\") == 100:\n             del kwargs[\"max_length\"]\n         kwargs['upload_to'] = self.upload_to\n-        if self.storage is not default_storage:\n+        if callable(self.storage):\n+            kwargs['storage'] = self.storage\n+        elif self.storage is not default_storage:\n             kwargs['storage'] = self.storage\n         return name, path, args, kwargs\n \n", "occurrence": 2, "normalized_patch": "diff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py\nindex fc9a6b0..c7564f9 100644\n--- a/django/db/models/fields/files.py\n+++ b/django/db/models/fields/files.py\n@@ -144,7 +144,9 @@ class FileField(Field):\n         if kwargs.get('max_length') == 100:\n             del kwargs['max_length']\n         kwargs['upload_to'] = self.upload_to\n-        if self.storage is not default_storage:\n+        if callable(self.storage):\n+            kwargs['storage'] = self.storage\n+        elif self.storage is not default_storage:\n             kwargs['storage'] = self.storage\n         return (name, path, args, kwargs)\n     def get_internal_type(self):\n", "normalized_occurrence": 2}
