{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-8906", "model_patch": "diff --git a/src/_pytest/outcomes.py b/src/_pytest/outcomes.py\nindex 6515102..2046224 100644\n--- a/src/_pytest/outcomes.py\n+++ b/src/_pytest/outcomes.py\n@@ -124,10 +124,13 @@ def exit(msg: str, returncode: Optional[int] = None) -> \"NoReturn\":\n def skip(msg: str = \"\", *, allow_module_level: bool = False) -> \"NoReturn\":\n     \"\"\"Skip an executing test with the given message.\n \n-    This function should be called only during testing (setup, call or teardown) or\n-    during collection by using the ``allow_module_level`` flag.  This function can\n+    This function should be called only during testing (setup, call, or teardown) or\n+    during collection by using the ``allow_module_level`` flag. This function can\n     be called in doctests as well.\n \n+    Note: If you need to skip at the module level, you should use\n+    ``skip(msg, allow_module_level=True)``.\n+\n     :param bool allow_module_level:\n         Allows this function to be called at module level, skipping the rest\n         of the module. Defaults to False.\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/outcomes.py b/src/_pytest/outcomes.py\nindex 4e411e5..9d291e7 100644\n--- a/src/_pytest/outcomes.py\n+++ b/src/_pytest/outcomes.py\n@@ -82,10 +82,13 @@ def exit(msg: str, returncode: Optional[int]=None) -> 'NoReturn':\n def skip(msg: str='', *, allow_module_level: bool=False) -> 'NoReturn':\n     \"\"\"Skip an executing test with the given message.\n \n-    This function should be called only during testing (setup, call or teardown) or\n-    during collection by using the ``allow_module_level`` flag.  This function can\n+    This function should be called only during testing (setup, call, or teardown) or\n+    during collection by using the ``allow_module_level`` flag. This function can\n     be called in doctests as well.\n \n+    Note: If you need to skip at the module level, you should use\n+    ``skip(msg, allow_module_level=True)``.\n+\n     :param bool allow_module_level:\n         Allows this function to be called at module level, skipping the rest\n         of the module. Defaults to False.\n", "normalized_occurrence": 1}
