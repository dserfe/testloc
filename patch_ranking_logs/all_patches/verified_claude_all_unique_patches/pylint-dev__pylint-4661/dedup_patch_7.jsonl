{"model_name_or_path": "agentless_claude", "instance_id": "pylint-dev__pylint-4661", "model_patch": "diff --git a/pylint/config/find_default_config_files.py b/pylint/config/find_default_config_files.py\nindex 4b2d9f4..704cc36 100644\n--- a/pylint/config/find_default_config_files.py\n+++ b/pylint/config/find_default_config_files.py\n@@ -58,12 +58,19 @@ def find_default_config_files():\n     else:\n         user_home = os.path.expanduser(\"~\")\n         if user_home not in (\"~\", \"/root\"):\n-            home_rc = os.path.join(user_home, \".pylintrc\")\n-            if os.path.isfile(home_rc):\n-                yield home_rc\n-            home_rc = os.path.join(user_home, \".config\", \"pylintrc\")\n-            if os.path.isfile(home_rc):\n-                yield home_rc\n+            # Check XDG config directory first\n+            xdg_config_home = os.environ.get(\"XDG_CONFIG_HOME\", os.path.join(user_home, \".config\"))\n+            xdg_rc = os.path.join(xdg_config_home, \"pylint\", \"config\")\n+            if os.path.isfile(xdg_rc):\n+                yield xdg_rc\n+            \n+            # Fallback to legacy config locations for backwards compatibility\n+            legacy_config = os.path.join(user_home, \".config\", \"pylintrc\")\n+            if os.path.isfile(legacy_config):\n+                yield legacy_config\n+            legacy_home_rc = os.path.join(user_home, \".pylintrc\")\n+            if os.path.isfile(legacy_home_rc):\n+                yield legacy_home_rc\n \n     if os.path.isfile(\"/etc/pylintrc\"):\n-        yield \"/etc/pylintrc\"\n+        yield \"/etc/pylintrc\"\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/config/find_default_config_files.py b/pylint/config/find_default_config_files.py\nindex 97eac9a..ffd9a27 100644\n--- a/pylint/config/find_default_config_files.py\n+++ b/pylint/config/find_default_config_files.py\n@@ -42,11 +42,15 @@ def find_default_config_files():\n     else:\n         user_home = os.path.expanduser('~')\n         if user_home not in ('~', '/root'):\n-            home_rc = os.path.join(user_home, '.pylintrc')\n-            if os.path.isfile(home_rc):\n-                yield home_rc\n-            home_rc = os.path.join(user_home, '.config', 'pylintrc')\n-            if os.path.isfile(home_rc):\n-                yield home_rc\n+            xdg_config_home = os.environ.get('XDG_CONFIG_HOME', os.path.join(user_home, '.config'))\n+            xdg_rc = os.path.join(xdg_config_home, 'pylint', 'config')\n+            if os.path.isfile(xdg_rc):\n+                yield xdg_rc\n+            legacy_config = os.path.join(user_home, '.config', 'pylintrc')\n+            if os.path.isfile(legacy_config):\n+                yield legacy_config\n+            legacy_home_rc = os.path.join(user_home, '.pylintrc')\n+            if os.path.isfile(legacy_home_rc):\n+                yield legacy_home_rc\n     if os.path.isfile('/etc/pylintrc'):\n         yield '/etc/pylintrc'\n\\ No newline at end of file\n", "normalized_occurrence": 1}
