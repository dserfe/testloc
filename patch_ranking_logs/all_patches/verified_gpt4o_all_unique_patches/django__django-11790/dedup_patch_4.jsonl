{"model_name_or_path": "agentless", "instance_id": "django__django-11790", "model_patch": "diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py\nindex 4d607f6..4a7f284 100644\n--- a/django/contrib/auth/forms.py\n+++ b/django/contrib/auth/forms.py\n@@ -62,11 +62,14 @@ class UsernameField(forms.CharField):\n         return unicodedata.normalize('NFKC', super().to_python(value))\n \n     def widget_attrs(self, widget):\n-        return {\n-            **super().widget_attrs(widget),\n+        attrs = super().widget_attrs(widget)\n+        attrs.update({\n             'autocapitalize': 'none',\n             'autocomplete': 'username',\n-        }\n+        })\n+        if self.max_length is not None:\n+            attrs['maxlength'] = str(self.max_length)\n+        return attrs\n \n \n class UserCreationForm(forms.ModelForm):\n", "occurrence": 3, "normalized_patch": "diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py\nindex 15bf561..04ba637 100644\n--- a/django/contrib/auth/forms.py\n+++ b/django/contrib/auth/forms.py\n@@ -43,7 +43,11 @@ class UsernameField(forms.CharField):\n     def to_python(self, value):\n         return unicodedata.normalize('NFKC', super().to_python(value))\n     def widget_attrs(self, widget):\n-        return {**super().widget_attrs(widget), 'autocapitalize': 'none', 'autocomplete': 'username'}\n+        attrs = super().widget_attrs(widget)\n+        attrs.update({'autocapitalize': 'none', 'autocomplete': 'username'})\n+        if self.max_length is not None:\n+            attrs['maxlength'] = str(self.max_length)\n+        return attrs\n class UserCreationForm(forms.ModelForm):\n     error_messages = {'password_mismatch': _('The two password fields didnâ€™t match.')}\n     password1 = forms.CharField(label=_('Password'), strip=False, widget=forms.PasswordInput(attrs={'autocomplete': 'new-password'}), help_text=password_validation.password_validators_help_text_html())\n", "normalized_occurrence": 3}
