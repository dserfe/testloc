{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-25570", "model_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex 36a655a..2e50688 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -520,7 +520,9 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n             )\n             if feature_names_out is None:\n                 continue\n-            transformer_with_feature_names_out.append((name, feature_names_out))\n+            # Only append if feature_names_out is not empty\n+            if len(feature_names_out) > 0:\n+                transformer_with_feature_names_out.append((name, feature_names_out))\n \n         if not transformer_with_feature_names_out:\n             # No feature names\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex 03f51bb..8543c0a 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -130,7 +130,8 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n             feature_names_out = self._get_feature_name_out_for_transformer(name, trans, column, input_features)\n             if feature_names_out is None:\n                 continue\n-            transformer_with_feature_names_out.append((name, feature_names_out))\n+            if len(feature_names_out) > 0:\n+                transformer_with_feature_names_out.append((name, feature_names_out))\n         if not transformer_with_feature_names_out:\n             return np.array([], dtype=object)\n         return self._add_prefix_for_feature_names_out(transformer_with_feature_names_out)\n", "normalized_occurrence": 4}
