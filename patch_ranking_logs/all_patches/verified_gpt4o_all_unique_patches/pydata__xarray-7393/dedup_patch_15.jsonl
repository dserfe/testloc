{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-7393", "model_patch": "diff --git a/xarray/core/indexes.py b/xarray/core/indexes.py\nindex d49b2c1..8735d6a 100644\n--- a/xarray/core/indexes.py\n+++ b/xarray/core/indexes.py\n@@ -710,7 +710,8 @@ class PandasMultiIndex(PandasIndex):\n         labels_mesh = np.meshgrid(*split_labels, indexing=\"ij\")\n         labels = [x.ravel() for x in labels_mesh]\n \n-        index = pd.MultiIndex(levels, labels, sortorder=0, names=variables.keys())\n+        levels_casted = [lev.astype(var.dtype) for lev, var in zip(levels, variables.values())]\n+        index = pd.MultiIndex(levels_casted, labels, sortorder=0, names=variables.keys())\n         level_coords_dtype = {k: var.dtype for k, var in variables.items()}\n \n         return cls(index, dim, level_coords_dtype=level_coords_dtype)\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/indexes.py b/xarray/core/indexes.py\nindex 6be2e3c..d407855 100644\n--- a/xarray/core/indexes.py\n+++ b/xarray/core/indexes.py\n@@ -374,7 +374,8 @@ class PandasMultiIndex(PandasIndex):\n         split_labels, levels = zip(*[lev.factorize() for lev in level_indexes])\n         labels_mesh = np.meshgrid(*split_labels, indexing='ij')\n         labels = [x.ravel() for x in labels_mesh]\n-        index = pd.MultiIndex(levels, labels, sortorder=0, names=variables.keys())\n+        levels_casted = [lev.astype(var.dtype) for lev, var in zip(levels, variables.values())]\n+        index = pd.MultiIndex(levels_casted, labels, sortorder=0, names=variables.keys())\n         level_coords_dtype = {k: var.dtype for k, var in variables.items()}\n         return cls(index, dim, level_coords_dtype=level_coords_dtype)\n     def unstack(self) -> tuple[dict[Hashable, Index], pd.MultiIndex]:\n", "normalized_occurrence": 1}
