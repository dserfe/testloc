{"model_name_or_path": "agentless", "instance_id": "django__django-13406", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 3533127..9c70146 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -199,6 +199,7 @@ class QuerySet:\n         self._fields = None\n         self._defer_next_filter = False\n         self._deferred_filter = None\n+        self._iterable_class = ValuesIterable if query and query.has_results() else ModelIterable\n \n     @property\n     def query(self):\n@@ -829,6 +830,7 @@ class QuerySet:\n         fields += tuple(expressions)\n         clone = self._values(*fields, **expressions)\n         clone._iterable_class = ValuesIterable\n+        clone._iterable_class = ValuesIterable if hasattr(query, 'has_results') and query.has_results() else ModelIterable\n         return clone\n \n     def values_list(self, *fields, flat=False, named=False):\n@@ -858,7 +860,7 @@ class QuerySet:\n         clone._iterable_class = (\n             NamedValuesListIterable if named\n             else FlatValuesListIterable if flat\n-            else ValuesListIterable\n+            else ValuesListIterable if hasattr(query, 'has_results') and query.has_results() else ModelIterable\n         )\n         return clone\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex fdf020d..b32d696 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -116,6 +116,7 @@ class QuerySet:\n         self._fields = None\n         self._defer_next_filter = False\n         self._deferred_filter = None\n+        self._iterable_class = ValuesIterable if query and query.has_results() else ModelIterable\n     @property\n     def query(self):\n         if self._deferred_filter:\n@@ -498,6 +499,7 @@ class QuerySet:\n         fields += tuple(expressions)\n         clone = self._values(*fields, **expressions)\n         clone._iterable_class = ValuesIterable\n+        clone._iterable_class = ValuesIterable if hasattr(query, 'has_results') and query.has_results() else ModelIterable\n         return clone\n     def values_list(self, *fields, flat=False, named=False):\n         if flat and named:\n@@ -521,7 +523,7 @@ class QuerySet:\n             else:\n                 _fields.append(field)\n         clone = self._values(*_fields, **expressions)\n-        clone._iterable_class = NamedValuesListIterable if named else FlatValuesListIterable if flat else ValuesListIterable\n+        clone._iterable_class = NamedValuesListIterable if named else FlatValuesListIterable if flat else ValuesListIterable if hasattr(query, 'has_results') and query.has_results() else ModelIterable\n         return clone\n     def dates(self, field_name, kind, order='ASC'):\n         assert kind in ('year', 'month', 'week', 'day'), \"'kind' must be one of 'year', 'month', 'week', or 'day'.\"\n", "normalized_occurrence": 1}
