{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-20590", "model_patch": "diff --git a/sympy/core/basic.py b/sympy/core/basic.py\nindex 87da872..a536379 100644\n--- a/sympy/core/basic.py\n+++ b/sympy/core/basic.py\n@@ -69,7 +69,7 @@ class Basic(Printable, metaclass=ManagedProperties):\n         >>> isinstance(B, Basic)\n         True\n     \"\"\"\n-    __slots__ = ('_mhash',              # hash value\n+    __slots__ = ('__dict__', '_mhash',  # hash value\n                  '_args',               # arguments\n                  '_assumptions'\n                 )\n", "occurrence": 2, "normalized_patch": "diff --git a/sympy/core/basic.py b/sympy/core/basic.py\nindex d8b6046..6d0db7f 100644\n--- a/sympy/core/basic.py\n+++ b/sympy/core/basic.py\n@@ -14,7 +14,7 @@ def as_Basic(expr):\n     except SympifyError:\n         raise TypeError('Argument must be a Basic object, not `%s`' % func_name(expr))\n class Basic(Printable, metaclass=ManagedProperties):\n-    __slots__ = ('_mhash', '_args', '_assumptions')\n+    __slots__ = ('__dict__', '_mhash', '_args', '_assumptions')\n     is_number = False\n     is_Atom = False\n     is_Symbol = False\n", "normalized_occurrence": 2}
