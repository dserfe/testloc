{"model_name_or_path": "agentless", "instance_id": "django__django-15781", "model_patch": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex 778cb1c..e480ee1 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -124,6 +124,30 @@ class DjangoHelpFormatter(HelpFormatter):\n             actions, key=lambda a: set(a.option_strings) & self.show_last != set()\n         )\n \n+    def format_help(self):\n+        formatter = self._get_formatter()\n+\n+        # usage\n+        formatter.add_usage(\n+            self.usage, self._actions, self._mutually_exclusive_groups\n+        )\n+\n+        # description\n+        formatter.add_text(self.description)\n+\n+        # positionals, optionals and user-defined groups\n+        for action_group in self._action_groups:\n+            formatter.start_section(action_group.title)\n+            formatter.add_text(action_group.description)\n+            formatter.add_arguments(action_group._group_actions)\n+            formatter.end_section()\n+\n+        # epilog\n+        formatter.add_text(self.epilog)\n+\n+        # Determine help from format above\n+        return formatter.format_help()\n+\n     def add_usage(self, usage, actions, *args, **kwargs):\n         super().add_usage(usage, self._reordered_actions(actions), *args, **kwargs)\n \n", "occurrence": 1, "normalized_patch": "--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n+    def format_help(self):\n+        formatter = self._get_formatter()\n+        formatter.add_usage(self.usage, self._actions, self._mutually_exclusive_groups)\n+        formatter.add_text(self.description)\n+        for action_group in self._action_groups:\n+            formatter.start_section(action_group.title)\n+            formatter.add_text(action_group.description)\n+            formatter.add_arguments(action_group._group_actions)\n+            formatter.end_section()\n+        formatter.add_text(self.epilog)\n+        return formatter.format_help()", "normalized_occurrence": 1}
