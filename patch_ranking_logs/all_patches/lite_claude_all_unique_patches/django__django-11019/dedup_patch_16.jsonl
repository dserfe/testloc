{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11019", "model_patch": "diff --git a/django/forms/widgets.py b/django/forms/widgets.py\nindex b9c8e61..b090a5f 100644\n--- a/django/forms/widgets.py\n+++ b/django/forms/widgets.py\n@@ -125,6 +125,44 @@ class Media:\n         in a certain order. In JavaScript you may not be able to reference a\n         global or in CSS you might want to override a style.\n         \"\"\"\n+        # Build a map of relative orders from each list\n+        order_map_1 = {x: i for i, x in enumerate(list_1)}\n+        order_map_2 = {x: i for i, x in enumerate(list_2)}\n+        \n+        # Find common elements\n+        common = set(list_1) & set(list_2)\n+        \n+        # Check for order conflicts in common elements\n+        for a, b in combinations(common, 2):\n+            order_1_a, order_1_b = order_map_1.get(a), order_map_1.get(b)\n+            order_2_a, order_2_b = order_map_2.get(a), order_map_2.get(b)\n+            \n+            if None not in (order_1_a, order_1_b, order_2_a, order_2_b):\n+                # Check if relative ordering is different\n+                if (order_1_a < order_1_b) != (order_2_a < order_2_b):\n+                    warnings.warn(\n+                        'Detected duplicate Media files in an opposite order:\\n'\n+                        '%s\\n%s' % (a, b),\n+                        MediaOrderConflictWarning,\n+                    )\n+        \n+        # Merge the lists preserving the order from both as much as possible\n+        result = []\n+        seen = set()\n+        \n+        # First add all items from list_1 in their original order\n+        for item in list_1:\n+            if item not in seen:\n+                result.append(item)\n+                seen.add(item)\n+        \n+        # Then add remaining items from list_2 in their original order\n+        for item in list_2:\n+            if item not in seen:\n+                result.append(item)\n+                seen.add(item)\n+        \n+        return result\n         # Start with a copy of list_1.\n         combined_list = list(list_1)\n         last_insert_index = len(list_1)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/widgets.py b/django/forms/widgets.py\nindex cd0e6f4..e7a2b61 100644\n--- a/django/forms/widgets.py\n+++ b/django/forms/widgets.py\n@@ -63,6 +63,26 @@ class Media:\n         raise KeyError('Unknown media type \"%s\"' % name)\n     @staticmethod\n     def merge(list_1, list_2):\n+        order_map_1 = {x: i for i, x in enumerate(list_1)}\n+        order_map_2 = {x: i for i, x in enumerate(list_2)}\n+        common = set(list_1) & set(list_2)\n+        for a, b in combinations(common, 2):\n+            order_1_a, order_1_b = (order_map_1.get(a), order_map_1.get(b))\n+            order_2_a, order_2_b = (order_map_2.get(a), order_map_2.get(b))\n+            if None not in (order_1_a, order_1_b, order_2_a, order_2_b):\n+                if (order_1_a < order_1_b) != (order_2_a < order_2_b):\n+                    warnings.warn('Detected duplicate Media files in an opposite order:\\n%s\\n%s' % (a, b), MediaOrderConflictWarning)\n+        result = []\n+        seen = set()\n+        for item in list_1:\n+            if item not in seen:\n+                result.append(item)\n+                seen.add(item)\n+        for item in list_2:\n+            if item not in seen:\n+                result.append(item)\n+                seen.add(item)\n+        return result\n         combined_list = list(list_1)\n         last_insert_index = len(list_1)\n         for path in reversed(list_2):\n", "normalized_occurrence": 1}
