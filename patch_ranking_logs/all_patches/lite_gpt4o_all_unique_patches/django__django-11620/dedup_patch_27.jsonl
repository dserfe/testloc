{"model_name_or_path": "agentless", "instance_id": "django__django-11620", "model_patch": "diff --git a/django/views/debug.py b/django/views/debug.py\nindex fa06caa..9876799 100644\n--- a/django/views/debug.py\n+++ b/django/views/debug.py\n@@ -458,10 +458,14 @@ class ExceptionReporter:\n \n def technical_404_response(request, exception):\n     \"\"\"Create a technical 404 error response. `exception` is the Http404.\"\"\"\n-    try:\n-        error_url = exception.args[0]['path']\n-    except (IndexError, TypeError, KeyError):\n-        error_url = request.path_info[1:]  # Trim leading slash\n+    if settings.DEBUG:\n+        from django.views.defaults import page_not_found\n+        return page_not_found(request, exception, template_name='technical_404.html')\n+    else:\n+        try:\n+            error_url = exception.args[0]['path']\n+        except (IndexError, TypeError, KeyError):\n+            error_url = request.path_info[1:]  # Trim leading slash\n \n     try:\n         tried = exception.args[0]['tried']\n", "occurrence": 1, "normalized_patch": "diff --git a/django/views/debug.py b/django/views/debug.py\nindex 9e5f1cd..de0f80b 100644\n--- a/django/views/debug.py\n+++ b/django/views/debug.py\n@@ -262,10 +262,14 @@ class ExceptionReporter:\n                 tb = tb.tb_next\n         return frames\n def technical_404_response(request, exception):\n-    try:\n-        error_url = exception.args[0]['path']\n-    except (IndexError, TypeError, KeyError):\n-        error_url = request.path_info[1:]\n+    if settings.DEBUG:\n+        from django.views.defaults import page_not_found\n+        return page_not_found(request, exception, template_name='technical_404.html')\n+    else:\n+        try:\n+            error_url = exception.args[0]['path']\n+        except (IndexError, TypeError, KeyError):\n+            error_url = request.path_info[1:]\n     try:\n         tried = exception.args[0]['tried']\n     except (IndexError, TypeError, KeyError):\n", "normalized_occurrence": 1}
