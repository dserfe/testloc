{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-15011", "model_patch": "diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py\nindex 48d6783..35e56f6 100644\n--- a/sympy/utilities/lambdify.py\n+++ b/sympy/utilities/lambdify.py\n@@ -693,7 +693,7 @@ class _EvaluatorPrinter(object):\n             return isinstance(ident, str) and ident.isidentifier() \\\n                     and not keyword.iskeyword(ident)\n     else:\n-        _safe_ident_re = re.compile('^[a-zA-Z_][a-zA-Z0-9_]*$')\n+        _safe_ident_re = re.compile('^[a-zA-Z_{}][a-zA-Z0-9_{}]*$')\n \n         @classmethod\n         def _is_safe_ident(cls, ident):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py\nindex 9997e01..4b7428d 100644\n--- a/sympy/utilities/lambdify.py\n+++ b/sympy/utilities/lambdify.py\n@@ -277,7 +277,7 @@ class _EvaluatorPrinter(object):\n         def _is_safe_ident(cls, ident):\n             return isinstance(ident, str) and ident.isidentifier() and (not keyword.iskeyword(ident))\n     else:\n-        _safe_ident_re = re.compile('^[a-zA-Z_][a-zA-Z0-9_]*$')\n+        _safe_ident_re = re.compile('^[a-zA-Z_{}][a-zA-Z0-9_{}]*$')\n         @classmethod\n         def _is_safe_ident(cls, ident):\n             return isinstance(ident, str) and cls._safe_ident_re.match(ident) and (not (keyword.iskeyword(ident) or ident == 'None'))\n", "normalized_occurrence": 1}
