{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-9359", "model_patch": "diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py\nindex 9657da0..1b1deb3 100644\n--- a/src/_pytest/assertion/rewrite.py\n+++ b/src/_pytest/assertion/rewrite.py\n@@ -891,7 +891,10 @@ class AssertionRewriter(ast.NodeVisitor):\n             else:\n                 assertmsg = ast.Str(\"\")\n                 gluestr = \"assert \"\n-            err_explanation = ast.BinOp(ast.Str(gluestr), ast.Add(), msg)\n+            # Only include the assertion line in the error message\n+            msg_lines = msg.s.split('\\n') if isinstance(msg, ast.Str) else [msg]\n+            filtered_msg = msg_lines[0] if msg_lines else msg\n+            err_explanation = ast.BinOp(ast.Str(gluestr), ast.Add(), filtered_msg if isinstance(msg, ast.Str) else msg)\n             err_msg = ast.BinOp(assertmsg, ast.Add(), err_explanation)\n             err_name = ast.Name(\"AssertionError\", ast.Load())\n             fmt = self.helper(\"_format_explanation\", err_msg)\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py\nindex 9f4da3b..c15c3e4 100644\n--- a/src/_pytest/assertion/rewrite.py\n+++ b/src/_pytest/assertion/rewrite.py\n@@ -472,7 +472,9 @@ class AssertionRewriter(ast.NodeVisitor):\n             else:\n                 assertmsg = ast.Str('')\n                 gluestr = 'assert '\n-            err_explanation = ast.BinOp(ast.Str(gluestr), ast.Add(), msg)\n+            msg_lines = msg.s.split('\\n') if isinstance(msg, ast.Str) else [msg]\n+            filtered_msg = msg_lines[0] if msg_lines else msg\n+            err_explanation = ast.BinOp(ast.Str(gluestr), ast.Add(), filtered_msg if isinstance(msg, ast.Str) else msg)\n             err_msg = ast.BinOp(assertmsg, ast.Add(), err_explanation)\n             err_name = ast.Name('AssertionError', ast.Load())\n             fmt = self.helper('_format_explanation', err_msg)\n", "normalized_occurrence": 1}
