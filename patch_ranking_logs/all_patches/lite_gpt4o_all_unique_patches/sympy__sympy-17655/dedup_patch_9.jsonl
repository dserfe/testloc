{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-17655", "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex a708f18..252ef07 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -224,7 +224,11 @@ class Point(GeometryEntity):\n     def __contains__(self, item):\n         return item in self.args\n \n-    def __div__(self, divisor):\n+    def __rmul__(self, other):\n+        \"\"\"Right scalar multiplication for a Point.\"\"\"\n+        if not isinstance(other, (int, float, sympy.Basic)):\n+            raise GeometryError(\"Can only multiply Point by a scalar\")\n+        return self.__mul__(other)\n         \"\"\"Divide point's coordinates by a factor.\"\"\"\n         divisor = sympify(divisor)\n         coords = [simplify(x/divisor) for x in self.args]\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex e45d95f..e1df9da 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -70,7 +70,10 @@ class Point(GeometryEntity):\n         return Point(coords, evaluate=False)\n     def __contains__(self, item):\n         return item in self.args\n-    def __div__(self, divisor):\n+    def __rmul__(self, other):\n+        if not isinstance(other, (int, float, sympy.Basic)):\n+            raise GeometryError('Can only multiply Point by a scalar')\n+        return self.__mul__(other)\n         divisor = sympify(divisor)\n         coords = [simplify(x / divisor) for x in self.args]\n         return Point(coords, evaluate=False)\n", "normalized_occurrence": 1}
