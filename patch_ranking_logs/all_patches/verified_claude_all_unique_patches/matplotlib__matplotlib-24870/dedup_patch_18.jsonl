{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-24870", "model_patch": "diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py\nindex 908a24f..9589dd5 100644\n--- a/lib/matplotlib/contour.py\n+++ b/lib/matplotlib/contour.py\n@@ -1122,6 +1122,10 @@ class ContourSet(cm.ScalarMappable, ContourLabeler):\n         Determine the contour levels and store in self.levels.\n         \"\"\"\n         if self.levels is None:\n+            # Special case: if input is boolean array, use single level at 0.5\n+            if np.issubdtype(self.z.dtype, np.bool_):\n+                self.levels = np.array([0.5], dtype=np.float64)\n+                return\n             if len(args) == 0:\n                 levels_arg = 7  # Default, hard-wired.\n             else:\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py\nindex 04dc867..d46e318 100644\n--- a/lib/matplotlib/contour.py\n+++ b/lib/matplotlib/contour.py\n@@ -482,6 +482,9 @@ class ContourSet(cm.ScalarMappable, ContourLabeler):\n         return lev[i0:i1]\n     def _process_contour_level_args(self, args):\n         if self.levels is None:\n+            if np.issubdtype(self.z.dtype, np.bool_):\n+                self.levels = np.array([0.5], dtype=np.float64)\n+                return\n             if len(args) == 0:\n                 levels_arg = 7\n             else:\n", "normalized_occurrence": 1}
