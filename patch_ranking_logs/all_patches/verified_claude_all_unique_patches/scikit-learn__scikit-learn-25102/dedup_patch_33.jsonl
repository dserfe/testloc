{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-25102", "model_patch": "diff --git a/sklearn/utils/_set_output.py b/sklearn/utils/_set_output.py\nindex 52acc1f..e75964b 100644\n--- a/sklearn/utils/_set_output.py\n+++ b/sklearn/utils/_set_output.py\n@@ -1,3 +1,4 @@\n+\n from functools import wraps\n \n from scipy.sparse import issparse\n@@ -131,6 +132,7 @@ def _wrap_data_with_container(method, data_to_wrap, original_input, estimator):\n         data_to_wrap=data_to_wrap,\n         index=getattr(original_input, \"index\", None),\n         columns=estimator.get_feature_names_out,\n+        dtypes=getattr(original_input, \"dtypes\", None),\n     )\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/utils/_set_output.py b/sklearn/utils/_set_output.py\nindex 386f312..6656779 100644\n--- a/sklearn/utils/_set_output.py\n+++ b/sklearn/utils/_set_output.py\n@@ -32,7 +32,7 @@ def _wrap_data_with_container(method, data_to_wrap, original_input, estimator):\n     output_config = _get_output_config(method, estimator)\n     if output_config['dense'] == 'default' or not _auto_wrap_is_configured(estimator):\n         return data_to_wrap\n-    return _wrap_in_pandas_container(data_to_wrap=data_to_wrap, index=getattr(original_input, 'index', None), columns=estimator.get_feature_names_out)\n+    return _wrap_in_pandas_container(data_to_wrap=data_to_wrap, index=getattr(original_input, 'index', None), columns=estimator.get_feature_names_out, dtypes=getattr(original_input, 'dtypes', None))\n def _wrap_method_output(f, method):\n     @wraps(f)\n     def wrapped(self, X, *args, **kwargs):\n", "normalized_occurrence": 1}
