{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14765", "model_patch": "diff --git a/django/db/migrations/state.py b/django/db/migrations/state.py\nindex 6496bf2..a860b0e 100644\n--- a/django/db/migrations/state.py\n+++ b/django/db/migrations/state.py\n@@ -91,8 +91,9 @@ class ProjectState:\n     def __init__(self, models=None, real_apps=None):\n         self.models = models or {}\n         # Apps to include from main registry, usually unmigrated ones\n-        if real_apps:\n-            self.real_apps = real_apps if isinstance(real_apps, set) else set(real_apps)\n+        if real_apps is not None:\n+            assert isinstance(real_apps, set)\n+            self.real_apps = real_apps\n         else:\n             self.real_apps = set()\n         self.is_delayed = False\n", "occurrence": 12, "normalized_patch": "diff --git a/django/db/migrations/state.py b/django/db/migrations/state.py\nindex 999f68c..2832acd 100644\n--- a/django/db/migrations/state.py\n+++ b/django/db/migrations/state.py\n@@ -49,8 +49,9 @@ def get_related_models_recursive(model):\n class ProjectState:\n     def __init__(self, models=None, real_apps=None):\n         self.models = models or {}\n-        if real_apps:\n-            self.real_apps = real_apps if isinstance(real_apps, set) else set(real_apps)\n+        if real_apps is not None:\n+            assert isinstance(real_apps, set)\n+            self.real_apps = real_apps\n         else:\n             self.real_apps = set()\n         self.is_delayed = False\n", "normalized_occurrence": 12}
