{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11583", "model_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex f44661f..4523786 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -139,9 +139,11 @@ def iter_modules_and_files(modules, extra_files):\n         path = Path(filename)\n         try:\n             resolved_path = path.resolve(strict=True).absolute()\n-        except FileNotFoundError:\n-            # The module could have been removed, don't fail loudly if this\n-            # is the case.\n+        except (FileNotFoundError, ValueError) as e:\n+            # The module could have been removed or the path could contain null bytes.\n+            # Don't fail loudly if this is the case.\n+            if isinstance(e, ValueError) and 'null byte' in str(e):\n+                logger.debug('Skipping path with null byte: %s', filename)\n             continue\n         results.add(resolved_path)\n     return frozenset(results)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex e37abac..be94b1c 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -93,7 +93,9 @@ def iter_modules_and_files(modules, extra_files):\n         path = Path(filename)\n         try:\n             resolved_path = path.resolve(strict=True).absolute()\n-        except FileNotFoundError:\n+        except (FileNotFoundError, ValueError) as e:\n+            if isinstance(e, ValueError) and 'null byte' in str(e):\n+                logger.debug('Skipping path with null byte: %s', filename)\n             continue\n         results.add(resolved_path)\n     return frozenset(results)\n", "normalized_occurrence": 1}
