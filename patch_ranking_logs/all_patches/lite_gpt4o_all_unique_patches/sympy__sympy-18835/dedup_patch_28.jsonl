{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-18835", "model_patch": "diff --git a/sympy/utilities/iterables.py b/sympy/utilities/iterables.py\nindex 57371bf..d453b77 100644\n--- a/sympy/utilities/iterables.py\n+++ b/sympy/utilities/iterables.py\n@@ -2108,8 +2108,11 @@ def uniq(seq, result=None):\n     \"\"\"\n     try:\n         seen = set()\n+        initial_length = len(seq)\n         result = result or []\n         for i, s in enumerate(seq):\n+            if len(seq) != initial_length:\n+                raise RuntimeError(\"dictionary changed size during iteration\")\n             if not (s in seen or seen.add(s)):\n                 yield s\n     except TypeError:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/utilities/iterables.py b/sympy/utilities/iterables.py\nindex 032766e..b35f54a 100644\n--- a/sympy/utilities/iterables.py\n+++ b/sympy/utilities/iterables.py\n@@ -732,8 +732,11 @@ def has_variety(seq):\n def uniq(seq, result=None):\n     try:\n         seen = set()\n+        initial_length = len(seq)\n         result = result or []\n         for i, s in enumerate(seq):\n+            if len(seq) != initial_length:\n+                raise RuntimeError('dictionary changed size during iteration')\n             if not (s in seen or seen.add(s)):\n                 yield s\n     except TypeError:\n", "normalized_occurrence": 1}
