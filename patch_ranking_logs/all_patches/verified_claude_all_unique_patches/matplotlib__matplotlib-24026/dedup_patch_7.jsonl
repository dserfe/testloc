{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-24026", "model_patch": "diff --git a/lib/matplotlib/stackplot.py b/lib/matplotlib/stackplot.py\nindex 718e3a5..55db590 100644\n--- a/lib/matplotlib/stackplot.py\n+++ b/lib/matplotlib/stackplot.py\n@@ -69,8 +69,8 @@ def stackplot(axes, x, *args,\n     y = np.row_stack(args)\n \n     labels = iter(labels)\n-    if colors is not None:\n-        axes.set_prop_cycle(color=colors)\n+    if colors is None:\n+        colors = axes._get_lines.prop_cycler.by_key()['color']\n \n     # Assume data passed has not been 'stacked', so stack it here.\n     # We'll need a float buffer for the upcoming calculations.\n", "occurrence": 4, "normalized_patch": "diff --git a/lib/matplotlib/stackplot.py b/lib/matplotlib/stackplot.py\nindex a81621f..e853fcd 100644\n--- a/lib/matplotlib/stackplot.py\n+++ b/lib/matplotlib/stackplot.py\n@@ -4,8 +4,8 @@ __all__ = ['stackplot']\n def stackplot(axes, x, *args, labels=(), colors=None, baseline='zero', **kwargs):\n     y = np.row_stack(args)\n     labels = iter(labels)\n-    if colors is not None:\n-        axes.set_prop_cycle(color=colors)\n+    if colors is None:\n+        colors = axes._get_lines.prop_cycler.by_key()['color']\n     stack = np.cumsum(y, axis=0, dtype=np.promote_types(y.dtype, np.float32))\n     _api.check_in_list(['zero', 'sym', 'wiggle', 'weighted_wiggle'], baseline=baseline)\n     if baseline == 'zero':\n", "normalized_occurrence": 4}
