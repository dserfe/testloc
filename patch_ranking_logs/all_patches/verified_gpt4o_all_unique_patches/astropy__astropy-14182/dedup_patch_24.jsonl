{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-14182", "model_patch": "diff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py\nindex 00bbbaf..7f8830e 100644\n--- a/astropy/io/ascii/rst.py\n+++ b/astropy/io/ascii/rst.py\n@@ -57,10 +57,33 @@ class RST(FixedWidth):\n     data_class = SimpleRSTData\n     header_class = SimpleRSTHeader\n \n-    def __init__(self):\n+    def __init__(self, header_rows=None):\n+        super().__init__(delimiter_pad=None, bookend=False)\n+        self.header_rows = header_rows\n+\n+    def write(self, lines):\n+        if self.header_rows:\n+            tbl_lines = super().write(lines)\n+            header_line = tbl_lines[1]\n+            \n+            if \"name\" in self.header_rows:\n+                name_header = ' '.join([col.info.name for col in self.table.itercols()])\n+            else:\n+                name_header = header_line\n+            \n+            if \"unit\" in self.header_rows:\n+                unit_header = ' '.join([str(col.info.unit or '') for col in self.table.itercols()])\n+            else:\n+                unit_header = header_line\n+            \n+            lines = [header_line, name_header, unit_header] + tbl_lines[2:] + [header_line]\n+        else:\n+            lines = super().write(lines)\n+            lines = [lines[1]] + lines + [lines[1]]\n+        return lines\n         super().__init__(delimiter_pad=None, bookend=False)\n \n     def write(self, lines):\n         lines = super().write(lines)\n         lines = [lines[1]] + lines + [lines[1]]\n-        return lines\n+        return lines\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py\nindex 65d6c1d..ab52f88 100644\n--- a/astropy/io/ascii/rst.py\n+++ b/astropy/io/ascii/rst.py\n@@ -18,7 +18,26 @@ class RST(FixedWidth):\n     _description = 'reStructuredText simple table'\n     data_class = SimpleRSTData\n     header_class = SimpleRSTHeader\n-    def __init__(self):\n+    def __init__(self, header_rows=None):\n+        super().__init__(delimiter_pad=None, bookend=False)\n+        self.header_rows = header_rows\n+    def write(self, lines):\n+        if self.header_rows:\n+            tbl_lines = super().write(lines)\n+            header_line = tbl_lines[1]\n+            if 'name' in self.header_rows:\n+                name_header = ' '.join([col.info.name for col in self.table.itercols()])\n+            else:\n+                name_header = header_line\n+            if 'unit' in self.header_rows:\n+                unit_header = ' '.join([str(col.info.unit or '') for col in self.table.itercols()])\n+            else:\n+                unit_header = header_line\n+            lines = [header_line, name_header, unit_header] + tbl_lines[2:] + [header_line]\n+        else:\n+            lines = super().write(lines)\n+            lines = [lines[1]] + lines + [lines[1]]\n+        return lines\n         super().__init__(delimiter_pad=None, bookend=False)\n     def write(self, lines):\n         lines = super().write(lines)\n", "normalized_occurrence": 1}
