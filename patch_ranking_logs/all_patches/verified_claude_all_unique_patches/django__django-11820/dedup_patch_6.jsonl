{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11820", "model_patch": "diff --git a/django/db/models/options.py b/django/db/models/options.py\nindex d3ae0cf..22a5f47 100644\n--- a/django/db/models/options.py\n+++ b/django/db/models/options.py\n@@ -225,6 +225,9 @@ class Options:\n             # use get_field().\n             query = self.order_with_respect_to\n             try:\n+                # Allow for 'pk' references in order_with_respect_to\n+                if query.endswith('__pk'):\n+                    query = query[:-4]\n                 self.order_with_respect_to = next(\n                     f for f in self._get_fields(reverse=False)\n                     if f.name == query or f.attname == query\n@@ -852,4 +855,4 @@ class Options:\n         return [\n             field for field in self._get_fields(forward=True, reverse=False, include_parents=PROXY_PARENTS)\n             if getattr(field, 'db_returning', False)\n-        ]\n+        ]\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/options.py b/django/db/models/options.py\nindex 3b361a9..4702d62 100644\n--- a/django/db/models/options.py\n+++ b/django/db/models/options.py\n@@ -139,6 +139,8 @@ class Options:\n         if self.order_with_respect_to:\n             query = self.order_with_respect_to\n             try:\n+                if query.endswith('__pk'):\n+                    query = query[:-4]\n                 self.order_with_respect_to = next((f for f in self._get_fields(reverse=False) if f.name == query or f.attname == query))\n             except StopIteration:\n                 raise FieldDoesNotExist(\"%s has no field named '%s'\" % (self.object_name, query))\n", "normalized_occurrence": 1}
