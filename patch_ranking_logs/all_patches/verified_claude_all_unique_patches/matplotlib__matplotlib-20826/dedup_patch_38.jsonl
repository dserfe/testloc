{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-20826", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 07605b5..f80a914 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1303,11 +1303,25 @@ class _AxesBase(martist.Artist):\n         self._shared_axes[\"x\"].clean()\n         self._shared_axes[\"y\"].clean()\n         if self._sharex is not None:\n+            # Restore x-axis visibility and patch\n             self.xaxis.set_visible(xaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            # Reset tick params to match sharing behavior\n+            self.xaxis.set_tick_params(which='both', labelbottom=True, labeltop=False)\n+            if hasattr(self._sharex, 'get_subplotspec'):  # If part of a subplot grid\n+                ss = self._sharex.get_subplotspec()\n+                if ss and not ss.is_last_row():\n+                    self.xaxis.set_tick_params(which='both', labelbottom=False)\n         if self._sharey is not None:\n+            # Restore y-axis visibility and patch\n             self.yaxis.set_visible(yaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            # Reset tick params to match sharing behavior\n+            self.yaxis.set_tick_params(which='both', labelleft=True, labelright=False)\n+            if hasattr(self._sharey, 'get_subplotspec'):  # If part of a subplot grid\n+                ss = self._sharey.get_subplotspec()\n+                if ss and not ss.is_first_col():\n+                    self.yaxis.set_tick_params(which='both', labelleft=False)\n \n         self.stale = True\n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 33a6de3..c812532 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -578,9 +578,19 @@ class _AxesBase(martist.Artist):\n         if self._sharex is not None:\n             self.xaxis.set_visible(xaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            self.xaxis.set_tick_params(which='both', labelbottom=True, labeltop=False)\n+            if hasattr(self._sharex, 'get_subplotspec'):\n+                ss = self._sharex.get_subplotspec()\n+                if ss and (not ss.is_last_row()):\n+                    self.xaxis.set_tick_params(which='both', labelbottom=False)\n         if self._sharey is not None:\n             self.yaxis.set_visible(yaxis_visible)\n             self.patch.set_visible(patch_visible)\n+            self.yaxis.set_tick_params(which='both', labelleft=True, labelright=False)\n+            if hasattr(self._sharey, 'get_subplotspec'):\n+                ss = self._sharey.get_subplotspec()\n+                if ss and (not ss.is_first_col()):\n+                    self.yaxis.set_tick_params(which='both', labelleft=False)\n         self.stale = True\n     class ArtistList(MutableSequence):\n         def __init__(self, axes, prop_name, add_name, valid_types=None, invalid_types=None):\n", "normalized_occurrence": 1}
