{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-15512", "model_patch": "diff --git a/sklearn/cluster/_affinity_propagation.py b/sklearn/cluster/_affinity_propagation.py\nindex 0511594..a788f89 100644\n--- a/sklearn/cluster/_affinity_propagation.py\n+++ b/sklearn/cluster/_affinity_propagation.py\n@@ -197,6 +197,15 @@ def affinity_propagation(S, preference=None, convergence_iter=15, max_iter=200,\n                 if verbose:\n                     print(\"Converged after %d iterations.\" % it)\n                 break\n+        else:\n+            if verbose:\n+                print(\"Did not converge\")\n+            labels = np.array([-1] * n_samples)\n+            cluster_centers_indices = []\n+            if return_n_iter:\n+                return cluster_centers_indices, labels, it + 1\n+            else:\n+                return cluster_centers_indices, labels\n     else:\n         if verbose:\n             print(\"Did not converge\")\n@@ -440,4 +449,4 @@ class AffinityPropagation(ClusterMixin, BaseEstimator):\n         labels : ndarray, shape (n_samples,)\n             Cluster labels.\n         \"\"\"\n-        return super().fit_predict(X, y)\n+        return super().fit_predict(X, y)\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/cluster/_affinity_propagation.py b/sklearn/cluster/_affinity_propagation.py\nindex b441de5..f763f51 100644\n--- a/sklearn/cluster/_affinity_propagation.py\n+++ b/sklearn/cluster/_affinity_propagation.py\n@@ -68,6 +68,15 @@ def affinity_propagation(S, preference=None, convergence_iter=15, max_iter=200,\n                 if verbose:\n                     print('Converged after %d iterations.' % it)\n                 break\n+        else:\n+            if verbose:\n+                print('Did not converge')\n+            labels = np.array([-1] * n_samples)\n+            cluster_centers_indices = []\n+            if return_n_iter:\n+                return (cluster_centers_indices, labels, it + 1)\n+            else:\n+                return (cluster_centers_indices, labels)\n     else:\n         if verbose:\n             print('Did not converge')\n", "normalized_occurrence": 1}
