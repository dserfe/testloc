{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13974", "model_patch": "diff --git a/sympy/physics/quantum/tensorproduct.py b/sympy/physics/quantum/tensorproduct.py\nindex 153c783..9c77d0b 100644\n--- a/sympy/physics/quantum/tensorproduct.py\n+++ b/sympy/physics/quantum/tensorproduct.py\n@@ -238,6 +238,16 @@ class TensorProduct(Expr):\n     def doit(self, **hints):\n         return TensorProduct(*[item.doit(**hints) for item in self.args])\n \n+    def _eval_power(self, exp):\n+        if not isinstance(exp, (int, Integer)):\n+            return NotImplemented\n+        if exp == 0:\n+            return TensorProduct(*(1 for _ in self.args))\n+        result = self\n+        for _ in range(1, exp):\n+            result = result * self\n+        return result\n+\n     def _eval_expand_tensorproduct(self, **hints):\n         \"\"\"Distribute TensorProducts across addition.\"\"\"\n         args = self.args\n", "occurrence": 1, "normalized_patch": "--- a/sympy/physics/quantum/tensorproduct.py\n+++ b/sympy/physics/quantum/tensorproduct.py\n+    def _eval_power(self, exp):\n+        if not isinstance(exp, (int, Integer)):\n+            return NotImplemented\n+        if exp == 0:\n+            return TensorProduct(*(1 for _ in self.args))\n+        result = self\n+        for _ in range(1, exp):\n+            result = result * self\n+        return result", "normalized_occurrence": 1}
