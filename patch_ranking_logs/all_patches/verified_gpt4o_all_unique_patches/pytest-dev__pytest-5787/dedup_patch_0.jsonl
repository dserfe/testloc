{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-5787", "model_patch": "diff --git a/src/_pytest/reports.py b/src/_pytest/reports.py\nindex ba95b0e..047fadc 100644\n--- a/src/_pytest/reports.py\n+++ b/src/_pytest/reports.py\n@@ -358,12 +358,9 @@ class TestReport(BaseReport):\n                 longrepr = (str(r.path), r.lineno, r.message)\n             else:\n                 outcome = \"failed\"\n-                if call.when == \"call\":\n-                    longrepr = item.repr_failure(excinfo)\n-                else:  # exception in setup or teardown\n-                    longrepr = item._repr_failure_py(\n-                        excinfo, style=item.config.getoption(\"tbstyle\", \"auto\")\n-                    )\n+                longrepr = item._repr_failure_py(\n+                    excinfo, style=item.config.getoption(\"tbstyle\", \"auto\")\n+                )\n         for rwhen, key, content in item._report_sections:\n             sections.append((\"Captured {} {}\".format(key, rwhen), content))\n         return cls(\n", "occurrence": 2, "normalized_patch": "diff --git a/src/_pytest/reports.py b/src/_pytest/reports.py\nindex 3292df7..a2db65b 100644\n--- a/src/_pytest/reports.py\n+++ b/src/_pytest/reports.py\n@@ -179,10 +179,7 @@ class TestReport(BaseReport):\n             longrepr = (str(r.path), r.lineno, r.message)\n         else:\n             outcome = 'failed'\n-            if call.when == 'call':\n-                longrepr = item.repr_failure(excinfo)\n-            else:\n-                longrepr = item._repr_failure_py(excinfo, style=item.config.getoption('tbstyle', 'auto'))\n+            longrepr = item._repr_failure_py(excinfo, style=item.config.getoption('tbstyle', 'auto'))\n         for rwhen, key, content in item._report_sections:\n             sections.append(('Captured {} {}'.format(key, rwhen), content))\n         return cls(item.nodeid, item.location, keywords, outcome, longrepr, when, sections, duration, user_properties=item.user_properties)\n", "normalized_occurrence": 2}
