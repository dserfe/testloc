{"model_name_or_path": "agentless", "instance_id": "django__django-11790", "model_patch": "diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py\nindex 4d607f6..9a29d3b 100644\n--- a/django/contrib/auth/forms.py\n+++ b/django/contrib/auth/forms.py\n@@ -165,7 +165,7 @@ class AuthenticationForm(forms.Form):\n     Base class for authenticating users. Extend this to get a form that accepts\n     username/password logins.\n     \"\"\"\n-    username = UsernameField(widget=forms.TextInput(attrs={'autofocus': True}))\n+    username = UsernameField(widget=forms.TextInput(attrs={'autofocus': True, 'maxlength': UserModel._meta.get_field(UserModel.USERNAME_FIELD).max_length or 254}))\n     password = forms.CharField(\n         label=_(\"Password\"),\n         strip=False,\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py\nindex 15bf561..c807933 100644\n--- a/django/contrib/auth/forms.py\n+++ b/django/contrib/auth/forms.py\n@@ -93,7 +93,7 @@ class UserChangeForm(forms.ModelForm):\n     def clean_password(self):\n         return self.initial.get('password')\n class AuthenticationForm(forms.Form):\n-    username = UsernameField(widget=forms.TextInput(attrs={'autofocus': True}))\n+    username = UsernameField(widget=forms.TextInput(attrs={'autofocus': True, 'maxlength': UserModel._meta.get_field(UserModel.USERNAME_FIELD).max_length or 254}))\n     password = forms.CharField(label=_('Password'), strip=False, widget=forms.PasswordInput(attrs={'autocomplete': 'current-password'}))\n     error_messages = {'invalid_login': _('Please enter a correct %(username)s and password. Note that both fields may be case-sensitive.'), 'inactive': _('This account is inactive.')}\n     def __init__(self, request=None, *args, **kwargs):\n", "normalized_occurrence": 1}
