{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-8906", "model_patch": "diff --git a/src/_pytest/outcomes.py b/src/_pytest/outcomes.py\nindex 6515102..3446c46 100644\n--- a/src/_pytest/outcomes.py\n+++ b/src/_pytest/outcomes.py\n@@ -130,13 +130,17 @@ def skip(msg: str = \"\", *, allow_module_level: bool = False) -> \"NoReturn\":\n \n     :param bool allow_module_level:\n         Allows this function to be called at module level, skipping the rest\n-        of the module. Defaults to False.\n+        of the module. This is particularly useful when the entire module contains\n+        code that requires features from a specific Python version. Defaults to False.\n \n     .. note::\n-        It is better to use the :ref:`pytest.mark.skipif ref` marker when\n-        possible to declare a test to be skipped under certain conditions\n-        like mismatching platforms or dependencies.\n-        Similarly, use the ``# doctest: +SKIP`` directive (see `doctest.SKIP\n+        For conditionally skipping individual tests, it is better to use the\n+        :ref:`pytest.mark.skipif ref` marker. However, when you need to skip\n+        an entire module (especially due to syntax compatibility), use\n+        ``skip(msg=\"reason\", allow_module_level=True)`` before any incompatible\n+        imports or code.\n+\n+        For doctests, use the ``# doctest: +SKIP`` directive (see `doctest.SKIP\n         <https://docs.python.org/3/library/how-to/doctest.html#doctest.SKIP>`_)\n         to skip a doctest statically.\n     \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/outcomes.py b/src/_pytest/outcomes.py\nindex 4e411e5..6e0732b 100644\n--- a/src/_pytest/outcomes.py\n+++ b/src/_pytest/outcomes.py\n@@ -88,13 +88,17 @@ def skip(msg: str='', *, allow_module_level: bool=False) -> 'NoReturn':\n \n     :param bool allow_module_level:\n         Allows this function to be called at module level, skipping the rest\n-        of the module. Defaults to False.\n+        of the module. This is particularly useful when the entire module contains\n+        code that requires features from a specific Python version. Defaults to False.\n \n     .. note::\n-        It is better to use the :ref:`pytest.mark.skipif ref` marker when\n-        possible to declare a test to be skipped under certain conditions\n-        like mismatching platforms or dependencies.\n-        Similarly, use the ``# doctest: +SKIP`` directive (see `doctest.SKIP\n+        For conditionally skipping individual tests, it is better to use the\n+        :ref:`pytest.mark.skipif ref` marker. However, when you need to skip\n+        an entire module (especially due to syntax compatibility), use\n+        ``skip(msg=\"reason\", allow_module_level=True)`` before any incompatible\n+        imports or code.\n+\n+        For doctests, use the ``# doctest: +SKIP`` directive (see `doctest.SKIP\n         <https://docs.python.org/3/library/how-to/doctest.html#doctest.SKIP>`_)\n         to skip a doctest statically.\n     \"\"\"\n", "normalized_occurrence": 1}
