{"model_name_or_path": "agentless_claude", "instance_id": "mwaskom__seaborn-3407", "model_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 29c361e..195cbaa 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -1664,9 +1664,20 @@ class PairGrid(Grid):\n     def _find_numeric_cols(self, data):\n         \"\"\"Find which variables in a DataFrame are numeric.\"\"\"\n         numeric_cols = []\n-        for col in data:\n+        for col in data.columns:\n+            # Handle both regular and MultiIndex columns\n+            if isinstance(col, tuple):\n+                col_name = \"_\".join(str(c) for c in col)\n+            else:\n+                col_name = col\n             if variable_type(data[col]) == \"numeric\":\n-                numeric_cols.append(col)\n+                numeric_cols.append(col_name)\n+        # Update column names in the data\n+        if any(isinstance(col, tuple) for col in data.columns):\n+            data.columns = [\n+                \"_\".join(str(c) for c in col) if isinstance(col, tuple) else col\n+                for col in data.columns\n+            ]\n         return numeric_cols\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 039b44a..e6fbb6c 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -792,9 +792,15 @@ class PairGrid(Grid):\n             ax.set_ylabel(label)\n     def _find_numeric_cols(self, data):\n         numeric_cols = []\n-        for col in data:\n+        for col in data.columns:\n+            if isinstance(col, tuple):\n+                col_name = '_'.join((str(c) for c in col))\n+            else:\n+                col_name = col\n             if variable_type(data[col]) == 'numeric':\n-                numeric_cols.append(col)\n+                numeric_cols.append(col_name)\n+        if any((isinstance(col, tuple) for col in data.columns)):\n+            data.columns = ['_'.join((str(c) for c in col)) if isinstance(col, tuple) else col for col in data.columns]\n         return numeric_cols\n class JointGrid(_BaseGrid):\n     def __init__(self, data=None, *, x=None, y=None, hue=None, height=6, ratio=5, space=0.2, palette=None, hue_order=None, hue_norm=None, dropna=False, xlim=None, ylim=None, marginal_ticks=False):\n", "normalized_occurrence": 1}
