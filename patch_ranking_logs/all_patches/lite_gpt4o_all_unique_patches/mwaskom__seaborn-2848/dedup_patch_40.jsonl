{"model_name_or_path": "agentless", "instance_id": "mwaskom__seaborn-2848", "model_patch": "diff --git a/seaborn/relational.py b/seaborn/relational.py\nindex f571efb..fb11e6d 100644\n--- a/seaborn/relational.py\n+++ b/seaborn/relational.py\n@@ -576,7 +576,10 @@ class _ScatterPlotter(_RelationalPlotter):\n         # Apply the mapping from semantic variables to artist attributes\n \n         if \"hue\" in self.variables:\n-            points.set_facecolors(self._hue_map(data[\"hue\"]))\n+            hue_data = data[\"hue\"]\n+            if pd.api.types.is_categorical_dtype(hue_data):\n+                hue_data = hue_data.astype(str)\n+            points.set_facecolors(self._hue_map(hue_data))\n \n         if \"size\" in self.variables:\n             points.set_sizes(self._size_map(data[\"size\"]))\n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/relational.py b/seaborn/relational.py\nindex 8fdb7aa..40ded2d 100644\n--- a/seaborn/relational.py\n+++ b/seaborn/relational.py\n@@ -208,7 +208,10 @@ class _ScatterPlotter(_RelationalPlotter):\n         kws['alpha'] = 1 if self.alpha == 'auto' else self.alpha\n         points = ax.scatter(x=x, y=y, **kws)\n         if 'hue' in self.variables:\n-            points.set_facecolors(self._hue_map(data['hue']))\n+            hue_data = data['hue']\n+            if pd.api.types.is_categorical_dtype(hue_data):\n+                hue_data = hue_data.astype(str)\n+            points.set_facecolors(self._hue_map(hue_data))\n         if 'size' in self.variables:\n             points.set_sizes(self._size_map(data['size']))\n         if 'style' in self.variables:\n", "normalized_occurrence": 1}
