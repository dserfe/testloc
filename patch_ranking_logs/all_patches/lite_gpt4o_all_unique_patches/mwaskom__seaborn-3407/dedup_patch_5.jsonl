{"model_name_or_path": "agentless", "instance_id": "mwaskom__seaborn-3407", "model_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 29c361e..3022545 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -1241,6 +1241,10 @@ class PairGrid(Grid):\n \n         super().__init__()\n \n+        # Flatten MultiIndex columns if necessary\n+        if isinstance(data.columns, pd.MultiIndex):\n+            data.columns = [' '.join(map(str, col)).strip() for col in data.columns]\n+            \n         # Sort out the variables that define the grid\n         numeric_cols = self._find_numeric_cols(data)\n         if hue in numeric_cols:\n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 039b44a..918389e 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -534,6 +534,8 @@ class FacetGrid(Grid):\n class PairGrid(Grid):\n     def __init__(self, data, *, hue=None, vars=None, x_vars=None, y_vars=None, hue_order=None, palette=None, hue_kws=None, corner=False, diag_sharey=True, height=2.5, aspect=1, layout_pad=0.5, despine=True, dropna=False):\n         super().__init__()\n+        if isinstance(data.columns, pd.MultiIndex):\n+            data.columns = [' '.join(map(str, col)).strip() for col in data.columns]\n         numeric_cols = self._find_numeric_cols(data)\n         if hue in numeric_cols:\n             numeric_cols.remove(hue)\n", "normalized_occurrence": 1}
