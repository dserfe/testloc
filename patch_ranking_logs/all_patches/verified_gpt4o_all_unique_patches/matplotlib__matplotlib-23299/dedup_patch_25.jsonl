{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-23299", "model_patch": "diff --git a/lib/matplotlib/pyplot.py b/lib/matplotlib/pyplot.py\nindex 9ba243c..e326c02 100644\n--- a/lib/matplotlib/pyplot.py\n+++ b/lib/matplotlib/pyplot.py\n@@ -588,7 +588,34 @@ def rc(group, **kwargs):\n \n @_copy_docstring_and_deprecators(matplotlib.rc_context)\n def rc_context(rc=None, fname=None):\n-    return matplotlib.rc_context(rc, fname)\n+    from matplotlib import _pylab_helpers\n+\n+    class _GcfKeeper:\n+        def __init__(self):\n+            self.gcf = _pylab_helpers.Gcf\n+            self.figs = self.gcf.figs.copy()\n+\n+        def __enter__(self):\n+            return self\n+\n+        def __exit__(self, exc_type, exc_val, exc_tb):\n+            self.gcf.figs = self.figs\n+\n+    class RcContextWithGcf(matplotlib.rc_context):\n+        def __init__(self, rc=None, fname=None):\n+            super().__init__(rc, fname)\n+            self._gcf_keeper = _GcfKeeper()\n+\n+        def __enter__(self):\n+            self._gcf_keeper.__enter__()\n+            return super().__enter__()\n+\n+        def __exit__(self, exc_type, exc_val, exc_tb):\n+            super_exit = super().__exit__(exc_type, exc_val, exc_tb)\n+            self._gcf_keeper.__exit__(exc_type, exc_val, exc_tb)\n+            return super_exit\n+\n+    return RcContextWithGcf(rc, fname)\n \n \n @_copy_docstring_and_deprecators(matplotlib.rcdefaults)\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/pyplot.py b/lib/matplotlib/pyplot.py\nindex a3f363f..da0ac07 100644\n--- a/lib/matplotlib/pyplot.py\n+++ b/lib/matplotlib/pyplot.py\n@@ -209,7 +209,27 @@ def rc(group, **kwargs):\n     matplotlib.rc(group, **kwargs)\n @_copy_docstring_and_deprecators(matplotlib.rc_context)\n def rc_context(rc=None, fname=None):\n-    return matplotlib.rc_context(rc, fname)\n+    from matplotlib import _pylab_helpers\n+    class _GcfKeeper:\n+        def __init__(self):\n+            self.gcf = _pylab_helpers.Gcf\n+            self.figs = self.gcf.figs.copy()\n+        def __enter__(self):\n+            return self\n+        def __exit__(self, exc_type, exc_val, exc_tb):\n+            self.gcf.figs = self.figs\n+    class RcContextWithGcf(matplotlib.rc_context):\n+        def __init__(self, rc=None, fname=None):\n+            super().__init__(rc, fname)\n+            self._gcf_keeper = _GcfKeeper()\n+        def __enter__(self):\n+            self._gcf_keeper.__enter__()\n+            return super().__enter__()\n+        def __exit__(self, exc_type, exc_val, exc_tb):\n+            super_exit = super().__exit__(exc_type, exc_val, exc_tb)\n+            self._gcf_keeper.__exit__(exc_type, exc_val, exc_tb)\n+            return super_exit\n+    return RcContextWithGcf(rc, fname)\n @_copy_docstring_and_deprecators(matplotlib.rcdefaults)\n def rcdefaults():\n     matplotlib.rcdefaults()\n", "normalized_occurrence": 1}
