{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-24870", "model_patch": "diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py\nindex 908a24f..f01e165 100644\n--- a/lib/matplotlib/contour.py\n+++ b/lib/matplotlib/contour.py\n@@ -721,7 +721,11 @@ class ContourSet(cm.ScalarMappable, ContourLabeler):\n             `~.Axes.contour`.\n         \"\"\"\n         self.axes = ax\n-        self.levels = levels\n+        # Auto-detect boolean arrays and set levels to [0.5]\n+        if levels is None and args and isinstance(args[0], np.ndarray) and args[0].dtype == bool:\n+            self.levels = [0.5]\n+        else:\n+            self.levels = levels\n         self.filled = filled\n         self.linewidths = linewidths\n         self.linestyles = linestyles\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py\nindex 04dc867..94e3645 100644\n--- a/lib/matplotlib/contour.py\n+++ b/lib/matplotlib/contour.py\n@@ -264,7 +264,10 @@ _docstring.interpd.update(contour_set_attributes='\\nAttributes\\n----------\\nax :\n class ContourSet(cm.ScalarMappable, ContourLabeler):\n     def __init__(self, ax, *args, levels=None, filled=False, linewidths=None, linestyles=None, hatches=(None,), alpha=None, origin=None, extent=None, cmap=None, colors=None, norm=None, vmin=None, vmax=None, extend='neither', antialiased=None, nchunk=0, locator=None, transform=None, negative_linestyles=None, **kwargs):\n         self.axes = ax\n-        self.levels = levels\n+        if levels is None and args and isinstance(args[0], np.ndarray) and (args[0].dtype == bool):\n+            self.levels = [0.5]\n+        else:\n+            self.levels = levels\n         self.filled = filled\n         self.linewidths = linewidths\n         self.linestyles = linestyles\n", "normalized_occurrence": 1}
