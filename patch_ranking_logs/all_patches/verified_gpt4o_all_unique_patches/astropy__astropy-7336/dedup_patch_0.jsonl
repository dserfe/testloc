{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-7336", "model_patch": "diff --git a/astropy/units/decorators.py b/astropy/units/decorators.py\nindex 5ce0659..4cccf55 100644\n--- a/astropy/units/decorators.py\n+++ b/astropy/units/decorators.py\n@@ -221,11 +221,14 @@ class QuantityInput:\n             with add_enabled_equivalencies(self.equivalencies):\n                 return_ = wrapped_function(*func_args, **func_kwargs)\n             if wrapped_signature.return_annotation is not inspect.Signature.empty:\n-                return return_.to(wrapped_signature.return_annotation)\n+                if return_ is not None:\n+                    return return_.to(wrapped_signature.return_annotation)\n+                else:\n+                    return return_\n             else:\n                 return return_\n \n         return wrapper\n \n \n-quantity_input = QuantityInput.as_decorator\n+quantity_input = QuantityInput.as_decorator\n", "occurrence": 14, "normalized_patch": "diff --git a/astropy/units/decorators.py b/astropy/units/decorators.py\nindex a93123e..a2d425a 100644\n--- a/astropy/units/decorators.py\n+++ b/astropy/units/decorators.py\n@@ -78,7 +78,10 @@ class QuantityInput:\n             with add_enabled_equivalencies(self.equivalencies):\n                 return_ = wrapped_function(*func_args, **func_kwargs)\n             if wrapped_signature.return_annotation is not inspect.Signature.empty:\n-                return return_.to(wrapped_signature.return_annotation)\n+                if return_ is not None:\n+                    return return_.to(wrapped_signature.return_annotation)\n+                else:\n+                    return return_\n             else:\n                 return return_\n         return wrapper\n", "normalized_occurrence": 14}
