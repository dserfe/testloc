{"model_name_or_path": "agentless_claude", "instance_id": "psf__requests-6028", "model_patch": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex d47134b..ea9d0b1 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -384,7 +384,16 @@ class HTTPAdapter(BaseAdapter):\n         :rtype: dict\n         \"\"\"\n         headers = {}\n+        \n+        # First try to get auth from the proxy URL\n         username, password = get_auth_from_url(proxy)\n+        \n+        # If no auth found in URL, check if proxy is in self.proxy_manager\n+        # which might have auth credentials\n+        if not username and proxy in self.proxy_manager:\n+            proxy_manager = self.proxy_manager[proxy]\n+            if hasattr(proxy_manager, 'proxy_headers'):\n+                return proxy_manager.proxy_headers\n \n         if username:\n             headers['Proxy-Authorization'] = _basic_auth_str(username,\n", "occurrence": 1, "normalized_patch": "diff --git a/requests/adapters.py b/requests/adapters.py\nindex 8bf110e..ba1f552 100644\n--- a/requests/adapters.py\n+++ b/requests/adapters.py\n@@ -156,6 +156,10 @@ class HTTPAdapter(BaseAdapter):\n     def proxy_headers(self, proxy):\n         headers = {}\n         username, password = get_auth_from_url(proxy)\n+        if not username and proxy in self.proxy_manager:\n+            proxy_manager = self.proxy_manager[proxy]\n+            if hasattr(proxy_manager, 'proxy_headers'):\n+                return proxy_manager.proxy_headers\n         if username:\n             headers['Proxy-Authorization'] = _basic_auth_str(username, password)\n         return headers\n", "normalized_occurrence": 1}
