{"model_name_or_path": "agentless", "instance_id": "django__django-15280", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 1013471..00f6322 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -843,7 +843,7 @@ class QuerySet:\n \n     def _prefetch_related_objects(self):\n         # This method can only be called once the result cache has been filled.\n-        prefetch_related_objects(self._result_cache, *self._prefetch_related_lookups)\n+        self._result_cache = prefetch_related_objects(self._result_cache, *self._prefetch_related_lookups)\n         self._prefetch_done = True\n \n     def explain(self, *, format=None, **options):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex b23a375..bf79824 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -513,7 +513,7 @@ class QuerySet:\n             return obj in self._result_cache\n         return self.filter(pk=obj.pk).exists()\n     def _prefetch_related_objects(self):\n-        prefetch_related_objects(self._result_cache, *self._prefetch_related_lookups)\n+        self._result_cache = prefetch_related_objects(self._result_cache, *self._prefetch_related_lookups)\n         self._prefetch_done = True\n     def explain(self, *, format=None, **options):\n         return self.query.explain(using=self.db, format=format, **options)\n", "normalized_occurrence": 1}
