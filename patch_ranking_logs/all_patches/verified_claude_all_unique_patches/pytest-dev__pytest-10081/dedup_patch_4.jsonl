{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-10081", "model_patch": "diff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py\nindex 28c146e..2e023ad 100644\n--- a/src/_pytest/unittest.py\n+++ b/src/_pytest/unittest.py\n@@ -316,7 +316,8 @@ class TestCaseFunction(Function):\n             # Arguably we could always postpone tearDown(), but this changes the moment where the\n             # TestCase instance interacts with the results object, so better to only do it\n             # when absolutely needed.\n-            if self.config.getoption(\"usepdb\") and not _is_skipped(self.obj):\n+            skip_mark = evaluate_skip_marks(self)\n+            if self.config.getoption(\"usepdb\") and not (skip_mark or _is_skipped(self.obj)):\n                 self._explicit_tearDown = self._testcase.tearDown\n                 setattr(self._testcase, \"tearDown\", lambda *args: None)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py\nindex c60e5c9..9ac5e60 100644\n--- a/src/_pytest/unittest.py\n+++ b/src/_pytest/unittest.py\n@@ -196,7 +196,8 @@ class TestCaseFunction(Function):\n         if is_async_function(self.obj):\n             self._testcase(result=self)\n         else:\n-            if self.config.getoption('usepdb') and (not _is_skipped(self.obj)):\n+            skip_mark = evaluate_skip_marks(self)\n+            if self.config.getoption('usepdb') and (not (skip_mark or _is_skipped(self.obj))):\n                 self._explicit_tearDown = self._testcase.tearDown\n                 setattr(self._testcase, 'tearDown', lambda *args: None)\n             setattr(self._testcase, self.name, self.obj)\n", "normalized_occurrence": 1}
