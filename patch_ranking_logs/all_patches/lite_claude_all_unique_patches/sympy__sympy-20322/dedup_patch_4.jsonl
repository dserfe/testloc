{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-20322", "model_patch": "diff --git a/sympy/functions/elementary/integers.py b/sympy/functions/elementary/integers.py\nindex fbc5a14..161bb78 100644\n--- a/sympy/functions/elementary/integers.py\n+++ b/sympy/functions/elementary/integers.py\n@@ -295,6 +295,15 @@ class ceiling(RoundFunction):\n     def _eval_is_nonpositive(self):\n         return self.args[0].is_nonpositive\n \n+    def _eval_expand_func(self, **hints):\n+        if hints.get('evaluate', True):\n+            arg = self.args[0]\n+            if arg.is_Add:\n+                coeff_num = arg.as_coefficient(S.One)\n+                if coeff_num is not None:\n+                    return ceiling(arg - coeff_num) + ceiling(coeff_num)\n+            return self.func(arg)\n+        return self\n \n \n     def __lt__(self, other):\n", "occurrence": 1, "normalized_patch": "--- a/sympy/functions/elementary/integers.py\n+++ b/sympy/functions/elementary/integers.py\n+    def _eval_expand_func(self, **hints):\n+        if hints.get('evaluate', True):\n+            arg = self.args[0]\n+            if arg.is_Add:\n+                coeff_num = arg.as_coefficient(S.One)\n+                if coeff_num is not None:\n+                    return ceiling(arg - coeff_num) + ceiling(coeff_num)\n+            return self.func(arg)\n+        return self", "normalized_occurrence": 1}
