{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-22719", "model_patch": "diff --git a/lib/matplotlib/category.py b/lib/matplotlib/category.py\nindex a559ed2..8de3422 100644\n--- a/lib/matplotlib/category.py\n+++ b/lib/matplotlib/category.py\n@@ -53,17 +53,20 @@ class StrCategoryConverter(units.ConversionInterface):\n         StrCategoryConverter._validate_unit(unit)\n         # dtype = object preserves numerical pass throughs\n         values = np.atleast_1d(np.array(value, dtype=object))\n-        # pass through sequence of non binary numbers\n-        with _api.suppress_matplotlib_deprecation_warning():\n-            is_numlike = all(units.ConversionInterface.is_numlike(v)\n-                             and not isinstance(v, (str, bytes))\n-                             for v in values)\n-        if is_numlike:\n-            _api.warn_deprecated(\n-                \"3.5\", message=\"Support for passing numbers through unit \"\n-                \"converters is deprecated since %(since)s and support will be \"\n-                \"removed %(removal)s; use Axis.convert_units instead.\")\n-            return np.asarray(values, dtype=float)\n+        if values.size == 0:\n+            return values\n+        else:\n+            # pass through sequence of non binary numbers\n+            with _api.suppress_matplotlib_deprecation_warning():\n+                is_numlike = all(units.ConversionInterface.is_numlike(v)\n+                                 and not isinstance(v, (str, bytes))\n+                                 for v in values)\n+            if is_numlike:\n+                _api.warn_deprecated(\n+                    \"3.5\", message=\"Support for passing numbers through unit \"\n+                    \"converters is deprecated since %(since)s and support will be \"\n+                    \"removed %(removal)s; use Axis.convert_units instead.\")\n+                return np.asarray(values, dtype=float)\n         # force an update so it also does type checking\n         unit.update(values)\n         return np.vectorize(unit._mapping.__getitem__, otypes=[float])(values)\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/category.py b/lib/matplotlib/category.py\nindex 5718f98..8530235 100644\n--- a/lib/matplotlib/category.py\n+++ b/lib/matplotlib/category.py\n@@ -12,11 +12,14 @@ class StrCategoryConverter(units.ConversionInterface):\n             raise ValueError('Missing category information for StrCategoryConverter; this might be caused by unintendedly mixing categorical and numeric data')\n         StrCategoryConverter._validate_unit(unit)\n         values = np.atleast_1d(np.array(value, dtype=object))\n-        with _api.suppress_matplotlib_deprecation_warning():\n-            is_numlike = all((units.ConversionInterface.is_numlike(v) and (not isinstance(v, (str, bytes))) for v in values))\n-        if is_numlike:\n-            _api.warn_deprecated('3.5', message='Support for passing numbers through unit converters is deprecated since %(since)s and support will be removed %(removal)s; use Axis.convert_units instead.')\n-            return np.asarray(values, dtype=float)\n+        if values.size == 0:\n+            return values\n+        else:\n+            with _api.suppress_matplotlib_deprecation_warning():\n+                is_numlike = all((units.ConversionInterface.is_numlike(v) and (not isinstance(v, (str, bytes))) for v in values))\n+            if is_numlike:\n+                _api.warn_deprecated('3.5', message='Support for passing numbers through unit converters is deprecated since %(since)s and support will be removed %(removal)s; use Axis.convert_units instead.')\n+                return np.asarray(values, dtype=float)\n         unit.update(values)\n         return np.vectorize(unit._mapping.__getitem__, otypes=[float])(values)\n     @staticmethod\n", "normalized_occurrence": 1}
