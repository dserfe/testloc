{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12965", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 7c860dc..d580fa9 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -1423,6 +1423,13 @@ class SQLDeleteCompiler(SQLCompiler):\n         Create the SQL for this query. Return the SQL string and list of\n         parameters.\n         \"\"\"\n+        # Use simple DELETE if we have a single table and no additional conditions\n+        if (self.single_alias and\n+                not self.query.where and\n+                not self.query.annotation_select and\n+                not self.query.distinct):\n+            return self._as_sql(self.query)\n+        # For all other cases (e.g. joins, conditions), use a subquery\n         if self.single_alias:\n             return self._as_sql(self.query)\n         innerq = self.query.clone()\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 8178df0..d0dc255 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -798,6 +798,8 @@ class SQLDeleteCompiler(SQLCompiler):\n             result.append('WHERE %s' % where)\n         return (' '.join(result), tuple(params))\n     def as_sql(self):\n+        if self.single_alias and (not self.query.where) and (not self.query.annotation_select) and (not self.query.distinct):\n+            return self._as_sql(self.query)\n         if self.single_alias:\n             return self._as_sql(self.query)\n         innerq = self.query.clone()\n", "normalized_occurrence": 1}
