{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11490", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 78e67cd..fcacc95 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -426,11 +426,18 @@ class SQLCompiler:\n                 # must have the same columns list. Set the selects defined on\n                 # the query on all combined queries, if not already set.\n                 if not compiler.query.values_select and self.query.values_select:\n-                    compiler.query.set_values((\n-                        *self.query.extra_select,\n-                        *self.query.values_select,\n-                        *self.query.annotation_select,\n-                    ))\n+                    selected = []\n+                    if self.query.extra_select_mask is not None:\n+                        selected.extend(\n+                            f for f in self.query.extra_select if f in self.query.extra_select_mask\n+                        )\n+                    selected.extend(self.query.values_select)\n+                    if self.query.annotation_select_mask is not None:\n+                        selected.extend(\n+                            f for f in self.query.annotation_select\n+                            if f in self.query.annotation_select_mask\n+                        )\n+                    compiler.query.set_values(selected)\n                 part_sql, part_args = compiler.as_sql()\n                 if compiler.query.combinator:\n                     # Wrap in a subquery if wrapping in parentheses isn't\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex c7af2ab..c11f349 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -241,7 +241,13 @@ class SQLCompiler:\n         for compiler in compilers:\n             try:\n                 if not compiler.query.values_select and self.query.values_select:\n-                    compiler.query.set_values((*self.query.extra_select, *self.query.values_select, *self.query.annotation_select))\n+                    selected = []\n+                    if self.query.extra_select_mask is not None:\n+                        selected.extend((f for f in self.query.extra_select if f in self.query.extra_select_mask))\n+                    selected.extend(self.query.values_select)\n+                    if self.query.annotation_select_mask is not None:\n+                        selected.extend((f for f in self.query.annotation_select if f in self.query.annotation_select_mask))\n+                    compiler.query.set_values(selected)\n                 part_sql, part_args = compiler.as_sql()\n                 if compiler.query.combinator:\n                     if not features.supports_parentheses_in_compound:\n", "normalized_occurrence": 1}
