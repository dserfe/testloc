{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-9673", "model_patch": "diff --git a/sphinx/ext/napoleon/docstring.py b/sphinx/ext/napoleon/docstring.py\nindex ea465e6..de5f5c0 100644\n--- a/sphinx/ext/napoleon/docstring.py\n+++ b/sphinx/ext/napoleon/docstring.py\n@@ -776,10 +776,15 @@ class GoogleDocstring:\n \n         lines: List[str] = []\n         for _name, _type, _desc in fields:\n-            if use_rtype:\n-                field = self._format_field(_name, '', _desc)\n-            else:\n+            # Always include type in the description when autodoc_typehints_description_target is \"documented\"\n+            if hasattr(self._config, 'autodoc_typehints_description_target') and \\\n+               self._config.autodoc_typehints_description_target == 'documented':\n                 field = self._format_field(_name, _type, _desc)\n+            else:\n+                if use_rtype:\n+                    field = self._format_field(_name, '', _desc)\n+                else:\n+                    field = self._format_field(_name, _type, _desc)\n \n             if multi:\n                 if lines:\n@@ -788,7 +793,8 @@ class GoogleDocstring:\n                     lines.extend(self._format_block(':returns: * ', field))\n             else:\n                 lines.extend(self._format_block(':returns: ', field))\n-                if _type and use_rtype:\n+                if _type and use_rtype and not (hasattr(self._config, 'autodoc_typehints_description_target') and \\\n+                   self._config.autodoc_typehints_description_target == 'documented'):\n                     lines.extend([':rtype: %s' % _type, ''])\n         if lines and lines[-1]:\n             lines.append('')\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/napoleon/docstring.py b/sphinx/ext/napoleon/docstring.py\nindex bc7a995..7f98c97 100644\n--- a/sphinx/ext/napoleon/docstring.py\n+++ b/sphinx/ext/napoleon/docstring.py\n@@ -513,7 +513,9 @@ class GoogleDocstring:\n             use_rtype = self._config.napoleon_use_rtype\n         lines: List[str] = []\n         for _name, _type, _desc in fields:\n-            if use_rtype:\n+            if hasattr(self._config, 'autodoc_typehints_description_target') and self._config.autodoc_typehints_description_target == 'documented':\n+                field = self._format_field(_name, _type, _desc)\n+            elif use_rtype:\n                 field = self._format_field(_name, '', _desc)\n             else:\n                 field = self._format_field(_name, _type, _desc)\n@@ -524,7 +526,7 @@ class GoogleDocstring:\n                     lines.extend(self._format_block(':returns: * ', field))\n             else:\n                 lines.extend(self._format_block(':returns: ', field))\n-                if _type and use_rtype:\n+                if _type and use_rtype and (not (hasattr(self._config, 'autodoc_typehints_description_target') and self._config.autodoc_typehints_description_target == 'documented')):\n                     lines.extend([':rtype: %s' % _type, ''])\n         if lines and lines[-1]:\n             lines.append('')\n", "normalized_occurrence": 1}
