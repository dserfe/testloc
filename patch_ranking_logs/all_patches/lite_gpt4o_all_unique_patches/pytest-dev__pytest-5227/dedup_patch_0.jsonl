{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-5227", "model_patch": "diff --git a/src/_pytest/logging.py b/src/_pytest/logging.py\nindex 1ebe9d0..01f354c 100644\n--- a/src/_pytest/logging.py\n+++ b/src/_pytest/logging.py\n@@ -15,7 +15,7 @@ from _pytest.compat import dummy_context_manager\n from _pytest.config import create_terminal_writer\n from _pytest.pathlib import Path\n \n-DEFAULT_LOG_FORMAT = \"%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s\"\n+DEFAULT_LOG_FORMAT = \"%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s\"\n DEFAULT_LOG_DATE_FORMAT = \"%H:%M:%S\"\n \n \n", "occurrence": 42, "normalized_patch": "diff --git a/src/_pytest/logging.py b/src/_pytest/logging.py\nindex a432c57..c65b2d5 100644\n--- a/src/_pytest/logging.py\n+++ b/src/_pytest/logging.py\n@@ -10,7 +10,7 @@ import pytest\n from _pytest.compat import dummy_context_manager\n from _pytest.config import create_terminal_writer\n from _pytest.pathlib import Path\n-DEFAULT_LOG_FORMAT = '%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s'\n+DEFAULT_LOG_FORMAT = '%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s'\n DEFAULT_LOG_DATE_FORMAT = '%H:%M:%S'\n class ColoredLevelFormatter(logging.Formatter):\n     LOGLEVEL_COLOROPTS = {logging.CRITICAL: {'red'}, logging.ERROR: {'red', 'bold'}, logging.WARNING: {'yellow'}, logging.WARN: {'yellow'}, logging.INFO: {'green'}, logging.DEBUG: {'purple'}, logging.NOTSET: set()}\n", "normalized_occurrence": 42}
