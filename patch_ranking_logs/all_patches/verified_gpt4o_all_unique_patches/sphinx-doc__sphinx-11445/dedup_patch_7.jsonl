{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-11445", "model_patch": "diff --git a/sphinx/util/rst.py b/sphinx/util/rst.py\nindex 83e696f..2ce8326 100644\n--- a/sphinx/util/rst.py\n+++ b/sphinx/util/rst.py\n@@ -91,7 +91,15 @@ def prepend_prolog(content: StringList, prolog: str) -> None:\n             pos += 1\n \n         # insert prolog (after docinfo if exists)\n-        for lineno, line in enumerate(prolog.splitlines()):\n+        # Ensure prolog does not interfere with the first heading\n+        prolog_lines = prolog.splitlines()\n+        for lineno, line in enumerate(prolog_lines):\n+            # If a heading follows immediately after the prolog, insert a blank line\n+            if lineno == len(prolog_lines) - 1 and (\n+                len(content) > pos + lineno + 1\n+                and content[pos + lineno + 1].startswith('.. ')\n+            ):\n+                content.insert(pos + lineno + 1, '', '<rst_prolog>', 0)\n             content.insert(pos + lineno, line, '<rst_prolog>', lineno)\n \n         content.insert(pos + lineno + 1, '', '<generated>', 0)\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/util/rst.py b/sphinx/util/rst.py\nindex 911aea2..0265918 100644\n--- a/sphinx/util/rst.py\n+++ b/sphinx/util/rst.py\n@@ -60,7 +60,10 @@ def prepend_prolog(content: StringList, prolog: str) -> None:\n         if pos > 0:\n             content.insert(pos, '', '<generated>', 0)\n             pos += 1\n-        for lineno, line in enumerate(prolog.splitlines()):\n+        prolog_lines = prolog.splitlines()\n+        for lineno, line in enumerate(prolog_lines):\n+            if lineno == len(prolog_lines) - 1 and (len(content) > pos + lineno + 1 and content[pos + lineno + 1].startswith('.. ')):\n+                content.insert(pos + lineno + 1, '', '<rst_prolog>', 0)\n             content.insert(pos + lineno, line, '<rst_prolog>', lineno)\n         content.insert(pos + lineno + 1, '', '<generated>', 0)\n def append_epilog(content: StringList, epilog: str) -> None:\n", "normalized_occurrence": 1}
