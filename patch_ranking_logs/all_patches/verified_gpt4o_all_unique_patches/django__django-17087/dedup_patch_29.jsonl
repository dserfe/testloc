{"model_name_or_path": "agentless", "instance_id": "django__django-17087", "model_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex 941a5ed..a092b8b 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -104,8 +104,10 @@ class DeconstructableSerializer(BaseSerializer):\n         if module == \"django.db.models\":\n             imports = {\"from django.db import models\"}\n             name = \"models.%s\" % name\n-        else:\n-            imports = {\"import %s\" % module}\n+        elif '.' in module:\n+            parent_module, nested_class = module.rsplit(\".\", 1)\n+            imports = {\"import %s\" % parent_module}\n+            name = \"%s.%s\" % (parent_module, name)\n             name = path\n         return name, imports\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex bd46ec1..2e167f2 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -74,8 +74,10 @@ class DeconstructableSerializer(BaseSerializer):\n         if module == 'django.db.models':\n             imports = {'from django.db import models'}\n             name = 'models.%s' % name\n-        else:\n-            imports = {'import %s' % module}\n+        elif '.' in module:\n+            parent_module, nested_class = module.rsplit('.', 1)\n+            imports = {'import %s' % parent_module}\n+            name = '%s.%s' % (parent_module, name)\n             name = path\n         return (name, imports)\n     def serialize(self):\n", "normalized_occurrence": 1}
