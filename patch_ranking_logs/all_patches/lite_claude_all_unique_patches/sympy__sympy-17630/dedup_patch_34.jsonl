{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-17630", "model_patch": "diff --git a/sympy/matrices/expressions/matmul.py b/sympy/matrices/expressions/matmul.py\nindex bc38a10..be18ce0 100644\n--- a/sympy/matrices/expressions/matmul.py\n+++ b/sympy/matrices/expressions/matmul.py\n@@ -220,6 +220,11 @@ def any_zeros(mul):\n     if any([arg.is_zero or (arg.is_Matrix and arg.is_ZeroMatrix)\n                        for arg in mul.args]):\n         matrices = [arg for arg in mul.args if arg.is_Matrix]\n+        if not matrices:  # If no matrices found, return scalar zero\n+            return S.Zero\n+        # Ensure we maintain matrix structure for BlockMatrix operations\n+        if hasattr(matrices[0], 'blocks') or hasattr(matrices[-1], 'blocks'):\n+            return ZeroMatrix(matrices[0].rows, matrices[-1].cols)\n         return ZeroMatrix(matrices[0].rows, matrices[-1].cols)\n     return mul\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/expressions/matmul.py b/sympy/matrices/expressions/matmul.py\nindex e0bcc69..55c1748 100644\n--- a/sympy/matrices/expressions/matmul.py\n+++ b/sympy/matrices/expressions/matmul.py\n@@ -133,6 +133,10 @@ def newmul(*args):\n def any_zeros(mul):\n     if any([arg.is_zero or (arg.is_Matrix and arg.is_ZeroMatrix) for arg in mul.args]):\n         matrices = [arg for arg in mul.args if arg.is_Matrix]\n+        if not matrices:\n+            return S.Zero\n+        if hasattr(matrices[0], 'blocks') or hasattr(matrices[-1], 'blocks'):\n+            return ZeroMatrix(matrices[0].rows, matrices[-1].cols)\n         return ZeroMatrix(matrices[0].rows, matrices[-1].cols)\n     return mul\n def merge_explicit(matmul):\n", "normalized_occurrence": 1}
