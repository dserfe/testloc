{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-24265", "model_patch": "diff --git a/lib/matplotlib/style/core.py b/lib/matplotlib/style/core.py\nindex 6520b77..b508e3f 100644\n--- a/lib/matplotlib/style/core.py\n+++ b/lib/matplotlib/style/core.py\n@@ -255,7 +255,28 @@ def reload_library():\n     \"\"\"Reload the style library.\"\"\"\n     global library\n     library = update_user_library(_base_library)\n+    \n+    # Add backward compatibility for pre-3.6.0 style names\n+    legacy_styles = {\n+        'seaborn-colorblind': library.get('sns_colorblind', {}),\n+        'seaborn-deep': library.get('sns_deep', {}),\n+        'seaborn-muted': library.get('sns_muted', {}),\n+        'seaborn-notebook': library.get('sns_notebook', {}),\n+        'seaborn-paper': library.get('sns_paper', {}),\n+        'seaborn-pastel': library.get('sns_pastel', {}),\n+        'seaborn-poster': library.get('sns_poster', {}),\n+        'seaborn-talk': library.get('sns_talk', {}),\n+        'seaborn-ticks': library.get('sns_ticks', {}),\n+        'seaborn-white': library.get('sns_white', {}),\n+        'seaborn-whitegrid': library.get('sns_whitegrid', {}),\n+        'seaborn-darkgrid': library.get('sns_darkgrid', {}),\n+        'seaborn-dark': library.get('sns_dark', {}),\n+        'seaborn-dark-palette': library.get('sns_dark_palette', {}),\n+        'seaborn-bright': library.get('sns_bright', {}),\n+    }\n+    # Only add legacy styles that have corresponding new styles\n+    library.update({k: v for k, v in legacy_styles.items() if v})\n     available[:] = sorted(library.keys())\n \n \n-reload_library()\n+reload_library()\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/style/core.py b/lib/matplotlib/style/core.py\nindex 6263e52..863fa32 100644\n--- a/lib/matplotlib/style/core.py\n+++ b/lib/matplotlib/style/core.py\n@@ -94,5 +94,7 @@ available = []\n def reload_library():\n     global library\n     library = update_user_library(_base_library)\n+    legacy_styles = {'seaborn-colorblind': library.get('sns_colorblind', {}), 'seaborn-deep': library.get('sns_deep', {}), 'seaborn-muted': library.get('sns_muted', {}), 'seaborn-notebook': library.get('sns_notebook', {}), 'seaborn-paper': library.get('sns_paper', {}), 'seaborn-pastel': library.get('sns_pastel', {}), 'seaborn-poster': library.get('sns_poster', {}), 'seaborn-talk': library.get('sns_talk', {}), 'seaborn-ticks': library.get('sns_ticks', {}), 'seaborn-white': library.get('sns_white', {}), 'seaborn-whitegrid': library.get('sns_whitegrid', {}), 'seaborn-darkgrid': library.get('sns_darkgrid', {}), 'seaborn-dark': library.get('sns_dark', {}), 'seaborn-dark-palette': library.get('sns_dark_palette', {}), 'seaborn-bright': library.get('sns_bright', {})}\n+    library.update({k: v for k, v in legacy_styles.items() if v})\n     available[:] = sorted(library.keys())\n reload_library()\n\\ No newline at end of file\n", "normalized_occurrence": 1}
