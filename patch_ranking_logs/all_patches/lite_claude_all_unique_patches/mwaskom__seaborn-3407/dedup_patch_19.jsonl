{"model_name_or_path": "agentless_claude", "instance_id": "mwaskom__seaborn-3407", "model_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 29c361e..95624ed 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -1445,10 +1445,15 @@ class PairGrid(Grid):\n             diag_axes = []\n             for i, y_var in enumerate(self.y_vars):\n                 for j, x_var in enumerate(self.x_vars):\n-                    if x_var == y_var:\n-\n-                        # Make the density axes\n-                        diag_vars.append(x_var)\n+                    # For MultiIndex columns, compare full column names\n+                    if isinstance(self.data.columns, pd.MultiIndex):\n+                        if x_var == y_var:\n+                            # Use the full column name (tuple) for MultiIndex\n+                            diag_vars.append(x_var)\n+                    else:\n+                        if x_var == y_var:\n+                            # Make the density axes\n+                            diag_vars.append(x_var)\n                         ax = self.axes[i, j]\n                         diag_ax = ax.twinx()\n                         diag_ax.set_axis_off()\n@@ -1487,7 +1492,13 @@ class PairGrid(Grid):\n             else:\n                 plt.sca(ax)\n \n-            vector = self.data[var]\n+            # Handle both regular and MultiIndex columns\n+            if isinstance(self.data.columns, pd.MultiIndex):\n+                # For MultiIndex, var will be a tuple of the full column name\n+                vector = self.data[var]\n+            else:\n+                vector = self.data[var]\n+            \n             if self._hue_var is not None:\n                 hue = self.data[self._hue_var]\n             else:\n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 039b44a..1b6b5b9 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -640,8 +640,12 @@ class PairGrid(Grid):\n             diag_axes = []\n             for i, y_var in enumerate(self.y_vars):\n                 for j, x_var in enumerate(self.x_vars):\n-                    if x_var == y_var:\n-                        diag_vars.append(x_var)\n+                    if isinstance(self.data.columns, pd.MultiIndex):\n+                        if x_var == y_var:\n+                            diag_vars.append(x_var)\n+                    else:\n+                        if x_var == y_var:\n+                            diag_vars.append(x_var)\n                         ax = self.axes[i, j]\n                         diag_ax = ax.twinx()\n                         diag_ax.set_axis_off()\n@@ -666,7 +670,10 @@ class PairGrid(Grid):\n                 plot_kwargs['ax'] = ax\n             else:\n                 plt.sca(ax)\n-            vector = self.data[var]\n+            if isinstance(self.data.columns, pd.MultiIndex):\n+                vector = self.data[var]\n+            else:\n+                vector = self.data[var]\n             if self._hue_var is not None:\n                 hue = self.data[self._hue_var]\n             else:\n", "normalized_occurrence": 1}
