{"model_name_or_path": "agentless", "instance_id": "django__django-15930", "model_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 47df1a9..a1a1c5b 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -1253,11 +1253,11 @@ class When(Expression):\n                 condition, lookups = Q(**lookups), None\n             elif getattr(condition, \"conditional\", False):\n                 condition, lookups = Q(condition, **lookups), None\n-        if condition is None or not getattr(condition, \"conditional\", False) or lookups:\n-            raise TypeError(\n-                \"When() supports a Q object, a boolean expression, or lookups \"\n-                \"as a condition.\"\n-            )\n+        if condition is None:\n+            raise TypeError(\"When() requires a condition.\")\n+        if not getattr(condition, \"conditional\", False) or lookups:\n+            # Treat empty Q() objects (like ~Q(pk__in=[])) as always False\n+            condition = Q(pk__in=[-1])\n         if isinstance(condition, Q) and not condition:\n             raise ValueError(\"An empty Q() can't be used as a When() condition.\")\n         super().__init__(output_field=None)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 1b947ba..3385ee3 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -631,8 +631,10 @@ class When(Expression):\n                 condition, lookups = (Q(**lookups), None)\n             elif getattr(condition, 'conditional', False):\n                 condition, lookups = (Q(condition, **lookups), None)\n-        if condition is None or not getattr(condition, 'conditional', False) or lookups:\n-            raise TypeError('When() supports a Q object, a boolean expression, or lookups as a condition.')\n+        if condition is None:\n+            raise TypeError('When() requires a condition.')\n+        if not getattr(condition, 'conditional', False) or lookups:\n+            condition = Q(pk__in=[-1])\n         if isinstance(condition, Q) and (not condition):\n             raise ValueError(\"An empty Q() can't be used as a When() condition.\")\n         super().__init__(output_field=None)\n", "normalized_occurrence": 1}
