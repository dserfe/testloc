{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-10673", "model_patch": "diff --git a/sphinx/environment/adapters/toctree.py b/sphinx/environment/adapters/toctree.py\nindex 52ac0d3..55aa690 100644\n--- a/sphinx/environment/adapters/toctree.py\n+++ b/sphinx/environment/adapters/toctree.py\n@@ -116,7 +116,23 @@ class TocTree:\n             for (title, ref) in refs:\n                 try:\n                     refdoc = None\n-                    if url_re.match(ref):\n+                    # Special handling for generated pages\n+                    if ref in ('genindex', 'modindex', 'search'):\n+                        if title is None:\n+                            if ref == 'genindex':\n+                                title = 'Index'\n+                            elif ref == 'modindex':\n+                                title = 'Module Index'\n+                            else:  # search\n+                                title = 'Search'\n+                        reference = nodes.reference('', '', internal=True,\n+                                                    refuri=ref,\n+                                                    anchorname='',\n+                                                    *[nodes.Text(title)])\n+                        para = addnodes.compact_paragraph('', '', reference)\n+                        item = nodes.list_item('', para)\n+                        toc = nodes.bullet_list('', item)\n+                    elif url_re.match(ref):\n                         if title is None:\n                             title = ref\n                         reference = nodes.reference('', '', internal=False,\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/environment/adapters/toctree.py b/sphinx/environment/adapters/toctree.py\nindex 07fcee3..88a1b4e 100644\n--- a/sphinx/environment/adapters/toctree.py\n+++ b/sphinx/environment/adapters/toctree.py\n@@ -53,7 +53,19 @@ class TocTree:\n             for title, ref in refs:\n                 try:\n                     refdoc = None\n-                    if url_re.match(ref):\n+                    if ref in ('genindex', 'modindex', 'search'):\n+                        if title is None:\n+                            if ref == 'genindex':\n+                                title = 'Index'\n+                            elif ref == 'modindex':\n+                                title = 'Module Index'\n+                            else:\n+                                title = 'Search'\n+                        reference = nodes.reference('', '', *[nodes.Text(title)], internal=True, refuri=ref, anchorname='')\n+                        para = addnodes.compact_paragraph('', '', reference)\n+                        item = nodes.list_item('', para)\n+                        toc = nodes.bullet_list('', item)\n+                    elif url_re.match(ref):\n                         if title is None:\n                             title = ref\n                         reference = nodes.reference('', '', *[nodes.Text(title)], internal=False, refuri=ref, anchorname='')\n", "normalized_occurrence": 1}
