{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13615", "model_patch": "diff --git a/sympy/sets/sets.py b/sympy/sets/sets.py\nindex e78d679..87d0fb5 100644\n--- a/sympy/sets/sets.py\n+++ b/sympy/sets/sets.py\n@@ -1965,7 +1965,10 @@ class FiniteSet(Set, EvalfMixin):\n                 c = sympify(self.contains(i))\n                 if c is not S.true:\n                     not_true.append(i)\n-            return Complement(FiniteSet(*not_true), unk)\n+            if unk:\n+                return Complement(FiniteSet(*not_true), unk)\n+            else:\n+                return FiniteSet(*not_true)\n \n         return Set._complement(self, other)\n \n", "occurrence": 2, "normalized_patch": "diff --git a/sympy/sets/sets.py b/sympy/sets/sets.py\nindex be9090d..eff35ca 100644\n--- a/sympy/sets/sets.py\n+++ b/sympy/sets/sets.py\n@@ -869,7 +869,10 @@ class FiniteSet(Set, EvalfMixin):\n                 c = sympify(self.contains(i))\n                 if c is not S.true:\n                     not_true.append(i)\n-            return Complement(FiniteSet(*not_true), unk)\n+            if unk:\n+                return Complement(FiniteSet(*not_true), unk)\n+            else:\n+                return FiniteSet(*not_true)\n         return Set._complement(self, other)\n     def _union(self, other):\n         if other.is_FiniteSet:\n", "normalized_occurrence": 2}
