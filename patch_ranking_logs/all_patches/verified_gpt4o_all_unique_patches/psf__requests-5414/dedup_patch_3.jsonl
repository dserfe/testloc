{"model_name_or_path": "agentless", "instance_id": "psf__requests-5414", "model_patch": "diff --git a/requests/models.py b/requests/models.py\nindex b6afac6..57f7994 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -354,7 +354,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         try:\n             host = idna.encode(host, uts46=True).decode('utf-8')\n         except idna.IDNAError:\n-            raise UnicodeError\n+            raise UnicodeError(\"URL has an invalid label.\")\n         return host\n \n     def prepare_url(self, url, params):\n@@ -401,8 +401,8 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         if not unicode_is_ascii(host):\n             try:\n                 host = self._get_idna_encoded_host(host)\n-            except UnicodeError:\n-                raise InvalidURL('URL has an invalid label.')\n+            except UnicodeError as e:\n+                raise InvalidURL(str(e))\n         elif host.startswith(u'*'):\n             raise InvalidURL('URL has an invalid label.')\n \n", "occurrence": 1, "normalized_patch": "diff --git a/requests/models.py b/requests/models.py\nindex 0a92d68..7383cb3 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -173,7 +173,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         try:\n             host = idna.encode(host, uts46=True).decode('utf-8')\n         except idna.IDNAError:\n-            raise UnicodeError\n+            raise UnicodeError('URL has an invalid label.')\n         return host\n     def prepare_url(self, url, params):\n         if isinstance(url, bytes):\n@@ -197,8 +197,8 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         if not unicode_is_ascii(host):\n             try:\n                 host = self._get_idna_encoded_host(host)\n-            except UnicodeError:\n-                raise InvalidURL('URL has an invalid label.')\n+            except UnicodeError as e:\n+                raise InvalidURL(str(e))\n         elif host.startswith(u'*'):\n             raise InvalidURL('URL has an invalid label.')\n         netloc = auth or ''\n", "normalized_occurrence": 1}
