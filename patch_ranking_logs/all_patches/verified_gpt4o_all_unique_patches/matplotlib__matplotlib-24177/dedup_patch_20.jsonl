{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-24177", "model_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 36d6e8e..e913b79 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -6834,11 +6834,8 @@ such objects\n             y[1:2*len(bins)-1:2] = y[2:2*len(bins):2] = bottom\n             y[2*len(bins)-1:] = y[1:2*len(bins)-1][::-1]\n \n-            if log:\n-                if orientation == 'horizontal':\n-                    self.set_xscale('log', nonpositive='clip')\n-                else:  # orientation == 'vertical'\n-                    self.set_yscale('log', nonpositive='clip')\n+            if density:\n+                m = m / np.sum(m * np.diff(bins))\n \n             if align == 'left':\n                 x -= 0.5*(bins[1]-bins[0])\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 63bfb92..2813f5b 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -2013,11 +2013,8 @@ class Axes(_AxesBase):\n                 bottom = 0\n             y[1:2 * len(bins) - 1:2] = y[2:2 * len(bins):2] = bottom\n             y[2 * len(bins) - 1:] = y[1:2 * len(bins) - 1][::-1]\n-            if log:\n-                if orientation == 'horizontal':\n-                    self.set_xscale('log', nonpositive='clip')\n-                else:\n-                    self.set_yscale('log', nonpositive='clip')\n+            if density:\n+                m = m / np.sum(m * np.diff(bins))\n             if align == 'left':\n                 x -= 0.5 * (bins[1] - bins[0])\n             elif align == 'right':\n", "normalized_occurrence": 1}
