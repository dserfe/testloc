{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13852", "model_patch": "diff --git a/sympy/functions/special/zeta_functions.py b/sympy/functions/special/zeta_functions.py\nindex b3765de..bdbc809 100644\n--- a/sympy/functions/special/zeta_functions.py\n+++ b/sympy/functions/special/zeta_functions.py\n@@ -291,8 +291,11 @@ class polylog(Function):\n         from sympy import log, expand_mul, Dummy, exp_polar, I\n         s, z = self.args\n         if s == 1:\n-            return -log(1 + exp_polar(-I*pi)*z)\n-        if s.is_Integer and s <= 0:\n+            return -log(1 - z)\n+        if s == 2 and z == Rational(1, 2):\n+            from sympy import pi, log\n+            return -log(2)**2/2 + pi**2/12\n+        elif s.is_Integer and s <= 0:\n             u = Dummy('u')\n             start = u/(1 - u)\n             for _ in range(-s):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/special/zeta_functions.py b/sympy/functions/special/zeta_functions.py\nindex ee97bea..1c3877c 100644\n--- a/sympy/functions/special/zeta_functions.py\n+++ b/sympy/functions/special/zeta_functions.py\n@@ -88,8 +88,11 @@ class polylog(Function):\n         from sympy import log, expand_mul, Dummy, exp_polar, I\n         s, z = self.args\n         if s == 1:\n-            return -log(1 + exp_polar(-I * pi) * z)\n-        if s.is_Integer and s <= 0:\n+            return -log(1 - z)\n+        if s == 2 and z == Rational(1, 2):\n+            from sympy import pi, log\n+            return -log(2) ** 2 / 2 + pi ** 2 / 12\n+        elif s.is_Integer and s <= 0:\n             u = Dummy('u')\n             start = u / (1 - u)\n             for _ in range(-s):\n", "normalized_occurrence": 1}
