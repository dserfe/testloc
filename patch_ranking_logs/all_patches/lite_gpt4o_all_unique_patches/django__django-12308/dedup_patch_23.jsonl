{"model_name_or_path": "agentless", "instance_id": "django__django-12308", "model_patch": "diff --git a/django/contrib/admin/utils.py b/django/contrib/admin/utils.py\nindex 07cdaa5..e84a3c2 100644\n--- a/django/contrib/admin/utils.py\n+++ b/django/contrib/admin/utils.py\n@@ -386,8 +386,11 @@ def display_for_field(value, field, empty_value_display):\n     # general null test.\n     elif isinstance(field, models.BooleanField):\n         return _boolean_icon(value)\n-    elif value is None:\n-        return empty_value_display\n+    elif isinstance(field, models.JSONField):\n+        try:\n+            return field.get_prep_value(value)\n+        except TypeError:\n+            return json.dumps(value)\n     elif isinstance(field, models.DateTimeField):\n         return formats.localize(timezone.template_localtime(value))\n     elif isinstance(field, (models.DateField, models.TimeField)):\n@@ -407,8 +410,11 @@ def display_for_value(value, empty_value_display, boolean=False):\n \n     if boolean:\n         return _boolean_icon(value)\n-    elif value is None:\n-        return empty_value_display\n+    elif isinstance(field, models.JSONField):\n+        try:\n+            return field.get_prep_value(value)\n+        except TypeError:\n+            return json.dumps(value)\n     elif isinstance(value, bool):\n         return str(value)\n     elif isinstance(value, datetime.datetime):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/utils.py b/django/contrib/admin/utils.py\nindex 3190d3c..dba6a4e 100644\n--- a/django/contrib/admin/utils.py\n+++ b/django/contrib/admin/utils.py\n@@ -239,8 +239,11 @@ def display_for_field(value, field, empty_value_display):\n         return dict(field.flatchoices).get(value, empty_value_display)\n     elif isinstance(field, models.BooleanField):\n         return _boolean_icon(value)\n-    elif value is None:\n-        return empty_value_display\n+    elif isinstance(field, models.JSONField):\n+        try:\n+            return field.get_prep_value(value)\n+        except TypeError:\n+            return json.dumps(value)\n     elif isinstance(field, models.DateTimeField):\n         return formats.localize(timezone.template_localtime(value))\n     elif isinstance(field, (models.DateField, models.TimeField)):\n@@ -257,8 +260,11 @@ def display_for_value(value, empty_value_display, boolean=False):\n     from django.contrib.admin.templatetags.admin_list import _boolean_icon\n     if boolean:\n         return _boolean_icon(value)\n-    elif value is None:\n-        return empty_value_display\n+    elif isinstance(field, models.JSONField):\n+        try:\n+            return field.get_prep_value(value)\n+        except TypeError:\n+            return json.dumps(value)\n     elif isinstance(value, bool):\n         return str(value)\n     elif isinstance(value, datetime.datetime):\n", "normalized_occurrence": 1}
