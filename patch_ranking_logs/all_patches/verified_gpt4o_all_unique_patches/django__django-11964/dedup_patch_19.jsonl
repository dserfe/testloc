{"model_name_or_path": "agentless", "instance_id": "django__django-11964", "model_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex 6957452..8f91514 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -965,6 +965,8 @@ class BooleanField(Field):\n         return super().formfield(**{**defaults, **kwargs})\n \n \n+import enum\n+\n class CharField(Field):\n     description = _(\"String (up to %(max_length)s)\")\n \n@@ -1008,7 +1010,9 @@ class CharField(Field):\n         return \"CharField\"\n \n     def to_python(self, value):\n-        if isinstance(value, str) or value is None:\n+        if isinstance(value, enum.Enum):\n+            return value.value\n+        elif isinstance(value, str) or value is None:\n             return value\n         return str(value)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex e3867cb..bc9cc48 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -464,6 +464,7 @@ class BooleanField(Field):\n             form_class = forms.NullBooleanField if self.null else forms.BooleanField\n             defaults = {'form_class': form_class, 'required': False}\n         return super().formfield(**{**defaults, **kwargs})\n+import enum\n class CharField(Field):\n     description = _('String (up to %(max_length)s)')\n     def __init__(self, *args, **kwargs):\n@@ -485,7 +486,9 @@ class CharField(Field):\n     def get_internal_type(self):\n         return 'CharField'\n     def to_python(self, value):\n-        if isinstance(value, str) or value is None:\n+        if isinstance(value, enum.Enum):\n+            return value.value\n+        elif isinstance(value, str) or value is None:\n             return value\n         return str(value)\n     def get_prep_value(self, value):\n", "normalized_occurrence": 1}
