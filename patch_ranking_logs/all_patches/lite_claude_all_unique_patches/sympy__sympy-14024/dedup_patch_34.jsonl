{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-14024", "model_patch": "diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py\nindex a6ca9db..71b2429 100644\n--- a/sympy/simplify/simplify.py\n+++ b/sympy/simplify/simplify.py\n@@ -378,7 +378,10 @@ def signsimp(expr, evaluate=None):\n     if e.is_Add:\n         return e.func(*[signsimp(a, evaluate) for a in e.args])\n     if evaluate:\n-        e = e.xreplace({m: -(-m) for m in e.atoms(Mul) if -(-m) != m})\n+        # Don't combine signs for exponential expressions with negative bases\n+        if not any(isinstance(arg, Pow) and arg.base.could_extract_minus_sign() \n+                  for arg in e.args if isinstance(e, Mul)):\n+            e = e.xreplace({m: -(-m) for m in e.atoms(Mul) if -(-m) != m})\n     return e\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py\nindex 52e38cb..123e666 100644\n--- a/sympy/simplify/simplify.py\n+++ b/sympy/simplify/simplify.py\n@@ -142,7 +142,8 @@ def signsimp(expr, evaluate=None):\n     if e.is_Add:\n         return e.func(*[signsimp(a, evaluate) for a in e.args])\n     if evaluate:\n-        e = e.xreplace({m: --m for m in e.atoms(Mul) if --m != m})\n+        if not any((isinstance(arg, Pow) and arg.base.could_extract_minus_sign() for arg in e.args if isinstance(e, Mul))):\n+            e = e.xreplace({m: --m for m in e.atoms(Mul) if --m != m})\n     return e\n def simplify(expr, ratio=1.7, measure=count_ops, rational=False):\n     expr = sympify(expr)\n", "normalized_occurrence": 1}
