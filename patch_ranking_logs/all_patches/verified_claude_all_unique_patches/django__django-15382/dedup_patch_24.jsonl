{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15382", "model_patch": "diff --git a/django/db/models/sql/where.py b/django/db/models/sql/where.py\nindex 7a540c9..c4560d8 100644\n--- a/django/db/models/sql/where.py\n+++ b/django/db/models/sql/where.py\n@@ -93,9 +93,14 @@ class WhereNode(tree.Node):\n             # Now, check if this node is full/empty using the\n             # counts.\n             if empty_needed == 0:\n-                if self.negated:\n-                    return '', []\n+                if self.connector == OR:\n+                    if self.negated:\n+                        return '', []\n+                    else:\n+                        raise EmptyResultSet\n                 else:\n+                    # For AND connector, if one child is an empty result set,\n+                    # the result is an empty result set regardless of negation\n                     raise EmptyResultSet\n             if full_needed == 0:\n                 if self.negated:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/where.py b/django/db/models/sql/where.py\nindex 7f5e30d..c31d3bb 100644\n--- a/django/db/models/sql/where.py\n+++ b/django/db/models/sql/where.py\n@@ -49,8 +49,11 @@ class WhereNode(tree.Node):\n                 else:\n                     full_needed -= 1\n             if empty_needed == 0:\n-                if self.negated:\n-                    return ('', [])\n+                if self.connector == OR:\n+                    if self.negated:\n+                        return ('', [])\n+                    else:\n+                        raise EmptyResultSet\n                 else:\n                     raise EmptyResultSet\n             if full_needed == 0:\n", "normalized_occurrence": 1}
