{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-25433", "model_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex f12a9a3..23dfcf3 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -983,7 +983,16 @@ class RangeSlider(SliderBase):\n         int\n             Connection id (which can be used to disconnect *func*).\n         \"\"\"\n-        return self._observers.connect('changed', lambda val: func(val))\n+        # Wrap the callback to defer figure operations \n+        def wrapped_func(val):\n+            self.figure.canvas.draw_idle()  # Cancel any pending draw\n+            ret = func(val)  # Execute the original callback\n+            # If the callback modified the figure, schedule a redraw\n+            if self.figure.stale:\n+                self.figure.canvas.draw_idle()\n+            return ret\n+        \n+        return self._observers.connect('changed', lambda val: wrapped_func(val))\n \n \n def _expand_text_props(props):\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py\nindex 2882ff9..318d1c8 100644\n--- a/lib/matplotlib/widgets.py\n+++ b/lib/matplotlib/widgets.py\n@@ -795,7 +795,14 @@ class RangeSlider(SliderBase):\n         int\n             Connection id (which can be used to disconnect *func*).\n         \"\"\"\n-        return self._observers.connect('changed', lambda val: func(val))\n+\n+        def wrapped_func(val):\n+            self.figure.canvas.draw_idle()\n+            ret = func(val)\n+            if self.figure.stale:\n+                self.figure.canvas.draw_idle()\n+            return ret\n+        return self._observers.connect('changed', lambda val: wrapped_func(val))\n \n def _expand_text_props(props):\n     props = cbook.normalize_kwargs(props, mtext.Text)\n", "normalized_occurrence": 1}
