{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15741", "model_patch": "diff --git a/django/utils/formats.py b/django/utils/formats.py\nindex 82173e8..6eddca2 100644\n--- a/django/utils/formats.py\n+++ b/django/utils/formats.py\n@@ -97,15 +97,9 @@ def get_format_modules(lang=None):\n     return _format_modules_cache[lang]\n \n \n-def get_format(format_type, lang=None, use_l10n=None):\n-    \"\"\"\n-    For a specific format type, return the format for the current\n-    language (locale). Default to the format in the settings.\n-    format_type is the name of the format, e.g. 'DATE_FORMAT'.\n \n-    If use_l10n is provided and is not None, it forces the value to\n-    be localized (or not), overriding the value of settings.USE_L10N.\n-    \"\"\"\n+    from django.utils.encoding import force_str\n+    format_type = force_str(format_type)  # Force lazy strings to string\n     if use_l10n is None:\n         try:\n             use_l10n = settings._USE_L10N_INTERNAL\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/formats.py b/django/utils/formats.py\nindex fe1b781..87d3566 100644\n--- a/django/utils/formats.py\n+++ b/django/utils/formats.py\n@@ -44,7 +44,8 @@ def get_format_modules(lang=None):\n     if lang not in _format_modules_cache:\n         _format_modules_cache[lang] = list(iter_format_modules(lang, settings.FORMAT_MODULE_PATH))\n     return _format_modules_cache[lang]\n-def get_format(format_type, lang=None, use_l10n=None):\n+    from django.utils.encoding import force_str\n+    format_type = force_str(format_type)\n     if use_l10n is None:\n         try:\n             use_l10n = settings._USE_L10N_INTERNAL\n", "normalized_occurrence": 1}
