{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-22719", "model_patch": "diff --git a/lib/matplotlib/category.py b/lib/matplotlib/category.py\nindex a559ed2..85c6de1 100644\n--- a/lib/matplotlib/category.py\n+++ b/lib/matplotlib/category.py\n@@ -58,7 +58,7 @@ class StrCategoryConverter(units.ConversionInterface):\n             is_numlike = all(units.ConversionInterface.is_numlike(v)\n                              and not isinstance(v, (str, bytes))\n                              for v in values)\n-        if is_numlike:\n+        if is_numlike and values.size > 0:\n             _api.warn_deprecated(\n                 \"3.5\", message=\"Support for passing numbers through unit \"\n                 \"converters is deprecated since %(since)s and support will be \"\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/category.py b/lib/matplotlib/category.py\nindex 5718f98..f7e48fa 100644\n--- a/lib/matplotlib/category.py\n+++ b/lib/matplotlib/category.py\n@@ -14,7 +14,7 @@ class StrCategoryConverter(units.ConversionInterface):\n         values = np.atleast_1d(np.array(value, dtype=object))\n         with _api.suppress_matplotlib_deprecation_warning():\n             is_numlike = all((units.ConversionInterface.is_numlike(v) and (not isinstance(v, (str, bytes))) for v in values))\n-        if is_numlike:\n+        if is_numlike and values.size > 0:\n             _api.warn_deprecated('3.5', message='Support for passing numbers through unit converters is deprecated since %(since)s and support will be removed %(removal)s; use Axis.convert_units instead.')\n             return np.asarray(values, dtype=float)\n         unit.update(values)\n", "normalized_occurrence": 1}
