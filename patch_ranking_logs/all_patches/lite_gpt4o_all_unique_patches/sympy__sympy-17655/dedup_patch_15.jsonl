{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-17655", "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex a708f18..6130226 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -278,6 +278,34 @@ class Point(GeometryEntity):\n         coords = [simplify(x*factor) for x in self.args]\n         return Point(coords, evaluate=False)\n \n+    def __rmul__(self, factor):\n+        \"\"\"Multiply point's coordinates by a factor (reverse multiplication).\n+\n+        This method is called when the left operand does not support the multiplication\n+        operation, and the right operand is a Point.\n+\n+        Parameters\n+        ==========\n+\n+        factor : number\n+            The factor by which to multiply the point's coordinates.\n+\n+        Returns\n+        =======\n+\n+        Point\n+            A new Point with coordinates multiplied by the factor.\n+\n+        Examples\n+        ========\n+\n+        >>> from sympy.geometry import Point\n+        >>> 2 * Point(1, 2)\n+        Point2D(2, 4)\n+\n+        \"\"\"\n+        return self.__mul__(factor)\n+\n     def __neg__(self):\n         \"\"\"Negate the point.\"\"\"\n         coords = [-x for x in self.args]\n", "occurrence": 1, "normalized_patch": "--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n+    def __rmul__(self, factor):\n+        return self.__mul__(factor)", "normalized_occurrence": 4}
