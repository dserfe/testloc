{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13146", "model_patch": "diff --git a/sympy/core/evalf.py b/sympy/core/evalf.py\nindex e24efd1..1b9fd59 100644\n--- a/sympy/core/evalf.py\n+++ b/sympy/core/evalf.py\n@@ -696,6 +696,14 @@ def evalf_pow(v, prec, options):\n     # We first evaluate the exponent to find its magnitude\n     # This determines the working precision that must be used\n     prec += 10\n+    \n+    # Convert float exponents to rationals when possible\n+    if exp.is_Float:\n+        from sympy.core.numbers import Rational\n+        rat_exp = Rational(str(exp))\n+        if rat_exp.is_Rational:\n+            exp = rat_exp\n+    \n     yre, yim, _, _ = evalf(exp, prec, options)\n     # Special cases: x**0\n     if not (yre or yim):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/evalf.py b/sympy/core/evalf.py\nindex 54c5b3f..e8cdb16 100644\n--- a/sympy/core/evalf.py\n+++ b/sympy/core/evalf.py\n@@ -391,6 +391,11 @@ def evalf_pow(v, prec, options):\n             return (None, mpf_sqrt(mpf_neg(xre), prec), None, prec)\n         return (mpf_sqrt(xre, prec), None, prec, None)\n     prec += 10\n+    if exp.is_Float:\n+        from sympy.core.numbers import Rational\n+        rat_exp = Rational(str(exp))\n+        if rat_exp.is_Rational:\n+            exp = rat_exp\n     yre, yim, _, _ = evalf(exp, prec, options)\n     if not (yre or yim):\n         return (fone, None, prec, None)\n", "normalized_occurrence": 1}
