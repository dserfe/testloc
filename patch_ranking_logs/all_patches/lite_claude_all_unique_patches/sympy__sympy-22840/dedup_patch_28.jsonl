{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-22840", "model_patch": "diff --git a/sympy/simplify/cse_main.py b/sympy/simplify/cse_main.py\nindex fa99708..9effc89 100644\n--- a/sympy/simplify/cse_main.py\n+++ b/sympy/simplify/cse_main.py\n@@ -774,6 +774,7 @@ def cse(exprs, symbols=None, optimizations=None, postprocess=None,\n     \"\"\"\n     from sympy.matrices import (MatrixBase, Matrix, ImmutableMatrix,\n                                 SparseMatrix, ImmutableSparseMatrix)\n+    from sympy.matrices.expressions import MatrixSymbol\n \n     if not list:\n         return _cse_homogeneous(exprs,\n@@ -782,6 +783,12 @@ def cse(exprs, symbols=None, optimizations=None, postprocess=None,\n \n     if isinstance(exprs, (int, float)):\n         exprs = sympify(exprs)\n+        \n+    # Add MatrixSymbol to ignore list to prevent CSE from creating redundant variables\n+    if ignore is None:\n+        ignore = tuple()\n+    ignore = tuple(set(ignore) | {s for expr in exprs if isinstance(expr, Basic) \n+                                for s in expr.free_symbols if isinstance(s, MatrixSymbol)})\n \n     # Handle the case if just one expression was passed.\n     if isinstance(exprs, (Basic, MatrixBase)):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/cse_main.py b/sympy/simplify/cse_main.py\nindex d5cc8d7..1551fc3 100644\n--- a/sympy/simplify/cse_main.py\n+++ b/sympy/simplify/cse_main.py\n@@ -304,10 +304,14 @@ def tree_cse(exprs, symbols, opt_subs=None, order='canonical', ignore=()):\n     return (replacements, reduced_exprs)\n def cse(exprs, symbols=None, optimizations=None, postprocess=None, order='canonical', ignore=(), list=True):\n     from sympy.matrices import MatrixBase, Matrix, ImmutableMatrix, SparseMatrix, ImmutableSparseMatrix\n+    from sympy.matrices.expressions import MatrixSymbol\n     if not list:\n         return _cse_homogeneous(exprs, symbols=symbols, optimizations=optimizations, postprocess=postprocess, order=order, ignore=ignore)\n     if isinstance(exprs, (int, float)):\n         exprs = sympify(exprs)\n+    if ignore is None:\n+        ignore = tuple()\n+    ignore = tuple(set(ignore) | {s for expr in exprs if isinstance(expr, Basic) for s in expr.free_symbols if isinstance(s, MatrixSymbol)})\n     if isinstance(exprs, (Basic, MatrixBase)):\n         exprs = [exprs]\n     copy = exprs\n", "normalized_occurrence": 1}
