{"model_name_or_path": "agentless", "instance_id": "django__django-13128", "model_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 215532d..3e6f638 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -456,6 +456,7 @@ class CombinedExpression(SQLiteNumericMixin, Expression):\n             'DurationField' in {lhs_type, rhs_type} and\n             lhs_type != rhs_type\n         ):\n+            self.output_field = fields.DurationField()\n             return DurationExpression(self.lhs, self.connector, self.rhs).as_sql(compiler, connection)\n         datetime_fields = {'DateField', 'DateTimeField', 'TimeField'}\n         if self.connector == self.SUB and lhs_type in datetime_fields and lhs_type == rhs_type:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex ae5c73e..57267cd 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -248,6 +248,7 @@ class CombinedExpression(SQLiteNumericMixin, Expression):\n         except FieldError:\n             rhs_type = None\n         if not connection.features.has_native_duration_field and 'DurationField' in {lhs_type, rhs_type} and (lhs_type != rhs_type):\n+            self.output_field = fields.DurationField()\n             return DurationExpression(self.lhs, self.connector, self.rhs).as_sql(compiler, connection)\n         datetime_fields = {'DateField', 'DateTimeField', 'TimeField'}\n         if self.connector == self.SUB and lhs_type in datetime_fields and (lhs_type == rhs_type):\n", "normalized_occurrence": 1}
