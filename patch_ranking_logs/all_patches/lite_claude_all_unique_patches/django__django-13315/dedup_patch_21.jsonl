{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13315", "model_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex e59da5c..7e2f099 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -1155,6 +1155,10 @@ class ModelChoiceIterator:\n         if self.field.empty_label is not None:\n             yield (\"\", self.field.empty_label)\n         queryset = self.queryset\n+        # Apply limit_choices_to if it exists\n+        limit_choices_to = self.field.get_limit_choices_to()\n+        if limit_choices_to is not None:\n+            queryset = queryset.filter(limit_choices_to).distinct()\n         # Can't use iterator() when queryset uses prefetch_related()\n         if not queryset._prefetch_related_lookups:\n             queryset = queryset.iterator()\n", "normalized_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex bdd2237..ac5ec6a 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -601,6 +601,9 @@ class ModelChoiceIterator:\n         if self.field.empty_label is not None:\n             yield ('', self.field.empty_label)\n         queryset = self.queryset\n+        limit_choices_to = self.field.get_limit_choices_to()\n+        if limit_choices_to is not None:\n+            queryset = queryset.filter(limit_choices_to).distinct()\n         if not queryset._prefetch_related_lookups:\n             queryset = queryset.iterator()\n         for obj in queryset:\n", "normalized_occurrence": 1}
