{"model_name_or_path": "agentless_claude", "instance_id": "pydata__xarray-4248", "model_patch": "diff --git a/xarray/core/formatting.py b/xarray/core/formatting.py\nindex 91a7f67..701c4f6 100644\n--- a/xarray/core/formatting.py\n+++ b/xarray/core/formatting.py\n@@ -278,7 +278,13 @@ def summarize_variable(\n             raise TypeError(f\"`max_width` value of `{max_width}` is not a valid int\")\n         else:\n             max_width = max_width_options\n-    first_col = pretty_print(f\"  {marker} {name} \", col_width)\n+            \n+    # Add units information if available\n+    display_name = str(name)\n+    if hasattr(var, 'attrs') and 'units' in var.attrs:\n+        display_name = f\"{display_name}, in {var.attrs['units']}\"\n+        \n+    first_col = pretty_print(f\"  {marker} {display_name} \", col_width)\n     if var.dims:\n         dims_str = \"({}) \".format(\", \".join(map(str, var.dims)))\n     else:\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/formatting.py b/xarray/core/formatting.py\nindex 6d31a74..49f878e 100644\n--- a/xarray/core/formatting.py\n+++ b/xarray/core/formatting.py\n@@ -158,7 +158,10 @@ def summarize_variable(name: Hashable, var, col_width: int, marker: str=' ', max\n             raise TypeError(f'`max_width` value of `{max_width}` is not a valid int')\n         else:\n             max_width = max_width_options\n-    first_col = pretty_print(f'  {marker} {name} ', col_width)\n+    display_name = str(name)\n+    if hasattr(var, 'attrs') and 'units' in var.attrs:\n+        display_name = f\"{display_name}, in {var.attrs['units']}\"\n+    first_col = pretty_print(f'  {marker} {display_name} ', col_width)\n     if var.dims:\n         dims_str = '({}) '.format(', '.join(map(str, var.dims)))\n     else:\n", "normalized_occurrence": 2}
