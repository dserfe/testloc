{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-13779", "model_patch": "diff --git a/sklearn/ensemble/voting.py b/sklearn/ensemble/voting.py\nindex 858d868..7a10781 100644\n--- a/sklearn/ensemble/voting.py\n+++ b/sklearn/ensemble/voting.py\n@@ -95,6 +95,12 @@ class _BaseVoting(_BaseComposition, TransformerMixin):\n                                                  sample_weight=sample_weight)\n                 for clf in clfs if clf is not None)\n \n+        # Check if sample_weight is provided and if all estimators support it\n+        if sample_weight is not None:\n+            for name, clf in self.estimators:\n+                if clf is not None and not has_fit_parameter(clf, 'sample_weight'):\n+                    raise ValueError(f\"Underlying estimator '{name}' does not support sample weights.\")\n+\n         self.named_estimators_ = Bunch()\n         for k, e in zip(self.estimators, self.estimators_):\n             self.named_estimators_[k[0]] = e\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/ensemble/voting.py b/sklearn/ensemble/voting.py\nindex c17361f..3f6ca67 100644\n--- a/sklearn/ensemble/voting.py\n+++ b/sklearn/ensemble/voting.py\n@@ -43,6 +43,10 @@ class _BaseVoting(_BaseComposition, TransformerMixin):\n         if n_isnone == len(self.estimators):\n             raise ValueError('All estimators are None. At least one is required!')\n         self.estimators_ = Parallel(n_jobs=self.n_jobs)((delayed(_parallel_fit_estimator)(clone(clf), X, y, sample_weight=sample_weight) for clf in clfs if clf is not None))\n+        if sample_weight is not None:\n+            for name, clf in self.estimators:\n+                if clf is not None and (not has_fit_parameter(clf, 'sample_weight')):\n+                    raise ValueError(f\"Underlying estimator '{name}' does not support sample weights.\")\n         self.named_estimators_ = Bunch()\n         for k, e in zip(self.estimators, self.estimators_):\n             self.named_estimators_[k[0]] = e\n", "normalized_occurrence": 1}
