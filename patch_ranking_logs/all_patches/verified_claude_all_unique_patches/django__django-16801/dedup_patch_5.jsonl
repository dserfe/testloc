{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16801", "model_patch": "diff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py\nindex 3d75101..a2e6d65 100644\n--- a/django/db/models/fields/files.py\n+++ b/django/db/models/fields/files.py\n@@ -441,7 +441,8 @@ class ImageField(FileField):\n         # after their corresponding image field don't stay cleared by\n         # Model.__init__, see bug #11196.\n         # Only run post-initialization dimension update on non-abstract models\n-        if not cls._meta.abstract:\n+        # and when dimension fields are defined\n+        if not cls._meta.abstract and (self.width_field or self.height_field):\n             signals.post_init.connect(self.update_dimension_fields, sender=cls)\n \n     def update_dimension_fields(self, instance, force=False, *args, **kwargs):\n@@ -507,4 +508,4 @@ class ImageField(FileField):\n                 \"form_class\": forms.ImageField,\n                 **kwargs,\n             }\n-        )\n+        )\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py\nindex 6407fde..7f968b8 100644\n--- a/django/db/models/fields/files.py\n+++ b/django/db/models/fields/files.py\n@@ -215,7 +215,7 @@ class ImageField(FileField):\n         return (name, path, args, kwargs)\n     def contribute_to_class(self, cls, name, **kwargs):\n         super().contribute_to_class(cls, name, **kwargs)\n-        if not cls._meta.abstract:\n+        if not cls._meta.abstract and (self.width_field or self.height_field):\n             signals.post_init.connect(self.update_dimension_fields, sender=cls)\n     def update_dimension_fields(self, instance, force=False, *args, **kwargs):\n         has_dimension_fields = self.width_field or self.height_field\n", "normalized_occurrence": 28}
