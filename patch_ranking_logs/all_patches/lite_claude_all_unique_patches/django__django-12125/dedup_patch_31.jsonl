{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12125", "model_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex 824ab10..df68fc4 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -90,13 +90,20 @@ class DeconstructableSerializer(BaseSerializer):\n \n     @staticmethod\n     def _serialize_path(path):\n-        module, name = path.rsplit(\".\", 1)\n+        # Split on the second dot to separate module from class path\n+        parts = path.split(\".\")\n+        if len(parts) >= 2:\n+            module = \".\".join(parts[:2])  # e.g. \"test1.models\"\n+            name = \".\".join(parts[2:])    # e.g. \"Outer.Inner\"\n+        else:\n+            module, name = path.rsplit(\".\", 1)\n+            \n         if module == \"django.db.models\":\n             imports = {\"from django.db import models\"}\n             name = \"models.%s\" % name\n         else:\n             imports = {\"import %s\" % module}\n-            name = path\n+            name = \".\".join([module, name])\n         return name, imports\n \n     def serialize(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex d663baf..9791c4b 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -68,13 +68,18 @@ class DeconstructableSerializer(BaseSerializer):\n         return ('%s(%s)' % (name, ', '.join(strings)), imports)\n     @staticmethod\n     def _serialize_path(path):\n-        module, name = path.rsplit('.', 1)\n+        parts = path.split('.')\n+        if len(parts) >= 2:\n+            module = '.'.join(parts[:2])\n+            name = '.'.join(parts[2:])\n+        else:\n+            module, name = path.rsplit('.', 1)\n         if module == 'django.db.models':\n             imports = {'from django.db import models'}\n             name = 'models.%s' % name\n         else:\n             imports = {'import %s' % module}\n-            name = path\n+            name = '.'.join([module, name])\n         return (name, imports)\n     def serialize(self):\n         return self.serialize_deconstructed(*self.value.deconstruct())\n", "normalized_occurrence": 1}
