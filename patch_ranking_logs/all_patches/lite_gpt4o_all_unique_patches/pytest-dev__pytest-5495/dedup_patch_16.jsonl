{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-5495", "model_patch": "diff --git a/src/_pytest/assertion/util.py b/src/_pytest/assertion/util.py\nindex c9b4ff0..6eb1797 100644\n--- a/src/_pytest/assertion/util.py\n+++ b/src/_pytest/assertion/util.py\n@@ -186,9 +186,8 @@ def _diff_text(left, right, verbose=0):\n         r = r.replace(r\"\\r\", \"\\r\")\n         return r\n \n-    if isinstance(left, bytes):\n+    if isinstance(left, bytes) and isinstance(right, bytes):\n         left = escape_for_readable_diff(left)\n-    if isinstance(right, bytes):\n         right = escape_for_readable_diff(right)\n     if verbose < 1:\n         i = 0  # just in case left or right has zero length\n@@ -257,12 +256,13 @@ def _compare_eq_sequence(left, right, verbose=0):\n     explanation = []\n     len_left = len(left)\n     len_right = len(right)\n-    for i in range(min(len_left, len_right)):\n-        if left[i] != right[i]:\n-            explanation += [\n-                \"At index {} diff: {!r} != {!r}\".format(i, left[i], right[i])\n-            ]\n-            break\n+    if isinstance(left, bytes) and isinstance(right, bytes):\n+        for i in range(min(len_left, len_right)):\n+            if left[i] != right[i]:\n+                explanation += [\n+                    \"At index {} diff: {!r} (ASCII: {}) != {!r} (ASCII: {})\".format(i, chr(left[i]), left[i], chr(right[i]), right[i])\n+                ]\n+                break\n     len_diff = len_left - len_right\n \n     if len_diff:\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/assertion/util.py b/src/_pytest/assertion/util.py\nindex 855efef..bee5875 100644\n--- a/src/_pytest/assertion/util.py\n+++ b/src/_pytest/assertion/util.py\n@@ -108,9 +108,8 @@ def _diff_text(left, right, verbose=0):\n         r = r.replace('\\\\n', '\\n')\n         r = r.replace('\\\\r', '\\r')\n         return r\n-    if isinstance(left, bytes):\n+    if isinstance(left, bytes) and isinstance(right, bytes):\n         left = escape_for_readable_diff(left)\n-    if isinstance(right, bytes):\n         right = escape_for_readable_diff(right)\n     if verbose < 1:\n         i = 0\n@@ -159,10 +158,11 @@ def _compare_eq_sequence(left, right, verbose=0):\n     explanation = []\n     len_left = len(left)\n     len_right = len(right)\n-    for i in range(min(len_left, len_right)):\n-        if left[i] != right[i]:\n-            explanation += ['At index {} diff: {!r} != {!r}'.format(i, left[i], right[i])]\n-            break\n+    if isinstance(left, bytes) and isinstance(right, bytes):\n+        for i in range(min(len_left, len_right)):\n+            if left[i] != right[i]:\n+                explanation += ['At index {} diff: {!r} (ASCII: {}) != {!r} (ASCII: {})'.format(i, chr(left[i]), left[i], chr(right[i]), right[i])]\n+                break\n     len_diff = len_left - len_right\n     if len_diff:\n         if len_diff > 0:\n", "normalized_occurrence": 1}
