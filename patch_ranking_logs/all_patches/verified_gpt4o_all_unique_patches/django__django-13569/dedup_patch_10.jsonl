{"model_name_or_path": "agentless", "instance_id": "django__django-13569", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 324369a..6029896 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -126,9 +126,9 @@ class SQLCompiler:\n             for col in cols:\n                 expressions.append(col)\n         for expr, (sql, params, is_ref) in order_by:\n-            # Skip References to the select clause, as all expressions in the\n-            # select clause are already part of the group by.\n-            if not is_ref:\n+            # Skip members of the select clause that are already included\n+            # by reference or are instances of Random.\n+            if not is_ref and not isinstance(expr, Random):\n                 expressions.extend(expr.get_group_by_cols())\n         having_group_by = self.having.get_group_by_cols() if self.having else ()\n         for expr in having_group_by:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex f76d039..e370ef3 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -56,7 +56,7 @@ class SQLCompiler:\n             for col in cols:\n                 expressions.append(col)\n         for expr, (sql, params, is_ref) in order_by:\n-            if not is_ref:\n+            if not is_ref and (not isinstance(expr, Random)):\n                 expressions.extend(expr.get_group_by_cols())\n         having_group_by = self.having.get_group_by_cols() if self.having else ()\n         for expr in having_group_by:\n", "normalized_occurrence": 10}
