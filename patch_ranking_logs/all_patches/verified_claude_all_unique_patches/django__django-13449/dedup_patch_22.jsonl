{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13449", "model_patch": "diff --git a/django/db/models/functions/window.py b/django/db/models/functions/window.py\nindex 01e5980..6cea05e 100644\n--- a/django/db/models/functions/window.py\n+++ b/django/db/models/functions/window.py\n@@ -48,6 +48,17 @@ class LagLeadFunction(Func):\n         sources = self.get_source_expressions()\n         return sources[0].output_field\n \n+    def as_sqlite(self, compiler, connection, **extra_context):\n+        # For DecimalField, cast the whole window function expression\n+        source = self.get_source_expressions()[0]\n+        if hasattr(source, 'output_field') and isinstance(source.output_field, models.DecimalField):\n+            from django.db.models import FloatField\n+            clone = self.copy()\n+            clone.set_source_expressions([source])\n+            clone.output_field = FloatField()\n+            return clone\n+        return self\n+\n \n class Lag(LagLeadFunction):\n     function = 'LAG'\n", "normalized_patch": "--- a/django/db/models/functions/window.py\n+++ b/django/db/models/functions/window.py\n+    def as_sqlite(self, compiler, connection, **extra_context):\n+        source = self.get_source_expressions()[0]\n+        if hasattr(source, 'output_field') and isinstance(source.output_field, models.DecimalField):\n+            from django.db.models import FloatField\n+            clone = self.copy()\n+            clone.set_source_expressions([source])\n+            clone.output_field = FloatField()\n+            return clone\n+        return self", "normalized_occurrence": 1}
