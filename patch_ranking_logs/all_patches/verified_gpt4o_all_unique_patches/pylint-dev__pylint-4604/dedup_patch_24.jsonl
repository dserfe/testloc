{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-4604", "model_patch": "diff --git a/pylint/checkers/imports.py b/pylint/checkers/imports.py\nindex 7e31505..f22a0e6 100644\n--- a/pylint/checkers/imports.py\n+++ b/pylint/checkers/imports.py\n@@ -562,7 +562,7 @@ class ImportsChecker(DeprecatedMixin, BaseChecker):\n         if isinstance(node.parent, astroid.Module):\n             # Allow imports nested\n             self._check_position(node)\n-        if isinstance(node.scope(), astroid.Module):\n+        if isinstance(node.scope(), astroid.Module) or is_node_in_type_comment(node):\n             self._record_import(node, imported_module)\n         if imported_module is None:\n             return\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/checkers/imports.py b/pylint/checkers/imports.py\nindex 1045c62..85ba7f2 100644\n--- a/pylint/checkers/imports.py\n+++ b/pylint/checkers/imports.py\n@@ -198,7 +198,7 @@ class ImportsChecker(DeprecatedMixin, BaseChecker):\n         self._check_toplevel(node)\n         if isinstance(node.parent, astroid.Module):\n             self._check_position(node)\n-        if isinstance(node.scope(), astroid.Module):\n+        if isinstance(node.scope(), astroid.Module) or is_node_in_type_comment(node):\n             self._record_import(node, imported_module)\n         if imported_module is None:\n             return\n", "normalized_occurrence": 1}
