{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-25079", "model_patch": "diff --git a/lib/matplotlib/cm.py b/lib/matplotlib/cm.py\nindex 06f543d..a4be03f 100644\n--- a/lib/matplotlib/cm.py\n+++ b/lib/matplotlib/cm.py\n@@ -557,9 +557,9 @@ class ScalarMappable:\n                 vmin, vmax = vmin\n             except (TypeError, ValueError):\n                 pass\n-        if vmin is not None:\n+        if vmin is not None or not hasattr(self.norm, 'vmin'):\n             self.norm.vmin = colors._sanitize_extrema(vmin)\n-        if vmax is not None:\n+        if vmax is not None or not hasattr(self.norm, 'vmax'):\n             self.norm.vmax = colors._sanitize_extrema(vmax)\n \n     def get_alpha(self):\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/cm.py b/lib/matplotlib/cm.py\nindex f5a7578..43352bc 100644\n--- a/lib/matplotlib/cm.py\n+++ b/lib/matplotlib/cm.py\n@@ -160,9 +160,9 @@ class ScalarMappable:\n                 vmin, vmax = vmin\n             except (TypeError, ValueError):\n                 pass\n-        if vmin is not None:\n+        if vmin is not None or not hasattr(self.norm, 'vmin'):\n             self.norm.vmin = colors._sanitize_extrema(vmin)\n-        if vmax is not None:\n+        if vmax is not None or not hasattr(self.norm, 'vmax'):\n             self.norm.vmax = colors._sanitize_extrema(vmax)\n     def get_alpha(self):\n         return 1.0\n", "normalized_occurrence": 1}
