{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-11510", "model_patch": "diff --git a/sphinx/environment/__init__.py b/sphinx/environment/__init__.py\nindex 96f4a03..e0f1d86 100644\n--- a/sphinx/environment/__init__.py\n+++ b/sphinx/environment/__init__.py\n@@ -681,6 +681,13 @@ class BuildEnvironment:\n         finally:\n             self.temp_data = backup\n \n+        # apply substitutions for included files\n+        for node in doctree.traverse(nodes.include):\n+            source = node['rawsource']\n+            docname = node['docname']\n+            self.events.emit('source-read', docname, source)\n+            node['rawsource'] = source[0]\n+\n         # allow custom references to be resolved\n         self.events.emit('doctree-resolved', doctree, docname)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/environment/__init__.py b/sphinx/environment/__init__.py\nindex 3c422c4..6b38943 100644\n--- a/sphinx/environment/__init__.py\n+++ b/sphinx/environment/__init__.py\n@@ -382,6 +382,11 @@ class BuildEnvironment:\n             transformer.apply_transforms()\n         finally:\n             self.temp_data = backup\n+        for node in doctree.traverse(nodes.include):\n+            source = node['rawsource']\n+            docname = node['docname']\n+            self.events.emit('source-read', docname, source)\n+            node['rawsource'] = source[0]\n         self.events.emit('doctree-resolved', doctree, docname)\n     def collect_relations(self) -> dict[str, list[str | None]]:\n         traversed: set[str] = set()\n", "normalized_occurrence": 1}
