{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8269", "model_patch": "diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py\nindex 8266583..a2971a7 100644\n--- a/sphinx/builders/linkcheck.py\n+++ b/sphinx/builders/linkcheck.py\n@@ -169,7 +169,10 @@ class CheckExternalLinksBuilder(Builder):\n                     found = check_anchor(response, unquote(anchor))\n \n                     if not found:\n-                        raise Exception(__(\"Anchor '%s' not found\") % anchor)\n+                        if response.status_code >= 400:\n+                            raise HTTPError(response=response)\n+                        else:\n+                            raise Exception(__(\"Anchor '%s' not found\") % anchor)\n                 else:\n                     try:\n                         # try a HEAD request first, which should be easier on\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py\nindex ace1ed3..4b2970f 100644\n--- a/sphinx/builders/linkcheck.py\n+++ b/sphinx/builders/linkcheck.py\n@@ -99,7 +99,10 @@ class CheckExternalLinksBuilder(Builder):\n                     response = requests.get(req_url, stream=True, config=self.app.config, auth=auth_info, **kwargs)\n                     found = check_anchor(response, unquote(anchor))\n                     if not found:\n-                        raise Exception(__(\"Anchor '%s' not found\") % anchor)\n+                        if response.status_code >= 400:\n+                            raise HTTPError(response=response)\n+                        else:\n+                            raise Exception(__(\"Anchor '%s' not found\") % anchor)\n                 else:\n                     try:\n                         response = requests.head(req_url, config=self.app.config, auth=auth_info, **kwargs)\n", "normalized_occurrence": 1}
