{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13915", "model_patch": "diff --git a/sympy/core/basic.py b/sympy/core/basic.py\nindex 0977e81..93283fe 100644\n--- a/sympy/core/basic.py\n+++ b/sympy/core/basic.py\n@@ -918,6 +918,8 @@ class Basic(with_metaclass(ManagedProperties)):\n             rv = self\n             for old, new in sequence:\n                 rv = rv._subs(old, new, **kwargs)\n+                if rv.has(S.ComplexInfinity, S.Infinity, S.NegativeInfinity, S.NaN):\n+                    return S.NaN\n                 if not isinstance(rv, Basic):\n                     break\n             return rv\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/basic.py b/sympy/core/basic.py\nindex 782db85..7bb5e27 100644\n--- a/sympy/core/basic.py\n+++ b/sympy/core/basic.py\n@@ -327,6 +327,8 @@ class Basic(with_metaclass(ManagedProperties)):\n             rv = self\n             for old, new in sequence:\n                 rv = rv._subs(old, new, **kwargs)\n+                if rv.has(S.ComplexInfinity, S.Infinity, S.NegativeInfinity, S.NaN):\n+                    return S.NaN\n                 if not isinstance(rv, Basic):\n                     break\n             return rv\n", "normalized_occurrence": 1}
