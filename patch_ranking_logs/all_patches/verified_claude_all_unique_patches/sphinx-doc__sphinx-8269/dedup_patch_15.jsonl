{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-8269", "model_patch": "diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py\nindex 8266583..8c52eea 100644\n--- a/sphinx/builders/linkcheck.py\n+++ b/sphinx/builders/linkcheck.py\n@@ -62,7 +62,11 @@ class AnchorCheckParser(HTMLParser):\n def check_anchor(response: requests.requests.Response, anchor: str) -> bool:\n     \"\"\"Reads HTML data from a response object `response` searching for `anchor`.\n     Returns True if anchor was found, False otherwise.\n+    If the response has a non-200 status code, returns True to skip anchor checking.\n     \"\"\"\n+    if not response.ok:\n+        return True  # Skip anchor checking for error responses\n+        \n     parser = AnchorCheckParser(anchor)\n     # Read file in chunks. If we find a matching anchor, we break\n     # the loop early in hopes not to have to download the whole thing.\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py\nindex ace1ed3..7847bfa 100644\n--- a/sphinx/builders/linkcheck.py\n+++ b/sphinx/builders/linkcheck.py\n@@ -31,6 +31,8 @@ class AnchorCheckParser(HTMLParser):\n                 self.found = True\n                 break\n def check_anchor(response: requests.requests.Response, anchor: str) -> bool:\n+    if not response.ok:\n+        return True\n     parser = AnchorCheckParser(anchor)\n     for chunk in response.iter_content(chunk_size=4096, decode_unicode=True):\n         if isinstance(chunk, bytes):\n", "normalized_occurrence": 2}
