{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16454", "model_patch": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex f221176..d9964a9 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -71,6 +71,22 @@ class CommandParser(ArgumentParser):\n         else:\n             raise CommandError(\"Error: %s\" % message)\n \n+    def add_subparsers(self, **kwargs):\n+        # Propagate the special command parser arguments to subparsers\n+        subparsers = super().add_subparsers(**kwargs)\n+        subparsers.required = kwargs.get(\"required\", False)\n+\n+        # Modify the add_parser method to propagate command parser arguments\n+        original_add_parser = subparsers.add_parser\n+        def add_parser(name, **kwargs):\n+            # Pass through the special arguments\n+            kwargs.setdefault(\"missing_args_message\", self.missing_args_message)\n+            kwargs.setdefault(\"called_from_command_line\", self.called_from_command_line)\n+            return original_add_parser(name, **kwargs)\n+        subparsers.add_parser = add_parser\n+\n+        return subparsers\n+\n \n def handle_default_options(options):\n     \"\"\"\n", "occurrence": 1, "normalized_patch": "--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n+    def add_subparsers(self, **kwargs):\n+        subparsers = super().add_subparsers(**kwargs)\n+        subparsers.required = kwargs.get('required', False)\n+        original_add_parser = subparsers.add_parser\n+        def add_parser(name, **kwargs):\n+            kwargs.setdefault('missing_args_message', self.missing_args_message)\n+            kwargs.setdefault('called_from_command_line', self.called_from_command_line)\n+            return original_add_parser(name, **kwargs)\n+        subparsers.add_parser = add_parser\n+        return subparsers", "normalized_occurrence": 1}
