{"model_name_or_path": "agentless_claude", "instance_id": "pylint-dev__pylint-4551", "model_patch": "diff --git a/pylint/pyreverse/diagrams.py b/pylint/pyreverse/diagrams.py\nindex 0111bb1..0de5c0e 100644\n--- a/pylint/pyreverse/diagrams.py\n+++ b/pylint/pyreverse/diagrams.py\n@@ -84,6 +84,15 @@ class ClassDiagram(Figure, FilterMixIn):\n             for n, m in node.items()\n             if isinstance(m, astroid.FunctionDef) and decorated_with_property(m)\n         ]\n+        \n+        # Get type hints from __init__ parameters\n+        init_method = node.locals.get('__init__', [None])[0]\n+        if init_method and isinstance(init_method, astroid.FunctionDef):\n+            for arg in init_method.args.args[1:]:  # Skip 'self'\n+                if arg.name in node.instance_attrs and hasattr(arg, 'annotation'):\n+                    if arg.annotation:\n+                        node.instance_attrs_type[arg.name] = [arg.annotation]\n+\n         for node_name, associated_nodes in (\n             list(node.instance_attrs_type.items())\n             + list(node.locals_type.items())\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/pyreverse/diagrams.py b/pylint/pyreverse/diagrams.py\nindex d9b60dc..24d9224 100644\n--- a/pylint/pyreverse/diagrams.py\n+++ b/pylint/pyreverse/diagrams.py\n@@ -57,6 +57,12 @@ class ClassDiagram(Figure, FilterMixIn):\n         \"\"\"return visible attributes, possibly with class name\"\"\"\n         attrs = []\n         properties = [(n, m) for n, m in node.items() if isinstance(m, astroid.FunctionDef) and decorated_with_property(m)]\n+        init_method = node.locals.get('__init__', [None])[0]\n+        if init_method and isinstance(init_method, astroid.FunctionDef):\n+            for arg in init_method.args.args[1:]:\n+                if arg.name in node.instance_attrs and hasattr(arg, 'annotation'):\n+                    if arg.annotation:\n+                        node.instance_attrs_type[arg.name] = [arg.annotation]\n         for node_name, associated_nodes in list(node.instance_attrs_type.items()) + list(node.locals_type.items()) + properties:\n             if not self.show_attr(node_name):\n                 continue\n", "normalized_occurrence": 1}
