{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-13124", "model_patch": "diff --git a/sklearn/model_selection/_split.py b/sklearn/model_selection/_split.py\nindex 1bd5697..d8bf9e5 100644\n--- a/sklearn/model_selection/_split.py\n+++ b/sklearn/model_selection/_split.py\n@@ -629,6 +629,12 @@ class StratifiedKFold(_BaseKFold):\n                 'Supported target types are: {}. Got {!r} instead.'.format(\n                     allowed_target_types, type_of_target_y))\n \n+        if self.shuffle:\n+            for unique_class in np.unique(y):\n+                indices = np.where(y == unique_class)[0]\n+                rng.shuffle(indices)\n+                X[indices], y[indices] = X[indices], y[indices]\n+                \n         y = column_or_1d(y)\n         n_samples = y.shape[0]\n         unique_y, y_inversed = np.unique(y, return_inverse=True)\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/model_selection/_split.py b/sklearn/model_selection/_split.py\nindex a142d27..a6c9798 100644\n--- a/sklearn/model_selection/_split.py\n+++ b/sklearn/model_selection/_split.py\n@@ -553,6 +553,11 @@ class StratifiedKFold(_BaseKFold):\n         allowed_target_types = ('binary', 'multiclass')\n         if type_of_target_y not in allowed_target_types:\n             raise ValueError('Supported target types are: {}. Got {!r} instead.'.format(allowed_target_types, type_of_target_y))\n+        if self.shuffle:\n+            for unique_class in np.unique(y):\n+                indices = np.where(y == unique_class)[0]\n+                rng.shuffle(indices)\n+                X[indices], y[indices] = (X[indices], y[indices])\n         y = column_or_1d(y)\n         n_samples = y.shape[0]\n         unique_y, y_inversed = np.unique(y, return_inverse=True)\n", "normalized_occurrence": 1}
