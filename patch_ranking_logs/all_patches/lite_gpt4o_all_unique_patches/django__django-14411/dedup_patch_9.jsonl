{"model_name_or_path": "agentless", "instance_id": "django__django-14411", "model_patch": "diff --git a/django/contrib/admin/utils.py b/django/contrib/admin/utils.py\nindex ab619c1..321c4db 100644\n--- a/django/contrib/admin/utils.py\n+++ b/django/contrib/admin/utils.py\n@@ -327,6 +327,9 @@ def label_for_field(name, model, model_admin=None, return_attr=False, form=None)\n         if name == \"__str__\":\n             label = str(model._meta.verbose_name)\n             attr = str\n+        elif name == \"password\" and model_admin and hasattr(model_admin, 'readonly_fields') and name in model_admin.readonly_fields:\n+            label = pretty_name(name)\n+            attr = None\n         else:\n             if callable(name):\n                 attr = name\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/utils.py b/django/contrib/admin/utils.py\nindex 2428fd0..b2a541f 100644\n--- a/django/contrib/admin/utils.py\n+++ b/django/contrib/admin/utils.py\n@@ -190,6 +190,9 @@ def label_for_field(name, model, model_admin=None, return_attr=False, form=None)\n         if name == '__str__':\n             label = str(model._meta.verbose_name)\n             attr = str\n+        elif name == 'password' and model_admin and hasattr(model_admin, 'readonly_fields') and (name in model_admin.readonly_fields):\n+            label = pretty_name(name)\n+            attr = None\n         else:\n             if callable(name):\n                 attr = name\n", "normalized_occurrence": 1}
