{"model_name_or_path": "agentless", "instance_id": "django__django-15741", "model_patch": "diff --git a/django/utils/formats.py b/django/utils/formats.py\nindex 82173e8..eb8750c 100644\n--- a/django/utils/formats.py\n+++ b/django/utils/formats.py\n@@ -97,6 +97,9 @@ def get_format_modules(lang=None):\n     return _format_modules_cache[lang]\n \n \n+from django.utils.encoding import force_str\n+...\n+\n def get_format(format_type, lang=None, use_l10n=None):\n     \"\"\"\n     For a specific format type, return the format for the current\n@@ -111,7 +114,8 @@ def get_format(format_type, lang=None, use_l10n=None):\n             use_l10n = settings._USE_L10N_INTERNAL\n         except AttributeError:\n             use_l10n = settings.USE_L10N\n-    if use_l10n and lang is None:\n+    if use_l10n:\n+        lang = force_str(lang) if lang is not None else get_language()\n         lang = get_language()\n     cache_key = (format_type, lang)\n     try:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/formats.py b/django/utils/formats.py\nindex fe1b781..3647fdb 100644\n--- a/django/utils/formats.py\n+++ b/django/utils/formats.py\n@@ -44,13 +44,16 @@ def get_format_modules(lang=None):\n     if lang not in _format_modules_cache:\n         _format_modules_cache[lang] = list(iter_format_modules(lang, settings.FORMAT_MODULE_PATH))\n     return _format_modules_cache[lang]\n+from django.utils.encoding import force_str\n+...\n def get_format(format_type, lang=None, use_l10n=None):\n     if use_l10n is None:\n         try:\n             use_l10n = settings._USE_L10N_INTERNAL\n         except AttributeError:\n             use_l10n = settings.USE_L10N\n-    if use_l10n and lang is None:\n+    if use_l10n:\n+        lang = force_str(lang) if lang is not None else get_language()\n         lang = get_language()\n     cache_key = (format_type, lang)\n     try:\n", "normalized_occurrence": 1}
