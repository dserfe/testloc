{"model_name_or_path": "agentless_claude", "instance_id": "django__django-11555", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 291f673..1aa21c1 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -269,6 +269,12 @@ class SQLCompiler:\n         elif self.query.get_meta().ordering:\n             ordering = self.query.get_meta().ordering\n             self._meta_ordering = ordering\n+            # Convert Meta.ordering expressions to OrderBy objects if needed\n+            ordering = [\n+                field.asc() if hasattr(field, 'resolve_expression') and not isinstance(field, OrderBy)\n+                else field\n+                for field in ordering\n+            ]\n         else:\n             ordering = []\n         if self.query.standard_ordering:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 541feee..b71e30e 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -135,6 +135,7 @@ class SQLCompiler:\n         elif self.query.get_meta().ordering:\n             ordering = self.query.get_meta().ordering\n             self._meta_ordering = ordering\n+            ordering = [field.asc() if hasattr(field, 'resolve_expression') and (not isinstance(field, OrderBy)) else field for field in ordering]\n         else:\n             ordering = []\n         if self.query.standard_ordering:\n", "normalized_occurrence": 1}
