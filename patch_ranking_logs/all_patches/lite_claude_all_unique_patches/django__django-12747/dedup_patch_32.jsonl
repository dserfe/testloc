{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12747", "model_patch": "diff --git a/django/db/models/deletion.py b/django/db/models/deletion.py\nindex 5788d19..cd60bea 100644\n--- a/django/db/models/deletion.py\n+++ b/django/db/models/deletion.py\n@@ -426,7 +426,8 @@ class Collector:\n                 query = sql.DeleteQuery(model)\n                 pk_list = [obj.pk for obj in instances]\n                 count = query.delete_batch(pk_list, self.using)\n-                deleted_counter[model._meta.label] += count\n+                # Always record the count for the model, even if it's 0\n+                deleted_counter[model._meta.label] = count\n \n                 if not model._meta.auto_created:\n                     for obj in instances:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/deletion.py b/django/db/models/deletion.py\nindex b347a60..8771270 100644\n--- a/django/db/models/deletion.py\n+++ b/django/db/models/deletion.py\n@@ -223,7 +223,7 @@ class Collector:\n                 query = sql.DeleteQuery(model)\n                 pk_list = [obj.pk for obj in instances]\n                 count = query.delete_batch(pk_list, self.using)\n-                deleted_counter[model._meta.label] += count\n+                deleted_counter[model._meta.label] = count\n                 if not model._meta.auto_created:\n                     for obj in instances:\n                         signals.post_delete.send(sender=model, instance=obj, using=self.using)\n", "normalized_occurrence": 4}
