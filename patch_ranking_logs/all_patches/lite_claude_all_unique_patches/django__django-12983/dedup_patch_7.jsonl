{"model_name_or_path": "agentless_claude", "instance_id": "django__django-12983", "model_patch": "diff --git a/django/utils/text.py b/django/utils/text.py\nindex 19b9320..71caab7 100644\n--- a/django/utils/text.py\n+++ b/django/utils/text.py\n@@ -393,17 +393,19 @@ def unescape_string_literal(s):\n @keep_lazy_text\n def slugify(value, allow_unicode=False):\n     \"\"\"\n-    Convert to ASCII if 'allow_unicode' is False. Convert spaces to hyphens.\n-    Remove characters that aren't alphanumerics, underscores, or hyphens.\n-    Convert to lowercase. Also strip leading and trailing whitespace.\n+    Convert to ASCII if 'allow_unicode' is False. Convert spaces or sequences of\n+    dashes/underscores to hyphens. Remove characters that aren't alphanumerics,\n+    underscores, or hyphens. Convert to lowercase. Also strip leading and trailing\n+    whitespace, dashes, and underscores.\n     \"\"\"\n     value = str(value)\n     if allow_unicode:\n         value = unicodedata.normalize('NFKC', value)\n     else:\n         value = unicodedata.normalize('NFKD', value).encode('ascii', 'ignore').decode('ascii')\n-    value = re.sub(r'[^\\w\\s-]', '', value.lower()).strip()\n-    return re.sub(r'[-\\s]+', '-', value)\n+    value = re.sub(r'[^\\w\\s-]', '', value.lower())\n+    value = re.sub(r'[-_\\s]+', '-', value)\n+    return value.strip('-_')\n \n \n def camel_case_to_spaces(value):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/text.py b/django/utils/text.py\nindex 258da11..a12e04f 100644\n--- a/django/utils/text.py\n+++ b/django/utils/text.py\n@@ -205,8 +205,9 @@ def slugify(value, allow_unicode=False):\n         value = unicodedata.normalize('NFKC', value)\n     else:\n         value = unicodedata.normalize('NFKD', value).encode('ascii', 'ignore').decode('ascii')\n-    value = re.sub('[^\\\\w\\\\s-]', '', value.lower()).strip()\n-    return re.sub('[-\\\\s]+', '-', value)\n+    value = re.sub('[^\\\\w\\\\s-]', '', value.lower())\n+    value = re.sub('[-_\\\\s]+', '-', value)\n+    return value.strip('-_')\n def camel_case_to_spaces(value):\n     return re_camel_case.sub(' \\\\1', value).strip().lower()\n def _format_lazy(format_string, *args, **kwargs):\n", "normalized_occurrence": 1}
