{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-19487", "model_patch": "diff --git a/sympy/functions/elementary/miscellaneous.py b/sympy/functions/elementary/miscellaneous.py\nindex 6852819..b2935c6 100644\n--- a/sympy/functions/elementary/miscellaneous.py\n+++ b/sympy/functions/elementary/miscellaneous.py\n@@ -643,7 +643,9 @@ class MinMaxBase(Expr, LatticeOp):\n             l.append(df * da)\n         return Add(*l)\n \n-    def _eval_rewrite_as_Abs(self, *args, **kwargs):\n+    def _eval_rewrite_as_Abs(self, arg):\n+        from sympy.functions.elementary.complexes import Abs\n+        return arg / Abs(arg) if arg != 0 else 0\n         from sympy.functions.elementary.complexes import Abs\n         s = (args[0] + self.func(*args[1:]))/2\n         d = abs(args[0] - self.func(*args[1:]))/2\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/functions/elementary/miscellaneous.py b/sympy/functions/elementary/miscellaneous.py\nindex b26bc6b..9bfc289 100644\n--- a/sympy/functions/elementary/miscellaneous.py\n+++ b/sympy/functions/elementary/miscellaneous.py\n@@ -230,7 +230,9 @@ class MinMaxBase(Expr, LatticeOp):\n                 df = Function.fdiff(self, i)\n             l.append(df * da)\n         return Add(*l)\n-    def _eval_rewrite_as_Abs(self, *args, **kwargs):\n+    def _eval_rewrite_as_Abs(self, arg):\n+        from sympy.functions.elementary.complexes import Abs\n+        return arg / Abs(arg) if arg != 0 else 0\n         from sympy.functions.elementary.complexes import Abs\n         s = (args[0] + self.func(*args[1:])) / 2\n         d = abs(args[0] - self.func(*args[1:])) / 2\n", "normalized_occurrence": 1}
