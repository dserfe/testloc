{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13773", "model_patch": "diff --git a/sympy/matrices/dense.py b/sympy/matrices/dense.py\nindex 8faef3a..60680fa 100644\n--- a/sympy/matrices/dense.py\n+++ b/sympy/matrices/dense.py\n@@ -276,6 +276,28 @@ class DenseMatrix(MatrixBase):\n         mat = [a*other for a in self._mat]\n         return self._new(self.rows, self.cols, mat, copy=False)\n \n+    def __matmul__(self, other):\n+        \"\"\"Matrix multiplication with @ operator, like numpy.\n+        Scalar operands are not allowed.\n+        \"\"\"\n+        other = sympify(other)\n+        # Check for scalar operands\n+        if not hasattr(other, 'is_Matrix'):\n+            # Disallow scalar operands with @ operator\n+            raise ValueError(\"Scalar operands are not allowed, use '*' instead\")\n+        return self._eval_matrix_mul(other)\n+\n+    def __rmatmul__(self, other):\n+        \"\"\"Matrix multiplication with @ operator, like numpy.\n+        Scalar operands are not allowed.\n+        \"\"\"\n+        other = sympify(other)\n+        # Check for scalar operands\n+        if not hasattr(other, 'is_Matrix'):\n+            # Disallow scalar operands with @ operator\n+            raise ValueError(\"Scalar operands are not allowed, use '*' instead\")\n+        return NotImplemented  # Let the other operand handle matrix multiplication\n+\n     def _eval_tolist(self):\n         mat = list(self._mat)\n         cols = self.cols\n", "occurrence": 1, "normalized_patch": "--- a/sympy/matrices/dense.py\n+++ b/sympy/matrices/dense.py\n+    def __matmul__(self, other):\n+        other = sympify(other)\n+        if not hasattr(other, 'is_Matrix'):\n+            raise ValueError(\"Scalar operands are not allowed, use '*' instead\")\n+        return self._eval_matrix_mul(other)\n+    def __rmatmul__(self, other):\n+        other = sympify(other)\n+        if not hasattr(other, 'is_Matrix'):\n+            raise ValueError(\"Scalar operands are not allowed, use '*' instead\")\n+        return NotImplemented", "normalized_occurrence": 1}
