{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8282", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex cd0e9c6..369ab01 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1266,6 +1266,9 @@ class FunctionDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # typ\n                 overload = evaluate_signature(overload, __globals__,\n                                               self.env.config.autodoc_type_aliases)\n \n+                if self.env.config.autodoc_typehints == 'none':\n+                    overload = overload.replace(parameters=[param.replace(annotation=param.empty) for param in overload.parameters],\n+                                                return_annotation=overload.empty)\n                 sig = stringify_signature(overload, **kwargs)\n                 sigs.append(sig)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex be7144a..8332cb6 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -701,6 +701,8 @@ class FunctionDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):\n             __globals__ = safe_getattr(self.object, '__globals__', {})\n             for overload in self.analyzer.overloads.get('.'.join(self.objpath)):\n                 overload = evaluate_signature(overload, __globals__, self.env.config.autodoc_type_aliases)\n+                if self.env.config.autodoc_typehints == 'none':\n+                    overload = overload.replace(parameters=[param.replace(annotation=param.empty) for param in overload.parameters], return_annotation=overload.empty)\n                 sig = stringify_signature(overload, **kwargs)\n                 sigs.append(sig)\n         return '\\n'.join(sigs)\n", "normalized_occurrence": 2}
