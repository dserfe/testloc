{"model_name_or_path": "agentless_claude", "instance_id": "django__django-14787", "model_patch": "diff --git a/django/utils/decorators.py b/django/utils/decorators.py\nindex 9a57ac9..5c82e62 100644\n--- a/django/utils/decorators.py\n+++ b/django/utils/decorators.py\n@@ -16,6 +16,9 @@ def _update_method_wrapper(_wrapper, decorator):\n     @decorator\n     def dummy(*args, **kwargs):\n         pass\n+    # Get reference to the wrapper function from the partial object\n+    while hasattr(dummy, '__wrapped__'):\n+        dummy = dummy.__wrapped__\n     update_wrapper(_wrapper, dummy)\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/decorators.py b/django/utils/decorators.py\nindex 7f6be4d..ce77571 100644\n--- a/django/utils/decorators.py\n+++ b/django/utils/decorators.py\n@@ -8,6 +8,8 @@ def _update_method_wrapper(_wrapper, decorator):\n     @decorator\n     def dummy(*args, **kwargs):\n         pass\n+    while hasattr(dummy, '__wrapped__'):\n+        dummy = dummy.__wrapped__\n     update_wrapper(_wrapper, dummy)\n def _multi_decorate(decorators, method):\n     if hasattr(decorators, '__iter__'):\n", "normalized_occurrence": 1}
