{"model_name_or_path": "agentless", "instance_id": "django__django-10924", "model_patch": "diff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py\nindex 73109d9..0d86f3f 100644\n--- a/django/db/models/fields/files.py\n+++ b/django/db/models/fields/files.py\n@@ -249,7 +249,9 @@ class FileField(Field):\n             return []\n \n     def _check_upload_to(self):\n-        if isinstance(self.upload_to, str) and self.upload_to.startswith('/'):\n+        if callable(self.upload_to):\n+            return []\n+        elif isinstance(self.upload_to, str) and self.upload_to.startswith('/'):\n             return [\n                 checks.Error(\n                     \"%s's 'upload_to' argument must be a relative path, not an \"\n@@ -266,7 +268,10 @@ class FileField(Field):\n         name, path, args, kwargs = super().deconstruct()\n         if kwargs.get(\"max_length\") == 100:\n             del kwargs[\"max_length\"]\n-        kwargs['upload_to'] = self.upload_to\n+        if callable(self.upload_to):\n+            kwargs['upload_to'] = self.upload_to\n+        else:\n+            kwargs['upload_to'] = self.upload_to\n         if self.storage is not default_storage:\n             kwargs['storage'] = self.storage\n         return name, path, args, kwargs\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py\nindex 782a310..3986937 100644\n--- a/django/db/models/fields/files.py\n+++ b/django/db/models/fields/files.py\n@@ -133,7 +133,9 @@ class FileField(Field):\n         else:\n             return []\n     def _check_upload_to(self):\n-        if isinstance(self.upload_to, str) and self.upload_to.startswith('/'):\n+        if callable(self.upload_to):\n+            return []\n+        elif isinstance(self.upload_to, str) and self.upload_to.startswith('/'):\n             return [checks.Error(\"%s's 'upload_to' argument must be a relative path, not an absolute path.\" % self.__class__.__name__, obj=self, id='fields.E202', hint='Remove the leading slash.')]\n         else:\n             return []\n@@ -141,7 +143,10 @@ class FileField(Field):\n         name, path, args, kwargs = super().deconstruct()\n         if kwargs.get('max_length') == 100:\n             del kwargs['max_length']\n-        kwargs['upload_to'] = self.upload_to\n+        if callable(self.upload_to):\n+            kwargs['upload_to'] = self.upload_to\n+        else:\n+            kwargs['upload_to'] = self.upload_to\n         if self.storage is not default_storage:\n             kwargs['storage'] = self.storage\n         return (name, path, args, kwargs)\n", "normalized_occurrence": 1}
