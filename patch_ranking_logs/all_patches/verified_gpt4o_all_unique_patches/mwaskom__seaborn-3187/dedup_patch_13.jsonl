{"model_name_or_path": "agentless", "instance_id": "mwaskom__seaborn-3187", "model_patch": "diff --git a/seaborn/_core/scales.py b/seaborn/_core/scales.py\nindex 609c102..ba9dd43 100644\n--- a/seaborn/_core/scales.py\n+++ b/seaborn/_core/scales.py\n@@ -379,6 +379,9 @@ class ContinuousBase(Scale):\n             locs = axis.major.locator()\n             locs = locs[(vmin <= locs) & (locs <= vmax)]\n             labels = axis.major.formatter.format_ticks(locs)\n+            offset = axis.major.formatter.get_offset()\n+            if offset:\n+                labels = [f\"{label} ({offset})\" for label in labels]\n             new._legend = list(locs), list(labels)\n \n         return new\n", "occurrence": 2, "normalized_patch": "diff --git a/seaborn/_core/scales.py b/seaborn/_core/scales.py\nindex ff6da17..95c9433 100644\n--- a/seaborn/_core/scales.py\n+++ b/seaborn/_core/scales.py\n@@ -179,6 +179,9 @@ class ContinuousBase(Scale):\n             locs = axis.major.locator()\n             locs = locs[(vmin <= locs) & (locs <= vmax)]\n             labels = axis.major.formatter.format_ticks(locs)\n+            offset = axis.major.formatter.get_offset()\n+            if offset:\n+                labels = [f'{label} ({offset})' for label in labels]\n             new._legend = (list(locs), list(labels))\n         return new\n     def _get_transform(self):\n", "normalized_occurrence": 2}
