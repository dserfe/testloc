{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-11618", "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex 7c58cbf..ef16c92 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -247,6 +247,12 @@ class Point(GeometryEntity):\n \n         distance : number or symbolic expression.\n \n+        Raises\n+        ======\n+\n+        ValueError\n+            When the points have different dimensions.\n+\n         See Also\n         ========\n \n@@ -266,8 +272,10 @@ class Point(GeometryEntity):\n         sqrt(x**2 + y**2)\n \n         \"\"\"\n-        return sqrt(sum([(a - b)**2 for a, b in zip(\n-            self.args, p.args if isinstance(p, Point) else p)]))\n+        p_args = p.args if isinstance(p, Point) else p\n+        if len(self.args) != len(p_args):\n+            raise ValueError(\"Points must have the same dimension to compute distance\")\n+        return sqrt(sum([(a - b)**2 for a, b in zip(self.args, p_args)]))\n \n     def taxicab_distance(self, p):\n         \"\"\"The Taxicab Distance from self to point p.\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex ecc6940..7ed91cf 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -65,7 +65,10 @@ class Point(GeometryEntity):\n     def ambient_dimension(self):\n         return len(self)\n     def distance(self, p):\n-        return sqrt(sum([(a - b) ** 2 for a, b in zip(self.args, p.args if isinstance(p, Point) else p)]))\n+        p_args = p.args if isinstance(p, Point) else p\n+        if len(self.args) != len(p_args):\n+            raise ValueError('Points must have the same dimension to compute distance')\n+        return sqrt(sum([(a - b) ** 2 for a, b in zip(self.args, p_args)]))\n     def taxicab_distance(self, p):\n         p = Point(p)\n         return sum((abs(a - b) for a, b in zip(self.args, p.args)))\n", "normalized_occurrence": 1}
