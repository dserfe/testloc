{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-13453", "model_patch": "diff --git a/astropy/io/ascii/html.py b/astropy/io/ascii/html.py\nindex 1220930..2557bb9 100644\n--- a/astropy/io/ascii/html.py\n+++ b/astropy/io/ascii/html.py\n@@ -424,6 +424,11 @@ class HTML(core.BaseReader):\n                         new_cols = []\n \n                         for col, col_escaped in zip(cols, cols_escaped):\n+                            # Apply the format if provided\n+                            if col.info.name in table.meta.get('formats', {}):\n+                                format_func = table.meta['formats'][col.info.name]\n+                                col = col.copy()\n+                                col[:] = [format_func(val) for val in col]\n                             if len(col.shape) > 1 and self.html['multicol']:\n                                 span = col.shape[1]\n                                 for i in range(span):\n@@ -474,4 +479,4 @@ class HTML(core.BaseReader):\n                     yield col.fill_values[col_str]\n                     continue\n \n-            yield col_str\n+            yield col_str\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/io/ascii/html.py b/astropy/io/ascii/html.py\nindex 45fa153..9930b05 100644\n--- a/astropy/io/ascii/html.py\n+++ b/astropy/io/ascii/html.py\n@@ -208,6 +208,10 @@ class HTML(core.BaseReader):\n                         new_cols_escaped = []\n                         new_cols = []\n                         for col, col_escaped in zip(cols, cols_escaped):\n+                            if col.info.name in table.meta.get('formats', {}):\n+                                format_func = table.meta['formats'][col.info.name]\n+                                col = col.copy()\n+                                col[:] = [format_func(val) for val in col]\n                             if len(col.shape) > 1 and self.html['multicol']:\n                                 span = col.shape[1]\n                                 for i in range(span):\n", "normalized_occurrence": 1}
