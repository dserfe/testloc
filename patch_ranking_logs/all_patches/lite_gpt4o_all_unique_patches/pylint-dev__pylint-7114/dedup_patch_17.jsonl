{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-7114", "model_patch": "diff --git a/pylint/lint/expand_modules.py b/pylint/lint/expand_modules.py\nindex a7d6e52..8bb32ea 100644\n--- a/pylint/lint/expand_modules.py\n+++ b/pylint/lint/expand_modules.py\n@@ -121,7 +121,7 @@ def expand_modules(\n         else:\n             is_namespace = modutils.is_namespace(spec)\n             is_directory = modutils.is_directory(spec)\n-        if not is_namespace:\n+        if not is_namespace and not (basename == \"__init__.py\" and modname == modparts[0]):\n             result.append(\n                 {\n                     \"path\": filepath,\n@@ -159,4 +159,4 @@ def expand_modules(\n                         \"basename\": modname,\n                     }\n                 )\n-    return result, errors\n+    return result, errors\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/lint/expand_modules.py b/pylint/lint/expand_modules.py\nindex a1d3fbd..67a4e04 100644\n--- a/pylint/lint/expand_modules.py\n+++ b/pylint/lint/expand_modules.py\n@@ -64,7 +64,7 @@ def expand_modules(files_or_modules: Sequence[str], ignore_list: list[str], igno\n         else:\n             is_namespace = modutils.is_namespace(spec)\n             is_directory = modutils.is_directory(spec)\n-        if not is_namespace:\n+        if not is_namespace and (not (basename == '__init__.py' and modname == modparts[0])):\n             result.append({'path': filepath, 'name': modname, 'isarg': True, 'basepath': filepath, 'basename': modname})\n         has_init = not (modname.endswith('.__init__') or modname == '__init__') and os.path.basename(filepath) == '__init__.py'\n         if has_init or is_namespace or is_directory:\n", "normalized_occurrence": 1}
