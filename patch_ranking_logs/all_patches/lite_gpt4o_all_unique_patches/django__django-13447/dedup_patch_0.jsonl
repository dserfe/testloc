{"model_name_or_path": "agentless", "instance_id": "django__django-13447", "model_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex fbd994b..00b2b81 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -1809,7 +1809,25 @@ class ModelAdmin(BaseModelAdmin):\n             cl.result_count\n         )\n \n+        # Add the model class to app_list context\n+        app_list = [\n+            {\n+                'name': app['name'],\n+                'app_label': app['app_label'],\n+                'app_url': app['app_url'],\n+                'models': [\n+                    {\n+                        **model,\n+                        'model_class': self.model,\n+                    }\n+                    for model in app['models']\n+                ],\n+            }\n+            for app in self.get_app_list(request)\n+        ]\n+        \n         context = {\n+            'app_list': app_list,\n             **self.admin_site.each_context(request),\n             'module_name': str(opts.verbose_name_plural),\n             'selection_note': _('0 of %(cnt)s selected') % {'cnt': len(cl.result_list)},\n", "occurrence": 1, "normalized_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex dc39206..980a660 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -886,7 +886,8 @@ class ModelAdmin(BaseModelAdmin):\n         else:\n             action_form = None\n         selection_note_all = ngettext('%(total_count)s selected', 'All %(total_count)s selected', cl.result_count)\n-        context = {**self.admin_site.each_context(request), 'module_name': str(opts.verbose_name_plural), 'selection_note': _('0 of %(cnt)s selected') % {'cnt': len(cl.result_list)}, 'selection_note_all': selection_note_all % {'total_count': cl.result_count}, 'title': cl.title, 'subtitle': None, 'is_popup': cl.is_popup, 'to_field': cl.to_field, 'cl': cl, 'media': media, 'has_add_permission': self.has_add_permission(request), 'opts': cl.opts, 'action_form': action_form, 'actions_on_top': self.actions_on_top, 'actions_on_bottom': self.actions_on_bottom, 'actions_selection_counter': self.actions_selection_counter, 'preserved_filters': self.get_preserved_filters(request), **(extra_context or {})}\n+        app_list = [{'name': app['name'], 'app_label': app['app_label'], 'app_url': app['app_url'], 'models': [{**model, 'model_class': self.model} for model in app['models']]} for app in self.get_app_list(request)]\n+        context = {'app_list': app_list, **self.admin_site.each_context(request), 'module_name': str(opts.verbose_name_plural), 'selection_note': _('0 of %(cnt)s selected') % {'cnt': len(cl.result_list)}, 'selection_note_all': selection_note_all % {'total_count': cl.result_count}, 'title': cl.title, 'subtitle': None, 'is_popup': cl.is_popup, 'to_field': cl.to_field, 'cl': cl, 'media': media, 'has_add_permission': self.has_add_permission(request), 'opts': cl.opts, 'action_form': action_form, 'actions_on_top': self.actions_on_top, 'actions_on_bottom': self.actions_on_bottom, 'actions_selection_counter': self.actions_selection_counter, 'preserved_filters': self.get_preserved_filters(request), **(extra_context or {})}\n         request.current_app = self.admin_site.name\n         return TemplateResponse(request, self.change_list_template or ['admin/%s/%s/change_list.html' % (app_label, opts.model_name), 'admin/%s/change_list.html' % app_label, 'admin/change_list.html'], context)\n     def get_deleted_objects(self, objs, request):\n", "normalized_occurrence": 1}
