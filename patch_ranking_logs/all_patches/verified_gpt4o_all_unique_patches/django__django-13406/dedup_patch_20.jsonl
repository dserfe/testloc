{"model_name_or_path": "agentless", "instance_id": "django__django-13406", "model_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex 3533127..8863062 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -195,6 +195,8 @@ class QuerySet:\n         self._prefetch_related_lookups = ()\n         self._prefetch_done = False\n         self._known_related_objects = {}  # {rel_field: {pk: rel_obj}}\n+        # The default iterable class is ModelIterable, but this may change\n+        # based on the type of query\n         self._iterable_class = ModelIterable\n         self._fields = None\n         self._defer_next_filter = False\n@@ -202,6 +204,10 @@ class QuerySet:\n \n     @property\n     def query(self):\n+        if isinstance(self._query, sql.ValuesQuery):\n+            self._iterable_class = ValuesIterable\n+        elif isinstance(self._query, sql.ValuesListQuery):\n+            self._iterable_class = ValuesListIterable\n         if self._deferred_filter:\n             negate, args, kwargs = self._deferred_filter\n             self._filter_or_exclude_inplace(negate, args, kwargs)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/query.py b/django/db/models/query.py\nindex fdf020d..49fde74 100644\n--- a/django/db/models/query.py\n+++ b/django/db/models/query.py\n@@ -118,6 +118,10 @@ class QuerySet:\n         self._deferred_filter = None\n     @property\n     def query(self):\n+        if isinstance(self._query, sql.ValuesQuery):\n+            self._iterable_class = ValuesIterable\n+        elif isinstance(self._query, sql.ValuesListQuery):\n+            self._iterable_class = ValuesListIterable\n         if self._deferred_filter:\n             negate, args, kwargs = self._deferred_filter\n             self._filter_or_exclude_inplace(negate, args, kwargs)\n", "normalized_occurrence": 1}
