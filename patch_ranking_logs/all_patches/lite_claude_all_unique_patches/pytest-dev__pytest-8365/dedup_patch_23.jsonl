{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-8365", "model_patch": "diff --git a/src/_pytest/tmpdir.py b/src/_pytest/tmpdir.py\nindex cae5caf..9ac41cb 100644\n--- a/src/_pytest/tmpdir.py\n+++ b/src/_pytest/tmpdir.py\n@@ -148,13 +148,21 @@ class TempdirFactory:\n         return py.path.local(self._tmppath_factory.getbasetemp().resolve())\n \n \n+def _sanitize_username(username: str) -> str:\n+    \"\"\"Sanitize the username so it can be used in directory names.\"\"\"\n+    import re\n+    # Replace backslashes, forward slashes, and other potentially problematic\n+    # characters with underscore\n+    return re.sub(r'[\\\\/:*?\"<>|]', '_', username)\n+\n def get_user() -> Optional[str]:\n     \"\"\"Return the current user name, or None if getuser() does not work\n     in the current environment (see #1010).\"\"\"\n     import getpass\n \n     try:\n-        return getpass.getuser()\n+        username = getpass.getuser()\n+        return _sanitize_username(username)\n     except (ImportError, KeyError):\n         return None\n \n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/tmpdir.py b/src/_pytest/tmpdir.py\nindex 6f08c0a..384599d 100644\n--- a/src/_pytest/tmpdir.py\n+++ b/src/_pytest/tmpdir.py\n@@ -76,10 +76,14 @@ class TempdirFactory:\n         return py.path.local(self._tmppath_factory.mktemp(basename, numbered).resolve())\n     def getbasetemp(self) -> py.path.local:\n         return py.path.local(self._tmppath_factory.getbasetemp().resolve())\n+def _sanitize_username(username: str) -> str:\n+    import re\n+    return re.sub('[\\\\\\\\/:*?\"<>|]', '_', username)\n def get_user() -> Optional[str]:\n     import getpass\n     try:\n-        return getpass.getuser()\n+        username = getpass.getuser()\n+        return _sanitize_username(username)\n     except (ImportError, KeyError):\n         return None\n def pytest_configure(config: Config) -> None:\n", "normalized_occurrence": 1}
