{"model_name_or_path": "agentless", "instance_id": "django__django-12273", "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 07c5013..d08bea4 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -786,8 +786,11 @@ class Model(metaclass=ModelBase):\n             )\n         # Store the database on which the object was saved\n         self._state.db = using\n-        # Once saved, this is no longer a to-be-added instance.\n-        self._state.adding = False\n+        # Check if primary key is None and set adding state accordingly\n+        if self.pk is None:\n+            self._state.adding = True\n+        else:\n+            self._state.adding = False\n \n         # Signal that the save is complete\n         if not meta.auto_created:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 9dcf0cd..7efe4c0 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -425,7 +425,10 @@ class Model(metaclass=ModelBase):\n                 parent_inserted = self._save_parents(cls, using, update_fields)\n             updated = self._save_table(raw, cls, force_insert or parent_inserted, force_update, using, update_fields)\n         self._state.db = using\n-        self._state.adding = False\n+        if self.pk is None:\n+            self._state.adding = True\n+        else:\n+            self._state.adding = False\n         if not meta.auto_created:\n             post_save.send(sender=origin, instance=self, created=not updated, update_fields=update_fields, raw=raw, using=using)\n     save_base.alters_data = True\n", "normalized_occurrence": 2}
