{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15996", "model_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex cdbac1f..7e53774 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -125,6 +125,21 @@ class EnumSerializer(BaseSerializer):\n     def serialize(self):\n         enum_class = self.value.__class__\n         module = enum_class.__module__\n+        \n+        # Handle combined flags case\n+        if hasattr(enum_class, '_decompose'):\n+            names = []\n+            value = self.value._value_\n+            for flag in enum_class:\n+                if value & flag._value_:\n+                    names.append(flag.name)\n+            if names:\n+                return (\n+                    \" | \".join(\"%s.%s.%s\" % (module, enum_class.__qualname__, name) for name in names),\n+                    {\"import %s\" % module},\n+                )\n+        \n+        # Handle regular enum case\n         return (\n             \"%s.%s[%r]\" % (module, enum_class.__qualname__, self.value.name),\n             {\"import %s\" % module},\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex 08e9db0..07133c6 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -92,6 +92,14 @@ class EnumSerializer(BaseSerializer):\n     def serialize(self):\n         enum_class = self.value.__class__\n         module = enum_class.__module__\n+        if hasattr(enum_class, '_decompose'):\n+            names = []\n+            value = self.value._value_\n+            for flag in enum_class:\n+                if value & flag._value_:\n+                    names.append(flag.name)\n+            if names:\n+                return (' | '.join(('%s.%s.%s' % (module, enum_class.__qualname__, name) for name in names)), {'import %s' % module})\n         return ('%s.%s[%r]' % (module, enum_class.__qualname__, self.value.name), {'import %s' % module})\n class FloatSerializer(BaseSimpleSerializer):\n     def serialize(self):\n", "normalized_occurrence": 1}
