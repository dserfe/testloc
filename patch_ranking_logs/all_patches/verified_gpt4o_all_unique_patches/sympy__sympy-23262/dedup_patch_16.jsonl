{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-23262", "model_patch": "diff --git a/sympy/printing/python.py b/sympy/printing/python.py\nindex 103a398..98b60c8 100644\n--- a/sympy/printing/python.py\n+++ b/sympy/printing/python.py\n@@ -1,3 +1,4 @@\n+\n import keyword as kw\n import sympy\n from .repr import ReprPrinter\n@@ -23,6 +24,12 @@ class PythonPrinter(ReprPrinter, StrPrinter):\n             f = getattr(StrPrinter, f_name)\n             setattr(PythonPrinter, f_name, f)\n \n+    def _print_Tuple(self, expr):\n+        elements = ', '.join(self._print(e) for e in expr)\n+        if len(expr) == 1:\n+            elements += ','\n+        return f'({elements})'\n+\n     def _print_Function(self, expr):\n         func = expr.func.__name__\n         if not hasattr(sympy, func) and func not in self.functions:\n", "occurrence": 1, "normalized_patch": "--- a/sympy/printing/python.py\n+++ b/sympy/printing/python.py\n+    def _print_Tuple(self, expr):\n+        elements = ', '.join((self._print(e) for e in expr))\n+        if len(expr) == 1:\n+            elements += ','\n+        return f'({elements})'", "normalized_occurrence": 1}
