{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8593", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex c412096..eee671c 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -725,6 +725,9 @@ class Documenter:\n             if isinstance(obj, ObjectMember) and obj.docstring:\n                 # hack for ClassDocumenter to inject docstring via ObjectMember\n                 doc = obj.docstring\n+            elif isinstance(obj, str):\n+                # handle case where obj is a variable with a docstring\n+                doc = self.get_attr(obj, '__doc__', None)\n \n             has_doc = bool(doc)\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex f71844a..12e1b89 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -377,6 +377,8 @@ class Documenter:\n                     doc = None\n             if isinstance(obj, ObjectMember) and obj.docstring:\n                 doc = obj.docstring\n+            elif isinstance(obj, str):\n+                doc = self.get_attr(obj, '__doc__', None)\n             has_doc = bool(doc)\n             metadata = extract_metadata(doc)\n             if 'private' in metadata:\n", "normalized_occurrence": 1}
