{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8548", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 60d49fe..688d75c 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -672,7 +672,7 @@ class Documenter:\n                     if cls.__name__ == self.options.inherited_members and cls != self.object:\n                         # given member is a member of specified *super class*\n                         return True\n-                    elif name in cls.__dict__:\n+                    elif name in cls.__dict__ or name in self.get_attr(cls, '__annotations__', {}):\n                         return False\n                     elif name in self.get_attr(cls, '__annotations__', {}):\n                         return False\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex c754f31..ab61935 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -345,7 +345,7 @@ class Documenter:\n                 for cls in self.object.__mro__:\n                     if cls.__name__ == self.options.inherited_members and cls != self.object:\n                         return True\n-                    elif name in cls.__dict__:\n+                    elif name in cls.__dict__ or name in self.get_attr(cls, '__annotations__', {}):\n                         return False\n                     elif name in self.get_attr(cls, '__annotations__', {}):\n                         return False\n", "normalized_occurrence": 1}
