{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-10451", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex c6bab1b..a27bee7 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -96,16 +96,17 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str],\n         if parts[0] == 'param':\n             if len(parts) == 2:\n                 # :param xxx:\n-                arg = arguments.setdefault(parts[1], {})\n+                name = parts[1].lstrip('*')  # Remove leading asterisks\n+                arg = arguments.setdefault(name, {})\n                 arg['param'] = True\n             elif len(parts) > 2:\n                 # :param xxx yyy:\n-                name = ' '.join(parts[2:])\n+                name = ' '.join(parts[2:]).lstrip('*')  # Remove leading asterisks\n                 arg = arguments.setdefault(name, {})\n                 arg['param'] = True\n                 arg['type'] = True\n         elif parts[0] == 'type':\n-            name = ' '.join(parts[1:])\n+            name = ' '.join(parts[1:]).lstrip('*')  # Remove leading asterisks\n             arg = arguments.setdefault(name, {})\n             arg['type'] = True\n         elif parts[0] == 'rtype':\n@@ -115,7 +116,9 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str],\n         if name == 'return':\n             continue\n \n-        arg = arguments.get(name, {})\n+        # Remove leading asterisks for lookup but preserve them for output\n+        lookup_name = name.lstrip('*')\n+        arg = arguments.get(lookup_name, {})\n         if not arg.get('type'):\n             field = nodes.field()\n             field += nodes.field_name('', 'type ' + name)\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 5da2ea8..1081b9f 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -69,15 +69,16 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str], suppr\n         parts = re.split(' +', field_name)\n         if parts[0] == 'param':\n             if len(parts) == 2:\n-                arg = arguments.setdefault(parts[1], {})\n+                name = parts[1].lstrip('*')\n+                arg = arguments.setdefault(name, {})\n                 arg['param'] = True\n             elif len(parts) > 2:\n-                name = ' '.join(parts[2:])\n+                name = ' '.join(parts[2:]).lstrip('*')\n                 arg = arguments.setdefault(name, {})\n                 arg['param'] = True\n                 arg['type'] = True\n         elif parts[0] == 'type':\n-            name = ' '.join(parts[1:])\n+            name = ' '.join(parts[1:]).lstrip('*')\n             arg = arguments.setdefault(name, {})\n             arg['type'] = True\n         elif parts[0] == 'rtype':\n@@ -85,7 +86,8 @@ def modify_field_list(node: nodes.field_list, annotations: Dict[str, str], suppr\n     for name, annotation in annotations.items():\n         if name == 'return':\n             continue\n-        arg = arguments.get(name, {})\n+        lookup_name = name.lstrip('*')\n+        arg = arguments.get(lookup_name, {})\n         if not arg.get('type'):\n             field = nodes.field()\n             field += nodes.field_name('', 'type ' + name)\n", "normalized_occurrence": 2}
