{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-24870", "model_patch": "diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py\nindex 908a24f..60b9158 100644\n--- a/lib/matplotlib/contour.py\n+++ b/lib/matplotlib/contour.py\n@@ -1121,7 +1121,7 @@ class ContourSet(cm.ScalarMappable, ContourLabeler):\n         \"\"\"\n         Determine the contour levels and store in self.levels.\n         \"\"\"\n-        if self.levels is None:\n+        if self.levels is None and not (isinstance(args[0], np.ndarray) and args[0].dtype == bool):\n             if len(args) == 0:\n                 levels_arg = 7  # Default, hard-wired.\n             else:\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py\nindex 04dc867..60b91f7 100644\n--- a/lib/matplotlib/contour.py\n+++ b/lib/matplotlib/contour.py\n@@ -481,7 +481,7 @@ class ContourSet(cm.ScalarMappable, ContourLabeler):\n             i0, i1 = (0, len(lev))\n         return lev[i0:i1]\n     def _process_contour_level_args(self, args):\n-        if self.levels is None:\n+        if self.levels is None and (not (isinstance(args[0], np.ndarray) and args[0].dtype == bool)):\n             if len(args) == 0:\n                 levels_arg = 7\n             else:\n", "normalized_occurrence": 1}
