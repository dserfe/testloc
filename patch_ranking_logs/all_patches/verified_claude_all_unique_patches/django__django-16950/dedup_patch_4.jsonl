{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16950", "model_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 71f23cb..28849bb 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -1122,9 +1122,9 @@ class BaseInlineFormSet(BaseModelFormSet):\n             # Allow modifying an immutable QueryDict.\n             if mutable is not None:\n                 form.data._mutable = True\n-            # Remove the primary key from the form's data, we are only\n-            # creating new instances\n-            form.data[form.add_prefix(self._pk_field.name)] = None\n+            # Only clear the actual primary key field, preserving other unique identifiers\n+            if self._pk_field.name == self.model._meta.pk.name:\n+                form.data[form.add_prefix(self._pk_field.name)] = None\n             # Remove the foreign key from the form's data\n             form.data[form.add_prefix(self.fk.name)] = None\n             if mutable is not None:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 69a73a2..b1d2fa3 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -497,7 +497,8 @@ class BaseInlineFormSet(BaseModelFormSet):\n             mutable = getattr(form.data, '_mutable', None)\n             if mutable is not None:\n                 form.data._mutable = True\n-            form.data[form.add_prefix(self._pk_field.name)] = None\n+            if self._pk_field.name == self.model._meta.pk.name:\n+                form.data[form.add_prefix(self._pk_field.name)] = None\n             form.data[form.add_prefix(self.fk.name)] = None\n             if mutable is not None:\n                 form.data._mutable = mutable\n", "normalized_occurrence": 3}
