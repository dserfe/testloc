{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-25638", "model_patch": "diff --git a/sklearn/utils/multiclass.py b/sklearn/utils/multiclass.py\nindex db3f82e..d8425f3 100644\n--- a/sklearn/utils/multiclass.py\n+++ b/sklearn/utils/multiclass.py\n@@ -340,6 +340,14 @@ def type_of_target(y, input_name=\"\"):\n             return \"binary\"  # []\n         # 2-D empty array: [[]]\n         return \"unknown\"\n+    # Handle pandas nullable dtypes before converting to numpy array\n+    if hasattr(y, \"dtype\") and hasattr(y.dtype, \"name\"):\n+        import pandas as pd\n+        if isinstance(y, (pd.Series, pd.DataFrame)):\n+            from sklearn.utils.validation import _pandas_dtype_needs_early_conversion\n+            if _pandas_dtype_needs_early_conversion(y.dtype):\n+                y = xp.asarray(y)\n+\n     if not issparse(y) and y.dtype == object and not isinstance(y.flat[0], str):\n         # [obj_1] and not [\"label_1\"]\n         return \"unknown\"\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/utils/multiclass.py b/sklearn/utils/multiclass.py\nindex dee4b2a..4f6b808 100644\n--- a/sklearn/utils/multiclass.py\n+++ b/sklearn/utils/multiclass.py\n@@ -91,6 +91,12 @@ def type_of_target(y, input_name=''):\n         if y.ndim == 1:\n             return 'binary'\n         return 'unknown'\n+    if hasattr(y, 'dtype') and hasattr(y.dtype, 'name'):\n+        import pandas as pd\n+        if isinstance(y, (pd.Series, pd.DataFrame)):\n+            from sklearn.utils.validation import _pandas_dtype_needs_early_conversion\n+            if _pandas_dtype_needs_early_conversion(y.dtype):\n+                y = xp.asarray(y)\n     if not issparse(y) and y.dtype == object and (not isinstance(y.flat[0], str)):\n         return 'unknown'\n     if y.ndim == 2 and y.shape[1] > 1:\n", "normalized_occurrence": 1}
