{"model_name_or_path": "agentless", "instance_id": "django__django-10880", "model_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex bbc34e8..d6af5c9 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -924,7 +924,7 @@ class Case(Expression):\n             ELSE 'zero'\n         END\n     \"\"\"\n-    template = 'CASE %(cases)s ELSE %(default)s END'\n+    template = ' CASE %(cases)s ELSE %(default)s END'\n     case_joiner = ' '\n \n     def __init__(self, *cases, default=None, output_field=None, **extra):\n", "occurrence": 2, "normalized_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 5106e76..33194e7 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -546,7 +546,7 @@ class When(Expression):\n             cols.extend(source.get_group_by_cols())\n         return cols\n class Case(Expression):\n-    template = 'CASE %(cases)s ELSE %(default)s END'\n+    template = ' CASE %(cases)s ELSE %(default)s END'\n     case_joiner = ' '\n     def __init__(self, *cases, default=None, output_field=None, **extra):\n         if not all((isinstance(case, When) for case in cases)):\n", "normalized_occurrence": 2}
