{"model_name_or_path": "agentless", "instance_id": "django__django-15930", "model_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 47df1a9..a2f0f29 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -1259,7 +1259,9 @@ class When(Expression):\n                 \"as a condition.\"\n             )\n         if isinstance(condition, Q) and not condition:\n-            raise ValueError(\"An empty Q() can't be used as a When() condition.\")\n+            # Translate empty Q() into a valid SQL condition\n+            condition.connector = Q.OR\n+            condition.children.append((RawSQL('1=1', []),))\n         super().__init__(output_field=None)\n         self.condition = condition\n         self.result = self._parse_expressions(then)[0]\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 1b947ba..c276521 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -634,7 +634,8 @@ class When(Expression):\n         if condition is None or not getattr(condition, 'conditional', False) or lookups:\n             raise TypeError('When() supports a Q object, a boolean expression, or lookups as a condition.')\n         if isinstance(condition, Q) and (not condition):\n-            raise ValueError(\"An empty Q() can't be used as a When() condition.\")\n+            condition.connector = Q.OR\n+            condition.children.append((RawSQL('1=1', []),))\n         super().__init__(output_field=None)\n         self.condition = condition\n         self.result = self._parse_expressions(then)[0]\n", "normalized_occurrence": 1}
