{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13798", "model_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex e32266f..30557d4 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -156,11 +156,17 @@ class LatexPrinter(Printer):\n             \"times\": r\" \\times \"\n         }\n \n-        self._settings['mul_symbol_latex'] = \\\n-            mul_symbol_table[self._settings['mul_symbol']]\n-\n-        self._settings['mul_symbol_latex_numbers'] = \\\n-            mul_symbol_table[self._settings['mul_symbol'] or 'dot']\n+        custom_mul_symbol = self._settings['mul_symbol']\n+        if custom_mul_symbol in mul_symbol_table:\n+            self._settings['mul_symbol_latex'] = \\\n+                mul_symbol_table[custom_mul_symbol]\n+            self._settings['mul_symbol_latex_numbers'] = \\\n+                mul_symbol_table[custom_mul_symbol or 'dot']\n+        else:\n+            if not isinstance(custom_mul_symbol, str):\n+                raise ValueError(\"'mul_symbol' must be a string.\")\n+            self._settings['mul_symbol_latex'] = custom_mul_symbol\n+            self._settings['mul_symbol_latex_numbers'] = custom_mul_symbol\n \n         self._delim_dict = {'(': ')', '[': ']'}\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 8e8a18d..cc52069 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -34,8 +34,15 @@ class LatexPrinter(Printer):\n         if self._settings['fold_short_frac'] is None and self._settings['mode'] == 'inline':\n             self._settings['fold_short_frac'] = True\n         mul_symbol_table = {None: ' ', 'ldot': ' \\\\,.\\\\, ', 'dot': ' \\\\cdot ', 'times': ' \\\\times '}\n-        self._settings['mul_symbol_latex'] = mul_symbol_table[self._settings['mul_symbol']]\n-        self._settings['mul_symbol_latex_numbers'] = mul_symbol_table[self._settings['mul_symbol'] or 'dot']\n+        custom_mul_symbol = self._settings['mul_symbol']\n+        if custom_mul_symbol in mul_symbol_table:\n+            self._settings['mul_symbol_latex'] = mul_symbol_table[custom_mul_symbol]\n+            self._settings['mul_symbol_latex_numbers'] = mul_symbol_table[custom_mul_symbol or 'dot']\n+        else:\n+            if not isinstance(custom_mul_symbol, str):\n+                raise ValueError(\"'mul_symbol' must be a string.\")\n+            self._settings['mul_symbol_latex'] = custom_mul_symbol\n+            self._settings['mul_symbol_latex_numbers'] = custom_mul_symbol\n         self._delim_dict = {'(': ')', '[': ']'}\n     def parenthesize(self, item, level, strict=False):\n         prec_val = precedence_traditional(item)\n", "normalized_occurrence": 1}
