{"model_name_or_path": "agentless", "instance_id": "django__django-11433", "model_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 74a2377..cb2765d 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -46,9 +46,10 @@ def construct_instance(form, instance, fields=None, exclude=None):\n             continue\n         if exclude and f.name in exclude:\n             continue\n-        # Leave defaults for fields that aren't in POST data, except for\n-        # checkbox inputs because they don't appear in POST data if not checked.\n-        if (f.has_default() and\n+        # Always use cleaned_data to overwrite defaults for fields, even if they\n+        # aren't in POST data, except for checkbox inputs because they don't\n+        # appear in POST data if not checked.\n+        if (isinstance(form[f.name].field.widget, forms.CheckboxInput) and\n                 form[f.name].field.widget.value_omitted_from_data(form.data, form.files, form.add_prefix(f.name))):\n             continue\n         # Defer saving file-type fields until after the other fields, so a\n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 4660b84..8be405a 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -21,7 +21,7 @@ def construct_instance(form, instance, fields=None, exclude=None):\n             continue\n         if exclude and f.name in exclude:\n             continue\n-        if f.has_default() and form[f.name].field.widget.value_omitted_from_data(form.data, form.files, form.add_prefix(f.name)):\n+        if isinstance(form[f.name].field.widget, forms.CheckboxInput) and form[f.name].field.widget.value_omitted_from_data(form.data, form.files, form.add_prefix(f.name)):\n             continue\n         if isinstance(f, models.FileField):\n             file_field_list.append(f)\n", "normalized_occurrence": 1}
