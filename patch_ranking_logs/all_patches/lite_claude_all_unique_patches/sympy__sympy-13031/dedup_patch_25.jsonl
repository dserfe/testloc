{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13031", "model_patch": "diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py\nindex 79b3d5e..e3c5a48 100644\n--- a/sympy/matrices/common.py\n+++ b/sympy/matrices/common.py\n@@ -477,6 +477,9 @@ class MatrixShaping(MatrixRequired):\n         \"\"\"\n         # A null matrix can always be stacked (see  #10770)\n         if self.cols == 0 and self.rows != other.rows:\n+            if self.rows == 0:\n+                # For matrices with 0 rows, preserve column accumulation\n+                return self._new(0, self.cols + other.cols, [])\n             return self._new(other.rows, 0, []).row_join(other)\n \n         if self.rows != other.rows:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py\nindex 1e4e3f2..3e42a73 100644\n--- a/sympy/matrices/common.py\n+++ b/sympy/matrices/common.py\n@@ -178,6 +178,8 @@ class MatrixShaping(MatrixRequired):\n         return self._eval_row_insert(pos, other)\n     def row_join(self, other):\n         if self.cols == 0 and self.rows != other.rows:\n+            if self.rows == 0:\n+                return self._new(0, self.cols + other.cols, [])\n             return self._new(other.rows, 0, []).row_join(other)\n         if self.rows != other.rows:\n             raise ShapeError('`self` and `rhs` must have the same number of rows.')\n", "normalized_occurrence": 1}
