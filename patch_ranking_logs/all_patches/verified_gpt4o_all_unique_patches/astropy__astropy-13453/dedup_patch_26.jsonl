{"model_name_or_path": "agentless", "instance_id": "astropy__astropy-13453", "model_patch": "diff --git a/astropy/io/ascii/html.py b/astropy/io/ascii/html.py\nindex 1220930..d357a9d 100644\n--- a/astropy/io/ascii/html.py\n+++ b/astropy/io/ascii/html.py\n@@ -348,6 +348,12 @@ class HTML(core.BaseReader):\n \n         cols = list(table.columns.values())\n \n+        # Apply formats to columns if provided\n+        if self.formats:\n+            for col in cols:\n+                if col.info.name in self.formats:\n+                    col.info.format = self.formats[col.info.name]\n+\n         self.data.header.cols = cols\n \n         if isinstance(self.data.fill_values, tuple):\n@@ -474,4 +480,4 @@ class HTML(core.BaseReader):\n                     yield col.fill_values[col_str]\n                     continue\n \n-            yield col_str\n+            yield col_str\n", "occurrence": 1, "normalized_patch": "diff --git a/astropy/io/ascii/html.py b/astropy/io/ascii/html.py\nindex 45fa153..96fb8bf 100644\n--- a/astropy/io/ascii/html.py\n+++ b/astropy/io/ascii/html.py\n@@ -152,6 +152,10 @@ class HTML(core.BaseReader):\n     def write(self, table):\n         self._check_multidim_table(table)\n         cols = list(table.columns.values())\n+        if self.formats:\n+            for col in cols:\n+                if col.info.name in self.formats:\n+                    col.info.format = self.formats[col.info.name]\n         self.data.header.cols = cols\n         if isinstance(self.data.fill_values, tuple):\n             self.data.fill_values = [self.data.fill_values]\n", "normalized_occurrence": 1}
