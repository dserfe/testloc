{"model_name_or_path": "agentless_claude", "instance_id": "django__django-16229", "model_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 5264b71..4cf8567 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -355,6 +355,12 @@ class BaseModelForm(BaseForm, AltersData):\n         else:\n             self.instance = instance\n             object_data = model_to_dict(instance, opts.fields, opts.exclude)\n+        # Handle callable defaults for fields\n+        opts = self.instance._meta\n+        for f in opts.fields:\n+            if f.name not in object_data and callable(f.default):\n+                object_data[f.name] = f.default()\n+\n         # if initial was provided, it should override the values from instance\n         if initial is not None:\n             object_data.update(initial)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex a9413ca..01cc44c 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -148,6 +148,10 @@ class BaseModelForm(BaseForm, AltersData):\n         else:\n             self.instance = instance\n             object_data = model_to_dict(instance, opts.fields, opts.exclude)\n+        opts = self.instance._meta\n+        for f in opts.fields:\n+            if f.name not in object_data and callable(f.default):\n+                object_data[f.name] = f.default()\n         if initial is not None:\n             object_data.update(initial)\n         self._validate_unique = False\n", "normalized_occurrence": 1}
