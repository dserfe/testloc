{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-20676", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 9906dc5..f567e65 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -2861,8 +2861,13 @@ class _AxesBase(martist.Artist):\n                     for artist in ax.get_children()]))\n         if self.get_xscale() == 'log':\n             x_stickies = x_stickies[x_stickies > 0]\n+        elif self.get_xscale() == 'linear' and len(self.lines) > 0:\n+            x_stickies = x_stickies[x_stickies != 0]\n+\n         if self.get_yscale() == 'log':\n             y_stickies = y_stickies[y_stickies > 0]\n+        elif self.get_yscale() == 'linear' and len(self.lines) > 0:\n+            y_stickies = y_stickies[y_stickies != 0]\n \n         def handle_single_axis(scale, autoscaleon, shared_axes, name,\n                                axis, margin, stickies, set_bound):\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex c7dc89b..201bcaa 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1178,8 +1178,12 @@ class _AxesBase(martist.Artist):\n                 y_stickies = np.sort(np.concatenate([artist.sticky_edges.y for ax in self._shared_axes['y'].get_siblings(self) if hasattr(ax, '_children') for artist in ax.get_children()]))\n         if self.get_xscale() == 'log':\n             x_stickies = x_stickies[x_stickies > 0]\n+        elif self.get_xscale() == 'linear' and len(self.lines) > 0:\n+            x_stickies = x_stickies[x_stickies != 0]\n         if self.get_yscale() == 'log':\n             y_stickies = y_stickies[y_stickies > 0]\n+        elif self.get_yscale() == 'linear' and len(self.lines) > 0:\n+            y_stickies = y_stickies[y_stickies != 0]\n         def handle_single_axis(scale, autoscaleon, shared_axes, name, axis, margin, stickies, set_bound):\n             if not (scale and autoscaleon):\n                 return\n", "normalized_occurrence": 1}
