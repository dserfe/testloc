{"model_name_or_path": "agentless", "instance_id": "django__django-13346", "model_patch": "diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py\nindex a0dea96..058e4f4 100644\n--- a/django/db/models/fields/json.py\n+++ b/django/db/models/fields/json.py\n@@ -294,11 +294,18 @@ class KeyTransform(Transform):\n     def as_mysql(self, compiler, connection):\n         lhs, params, key_transforms = self.preprocess_lhs(compiler, connection)\n         json_path = compile_json_path(key_transforms)\n+        if self.lookup_name == 'in':\n+            return 'JSON_UNQUOTE(JSON_EXTRACT(%s, %%s)) IN (%s)' % (lhs, ', '.join(['%s'] * len(self.rhs))), tuple(params) + (json_path,) + tuple(self.rhs)\n         return 'JSON_EXTRACT(%s, %%s)' % lhs, tuple(params) + (json_path,)\n \n     def as_oracle(self, compiler, connection):\n         lhs, params, key_transforms = self.preprocess_lhs(compiler, connection)\n         json_path = compile_json_path(key_transforms)\n+        if self.lookup_name == 'in':\n+            return (\n+                \"COALESCE(JSON_VALUE(%s, '%s')) IN (%s)\" %\n+                (lhs, json_path, ', '.join(['%s'] * len(self.rhs)))\n+            ), tuple(params) + tuple(self.rhs)\n         return (\n             \"COALESCE(JSON_QUERY(%s, '%s'), JSON_VALUE(%s, '%s'))\" %\n             ((lhs, json_path) * 2)\n@@ -317,6 +324,8 @@ class KeyTransform(Transform):\n     def as_sqlite(self, compiler, connection):\n         lhs, params, key_transforms = self.preprocess_lhs(compiler, connection)\n         json_path = compile_json_path(key_transforms)\n+        if self.lookup_name == 'in':\n+            return 'JSON_UNQUOTE(JSON_EXTRACT(%s, %%s)) IN (%s)' % (lhs, ', '.join(['%s'] * len(self.rhs))), tuple(params) + (json_path,) + tuple(self.rhs)\n         return 'JSON_EXTRACT(%s, %%s)' % lhs, tuple(params) + (json_path,)\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py\nindex 781245e..9d91c5d 100644\n--- a/django/db/models/fields/json.py\n+++ b/django/db/models/fields/json.py\n@@ -202,10 +202,14 @@ class KeyTransform(Transform):\n     def as_mysql(self, compiler, connection):\n         lhs, params, key_transforms = self.preprocess_lhs(compiler, connection)\n         json_path = compile_json_path(key_transforms)\n+        if self.lookup_name == 'in':\n+            return ('JSON_UNQUOTE(JSON_EXTRACT(%s, %%s)) IN (%s)' % (lhs, ', '.join(['%s'] * len(self.rhs))), tuple(params) + (json_path,) + tuple(self.rhs))\n         return ('JSON_EXTRACT(%s, %%s)' % lhs, tuple(params) + (json_path,))\n     def as_oracle(self, compiler, connection):\n         lhs, params, key_transforms = self.preprocess_lhs(compiler, connection)\n         json_path = compile_json_path(key_transforms)\n+        if self.lookup_name == 'in':\n+            return (\"COALESCE(JSON_VALUE(%s, '%s')) IN (%s)\" % (lhs, json_path, ', '.join(['%s'] * len(self.rhs))), tuple(params) + tuple(self.rhs))\n         return (\"COALESCE(JSON_QUERY(%s, '%s'), JSON_VALUE(%s, '%s'))\" % ((lhs, json_path) * 2), tuple(params) * 2)\n     def as_postgresql(self, compiler, connection):\n         lhs, params, key_transforms = self.preprocess_lhs(compiler, connection)\n@@ -219,6 +223,8 @@ class KeyTransform(Transform):\n     def as_sqlite(self, compiler, connection):\n         lhs, params, key_transforms = self.preprocess_lhs(compiler, connection)\n         json_path = compile_json_path(key_transforms)\n+        if self.lookup_name == 'in':\n+            return ('JSON_UNQUOTE(JSON_EXTRACT(%s, %%s)) IN (%s)' % (lhs, ', '.join(['%s'] * len(self.rhs))), tuple(params) + (json_path,) + tuple(self.rhs))\n         return ('JSON_EXTRACT(%s, %%s)' % lhs, tuple(params) + (json_path,))\n class KeyTextTransform(KeyTransform):\n     postgres_operator = '->>'\n", "normalized_occurrence": 1}
