{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-10449", "model_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 671dde0..1bba970 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -39,6 +39,13 @@ def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element\n         return\n     if app.config.autodoc_typehints not in ('both', 'description'):\n         return\n+    \n+    # Don't show return type hints for class objects when using description mode\n+    if objtype == 'class' and app.config.autodoc_typehints == 'description':\n+        annotations = app.env.temp_data.get('annotations', {})\n+        for name in list(annotations.keys()):\n+            if 'return' in annotations[name]:\n+                del annotations[name]['return']\n \n     try:\n         signature = cast(addnodes.desc_signature, contentnode.parent[0])\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py\nindex 3ffed84..4a812aa 100644\n--- a/sphinx/ext/autodoc/typehints.py\n+++ b/sphinx/ext/autodoc/typehints.py\n@@ -28,6 +28,11 @@ def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element\n         return\n     if app.config.autodoc_typehints not in ('both', 'description'):\n         return\n+    if objtype == 'class' and app.config.autodoc_typehints == 'description':\n+        annotations = app.env.temp_data.get('annotations', {})\n+        for name in list(annotations.keys()):\n+            if 'return' in annotations[name]:\n+                del annotations[name]['return']\n     try:\n         signature = cast(addnodes.desc_signature, contentnode.parent[0])\n         if signature['module']:\n", "normalized_occurrence": 1}
