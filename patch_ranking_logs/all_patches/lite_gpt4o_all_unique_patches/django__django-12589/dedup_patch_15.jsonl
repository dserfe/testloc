{"model_name_or_path": "agentless", "instance_id": "django__django-12589", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 56581f2..6644812 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -128,16 +128,21 @@ class SQLCompiler:\n         having_group_by = self.having.get_group_by_cols() if self.having else ()\n         for expr in having_group_by:\n             expressions.append(expr)\n-        result = []\n+        # Ensure expressions are unique\n         seen = set()\n-        expressions = self.collapse_group_by(expressions, having_group_by)\n-\n+        unique_expressions = []\n         for expr in expressions:\n             sql, params = self.compile(expr)\n             params_hash = make_hashable(params)\n             if (sql, params_hash) not in seen:\n-                result.append((sql, params))\n                 seen.add((sql, params_hash))\n+                unique_expressions.append(expr)\n+\n+        # Process unique expressions\n+        result = []\n+        for expr in unique_expressions:\n+            sql, params = self.compile(expr)\n+            result.append((sql, params))\n         return result\n \n     def collapse_group_by(self, expressions, having):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex aa7c887..10fa536 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -60,15 +60,18 @@ class SQLCompiler:\n         having_group_by = self.having.get_group_by_cols() if self.having else ()\n         for expr in having_group_by:\n             expressions.append(expr)\n-        result = []\n         seen = set()\n-        expressions = self.collapse_group_by(expressions, having_group_by)\n+        unique_expressions = []\n         for expr in expressions:\n             sql, params = self.compile(expr)\n             params_hash = make_hashable(params)\n             if (sql, params_hash) not in seen:\n-                result.append((sql, params))\n                 seen.add((sql, params_hash))\n+                unique_expressions.append(expr)\n+        result = []\n+        for expr in unique_expressions:\n+            sql, params = self.compile(expr)\n+            result.append((sql, params))\n         return result\n     def collapse_group_by(self, expressions, having):\n         if self.connection.features.allows_group_by_pk:\n", "normalized_occurrence": 1}
