{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-25747", "model_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex a73e544..ba4f85d 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -852,7 +852,8 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n             config = _get_output_config(\"transform\", self)\n             if config[\"dense\"] == \"pandas\" and all(hasattr(X, \"iloc\") for X in Xs):\n                 pd = check_pandas_support(\"transform\")\n-                output = pd.concat(Xs, axis=1)\n+                # Reset index to avoid issues with index alignment\n+                output = pd.concat(Xs, axis=1).reset_index(drop=True)\n \n                 # If all transformers define `get_feature_names_out`, then transform\n                 # will adjust the column names to be consistent with\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex 86b0bab..199920d 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -254,7 +254,7 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n             config = _get_output_config('transform', self)\n             if config['dense'] == 'pandas' and all((hasattr(X, 'iloc') for X in Xs)):\n                 pd = check_pandas_support('transform')\n-                output = pd.concat(Xs, axis=1)\n+                output = pd.concat(Xs, axis=1).reset_index(drop=True)\n                 if not self.verbose_feature_names_out:\n                     return output\n                 transformer_names = [t[0] for t in self._iter(fitted=True, replace_strings=True)]\n", "normalized_occurrence": 1}
