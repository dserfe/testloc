{"model_name_or_path": "agentless", "instance_id": "pydata__xarray-3151", "model_patch": "diff --git a/xarray/core/combine.py b/xarray/core/combine.py\nindex fe3f23b..b389d60 100644\n--- a/xarray/core/combine.py\n+++ b/xarray/core/combine.py\n@@ -504,8 +504,10 @@ def combine_by_coords(datasets, compat='no_conflicts', data_vars='all',\n         for dim in concatenated.dims:\n             if dim in concatenated:\n                 indexes = concatenated.indexes.get(dim)\n+                unique_indexes = set(indexes)\n                 if not (indexes.is_monotonic_increasing\n-                        or indexes.is_monotonic_decreasing):\n+                        or indexes.is_monotonic_decreasing\n+                        or len(unique_indexes) == 1):\n                     raise ValueError(\"Resulting object does not have monotonic\"\n                                      \" global indexes along dimension {}\"\n                                      .format(dim))\n", "occurrence": 1, "normalized_patch": "diff --git a/xarray/core/combine.py b/xarray/core/combine.py\nindex b8f5640..d7beac0 100644\n--- a/xarray/core/combine.py\n+++ b/xarray/core/combine.py\n@@ -118,7 +118,8 @@ def combine_by_coords(datasets, compat='no_conflicts', data_vars='all', coords='\n         for dim in concatenated.dims:\n             if dim in concatenated:\n                 indexes = concatenated.indexes.get(dim)\n-                if not (indexes.is_monotonic_increasing or indexes.is_monotonic_decreasing):\n+                unique_indexes = set(indexes)\n+                if not (indexes.is_monotonic_increasing or indexes.is_monotonic_decreasing or len(unique_indexes) == 1):\n                     raise ValueError('Resulting object does not have monotonic global indexes along dimension {}'.format(dim))\n         concatenated_grouped_by_data_vars.append(concatenated)\n     return merge(concatenated_grouped_by_data_vars, compat=compat, fill_value=fill_value)\n", "normalized_occurrence": 1}
