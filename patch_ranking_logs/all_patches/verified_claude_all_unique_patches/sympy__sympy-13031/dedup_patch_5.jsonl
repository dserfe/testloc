{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-13031", "model_patch": "diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py\nindex 79b3d5e..471ae6f 100644\n--- a/sympy/matrices/common.py\n+++ b/sympy/matrices/common.py\n@@ -378,6 +378,17 @@ class MatrixShaping(MatrixRequired):\n             return cls._new()\n \n         kls = type(args[0])\n+        rows = args[0].rows\n+        \n+        # Check if all matrices have same number of rows\n+        if not all(m.rows == rows for m in args):\n+            raise ValueError(\"All matrices must have the same number of rows.\")\n+            \n+        # For empty matrices, we still want to sum up the columns\n+        if rows == 0:\n+            total_cols = sum(m.cols for m in args)\n+            return kls.zeros(0, total_cols)\n+            \n         return reduce(kls.row_join, args)\n \n     def reshape(self, rows, cols):\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py\nindex 1e4e3f2..1901a0a 100644\n--- a/sympy/matrices/common.py\n+++ b/sympy/matrices/common.py\n@@ -152,6 +152,12 @@ class MatrixShaping(MatrixRequired):\n         if len(args) == 0:\n             return cls._new()\n         kls = type(args[0])\n+        rows = args[0].rows\n+        if not all((m.rows == rows for m in args)):\n+            raise ValueError('All matrices must have the same number of rows.')\n+        if rows == 0:\n+            total_cols = sum((m.cols for m in args))\n+            return kls.zeros(0, total_cols)\n         return reduce(kls.row_join, args)\n     def reshape(self, rows, cols):\n         if self.rows * self.cols != rows * cols:\n", "normalized_occurrence": 1}
