{"model_name_or_path": "agentless", "instance_id": "django__django-13346", "model_patch": "diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py\nindex a0dea96..106ddbe 100644\n--- a/django/db/models/fields/json.py\n+++ b/django/db/models/fields/json.py\n@@ -320,6 +320,17 @@ class KeyTransform(Transform):\n         return 'JSON_EXTRACT(%s, %%s)' % lhs, tuple(params) + (json_path,)\n \n \n+@KeyTransform.register_lookup\n+class KeyTransformIn(In):\n+    def get_prep_lookup(self):\n+        prepared_values = []\n+        for value in self.rhs:\n+            if isinstance(value, (list, tuple)):\n+                prepared_values.extend(value)\n+            else:\n+                prepared_values.append(value)\n+        return [self.lhs.output_field.get_prep_value(x) for x in prepared_values]\n+\n class KeyTextTransform(KeyTransform):\n     postgres_operator = '->>'\n     postgres_nested_operator = '#>>'\n", "occurrence": 1, "normalized_patch": "--- a/django/db/models/fields/json.py\n+++ b/django/db/models/fields/json.py\n+@KeyTransform.register_lookup\n+class KeyTransformIn(In):\n+    def get_prep_lookup(self):\n+        prepared_values = []\n+        for value in self.rhs:\n+            if isinstance(value, (list, tuple)):\n+                prepared_values.extend(value)\n+            else:\n+                prepared_values.append(value)\n+        return [self.lhs.output_field.get_prep_value(x) for x in prepared_values]", "normalized_occurrence": 1}
