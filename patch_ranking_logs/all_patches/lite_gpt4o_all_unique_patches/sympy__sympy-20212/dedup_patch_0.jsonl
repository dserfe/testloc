{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-20212", "model_patch": "diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\nindex 1e8e438..1886c92 100644\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -2629,6 +2629,8 @@ class Zero(IntegerConstant, metaclass=Singleton):\n             return S.ComplexInfinity\n         if expt.is_extended_real is False:\n             return S.NaN\n+        if expt.is_negative and expt.is_infinite:\n+            return S.ComplexInfinity\n         # infinities are already handled with pos and neg\n         # tests above; now throw away leading numbers on Mul\n         # exponent\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\nindex 4fccb81..e679940 100644\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -2303,6 +2303,8 @@ class Zero(IntegerConstant, metaclass=Singleton):\n             return S.ComplexInfinity\n         if expt.is_extended_real is False:\n             return S.NaN\n+        if expt.is_negative and expt.is_infinite:\n+            return S.ComplexInfinity\n         coeff, terms = expt.as_coeff_Mul()\n         if coeff.is_negative:\n             return S.ComplexInfinity ** terms\n", "normalized_occurrence": 1}
