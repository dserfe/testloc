{"model_name_or_path": "agentless", "instance_id": "django__django-11740", "model_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 816737e..ca406cf 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -96,7 +96,10 @@ class MigrationAutodetector:\n         for name, field in sorted(fields):\n             deconstruction = self.deep_deconstruct(field)\n             if field.remote_field and field.remote_field.model:\n-                del deconstruction[2]['to']\n+                deconstruction[2]['to'] = \"%s.%s\" % (\n+                    field.remote_field.model._meta.app_label,\n+                    field.remote_field.model._meta.object_name,\n+                )\n             fields_def.append(deconstruction)\n         return fields_def\n \n@@ -1066,7 +1069,7 @@ class MigrationAutodetector:\n         else:\n             dep_app_label = field.remote_field.model._meta.app_label\n             dep_object_name = field.remote_field.model._meta.object_name\n-        dependencies = [(dep_app_label, dep_object_name, None, True)]\n+        dependencies = [(dep_app_label, dep_object_name, None, False)]\n         if getattr(field.remote_field, \"through\", None) and not field.remote_field.through._meta.auto_created:\n             dependencies.append((\n                 field.remote_field.through._meta.app_label,\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex 9fda64b..177bf21 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -48,7 +48,7 @@ class MigrationAutodetector:\n         for name, field in sorted(fields):\n             deconstruction = self.deep_deconstruct(field)\n             if field.remote_field and field.remote_field.model:\n-                del deconstruction[2]['to']\n+                deconstruction[2]['to'] = '%s.%s' % (field.remote_field.model._meta.app_label, field.remote_field.model._meta.object_name)\n             fields_def.append(deconstruction)\n         return fields_def\n     def _detect_changes(self, convert_apps=None, graph=None):\n@@ -518,7 +518,7 @@ class MigrationAutodetector:\n         else:\n             dep_app_label = field.remote_field.model._meta.app_label\n             dep_object_name = field.remote_field.model._meta.object_name\n-        dependencies = [(dep_app_label, dep_object_name, None, True)]\n+        dependencies = [(dep_app_label, dep_object_name, None, False)]\n         if getattr(field.remote_field, 'through', None) and (not field.remote_field.through._meta.auto_created):\n             dependencies.append((field.remote_field.through._meta.app_label, field.remote_field.through._meta.object_name, None, True))\n         return dependencies\n", "normalized_occurrence": 1}
