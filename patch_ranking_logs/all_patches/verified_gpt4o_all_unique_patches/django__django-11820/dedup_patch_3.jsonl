{"model_name_or_path": "agentless", "instance_id": "django__django-11820", "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 4c7a87c..5576344 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -1711,6 +1711,9 @@ class Model(metaclass=ModelBase):\n                     fld = _cls._meta.get_field(part)\n                     if fld.is_relation:\n                         _cls = fld.get_path_info()[-1].to_opts.model\n+                    # Skip ordering on related pk\n+                    if part == 'pk' and fld.is_relation:\n+                        continue\n                 except (FieldDoesNotExist, AttributeError):\n                     if fld is None or fld.get_transform(part) is None:\n                         errors.append(\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex d3d0e2f..bb5d7c7 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -877,6 +877,8 @@ class Model(metaclass=ModelBase):\n                     fld = _cls._meta.get_field(part)\n                     if fld.is_relation:\n                         _cls = fld.get_path_info()[-1].to_opts.model\n+                    if part == 'pk' and fld.is_relation:\n+                        continue\n                 except (FieldDoesNotExist, AttributeError):\n                     if fld is None or fld.get_transform(part) is None:\n                         errors.append(checks.Error(\"'ordering' refers to the nonexistent field, related field, or lookup '%s'.\" % field, obj=cls, id='models.E015'))\n", "normalized_occurrence": 1}
