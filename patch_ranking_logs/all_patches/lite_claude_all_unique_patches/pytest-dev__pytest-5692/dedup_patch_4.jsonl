{"model_name_or_path": "agentless_claude", "instance_id": "pytest-dev__pytest-5692", "model_patch": "diff --git a/src/_pytest/junitxml.py b/src/_pytest/junitxml.py\nindex 092ef97..24d7145 100644\n--- a/src/_pytest/junitxml.py\n+++ b/src/_pytest/junitxml.py\n@@ -666,6 +666,8 @@ class LogXML:\n             skipped=self.stats[\"skipped\"],\n             tests=numtests,\n             time=\"%.3f\" % suite_time_delta,\n+            hostname=socket.gethostname(),\n+            timestamp=datetime.datetime.fromtimestamp(self.suite_start_time).isoformat().split('.')[0]\n         )\n         logfile.write(Junit.testsuites([suite_node]).unicode(indent=0))\n         logfile.close()\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/junitxml.py b/src/_pytest/junitxml.py\nindex 4be8fb1..32a5f49 100644\n--- a/src/_pytest/junitxml.py\n+++ b/src/_pytest/junitxml.py\n@@ -335,7 +335,7 @@ class LogXML:\n         suite_time_delta = suite_stop_time - self.suite_start_time\n         numtests = self.stats['passed'] + self.stats['failure'] + self.stats['skipped'] + self.stats['error'] - self.cnt_double_fail_tests\n         logfile.write('<?xml version=\"1.0\" encoding=\"utf-8\"?>')\n-        suite_node = Junit.testsuite(self._get_global_properties_node(), [x.to_xml() for x in self.node_reporters_ordered], name=self.suite_name, errors=self.stats['error'], failures=self.stats['failure'], skipped=self.stats['skipped'], tests=numtests, time='%.3f' % suite_time_delta)\n+        suite_node = Junit.testsuite(self._get_global_properties_node(), [x.to_xml() for x in self.node_reporters_ordered], name=self.suite_name, errors=self.stats['error'], failures=self.stats['failure'], skipped=self.stats['skipped'], tests=numtests, time='%.3f' % suite_time_delta, hostname=socket.gethostname(), timestamp=datetime.datetime.fromtimestamp(self.suite_start_time).isoformat().split('.')[0])\n         logfile.write(Junit.testsuites([suite_node]).unicode(indent=0))\n         logfile.close()\n     def pytest_terminal_summary(self, terminalreporter):\n", "normalized_occurrence": 1}
