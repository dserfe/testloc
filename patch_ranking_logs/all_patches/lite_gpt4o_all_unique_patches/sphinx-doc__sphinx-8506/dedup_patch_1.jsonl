{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8506", "model_patch": "diff --git a/sphinx/directives/patches.py b/sphinx/directives/patches.py\nindex 2b9692e..772c6d2 100644\n--- a/sphinx/directives/patches.py\n+++ b/sphinx/directives/patches.py\n@@ -117,6 +117,7 @@ class Code(SphinxDirective):\n         'force': directives.flag,\n         'name': directives.unchanged,\n         'number-lines': optional_int,\n+        'enable': directives.unchanged,  # Add the option for enable=PATTERN\n     }\n     has_content = True\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/directives/patches.py b/sphinx/directives/patches.py\nindex d675290..f12013c 100644\n--- a/sphinx/directives/patches.py\n+++ b/sphinx/directives/patches.py\n@@ -56,7 +56,7 @@ class ListTable(tables.ListTable):\n         return (title, message)\n class Code(SphinxDirective):\n     optional_arguments = 1\n-    option_spec = {'class': directives.class_option, 'force': directives.flag, 'name': directives.unchanged, 'number-lines': optional_int}\n+    option_spec = {'class': directives.class_option, 'force': directives.flag, 'name': directives.unchanged, 'number-lines': optional_int, 'enable': directives.unchanged}\n     has_content = True\n     def run(self) -> List[Node]:\n         self.assert_has_content()\n", "normalized_occurrence": 1}
