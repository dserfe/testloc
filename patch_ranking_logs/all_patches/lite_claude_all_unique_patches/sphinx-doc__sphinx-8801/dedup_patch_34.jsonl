{"model_name_or_path": "agentless_claude", "instance_id": "sphinx-doc__sphinx-8801", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 9e67bb6..fc71f54 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -2514,7 +2514,13 @@ class AttributeDocumenter(GenericAliasMixin, NewTypeMixin, SlotsMixin,  # type:\n \n     def get_doc(self, encoding: str = None, ignore: int = None) -> Optional[List[List[str]]]:\n         # Check the attribute has a docstring-comment\n-        comment = self.get_attribute_comment(self.parent, self.objpath[-1])\n+        comment = None\n+        if self.parent:\n+            for cls in inspect.getmro(self.parent):\n+                comment = self.get_attribute_comment(cls, self.objpath[-1])\n+                if comment:\n+                    break\n+\n         if comment:\n             return [comment]\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex e1d3d5c..c2338b6 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1485,7 +1485,12 @@ class AttributeDocumenter(GenericAliasMixin, NewTypeMixin, SlotsMixin, TypeVarMi\n                 pass\n         return None\n     def get_doc(self, encoding: str=None, ignore: int=None) -> Optional[List[List[str]]]:\n-        comment = self.get_attribute_comment(self.parent, self.objpath[-1])\n+        comment = None\n+        if self.parent:\n+            for cls in inspect.getmro(self.parent):\n+                comment = self.get_attribute_comment(cls, self.objpath[-1])\n+                if comment:\n+                    break\n         if comment:\n             return [comment]\n         try:\n", "normalized_occurrence": 1}
