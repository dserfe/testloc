{"model_name_or_path": "agentless", "instance_id": "pylint-dev__pylint-6506", "model_patch": "diff --git a/pylint/config/config_initialization.py b/pylint/config/config_initialization.py\nindex a3fdb0c..66d8454 100644\n--- a/pylint/config/config_initialization.py\n+++ b/pylint/config/config_initialization.py\n@@ -82,7 +82,9 @@ def _config_initialization(\n     if unrecognized_options:\n         msg = \", \".join(unrecognized_options)\n         linter.add_message(\"unrecognized-option\", line=0, args=msg)\n-        raise _UnrecognizedOptionError(options=unrecognized_options)\n+        print(f\"Unrecognized option(s) found: {msg}\", file=sys.stderr)\n+        print(linter.help(), file=sys.stderr)\n+        sys.exit(32)\n \n     # Set the current module to configuration as we don't know where\n     # the --load-plugins key is coming from\n@@ -103,4 +105,4 @@ def _config_initialization(\n \n     linter._parse_error_mode()\n \n-    return parsed_args_list\n+    return parsed_args_list\n", "occurrence": 1, "normalized_patch": "diff --git a/pylint/config/config_initialization.py b/pylint/config/config_initialization.py\nindex e5a3333..6880ee7 100644\n--- a/pylint/config/config_initialization.py\n+++ b/pylint/config/config_initialization.py\n@@ -39,7 +39,9 @@ def _config_initialization(linter: PyLinter, args_list: list[str], reporter: rep\n     if unrecognized_options:\n         msg = ', '.join(unrecognized_options)\n         linter.add_message('unrecognized-option', line=0, args=msg)\n-        raise _UnrecognizedOptionError(options=unrecognized_options)\n+        print(f'Unrecognized option(s) found: {msg}', file=sys.stderr)\n+        print(linter.help(), file=sys.stderr)\n+        sys.exit(32)\n     linter.set_current_module('Command line or configuration file')\n     linter.load_plugin_configuration()\n     if not parsed_args_list:\n", "normalized_occurrence": 1}
