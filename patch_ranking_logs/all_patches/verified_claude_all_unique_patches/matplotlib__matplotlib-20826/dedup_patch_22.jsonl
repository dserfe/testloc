{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-20826", "model_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 07605b5..a27ee69 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -1202,15 +1202,30 @@ class _AxesBase(martist.Artist):\n         self.callbacks = cbook.CallbackRegistry()\n \n         if self._sharex is not None:\n+            # Save and restore tick labels visibility for shared x axis\n             self.sharex(self._sharex)\n+            for label in self.xaxis.get_ticklabels():\n+                label.set_visible(False)\n+            if self._row < self._sharex._row:  # Only bottom-most axis shows labels\n+                self.xaxis.set_tick_params(labelbottom=False)\n+                self.spines['bottom'].set_visible(True)\n+                self.spines['top'].set_visible(False)\n         else:\n             self.xaxis._set_scale('linear')\n             try:\n                 self.set_xlim(0, 1)\n             except TypeError:\n                 pass\n+\n         if self._sharey is not None:\n+            # Save and restore tick labels visibility for shared y axis\n             self.sharey(self._sharey)\n+            for label in self.yaxis.get_ticklabels():\n+                label.set_visible(False)\n+            if self._col > 0:  # Only left-most axis shows labels\n+                self.yaxis.set_tick_params(labelleft=False)\n+                self.spines['left'].set_visible(True)\n+                self.spines['right'].set_visible(False)\n         else:\n             self.yaxis._set_scale('linear')\n             try:\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\nindex 33a6de3..7eecc94 100644\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -511,6 +511,12 @@ class _AxesBase(martist.Artist):\n         self.callbacks = cbook.CallbackRegistry()\n         if self._sharex is not None:\n             self.sharex(self._sharex)\n+            for label in self.xaxis.get_ticklabels():\n+                label.set_visible(False)\n+            if self._row < self._sharex._row:\n+                self.xaxis.set_tick_params(labelbottom=False)\n+                self.spines['bottom'].set_visible(True)\n+                self.spines['top'].set_visible(False)\n         else:\n             self.xaxis._set_scale('linear')\n             try:\n@@ -519,6 +525,12 @@ class _AxesBase(martist.Artist):\n                 pass\n         if self._sharey is not None:\n             self.sharey(self._sharey)\n+            for label in self.yaxis.get_ticklabels():\n+                label.set_visible(False)\n+            if self._col > 0:\n+                self.yaxis.set_tick_params(labelleft=False)\n+                self.spines['left'].set_visible(True)\n+                self.spines['right'].set_visible(False)\n         else:\n             self.yaxis._set_scale('linear')\n             try:\n", "normalized_occurrence": 1}
