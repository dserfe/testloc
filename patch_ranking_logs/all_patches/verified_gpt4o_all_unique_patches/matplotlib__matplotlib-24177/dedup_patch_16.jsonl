{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-24177", "model_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 36d6e8e..d3779f0 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -6890,6 +6890,14 @@ such objects\n                     elif orientation == 'horizontal':\n                         patch.sticky_edges.x.append(0)\n \n+            if density:\n+                self._request_autoscale_view(\"y\")\n+                for patch in patch_list:\n+                    if orientation == 'vertical':\n+                        patch.sticky_edges.y.append(0)\n+                    elif orientation == 'horizontal':\n+                        patch.sticky_edges.x.append(0)\n+\n             # we return patches, so put it back in the expected order\n             patches.reverse()\n \n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 63bfb92..926ec02 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -2044,6 +2044,13 @@ class Axes(_AxesBase):\n                         patch.sticky_edges.y.append(0)\n                     elif orientation == 'horizontal':\n                         patch.sticky_edges.x.append(0)\n+            if density:\n+                self._request_autoscale_view('y')\n+                for patch in patch_list:\n+                    if orientation == 'vertical':\n+                        patch.sticky_edges.y.append(0)\n+                    elif orientation == 'horizontal':\n+                        patch.sticky_edges.x.append(0)\n             patches.reverse()\n         labels = [] if label is None else np.atleast_1d(np.asarray(label, str))\n         for patch, lbl in itertools.zip_longest(patches, labels):\n", "normalized_occurrence": 1}
