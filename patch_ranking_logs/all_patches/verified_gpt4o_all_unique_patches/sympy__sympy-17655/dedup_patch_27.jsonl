{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-17655", "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex a708f18..b424582 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -182,6 +182,13 @@ class Point(GeometryEntity):\n         origin = Point([0]*len(self))\n         return Point.distance(origin, self)\n \n+    def __rmul__(self, other):\n+        \"\"\"Right-hand multiplication by a scalar.\"\"\"\n+        if isinstance(other, (int, float, sympy.Basic)):  # compatible types\n+            new_coords = [simplify(other * coord) for coord in self.args]\n+            return Point(new_coords, evaluate=False)\n+        raise GeometryError(\"Don't know how to multiply {} and a Point object.\".format(other))\n+\n     def __add__(self, other):\n         \"\"\"Add other to self by incrementing self's coordinates by\n         those of other.\n", "occurrence": 1, "normalized_patch": "--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n+    def __rmul__(self, other):\n+        if isinstance(other, (int, float, sympy.Basic)):\n+            new_coords = [simplify(other * coord) for coord in self.args]\n+            return Point(new_coords, evaluate=False)\n+        raise GeometryError(\"Don't know how to multiply {} and a Point object.\".format(other))", "normalized_occurrence": 1}
