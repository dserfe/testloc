{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-13915", "model_patch": "diff --git a/sympy/core/basic.py b/sympy/core/basic.py\nindex 0977e81..4cf2da6 100644\n--- a/sympy/core/basic.py\n+++ b/sympy/core/basic.py\n@@ -898,7 +898,13 @@ class Basic(with_metaclass(ManagedProperties)):\n                 sequence = sorted([(k, v) for (k, v) in sequence.items()],\n                                   key=default_sort_key)\n \n+        from sympy import nan\n         if kwargs.pop('simultaneous', False):  # XXX should this be the default for dict subs?\n+            try:\n+                if self.subs(dict(sequence)).is_zero:\n+                    return nan\n+            except (ZeroDivisionError, ValueError):\n+                return nan\n             reps = {}\n             rv = self\n             kwargs['hack2'] = True\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/core/basic.py b/sympy/core/basic.py\nindex 782db85..3bb3557 100644\n--- a/sympy/core/basic.py\n+++ b/sympy/core/basic.py\n@@ -310,7 +310,13 @@ class Basic(with_metaclass(ManagedProperties)):\n                 del newseq, d\n             else:\n                 sequence = sorted([(k, v) for k, v in sequence.items()], key=default_sort_key)\n+        from sympy import nan\n         if kwargs.pop('simultaneous', False):\n+            try:\n+                if self.subs(dict(sequence)).is_zero:\n+                    return nan\n+            except (ZeroDivisionError, ValueError):\n+                return nan\n             reps = {}\n             rv = self\n             kwargs['hack2'] = True\n", "normalized_occurrence": 1}
