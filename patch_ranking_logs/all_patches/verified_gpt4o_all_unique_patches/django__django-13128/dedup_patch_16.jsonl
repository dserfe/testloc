{"model_name_or_path": "agentless", "instance_id": "django__django-13128", "model_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 215532d..934aaef 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -459,7 +459,10 @@ class CombinedExpression(SQLiteNumericMixin, Expression):\n             return DurationExpression(self.lhs, self.connector, self.rhs).as_sql(compiler, connection)\n         datetime_fields = {'DateField', 'DateTimeField', 'TimeField'}\n         if self.connector == self.SUB and lhs_type in datetime_fields and lhs_type == rhs_type:\n-            return TemporalSubtraction(self.lhs, self.rhs).as_sql(compiler, connection)\n+            if lhs_type == 'DateTimeField' and rhs_type == 'DateTimeField':\n+                return TemporalSubtraction(self.lhs, self.rhs, output_field=DurationField()).as_sql(compiler, connection)\n+            else:\n+                return TemporalSubtraction(self.lhs, self.rhs).as_sql(compiler, connection)\n         expressions = []\n         expression_params = []\n         sql, params = compiler.compile(self.lhs)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex ae5c73e..9c4c592 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -251,7 +251,10 @@ class CombinedExpression(SQLiteNumericMixin, Expression):\n             return DurationExpression(self.lhs, self.connector, self.rhs).as_sql(compiler, connection)\n         datetime_fields = {'DateField', 'DateTimeField', 'TimeField'}\n         if self.connector == self.SUB and lhs_type in datetime_fields and (lhs_type == rhs_type):\n-            return TemporalSubtraction(self.lhs, self.rhs).as_sql(compiler, connection)\n+            if lhs_type == 'DateTimeField' and rhs_type == 'DateTimeField':\n+                return TemporalSubtraction(self.lhs, self.rhs, output_field=DurationField()).as_sql(compiler, connection)\n+            else:\n+                return TemporalSubtraction(self.lhs, self.rhs).as_sql(compiler, connection)\n         expressions = []\n         expression_params = []\n         sql, params = compiler.compile(self.lhs)\n", "normalized_occurrence": 1}
