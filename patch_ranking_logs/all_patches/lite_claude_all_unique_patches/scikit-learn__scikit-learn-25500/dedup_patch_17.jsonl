{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-25500", "model_patch": "diff --git a/sklearn/calibration.py b/sklearn/calibration.py\nindex c8818cd..efa2ed6 100644\n--- a/sklearn/calibration.py\n+++ b/sklearn/calibration.py\n@@ -694,6 +694,12 @@ def _fit_calibrator(clf, predictions, y, classes, method, sample_weight=None):\n         else:  # \"sigmoid\"\n             calibrator = _SigmoidCalibration()\n         calibrator.fit(this_pred, Y[:, class_idx], sample_weight)\n+        # Wrap calibrator to ensure numpy array output\n+        original_predict = calibrator.predict\n+        def wrapped_predict(X):\n+            pred = original_predict(X)\n+            return pred.to_numpy() if hasattr(pred, 'to_numpy') else pred\n+        calibrator.predict = wrapped_predict\n         calibrators.append(calibrator)\n \n     pipeline = _CalibratedClassifier(clf, calibrators, method=method, classes=classes)\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/calibration.py b/sklearn/calibration.py\nindex 209d57c..16b2de4 100644\n--- a/sklearn/calibration.py\n+++ b/sklearn/calibration.py\n@@ -151,6 +151,11 @@ def _fit_calibrator(clf, predictions, y, classes, method, sample_weight=None):\n         else:\n             calibrator = _SigmoidCalibration()\n         calibrator.fit(this_pred, Y[:, class_idx], sample_weight)\n+        original_predict = calibrator.predict\n+        def wrapped_predict(X):\n+            pred = original_predict(X)\n+            return pred.to_numpy() if hasattr(pred, 'to_numpy') else pred\n+        calibrator.predict = wrapped_predict\n         calibrators.append(calibrator)\n     pipeline = _CalibratedClassifier(clf, calibrators, method=method, classes=classes)\n     return pipeline\n", "normalized_occurrence": 1}
