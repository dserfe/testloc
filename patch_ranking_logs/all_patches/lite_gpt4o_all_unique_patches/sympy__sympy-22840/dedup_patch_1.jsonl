{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-22840", "model_patch": "diff --git a/sympy/simplify/cse_main.py b/sympy/simplify/cse_main.py\nindex fa99708..0260987 100644\n--- a/sympy/simplify/cse_main.py\n+++ b/sympy/simplify/cse_main.py\n@@ -689,6 +689,26 @@ def tree_cse(exprs, symbols, opt_subs=None, order='canonical', ignore=()):\n         else:\n             reduced_e = e\n         reduced_exprs.append(reduced_e)\n+    # Update matrix symbols within replacements to use correct indexing\n+    from sympy.matrices.expressions.matexpr import MatrixSymbol\n+    from sympy import MatrixElement\n+\n+    def update_replacements_with_matrix_symbols(replacements):\n+        updated_replacements = []\n+        for sym, expr in replacements:\n+            if isinstance(sym, MatrixSymbol):\n+                updated_expr = expr\n+                for i in range(sym.shape[0]):\n+                    for j in range(sym.shape[1]):\n+                        updated_expr = updated_expr.subs(sym[i, j], MatrixElement(sym, i, j))\n+                updated_replacements.append((sym, updated_expr))\n+            else:\n+                updated_replacements.append((sym, expr))\n+        return updated_replacements\n+\n+    # Apply the update to replacements\n+    replacements = update_replacements_with_matrix_symbols(replacements)\n+\n     return replacements, reduced_exprs\n \n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/cse_main.py b/sympy/simplify/cse_main.py\nindex d5cc8d7..94a552f 100644\n--- a/sympy/simplify/cse_main.py\n+++ b/sympy/simplify/cse_main.py\n@@ -301,6 +301,21 @@ def tree_cse(exprs, symbols, opt_subs=None, order='canonical', ignore=()):\n         else:\n             reduced_e = e\n         reduced_exprs.append(reduced_e)\n+    from sympy.matrices.expressions.matexpr import MatrixSymbol\n+    from sympy import MatrixElement\n+    def update_replacements_with_matrix_symbols(replacements):\n+        updated_replacements = []\n+        for sym, expr in replacements:\n+            if isinstance(sym, MatrixSymbol):\n+                updated_expr = expr\n+                for i in range(sym.shape[0]):\n+                    for j in range(sym.shape[1]):\n+                        updated_expr = updated_expr.subs(sym[i, j], MatrixElement(sym, i, j))\n+                updated_replacements.append((sym, updated_expr))\n+            else:\n+                updated_replacements.append((sym, expr))\n+        return updated_replacements\n+    replacements = update_replacements_with_matrix_symbols(replacements)\n     return (replacements, reduced_exprs)\n def cse(exprs, symbols=None, optimizations=None, postprocess=None, order='canonical', ignore=(), list=True):\n     from sympy.matrices import MatrixBase, Matrix, ImmutableMatrix, SparseMatrix, ImmutableSparseMatrix\n", "normalized_occurrence": 1}
