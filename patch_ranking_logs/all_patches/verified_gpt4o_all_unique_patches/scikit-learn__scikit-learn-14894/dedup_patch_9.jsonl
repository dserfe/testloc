{"model_name_or_path": "agentless", "instance_id": "scikit-learn__scikit-learn-14894", "model_patch": "diff --git a/sklearn/svm/base.py b/sklearn/svm/base.py\nindex b637f36..e0c23a2 100644\n--- a/sklearn/svm/base.py\n+++ b/sklearn/svm/base.py\n@@ -285,6 +285,9 @@ class BaseLibSVM(BaseEstimator, metaclass=ABCMeta):\n         else:  # regression\n             n_class = 1\n         n_SV = self.support_vectors_.shape[0]\n+        if n_SV == 0:\n+            self.dual_coef_ = sp.csr_matrix((0, 0))\n+            return\n \n         dual_coef_indices = np.tile(np.arange(n_SV), n_class)\n         dual_coef_indptr = np.arange(0, dual_coef_indices.size + 1,\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/svm/base.py b/sklearn/svm/base.py\nindex ff4726d..21e0447 100644\n--- a/sklearn/svm/base.py\n+++ b/sklearn/svm/base.py\n@@ -125,6 +125,9 @@ class BaseLibSVM(BaseEstimator, metaclass=ABCMeta):\n         else:\n             n_class = 1\n         n_SV = self.support_vectors_.shape[0]\n+        if n_SV == 0:\n+            self.dual_coef_ = sp.csr_matrix((0, 0))\n+            return\n         dual_coef_indices = np.tile(np.arange(n_SV), n_class)\n         dual_coef_indptr = np.arange(0, dual_coef_indices.size + 1, dual_coef_indices.size / n_class)\n         self.dual_coef_ = sp.csr_matrix((dual_coef_data, dual_coef_indices, dual_coef_indptr), (n_class, n_SV))\n", "normalized_occurrence": 1}
