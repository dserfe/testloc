{"model_name_or_path": "agentless_claude", "instance_id": "django__django-13449", "model_patch": "diff --git a/django/db/models/functions/window.py b/django/db/models/functions/window.py\nindex 01e5980..114749d 100644\n--- a/django/db/models/functions/window.py\n+++ b/django/db/models/functions/window.py\n@@ -47,6 +47,17 @@ class LagLeadFunction(Func):\n     def _resolve_output_field(self):\n         sources = self.get_source_expressions()\n         return sources[0].output_field\n+        \n+    def as_sqlite(self, compiler, connection, **extra_context):\n+        # Explicitly cast the result when a DecimalField is used\n+        if hasattr(self.source_expressions[0], 'output_field') and isinstance(self.source_expressions[0].output_field, DecimalField):\n+            from django.db.models import DecimalField\n+            clone = self.copy()\n+            clone.set_source_expressions([*self.get_source_expressions()])\n+            if not self.output_field:\n+                clone.output_field = DecimalField()\n+            return clone\n+        return self\n \n \n class Lag(LagLeadFunction):\n", "normalized_patch": "--- a/django/db/models/functions/window.py\n+++ b/django/db/models/functions/window.py\n+    def as_sqlite(self, compiler, connection, **extra_context):\n+        if hasattr(self.source_expressions[0], 'output_field') and isinstance(self.source_expressions[0].output_field, DecimalField):\n+            from django.db.models import DecimalField\n+            clone = self.copy()\n+            clone.set_source_expressions([*self.get_source_expressions()])\n+            if not self.output_field:\n+                clone.output_field = DecimalField()\n+            return clone\n+        return self", "normalized_occurrence": 1}
