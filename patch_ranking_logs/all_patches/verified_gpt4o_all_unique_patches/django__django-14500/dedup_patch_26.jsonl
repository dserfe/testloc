{"model_name_or_path": "agentless", "instance_id": "django__django-14500", "model_patch": "diff --git a/django/db/migrations/executor.py b/django/db/migrations/executor.py\nindex 9e05ef1..bf97d20 100644\n--- a/django/db/migrations/executor.py\n+++ b/django/db/migrations/executor.py\n@@ -236,7 +236,7 @@ class MigrationExecutor:\n         return state\n \n     def record_migration(self, migration):\n-        # For replacement migrations, record individual statuses\n+        # For replacement migrations, record individual statuses as unapplied\n         if migration.replaces:\n             for app_label, name in migration.replaces:\n                 self.recorder.record_applied(app_label, name)\n@@ -250,10 +250,12 @@ class MigrationExecutor:\n         if not fake:\n             with self.connection.schema_editor(atomic=migration.atomic) as schema_editor:\n                 state = migration.unapply(state, schema_editor)\n-        # For replacement migrations, record individual statuses\n+        # For replacement migrations, record individual statuses as unapplied\n         if migration.replaces:\n             for app_label, name in migration.replaces:\n-                self.recorder.record_unapplied(app_label, name)\n+                # Only record the individual statuses as unapplied, not the squash migration itself.\n+                if migration.replaces:\n+                    self.recorder.record_unapplied(app_label, name)\n         else:\n             self.recorder.record_unapplied(migration.app_label, migration.name)\n         # Report progress\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/executor.py b/django/db/migrations/executor.py\nindex d5a1e7d..4591483 100644\n--- a/django/db/migrations/executor.py\n+++ b/django/db/migrations/executor.py\n@@ -147,7 +147,8 @@ class MigrationExecutor:\n                 state = migration.unapply(state, schema_editor)\n         if migration.replaces:\n             for app_label, name in migration.replaces:\n-                self.recorder.record_unapplied(app_label, name)\n+                if migration.replaces:\n+                    self.recorder.record_unapplied(app_label, name)\n         else:\n             self.recorder.record_unapplied(migration.app_label, migration.name)\n         if self.progress_callback:\n", "normalized_occurrence": 1}
