{"model_name_or_path": "agentless_claude", "instance_id": "django__django-10999", "model_patch": "diff --git a/django/utils/dateparse.py b/django/utils/dateparse.py\nindex 131eab4..1c7bb45 100644\n--- a/django/utils/dateparse.py\n+++ b/django/utils/dateparse.py\n@@ -29,7 +29,7 @@ datetime_re = re.compile(\n standard_duration_re = re.compile(\n     r'^'\n     r'(?:(?P<days>-?\\d+) (days?, )?)?'\n-    r'((?:(?P<hours>-?\\d+):)(?=\\d+:\\d+))?'\n+    r'((?:(?P<hours>-?\\d+):)(?=-?\\d+:-?\\d+))?'\n     r'(?:(?P<minutes>-?\\d+):)?'\n     r'(?P<seconds>-?\\d+)'\n     r'(?:\\.(?P<microseconds>\\d{1,6})\\d{0,6})?'\n", "occurrence": 40, "normalized_patch": "diff --git a/django/utils/dateparse.py b/django/utils/dateparse.py\nindex 27b4452..e1e943f 100644\n--- a/django/utils/dateparse.py\n+++ b/django/utils/dateparse.py\n@@ -4,7 +4,7 @@ from django.utils.timezone import get_fixed_timezone, utc\n date_re = re.compile('(?P<year>\\\\d{4})-(?P<month>\\\\d{1,2})-(?P<day>\\\\d{1,2})$')\n time_re = re.compile('(?P<hour>\\\\d{1,2}):(?P<minute>\\\\d{1,2})(?::(?P<second>\\\\d{1,2})(?:\\\\.(?P<microsecond>\\\\d{1,6})\\\\d{0,6})?)?')\n datetime_re = re.compile('(?P<year>\\\\d{4})-(?P<month>\\\\d{1,2})-(?P<day>\\\\d{1,2})[T ](?P<hour>\\\\d{1,2}):(?P<minute>\\\\d{1,2})(?::(?P<second>\\\\d{1,2})(?:\\\\.(?P<microsecond>\\\\d{1,6})\\\\d{0,6})?)?(?P<tzinfo>Z|[+-]\\\\d{2}(?::?\\\\d{2})?)?$')\n-standard_duration_re = re.compile('^(?:(?P<days>-?\\\\d+) (days?, )?)?((?:(?P<hours>-?\\\\d+):)(?=\\\\d+:\\\\d+))?(?:(?P<minutes>-?\\\\d+):)?(?P<seconds>-?\\\\d+)(?:\\\\.(?P<microseconds>\\\\d{1,6})\\\\d{0,6})?$')\n+standard_duration_re = re.compile('^(?:(?P<days>-?\\\\d+) (days?, )?)?((?:(?P<hours>-?\\\\d+):)(?=-?\\\\d+:-?\\\\d+))?(?:(?P<minutes>-?\\\\d+):)?(?P<seconds>-?\\\\d+)(?:\\\\.(?P<microseconds>\\\\d{1,6})\\\\d{0,6})?$')\n iso8601_duration_re = re.compile('^(?P<sign>[-+]?)P(?:(?P<days>\\\\d+(.\\\\d+)?)D)?(?:T(?:(?P<hours>\\\\d+(.\\\\d+)?)H)?(?:(?P<minutes>\\\\d+(.\\\\d+)?)M)?(?:(?P<seconds>\\\\d+(.\\\\d+)?)S)?)?$')\n postgres_interval_re = re.compile('^(?:(?P<days>-?\\\\d+) (days? ?))?(?:(?P<sign>[-+])?(?P<hours>\\\\d+):(?P<minutes>\\\\d\\\\d):(?P<seconds>\\\\d\\\\d)(?:\\\\.(?P<microseconds>\\\\d{1,6}))?)?$')\n def parse_date(value):\n", "normalized_occurrence": 40}
