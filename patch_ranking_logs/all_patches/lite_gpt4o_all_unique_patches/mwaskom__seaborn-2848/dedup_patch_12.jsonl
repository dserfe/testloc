{"model_name_or_path": "agentless", "instance_id": "mwaskom__seaborn-2848", "model_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 21c0562..53de836 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -1328,6 +1328,10 @@ class PairGrid(Grid):\n             called ``color`` and  ``label``.\n \n         \"\"\"\n+        if 'hue' in kwargs:\n+            self.hue_vals = kwargs.pop('hue')\n+            self._hue_order = categorical_order(self.hue_vals)\n+\n         row_indices, col_indices = np.indices(self.axes.shape)\n         indices = zip(row_indices.flat, col_indices.flat)\n         self._map_bivariate(func, indices, **kwargs)\n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 0807052..a08f55a 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -605,6 +605,9 @@ class PairGrid(Grid):\n             utils.despine(fig=fig)\n         self.tight_layout(pad=layout_pad)\n     def map(self, func, **kwargs):\n+        if 'hue' in kwargs:\n+            self.hue_vals = kwargs.pop('hue')\n+            self._hue_order = categorical_order(self.hue_vals)\n         row_indices, col_indices = np.indices(self.axes.shape)\n         indices = zip(row_indices.flat, col_indices.flat)\n         self._map_bivariate(func, indices, **kwargs)\n", "normalized_occurrence": 1}
