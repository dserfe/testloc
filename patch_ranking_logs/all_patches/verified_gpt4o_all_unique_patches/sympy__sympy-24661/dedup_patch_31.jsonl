{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-24661", "model_patch": "diff --git a/sympy/parsing/sympy_parser.py b/sympy/parsing/sympy_parser.py\nindex 2ec3cf6..c761486 100644\n--- a/sympy/parsing/sympy_parser.py\n+++ b/sympy/parsing/sympy_parser.py\n@@ -1069,8 +1069,17 @@ def parse_expr(s: str, local_dict: Optional[DICT] = None,\n     else:\n         _transformations = transformations\n \n+    from sympy import Relational\n+\n     code = stringify_expr(s, local_dict, global_dict, _transformations)\n \n+    if not evaluate:\n+        if 'Lt(' in code or 'Le(' in code or 'Gt(' in code or 'Ge(' in code:\n+            code = code.replace('Lt(', 'Relational(Lt, evaluate=False, ').replace(\n+                'Le(', 'Relational(Le, evaluate=False, ').replace(\n+                'Gt(', 'Relational(Gt, evaluate=False, ').replace(\n+                'Ge(', 'Relational(Ge, evaluate=False, ')\n+\n     if not evaluate:\n         code = compile(evaluateFalse(code), '<string>', 'eval')\n \n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/parsing/sympy_parser.py b/sympy/parsing/sympy_parser.py\nindex 0c06cf1..895ffda 100644\n--- a/sympy/parsing/sympy_parser.py\n+++ b/sympy/parsing/sympy_parser.py\n@@ -509,7 +509,11 @@ def parse_expr(s: str, local_dict: Optional[DICT]=None, transformations: tUnion[\n             raise ValueError('unknown transformation group name')\n     else:\n         _transformations = transformations\n+    from sympy import Relational\n     code = stringify_expr(s, local_dict, global_dict, _transformations)\n+    if not evaluate:\n+        if 'Lt(' in code or 'Le(' in code or 'Gt(' in code or ('Ge(' in code):\n+            code = code.replace('Lt(', 'Relational(Lt, evaluate=False, ').replace('Le(', 'Relational(Le, evaluate=False, ').replace('Gt(', 'Relational(Gt, evaluate=False, ').replace('Ge(', 'Relational(Ge, evaluate=False, ')\n     if not evaluate:\n         code = compile(evaluateFalse(code), '<string>', 'eval')\n     try:\n", "normalized_occurrence": 1}
