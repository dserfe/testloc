{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-12236", "model_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 03af2f5..101d104 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -74,6 +74,8 @@ def apart(f, x=None, full=False, **options):\n \n     if f.is_Atom:\n         return f\n+    elif x is None:\n+        return f\n     else:\n         P, Q = f.as_numer_denom()\n \n@@ -126,8 +128,12 @@ def apart(f, x=None, full=False, **options):\n             \"multivariate partial fraction decomposition\")\n \n     common, P, Q = P.cancel(Q)\n+    if common.has(x):\n+        common = common.as_expr().factor()\n \n     poly, P = P.div(Q, auto=True)\n+    if poly.has(x):\n+        poly = poly.as_expr().factor()\n     P, Q = P.rat_clear_denoms(Q)\n \n     if Q.degree() <= 1:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 21c4bd7..a48ec43 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -14,6 +14,8 @@ def apart(f, x=None, full=False, **options):\n     f = sympify(f)\n     if f.is_Atom:\n         return f\n+    elif x is None:\n+        return f\n     else:\n         P, Q = f.as_numer_denom()\n     _options = options.copy()\n@@ -60,7 +62,11 @@ def apart(f, x=None, full=False, **options):\n             return apart(fc, x=x, full=full, **_options)\n         raise NotImplementedError('multivariate partial fraction decomposition')\n     common, P, Q = P.cancel(Q)\n+    if common.has(x):\n+        common = common.as_expr().factor()\n     poly, P = P.div(Q, auto=True)\n+    if poly.has(x):\n+        poly = poly.as_expr().factor()\n     P, Q = P.rat_clear_denoms(Q)\n     if Q.degree() <= 1:\n         partial = P / Q\n", "normalized_occurrence": 1}
