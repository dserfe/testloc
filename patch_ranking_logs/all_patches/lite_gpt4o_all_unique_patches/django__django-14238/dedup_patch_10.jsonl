{"model_name_or_path": "agentless", "instance_id": "django__django-14238", "model_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex c552973..6c0045a 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -2518,7 +2518,15 @@ class AutoFieldMeta(type):\n \n     @property\n     def _subclasses(self):\n-        return (BigAutoField, SmallAutoField)\n+        from django.db.models.fields import AutoField\n+        subclasses = set()\n+        classes_to_check = [BigAutoField, SmallAutoField]\n+        while classes_to_check:\n+            subclass = classes_to_check.pop()\n+            if subclass not in subclasses:\n+                subclasses.add(subclass)\n+                classes_to_check.extend(subclass.__subclasses__())\n+        return tuple(subclasses)\n \n     def __instancecheck__(self, instance):\n         return isinstance(instance, self._subclasses) or super().__instancecheck__(instance)\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex 607ab50..1ee596e 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -1309,7 +1309,15 @@ class AutoFieldMixin:\n class AutoFieldMeta(type):\n     @property\n     def _subclasses(self):\n-        return (BigAutoField, SmallAutoField)\n+        from django.db.models.fields import AutoField\n+        subclasses = set()\n+        classes_to_check = [BigAutoField, SmallAutoField]\n+        while classes_to_check:\n+            subclass = classes_to_check.pop()\n+            if subclass not in subclasses:\n+                subclasses.add(subclass)\n+                classes_to_check.extend(subclass.__subclasses__())\n+        return tuple(subclasses)\n     def __instancecheck__(self, instance):\n         return isinstance(instance, self._subclasses) or super().__instancecheck__(instance)\n     def __subclasscheck__(self, subclass):\n", "normalized_occurrence": 1}
