{"model_name_or_path": "agentless_claude", "instance_id": "sympy__sympy-11870", "model_patch": "diff --git a/sympy/functions/elementary/exponential.py b/sympy/functions/elementary/exponential.py\nindex 67a8b07..7a1ca51 100644\n--- a/sympy/functions/elementary/exponential.py\n+++ b/sympy/functions/elementary/exponential.py\n@@ -452,6 +452,19 @@ class exp(ExpBase):\n         from sympy import tanh\n         return (1 + tanh(arg/2))/(1 - tanh(arg/2))\n \n+    def _eval_rewrite_as_trig(self, arg):\n+        \"\"\"Rewrites exponential in terms of sin, cos.\"\"\"\n+        from sympy import sin, cos, I\n+        if arg.has(I):\n+            # Handle expressions with I\n+            # exp(I*x) = cos(x) + I*sin(x)\n+            real_part = arg.as_real_imag()[0]\n+            if arg == I*real_part:\n+                return cos(real_part) + I*sin(real_part)\n+            elif arg == -I*real_part:\n+                return cos(real_part) - I*sin(real_part)\n+        return self\n+\n \n class log(Function):\n     r\"\"\"\n", "occurrence": 1, "normalized_patch": "--- a/sympy/functions/elementary/exponential.py\n+++ b/sympy/functions/elementary/exponential.py\n+    def _eval_rewrite_as_trig(self, arg):\n+        from sympy import sin, cos, I\n+        if arg.has(I):\n+            real_part = arg.as_real_imag()[0]\n+            if arg == I * real_part:\n+                return cos(real_part) + I * sin(real_part)\n+            elif arg == -I * real_part:\n+                return cos(real_part) - I * sin(real_part)\n+        return self", "normalized_occurrence": 1}
