{"model_name_or_path": "agentless", "instance_id": "django__django-16820", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex cffcd20..e5922c2 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -642,10 +642,14 @@ class AlterIndexTogether(AlterTogetherOptionOperation):\n     Input value of index_together must be a set of tuples.\n     \"\"\"\n \n-    option_name = \"index_together\"\n+    option_name = \"indexes\"\n \n     def __init__(self, name, index_together):\n-        super().__init__(name, index_together)\n+        # Convert index_together to indexes format\n+        indexes = [\n+            models.Index(fields=list(fields)) for fields in index_together\n+        ]\n+        super().__init__(name, indexes)\n \n \n class AlterOrderWithRespectTo(ModelOptionOperation):\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex 064ae1a..64e0d02 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -275,9 +275,10 @@ class AlterUniqueTogether(AlterTogetherOptionOperation):\n     def __init__(self, name, unique_together):\n         super().__init__(name, unique_together)\n class AlterIndexTogether(AlterTogetherOptionOperation):\n-    option_name = 'index_together'\n+    option_name = 'indexes'\n     def __init__(self, name, index_together):\n-        super().__init__(name, index_together)\n+        indexes = [models.Index(fields=list(fields)) for fields in index_together]\n+        super().__init__(name, indexes)\n class AlterOrderWithRespectTo(ModelOptionOperation):\n     option_name = 'order_with_respect_to'\n     def __init__(self, name, order_with_respect_to):\n", "normalized_occurrence": 1}
