{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-12471", "model_patch": "diff --git a/sklearn/preprocessing/_encoders.py b/sklearn/preprocessing/_encoders.py\nindex 80fea06..8841b15 100644\n--- a/sklearn/preprocessing/_encoders.py\n+++ b/sklearn/preprocessing/_encoders.py\n@@ -111,6 +111,12 @@ class _BaseEncoder(BaseEstimator, TransformerMixin):\n                     # removed later.\n                     X_mask[:, i] = valid_mask\n                     Xi = Xi.copy()\n+                    # Handle string dtypes to prevent truncation\n+                    if Xi.dtype.kind == 'U' or Xi.dtype.kind == 'S':\n+                        max_str_len = max(len(str(val)) for val in self.categories_[i])\n+                        curr_str_len = Xi.dtype.itemsize // 4 if Xi.dtype.kind == 'U' else Xi.dtype.itemsize\n+                        if max_str_len > curr_str_len:\n+                            Xi = Xi.astype(object)\n                     Xi[~valid_mask] = self.categories_[i][0]\n             _, encoded = _encode(Xi, self.categories_[i], encode=True)\n             X_int[:, i] = encoded\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/preprocessing/_encoders.py b/sklearn/preprocessing/_encoders.py\nindex 8703749..dd41713 100644\n--- a/sklearn/preprocessing/_encoders.py\n+++ b/sklearn/preprocessing/_encoders.py\n@@ -64,6 +64,11 @@ class _BaseEncoder(BaseEstimator, TransformerMixin):\n                 else:\n                     X_mask[:, i] = valid_mask\n                     Xi = Xi.copy()\n+                    if Xi.dtype.kind == 'U' or Xi.dtype.kind == 'S':\n+                        max_str_len = max((len(str(val)) for val in self.categories_[i]))\n+                        curr_str_len = Xi.dtype.itemsize // 4 if Xi.dtype.kind == 'U' else Xi.dtype.itemsize\n+                        if max_str_len > curr_str_len:\n+                            Xi = Xi.astype(object)\n                     Xi[~valid_mask] = self.categories_[i][0]\n             _, encoded = _encode(Xi, self.categories_[i], encode=True)\n             X_int[:, i] = encoded\n", "normalized_occurrence": 1}
