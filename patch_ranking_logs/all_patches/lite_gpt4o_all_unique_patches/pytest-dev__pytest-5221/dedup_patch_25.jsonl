{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-5221", "model_patch": "diff --git a/src/_pytest/terminal.py b/src/_pytest/terminal.py\nindex 400ae0b..767a290 100644\n--- a/src/_pytest/terminal.py\n+++ b/src/_pytest/terminal.py\n@@ -614,6 +614,14 @@ class TerminalReporter(object):\n         )\n         self._write_report_lines_from_hooks(lines)\n \n+    def _write_report_lines_from_hooks(self, lines):\n+        for fixturedef in self.session._fixturemanager._arg2fixturedefs.values():\n+            for fixture in fixturedef:\n+                scope = fixture.scope\n+                source = fixture.func.__code__.co_filename\n+                lineno = fixture.func.__code__.co_firstlineno\n+                lines.append(\"%s -- scope: %s -- %s:%s\" % (fixture.func.__name__, scope, source, lineno))\n+\n         if self.config.getoption(\"collectonly\"):\n             if self.stats.get(\"failed\"):\n                 self._tw.sep(\"!\", \"collection failures\")\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/terminal.py b/src/_pytest/terminal.py\nindex 17fce8c..6708c60 100644\n--- a/src/_pytest/terminal.py\n+++ b/src/_pytest/terminal.py\n@@ -391,6 +391,13 @@ class TerminalReporter(object):\n             self._printcollecteditems(session.items)\n         lines = self.config.hook.pytest_report_collectionfinish(config=self.config, startdir=self.startdir, items=session.items)\n         self._write_report_lines_from_hooks(lines)\n+    def _write_report_lines_from_hooks(self, lines):\n+        for fixturedef in self.session._fixturemanager._arg2fixturedefs.values():\n+            for fixture in fixturedef:\n+                scope = fixture.scope\n+                source = fixture.func.__code__.co_filename\n+                lineno = fixture.func.__code__.co_firstlineno\n+                lines.append('%s -- scope: %s -- %s:%s' % (fixture.func.__name__, scope, source, lineno))\n         if self.config.getoption('collectonly'):\n             if self.stats.get('failed'):\n                 self._tw.sep('!', 'collection failures')\n", "normalized_occurrence": 1}
