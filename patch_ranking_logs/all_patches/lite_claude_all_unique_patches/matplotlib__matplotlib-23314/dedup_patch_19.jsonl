{"model_name_or_path": "agentless_claude", "instance_id": "matplotlib__matplotlib-23314", "model_patch": "diff --git a/lib/mpl_toolkits/mplot3d/axes3d.py b/lib/mpl_toolkits/mplot3d/axes3d.py\nindex 392f89b..aa4adbd 100644\n--- a/lib/mpl_toolkits/mplot3d/axes3d.py\n+++ b/lib/mpl_toolkits/mplot3d/axes3d.py\n@@ -193,6 +193,26 @@ class Axes3D(Axes):\n         self._axis3don = True\n         self.stale = True\n \n+    def set_visible(self, b):\n+        \"\"\"\n+        Set the visibility of the Axes3D instance.\n+        \n+        Parameters\n+        ----------\n+        b : bool\n+            Whether to show (True) or hide (False) the Axes.\n+        \"\"\"\n+        # Call the parent class method\n+        super().set_visible(b)\n+        # Additional handling for 3D-specific elements\n+        self.patch.set_visible(b)\n+        self.stale = True\n+        # Handle visibility of 3D-specific elements\n+        if hasattr(self, '_axis3don'):\n+            for axis in [self.xaxis, self.yaxis, self.zaxis]:\n+                axis.set_visible(b and self._axis3don)\n+                axis.stale = True\n+\n     def convert_zunits(self, z):\n         \"\"\"\n         For artists in an Axes, if the zaxis has units support,\n", "occurrence": 1, "normalized_patch": "--- a/lib/mpl_toolkits/mplot3d/axes3d.py\n+++ b/lib/mpl_toolkits/mplot3d/axes3d.py\n+    def set_visible(self, b):\n+        \"\"\"\n+        Set the visibility of the Axes3D instance.\n+        \n+        Parameters\n+        ----------\n+        b : bool\n+            Whether to show (True) or hide (False) the Axes.\n+        \"\"\"\n+        super().set_visible(b)\n+        self.patch.set_visible(b)\n+        self.stale = True\n+        if hasattr(self, '_axis3don'):\n+            for axis in [self.xaxis, self.yaxis, self.zaxis]:\n+                axis.set_visible(b and self._axis3don)\n+                axis.stale = True\n+", "normalized_occurrence": 1}
