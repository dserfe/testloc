{"model_name_or_path": "agentless", "instance_id": "psf__requests-1142", "model_patch": "diff --git a/requests/models.py b/requests/models.py\nindex 0d4482a..6268e66 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -377,7 +377,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n                     else:\n                         content_type = 'application/x-www-form-urlencoded'\n \n-            self.prepare_content_length(body)\n+            self.prepare_content_length(body, method=self.method)\n \n             # Add content-type if it wasn't explicitly provided.\n             if (content_type) and (not 'content-type' in self.headers):\n@@ -385,9 +385,11 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n \n         self.body = body\n \n-    def prepare_content_length(self, body):\n+    def prepare_content_length(self, body, method=None):\n         self.headers['Content-Length'] = '0'\n-        if hasattr(body, 'seek') and hasattr(body, 'tell'):\n+        if method and method.upper() == 'GET':\n+            del self.headers['Content-Length']\n+        elif hasattr(body, 'seek') and hasattr(body, 'tell'):\n             body.seek(0, 2)\n             self.headers['Content-Length'] = str(body.tell())\n             body.seek(0, 0)\n", "occurrence": 1, "normalized_patch": "diff --git a/requests/models.py b/requests/models.py\nindex 8a031b4..6d7a219 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -204,13 +204,15 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n                     content_type = None\n                 else:\n                     content_type = 'application/x-www-form-urlencoded'\n-            self.prepare_content_length(body)\n+            self.prepare_content_length(body, method=self.method)\n             if content_type and (not 'content-type' in self.headers):\n                 self.headers['Content-Type'] = content_type\n         self.body = body\n-    def prepare_content_length(self, body):\n+    def prepare_content_length(self, body, method=None):\n         self.headers['Content-Length'] = '0'\n-        if hasattr(body, 'seek') and hasattr(body, 'tell'):\n+        if method and method.upper() == 'GET':\n+            del self.headers['Content-Length']\n+        elif hasattr(body, 'seek') and hasattr(body, 'tell'):\n             body.seek(0, 2)\n             self.headers['Content-Length'] = str(body.tell())\n             body.seek(0, 0)\n", "normalized_occurrence": 1}
