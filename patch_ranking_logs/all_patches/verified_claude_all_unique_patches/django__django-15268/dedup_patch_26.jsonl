{"model_name_or_path": "agentless_claude", "instance_id": "django__django-15268", "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex d7bf75e..d7c0a35 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -521,6 +521,17 @@ class AlterTogetherOptionOperation(ModelOptionOperation):\n             )\n         )\n \n+    def reduce(self, operation, app_label):\n+        if (\n+            isinstance(operation, self.__class__) and\n+            self.name.lower() == operation.name.lower() and\n+            self.option_name == operation.option_name\n+        ):\n+            if not self.option_value:\n+                return [operation]  # Skip the \"clear\" operation if followed by a set operation\n+            return [self]  # Keep the first operation if neither is a clear operation\n+        return super().reduce(operation, app_label)\n+\n     def describe(self):\n         return \"Alter %s for %s (%s constraint(s))\" % (self.option_name, self.name, len(self.option_value or ''))\n \n", "occurrence": 1, "normalized_patch": "--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n+    def reduce(self, operation, app_label):\n+        if isinstance(operation, self.__class__) and self.name.lower() == operation.name.lower() and (self.option_name == operation.option_name):\n+            if not self.option_value:\n+                return [operation]\n+            return [self]\n+        return super().reduce(operation, app_label)", "normalized_occurrence": 1}
