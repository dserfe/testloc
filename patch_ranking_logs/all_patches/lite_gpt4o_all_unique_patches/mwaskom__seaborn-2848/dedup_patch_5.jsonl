{"model_name_or_path": "agentless", "instance_id": "mwaskom__seaborn-2848", "model_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 21c0562..2309e2b 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -1560,12 +1560,18 @@ class PairGrid(Grid):\n \n         x = data[x_var]\n         y = data[y_var]\n-        if self._hue_var is None:\n-            hue = None\n+        if \"hue\" in kwargs:\n+            hue = kwargs[\"hue\"]\n+            if isinstance(hue, pd.Series) and not pd.api.types.is_numeric_dtype(hue):\n+                hue = hue.astype(str)\n+            kwargs[\"hue\"] = hue\n         else:\n-            hue = data.get(self._hue_var)\n-\n-        if \"hue\" not in kwargs:\n+            if self._hue_var is None:\n+                hue = None\n+            else:\n+                hue = data.get(self._hue_var)\n+            if hue is not None and not pd.api.types.is_numeric_dtype(hue):\n+                hue = hue.astype(str)\n             kwargs.update({\n                 \"hue\": hue, \"hue_order\": self._hue_order, \"palette\": self._orig_palette,\n             })\n", "occurrence": 1, "normalized_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 0807052..e444d49 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -743,11 +743,18 @@ class PairGrid(Grid):\n             data = data.dropna()\n         x = data[x_var]\n         y = data[y_var]\n-        if self._hue_var is None:\n-            hue = None\n+        if 'hue' in kwargs:\n+            hue = kwargs['hue']\n+            if isinstance(hue, pd.Series) and (not pd.api.types.is_numeric_dtype(hue)):\n+                hue = hue.astype(str)\n+            kwargs['hue'] = hue\n         else:\n-            hue = data.get(self._hue_var)\n-        if 'hue' not in kwargs:\n+            if self._hue_var is None:\n+                hue = None\n+            else:\n+                hue = data.get(self._hue_var)\n+            if hue is not None and (not pd.api.types.is_numeric_dtype(hue)):\n+                hue = hue.astype(str)\n             kwargs.update({'hue': hue, 'hue_order': self._hue_order, 'palette': self._orig_palette})\n         func(x=x, y=y, **kwargs)\n         self._update_legend_data(ax)\n", "normalized_occurrence": 1}
