{"model_name_or_path": "agentless_claude", "instance_id": "scikit-learn__scikit-learn-25570", "model_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex 36a655a..1e4c2e4 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -597,6 +597,10 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n                 # so it can be used during transform for set_output.\n                 self._name_to_fitted_passthrough[name] = func_transformer\n             elif _is_empty_column_selection(column):\n+                # For empty transformers, still get the next fitted transformer\n+                # to maintain consistency with feature names generation\n+                if old != \"passthrough\":\n+                    _ = next(fitted_transformers)\n                 trans = old\n             else:\n                 trans = next(fitted_transformers)\n", "occurrence": 1, "normalized_patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex 03f51bb..717298a 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -160,6 +160,8 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n                 trans = 'passthrough'\n                 self._name_to_fitted_passthrough[name] = func_transformer\n             elif _is_empty_column_selection(column):\n+                if old != 'passthrough':\n+                    _ = next(fitted_transformers)\n                 trans = old\n             else:\n                 trans = next(fitted_transformers)\n", "normalized_occurrence": 1}
