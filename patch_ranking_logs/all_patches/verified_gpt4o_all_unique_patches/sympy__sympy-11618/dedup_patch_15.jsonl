{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-11618", "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex 7c58cbf..7277bde 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -266,8 +266,10 @@ class Point(GeometryEntity):\n         sqrt(x**2 + y**2)\n \n         \"\"\"\n-        return sqrt(sum([(a - b)**2 for a, b in zip(\n-            self.args, p.args if isinstance(p, Point) else p)]))\n+        n = max(len(self.args), len(p.args if isinstance(p, Point) else p))\n+        args1 = list(self.args) + [0] * (n - len(self.args))\n+        args2 = list(p.args if isinstance(p, Point) else p) + [0] * (n - len(p.args if isinstance(p, Point) else p))\n+        return sqrt(sum([(a - b)**2 for a, b in zip(args1, args2)]))\n \n     def taxicab_distance(self, p):\n         \"\"\"The Taxicab Distance from self to point p.\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex ecc6940..b16b846 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -65,7 +65,10 @@ class Point(GeometryEntity):\n     def ambient_dimension(self):\n         return len(self)\n     def distance(self, p):\n-        return sqrt(sum([(a - b) ** 2 for a, b in zip(self.args, p.args if isinstance(p, Point) else p)]))\n+        n = max(len(self.args), len(p.args if isinstance(p, Point) else p))\n+        args1 = list(self.args) + [0] * (n - len(self.args))\n+        args2 = list(p.args if isinstance(p, Point) else p) + [0] * (n - len(p.args if isinstance(p, Point) else p))\n+        return sqrt(sum([(a - b) ** 2 for a, b in zip(args1, args2)]))\n     def taxicab_distance(self, p):\n         p = Point(p)\n         return sum((abs(a - b) for a, b in zip(self.args, p.args)))\n", "normalized_occurrence": 1}
