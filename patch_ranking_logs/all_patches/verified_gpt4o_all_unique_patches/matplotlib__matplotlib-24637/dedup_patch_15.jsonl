{"model_name_or_path": "agentless", "instance_id": "matplotlib__matplotlib-24637", "model_patch": "diff --git a/lib/matplotlib/offsetbox.py b/lib/matplotlib/offsetbox.py\nindex e7f0196..7514934 100644\n--- a/lib/matplotlib/offsetbox.py\n+++ b/lib/matplotlib/offsetbox.py\n@@ -1203,6 +1203,8 @@ class OffsetImage(OffsetBox):\n \n     def draw(self, renderer):\n         # docstring inherited\n+        if self.get_gid():\n+            self.image.set_gid(self.get_gid())\n         self.image.draw(renderer)\n         # bbox_artist(self, renderer, fill=False, props=dict(pad=0.))\n         self.stale = False\n@@ -1453,6 +1455,10 @@ or callable, default: value of *xycoords*\n         if not self.get_visible() or not self._check_xy(renderer):\n             return\n         self.update_positions(renderer)\n+        if self.get_gid():\n+            self.patch.set_gid(self.get_gid())\n+            if self.arrow_patch:\n+                self.arrow_patch.set_gid(self.get_gid())\n         if self.arrow_patch is not None:\n             if self.arrow_patch.figure is None and self.figure is not None:\n                 self.arrow_patch.figure = self.figure\n", "occurrence": 1, "normalized_patch": "diff --git a/lib/matplotlib/offsetbox.py b/lib/matplotlib/offsetbox.py\nindex dd9cb5f..3b48fe1 100644\n--- a/lib/matplotlib/offsetbox.py\n+++ b/lib/matplotlib/offsetbox.py\n@@ -1011,6 +1011,8 @@ class OffsetImage(OffsetBox):\n         return (w, h, 0, 0)\n \n     def draw(self, renderer):\n+        if self.get_gid():\n+            self.image.set_gid(self.get_gid())\n         self.image.draw(renderer)\n         self.stale = False\n \n@@ -1210,6 +1212,10 @@ class AnnotationBbox(martist.Artist, mtext._AnnotationBase):\n         if not self.get_visible() or not self._check_xy(renderer):\n             return\n         self.update_positions(renderer)\n+        if self.get_gid():\n+            self.patch.set_gid(self.get_gid())\n+            if self.arrow_patch:\n+                self.arrow_patch.set_gid(self.get_gid())\n         if self.arrow_patch is not None:\n             if self.arrow_patch.figure is None and self.figure is not None:\n                 self.arrow_patch.figure = self.figure\n", "normalized_occurrence": 1}
