{"model_name_or_path": "agentless", "instance_id": "pytest-dev__pytest-7236", "model_patch": "diff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py\nindex 28ce115..95efc43 100644\n--- a/src/_pytest/unittest.py\n+++ b/src/_pytest/unittest.py\n@@ -221,8 +221,12 @@ class TestCaseFunction(Function):\n             # TestCase instance interacts with the results object, so better to only do it\n             # when absolutely needed\n             if self.config.getoption(\"usepdb\"):\n-                self._explicit_tearDown = self._testcase.tearDown\n-                setattr(self._testcase, \"tearDown\", lambda *args: None)\n+                original_tearDown = self._testcase.tearDown\n+                def tearDown_wrapper(*args, **kwargs):\n+                    if hasattr(self._testcase, '_outcome') and self._testcase._outcome.skipped:\n+                        return\n+                    return original_tearDown(*args, **kwargs)\n+                setattr(self._testcase, \"tearDown\", tearDown_wrapper)\n \n             # we need to update the actual bound method with self.obj, because\n             # wrap_pytest_function_for_tracing replaces self.obj by a wrapper\n", "occurrence": 1, "normalized_patch": "diff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py\nindex 4eb682f..0515574 100644\n--- a/src/_pytest/unittest.py\n+++ b/src/_pytest/unittest.py\n@@ -153,8 +153,12 @@ class TestCaseFunction(Function):\n             self._testcase(self)\n         else:\n             if self.config.getoption('usepdb'):\n-                self._explicit_tearDown = self._testcase.tearDown\n-                setattr(self._testcase, 'tearDown', lambda *args: None)\n+                original_tearDown = self._testcase.tearDown\n+                def tearDown_wrapper(*args, **kwargs):\n+                    if hasattr(self._testcase, '_outcome') and self._testcase._outcome.skipped:\n+                        return\n+                    return original_tearDown(*args, **kwargs)\n+                setattr(self._testcase, 'tearDown', tearDown_wrapper)\n             setattr(self._testcase, self.name, self.obj)\n             try:\n                 self._testcase(result=self)\n", "normalized_occurrence": 1}
