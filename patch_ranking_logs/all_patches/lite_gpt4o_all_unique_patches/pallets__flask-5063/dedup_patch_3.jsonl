{"model_name_or_path": "agentless", "instance_id": "pallets__flask-5063", "model_patch": "diff --git a/src/flask/cli.py b/src/flask/cli.py\nindex 7de3e81..1037103 100644\n--- a/src/flask/cli.py\n+++ b/src/flask/cli.py\n@@ -1025,7 +1025,7 @@ def routes_command(sort: str, all_methods: bool) -> None:\n         max(len(rule.rule) for rule in rules),\n     )\n     widths = [max(len(h), w) for h, w in zip(headers, widths)]\n-    row = \"{{0:<{0}}}  {{1:<{1}}}  {{2:<{2}}}\".format(*widths)\n+    row = \"{{0:<{0}}}  {{1:<{1}}}  {{2:<{2}}}  {{3:<{3}}}\".format(*widths)\n \n     click.echo(row.format(*headers).strip())\n     click.echo(row.format(*(\"-\" * width for width in widths)))\n", "occurrence": 1, "normalized_patch": "diff --git a/src/flask/cli.py b/src/flask/cli.py\nindex fe39489..6ab74b9 100644\n--- a/src/flask/cli.py\n+++ b/src/flask/cli.py\n@@ -591,7 +591,7 @@ def routes_command(sort: str, all_methods: bool) -> None:\n     headers = ('Endpoint', 'Methods', 'Rule')\n     widths = (max((len(rule.endpoint) for rule in rules)), max((len(methods) for methods in rule_methods)), max((len(rule.rule) for rule in rules)))\n     widths = [max(len(h), w) for h, w in zip(headers, widths)]\n-    row = '{{0:<{0}}}  {{1:<{1}}}  {{2:<{2}}}'.format(*widths)\n+    row = '{{0:<{0}}}  {{1:<{1}}}  {{2:<{2}}}  {{3:<{3}}}'.format(*widths)\n     click.echo(row.format(*headers).strip())\n     click.echo(row.format(*('-' * width for width in widths)))\n     for rule, methods in zip(rules, rule_methods):\n", "normalized_occurrence": 1}
