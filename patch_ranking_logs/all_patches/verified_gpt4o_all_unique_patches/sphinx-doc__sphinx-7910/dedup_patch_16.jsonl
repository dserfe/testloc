{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-7910", "model_patch": "diff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py\nindex f48faa1..1f1c0d3 100644\n--- a/sphinx/util/inspect.py\n+++ b/sphinx/util/inspect.py\n@@ -137,7 +137,7 @@ def unwrap_all(obj: Any, *, stop: Callable = None) -> Any:\n             return obj\n         elif ispartial(obj):\n             obj = obj.func\n-        elif inspect.isroutine(obj) and hasattr(obj, '__wrapped__'):\n+        elif (inspect.isfunction(obj) or inspect.ismethod(obj)) and hasattr(obj, '__wrapped__'):\n             obj = obj.__wrapped__\n         elif isclassmethod(obj):\n             obj = obj.__func__\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py\nindex 6e5e6c6..31cc069 100644\n--- a/sphinx/util/inspect.py\n+++ b/sphinx/util/inspect.py\n@@ -75,7 +75,7 @@ def unwrap_all(obj: Any, *, stop: Callable=None) -> Any:\n             return obj\n         elif ispartial(obj):\n             obj = obj.func\n-        elif inspect.isroutine(obj) and hasattr(obj, '__wrapped__'):\n+        elif (inspect.isfunction(obj) or inspect.ismethod(obj)) and hasattr(obj, '__wrapped__'):\n             obj = obj.__wrapped__\n         elif isclassmethod(obj):\n             obj = obj.__func__\n", "normalized_occurrence": 1}
