{"model_name_or_path": "agentless", "instance_id": "django__django-14667", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 8635bf4..7fa6287 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -2104,13 +2104,9 @@ class Query(BaseExpression):\n             field_names.remove('pk')\n             field_names.add(self.get_meta().pk.name)\n \n-        if defer:\n-            # Remove any existing deferred names from the current set before\n-            # setting the new names.\n-            self.deferred_loading = field_names.difference(existing), False\n-        else:\n-            # Replace any existing \"immediate load\" field names.\n-            self.deferred_loading = frozenset(field_names), False\n+        # Clear deferred fields if any immediate loading fields are set.\n+        self.deferred_loading = frozenset(), False\n+        self.deferred_loading = frozenset(field_names), False\n \n     def get_loaded_field_names(self):\n         \"\"\"\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex a07bc15..e9a42b3 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1147,10 +1147,8 @@ class Query(BaseExpression):\n         if 'pk' in field_names:\n             field_names.remove('pk')\n             field_names.add(self.get_meta().pk.name)\n-        if defer:\n-            self.deferred_loading = (field_names.difference(existing), False)\n-        else:\n-            self.deferred_loading = (frozenset(field_names), False)\n+        self.deferred_loading = (frozenset(), False)\n+        self.deferred_loading = (frozenset(field_names), False)\n     def get_loaded_field_names(self):\n         try:\n             return self._loaded_field_names_cache\n", "normalized_occurrence": 1}
