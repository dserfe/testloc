{"model_name_or_path": "agentless", "instance_id": "django__django-15213", "model_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex d5af8cd..f8c3ed4 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -551,7 +551,10 @@ class SQLCompiler:\n                 # (see docstring of get_from_clause() for details).\n                 from_, f_params = self.get_from_clause()\n                 try:\n-                    where, w_params = self.compile(self.where) if self.where is not None else ('', [])\n+                    if self.where is not None and not self.where.children:\n+                        where, w_params = '1=1', []\n+                    else:\n+                        where, w_params = self.compile(self.where) if self.where is not None else ('', [])\n                 except EmptyResultSet:\n                     if self.elide_empty:\n                         raise\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 4c4fd00..0481cac 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -309,7 +309,10 @@ class SQLCompiler:\n                 distinct_fields, distinct_params = self.get_distinct()\n                 from_, f_params = self.get_from_clause()\n                 try:\n-                    where, w_params = self.compile(self.where) if self.where is not None else ('', [])\n+                    if self.where is not None and (not self.where.children):\n+                        where, w_params = ('1=1', [])\n+                    else:\n+                        where, w_params = self.compile(self.where) if self.where is not None else ('', [])\n                 except EmptyResultSet:\n                     if self.elide_empty:\n                         raise\n", "normalized_occurrence": 1}
