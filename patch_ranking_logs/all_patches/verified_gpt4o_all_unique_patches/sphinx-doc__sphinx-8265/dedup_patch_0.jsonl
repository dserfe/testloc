{"model_name_or_path": "agentless", "instance_id": "sphinx-doc__sphinx-8265", "model_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 0e8e503..01dbf28 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1435,6 +1435,7 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type:\n         self.env.app.emit('autodoc-before-process-signature', self.object, False)\n         try:\n             sig = inspect.signature(self.object, bound_method=False,\n+                                    follow_wrapped=True,\n                                     type_aliases=self.env.config.autodoc_type_aliases)\n             return None, None, sig\n         except ValueError:\n@@ -1829,6 +1830,7 @@ class MethodDocumenter(DocstringSignatureMixin, ClassLevelDocumenter):  # type:\n                 if inspect.isstaticmethod(self.object, cls=self.parent, name=self.object_name):\n                     self.env.app.emit('autodoc-before-process-signature', self.object, False)\n                     sig = inspect.signature(self.object, bound_method=False,\n+                                            follow_wrapped=True,\n                                             type_aliases=self.env.config.autodoc_type_aliases)\n                 else:\n                     self.env.app.emit('autodoc-before-process-signature', self.object, True)\n", "occurrence": 1, "normalized_patch": "diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 0ae2e22..35363fa 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1050,7 +1050,7 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):\n                 pass\n         self.env.app.emit('autodoc-before-process-signature', self.object, False)\n         try:\n-            sig = inspect.signature(self.object, bound_method=False, type_aliases=self.env.config.autodoc_type_aliases)\n+            sig = inspect.signature(self.object, bound_method=False, follow_wrapped=True, type_aliases=self.env.config.autodoc_type_aliases)\n             return (None, None, sig)\n         except ValueError:\n             pass\n@@ -1342,7 +1342,7 @@ class MethodDocumenter(DocstringSignatureMixin, ClassLevelDocumenter):\n             else:\n                 if inspect.isstaticmethod(self.object, cls=self.parent, name=self.object_name):\n                     self.env.app.emit('autodoc-before-process-signature', self.object, False)\n-                    sig = inspect.signature(self.object, bound_method=False, type_aliases=self.env.config.autodoc_type_aliases)\n+                    sig = inspect.signature(self.object, bound_method=False, follow_wrapped=True, type_aliases=self.env.config.autodoc_type_aliases)\n                 else:\n                     self.env.app.emit('autodoc-before-process-signature', self.object, True)\n                     sig = inspect.signature(self.object, bound_method=True, follow_wrapped=True, type_aliases=self.env.config.autodoc_type_aliases)\n", "normalized_occurrence": 1}
