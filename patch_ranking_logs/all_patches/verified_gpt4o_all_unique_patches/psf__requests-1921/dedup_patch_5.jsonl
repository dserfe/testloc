{"model_name_or_path": "agentless", "instance_id": "psf__requests-1921", "model_patch": "diff --git a/requests/sessions.py b/requests/sessions.py\nindex 4ec0f7c..3750587 100644\n--- a/requests/sessions.py\n+++ b/requests/sessions.py\n@@ -283,12 +283,16 @@ class Session(SessionRedirectMixin):\n             auth = get_netrc_auth(request.url)\n \n         p = PreparedRequest()\n+        # Remove headers with None values\n+        cleaned_headers = {k: v for k, v in self.headers.items() if v is not None}\n+        cleaned_request_headers = {k: v for k, v in request.headers.items() if v is not None}\n+\n         p.prepare(\n             method=request.method.upper(),\n             url=request.url,\n             files=request.files,\n             data=request.data,\n-            headers=merge_setting(request.headers, self.headers, dict_class=CaseInsensitiveDict),\n+            headers=merge_setting(cleaned_request_headers, cleaned_headers, dict_class=CaseInsensitiveDict),\n             params=merge_setting(request.params, self.params),\n             auth=merge_setting(auth, self.auth),\n             cookies=merged_cookies,\n", "occurrence": 1, "normalized_patch": "diff --git a/requests/sessions.py b/requests/sessions.py\nindex 1467bfc..4ee2f1c 100644\n--- a/requests/sessions.py\n+++ b/requests/sessions.py\n@@ -113,7 +113,9 @@ class Session(SessionRedirectMixin):\n         if self.trust_env and (not auth) and (not self.auth):\n             auth = get_netrc_auth(request.url)\n         p = PreparedRequest()\n-        p.prepare(method=request.method.upper(), url=request.url, files=request.files, data=request.data, headers=merge_setting(request.headers, self.headers, dict_class=CaseInsensitiveDict), params=merge_setting(request.params, self.params), auth=merge_setting(auth, self.auth), cookies=merged_cookies, hooks=merge_hooks(request.hooks, self.hooks))\n+        cleaned_headers = {k: v for k, v in self.headers.items() if v is not None}\n+        cleaned_request_headers = {k: v for k, v in request.headers.items() if v is not None}\n+        p.prepare(method=request.method.upper(), url=request.url, files=request.files, data=request.data, headers=merge_setting(cleaned_request_headers, cleaned_headers, dict_class=CaseInsensitiveDict), params=merge_setting(request.params, self.params), auth=merge_setting(auth, self.auth), cookies=merged_cookies, hooks=merge_hooks(request.hooks, self.hooks))\n         return p\n     def request(self, method, url, params=None, data=None, headers=None, cookies=None, files=None, auth=None, timeout=None, allow_redirects=True, proxies=None, hooks=None, stream=None, verify=None, cert=None):\n         method = builtin_str(method)\n", "normalized_occurrence": 1}
