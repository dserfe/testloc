{"model_name_or_path": "agentless", "instance_id": "django__django-15388", "model_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex dcf3cdd..ee95d62 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -258,9 +258,12 @@ def trigger_reload(filename):\n     sys.exit(3)\n \n \n-def restart_with_reloader():\n+def restart_with_reloader(extra_files=None):\n     new_environ = {**os.environ, DJANGO_AUTORELOAD_ENV: 'true'}\n     args = get_child_arguments()\n+    if extra_files is None:\n+        extra_files = []\n+    extra_files.append(str(settings.BASE_DIR))\n     while True:\n         p = subprocess.run(args, env=new_environ, close_fds=False)\n         if p.returncode != 3:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex 4cc598a..c64dec3 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -158,9 +158,12 @@ def get_child_arguments():\n def trigger_reload(filename):\n     logger.info('%s changed, reloading.', filename)\n     sys.exit(3)\n-def restart_with_reloader():\n+def restart_with_reloader(extra_files=None):\n     new_environ = {**os.environ, DJANGO_AUTORELOAD_ENV: 'true'}\n     args = get_child_arguments()\n+    if extra_files is None:\n+        extra_files = []\n+    extra_files.append(str(settings.BASE_DIR))\n     while True:\n         p = subprocess.run(args, env=new_environ, close_fds=False)\n         if p.returncode != 3:\n", "normalized_occurrence": 1}
