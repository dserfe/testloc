{"model_name_or_path": "agentless", "instance_id": "sympy__sympy-18087", "model_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex 73bbc98..8c49470 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -470,6 +470,9 @@ def trigsimp(expr, **opts):\n     from sympy.simplify.fu import fu\n \n     expr = sympify(expr)\n+    if expr.has(sqrt):\n+        expr = expr.replace(lambda expr: isinstance(expr, sqrt) and expr.args[0].is_Pow and expr.args[0].exp == 2,\n+                            lambda expr: Abs(expr.args[0].base))\n \n     _eval_trigsimp = getattr(expr, '_eval_trigsimp', None)\n     if _eval_trigsimp is not None:\n", "occurrence": 1, "normalized_patch": "diff --git a/sympy/simplify/trigsimp.py b/sympy/simplify/trigsimp.py\nindex fb82ea6..663b050 100644\n--- a/sympy/simplify/trigsimp.py\n+++ b/sympy/simplify/trigsimp.py\n@@ -146,6 +146,8 @@ _trigs = (TrigonometricFunction, HyperbolicFunction)\n def trigsimp(expr, **opts):\n     from sympy.simplify.fu import fu\n     expr = sympify(expr)\n+    if expr.has(sqrt):\n+        expr = expr.replace(lambda expr: isinstance(expr, sqrt) and expr.args[0].is_Pow and (expr.args[0].exp == 2), lambda expr: Abs(expr.args[0].base))\n     _eval_trigsimp = getattr(expr, '_eval_trigsimp', None)\n     if _eval_trigsimp is not None:\n         return _eval_trigsimp(**opts)\n", "normalized_occurrence": 1}
