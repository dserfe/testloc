{"model_name_or_path": "agentless", "instance_id": "django__django-14122", "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 325a36c..b8f7916 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -2029,6 +2029,10 @@ class Query(BaseExpression):\n                     seen_models.add(model)\n \n         group_by = list(self.select)\n+        ordering_fields = set()\n+        if self.order_by:\n+            for expr in self.order_by:\n+                ordering_fields.update(expr.get_group_by_cols())\n         if self.annotation_select:\n             for alias, annotation in self.annotation_select.items():\n                 if not allow_aliases or alias in column_names:\n", "occurrence": 1, "normalized_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 9216162..41a8c00 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1096,6 +1096,10 @@ class Query(BaseExpression):\n                     column_names.update({field.column for field in model._meta.local_concrete_fields})\n                     seen_models.add(model)\n         group_by = list(self.select)\n+        ordering_fields = set()\n+        if self.order_by:\n+            for expr in self.order_by:\n+                ordering_fields.update(expr.get_group_by_cols())\n         if self.annotation_select:\n             for alias, annotation in self.annotation_select.items():\n                 if not allow_aliases or alias in column_names:\n", "normalized_occurrence": 1}
